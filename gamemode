/*
SSGAMES OWNA
WWW.SCRIPTSAMP.FORUMEIROS.COM
VISTE
TODOS GAMEMODES/MAPAS E MUITO MAIS ACHA LA
WELCOME
BPG NA NET BY CAAW E SSGAMES
*/
#include  <        a_samp         >
#include  <        a_npc          >
#include  <        file           >
#include  <        Dini           >
#include  <        float          >
#include  <       foreach         >
#include  <        time           >
#include  <       streamer        >
#include  <     servermoneyGM     >
#include <          utils         >
#include <          DOF2          >
//#include <          Miss          >
#include <      crashdetect         >

#define MAILER_URL      "www.sannews.org/mailer/enviar.php"
#define EMAIL_SERVIDOR  ("contato@gabrielxdjv@gmail.com")

#include <          mailer        >

native gpci( playerid, serial [ ], maxlen );

#pragma tabsize 0
/*#undef LOCAL_SALVAR
#define LOCAL_SALVAR        "Logs/Dados.log"
#undef MAX_REMOVEOBJ
#define MAX_REMOVEOBJ (           1000          )   */
#undef MAX_VEHICLES
#define MAX_VEHICLES  (           2000          )
#undef MAX_PLAYERS
#define MAX_PLAYERS   (           151           )
#undef MAX_OBJECTS
#define MAX_OBJECTS   (           14            )
#define ForPlayers(%1) for(new %1 = 0; %1 < MAX_PLAYERS; %1++) if(IsPlayerConnected(%1) && !IsPlayerNPC(%1))
#define SetPlayerHoldingObject(%1,%2,%3,%4,%5,%6,%7,%8,%9) SetPlayerAttachedObject(%1,MAX_PLAYER_ATTACHED_OBJECTS-1,%2,%3,%4,%5,%6,%7,%8,%9)
#define StopPlayerHoldingObject(%1) RemovePlayerAttachedObject(%1,MAX_PLAYER_ATTACHED_OBJECTS-1)
//#define IsPlayerHoldingObject(%1) IsPlayerAttachedObjectSlotUsed(%1,MAX_PLAYER_ATTACHED_OBJECTS-1)
#define HaveCap(%0) pObject[%0][omodel] ? pObject[%0][omodel] : -1

///////
#define VinnyP(%0,%1) (%0*%1)/100
#define SegXMili(%0) (%0*1000)
#define MinXMili(%0) (%0*60000)
#define SegXMin(%0) (%0/60)
///////

#define Kick(%0) SetTimerEx("Kickar", 200, false, "i", %0)
#define Ban(%0) SetTimerEx("Banir", 200, false, "i", %0)
#define Distancia_Dorgas        25.0

#define MAX_IPSCONNECT             5

//~.*~.*~.*~.*~.*~.*~.*~.*.*~.*~.*[GMX ATIVAÇÃO]~.*~.*~.*~.*~.*~.*~.*~.*~.*~.*~.
new GMXPROIBIDO          =         0, ObjetosPlayGamer;
//~.*~.*~.*~.*~.*~.*~..*~.*~.*~.*~.*~.*~.*~.*~.*~.*~.*~.*~.*~.*~.*~.*~.*~.*~.*~.
#define RESPAWN_TIME            1200000
#define TEMPO_SALVAMENTO        1800000
#define RESPAWN_MORRO           300000
#define TEMPO_PROCTEXT          30000
#define MAX_HOUSES              500
#define MAX_SBIZZES             100
#define MAX_BIZZES              12
new                             MaiorID;
new Equipamentos[MAX_PLAYERS]; // Colete Policia Civil


#define     MAX_FAZENDA     50
#define     DEditar         9838 // adaptar tao seu gamemode
#define     COR 0xCD5C5CFF
//
new Float:RandomCadeia[3][3] =
{
{215.4053,109.1851,999.0156},
{219.4053,109.1851,999.0156},
{227.4053,109.1851,999.0156}
};
//===============================[~~ NATAL Gamer ~~]===========================//
#define PASTA_ARVORES   "/Natal/Arvore%d.ini"
#define MAX_ARVORES   500
//============================================================================//


#define HOLDING(%0) \
    ((newkeys & (%0)) == (%0))

new tpPlayer[][] = {
    "{FF4500}-- Players\n\n",
    "{FFFFFF}Anti-RPG: 60m\n",
    "{FFFFFF}Deathmatch (DM): 40m - 60m\n",
    "{FFFFFF}Drive-By (DB): 40m - 60m\n",
    "{FFFFFF}Spawn-Kill: 40m\n",
    "{FFFFFF}Flood ou Spam: 20m - 30m - 60m\n",
    "{FFFFFF}União GG´s, Famílias ou Sicários: 50m (Se o líder estiver envolvido, /aviso na conta)\n",
    "{FFFFFF}Abuso de BUG: 90m\n",
    "{FFFFFF}ESC Área Neutra: /KICK"
};
new tpAnuncio[][] = {
    "{FF4500}-- Anuncios e Relatorios\n\n",
    "{FFFFFF}Anúncio falho: {FF4500}kick\n",
    "{FFFFFF}Anúncio indevido: {FF4500}kick + 30m + /KICK \n",
    "{FFFFFF}Anúncio burlado: {FF4500}60m + kick\n",
    "{FFFFFF}Anuncio ofensivo: {FF4500}80m + kick + 1 /AVISO + /CALAR\n",
    "{FFFFFF}Relatorio indevido: {FF4500}kick + 30m\n",
    "{FFFFFF}Relatorio ofensivo: {FF4500}60m + kick - 90m + aviso + kick\n",
    "{FFFFFF}Preconceito ou racismo: {FF4500}90m + /AVISO + /KICK - Banimento de 5 Dias "
};
new tpInvasao[][] = {
    "{FF4500}-- Invasões\n\n",
    "{FFFFFF}Civil invadindo HQ: {FF4500}30m + kick\n",
    "{FFFFFF}Policiais em GGs, Máfias ou Famílias s/ procurados: {FF4500}40m + kick\n",
    "{FFFFFF}Policiais com menos de 3 membros participando: {FF4500}40m + kick\n",
    "{FFFFFF}Exército ou Policiais sem /GOV: {FF4500}60m + kick\n",
    "{FFFFFF}Assassinos sem contrato: {FF4500}40m + kick\n",
    "{FFFFFF}GG's ou Terroristas em HQ Policial: {FF4500}40m + kick\n",
    "{FFFFFF}Exército em Máfias e GG's: {FF4500}60m + kick\n",
    "{FFFFFF}Civis, Policias, GGs, Máfias e Famílias em HQ Terrorista: {FF4500}80m + kick"
};
new tpModificacao[][] = {
    "{FF4500}-- Modificações e Cheaters\n\n",
    "{FFFFFF}Mod p/ carro que não traga benefício: {FF4500}/par + kick + motivo\n",
    "{FFFFFF}Mod p/ carro que traga benefício: {FF4500}1 aviso + 100m + kick\n",
    "{FFFFFF}Cheater que beneficie o usuário: {FF4500}Banimento permanente\n",
    "{FFFFFF}Cheater que prejudique o servidor: {FF4500}Banimento serial (Master +)"
};
forward CriarArvore(Float:X,Float:Y,Float:Z);
forward DeletarArvore(arvoreid);
forward CarregarArvores();

new gorro[MAX_PLAYERS];
new Text:ImagemEntrada;
new Arvore[MAX_ARVORES][4];
new ProximaArvore;
new bool:LiberadoTutorial[MAX_PLAYERS] = true;
new Text3D:Id[MAX_ARVORES];
new PrecoAdvogado[MAX_PLAYERS];
new PedidoAdvogado[MAX_PLAYERS];
new Atirou[MAX_PLAYERS];
new
    tomoutiro[ MAX_PLAYERS ],
    tempotiro[ MAX_PLAYERS ],
    armatiro[ MAX_PLAYERS ]
;
// =========================================================================//
new TempoContagem[MAX_PLAYERS],Contagem[MAX_PLAYERS];
new gatemedic[ 4 ];//Yiakin FEZ!!
new temphitman[ MAX_PLAYERS ];
new
    tirohitman[ MAX_PLAYERS ],
    tirotime[ MAX_PLAYERS ]
;
new
    atividadeDate[ MAX_PLAYERS ][ 3 ][ 30 ],
    atividadeTime[ MAX_PLAYERS ][ 3 ],
    atividadeOnline[ MAX_PLAYERS ]
;
new bool:Taser[ MAX_PLAYERS ], bool:ATaser[ MAX_PLAYERS ];
new fAutoC[ MAX_PLAYERS ];
new WeaponsPlayer[ MAX_PLAYERS ][ 13 ];
new BulletsPlayer[ MAX_PLAYERS ][ 13 ];
new BulletTaser[ MAX_PLAYERS ];
new bool:taserlog[ MAX_PLAYERS ];
enum fInfo
{
    Float:ffX,
    Float:ffY,
    Float:ffZ,
    fLevel,
    fValor,
    fFundos,
    fProd,
    fMaxProd,
    fTipo,
    fIcone,
    fAtiva,
    fDono[ 26 ],
    fOwned,
    fDescricao[ 128 ],
    fLucro,
    fReceber,
    fDonoON,
};
new ValorCasas = 0;
new FazendaInfo[ MAX_FAZENDA ][ fInfo ];


enum idcerto{

    Fazendas,
    Empresas,
    sEmpresas,

};
new shotTime[MAX_PLAYERS];
new shot[MAX_PLAYERS];
new bool:BlockAccount[ MAX_PLAYERS ];
new EmpresasIDcerto[MAX_FAZENDA][idcerto];
new numfazendas=0;
new tipodovipcomprado[MAX_PLAYERS];
new tipodialogH,vehteste,ConfigurandoCar[MAX_PLAYERS],casaid[MAX_PLAYERS],tipodialog[MAX_PLAYERS];
//new ContarTexto[1][1000];
new bool:pref[ MAX_PLAYERS ];
#define FZ_SCDS 5
forward HackChecker(playerid);
new Text:TDxiter1;
new Text:TDxiter2;
new Text:TDxiter3;
new PlayerText:TDxiter4[MAX_PLAYERS];
new bool:chatLider[ MAX_PLAYERS ];
new Warnning[ MAX_PLAYERS ];

//============================================================================//
#define CARROS_CONCE            201  //*** Modificando este valor, Trocar o valor na compra
#define CHECKPOINT_CARRO        16

#define MAX_ORGS                37    //TODAS AS ORGS +1

#define MAX_SPIKESTRIPS         200

#define dhitman                 3301
#define FUND                    3000
#define DIALOGID2               1389
#define PRECO_HOSP              1500
#define TEMPO_HOSPITAL          30
#define TEMPO_MEAVALIE          60000
#define DIALOG_MEAVALIE         100
#define PS                      21
#define CHECKPOINT_HOME         12
#define TEAM_HIT                10
#define TEAM_STR                9
#define TEAM_CUN                8
#define TEAM_TAT                7
#define TEAM_BLUE               2
#define KEY_HORN                2
#define TEAM_CYAN               1
#define CHECKPOINT_Nenhum       0
#define DIALOG_SOLTURA          4001
#define DIALOG_PRECISA          4002
#define DIALOG_ADVOGADO         4003

//sniper

new DLlast[MAX_PLAYERS] = 0;
new FPS2[MAX_PLAYERS] = 0;
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= Moedas Verdes =-=-=--=-=-=-=-=-=-=-==-=-=-=
enum mvInfo
{
    QuantidadeMV,
    PessoaMV,
};
new MVInfo[mvInfo];

enum mvInfo2
{
    Codigo[128],
    Email[64],
};
new MVInfo2[mvInfo2];
#define DIALOG_MV                6969
#define DIALOG_MV2               6968
#define DIALOG_MV3               6967
#define DIALOG_MV4               6966
#define DIALOG_MV5               6965
#define DIALOG_MV6               6998

#define DIALOG_LIBERARMV         6964
#define DIALOG_LIBERARMV2        6963
#define DIALOG_LIBERARMV3        6962
#define DIALOG_LIBERARMV4        6961
#define DIALOG_LIBERARMV5        6960
new Fala[128];
new Fala2[128];

#define OpenAccPlayer        "Players/%s.ini"
#define COR_FaTal_DangeR            0x96e1a9FF
#define COR_DESTRO              0x754d48A
#define COR_3DLABEL             0x00FF00FF
#define CORS                    0xFF8000FF
#define CORTR_GUERRA            0xF60000C8
#define CORTR_NINGUEM           0xF6F6F6C8
#define COR_PM                  0x1d4b9bAA
#define COR_BOPE                0x8b8272F6
#define cor_fak                 0x002400AA
#define COR_FARC                0x515151AA
#define COR_Killers             0xb6c661AA
#define COR_StrikerS            0x77654aFF
#define COR_ROTA                0x4a505aAA
#define COR_GPT                 0xFF4500AA
#define COR_EXE                 0x508430F6
#define COR_SAMU                0xE02558AA
#define COR_AZTECAS             0x4875a3AA
#define COR_GI                  0x38b7bdAA
#define COR_PREFEITURA          0x27AE60F6
#define COR_MONK                0xF4A460FF
#define COR_HITMAN              0xA9A9A9F6
#define COR_TRIAD               0xADD8E6AA
#define COR_DRIFT               0x5f4bafAA
#define COR_REP                 0xf8a000F6
#define COR_Reggae              0x375960F6
#define COR_TAXI                0xe2ab22F6
#define COR_FD                  0x4B94D6AA
#define COR_Federal             0xa59432F6
#define COR_PsykO               0xa52f35F6
#define COR_COSA                0xb0ad69AA
#define COR_YAK                 0x1e2854AA
#define COR_GRO                 0x33FF00F6
#define COR_AL                  0x515151F6
#define COR_PRF                 0xa59432FF
#define COR_BALLAS              0x5f3b63AA
#define COR_VAGOS               0xc5c73dAA
#define COR_MONGOLS             0x4a9974AA
#define COR_SONS                0x043046AA
#define COR_HELLS               0x9c1528AA
#define COR_ADMIN               0xff80c0F6
#define BRANCO                  0xFFFFFFFF
#define COLOR_RADIO2            0xCD6CF6F6
#define COLOR_DEPARTAMENTO      0xFF6F6FAA
#define CINZA                   0xAFAFAFAA
#define COR_PF                0xa59432F6
#define CINZA1                  0xB4B5B7FF
#define CINZA2                  0xBFC0C2FF
#define CINZA3                  0xCBCCCEFF
#define CINZA4                  0xD8D8D8FF
#define CINZA5                  0xE3E3E3FF
#define CINZA6                  0xF0F0F0FF
#define COLOR_GRAD1             0xB4B5B7FF
#define COLOR_GRAD2             0xBFC0C2FF
#define COLOR_GRAD3             0xCBCCCEFF
#define COLOR_GRAD4             0xD8D8D8FF
#define COLOR_GRAD5             0xE3E3E3FF
#define COLOR_GRAD6             0xF0F0F0FF
#define COLOR_GREY              0xAFAFAFAA
#define COLOR_GREEN             0x33AA33AA
#define COLOR_RED               0xAA3333AA
#define COLOR_LIGHTRED          0xFF6347FF
#define COLOR_LIGHTBLUE         0x33CCFFAA
#define COLOR_LIGHTGREEN        0x9ACD32AA
#define COLOR_YELLOW            0xFFFF00AA
#define COLOR_YELLOW2           0xF5DEB3AA
#define COLOR_WHITE             0xFFFFFFAA
#define COLOR_FADE1             0xE6E6E6E6
#define COLOR_FADE2             0xC8C8C8C8
#define COLOR_FADE3             0xAAAAAAAA
#define COLOR_FADE4             0x8C8C8C8C
#define COLOR_FADE5             0x6E6E6E6E
#define COLOR_PURPLE            0xC2A2DAAA
#define COLOR_DBLUE             0x2641FEAA
#define COLOR_ALLDEPT           0xFF8282AA
#define COLOR_NEWS              0xFFA500AA
#define COLOR_OOC               0xE0FFFFAA
#define VERMELHO                0xAA3333AA
#define TEAM_HIT_COLOR          0xFFFFFF00
#define TEAM_BLUE_COLOR         0x8D8DFF00
#define COR_HELPER              0x02EA9EAA
#define TEAM_GROVE_COLOR        0x00D900C8
#define TEAM_VAGOS_COLOR        0xFBDC00AA
#define TEAM_BALLAS_COLOR       0x5f3b63AA
#define TEAM_AZTECAS_COLOR      0x2641FEAA
#define TEAM_CYAN_COLOR         0xA92BF6F6
#define TEAM_TAT_COLOR          0xBDCB9200
#define TEAM_CUN_COLOR          0xD900D300
#define TEAM_STR_COLOR          0x01FCFF00
#define TEAM_ROTA_COLOR         0x0033CCFF
#define TEAM_TROTA_COLOR        0x030303AA
#define TEAM_GROTA_COLOR        0x030303C8
#define COLOR_MSG               0x934FF6F6
#define COLORGZ_HAMAS           0xF4005BC8
#define COLOR_TAXISTA           0xF68E00F6
#define COLOR_BLACK             0x000000AA
#define GCOP_COLOR              0x6666FFC8
#define COLORGZ_ALCAIDA         0x685000C8
#define COLORGZ_AER             0x8FBC8FF6
#define COLOR_R                 0x6666CCFF
#define COLORGZ_YAKUZA          0x006699C8
#define COLORGZ_PFII              0x000000C8
#define COLORGZ_LH              0x00E7C6C8
#define COLORGZ_EXE             0x33AA33C8
#define COLOR_EXE               0x33AA33C8
#define COLOR_Snake            0xCCFF99AA
// Territorios
#define TEMPOGivePlayerMoney     240000
#define GranadoPark               4000
#define GranadoCemiterio          3000
#define GranadoSkate              3500
#define GranadaEstacao            7000
#define GranadoCasarao            7000
#define GranadoPosto              4000
#define GranadoShop               3500
#define GasMax                    100
#define RefuelWait                5000
new motor[MAX_PLAYERS];
//>>.*.*.**.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.<<//
new year, month, day, hour, minute, second, AnoGMX, MesGMX, DiaGMX, HoraGMX,
MinutoGMX, SegundoGMX,v[6],shifthour;
forward RandomServerNames();
new SVNAMES[2][55] =
{
"Brasil Play Gamer ® v1.0 [RPG]!",
"Vagas Para Lideres - Sistemas Exclusivos"
};
new bool:SuOff[MAX_PLAYERS] = false;
//>=-=-=-=-=-==-=-=-==-=-=-=>[ Variáveis ]<-=-=-=-=-===-=-=-=-=-==-=-=-==-=-=-=<
new StrPasswrd[MAX_PLAYERS][90];
new Passwrd[90];
new gstring[128];
new strvinny[256];
new strlabel[256];
new DataServidor[32];
//======================[ Anti-Money Hacker]====================================
forward InterpolateCameravinny(playerid, Float:FromX, Float:FromY, Float:FromZ, Float:ToX, Float:ToY, Float:ToZ, time);
forward SetarCameraParaJogador(playerid);
public InterpolateCameravinny(playerid, Float:FromX, Float:FromY, Float:FromZ, Float:ToX, Float:ToY, Float:ToZ, time)
{
    TogglePlayerSpectating(playerid, 1);
    InterpolateCameraLookAt(playerid, Float:FromX, Float:FromY, Float:FromZ, Float:ToX, Float:ToY, Float:ToZ, time, CAMERA_CUT);
}
#define forEx(%0,%1) for(new %1=0;%1<%0;%1++)
#define FERRIS_WHEEL_WAIT_TIME 3000 //Wait Time to enter a Cage
#define FERRIS_WHEEL_SPEED 0.005    //Speed of turn (Standart 0.005)
new Float:gFerrisCageOffsets[10][3]={{0.0699,0.0600,-11.7500},{-6.9100,-0.0899,-9.5000},{11.1600,0.0000,-3.6300},{-11.1600,-0.0399,3.6499},{-6.9100,-0.0899,9.4799},{0.0699,0.0600,11.7500},{6.9599,0.0100,-9.5000},{-11.1600,-0.0399,-3.6300},{11.1600,0.0000,3.6499},{7.0399,-0.0200,9.3600}},
    FerrisWheelObjects[12],
    Float:FerrisWheelAngle=0.0,
    FerrisWheelAlternate=0;
forward RotateFerrisWheel();
public SetarCameraParaJogador(playerid)
{
    TogglePlayerSpectating(playerid, 0);
    SetCameraBehindPlayer(playerid);
}
new portaoadmin;
new TimerOrg[MAX_ORGS];
//************************* Tunar **********************************************
new Menu:Principal;
new Menu:Coresvinny;
new Menu:Rodas;
new Menu:VolumedoCarro;
new Menu:Componentes;
new Menu:PaintJobs;
new VeiculoNeon[MAX_VEHICLES];
new bool:PlayerInBank[ MAX_PLAYERS ];

new TempoCheckGB[MAX_PLAYERS];
new TempoCheckGB2[MAX_PLAYERS];
new IniciouGB[MAX_PLAYERS];
new TerminouGB[MAX_PLAYERS];
new IniciouGB2[MAX_PLAYERS];
new TerminouGB2[MAX_PLAYERS];
new ComecouConversao[MAX_PLAYERS];
new ComecouConversao2[MAX_PLAYERS];
new Espiando[ MAX_PLAYERS ];
new LocalizarTime[MAX_PLAYERS];
new LocalizarAccepted[MAX_PLAYERS];
//>>.*.*.**.*.*.*.*.*.*.*.*.*.*.Concessionária.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*<<//
forward CalcularPrecoCar(playerid);
new spoiler[20][0] = {
{1000},
{1001},
{1002},
{1003},
{1014},
{1015},
{1016},
{1023},
{1058},
{1060},
{1049},
{1050},
{1138},
{1139},
{1146},
{1147},
{1158},
{1162},
{1163},
{1164}
};
new nitro[3][0] = {
    {1008},
    {1009},
    {1010}
};
new fbumper[23][0] = {
    {1117},
    {1152},
    {1153},
    {1155},
    {1157},
    {1160},
    {1165},
    {1167},
    {1169},
    {1170},
    {1171},
    {1172},
    {1173},
    {1174},
    {1175},
    {1179},
    {1181},
    {1182},
    {1185},
    {1188},
    {1189},
    {1192},
    {1193}
};
new rbumper[22][0] = {
    {1140},
    {1141},
    {1148},
    {1149},
    {1150},
    {1151},
    {1154},
    {1156},
    {1159},
    {1161},
    {1166},
    {1168},
    {1176},
    {1177},
    {1178},
    {1180},
    {1183},
    {1184},
    {1186},
    {1187},
    {1190},
    {1191}
};
new exhaust[28][0] = {
    {1018},
    {1019},
    {1020},
    {1021},
    {1022},
    {1028},
    {1029},
    {1037},
    {1043},
    {1044},
    {1045},
    {1046},
    {1059},
    {1064},
    {1065},
    {1066},
    {1089},
    {1092},
    {1104},
    {1105},
    {1113},
    {1114},
    {1126},
    {1127},
    {1129},
    {1132},
    {1135},
    {1136}
};
new bventr[2][0] = {
    {1042},
    {1044}
};
new bventl[2][0] = {
    {1043},
    {1045}
};
new bscoop[4][0] = {
{1004},
{1005},
{1011},
{1012}
};
new rscoop[13][0] = {
    {1006},
    {1032},
    {1033},
    {1035},
    {1038},
    {1053},
    {1054},
    {1055},
    {1061},
    {1067},
    {1068},
    {1088},
    {1091}
};
new lskirt[21][0] = {
    {1007},
    {1026},
    {1031},
    {1036},
    {1039},
    {1042},
    {1047},
    {1048},
    {1056},
    {1057},
    {1069},
    {1070},
    {1090},
    {1093},
    {1106},
    {1108},
    {1118},
    {1119},
    {1133},
    {1122},
    {1134}
};
new rskirt[21][0] = {
    {1017},
    {1027},
    {1030},
    {1040},
    {1041},
    {1051},
    {1052},
    {1062},
    {1063},
    {1071},
    {1072},
    {1094},
    {1095},
    {1099},
    {1101},
    {1102},
    {1107},
    {1120},
    {1121},
    {1124},
    {1137}
};
new hydraulics[1][0] = {
    {1087}
};
new base[1][0] = {
    {1086}
};
new rbbars[2][0] = {
    {1109},
    {1110}
};
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= Câmeras =-=-=---=--=-=-==-=-=-=-=-=-=-=-=-=
new NaCamera[MAX_PLAYERS];
new SenhaSeguranca[500];
new Text:Hidealto2[MAX_PLAYERS],Text:Hidebaixo2[MAX_PLAYERS];
new Text:TextRec[MAX_PLAYERS];
forward SalvarSenhaSeguranca();
public SalvarSenhaSeguranca()
{
    dini_Set("SenhaSeguranca.ini","Senha",SenhaSeguranca);
 return 1;
}
forward CarregarSenhaSeguranca();
public CarregarSenhaSeguranca()
{
    strmid(SenhaSeguranca,dini_Get("SenhaSeguranca.ini","Senha"),0,strlen(dini_Get("SenhaSeguranca.ini","Senha")),255);
 return 1;
}
new fbbars[2][0] = {
    {1115},
    {1116}
};
new wheels[17][0] = {
    {1025},
    {1073},
    {1074},
    {1075},
    {1076},
    {1077},
    {1078},
    {1079},
    {1080},
    {1081},
    {1082},
    {1083},
    {1084},
    {1085},
    {1096},
    {1097},
    {1098}
};
new lights[2][0] = {
{1013},
{1024}
};
enum cInfo
{
    Dono[MAX_PLAYER_NAME],
    Modelo,
    Float:cSpawnX,
    Float:cSpawnY,
    Float:cSpawnZ,
    Float:cAngulo,
    CarroON,
    CorUm,
    CorDois,
    CarroID,
    Trancado,
    mod1,
    mod2,
    mod3,
    mod4,
    mod5,
    mod6,
    mod7,
    mod8,
    mod9,
    mod10,
    mod11,
    mod12,
    mod13,
    mod14,
    mod15,
    mod16,
    mod17,
    paintjob,
    PaintJobOn,
    cDate,
};
new Carro[CARROS_CONCE][cInfo];
new ModeloCarro[MAX_PLAYERS];
new Farois[MAX_PLAYERS];
new Engine[MAX_PLAYERS];
//.*.*.*.*.*.*.*.*.*.*.*.*.*.*[Fim concessionária].*.*.*.*.*.*.*.*.*.*.*.*.*.*//
new mudandonick[MAX_PLAYERS];
new gPlayerTerminal[MAX_PLAYERS];
new panuncio;
new tima[MAX_PLAYERS];
new Text: ____[MAX_PLAYERS];
enum e_votacao
{
    bool:iniciada,
    sim,
    nao,
}
new bool:votou[MAX_PLAYERS];
new votacao[e_votacao];
new Dia, Mes, Ano, Hora, Minuto, Segundo;
new TempoAnGang;
new TempoAnGuerrilheirosIsraelitas;
new TempoAnFARC;
new TempoRecarga;
new TempoAnHitmans;
new TempoAnmerce;
new TempoAnMafia;
new TempoAnTaxi;
new panunciogang;
new panunciomafia;
new TruckMission[MAX_PLAYERS];
new var1[MAX_PLAYERS];
new VagaLimpar[MAX_PLAYERS];
new panuncioGuerrilheirosIsraelitas;
new panunciofamilia;
new panunciofarc;
new panunciotaxi;
new panunciohitmans;
new panuncioMc;
new PFimes[MAX_PLAYERS];
new InviteOffer[MAX_PLAYERS];
new InviteJob[MAX_PLAYERS];
new away[MAX_PLAYERS];
new DonoGamer = 0;
forward CheckPlayGamer();
new VenceuCont = 0;
new InfoCont[3];
//===========================[defines guerra de pontos]=========================
//Snake guerra de pontos
// morro
new Text:TextMorro1;
//new Text:TextMorro2;
new Text:TextMorro3;
new Text:TextMorro4;
new Text:TextMorro5;
new Text:TextMorro6;
/*new Text:TextMorro7;
new Text:TextMorro8;
new Text:TextMorro9;*/
new Text:TextMorro10;
new Text:TextMorro11;
new Text:TextMorro12;
new Text:TextMorro13;
new Text:TextMorro14;
new Text:TextMorro15;
new Text:TextMorro16;
new Text:TextMorro17;
new Text:TextMorro18;
new Text:TextMorro19;
new Text:TextMorro20;
new Text:TextMorro21;
new Text:TextMorro22;
new GZMorro[5];
// Sistema de guerras do morro
forward DefinirCorMorro();
forward CarregarMorro();
forward SalvarMorro();
forward IniciarGuerraMorro();
forward FinalizarGuerraMorro();
forward TempoGuerraP();
enum MorroInfo
{
    Dono,
    Cor,
    Guerra,
};
new Morro[MorroInfo];
new MorroPontos[MAX_ORGS];
new IniciandoGuerra;
new FinalizandoGuerra;
new CheckMTempo;
new MorrPtempo;
new RespawnMorroAuto;
forward ContagemPlayer(playerid);
//=======[Fim defines guerra de pontos & Início Sistema boné e óculos]==========
new bool:PondoOculos[MAX_PLAYERS];
new Oculos[MAX_PLAYERS];
new Text:TOculos;
new Text:TOculos2;

new Float:SkinOffSet[300][7] = {
{0.098771, 0.030772, -0.000335, 85.342658, 84.122947, 4.236968 }, // - 0
{0.100766, 0.028630, -0.003521, 87.936676, 82.110870, 4.236968 }, // - 1
{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968 }, // - 2
{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968 }, // - 3
{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968 },  // - 4
{0.085712, 0.037132, -0.004521, 87.936676, 82.110870, 4.236968 },   // - 5
{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968 },   // - 6
{0.090066, 0.043458, -0.006523, 87.936676, 82.110870, 4.236968 }, // - 7
{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968 },    // - 8
{0.070977, 0.028663, 0.000147, 81.164970, 92.128402, 4.236968 },  // - 9
{0.072317, 0.032179, -0.002934, 86.843269, 84.196006, 4.236968 }, // - 10
{0.072317, 0.035465, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 11
{0.072317, 0.028100, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 12
{0.076569, 0.028100, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 13
{0.091310, 0.049169, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 14
{0.073734, 0.006292, -0.002755, 86.843269, 84.196006, 4.236968 }, // - 15
{0.092845, 0.040331, 0.000183, 86.843269, 82.864280, 4.236968 },  // - 16
{0.088241, 0.030184, -0.000157, 86.843269, 82.864280, 4.236968 }, // - 17
{0.061677, 0.029596, -0.007398, 86.843269, 82.864280, 4.236968 }, // - 18
{0.079911, 0.029596, -0.002934, 86.843269, 82.864280, 4.236968 }, // - 19
{0.095079, 0.029596, -0.001718, 85.261871, 86.296562, 4.236968 }, // - 20
{0.093728, 0.042083, -0.005781, 85.261871, 81.636192, 4.236968 }, // - 21
{0.079585, 0.042083, -0.005781, 85.261871, 81.636192, 4.236968 }, // - 22
{0.090786, 0.041737, -0.005263, 85.261871, 81.636192, 4.236968 }, // - 23
{0.085247, 0.026941, -0.000317, 85.261871, 81.636192, 4.236968 }, // - 24
{0.081646, 0.031448, -0.001113, 89.393653, 81.665985, 4.236968 }, // - 25
{0.083700, 0.033814, -0.001960, 86.436462, 81.665985, 4.236968 }, // - 26
{0.092498, 0.037321, -0.001960, 86.436462, 85.568023, 4.236968 }, // - 27
{0.097068, 0.041360, -0.007881, 86.771400, 85.568023, 4.236968 }, // - 28
{0.083456, 0.050595, 0.001011, 86.771400, 77.201461, 4.236968 },  // - 29
{0.076983, 0.047168, -0.006161, 86.771400, 74.329719, 4.236968 }, // - 30
{0.083798, 0.042184, -0.001869, 86.771400, 83.181861, 4.236968 }, // - 31
{0.053021, -0.000587, -0.001869, 86.771400, 66.859710, 4.236968 },// - 32
{0.034386, 0.013324, -0.001869, 86.771400, 80.314460, 4.236968 }, // - 33
{0.104669, 0.037365, -0.001403, 86.771400, 87.178382, 4.236968 }, // - 34
{0.102659, 0.037465, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 35
{0.107638, 0.037465, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 36
{0.107638, 0.035879, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 37
{0.107638, 0.041106, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 38
{0.080326, 0.035634, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 39
{0.080326, 0.027371, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 40
{0.084617, 0.039613, -0.001620, 86.771400, 93.020492, 4.236968 }, // - 41
{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968 },  // - 42
{0.040075, 0.025445, -0.000974, 86.771400, 92.964149, 4.236968 }, // - 43
{0.077369, 0.028469, -0.000974, 86.771400, 78.435791, 4.236968 }, // - 44
{0.064145, 0.028684, -0.000974, 86.771400, 84.762802, 4.236968 }, // - 45
{0.091993, 0.056559, -0.000974, 86.771400, 84.762802, 4.236968 }, // - 46
{0.084582, 0.051277, -0.005034, 86.771400, 84.762802, 4.236968 }, // - 47
{0.092182, 0.042095, -0.003533, 86.771400, 84.762802, 4.236968 }, // - 48
{0.086866, 0.032203, -0.001021, 86.771400, 84.762802, 4.236968 }, // - 49
{0.099350, 0.009422, -0.005899, 86.771400, 84.762802, 4.236968 }, // - 50
{0.099350, 0.030598, -0.005899, 86.771400, 84.762802, 4.236968 }, // - 51
{0.099350, 0.030598, -0.003575, 86.771400, 84.762802, 4.236968 }, // - 52
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 53
{0.079123, 0.030598, -0.003575, 86.771400, 84.762802, 4.236968 }, // - 54
{0.063159, 0.029641, -0.003575, 86.771400, 84.762802, 4.236968 }, // - 55
{0.070293, 0.029641, -0.000570, 86.771400, 84.762802, 4.236968 }, // - 56
{0.111305, 0.045368, -0.000570, 86.771400, 84.458084, 4.236968 }, // - 57
{0.084901, 0.020965, -0.000570, 86.771400, 79.542411, 4.236968 }, // - 58
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 59
{0.090164, 0.044163, -0.004754, 86.771400, 79.542411, 4.236968 }, // - 60
{0.087151, 0.041447, -0.000885, 90.928329, 89.598678, 0.000000 }, // - 61
{0.094350, 0.041447, 0.005717, 90.928329, 89.598678, 0.000000 },  // - 62
{0.075534, 0.041447, -0.001751, 90.928329, 89.598678, 0.000000 }, // - 63
{0.075534, 0.041447, -0.001751, 90.928329, 89.598678, 0.000000 }, // - 64
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 65
{0.104148, 0.034787, 0.001341, 90.928329, 89.598678, 0.000000 },  // - 66
{0.104148, 0.034787, 0.001341, 90.928329, 89.598678, 0.000000 },  // - 67
{0.087317, 0.039646, -0.004032, 90.928329, 89.598678, 0.000000 }, // - 68
{0.074873, 0.039646, -0.003072, 90.928329, 89.598678, 0.000000 }, // - 69
{0.090391, 0.042364, 0.005494, 90.928329, 89.598678, 0.000000 },  // - 70
{0.090391, 0.022298, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 71
{0.090391, 0.039580, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 72
{0.090391, 0.038224, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 73
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 74
{0.083113, 0.038224, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 75
{0.072957, 0.028956, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 76
{0.069398, 0.039981, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 77
{0.105738, 0.010001, 0.004508, 90.928329, 79.030494, 0.000000 },  // - 78
{0.078264, 0.019668, 0.004508, 90.928329, 79.030494, 0.000000 },  // - 79
{0.087377, 0.022096, -0.001993, 90.928329, 79.030494, 0.000000 }, // - 80
{0.087377, 0.022096, -0.001635, 90.928329, 79.030494, 0.000000 }, // - 81
{0.100623, 0.043063, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 82
{0.092528, 0.027493, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 83
{0.102086, 0.027493, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 84
{0.081954, 0.041672, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 85
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 86
{0.077010, 0.046925, -0.003438, 90.928329, 91.590301, 0.000000 }, // - 87
{0.069952, 0.042635, -0.003438, 90.928329, 86.722587, 0.000000 }, // - 88
{0.093827, 0.019258, -0.003438, 90.928329, 86.722587, 0.000000 }, // - 89
{0.066464, 0.035685, -0.000843, 90.928329, 86.722587, 0.000000 }, // - 90
{0.066464, 0.035685, -0.000843, 90.928329, 86.722587, 0.000000 }, // - 91
{0.066464, 0.038135, -0.000843, 90.928329, 86.722587, 0.000000 }, // - 92
{0.066464, 0.038135, -0.001690, 90.928329, 86.722587, 0.000000 }, // - 93
{0.048124, 0.010598, -0.001690, 90.928329, 86.722587, 0.000000 }, // - 94
{0.084997, 0.006773, -0.001690, 90.928329, 86.722587, 0.000000 }, // - 95
{0.100076, 0.026633, -0.001690, 90.928329, 80.020179, 0.000000 }, // - 96
{0.061686, 0.027537, -0.001690, 90.928329, 80.020179, 0.000000 }, // - 97
{0.098318, 0.053993, -0.001690, 90.928329, 89.237678, 0.000000 }, // - 98
{0.098318, 0.033702, -0.001690, 90.928329, 89.237678, 0.000000 }, // - 99
{0.086149, 0.042526, -0.001690, 90.928329, 77.587478, 0.000000 }, // - 100
{0.081864, 0.030555, -0.001690, 90.928329, 78.145759, 0.000000 }, // - 101
{0.081864, 0.047914, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 102
{0.089607, 0.036717, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 103
{0.079655, 0.042021, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 104
{0.091779, 0.037620, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 105
{0.084179, 0.035251, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 106
{0.089387, 0.040297, -0.006006, 90.928329, 78.145759, 0.000000 }, // - 107
{0.081930, 0.030756, 0.001523, 90.928329, 78.145759, 0.000000 },  // - 108
{0.092857, 0.043070, -0.006084, 90.928329, 85.326652, 0.000000 }, // - 109
{0.092857, 0.043070, -0.006084, 90.928329, 85.326652, 0.000000 }, // - 110
{0.106601, 0.028021, -0.003537, 90.928329, 90.217376, 0.000000 }, // - 111
{0.096335, 0.015873, -0.003537, 90.928329, 90.217376, 0.000000 }, // - 112
{0.105827, 0.046620, -0.001395, 90.928329, 90.217376, 0.000000 }, // - 113
{0.097520, 0.044296, -0.007286, 90.928329, 90.217376, 0.000000 }, // - 114
{0.097408, 0.043470, -0.007286, 90.928329, 90.217376, 0.000000 }, // - 115
{0.092588, 0.049832, -0.007286, 90.928329, 90.217376, 0.000000 }, // - 116
{0.081444, 0.037602, -0.003125, 90.928329, 90.217376, 0.000000 }, // - 117
{0.078678, 0.037602, -0.001816, 90.928329, 90.217376, 0.000000 }, // - 118
{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968 },  // - 119
{0.089214, 0.029291, -0.000784, 90.928329, 84.624763, 0.000000 }, // - 120
{0.086825, 0.033424, -0.000784, 90.928329, 77.233818, 0.000000 }, // - 121
{0.082869, 0.030783, -0.000950, 90.928329, 77.233818, 0.000000 }, // - 122
{0.096117, 0.048957, -0.006245, 90.928329, 87.579650, 0.000000 }, // - 123
{0.103663, 0.040022, 0.000449, 90.928329, 87.579650, 0.000000 },  // - 124
{0.099326, 0.031202, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 125
{0.099326, 0.031132, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 126
{0.099326, 0.039279, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 127
{0.099326, 0.047422, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 128
{0.088817, 0.021210, 0.000730, 90.928329, 87.579650, 0.000000 },  // - 129
{0.025784, 0.028323, 0.000730, 90.928329, 59.394767, 0.000000 },  // - 130
{0.068455, 0.031841, -0.004470, 90.928329, 79.979003, 0.000000 }, // - 131
{0.012930, 0.008392, -0.004470, 90.928329, 72.129173, 0.000000 }, // - 132
{0.102457, 0.032260, -0.003338, 90.928329, 84.534217, 0.000000 }, // - 133
{0.085976, 0.014956, -0.003338, 90.928329, 80.308830, 0.000000 }, // - 134
{0.071574, 0.028186, -0.001588, 90.928329, 80.308830, 0.000000 }, // - 135
{0.085219, 0.016666, -0.000738, 90.928329, 80.308830, 0.000000 }, // - 136
{0.065114, 0.009318, -0.000738, 90.928329, 80.308830, 0.000000 }, // - 137
{0.066890, 0.040024, -0.000738, 90.928329, 87.341934, 0.000000 }, // - 138
{0.072037, 0.036141, -0.000702, 90.928329, 87.341934, 0.000000 }, // - 139
{0.069108, 0.042194, -0.000436, 90.928329, 87.341934, 0.000000 }, // - 140
{0.058717, 0.043547, -0.000436, 90.928329, 87.209770, 0.000000 }, // - 141
{0.104196, 0.039601, -0.005481, 90.928329, 87.209770, 0.000000 }, // - 142
{0.090929, 0.045881, -0.012780, 90.928329, 87.209770, 0.000000 }, // - 143
{0.098291, 0.042464, -0.006952, 90.928329, 83.081665, 0.000000 }, // - 144
{0.080087, 0.030122, 0.000606, 90.928329, 83.081665, 0.000000 },  // - 145
{0.093500, 0.030690, -0.001545, 90.928329, 83.081665, 0.000000 }, // - 146
{0.079566, 0.020138, 0.004838, 90.928329, 73.715591, 0.000000 },  // - 147
{0.073564, 0.028430, -0.000527, 90.928329, 88.295433, 0.000000 }, // - 148
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 149
{0.073564, 0.028430, -0.000527, 90.928329, 88.295433, 0.000000 }, // - 150
{0.083426, 0.032359, -0.005717, 90.928329, 88.295433, 0.000000 }, // - 151
{0.072349, 0.019623, -0.000747, 90.928329, 82.624351, 0.000000 }, // - 152
{0.075065, 0.015351, 0.006545, 90.928329, 71.041442, 0.000000 },  // - 153
{0.062227, 0.029731, -0.004938, 90.928329, 84.602760, 0.000000 }, // - 154
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 155
{0.079936, 0.049000, -0.000304, 90.928329, 82.926010, 0.000000 }, // - 156
{0.067550, 0.035686, -0.000017, 90.928329, 82.926010, 0.000000 }, // - 157
{0.090676, 0.039383, -0.001726, 90.928329, 88.667900, 0.000000 }, // - 158
{0.090676, 0.039383, -0.003532, 90.928329, 88.667900, 0.000000 }, // - 159
{0.098662, 0.017441, -0.001589, 90.928329, 88.667900, 0.000000 }, // - 160
{0.105388, 0.038409, 0.003155, 90.928329, 88.667900, 0.000000 },  // - 161
{0.097415, 0.036904, -0.000525, 90.928329, 88.667900, 0.000000 }, // - 162
{0.088934, 0.023302, -0.004153, 90.928329, 80.393875, 0.000000 }, // - 163
{0.088934, 0.023302, -0.004153, 90.928329, 80.393875, 0.000000 }, // - 164
{0.087018, 0.051364, 0.000484, 90.928329, 94.584838, 0.000000 },  // - 165
{0.087018, 0.051364, 0.000484, 90.928329, 94.584838, 0.000000 },  // - 166
{0.095996, 0.038787, 0.000484, 90.928329, 84.315711, 0.000000 },  // - 167
{0.089094, 0.034001, -0.006451, 90.928329, 84.315711, 0.000000 }, // - 168
{0.075700, 0.028082, -0.006451, 90.928329, 84.315711, 0.000000 }, // - 169
{0.093751, 0.041968, -0.005545, 90.928329, 84.315711, 0.000000 }, // - 170
{0.090124, 0.031055, -0.000505, 90.928329, 84.315711, 0.000000 }, // - 171
{0.066033, 0.032915, -0.002713, 90.928329, 84.315711, 0.000000 }, // - 172
{0.088287, 0.045350, -0.005384, 90.928329, 84.315711, 0.000000 }, // - 173
{0.087750, 0.042129, -0.005384, 90.928329, 84.315711, 0.000000 }, // - 174
{0.092384, 0.039294, -0.005384, 90.928329, 84.315711, 0.000000 }, // - 175
{0.097661, 0.039065, -0.006344, 90.928329, 80.736480, 0.000000 }, // - 176
{0.097114, 0.039641, -0.006692, 90.928329, 80.736480, 0.000000 }, // - 177
{0.069354, 0.039641, -0.000474, 90.928329, 80.736480, 0.000000 }, // - 178
{0.091414, 0.039641, -0.005617, 90.928329, 80.736480, 0.000000 }, // - 179
{0.094914, 0.039641, -0.005617, 90.928329, 80.736480, 0.000000 }, // - 180
{0.117232, 0.033217, -0.001099, 90.928329, 82.396362, 0.000000 }, // - 181
{0.082569, 0.032748, -0.003248, 90.928329, 87.394371, 0.000000 }, // - 182
{0.095527, 0.027237, -0.001960, 90.928329, 86.443649, 0.000000 }, // - 183
{0.095527, 0.040994, -0.006878, 90.928329, 86.443649, 0.000000 }, // - 184
{0.085663, 0.030601, -0.002345, 90.928329, 81.496513, 0.000000 }, // - 185
{0.085663, 0.030601, -0.001015, 90.928329, 81.496513, 0.000000 }, // - 186
{0.076527, 0.027211, 0.008500, 90.928329, 74.401092, 0.000000 },  // - 187
{0.096669, 0.032578, 0.001662, 90.928329, 83.502502, 0.000000 },  // - 188
{0.098753, 0.032129, -0.001659, 90.928329, 90.153724, 0.000000 }, // - 189
{0.092821, 0.035572, -0.001659, 90.928329, 90.153724, 0.000000 }, // - 190
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 191
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 192
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 193
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 194
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 195
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 196
{0.100630, 0.020568, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 197
{0.077905, 0.028523, 0.000000, 89.675476, 89.270309, 0.000000 },  // - 198
{0.099095, 0.022463, 0.000000, 89.675476, 89.270309, 0.000000 },  // - 199
{0.103182, 0.031106, 0.000000, 89.675476, 89.270309, 0.000000 },  // - 200
{0.078426, 0.038546, 0.000000, 89.675476, 89.270309, 0.000000 },  // - 201
{0.101092, 0.035797, -0.002997, 89.675476, 82.081153, 0.000000 }, // - 202
{0.092009, 0.042780, -0.005841, 89.675476, 84.463294, 0.000000 }, // - 203
{0.092009, 0.042780, -0.005841, 89.675476, 84.463294, 0.000000 }, // - 204
{0.092969, 0.027782, -0.002959, 89.675476, 84.463294, 0.000000 }, // - 205
{0.105109, 0.036128, -0.000471, 89.675476, 84.463294, 0.000000 }, // - 206
{0.066892, 0.024410, -0.002792, 89.675476, 84.463294, 0.000000 }, // - 207
{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968 }, // - 208
{0.084046, 0.013608, -0.002792, 89.675476, 81.667831, 0.000000 }, // - 209
{0.084046, 0.013608, -0.001034, 89.675476, 81.667831, 0.000000 }, // - 210
{0.067610, 0.033777, -0.001034, 89.675476, 85.214485, 0.000000 }, // - 211
{0.094159, 0.020717, 0.000715, 89.675476, 85.214485, 0.000000 },  // - 212
{0.098744, 0.036786, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 213
{0.068755, 0.036786, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 214
{0.068755, 0.026863, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 215
{0.068755, 0.026863, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 216
{0.095765, 0.030034, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 217
{0.085486, 0.039427, -0.003311, 89.675476, 85.214485, 0.000000 }, // - 218
{0.068874, 0.027850, -0.001021, 89.675476, 85.214485, 0.000000 }, // - 219
{0.052931, 0.050390, -0.002062, 89.675476, 88.113647, 0.000000 }, // - 220
{0.094479, 0.034432, 0.000875, 89.675476, 83.572830, 0.000000 },  // - 221
{0.094479, 0.034432, -0.000596, 89.675476, 83.572830, 0.000000 }, // - 222
{0.094479, 0.062073, -0.003098, 89.675476, 83.572830, 0.000000 }, // - 223
{0.064458, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000 }, // - 224
{0.064458, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000 }, // - 225
{0.072095, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000 }, // - 226
{0.110619, 0.043037, -0.001466, 89.675476, 86.927627, 0.000000 }, // - 227
{0.099446, 0.050772, -0.001466, 89.675476, 85.103805, 0.000000 }, // - 228
{0.078635, 0.023680, -0.000275, 89.675476, 73.445220, 0.000000 }, // - 229
{0.043357, 0.028726, -0.000275, 89.675476, 73.445220, 0.000000 }, // - 230
{0.092488, 0.049972, -0.000275, 89.675476, 88.981941, 0.000000 }, // - 231
{0.092488, 0.016739, -0.000275, 89.675476, 88.981941, 0.000000 }, // - 232
{0.071677, 0.037055, -0.002878, 89.675476, 88.981941, 0.000000 }, // - 233
{0.082745, 0.004209, -0.002878, 89.675476, 88.981941, 0.000000 }, // - 234
{0.057909, 0.021331, -0.002878, 89.675476, 88.981941, 0.000000 }, // - 235
{0.079016, 0.021331, -0.000419, 89.675476, 77.678733, 0.000000 }, // - 236
{0.074572, 0.021331, -0.000419, 89.675476, 84.527442, 0.000000 }, // - 237
{0.074572, 0.038346, -0.001500, 89.675476, 84.527442, 0.000000 }, // - 238
{0.111645, 0.011549, 0.006237, 89.675476, 84.527442, 0.000000 },  // - 239
{0.090766, 0.044221, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 240
{0.069491, 0.049021, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 241
{0.059706, 0.031911, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 242
{0.065242, 0.031911, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 243
{0.065242, 0.051077, -0.001103, 89.675476, 89.461883, 0.000000 }, // - 244
{0.082393, 0.038233, 0.000410, 89.675476, 89.461883, 0.000000 },  // - 245
{0.079338, 0.044859, -0.002535, 89.675476, 89.461883, 0.000000 }, // - 246
{0.101566, 0.037019, 0.000750, 89.675476, 83.514060, 0.000000 },  // - 247
{0.091887, 0.047776, -0.000040, 89.675476, 83.514060, 0.000000 }, // - 248
{0.089745, 0.044044, 0.004071, 89.675476, 83.514060, 0.000000 },  // - 249
{0.094214, 0.044044, -0.007274, 89.675476, 83.514060, 0.000000 }, // - 250
{0.072282, 0.044044, -0.001468, 89.675476, 90.444763, 0.000000 }, // - 251
{0.095764, 0.034224, -0.000264, 89.675476, 82.959915, 0.000000 }, // - 252
{0.087454, 0.026208, -0.000264, 89.675476, 82.959915, 0.000000 }, // - 253
{0.099198, 0.037362, -0.000264, 89.675476, 82.959915, 0.000000 }, // - 254
{0.070845, 0.019943, 0.003505, 89.675476, 73.529716, 0.000000 },  // - 255
{0.065373, 0.033656, -0.001141, 89.675476, 83.002151, 0.000000 }, // - 256
{0.070077, 0.033656, -0.001141, 89.675476, 83.002151, 0.000000 }, // - 257
{0.089536, 0.041904, 0.000715, 89.675476, 83.002151, 0.000000 },  // - 258
{0.084822, 0.041904, 0.000715, 89.675476, 83.002151, 0.000000 },  // - 259
{0.093009, 0.031491, -0.001568, 89.675476, 83.002151, 0.000000 }, // - 260
{0.093009, 0.015023, -0.001477, 89.675476, 83.002151, 0.000000 }, // - 261
{0.076580, 0.039782, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 262
{0.076580, 0.028967, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 263
{0.075424, 0.043059, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 264
{0.089655, 0.021726, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 265
{0.096792, 0.014114, -0.003062, 89.675476, 85.166038, 0.000000 }, // - 266
{0.094886, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000 }, // - 267
{0.094886, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000 }, // - 268
{0.102252, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000 }, // - 269
{0.102252, 0.024989, 0.000529, 89.675476, 85.166038, 0.000000 },  // - 270
{0.096134, 0.025462, 0.000529, 89.675476, 79.225112, 0.000000 },  // - 271
{0.099226, 0.032663, 0.000529, 89.675476, 79.225112, 0.000000 },  // - 272
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 273
{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000 }, // - 274
{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000 }, // - 275
{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000 }, // - 276
{0.082718, 0.062596, -0.000201, 89.675476, 88.636062, 0.000000 }, // - 277
{0.082718, 0.062596, -0.000201, 89.675476, 88.636062, 0.000000 }, // - 278
{0.087652, 0.059379, -0.000201, 89.675476, 88.636062, 0.000000 }, // - 279
{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 280
{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 281
{0.090877, 0.026643, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 282
{0.090877, 0.026643, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 283
{0.090877, 0.053674, 0.009879, 89.675476, 88.636062, 0.000000 },  // - 284
{0.104320, 0.041487, 0.008021, 89.675476, 88.636062, 0.000000 },  // - 285
{0.087062, 0.021779, -0.003307, 89.675476, 88.636062, 0.000000 }, // - 286
{0.073173, 0.048856, 0.005337, 89.675476, 92.561180, 0.000000 },  // - 287
{0.090294, 0.027592, -0.003497, 89.675476, 92.561180, 0.000000 }, // - 288
{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968 },  // - 289
{0.086562, 0.042698, -0.000612, 89.675476, 92.561180, 0.000000 }, // - 290
{0.096768, 0.039233, -0.000612, 89.675476, 83.550270, 0.000000 }, // - 291
{0.079939, 0.020731, -0.005162, 89.675476, 83.550270, 0.000000 }, // - 292
{0.097107, 0.027826, -0.005162, 89.675476, 88.505996, 0.000000 }, // - 293
{0.097107, 0.037636, 0.000618, 89.675476, 88.505996, 0.000000 },  // - 294
{0.079985, 0.035006, -0.000826, 89.675476, 87.533462, 0.000000 }, // - 295
{0.088445, 0.024209, -0.002076, 89.675476, 73.285072, 0.000000 }, // - 296
{0.094039, 0.035411, 0.000490, 89.675476, 84.277572, 0.000000 },  // - 297
{0.099553, 0.024683, -0.002919, 89.675476, 84.277572, 0.000000 }, // - 298
{0.099553, 0.044356, -0.000285, 89.675476, 84.277572, 0.000000 }  // - 299
};
enum {
CommonRed = 19006,
CommonOrange,
CommonGreen,
CommonBlue,
CommonPurple,
CommonEspiral,
CommonBlack,
CommonEyes,
CommonXadrex,
CommonTransparent,
CommonXRayVision,
SquareFormatYellow,
SquareFormatOrange,
SquareFormatRed,
SquareFormatBlue,
SquareFormatGreen,
RayBanGray,
RayBanBlue,
RayBanPurple,
RayBanPink,
RayBanRed,
RayBanOrange,
RayBanYellow,
RayBanGreen,
CircularNormal,
CircularYellow,
CircularRed,
CircularBlack,
CircularXadrex,
CircularThunders,
};
//============================[bone]===========================================|
static invalidskins[] = {1,2,3,4,5,7,12,15,17,18,21,23,26,27,30,32,33,34,40,41,50,51,60,64,73,76,85,98,103,106,114,118,136,142,148,152,154,157,160,166,172,197,204,207,214,241,245,248,252,254,259,268,269,272,276,277,278,282,283,284,286,287,288,292};
static Float: SkinBone[299][6] = {
{0.135928, 0.002891, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 0
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 1
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 2
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 3
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 4
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 5
{0.155785, 0.005998, -0.014326, 0.000000, 0.000000, 347.188201},//Skin - 6
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 7
{0.131067, -0.013737, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 8
{0.118922, -0.015322, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 9
{0.125779, -0.001459, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 10
{0.129249, -0.014101, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 11
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 12
{0.161076, -0.015624, -0.006768, 0.000000, 0.000000, 347.188201},//Skin - 13
{0.112204, -0.023196, -0.006768, 0.000000, 0.000000, 347.188201},//Skin - 14
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 15
{0.150166, -0.008718, -0.006768, 0.000000, 0.000000, 347.188201},//Skin - 16
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 17
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 18
{0.153609, -0.003207, -0.007717, 0.000000, 0.000000, 357.608825},//Skin - 19
{0.143831, 0.001813, -0.010588, 0.000000, 0.000000, 357.608825}, //Skin - 20
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 21
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 22
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   //Skin - 23
{0.127352, 0.009877, -0.006845, 0.726156, 359.666778, 348.825012},//Skin - 24
{0.124666, -0.029373, -0.006845, 0.726156, 359.666778, 329.940704},//Skin - 25
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 26
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 27
{0.128768, 0.041474, -0.007667, 0.726156, 359.666778, 355.429199}, //Skin - 28
{0.166457, -0.006228, -0.012669, 0.726156, 359.666778, 354.612152},//Skin - 29
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 30
{0.096077, -0.023233, -0.009101, 0.726156, 359.666778, 343.094055},//Skin - 31
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 32
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 33
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 34
{0.155565, 0.014400, -0.009101, 0.726156, 359.666778, 6.131487},   //Skin - 35
{0.156485, 0.013641, -0.009101, 0.726156, 359.666778, 6.131487},   //Skin - 36
{0.144815, 0.013641, -0.009374, 0.726156, 359.666778, 350.562103}, //Skin - 37
{0.113347, -0.006682, -0.009374, 0.726156, 359.666778, 350.562103},//Skin - 38
{0.147231, -0.014448, -0.004786, 0.726156, 359.666778, 357.303253},//Skin - 39
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 40
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 41
{0.082446, 0.004202, -0.004786, 0.726156, 359.666778, 357.303253}, //Skin - 42
{0.104901, 0.004013, -0.004786, 0.726156, 359.666778, 342.983184}, //Skin - 43
{0.116172, -0.001954, -0.004786, 0.726156, 359.666778, 357.100677},//Skin - 44
{0.153321, 0.025744, -0.008666, 0.726156, 359.666778, 10.704365},  //Skin - 45
{0.160556, 0.007781, -0.010438, 0.726156, 359.666778, 0.991972},   //Skin - 46
{0.179010, -0.035613, -0.010438, 0.726156, 359.666778, 347.956573},//Skin - 47
{0.123363, 0.008694, -0.010438, 0.726156, 359.666778, 347.956573}, //Skin - 48
{0.167061, -0.037899, -0.010438, 0.726156, 359.666778, 347.775817},//Skin - 49
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 50
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 51
{0.129040, 0.016069, -0.010438, 0.726156, 359.666778, 347.775817}, //Skin - 52
{0.129040, 0.016069, -0.006084, 0.726156, 359.666778, 347.775817}, //Skin - 53
{0.137743, -0.016369, -0.011731, 0.726156, 359.666778, 355.812011},//Skin - 54
{0.137743, -0.016369, -0.011731, 0.726156, 359.666778, 355.812011},//Skin - 55
{0.174539, -0.000662, -0.007289, 0.726156, 359.666778, 352.847045},//Skin - 56
{0.109382, -0.002955, -0.007289, 0.726156, 359.666778, 352.847045},//Skin - 57
{0.152276, -0.029331, -0.008357, 0.726156, 359.666778, 332.070648},//Skin - 58
{0.129599, -0.019172, -0.012204, 0.726156, 359.666778, 332.070648},//Skin - 59
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 60
{0.130350, 0.000897, -0.000747, 0.726156, 359.666778, 332.070648}, //Skin - 61
{0.150659, -0.035485, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 62
{0.119340, -0.006483, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 63
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 64
{0.133055, -0.000092, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 65
{0.129061, -0.006499, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 66
{0.127292, 0.010318, -0.006299, 0.726156, 359.666778, 341.617431}, //Skin - 67
{0.138791, -0.025311, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 68
{0.148132, 0.003970, -0.002304, 0.726156, 359.666778, 340.120025}, //Skin - 69
{0.129753, 0.006469, -0.006376, 0.726156, 359.666778, 354.029815}, //Skin - 70
{0.125663, 0.015428, -0.006376, 0.726156, 359.666778, 354.029815}, //Skin - 71
{0.125663, 0.015428, -0.009030, 0.726156, 359.666778, 354.029815}, //Skin - 72
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 73
{0.135729, -0.018656, -0.013554, 0.000000, 0.000000, 337.893737},  //Skin - 74
{0.141888, -0.042810, -0.006206, 0.000000, 0.000000, 337.893737},  //Skin - 75
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 76
{0.124348, -0.017813, -0.006206, 0.000000, 0.000000, 346.786865},  //Skin - 77
{0.124348, 0.000583, -0.006206, 0.000000, 0.000000, 346.786865},   //Skin - 78
{0.102654, -0.010906, -0.006206, 0.000000, 0.000000, 346.786865},  //Skin - 79
{0.102654, -0.010906, -0.006206, 0.000000, 0.000000, 346.786865},  //Skin - 81
{0.167928, 0.031601, -0.006206, 0.000000, 0.000000, 17.955888},    //Skin - 82
{0.159998, 0.023540, -0.006206, 0.000000, 0.000000, 17.955888},    //Skin - 83
{0.169630, 0.019315, -0.006206, 0.000000, 0.000000, 17.955888},    //Skin - 84
{0.163052, -0.039735, -0.006206, 0.000000, 0.000000, 341.169891},  //Skin - 85
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 86
{0.144811, -0.007521, -0.014207, 0.000000, 0.000000, 341.169891},  //Skin - 87
{0.129932, -0.007521, -0.007289, 0.000000, 0.000000, 341.169891},  //Skin - 88
{0.151147, -0.038608, -0.009597, 0.000000, 0.000000, 343.694549},  //Skin - 89
{0.147416, -0.031632, -0.009597, 0.000000, 0.000000, 343.694549},  //Skin - 90
{0.157728, -0.009677, -0.009597, 0.000000, 0.000000, 0.934848},    //Skin - 91
{0.136577, -0.015592, -0.009597, 0.000000, 0.000000, 341.013824},  //Skin - 92
{0.143821, 0.000631, -0.008385, 0.000000, 0.000000, 358.808868},   //Skin - 93
{0.100521, 0.003151, -0.007624, 0.000000, 0.000000, 358.808868},   //Skin - 94
{0.122833, -0.006031, -0.007624, 0.000000, 0.000000, 358.808868},  //Skin - 95
{0.145296, 0.003959, -0.007624, 0.000000, 0.000000, 358.808868},   //Skin - 96
{0.141658, 0.016474, -0.007624, 0.000000, 0.000000, 9.683902},     //Skin - 97
{0.145276, -0.002846, -0.007624, 0.000000, 0.000000, 340.239593},  //Skin - 98
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 99
{0.161745, -0.010244, -0.007624, 0.000000, 0.000000, 351.499267}, //Skin - 100
{0.151006, -0.030994, -0.005366, 0.000000, 0.000000, 340.428894}, //Skin - 101
{0.147111, 0.003794, -0.012433, 0.000000, 0.000000, 358.069244},  //Skin - 102
{0.154213, -0.052348, -0.003511, 356.299316, 0.000000, 336.751647},//Skin - 103
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 104
{0.153814, -0.039614, -0.006756, 356.299316, 0.000000, 336.930084},//Skin - 105
{0.153638, -0.039614, -0.013630, 356.299316, 0.000000, 336.930084},//Skin - 106
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 107
{0.140473, -0.026201, -0.000469, 0.390689, 355.405181, 335.554260},//Skin - 108
{0.140904, -0.007227, -0.008114, 0.390689, 355.405181, 335.554260},//Skin - 109
{0.140904, -0.007227, -0.008114, 0.390689, 355.405181, 335.554260},//Skin - 110
{0.134860, 0.001485, -0.010145, 0.390689, 358.632415, 347.730010},//Skin - 111
{0.124823, 0.001485, -0.009402, 0.390689, 358.632415, 347.730010},//Skin - 112
{0.157999, -0.012039, -0.006082, 0.390689, 358.632415, 347.730010},//Skin - 113
{0.144906, -0.005139, -0.009654, 0.390689, 358.632415, 336.830108},//Skin - 114
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 116
{0.152829, -0.009735, -0.009654, 0.390689, 358.632415, 336.830108},//Skin - 117
{0.113804, 0.009252, -0.009654, 0.390689, 358.632415, 345.244384},//Skin - 118
{0.113804, 0.009252, -0.009654, 0.390689, 358.632415, 345.244384},//Skin - 119
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   //Skin -120
{0.154275, -0.037484, -0.009654, 0.390689, 358.632415, 337.676666},//Skin - 121
{0.155674, -0.015613, -0.004339, 0.390689, 358.632415, 350.571228},//Skin - 122
{0.136433, -0.019181, -0.004339, 0.390689, 358.632415, 340.261840},//Skin - 123
{0.163258, -0.032386, -0.013128, 0.390689, 358.632415, 340.261840},//Skin - 124
{0.153242, -0.029651, -0.002434, 0.390689, 358.632415, 333.367614},//Skin - 125
{0.127978, -0.001961, -0.008867, 0.390689, 358.632415, 347.279052},//Skin - 126
{0.160856, -0.025356, -0.004428, 0.390689, 358.632415, 347.279052},//Skin - 127
{0.150266, -0.009032, -0.006781, 0.390689, 358.632415, 347.223754},//Skin - 128
{0.158060, 0.022907, -0.006781, 0.390689, 358.632415, 349.378875},//Skin - 129
{0.111739, 0.012673, -0.006781, 0.390689, 358.632415, 349.378875},//Skin - 130
{0.091638, -0.011600, -0.008686, 0.390689, 358.632415, 336.674468},//Skin - 131
{0.125788, 0.000635, -0.005915, 0.390689, 358.632415, 343.007751},//Skin - 132
{0.031324, -0.014154, -0.005915, 0.390689, 358.632415, 343.007751},//Skin - 133
{0.142321, 0.015417, -0.005915, 0.243191, 358.632415, 350.329559},//Skin - 133
{0.128780, -0.030750, 0.006687, 173.184967, 358.632415, 27.422966},//Skin - 134
{0.115882, -0.004931, -0.003807, 358.837646, 358.632415, 346.206237},//Skin - 135
{0.127531, -0.008916, -0.003807, 358.837646, 358.632415, 346.206237},//Skin - 136
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 137
{0.148992, -0.017748, -0.006509, 358.837646, 358.632415, 350.742156},//Skin - 138
{0.148992, -0.017748, -0.006509, 358.837646, 358.632415, 350.742156},//Skin - 139
{0.147315, 0.001708, -0.006509, 358.837646, 358.632415, 354.390045},//Skin - 140
{0.144315, -0.013571, -0.006509, 358.837646, 358.632415, 354.390045},//Skin - 141
{0.144315, -0.002729, -0.010357, 358.837646, 358.632415, 354.390045},//Skin - 142
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 143
{0.177516, -0.070868, -0.009114, 358.837646, 358.632415, 331.679321},//Skin - 144
{0.139578, -0.008750, -0.004405, 358.837646, 358.632415, 343.319335},//Skin - 145
{0.139578, -0.014406, -0.004405, 358.837646, 358.632415, 343.319335},//Skin - 146
{0.115592, -0.010754, -0.004405, 358.837646, 358.632415, 343.319335},//Skin - 147
{0.150735, -0.000459, -0.004405, 358.837646, 358.632415, 9.362450},//Skin - 148
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 149
{0.149485, -0.008709, -0.006168, 358.837646, 358.632415, 2.276566},//Skin - 150
{0.168162, -0.009708, -0.012160, 359.504821, 4.442328, 355.348114},//Skin - 151
{0.156369, -0.024521, -0.012160, 359.504821, 0.415596, 355.348114},//Skin - 152
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 153
{0.119297, -0.016080, -0.010776, 359.504821, 0.415596, 341.522827},//Skin - 154
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 155
{0.172295, -0.065549, -0.007187, 359.504821, 0.415596, 336.175567},//Skin - 156
{0.126340, -0.030764, -0.007187, 359.504821, 0.415596, 336.175567},//Skin - 157
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 158
{0.154280, 0.002166, -0.010436, 359.504821, 0.415596, 357.792144},//Skin - 159
{0.121469, -0.007383, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 160
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 161
{0.139495, -0.007383, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 162
{0.113212, -0.005302, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 163
{0.120208, 0.003533, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 164
{0.135111, 0.005091, -0.006407, 359.504821, 0.415596, 352.954559},//Skin - 165
{0.122118, 0.005091, -0.006407, 359.504821, 0.415596, 352.954559},//Skin - 166
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 167
{0.125229, 0.005091, -0.013084, 359.504821, 0.415596, 352.954559},//Skin - 168
{0.153451, -0.018119, -0.013276, 359.504821, 0.415596, 358.219451},//Skin - 169
{0.141395, -0.009131, -0.013276, 359.504821, 0.415596, 347.866027},//Skin - 170
{0.157631, -0.028753, -0.006450, 359.504821, 0.415596, 339.935516},//Skin - 171
{0.152687, -0.027057, -0.007731, 359.504821, 0.415596, 344.054809},//Skin - 172
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 173
{0.165146, 0.015393, -0.007731, 359.504821, 0.415596, 344.001678},//Skin - 174
{0.162788, -0.019696, -0.007731, 359.504821, 0.415596, 344.001678},//Skin - 175
{0.157728, -0.027188, -0.012891, 359.504821, 0.415596, 345.804748},//Skin - 176
{0.187507, 0.010472, -0.012891, 359.504821, 0.415596, 12.315887},//Skin - 177
{0.153901, -0.027720, -0.007884, 359.504821, 0.415596, 344.553527},//Skin - 178
{0.137445, -0.009757, -0.012987, 359.504821, 0.415596, 344.553527},//Skin - 179
{0.173041, -0.006323, -0.012987, 359.504821, 0.415596, 3.267552},//Skin - 180
{0.143467, 0.016897, -0.007831, 359.504821, 0.415596, 349.504974},//Skin - 181
{0.114480, 0.006202, -0.007831, 359.504821, 0.415596, 349.504974},//Skin - 182
{0.114480, 0.008813, -0.007831, 359.504821, 0.415596, 349.504974},//Skin - 183
{0.128122, -0.012152, -0.013144, 359.504821, 0.415596, 336.326538},//Skin - 184
{0.156171, 0.007268, -0.013144, 359.504821, 0.415596, 10.805211},//Skin - 185
{0.156409, -0.034861, -0.007927, 359.504821, 0.415596, 336.978668},//Skin - 186
{0.118034, -0.024105, -0.002947, 359.504821, 0.415596, 336.978668},//Skin - 187
{0.128686, -0.029632, -0.002947, 358.201873, 0.415596, 329.325042},//Skin - 188
{0.172639, -0.026749, -0.012705, 358.201873, 0.415596, 349.092590},//Skin - 189
{0.180897, -0.026749, -0.007224, 358.201873, 0.415596, 349.092590},//Skin - 190
{0.180897, -0.026749, -0.007224, 358.201873, 0.415596, 349.092590},//Skin - 191
{0.178725, -0.010278, -0.007224, 358.201873, 0.415596, 354.053405},//Skin - 192
{0.172020, -0.010278, -0.010734, 358.201873, 0.415596, 354.053405},//Skin - 193
{0.172020, -0.010278, -0.010734, 358.201873, 0.415596, 354.053405},//Skin - 194
{0.176089, -0.032526, -0.005110, 358.201873, 0.415596, 341.814422},//Skin - 195
{0.118042, 0.007002, -0.005110, 358.201873, 0.415596, 341.814422},//Skin - 196
{0.143840, -0.042712, -0.007556, 358.201873, 0.415596, 341.814422},//Skin - 197
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 198
{0.148060, -0.032384, -0.009754, 358.201873, 0.415596, 333.484924},//Skin - 199
{0.148060, -0.032384, -0.009754, 358.201873, 0.415596, 333.484924},//Skin - 200
{0.140799, 0.025145, -0.009754, 358.201873, 0.415596, 5.040688},//Skin - 201
{0.140799, 0.015851, -0.009754, 358.201873, 0.415596, 349.796478},//Skin - 202
{0.140799, -0.004372, -0.013685, 358.201873, 0.415596, 349.796478},//Skin - 203
{0.154274, 0.006245, -0.013685, 358.201873, 0.415596, 2.035465},//Skin - 204
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 205
{0.154274, 0.016669, -0.013685, 358.201873, 0.415596, 2.035465},//Skin - 206
{0.106604, 0.004805, -0.011840, 358.201873, 0.415596, 2.035465},//Skin - 207
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 208
{0.148378, -0.003807, -0.011840, 358.201873, 0.415596, 2.035465},//Skin - 209
{0.113854, 0.001969, -0.011840, 358.201873, 0.415596, 343.826263},//Skin - 210
{0.149539, -0.028623, -0.009621, 358.201873, 0.415596, 331.587280},//Skin - 211
{0.104024, -0.014549, -0.009621, 358.201873, 0.415596, 331.587280},//Skin - 212
{0.145820, -0.029160, -0.009621, 358.201873, 0.415596, 331.587280},//Skin - 213
{0.148646, -0.008515, -0.009621, 358.201873, 0.415596, 1.360260},//Skin - 214
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 215
{0.148646, -0.005935, -0.004058, 358.201873, 0.415596, 1.360260},//Skin - 216
{0.148646, -0.015611, -0.004058, 358.201873, 0.415596, 340.374938},//Skin - 217
{0.133952, -0.030138, -0.009880, 358.201873, 0.415596, 340.374938},//Skin - 218
{0.140503, -0.033425, -0.005693, 358.201873, 0.415596, 340.374938},//Skin - 219
{0.114608, 0.009020, -0.009135, 358.201873, 0.415596, 352.932006},//Skin - 220
{0.186516, -0.044762, -0.009135, 358.201873, 0.415596, 344.217132},//Skin - 221
{0.186516, -0.044762, -0.009135, 358.201873, 0.415596, 344.217132},//Skin - 222
{0.179908, -0.010779, -0.009135, 358.201873, 0.415596, 344.217132},//Skin - 223
{0.156689, -0.015437, -0.009135, 358.201873, 0.415596, 352.741638},//Skin - 224
{0.156689, -0.015437, -0.009135, 358.201873, 0.415596, 352.741638},//Skin - 225
{0.134990, -0.034685, -0.009135, 358.201873, 0.415596, 340.812927},//Skin - 226
{0.151760, 0.002680, -0.009135, 358.201873, 0.415596, 340.812927},//Skin - 227
{0.167410, -0.028664, -0.009135, 358.201873, 0.415596, 340.250427},//Skin - 228
{0.127699, -0.015571, -0.006103, 358.201873, 0.415596, 347.232238},//Skin - 229
{0.100555, -0.007753, -0.006103, 358.201873, 0.415596, 347.232238},//Skin - 230
{0.126940, 0.016886, -0.006103, 358.201873, 0.415596, 347.232238},//Skin - 231
{0.132949, -0.017515, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 232
{0.146124, -0.008425, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 233
{0.125714, -0.021018, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 234
{0.084982, -0.009809, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 235
{0.114669, -0.005190, -0.008594, 358.201873, 0.415596, 351.301177},//Skin - 236
{0.123264, -0.014946, -0.008594, 358.201873, 0.415596, 351.301177},//Skin - 237
{0.146656, -0.023925, -0.006749, 358.201873, 0.415596, 334.356781},//Skin - 238
{0.133769, -0.007373, -0.006749, 358.201873, 0.415596, 343.105895},//Skin - 239
{0.165378, -0.020173, -0.005869, 358.201873, 0.415596, 348.352233},//Skin - 240
{0.143331, -0.133577, -0.011472, 358.201873, 0.415596, 312.328857},//Skin - 241
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 242
{0.098602, 0.002084, -0.011472, 358.201873, 0.415596, 348.195495},//Skin - 243
{0.124240, -0.011682, -0.006423, 358.201873, 0.415596, 341.555999},//Skin - 244
{0.158155, -0.044311, -0.005439, 358.201873, 0.415596, 336.024902},//Skin - 245
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 246
{0.164307, -0.040974, -0.006797, 358.201873, 0.415596, 337.067047},//Skin - 247
{0.191578, -0.040435, -0.010605, 358.201873, 0.415596, 340.908203},//Skin - 248
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 249
{0.135208, -0.015243, -0.011916, 358.201873, 0.415596, 340.908203},//Skin - 250
{0.134272, -0.027377, -0.006035, 358.201873, 0.415596, 333.416168},//Skin - 251
{0.158813, -0.038977, -0.006035, 358.201873, 0.415596, 336.013519},//Skin - 252
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 253
{0.165106, -0.048880, -0.009719, 358.201873, 0.415596, 331.050933},//Skin - 254
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 255
{0.142586, 0.020829, -0.008549, 358.201873, 0.415596, 2.765411},//Skin - 256
{0.134018, -0.024462, -0.008549, 358.201873, 0.415596, 339.642486},//Skin - 257
{0.147750, -0.042854, -0.008114, 0.951334, 0.415596, 330.441131},//Skin - 258
{0.147750, -0.042854, -0.008114, 0.951334, 0.415596, 330.441131},//Skin - 259
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 260
{0.134710, 0.006798, -0.008114, 358.188964, 0.415596, 352.703582},//Skin - 261
{0.111691, 0.006798, -0.008114, 358.188964, 0.415596, 352.703582},//Skin - 262
{0.146077, -0.005195, -0.008114, 358.188964, 0.415596, 3.866970},//Skin - 263
{0.135858, -0.157842, -0.008114, 358.188964, 0.415596, 314.852203},//Skin - 264
{0.127964, 0.000132, -0.008114, 358.188964, 0.415596, 352.699432},//Skin - 265
{0.127964, -0.002646, -0.008114, 358.188964, 0.415596, 352.699432},//Skin - 266
{0.132329, -0.014261, -0.007384, 1.504234, 0.415596, 352.699432},//Skin - 267
{0.145951, -0.043442, -0.010053, 1.504234, 0.415596, 320.469390},//Skin - 268
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 269
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 270
{0.141851, -0.034538, -0.010580, 1.504234, 0.415596, 340.349456},//Skin - 271
{0.136473, -0.057088, -0.008204, 1.504234, 0.415596, 318.134399},//Skin - 272
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 273
{0.124270, 0.003252, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 274
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 275
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 276
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 277
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 278
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 279
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 280
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 281
{0.140515, 0.009018, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 282
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 283
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 284
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 285
{0.140515, 0.001933, -0.008204, 1.504234, 0.415596, 346.744995}, //Skin - 286
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 287
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 288
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 289
{0.128789, -0.014062, -0.007850, 1.504234, 0.415596, 340.341094},//Skin - 290
{0.158929, -0.027358, -0.010655, 1.504234, 0.415596, 337.298858},//Skin - 291
{0.113309, -0.012434, -0.010655, 1.504234, 0.415596, 337.298858},//Skin - 292
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 293
{0.158438, -0.023891, -0.007217, 1.504234, 0.415596, 337.298858},//Skin - 294
{0.145000, -0.032054, -0.007217, 1.504234, 0.415596, 336.385589},//Skin - 295
{0.139293, -0.069554, -0.010619, 1.504234, 0.415596, 320.746429},//Skin - 296
{0.148252, -0.066463, -0.010619, 1.504234, 0.415596, 320.729705},//Skin - 297
{0.126423, -0.066463, -0.010619, 1.504234, 0.415596, 320.729705},//Skin - 298
{0.144949, -0.040691, -0.008599, 1.504234, 0.415596, 320.729705}//Skin - 299
};
enum inf
{
omodel,
oslot,
bool: slotreserved,
};
new pObject[MAX_PLAYERS][inf];
//==============================================================================
//new TempoDoHelper[MAX_PLAYERS];
enum TrInfo
{
    Float:MinX,
    Float:MinY,
    Float:MaxX,
    Float:MaxY,
    exemortos,
    gimortos,
    aermortos,
    almortos,
    Pontos,
    Vencedor,

};
new Territorio[TrInfo];
new Pguerra;
new GPontos[MAX_ORGS];
new Text:GTitulo;
new Text:GExer;
new Text:GGi;
new Text:GFarc;
//sistemas de araras '-'
enum ar
{
    bool:Arara,
    bool:Racao,
    Grande,
    Tempo
}
new Infoa[MAX_PLAYERS][ar];

enum vinnye
{
    pMotivo[126],
    pAdmBan[MAX_PLAYER_NAME],
    pData[20],
    pHora[20],
    pNick[64],
    IrIp[32],
    PergSenha[64],
    NumSenha
};
new Infovinny[MAX_PLAYERS][vinnye];
enum sInfo
{
    sCreated,
    Float:sX,
    Float:sY,
    Float:sZ,
    sObject,
};
new SpikeInfo[MAX_SPIKESTRIPS][sInfo];
//======>[carros PlayGamer]<======
new CopCarros[237];
new FDCar[16];
new BallasCarros[15];
new ReggaeCar[24];
new GrooveCar[13];
new AztecasCar[14];
new VagosCar[15];
new CarrosHit[10];
new MedicosCar[18];
new NewsCar[11];
new TaxiCar[15];
//new SnakeCar[31];
new HelperCar[18];
new AdminCar[16];
new StrikerSCar[22];
new CarAlug[74];
new CarCosa[19];
new YakuzaCar[21];
new AlCar[18];
new GICar[20];
new CivilCar[14];
new GovCar[9];
new BusCar[13];
new MecCar[10];
new HellsCar[21];
new MongolsCar[22];
new SonsCar[18];
new CaminhaoCar[21];
new PccCar[19];
new CvCarros[11];
new RallyCar[26];
//new VipCar[17];
new AlugarHeli[17];
new TriadsCar[20];
new DriftersCar[14];
new PsykOCar[22];
new FaTaL_ImperiuMCar[21];
new PsycoCars[20];
//new CarHolySkiLL[30];
new SmiCar[16];
//====================================///////////==/=/=/=/=/===/=/==/=/=/=//=/==
new CaminhaoProdFazendas[MAX_VEHICLES];
new CaminhaoProdEmpresas[MAX_VEHICLES];
//=============>[FIM]<===========
new NomeArma[MAX_PLAYERS][32],PassArmaID[MAX_PLAYERS],QuantMun[MAX_PLAYERS],IDpassouArma[MAX_PLAYERS];
forward StatusPlayer(idcheck, playerid);
forward ModoTrabalho(playerid, modo);
new Text3D:ProcuradoP[MAX_PLAYERS];
static gTeam[MAX_PLAYERS];
new storeexit[MAX_PLAYERS];
new VagaSobrando;
new HidePM[MAX_PLAYERS];
new Presente[MAX_PLAYERS];
new HideAdm[MAX_PLAYERS];
new HideIR[MAX_PLAYERS];
new Verdm;
new Verdmhit;
new vinnyOwna;
new ServerOwner[MAX_PLAYERS];
new Verck;
new AhOff;
new SenhasAtendimento = 0;
new RelatoOFF = 0;
new RelatoEntregue[MAX_PLAYERS];
new PediuServico[MAX_PLAYERS];
new BaniuPlayer[MAX_PLAYERS];
new CurarAtivo[MAX_PLAYERS];
new CurarPreco[MAX_PLAYERS];

//new TextHosp[MAX_PLAYERS];
new Voff[MAX_PLAYERS];
//================[helpers defines]================//
new meavaliehelper[MAX_PLAYERS];
new meavalie[MAX_PLAYERS];
forward TempoAnHelper(playerid);
forward TempoAvalieHelper(playerid);
new Evento;

//=================================[Sistema de Admins]================================
new vinnyAdmin[MAX_PLAYERS] = 0;
new vinnyHelper[MAX_PLAYERS] = 0;
enum Admin
{
    gMembro[MAX_PLAYER_NAME],
    AdminAtivo,
};
new AdmInfo[26][Admin];
forward AdmCheck(playerid);
forward AdmsVaga();
forward SaveAdm();
forward LoadAdm();

enum vinfo
{
    vNick[MAX_PLAYER_NAME],
    vAtivo,
    vMes,
    vDia,
    vAno,
    vVencimento[32],
    vCasa,
    vFazenda,
    vEmpresa,
}

new VipInfo[51][vinfo];

// Helpers
enum Helper
{
    gMembro[MAX_PLAYER_NAME],
    HelperAtivo,
};
new HelpInfo[26][Helper];
forward HelpCheck(playerid);
forward HelpsVaga();
forward SaveHelp();
forward LoadHelp();
public AdmsVaga()
{
    for(new idx=0; idx<sizeof(AdmInfo); idx++)
    {
        if(strcmp(AdmInfo[idx][gMembro],"Vazio", true ) == 0 )
        {
            VagaSobrando = 1;
            return 1;
        }
    }
    VagaSobrando = 0;
    return 0;
}
public HelpsVaga()
{
    new storedcopname[64];
    new File: file = fopen("PlayGamer/Helpers.cfg", io_read);
    if (file)
    {
        new valtmp[MAX_PLAYER_NAME];
        while (fread(file, valtmp) > 0)
        {
            strmid(storedcopname, valtmp, 0, strlen("Vazio"), 255);
            if ((strcmp(storedcopname, "Vazio", true, strlen("Vazio")) == 0) && (strlen("Vazio") == strlen(storedcopname)))
            {
                fclose(file);
                VagaSobrando = 1;
                return 1;
            }
        }
    }
    fclose(file);
    VagaSobrando = 0;
    return 0;
}
//===================================[Sistema de Eleições]======================
new EleicoesOn;
enum Canditato
{
    CandNome[MAX_PLAYER_NAME],
    CandVotos,
};
new CandidatoInfo[4][Canditato];
forward SaveEleicoes();
public SaveEleicoes()
{
    new idx;
    new File: file2;
    print("===========[Salvando Eleições]============");
    while (idx < sizeof(CandidatoInfo))
    {
        new coordsstring[128];
        format(coordsstring, sizeof(coordsstring), "%s|%d\n",CandidatoInfo[idx][CandNome],CandidatoInfo[idx][CandVotos]);
        if(idx == 0)
        {
            file2 = fopen("PlayGamer/Eleicoes.cfg", io_write);
        }
        else
        {
            file2 = fopen("PlayGamer/Eleicoes.cfg", io_append);
        }
        printf("Candidato: %s, Salvo!", CandidatoInfo[idx][CandNome]);
        fwrite(file2, coordsstring);
        idx++;
        fclose(file2);
    }
    print("=======================================");
    return 1;
}
forward AbrirEleicoes();
public AbrirEleicoes()
{
    new arrCoords[2][64];
    new strFromFile2[128];
    new File: file = fopen("PlayGamer/Eleicoes.cfg", io_read);
    if (file)
    {
        new idx = 0;
        print("===========[Carregando Eleições]============");
        while(idx < sizeof(CandidatoInfo))
        {
            fread(file, strFromFile2);
            split(strFromFile2, arrCoords, '|');
            strmid(CandidatoInfo[idx][CandNome], arrCoords[0], 0, strlen(arrCoords[0]), 255);
            CandidatoInfo[idx][CandVotos] = strval(arrCoords[1]);
            idx++;
        }
        printf("Sistema de Eleições Carregado! Canditatos: %d ", idx);
    }
    fclose(file);
    return 1;
}
forward EleicoesOnLoad();
public EleicoesOnLoad()
{
    new arquivo[64];
    new idx = 1;
    format(arquivo, sizeof(arquivo), "PlayGamer/CheckEleicoes.cfg",idx);
    if(!dini_Exists(arquivo))
    {
        dini_Create(arquivo);
        dini_IntSet(arquivo,"Eleicoes",EleicoesOn);
    }
    EleicoesOn = dini_Int(arquivo,"Eleicoes");
    return 1;
}
forward EleicoesOnSave();
public EleicoesOnSave()
{
    new arquivo[64];
    new idx = 1;
    format(arquivo, sizeof(arquivo), "PlayGamer/CheckEleicoes.cfg",idx);
    if(!dini_Exists(arquivo))
    {
        dini_Create(arquivo);
        dini_IntSet(arquivo,"Eleicoes",EleicoesOn);
    }
    dini_IntSet(arquivo,"Eleicoes",EleicoesOn);
    return 1;
}
//=====================================[COFRE INFO]================================//
enum CofreInfo
{
    Dinheiro,
    Materiais,
    Maconha,
    Cocaina,
    Crack,
};
new CofreOrg[MAX_ORGS][CofreInfo];
new pCofreOrg[MAX_PLAYERS];
//=====================================[INFOORG]================================//
enum Oinfo
{
    Lider[MAX_PLAYER_NAME],
    SubLider[MAX_PLAYER_NAME],
    Membro1[MAX_PLAYER_NAME],
    Membro2[MAX_PLAYER_NAME],
    Membro3[MAX_PLAYER_NAME],
    Membro4[MAX_PLAYER_NAME],
    Membro5[MAX_PLAYER_NAME],
    Membro6[MAX_PLAYER_NAME],
    Membro7[MAX_PLAYER_NAME],
    Membro8[MAX_PLAYER_NAME],
    Membro9[MAX_PLAYER_NAME],
    Membro10[MAX_PLAYER_NAME],
    Membro11[MAX_PLAYER_NAME],
    Membro12[MAX_PLAYER_NAME],
    Membro13[MAX_PLAYER_NAME],
    Membro14[MAX_PLAYER_NAME],
    Membro15[MAX_PLAYER_NAME],
    Membro16[MAX_PLAYER_NAME],
    Membro17[MAX_PLAYER_NAME],
    Membro18[MAX_PLAYER_NAME],
    Membro19[MAX_PLAYER_NAME],
    Membro20[MAX_PLAYER_NAME],
    Membro21[MAX_PLAYER_NAME],
    Membro22[MAX_PLAYER_NAME],
    Membro23[MAX_PLAYER_NAME],
    Membro24[MAX_PLAYER_NAME],
    Membro25[MAX_PLAYER_NAME],
    Membro26[MAX_PLAYER_NAME],
    Membro27[MAX_PLAYER_NAME],
    Membro28[MAX_PLAYER_NAME],
    Membro29[MAX_PLAYER_NAME],
    Membro30[MAX_PLAYER_NAME],
    Membro31[MAX_PLAYER_NAME],
    Membro32[MAX_PLAYER_NAME],
    Membro33[MAX_PLAYER_NAME],
    Membro34[MAX_PLAYER_NAME],
    Membro35[MAX_PLAYER_NAME],
    Membro36[MAX_PLAYER_NAME],
    Membro37[MAX_PLAYER_NAME],
    Membro38[MAX_PLAYER_NAME],
    Membro39[MAX_PLAYER_NAME],
    Membro40[MAX_PLAYER_NAME],
};
new InfoOrg[MAX_ORGS][Oinfo];
//==========================================[DEFINES DO Gamer]==========================================//
stock PlayerName(playerid)
{
    new Name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, Name, MAX_PLAYER_NAME);
    return Name;
}
new ConviteFamy[MAX_PLAYERS];
new chosenpid;
new loginstring[400];
new loginname[64];
//===============================//
new Reduzido[MAX_PLAYERS];//pedagio
forward ReduzTempo(playerid);//pedagio

#define MAX_STRING 255
forward Encrypt(string[]);
#define MAX_ZONE_NAME 28

enum SAZONE_MAIN
{
        SAZONE_NAME[28],
        Float:SAZONE_AREA[6]
};
static const gSAZones[][SAZONE_MAIN] = {
    //  NOMES /LOCALIZAR            AREA (Xmin,Ymin,Zmin,Xmax,Ymax,Zmax)
{ "'The Big Ear'",                {-410.00,  1403.30,    -3.00,  -137.90,  1681.20,   200.00}},
{ "Aldea Malvada",               {-1372.10,  2498.50,     0.00, -1277.50,  2615.30,   200.00}},
{ "Angel Pine",                  {-2324.90, -2584.20,    -6.10, -1964.20, -2212.10,   200.00}},
{ "Arco del Oeste",               {-901.10,  2221.80,     0.00,  -592.00,  2571.90,   200.00}},
{ "Avispa Country Club",         {-2646.40,  -355.40,     0.00, -2270.00,  -222.50,   200.00}},
{ "Avispa Country Club",         {-2831.80,  -430.20,    -6.10, -2646.40,  -222.50,   200.00}},
{ "Avispa Country Club",         {-2361.50,  -417.10,     0.00, -2270.00,  -355.40,   200.00}},
{ "Avispa Country Club",         {-2667.80,  -302.10,   -28.80, -2646.40,  -262.30,    71.10}},
{ "Avispa Country Club",         {-2470.00,  -355.40,     0.00, -2270.00,  -318.40,    46.10}},
{ "Avispa Country Club",         {-2550.00,  -355.40,     0.00, -2470.00,  -318.40,    39.70}},
{ "Back o Beyond",               {-1166.90, -2641.10,     0.00,  -321.70, -1856.00,   200.00}},
{ "Battery Point",               {-2741.00,  1268.40,    -4.50, -2533.00,  1490.40,   200.00}},
{ "Bayside",                     {-2741.00,  2175.10,     0.00, -2353.10,  2722.70,   200.00}},
{ "Bayside Marina",              {-2353.10,  2275.70,     0.00, -2153.10,  2475.70,   200.00}},
{ "Beacon Hill",                  {-399.60, -1075.50,    -1.40,  -319.00,  -977.50,   198.50}},
{ "Blackfield",                    {964.30,  1203.20,   -89.00,  1197.30,  1403.20,   110.90}},
{ "Blackfield",                   {964.30,  1403.20,   -89.00,  1197.30,  1726.20,   110.90}},
{ "Blackfield Chapel",            {1375.60,   596.30,   -89.00,  1558.00,   823.20,   110.90}},
{ "Blackfield Chapel",            {1325.60,   596.30,   -89.00,  1375.60,   795.00,   110.90}},
{ "Blackfield Intersection",      {1197.30,  1044.60,   -89.00,  1277.00,  1163.30,   110.90}},
{ "Blackfield Intersection",      {1166.50,   795.00,   -89.00,  1375.60,  1044.60,   110.90}},
{ "Blackfield Intersection",      {1277.00,  1044.60,   -89.00,  1315.30,  1087.60,   110.90}},
{ "Blackfield Intersection",      {1375.60,   823.20,   -89.00,  1457.30,   919.40,   110.90}},
{ "Blueberry",                     {104.50,  -220.10,     2.30,   349.60,   152.20,   200.00}},
{ "Blueberry",                      {19.60,  -404.10,     3.80,   349.60,  -220.10,   200.00}},
{ "Blueberry Acres",              {-319.60,  -220.10,     0.00,   104.50,   293.30,   200.00}},
{ "Caligula's Palace",            {2087.30,  1543.20,   -89.00,  2437.30,  1703.20,   110.90}},
{ "Caligula's Palace",            {2137.40,  1703.20,   -89.00,  2437.30,  1783.20,   110.90}},
{ "Calton Heights",              {-2274.10,   744.10,    -6.10, -1982.30,  1358.90,   200.00}},
{ "Chinatown",                   {-2274.10,   578.30,    -7.60, -2078.60,   744.10,   200.00}},
{ "Gamer Hall",                   {-2867.80,   277.40,    -9.10, -2593.40,   458.40,   200.00}},
{ "Come-A-Lot",                   {2087.30,   943.20,   -89.00,  2623.10,  1203.20,   110.90}},
{ "Commerce",                     {1323.90, -1842.20,   -89.00,  1701.90, -1722.20,   110.90}},
{ "Commerce",                     {1323.90, -1722.20,   -89.00,  1440.90, -1577.50,   110.90}},
{ "Commerce",                     {1370.80, -1577.50,   -89.00,  1463.90, -1384.90,   110.90}},
{ "Commerce",                     {1463.90, -1577.50,   -89.00,  1667.90, -1430.80,   110.90}},
{ "Commerce",                     {1583.50, -1722.20,   -89.00,  1758.90, -1577.50,   110.90}},
{ "Commerce",                     {1667.90, -1577.50,   -89.00,  1812.60, -1430.80,   110.90}},
{ "Conference Center",            {1046.10, -1804.20,   -89.00,  1323.90, -1722.20,   110.90}},
{ "Conference Center",            {1073.20, -1842.20,   -89.00,  1323.90, -1804.20,   110.90}},
{ "Cranberry Station",           {-2007.80,    56.30,     0.00, -1922.00,   224.70,   100.00}},
{ "Creek",                        {2749.90,  1937.20,   -89.00,  2921.60,  2669.70,   110.90}},
{ "Dillimore",                     {580.70,  -674.80,    -9.50,   861.00,  -404.70,   200.00}},
{ "Doherty",                     {-2270.00,  -324.10,    -0.00, -1794.90,  -222.50,   200.00}},
{ "Doherty",                     {-2173.00,  -222.50,    -0.00, -1794.90,   265.20,   200.00}},
{ "Downtown",                    {-1982.30,   744.10,    -6.10, -1871.70,  1274.20,   200.00}},
{ "Downtown",                    {-1871.70,  1176.40,    -4.50, -1620.30,  1274.20,   200.00}},
{ "Downtown",                    {-1700.00,   744.20,    -6.10, -1580.00,  1176.50,   200.00}},
{ "Downtown",                    {-1580.00,   744.20,    -6.10, -1499.80,  1025.90,   200.00}},
{ "Downtown",                    {-2078.60,   578.30,    -7.60, -1499.80,   744.20,   200.00}},
{ "Downtown",                    {-1993.20,   265.20,    -9.10, -1794.90,   578.30,   200.00}},
{ "Downtown LS",                {1463.90, -1430.80,   -89.00,  1724.70, -1290.80,   110.90}},
{ "Downtown LS",                {1724.70, -1430.80,   -89.00,  1812.60, -1250.90,   110.90}},
{ "Downtown LS",                {1463.90, -1290.80,   -89.00,  1724.70, -1150.80,   110.90}},
{ "Downtown LS",                {1370.80, -1384.90,   -89.00,  1463.90, -1170.80,   110.90}},
{ "Downtown LS",                {1724.70, -1250.90,   -89.00,  1812.60, -1150.80,   110.90}},
{ "Downtown LS",                {1370.80, -1170.80,   -89.00,  1463.90, -1130.80,   110.90}},
{ "Downtown LS",                {1378.30, -1130.80,   -89.00,  1463.90, -1026.30,   110.90}},
{ "Downtown LS",                {1391.00, -1026.30,   -89.00,  1463.90,  -926.90,   110.90}},
{ "Downtown LS",                {1507.50, -1385.20,   110.90,  1582.50, -1325.30,   335.90}},
{ "East Beach",                   {2632.80, -1852.80,   -89.00,  2959.30, -1668.10,   110.90}},
{ "East Beach",                   {2632.80, -1668.10,   -89.00,  2747.70, -1393.40,   110.90}},
{ "East Beach",                   {2747.70, -1668.10,   -89.00,  2959.30, -1498.60,   110.90}},
{ "East Beach",                   {2747.70, -1498.60,   -89.00,  2959.30, -1120.00,   110.90}},
{ "East Los Santos",              {2421.00, -1628.50,   -89.00,  2632.80, -1454.30,   110.90}},
{ "East Los Santos",              {2222.50, -1628.50,   -89.00,  2421.00, -1494.00,   110.90}},
{ "East Los Santos",              {2266.20, -1494.00,   -89.00,  2381.60, -1372.00,   110.90}},
{ "East Los Santos",              {2381.60, -1494.00,   -89.00,  2421.00, -1454.30,   110.90}},
{ "East Los Santos",              {2281.40, -1372.00,   -89.00,  2381.60, -1135.00,   110.90}},
{ "East Los Santos",              {2381.60, -1454.30,   -89.00,  2462.10, -1135.00,   110.90}},
{ "East Los Santos",              {2462.10, -1454.30,   -89.00,  2581.70, -1135.00,   110.90}},
{ "Easter Basin",                {-1794.90,   249.90,    -9.10, -1242.90,   578.30,   200.00}},
{ "Easter Basin",                {-1794.90,   -50.00,    -0.00, -1499.80,   249.90,   200.00}},
{ "Easter Bay Airport",          {-1499.80,   -50.00,    -0.00, -1242.90,   249.90,   200.00}},
{ "Easter Bay Airport",          {-1794.90,  -730.10,    -3.00, -1213.90,   -50.00,   200.00}},
{ "Easter Bay Airport",          {-1213.90,  -730.10,     0.00, -1132.80,   -50.00,   200.00}},
{ "Easter Bay Airport",          {-1242.90,   -50.00,     0.00, -1213.90,   578.30,   200.00}},
{ "Easter Bay Airport",          {-1213.90,   -50.00,    -4.50,  -947.90,   578.30,   200.00}},
{ "Easter Bay Airport",          {-1315.40,  -405.30,    15.40, -1264.40,  -209.50,    25.40}},
{ "Easter Bay Airport",          {-1354.30,  -287.30,    15.40, -1315.40,  -209.50,    25.40}},
{ "Easter Bay Airport",          {-1490.30,  -209.50,    15.40, -1264.40,  -148.30,    25.40}},
{ "Easter Bay Chemicals",        {-1132.80,  -768.00,     0.00,  -956.40,  -578.10,   200.00}},
{ "Easter Bay Chemicals",        {-1132.80,  -787.30,     0.00,  -956.40,  -768.00,   200.00}},
{ "El Castillo del Diablo",       {-464.50,  2217.60,     0.00,  -208.50,  2580.30,   200.00}},
{ "El Castillo del Diablo",       {-208.50,  2123.00,    -7.60,   114.00,  2337.10,   200.00}},
{ "El Castillo del Diablo",       {-208.50,  2337.10,     0.00,     8.40,  2487.10,   200.00}},
{ "El Corona",                    {1812.60, -2179.20,   -89.00,  1970.60, -1852.80,   110.90}},
{ "El Corona",                    {1692.60, -2179.20,   -89.00,  1812.60, -1842.20,   110.90}},
{ "El Quebrados",                {-1645.20,  2498.50,     0.00, -1372.10,  2777.80,   200.00}},
{ "Esplanade East",              {-1620.30,  1176.50,    -4.50, -1580.00,  1274.20,   200.00}},
{ "Esplanade East",              {-1580.00,  1025.90,    -6.10, -1499.80,  1274.20,   200.00}},
{ "Esplanade East",              {-1499.80,   578.30,   -79.60, -1339.80,  1274.20,    20.30}},
{ "Esplanade North",             {-2533.00,  1358.90,    -4.50, -1996.60,  1501.20,   200.00}},
{ "Esplanade North",             {-1996.60,  1358.90,    -4.50, -1524.20,  1592.50,   200.00}},
{ "Esplanade North",             {-1982.30,  1274.20,    -4.50, -1524.20,  1358.90,   200.00}},
{ "Fallen Tree",                  {-792.20,  -698.50,    -5.30,  -452.40,  -380.00,   200.00}},
{ "Fallow Bridge",                 {434.30,   366.50,     0.00,   603.00,   555.60,   200.00}},
{ "Fern Ridge",                    {508.10,  -139.20,     0.00,  1306.60,   119.50,   200.00}},
{ "Financial",                   {-1871.70,   744.10,    -6.10, -1701.30,  1176.40,   300.00}},
{ "Fisher's Lagoon",              {1916.90,  -233.30,  -100.00,  2131.70,    13.80,   200.00}},
{ "Flint Intersection",           {-187.70, -1596.70,   -89.00,    17.00, -1276.60,   110.90}},
{ "Flint Range",                  {-594.10, -1648.50,     0.00,  -187.70, -1276.60,   200.00}},
{ "Fort Carson",                  {-376.20,   826.30,    -3.00,   123.70,  1220.40,   200.00}},
{ "Foster Valley",               {-2270.00,  -430.20,    -0.00, -2178.60,  -324.10,   200.00}},
{ "Foster Valley",               {-2178.60,  -599.80,    -0.00, -1794.90,  -324.10,   200.00}},
{ "Foster Valley",               {-2178.60, -1115.50,     0.00, -1794.90,  -599.80,   200.00}},
{ "Foster Valley",               {-2178.60, -1250.90,     0.00, -1794.90, -1115.50,   200.00}},
{ "Frederick Bridge",             {2759.20,   296.50,     0.00,  2774.20,   594.70,   200.00}},
{ "Gant Bridge",                 {-2741.40,  1659.60,    -6.10, -2616.40,  2175.10,   200.00}},
{ "Gant Bridge",                 {-2741.00,  1490.40,    -6.10, -2616.40,  1659.60,   200.00}},
{ "Ganton",                       {2222.50, -1852.80,   -89.00,  2632.80, -1722.30,   110.90}},
{ "Ganton",                       {2222.50, -1722.30,   -89.00,  2632.80, -1628.50,   110.90}},
{ "Garcia",                      {-2411.20,  -222.50,    -0.00, -2173.00,   265.20,   200.00}},
{ "Garcia",                      {-2395.10,  -222.50,    -5.30, -2354.00,  -204.70,   200.00}},
{ "Garver Bridge",               {-1339.80,   828.10,   -89.00, -1213.90,  1057.00,   110.90}},
{ "Garver Bridge",               {-1213.90,   950.00,   -89.00, -1087.90,  1178.90,   110.90}},
{ "Garver Bridge",               {-1499.80,   696.40,  -179.60, -1339.80,   925.30,    20.30}},
{ "Glen Park",                    {1812.60, -1449.60,   -89.00,  1996.90, -1350.70,   110.90}},
{ "Glen Park",                    {1812.60, -1100.80,   -89.00,  1994.30,  -973.30,   110.90}},
{ "Glen Park",                    {1812.60, -1350.70,   -89.00,  2056.80, -1100.80,   110.90}},
{ "Green Palms",                   {176.50,  1305.40,    -3.00,   338.60,  1520.70,   200.00}},
{ "Greenglass College",            {964.30,  1044.60,   -89.00,  1197.30,  1203.20,   110.90}},
{ "Greenglass College",            {964.30,   930.80,   -89.00,  1166.50,  1044.60,   110.90}},
{ "Hampton Barns",                 {603.00,   264.30,     0.00,   761.90,   366.50,   200.00}},
{ "Hankypanky Point",             {2576.90,    62.10,     0.00,  2759.20,   385.50,   200.00}},
{ "Harry Gold Parkway",           {1777.30,   863.20,   -89.00,  1817.30,  2342.80,   110.90}},
{ "Hashbury",                    {-2593.40,  -222.50,    -0.00, -2411.20,    54.70,   200.00}},
{ "Hilltop Farm",                  {967.30,  -450.30,    -3.00,  1176.70,  -217.90,   200.00}},
{ "Hunter Quarry",                 {337.20,   710.80,  -115.20,   860.50,  1031.70,   203.70}},
{ "Idlewood",                     {1812.60, -1852.80,   -89.00,  1971.60, -1742.30,   110.90}},
{ "Idlewood",                     {1812.60, -1742.30,   -89.00,  1951.60, -1602.30,   110.90}},
{ "Idlewood",                     {1951.60, -1742.30,   -89.00,  2124.60, -1602.30,   110.90}},
{ "Idlewood",                     {1812.60, -1602.30,   -89.00,  2124.60, -1449.60,   110.90}},
{ "Idlewood",                     {2124.60, -1742.30,   -89.00,  2222.50, -1494.00,   110.90}},
{ "Idlewood",                     {1971.60, -1852.80,   -89.00,  2222.50, -1742.30,   110.90}},
{ "Jefferson",                    {1996.90, -1449.60,   -89.00,  2056.80, -1350.70,   110.90}},
{ "Jefferson",                    {2124.60, -1494.00,   -89.00,  2266.20, -1449.60,   110.90}},
{ "Jefferson",                    {2056.80, -1372.00,   -89.00,  2281.40, -1210.70,   110.90}},
{ "Jefferson",                    {2056.80, -1210.70,   -89.00,  2185.30, -1126.30,   110.90}},
{ "Jefferson",                    {2185.30, -1210.70,   -89.00,  2281.40, -1154.50,   110.90}},
{ "Jefferson",                    {2056.80, -1449.60,   -89.00,  2266.20, -1372.00,   110.90}},
{ "Julius Thruway East",          {2623.10,   943.20,   -89.00,  2749.90,  1055.90,   110.90}},
{ "Julius Thruway East",          {2685.10,  1055.90,   -89.00,  2749.90,  2626.50,   110.90}},
{ "Julius Thruway East",          {2536.40,  2442.50,   -89.00,  2685.10,  2542.50,   110.90}},
{ "Julius Thruway East",          {2625.10,  2202.70,   -89.00,  2685.10,  2442.50,   110.90}},
{ "Julius Thruway North",         {2498.20,  2542.50,   -89.00,  2685.10,  2626.50,   110.90}},
{ "Julius Thruway North",         {2237.40,  2542.50,   -89.00,  2498.20,  2663.10,   110.90}},
{ "Julius Thruway North",         {2121.40,  2508.20,   -89.00,  2237.40,  2663.10,   110.90}},
{ "Julius Thruway North",         {1938.80,  2508.20,   -89.00,  2121.40,  2624.20,   110.90}},
{ "Julius Thruway North",         {1534.50,  2433.20,   -89.00,  1848.40,  2583.20,   110.90}},
{ "Julius Thruway North",         {1848.40,  2478.40,   -89.00,  1938.80,  2553.40,   110.90}},
{ "Julius Thruway North",         {1704.50,  2342.80,   -89.00,  1848.40,  2433.20,   110.90}},
{ "Julius Thruway North",         {1377.30,  2433.20,   -89.00,  1534.50,  2507.20,   110.90}},
{ "Julius Thruway South",         {1457.30,   823.20,   -89.00,  2377.30,   863.20,   110.90}},
{ "Julius Thruway South",         {2377.30,   788.80,   -89.00,  2537.30,   897.90,   110.90}},
{ "Julius Thruway West",          {1197.30,  1163.30,   -89.00,  1236.60,  2243.20,   110.90}},
{ "Julius Thruway West",          {1236.60,  2142.80,   -89.00,  1297.40,  2243.20,   110.90}},
{ "Juniper Hill",                {-2533.00,   578.30,    -7.60, -2274.10,   968.30,   200.00}},
{ "Juniper Hollow",              {-2533.00,   968.30,    -6.10, -2274.10,  1358.90,   200.00}},
{ "K.A.C.C. Military Fuels",      {2498.20,  2626.50,   -89.00,  2749.90,  2861.50,   110.90}},
{ "Kincaid Bridge",              {-1339.80,   599.20,   -89.00, -1213.90,   828.10,   110.90}},
{ "Kincaid Bridge",              {-1213.90,   721.10,   -89.00, -1087.90,   950.00,   110.90}},
{ "Kincaid Bridge",              {-1087.90,   855.30,   -89.00,  -961.90,   986.20,   110.90}},
{ "King's",                      {-2329.30,   458.40,    -7.60, -1993.20,   578.30,   200.00}},
{ "King's",                      {-2411.20,   265.20,    -9.10, -1993.20,   373.50,   200.00}},
{ "King's",                      {-2253.50,   373.50,    -9.10, -1993.20,   458.40,   200.00}},
{ "LVA Freight Depot",            {1457.30,   863.20,   -89.00,  1777.40,  1143.20,   110.90}},
{ "LVA Freight Depot",            {1375.60,   919.40,   -89.00,  1457.30,  1203.20,   110.90}},
{ "LVA Freight Depot",            {1277.00,  1087.60,   -89.00,  1375.60,  1203.20,   110.90}},
{ "LVA Freight Depot",            {1315.30,  1044.60,   -89.00,  1375.60,  1087.60,   110.90}},
{ "LVA Freight Depot",            {1236.60,  1163.40,   -89.00,  1277.00,  1203.20,   110.90}},
{ "Las Barrancas",                {-926.10,  1398.70,    -3.00,  -719.20,  1634.60,   200.00}},
{ "Las Brujas",                   {-365.10,  2123.00,    -3.00,  -208.50,  2217.60,   200.00}},
{ "Las Colinas",                  {1994.30, -1100.80,   -89.00,  2056.80,  -920.80,   110.90}},
{ "Las Colinas",                  {2056.80, -1126.30,   -89.00,  2126.80,  -920.80,   110.90}},
{ "Las Colinas",                  {2185.30, -1154.50,   -89.00,  2281.40,  -934.40,   110.90}},
{ "Las Colinas",                  {2126.80, -1126.30,   -89.00,  2185.30,  -934.40,   110.90}},
{ "Las Colinas",                  {2747.70, -1120.00,   -89.00,  2959.30,  -945.00,   110.90}},
{ "Las Colinas",                  {2632.70, -1135.00,   -89.00,  2747.70,  -945.00,   110.90}},
{ "Las Colinas",                  {2281.40, -1135.00,   -89.00,  2632.70,  -945.00,   110.90}},
{ "Las Payasadas",                {-354.30,  2580.30,     2.00,  -133.60,  2816.80,   200.00}},
{ "Las Venturas Airport",         {1236.60,  1203.20,   -89.00,  1457.30,  1883.10,   110.90}},
{ "Las Venturas Airport",         {1457.30,  1203.20,   -89.00,  1777.30,  1883.10,   110.90}},
{ "Las Venturas Airport",         {1457.30,  1143.20,   -89.00,  1777.40,  1203.20,   110.90}},
{ "Las Venturas Airport",         {1515.80,  1586.40,   -12.50,  1729.90,  1714.50,    87.50}},
{ "Last Dime Motel",              {1823.00,   596.30,   -89.00,  1997.20,   823.20,   110.90}},
{ "Leafy Hollow",                {-1166.90, -1856.00,     0.00,  -815.60, -1602.00,   200.00}},
{ "Lil' Probe Inn",                {-90.20,  1286.80,    -3.00,   153.80,  1554.10,   200.00}},
{ "Linden Side",                  {2749.90,   943.20,   -89.00,  2923.30,  1198.90,   110.90}},
{ "Linden Station",               {2749.90,  1198.90,   -89.00,  2923.30,  1548.90,   110.90}},
{ "Linden Station",               {2811.20,  1229.50,   -39.50,  2861.20,  1407.50,    60.40}},
{ "Little Mexico",                {1701.90, -1842.20,   -89.00,  1812.60, -1722.20,   110.90}},
{ "Little Mexico",                {1758.90, -1722.20,   -89.00,  1812.60, -1577.50,   110.90}},
{ "Los Flores",                   {2581.70, -1454.30,   -89.00,  2632.80, -1393.40,   110.90}},
{ "Los Flores",                   {2581.70, -1393.40,   -89.00,  2747.70, -1135.00,   110.90}},
{ "LS International",     {1249.60, -2394.30,   -89.00,  1852.00, -2179.20,   110.90}},
{ "LS International",     {1852.00, -2394.30,   -89.00,  2089.00, -2179.20,   110.90}},
{ "LS International",     {1382.70, -2730.80,   -89.00,  2201.80, -2394.30,   110.90}},
{ "LS International",     {1974.60, -2394.30,   -39.00,  2089.00, -2256.50,    60.90}},
{ "LS International",     {1400.90, -2669.20,   -39.00,  2189.80, -2597.20,    60.90}},
{ "LS International",     {2051.60, -2597.20,   -39.00,  2152.40, -2394.30,    60.90}},
{ "Marina",                        {647.70, -1804.20,   -89.00,   851.40, -1577.50,   110.90}},
{ "Marina",                        {647.70, -1577.50,   -89.00,   807.90, -1416.20,   110.90}},
{ "Marina",                        {807.90, -1577.50,   -89.00,   926.90, -1416.20,   110.90}},
{ "Market",                        {787.40, -1416.20,   -89.00,  1072.60, -1310.20,   110.90}},
{ "Market",                        {952.60, -1310.20,   -89.00,  1072.60, -1130.80,   110.90}},
{ "Market",                       {1072.60, -1416.20,   -89.00,  1370.80, -1130.80,   110.90}},
{ "Market",                        {926.90, -1577.50,   -89.00,  1370.80, -1416.20,   110.90}},
{ "Market Station",                {787.40, -1410.90,   -34.10,   866.00, -1310.20,    65.80}},
{ "Martin Bridge",                {-222.10,   293.30,     0.00,  -122.10,   476.40,   200.00}},
{ "Missionary Hill",             {-2994.40,  -811.20,     0.00, -2178.60,  -430.20,   200.00}},
{ "Montgomery",                   {1119.50,   119.50,    -3.00,  1451.40,   493.30,   200.00}},
{ "Montgomery",                   {1451.40,   347.40,    -6.10,  1582.40,   420.80,   200.00}},
{ "Montgomery Intersection",      {1546.60,   208.10,     0.00,  1745.80,   347.40,   200.00}},
{ "Montgomery Intersection",      {1582.40,   347.40,     0.00,  1664.60,   401.70,   200.00}},
{ "Mulholland",                   {1414.00,  -768.00,   -89.00,  1667.60,  -452.40,   110.90}},
{ "Mulholland",                   {1281.10,  -452.40,   -89.00,  1641.10,  -290.90,   110.90}},
{ "Mulholland",                   {1269.10,  -768.00,   -89.00,  1414.00,  -452.40,   110.90}},
{ "Mulholland",                   {1357.00,  -926.90,   -89.00,  1463.90,  -768.00,   110.90}},
{ "Mulholland",                   {1318.10,  -910.10,   -89.00,  1357.00,  -768.00,   110.90}},
{ "Mulholland",                   {1169.10,  -910.10,   -89.00,  1318.10,  -768.00,   110.90}},
{ "Mulholland",                    {768.60,  -954.60,   -89.00,   952.60,  -860.60,   110.90}},
{ "Mulholland",                    {687.80,  -860.60,   -89.00,   911.80,  -768.00,   110.90}},
{ "Mulholland",                    {737.50,  -768.00,   -89.00,  1142.20,  -674.80,   110.90}},
{ "Mulholland",                   {1096.40,  -910.10,   -89.00,  1169.10,  -768.00,   110.90}},
{ "Mulholland",                    {952.60,  -937.10,   -89.00,  1096.40,  -860.60,   110.90}},
{ "Mulholland",                    {911.80,  -860.60,   -89.00,  1096.40,  -768.00,   110.90}},
{ "Mulholland",                    {861.00,  -674.80,   -89.00,  1156.50,  -600.80,   110.90}},
{ "Mulholland Intersection",      {1463.90, -1150.80,   -89.00,  1812.60,  -768.00,   110.90}},
{ "North Rock",                   {2285.30,  -768.00,     0.00,  2770.50,  -269.70,   200.00}},
{ "Ocean Docks",                  {2373.70, -2697.00,   -89.00,  2809.20, -2330.40,   110.90}},
{ "Ocean Docks",                  {2201.80, -2418.30,   -89.00,  2324.00, -2095.00,   110.90}},
{ "Ocean Docks",                  {2324.00, -2302.30,   -89.00,  2703.50, -2145.10,   110.90}},
{ "Ocean Docks",                  {2089.00, -2394.30,   -89.00,  2201.80, -2235.80,   110.90}},
{ "Ocean Docks",                  {2201.80, -2730.80,   -89.00,  2324.00, -2418.30,   110.90}},
{ "Ocean Docks",                  {2703.50, -2302.30,   -89.00,  2959.30, -2126.90,   110.90}},
{ "Ocean Docks",                  {2324.00, -2145.10,   -89.00,  2703.50, -2059.20,   110.90}},
{ "Ocean Flats",                 {-2994.40,   277.40,    -9.10, -2867.80,   458.40,   200.00}},
{ "Ocean Flats",                 {-2994.40,  -222.50,    -0.00, -2593.40,   277.40,   200.00}},
{ "Ocean Flats",                 {-2994.40,  -430.20,    -0.00, -2831.80,  -222.50,   200.00}},
{ "Octane Springs",                {338.60,  1228.50,     0.00,   664.30,  1655.00,   200.00}},
{ "Old Venturas Strip",           {2162.30,  2012.10,   -89.00,  2685.10,  2202.70,   110.90}},
{ "Palisades",                   {-2994.40,   458.40,    -6.10, -2741.00,  1339.60,   200.00}},
{ "Palomino Creek",               {2160.20,  -149.00,     0.00,  2576.90,   228.30,   200.00}},
{ "Paradiso",                   {-2741.00,   793.40,    -6.10, -2533.00,  1268.40,   200.00}},
{ "Pershing Square",              {1440.90, -1722.20,   -89.00,  1583.50, -1577.50,   110.90}},
{ "Pilgrim",                      {2437.30,  1383.20,   -89.00,  2624.40,  1783.20,   110.90}},
{ "Pilgrim",                      {2624.40,  1383.20,   -89.00,  2685.10,  1783.20,   110.90}},
{ "Pilson Intersection",          {1098.30,  2243.20,   -89.00,  1377.30,  2507.20,   110.90}},
{ "Pirates in Men's Pants",       {1817.30,  1469.20,   -89.00,  2027.40,  1703.20,   110.90}},
{ "Playa del Seville",            {2703.50, -2126.90,   -89.00,  2959.30, -1852.80,   110.90}},
{ "Prickle Pine",                 {1534.50,  2583.20,   -89.00,  1848.40,  2863.20,   110.90}},
{ "Prickle Pine",                 {1117.40,  2507.20,   -89.00,  1534.50,  2723.20,   110.90}},
{ "Prickle Pine",                 {1848.40,  2553.40,   -89.00,  1938.80,  2863.20,   110.90}},
{ "Prickle Pine",                 {1938.80,  2624.20,   -89.00,  2121.40,  2861.50,   110.90}},
{ "Queens",                      {-2533.00,   458.40,     0.00, -2329.30,   578.30,   200.00}},
{ "Queens",                      {-2593.40,    54.70,     0.00, -2411.20,   458.40,   200.00}},
{ "Queens",                      {-2411.20,   373.50,     0.00, -2253.50,   458.40,   200.00}},
{ "Randolph Industrial Estate",   {1558.00,   596.30,   -89.00,  1823.00,   823.20,   110.90}},
{ "Redsands East",                {1817.30,  2011.80,   -89.00,  2106.70,  2202.70,   110.90}},
{ "Redsands East",                {1817.30,  2202.70,   -89.00,  2011.90,  2342.80,   110.90}},
{ "Redsands East",                {1848.40,  2342.80,   -89.00,  2011.90,  2478.40,   110.90}},
{ "Redsands West",                {1236.60,  1883.10,   -89.00,  1777.30,  2142.80,   110.90}},
{ "Redsands West",                {1297.40,  2142.80,   -89.00,  1777.30,  2243.20,   110.90}},
{ "Redsands West",                {1377.30,  2243.20,   -89.00,  1704.50,  2433.20,   110.90}},
{ "Redsands West",                {1704.50,  2243.20,   -89.00,  1777.30,  2342.80,   110.90}},
{ "Regular Tom",                  {-405.70,  1712.80,    -3.00,  -276.70,  1892.70,   200.00}},
{ "Richman",                       {647.50, -1118.20,   -89.00,   787.40,  -954.60,   110.90}},
{ "Richman",                       {647.50,  -954.60,   -89.00,   768.60,  -860.60,   110.90}},
{ "Richman",                       {225.10, -1369.60,   -89.00,   334.50, -1292.00,   110.90}},
{ "Richman",                       {225.10, -1292.00,   -89.00,   466.20, -1235.00,   110.90}},
{ "Richman",                        {72.60, -1404.90,   -89.00,   225.10, -1235.00,   110.90}},
{ "Richman",                        {72.60, -1235.00,   -89.00,   321.30, -1008.10,   110.90}},
{ "Richman",                       {321.30, -1235.00,   -89.00,   647.50, -1044.00,   110.90}},
{ "Richman",                       {321.30, -1044.00,   -89.00,   647.50,  -860.60,   110.90}},
{ "Richman",                       {321.30,  -860.60,   -89.00,   687.80,  -768.00,   110.90}},
{ "Richman",                       {321.30,  -768.00,   -89.00,   700.70,  -674.80,   110.90}},
{ "Robada Intersection",         {-1119.00,  1178.90,   -89.00,  -862.00,  1351.40,   110.90}},
{ "Roca Escalante",               {2237.40,  2202.70,   -89.00,  2536.40,  2542.50,   110.90}},
{ "Roca Escalante",               {2536.40,  2202.70,   -89.00,  2625.10,  2442.50,   110.90}},
{ "Rockshore East",               {2537.30,   676.50,   -89.00,  2902.30,   943.20,   110.90}},
{ "Rockshore West",               {1997.20,   596.30,   -89.00,  2377.30,   823.20,   110.90}},
{ "Rockshore West",               {2377.30,   596.30,   -89.00,  2537.30,   788.80,   110.90}},
{ "Rodeo",                          {72.60, -1684.60,   -89.00,   225.10, -1544.10,   110.90}},
{ "Rodeo",                          {72.60, -1544.10,   -89.00,   225.10, -1404.90,   110.90}},
{ "Rodeo",                         {225.10, -1684.60,   -89.00,   312.80, -1501.90,   110.90}},
{ "Rodeo",                         {225.10, -1501.90,   -89.00,   334.50, -1369.60,   110.90}},
{ "Rodeo",                         {334.50, -1501.90,   -89.00,   422.60, -1406.00,   110.90}},
{ "Rodeo",                         {312.80, -1684.60,   -89.00,   422.60, -1501.90,   110.90}},
{ "Rodeo",                         {422.60, -1684.60,   -89.00,   558.00, -1570.20,   110.90}},
{ "Rodeo",                         {558.00, -1684.60,   -89.00,   647.50, -1384.90,   110.90}},
{ "Rodeo",                         {466.20, -1570.20,   -89.00,   558.00, -1385.00,   110.90}},
{ "Rodeo",                         {422.60, -1570.20,   -89.00,   466.20, -1406.00,   110.90}},
{ "Rodeo",                         {466.20, -1385.00,   -89.00,   647.50, -1235.00,   110.90}},
{ "Rodeo",                         {334.50, -1406.00,   -89.00,   466.20, -1292.00,   110.90}},
{ "Royal Casino",                 {2087.30,  1383.20,   -89.00,  2437.30,  1543.20,   110.90}},
{ "San Andreas Sound",            {2450.30,   385.50,  -100.00,  2759.20,   562.30,   200.00}},
{ "Santa Flora",                 {-2741.00,   458.40,    -7.60, -2533.00,   793.40,   200.00}},
{ "Santa Maria Beach",             {342.60, -2173.20,   -89.00,   647.70, -1684.60,   110.90}},
{ "Santa Maria Beach",              {72.60, -2173.20,   -89.00,   342.60, -1684.60,   110.90}},
{ "Shady Cabin",                 {-1632.80, -2263.40,    -3.00, -1601.30, -2231.70,   200.00}},
{ "Shady Creeks",                {-1820.60, -2643.60,    -8.00, -1226.70, -1771.60,   200.00}},
{ "Shady Creeks",                {-2030.10, -2174.80,    -6.10, -1820.60, -1771.60,   200.00}},
{ "Sobell Rail Yards",            {2749.90,  1548.90,   -89.00,  2923.30,  1937.20,   110.90}},
{ "Spinybed",                     {2121.40,  2663.10,   -89.00,  2498.20,  2861.50,   110.90}},
{ "Starfish Casino",              {2437.30,  1783.20,   -89.00,  2685.10,  2012.10,   110.90}},
{ "Starfish Casino",              {2437.30,  1858.10,   -39.00,  2495.00,  1970.80,    60.90}},
{ "Starfish Casino",              {2162.30,  1883.20,   -89.00,  2437.30,  2012.10,   110.90}},
{ "Temple",                       {1252.30, -1130.80,   -89.00,  1378.30, -1026.30,   110.90}},
{ "Temple",                       {1252.30, -1026.30,   -89.00,  1391.00,  -926.90,   110.90}},
{ "Temple",                       {1252.30,  -926.90,   -89.00,  1357.00,  -910.10,   110.90}},
{ "Temple",                        {952.60, -1130.80,   -89.00,  1096.40,  -937.10,   110.90}},
{ "Temple",                       {1096.40, -1130.80,   -89.00,  1252.30, -1026.30,   110.90}},
{ "Temple",                       {1096.40, -1026.30,   -89.00,  1252.30,  -910.10,   110.90}},
{ "The Camel's Toe",              {2087.30,  1203.20,   -89.00,  2640.40,  1383.20,   110.90}},
{ "The Clown's Pocket",           {2162.30,  1783.20,   -89.00,  2437.30,  1883.20,   110.90}},
{ "The Emerald Isle",             {2011.90,  2202.70,   -89.00,  2237.40,  2508.20,   110.90}},
{ "The Farm",                    {-1209.60, -1317.10,   114.90,  -908.10,  -787.30,   251.90}},
{ "The Four Dragons Casino",      {1817.30,   863.20,   -89.00,  2027.30,  1083.20,   110.90}},
{ "The High Roller",              {1817.30,  1283.20,   -89.00,  2027.30,  1469.20,   110.90}},
{ "The Mako Span",                {1664.60,   401.70,     0.00,  1785.10,   567.20,   200.00}},
{ "The Panopticon",               {-947.90,  -304.30,    -1.10,  -319.60,   327.00,   200.00}},
{ "The Pink Swan",                {1817.30,  1083.20,   -89.00,  2027.30,  1283.20,   110.90}},
{ "The Sherman Dam",              {-968.70,  1929.40,    -3.00,  -481.10,  2155.20,   200.00}},
{ "The Strip",                    {2027.40,   863.20,   -89.00,  2087.30,  1703.20,   110.90}},
{ "The Strip",                    {2106.70,  1863.20,   -89.00,  2162.30,  2202.70,   110.90}},
{ "The Strip",                    {2027.40,  1783.20,   -89.00,  2162.30,  1863.20,   110.90}},
{ "The Strip",                    {2027.40,  1703.20,   -89.00,  2137.40,  1783.20,   110.90}},
{ "The Visage",                   {1817.30,  1863.20,   -89.00,  2106.70,  2011.80,   110.90}},
{ "The Visage",                   {1817.30,  1703.20,   -89.00,  2027.40,  1863.20,   110.90}},
{ "Unity Station",                {1692.60, -1971.80,   -20.40,  1812.60, -1932.80,    79.50}},
{ "Valle Ocultado",               {-936.60,  2611.40,     2.00,  -715.90,  2847.90,   200.00}},
{ "Verdant Bluffs",                {930.20, -2488.40,   -89.00,  1249.60, -2006.70,   110.90}},
{ "Verdant Bluffs",               {1073.20, -2006.70,   -89.00,  1249.60, -1842.20,   110.90}},
{ "Verdant Bluffs",               {1249.60, -2179.20,   -89.00,  1692.60, -1842.20,   110.90}},
{ "Verdant Meadows",                {37.00,  2337.10,    -3.00,   435.90,  2677.90,   200.00}},
{ "Verona Beach",                  {647.70, -2173.20,   -89.00,   930.20, -1804.20,   110.90}},
{ "Verona Beach",                  {930.20, -2006.70,   -89.00,  1073.20, -1804.20,   110.90}},
{ "Verona Beach",                  {851.40, -1804.20,   -89.00,  1046.10, -1577.50,   110.90}},
{ "Verona Beach",                 {1161.50, -1722.20,   -89.00,  1323.90, -1577.50,   110.90}},
{ "Verona Beach",                 {1046.10, -1722.20,   -89.00,  1161.50, -1577.50,   110.90}},
{ "Vinewood",                      {787.40, -1310.20,   -89.00,   952.60, -1130.80,   110.90}},
{ "Vinewood",                      {787.40, -1130.80,   -89.00,   952.60,  -954.60,   110.90}},
{ "Vinewood",                      {647.50, -1227.20,   -89.00,   787.40, -1118.20,   110.90}},
{ "Vinewood",                      {647.70, -1416.20,   -89.00,   787.40, -1227.20,   110.90}},
{ "Whitewood Estates",             {883.30,  1726.20,   -89.00,  1098.30,  2507.20,   110.90}},
{ "Whitewood Estates",            {1098.30,  1726.20,   -89.00,  1197.30,  2243.20,   110.90}},
{ "Willowfield",                  {1970.60, -2179.20,   -89.00,  2089.00, -1852.80,   110.90}},
{ "Willowfield",                  {2089.00, -2235.80,   -89.00,  2201.80, -1989.90,   110.90}},
{ "Willowfield",                  {2089.00, -1989.90,   -89.00,  2324.00, -1852.80,   110.90}},
{ "Willowfield",                  {2201.80, -2095.00,   -89.00,  2324.00, -1989.90,   110.90}},
{ "Willowfield",                  {2541.70, -1941.40,   -89.00,  2703.50, -1852.80,   110.90}},
{ "Willowfield",                  {2324.00, -2059.20,   -89.00,  2541.70, -1852.80,   110.90}},
{ "Willowfield",                  {2541.70, -2059.20,   -89.00,  2703.50, -1941.40,   110.90}},
{ "Yellow Bell Station",          {1377.40,  2600.40,   -21.90,  1492.40,  2687.30,    78.00}},
// Main Zones
{ "Los Santos",                     {44.60, -2892.90,  -242.90,  2997.00,  -768.00,   900.00}},
{ "Las Venturas",                  {869.40,   596.30,  -242.90,  2997.00,  2993.80,   900.00}},
{ "Bone County",                 {-480.50,   596.30,  -242.90,   869.40,  2993.80,   900.00}},
{ "Tierra Robada",              {-2997.40,  1659.60,  -242.90,  -480.50,  2993.80,   900.00}},
{ "Tierra Robada",               {-1213.90,   596.30,  -242.90,  -480.50,  1659.60,   900.00}},
{ "San Fierro",                  {-2997.40, -1115.50,  -242.90, -1213.90,  1659.60,   900.00}},
{ "Red County",                  {-1213.90,  -768.00,  -242.90,  2997.00,   596.30,   900.00}},
{ "Flint County",                {-1213.90, -2892.90,  -242.90,    44.60,  -768.00,   900.00}},
{ "Whetstone",                   {-2997.40, -2892.90,  -242.90, -1213.90, -1115.50,   900.00}}
};

public Encrypt(string[])
{
    for(new x=0; x < strlen(string); x++)
      {
          string[x] += (3^x) * (x % 15);
          if(string[x] > (0xff))
          {
              string[x] -= 256;
          }
      }
    return 1;
}

stock right(sorrce[], len)
{
    new retval[MAX_STRING], srclen;
    srclen = strlen(sorrce);
    strmid(retval, sorrce, srclen - len, srclen, MAX_STRING);
    return retval;
}

stock ini_GetKey( line[] )
{
    new keyRes[128];
    keyRes[0] = 0;
    if ( strfind( line , "=" , true ) == -1 ) return keyRes;
    strmid( keyRes , line , 0 , strfind( line , "=" , true ) , sizeof( keyRes) );
    return keyRes;
}

stock ini_GetValue( line[] )
{
    new valRes[128];
    valRes[0]=0;
    if ( strfind( line , "=" , true ) == -1 ) return valRes;
    strmid( valRes , line , strfind( line , "=" , true )+1 , strlen( line ) , sizeof( valRes ) );
    return valRes;
}
stock IsPlayerInPark(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 1866.346 && y >= -1259.454 && x <= 2052.685 && y <= -1137.074) return 1;
    else return 0;
}
stock IsPlayerInCemiterio(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 791.5826 && y >= -1141.6468 && x <= 967.5826 && y <= -1061.6468) return 1;
    else return 0;
}
stock IsPlayerInPosto(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= -146.9439 && y >= -1249.0484 && x <= -2.9439 && y <= -1081.0484) return 1;
    else return 0;
}
stock IsPlayerInGamer(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 2152.305175 && y >= -149.739685 && x <= 2544.305175 && y <= 202.260314) return 1;
    else return 0;
}
stock IsPlayerInShop(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 1056.1223 && y >= -1575.7773 && x <= 1192.1223 && y <= -1415.7773) return 1;
    else return 0;
}
stock IsPlayerInSkate(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 1861.9410 && y >= -1450.6462 && x <= 1976.5867 && y <= -1351.4069) return 1;
    else return 0;
}
stock IsPlayerInEstacao(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 1687.613 && y >= -1958.204 && x <= 1813.106 && y <= -1859.51) return 1;
    else return 0;
}
stock IsPlayerInCasarao(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 1098.173 && y >= -2084.531 && x <= 1299.723 && y <= -2005.577) return 1;
    else return 0;
}
stock IsPlayerInLosSantos(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 44.60 && y >= -2892.90 && x <= 2997.00 && y <= -768.00) return 1;
    else return 0;
}
stock GetPlayer2DZone(playerid, zone[], len)
{
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    for(new i = 0; i != sizeof(gSAZones); i++ )
    {
        if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4])
        {
            return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
        }
    }
    return 0;
}
stock ChecarveiculoBPG(Float:radi, playerid, vehicleid)
{
    if(IsPlayerConnected(playerid))
    {
        new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z;
        GetPlayerPos(playerid,PX,PY,PZ);
        GetVehiclePos(vehicleid, X,Y,Z);
        new Float:Distance = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);
        if(Distance <= radi*radi)
        {
            return 1;
        }
    }
    return 0;
}
stock GetWeaponModel(weaponid)
{
    switch(weaponid)
    {
        case 1:
            return 331;

        case 2..8:
            return weaponid+331;

        case 9:
            return 341;

        case 10..15:
            return weaponid+311;

        case 16..18:
            return weaponid+326;

        case 22..29:
            return weaponid+324;

        case 30,31:
            return weaponid+325;

        case 32:
            return 372;

        case 33..45:
            return weaponid+324;

        case 46:
            return 371;
    }
    return 0;
}
//==============[defines]======================//
new bool:TextShow[MAX_PLAYERS];
new bool:PlayerAnim[MAX_PLAYERS];
new UsouComando[MAX_PLAYERS] = 0;
new BateuCartao[MAX_PLAYERS] = 0;
new
    Text:TextoG,
    Text:TextoG2
;
new TomouPosto;
new TomouGamer;
new SemBombas[MAX_PLAYERS];
forward UsarNovamente(playerid);
forward BaterNovamente(playerid);
forward TomarNovamente();
forward TomarNovamente2();
forward VoltarBombas(playerid);
forward PresoMulta(playerid);
new OfAssalto[MAX_PLAYERS];
new precoassalto[MAX_PLAYERS];
new InAFoodPlace[MAX_PLAYERS];
new CreatedCar = 0;
new CreatedCars[30];
new MiraInfo[MAX_PLAYERS];
//Nome dos Carros
new vehName[][] ={
    "Landstalker","Bravura","Buffalo","Linerunner","Pereniel","Sentinel","Dumper","Firetruck","Trashmaster","Stretch","Manana","Infernus",
    "Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi","Washington","Bobcat","Mr Whoopee","BF Injection",
    "Hunter","Premier","Enforcer","Securicar","Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie",
    "Stallion","Rumpo","RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
    "Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Baron","RC Raider",
    "Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","ZR3 50","Walton","Regina",
    "Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper","Rancher","FBI Rancher","Virgo","Greenwood",
    "Jetmax","Hotring","Sandking","Blista Compact","Police Maverick","Boxville","Benson","Mesa","RC Goblin","Hotring Racer","Hotring Racer",
    "Bloodring Banger","Rancher","Super GT","Elegant","Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt","Tanker","RoadTrain",
    "Nebula","Majestic","Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
    "Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent","Bullet","Clover",
    "Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster A",
    "Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight","Trailer",
    "Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer","Emperor",
    "Wayfarer","Euros","Hotdog","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","Police Car","Police Car",
    "Police Car","Police Ranger","Picador","S.W.A.T.","Alpha","Phoenix","Glendale","Sadler","Luggage Trailer","Luggage Trailer",
    "Stair Trailer","Boxville","Farm Plow","Utility Trailer"
};
forward Fixhour(hora);
forward Clock();
new Text:TextData;
new Text:TextHora;
new Text:TextLogin;
new Text:TextLogin1;
new Text:NovaVersao;
new Text:TextPlayersOn;
//======================[NOVO ROUBAR]=================
//GLOBAIS
new GranaBanco = 0;
new GranaLot = 0;
new GranaPosto = 0;
new GranaLoja1 = 0;
new GranaLoja2 = 0;
new GranaPref = 0;
new roubando[MAX_PLAYERS];
new temporoubobanco = 0;
new temporoubolot = 0;
new temporouboposto = 0;
new temporouboloja1 = 0;
new temporouboloja2 = 0;
forward Aroubo();
forward Aroubo2();
forward Aroubo3();
forward Aroubo4();
forward Aroubo5();
forward Aroubo6();
//BANCO
new roubobanco;
new ProvocoBanco[MAX_PLAYERS];
new tempobanco;
forward RouboBanco(playerid);
//LOTERICA
new roubolot;
new ProvocoLot[MAX_PLAYERS];
new tempolot;
forward RouboLot(playerid);
//posto de gasolina abandonado
new rouboposto;
new ProvocoPostoGas[MAX_PLAYERS];
new tempoposto;
forward RouboPosto(playerid);
//LOJA DE ARMAS 1
new rouboloja1;
new ProvocoLoja1[MAX_PLAYERS];
new tempoloja1;
forward RouboLoja1(playerid);
//LOJA DE ARMAS 2
new rouboloja2;
new ProvocoLoja2[MAX_PLAYERS];
new tempoloja2;
forward RouboLoja2(playerid);
//PREFEITURA
new ProvocoPrefe[MAX_PLAYERS];
new tempoprefe;
new gatehit;
forward RouboPrefe(playerid);
//======================[FIM ROUBAR]=================
new TempoSinc;
forward Sincronizar(playerid);
new TempoLogin;
new TempoAn;
new TempoServicoTaxi;
new TempoServicoOnibus;
new TempoServicoPolicia;
new TempoServicoMedico;
new TempoServicoMecanico;
new TempoMecanico;
new TempoMedico;
new TempoAnPrefeito;
new TempoAnGov;
new Tempocbomba;
new Tempohbomba;
new TempoSincronizar;
forward LoginAgora(playerid);
forward CorridaOni();
forward hbomba();
forward cbomba();
forward Sinc();
forward Administrador(playerid);
forward Helpert(playerid);
forward CheckOwnerb(playerid);
forward CheckOwnerh(playerid);
new TempoAdministrador;
new ContarAdminOn;
new TempoHelper;
//new TempoEquiparNovamente[MAX_PLAYERS];
new TendoGuerra = 0;
//new PoderEquipar[MAX_PLAYERS] = 1;
new GZEstacao;
new donoestacao;
new GZCasarao;
new donocasarao;
new GuerranaEstacao;
new ProvocoEstacao[MAX_PLAYERS];
new TempoGuerraEstacao;
forward GuerraEstacao(playerid);
new GuerranoCasarao;
new ProvocoCasarao[MAX_PLAYERS];
new TempoGuerraCasarao;
forward GuerraCasarao(playerid);
enum ViniciusInfo
{
    Tels[20],
    PLojaA1,
    PLojaA2,
    PpLoja247,
    PpLoja2472,
    ArmaLoja[52],
    InicioGuerra,

};
new pcorridaoni;
new phbomba;
new pcbomba;
new psinc;
new vinnyInfo[MAX_PLAYERS][ViniciusInfo];
forward GuerraTerrorista(playerid);
forward GuerraFinalizarTerrorista(playerid);
new GZGuerra;
forward SendVIPMessage(color, string[]);
forward CheckHack();
new TempoCheckHack;
new Text:forum;
new spawnado[MAX_PLAYERS];
new TempoAnReporter;
new admtrampando[MAX_PLAYERS];
new helptrampando[MAX_PLAYERS];
new logouagora[MAX_PLAYERS];
new Float:FaceAngle[MAX_PLAYERS];
new Float:PlayerHPP[MAX_PLAYERS];
new VehicleIDD[MAX_PLAYERS];
new ammoo[13][MAX_PLAYERS];
new Float:APP[MAX_PLAYERS];
new vehicledd[MAX_PLAYERS];
new interior[MAX_PLAYERS];
new Float:xx[MAX_PLAYERS];
new Float:yy[MAX_PLAYERS];
new Float:zz[MAX_PLAYERS];
new skinneg[MAX_PLAYERS];
new gunsinc[13][MAX_PLAYERS];
new virt[MAX_PLAYERS];
new sincronizando[MAX_PLAYERS];
//================= Ant Hackers
new Float:xpoz, Float:ypoz, Float:zpoz;
new vehicleTime[MAX_PLAYERS], lastVehicle[MAX_PLAYERS];
new FakeKillOn = 0;
new SysDBOn = 0;
new bool:BanXiterOn;
new AntCarSpam = 1;
new FamilyBloqueada = 9999;
//new PlayerCarSpam[MAX_PLAYERS];
new antifakekill[MAX_PLAYERS];
new XiterCrashando[MAX_PLAYERS];
new IsXiter[MAX_PLAYERS];
// Equipar
new OnEquipado[MAX_PLAYERS];
//Equipar Máfia
new OnMafiaEquipado[MAX_PLAYERS];
// MudarNick
new MudarNickAceito[MAX_PLAYERS];
new MudarSenhaAceito[MAX_PLAYERS];
new tempoGranaTR;
new GZPark;
new GZCemiterio;
new GZPosto;
new GZShop;
new GZSkate;
new Dominando[MAX_PLAYERS];
forward GuerraPark(playerid);
forward GuerraCemiterio(playerid);
forward GuerraPosto(playerid);
forward GuerraGamer(playerid);
forward GuerraShop(playerid);
forward GuerraSkate(playerid);
forward GranaTerritorios();
new GuerranoPark;
new GuerranoCemiterio;
new GuerranoPosto;
new GuerranoGamer;
new GuerranoShop;
new GuerranoSkate;
new TempoGuerraPark;
new TempoGuerraCemiterio;
new TempoGuerraPosto;
new TempoGuerraGamer;
new TempoGuerraShop;
new TempoGuerraSkate;
new ProvocoPark[MAX_PLAYERS];
new ProvocoCemiterio[MAX_PLAYERS];
new ProvocoPosto[MAX_PLAYERS];
new ProvocoGamer[MAX_PLAYERS];
new ProvocoShop[MAX_PLAYERS];
new ProvocoSkate[MAX_PLAYERS];
new donoPark;
new donoCemiterio;
new donoPosto;
new donoShop;
new donoskate;
new PolicialInRonda[MAX_PLAYERS];
new VTrancado[MAX_VEHICLES] = 0;

new aNames[][] =
{
    "Desarmado", "Soqueira", "Taco de Golf", "Cacetete",
    "Faca", "Taco de Base-Ball", "Pá de pedreiro", "Cano", "Espada", "Motoserra", "Vibrador", "Vibrador", "Vibrador", "Vibrador",
    "Flores", "Pé de cabra", "Granada", "Bomba de Gás", "Coquetel-Molotov", "Desconhecido 19", "Desconhecido 20", "Jetpack", "Pistola 9mm", "Pistola 9mm com Silenciador",
    "Desert Eagle", "Shotgun", "Escopeta do cano serrado", "Escopeta de combate", "Micro Uzi", "MP5", "Ak-47", "M4", "Tec9", "Rifle", "Rifle-Sniper",
    "Lança Missil", "Lança Missil RPG", "Lança Chamas", "Minigun", "Explosivo Remoto", "Detonador", "Spray", "Extintor", "Camera", "Òculos de Visão noturna", "Òculos Infra Vermelho",
    "Paraquedas", "Desconhecido", "Desconhecido", "Desconhecido", "Desconhecido", "Desconhecido", "Desconhecido", "Desconhecido", "Desconhecido"
};
//portao
new sendername[MAX_PLAYER_NAME];
new Rouco[MAX_PLAYERS];
new SemAn[MAX_PLAYERS];
//new portaotriads;
new PortaoTwOPaCk1,PortaoTwOPaCk2,
PortaoFaTaL_ImperiuM1;
new Float:BusShowLocation[MAX_PLAYERS][4];
new BusShowLocationC[MAX_PLAYERS];
new BusrouteWest[MAX_PLAYERS][2];
new BusrouteEast[MAX_PLAYERS][2];
new NomeCarro[64];
forward NRouco(playerid);
forward NFlood(playerid);
forward NSemAn(playerid);
//Velocimetro do vinny
new Text:box,Text:tacho[MAX_PLAYERS],Text:VeInfo[MAX_PLAYERS],Text:kmhor[MAX_PLAYERS];
new Text:GazoInfo[MAX_PLAYERS],Text:LataInfo[MAX_PLAYERS],Text:TempoGasInfo[MAX_PLAYERS],Text:LocalInf[MAX_PLAYERS],Text:SpedUrl;
new Text:BoasVindas;
new Text:InfoBasicas;
new Text:RegBasicas;
new Text:CmdUteis;
new Text:TextPosto[MAX_PLAYERS];
new Text:LocaisUteis;
new Text:BoxTuto1;
new Text:BoxTuto2;
forward Velocimetro(playerid);
forward RemoveCone(playerid);
new Cone[10];
//new Updatesegundos = 1;
//score
forward ScoreLevel(playerid);
//CarVip
forward IsAVIP(playerid);
//forward IsAVIPCar(carid);
//Prefeito
forward IsAGOV(playerid);
forward IsAGOVCar(carid);
//Policia Civil
forward IsASse(playerid);
//Aztecas
forward IsAROTAs(playerid);
forward IsAEx(playerid);

//Jornaleiro
forward IsAJornal(playerid);
forward IsAJornalCar(carid);
//Assassinos
forward IsAHit(playerid);
forward IsAHitCar(carid);
forward IsATriadCar(carid);
forward IsATriad(playerid);
// produtos
forward IsAGamerCar(carid);
//Bikes
forward IsACivilCar(carid);
//GuerrilheirosIsraelitas
forward IsAHam(playerid);
forward IsAGICar(carid);
//Yakuza
forward IsAYa(playerid);
forward IsAYaCar(carid);
//Onibus/Taxis
forward IsAOni(playerid);
forward IsAOniCar(carid);
//Taxi
forward IsATaxi(playerid);
forward IsATaxiCar(carid);
//Snake
forward IsAFE(playerid);
forward IsAFECar(carid);
//HunTerS
forward IsAFD(playerid);
forward IsAFDCar(carid);
//Helper
forward IsAHelper(playerid);
forward IsAHelperCar(carid);
//Admin
forward IsAAdmin(playerid);
forward IsAAdminCar(carid);
//Snake
forward IsAPsyco(playerid);
//Bomba
//forward bomba(playerid);
//Gasolina
forward gasolina(playerid);
//Vagos
forward IsAVagos(playerid);
forward IsAVagosCar(carid);
//Snake
forward IsAFakers(playerid);
forward IsAFakersCar(carid);

//Johsons
forward IsAReggae(playerid);
forward IsAReggaeCar(carid);
//Ballas
forward IsABallas(playerid);
forward IsABallasCar(carid);
forward IsASonsCar(carid);
forward IsAHellCar(carid);
forward IsADriftCar(carid);
forward IsADrifters(playerid);
forward IsAStrikerSCar(carid);
forward IsAStrikerS(playerid);
//FARC
forward IsAAl(playerid);
forward IsAAlCar(carid);
//Groves
forward IsAGroove(playerid);
forward IsAGrooveCar(carid);
//Aztecas
forward IsAAzteca(playerid);
forward IsAAztecaCar(carid);
//Gates
forward PDEx2();
forward PortaoRally2();
forward PortaoX12();
forward PortaoReporterr2();
forward PortaoReporter2();
forward PortaoBallas();
//Portoes 19º BPM
forward PortaoClosedGPT();
forward PortaoClosedGPT2();
//forward PortaoTriads();
forward PortaoCivil();
forward PortaoTaxi2();
forward PoliciaFederalClosed();
forward PortaoFD2();
forward PortaoJn2();
forward PortaoJn5();
forward PortaoPf2();
//forward PortaoKillers12();
forward PortaoKillers22();
forward PortaoStrikerS12();
//forward PortaoStrikerS22();
forward PortaoPcc2();
forward PortaoDS1();
forward PortaoPre2();
forward PortaoPF12();
forward PortaoPF22();
forward PortaoPF32();
forward PortaoFECHADO99();
forward PortaoFECHADO98();
forward PortaoTriads12();
forward PortaoTriads22();
forward PortaoBope2();
forward PortaoDrifters2();
forward pd1();
forward pd2();
forward pint2();
forward gt3gate2();
forward gt3gate4();
forward pd3();
forward pd4();
forward pd5();
forward pd6();
forward pd7();
forward GaragemDpClosed();
forward GaragemDpClosed2();
forward pcclosed();
forward PFIIClosed2();
forward PFIIClosed3();
forward PCClosed();
forward PCClosed2();
forward PortaoGov2();
//outros
forward LoadProperty();
forward LoadBizz();
forward LoadSBizz();
/*forward OnPropUpdate();     */
forward LoadStuff();
forward SaveStuff();
forward LoadBoxer();
forward SaveBoxer();

forward ExtortionBiz(bizid, money);
forward ExtortionSBiz(bizid, money);
forward IsAtClothShop(playerid);
forward IsAtGasStation(playerid);
forward IsAtGasStationgang(playerid);
forward IsAtFishPlace(playerid);
forward IsAtCookPlace(playerid);
forward IsAtBar(playerid);
forward SearchingHit(playerid);
forward SetPlayerSpawn(playerid);
forward SetupPlayerForClassSelection(playerid);
forward SetPlayerTeamFromClass(playerid,classid);
forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);
forward CrimInRange(Float:radi, playerid,copid);
forward ABroadCast(COLOR,const string[],level);
forward GetClosestPlayer(p1);
forward IsPlayerInTurf(playerid, turfid);
forward PrintBizInfo(playerid,targetid);
forward PrintSBizInfo(playerid,targetid);
forward SetPlayerUnjail();
forward OtherTimer();
forward RingTonerRev();
forward RingToner();
forward HireCost(carid);
forward SBan(playerid, string[], string2[]);
forward BanLog(string[]);
forward KickLog(string[]);
forward IsAnAmbulanceCar(carid);
forward IsAAmbu(playerid);
forward IsAGOV(playerid);
forward IsAGatev(carid);
forward IsACopCar(carid);
forward IsAEnforcerCar(carid);
forward IsABlindadoCar(carid);
forward IsACaminhaozinhoCar(carid);
forward IsAMecCar(carid);
forward IsAMec(playerid);
forward IsAMLHCar(carid);
forward IsAMLH(playerid);
forward IsAPlane(carid);
forward IsABoat(carid);
forward IsACop(playerid);
forward IsAAssasinos(playerid);
forward IsAGang(playerid);
forward IsAClub(playerid);
forward IsAMon(playerid);
forward IsASons(playerid);
forward IsAHell(playerid);
forward IsAMember(playerid);
forward PaintballEnded();
forward StartPaintball();
forward PreparePaintball();
forward Float:GetDistanceBetweenPlayers(p1,p2);
forward GameModeExitFunc();
forward SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num);
forward SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi);
forward SetPlayerCriminal(playerid,declare,reason[]);
forward SetPlayerFree(playerid,declare,reason[]);
forward ShowStats(playerid,targetid);
forward SetPlayerToTeamColor(playerid);
forward GameModeInitExitFunc();
forward split(const strsrc[], strdest[][], delimiter);
forward OnPlayerLogin(playerid);
forward OnPlayerRegister(playerid);
forward BroadCast(COLOR,const string[]);
forward OOCNews(COLOR,const string[]);
forward SendEmpregoMessage(Emprego, COLOR, string[]);
forward SendFamilyMessage(family, COLOR, string[]);
forward ABroadCasth(COLOR,const string[],level);
forward ABroadCastah(COLOR,const string[],level);
forward FamyMsg(COLOR,const string[],level);
forward SoEuVejoMsm(COLOR,const string[]);
forward ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5);
forward ProxDetectorS(Float:radi, playerid, targetid);
forward ProxDetectorV(Float:radi, playerid, carroid);
forward ClearMarriage(playerid);
forward ClearCrime(playerid);
forward FishCost(playerid, fish);
forward ClearFishes(playerid);
forward ClearFishID(playerid, fish);
forward ClearCooking(playerid);
forward ClearCookingID(playerid, cook);
forward ClearGroceries(playerid);
forward Lotto(number);
forward CarCheck();
forward CarInit();
forward CarTow(carid);
forward CheckGas();
forward Abastecendo(playerid);
forward GasGang(playerid);
forward CorridaTrack();
forward SyncTime();
forward IsPlayerInZone(playerid, zoneid);
forward Production();
forward PayDay();
forward ini_GetKey( line[] );
forward ini_GetValue( line[] );
forward PlayerPlayMusic(playerid);
forward StopMusic(playerid);
forward PlayerFixRadio(playerid);
forward PlayerFixRadio2();
forward CustomPickups();
forward SetCamBack(playerid);
forward RemoveRoadblock(playerid);
forward RemoveParedao(playerid);
forward RemoveRoadBloq(playerid);
forward RemoveRoadPregos(playerid);
forward BackupClear(playerid, calledbytimer);
forward RemoveBarraca(playerid);
forward ClearChatbox(playerid, lines);

new NicksProibidos[][MAX_PLAYER_NAME]  ={
"com1","com2","com3","com4","com5","com6","com7","com8","com9","lpt1","lpt2","lpt3","lpt4","lpt5","lpt6","lpt7",
"lpt8","lpt9","clock$","prn","nul","con","CON","con","con1","aux","aux1","prn","PRN","AUX","BPF","BPG","BPL",
"Server_Lixao","crashar_servidor","Crashar_Servidor","com1.aux.com.ipt3"
};
new PortaoOnibus;
new kickname[MAX_PLAYER_NAME];
new victmname[MAX_PLAYER_NAME];
new GetPlayerDB[MAX_PLAYERS];
//------------------------------------------------------------------------------------------------------
new Float:trazerx,Float:trazery,Float:trazerz;
new Float:vc,Float:vy,Float:vz;
new TrazerTodosX1[MAX_PLAYERS];
new OnTrazerX1;
new bool:NoEvento[MAX_PLAYERS] = false;
//Portoes
new pyakuza1, acn;
new portaomec2,portaomec;
forward fecharyakuza1();
forward fecharportaomec2();
forward portaomecf();
new CarFakers[21];
new PortaoFakers1;
new PDEx;
new PYiakin[ 3 ];
new PortaoRally;
new PortaoX1;
new PortaoReporter;
new PortaoReporterr;
new PortaoTaxi;
new pfdoor;
new pfdoor2;
new PortaoFD;
new PortaoJn;
new PortaoJn3;
new PortaoJn4;
new PortaoPcc;
new PortaoPf;
//new PortaoKillers1;
new PortaoKillers2;
new PortaoStrikerS1;
//new PortaoStrikerS2;
new PortaoDS;
new PortaoPF1;
new PortaoPF2;
new PortaoPF4;
new PortaoPF5;
new PortaoTriads1;
new PortaoTriads2;
new PortaoBope;
new PortaoDrifters;
new PDDOORa;
new PDDOORb;
new PDDOORc;
new PDGATE;
new PDGATE2;
new PINT;
new PDGARAGE;
new PDELEVATOR;
new gatepf3;
new gatepf2;
new gt3gate;
new gt3gate3;
new PortaoGov;
new PortaoPre;
new PortaoPRFCarros;
new Tax = 0;
new TaxValue = 0;
new Jackpot = 0;
new StartingPaintballRornd = 0;
new AnnorncedPaintballRornd = 0;
new PaintballPlayers = 0;
new PaintballRornd = 0;
new PaintballWinner = 999;
new PaintballWinnerKills = 0;
new InRing = 0;
new RorndStarted = 0;
new BoxDelay = 0;
new Boxer1 = 9999;
new Boxer2 = 9999;
new TBoxer = 9999;
new PlayerBoxing[MAX_PLAYERS];
new hitfound = 0;
new hitidd = 999;
new Copsronda = 0;
new CopsrondaCall = 999;
new CopsrondaCallTime[MAX_PLAYERS];
new CopsrondaAccepted[MAX_PLAYERS];
new Medics = 0;
new MedicCall = 999;
new MedicCallTime[MAX_PLAYERS];
new MedicAccepted[MAX_PLAYERS];
new Mechanics = 0;
new Advogado = 0;
new MechanicCall = 999;
new ChamoAd;
new MechanicCallTime[MAX_PLAYERS];
new MechanicAccepted[MAX_PLAYERS];
new TaxiDrivers = 0;
new TaxiCall = 999;
new TaxiCallTime[MAX_PLAYERS];
new TaxiAccepted[MAX_PLAYERS];
new BusDrivers = 0;
new BusCall = 999;
new BusCallTime[MAX_PLAYERS];
new BusAccepted[MAX_PLAYERS];
new TransportDuty[MAX_PLAYERS];
new TransportValue[MAX_PLAYERS];
new TransportMoney[MAX_PLAYERS];
new TransportTime[MAX_PLAYERS];
new TransportCost[MAX_PLAYERS];
new TransportDriver[MAX_PLAYERS];
new EmpregoDuty[MAX_PLAYERS];
new EmRondaCop[MAX_PLAYERS];
new RegistrationStep[MAX_PLAYERS];
new MapIconsShown[MAX_PLAYERS];
new PlayerPaintballing[MAX_PLAYERS];
new PlayerPaintballKills[MAX_PLAYERS];
new UsedFind[MAX_PLAYERS];
new WatchingTV[MAX_PLAYERS];
new NoFuel[MAX_PLAYERS];
new MatsHolding[MAX_PLAYERS];
new DivorceOffer[MAX_PLAYERS];
new MarriageCeremoney[MAX_PLAYERS];
new ProposeOffer[MAX_PLAYERS];
new ProposedTo[MAX_PLAYERS];
new GotProposedBy[MAX_PLAYERS];
new MarryWitness[MAX_PLAYERS];
new MarryWitnessOffer[MAX_PLAYERS];
new TicketOffer[MAX_PLAYERS];
new TicketMoney[MAX_PLAYERS];
new PlayerStoned[MAX_PLAYERS];
new ConsumingMoney[MAX_PLAYERS];
new FishCornt[MAX_PLAYERS];
//new SpawnChange[MAX_PLAYERS];
new PlayerDrunk[MAX_PLAYERS];
new PlayerDrunkTime[MAX_PLAYERS];
new PlayerTazeTime[MAX_PLAYERS];
new FindTimePoints[MAX_PLAYERS];
new FindTime[MAX_PLAYERS];
new BoxWaitTime[MAX_PLAYERS];
new TestFishes[MAX_PLAYERS];
new BoxOffer[MAX_PLAYERS];
new CarOffer[MAX_PLAYERS];
new CarPrice[MAX_PLAYERS];
new CarID[MAX_PLAYERS];
new CarCalls[MAX_PLAYERS];
new GotHit[MAX_PLAYERS];
new GoChase[MAX_PLAYERS];
new GetChased[MAX_PLAYERS];
new OrderReady[MAX_PLAYERS];
new ConnectedToPC[MAX_PLAYERS];
new Hospital[MAX_PLAYERS];
new PlayerTied[MAX_PLAYERS];
new PlayerCuffed[MAX_PLAYERS];
new PlayerCuffedTime[MAX_PLAYERS];
new LiveOffer[MAX_PLAYERS];
new TalkingLive[MAX_PLAYERS];
new PlacedNews[MAX_PLAYERS];
new SelectChar[MAX_PLAYERS];
new SelectCharID[MAX_PLAYERS];
new SelectCharPlace[MAX_PLAYERS];
new ChosenSkin[MAX_PLAYERS];
new GettingEmprego[MAX_PLAYERS];
new GuardOffer[MAX_PLAYERS];
new GuardPrice[MAX_PLAYERS];
new ApprovedAdvogado[MAX_PLAYERS];
new AdvogPreco[MAX_PLAYERS];
new ConviteAdv[MAX_PLAYERS];
new CurrentMoney[MAX_PLAYERS];
new Robbed[MAX_PLAYERS];
new RobbedTime[MAX_PLAYERS];
new CP[MAX_PLAYERS];
new MoneyMessage[MAX_PLAYERS];
new Condom[MAX_PLAYERS];
new MendigoOffer[MAX_PLAYERS];
new MendigoPrice[MAX_PLAYERS];
new SexOffer[MAX_PLAYERS];
new SexPrice[MAX_PLAYERS];
new RepairOffer[MAX_PLAYERS];
new RepairPrice[MAX_PLAYERS];
new RefillOffer[MAX_PLAYERS];
new RefillPrice[MAX_PLAYERS];
new RepairCar[MAX_PLAYERS];
new DrugOffer[MAX_PLAYERS];
new DrugPrice[MAX_PLAYERS];
new DrugGram[MAX_PLAYERS];
new JailPrice[MAX_PLAYERS];
new WantedPoints[MAX_PLAYERS];
new OnDuty[MAX_PLAYERS];
new gPlayerCheckpointStatus[MAX_PLAYERS];
new gPlayerLogged[MAX_PLAYERS];
new LogandoPlayer[MAX_PLAYERS];
new gPlayerLogTries[MAX_PLAYERS];
new gPlayerSpawned[MAX_PLAYERS];
new gActivePlayers[MAX_PLAYERS];
new gLastCar[MAX_VEHICLES];
//new gNews[MAX_PLAYERS];
new gFam[MAX_PLAYERS];
new BigEar[MAX_PLAYERS];
new CellTime[MAX_PLAYERS];
new HireCar[MAX_PLAYERS];
new SafeTime[MAX_PLAYERS];
new PhoneOnline[MAX_PLAYERS];
new gDice[MAX_PLAYERS];
new gSpentCash[MAX_PLAYERS];
new SwitchKey[MAX_PLAYERS];
new Fixr[MAX_PLAYERS];
new Locator[MAX_PLAYERS];
new Mobile[MAX_PLAYERS];
new RingTone[MAX_PLAYERS];
new CallCost[MAX_PLAYERS];
new gPlayerConta[MAX_PLAYERS];
new gPlayerMission[MAX_PLAYERS];
new gLastDriver[302];
new portaodpauto;
new playerpickup[MAX_PLAYERS];
new ghour = 0;
new levelcost = 25000;
new callcost = 10; //20 seconds
new realchat = 1;
new timeshift = 0;
new othtimer;
new newmistimer;
new unjailtimer;
new turftimer;
new pickuptimer;
new productiontimer;
new Contastimer;
new checkgastimer;
new cartimer;
new levelexp = 4;
new cchargetime = 60;
new STD1[] = {0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3};
new STD2[] = {0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3};
new STD3[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3};
new STD4[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 3};
new Float:ChangePos[MAX_PLAYERS][3];
new ChangePos2[MAX_PLAYERS][2];
new Float:TeleportDest[MAX_PLAYERS][3];
new Float:TelePos[MAX_PLAYERS][6];
forward ReduceTimer(playerid);
new ReduceTime[MAX_PLAYERS];
forward RemovePlayerWeapon(playerid, weaponid);
new Gas[MAX_VEHICLES];
new Refueling[MAX_PLAYERS];
new GasETanto[MAX_PLAYERS];
new GranaGas[MAX_PLAYERS];
new Refuelinggang[MAX_PLAYERS];
new Sequestrado[MAX_PLAYERS];
public Float:GetDistanceBetweenPlayers(p1,p2)
{
    new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
    if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
    {
        return -1.00;
    }
    GetPlayerPos(p1,x1,y1,z1);
    GetPlayerPos(p2,x2,y2,z2);
    return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

new Music[MAX_PLAYERS];
new Songs[7][1] = {
{1187},
{1185},
{1183},
{1097},
{1076},
{1068},
{1062}
};

new FishNamesNumber = 22;
new FishNames[22][20] = {
{"Jacketa"},
{"Peixe Estragado"},
{"Garoupa"},
{"Cioppa"},
{"Calças"},
{"Truta"},
{"Cavalo Marinho"},
{"Lata"},
{"Sardinha"},
{"Lobo do Mar"},
{"Sapato"},
{"Ferro"},
{"Piranha"},
{"Peixe Vela"},
{"Atum"},
{"Enguia"},
{"Golfinho"},
{"Tubarão"},
{"Tartaruga"},
{"Peixe-Gato"},
{"Bolsa de Dinheiro"},
{"Peixe-Espada"}
};

new Float:PaintballSpawns[7][3] = {
{-974.8316,1090.0726,1344.9749},
{-1008.0152,1020.6591,1341.0078},
{-1056.7622,1022.5488,1343.5333},
{-1069.8796,1090.9489,1343.2849},
{-1110.4558,1095.7335,1341.8438},
{-1095.3258,1022.5496,1343.1650},
{-1131.6470,1057.6083,1346.4139}
};

new Float:gPresoPmSpawns[3][4] = {
{264.0141,82.0856,1001.0391,267.1115},
{264.1883,86.7433,1001.0391,268.5763},
{264.6288,77.5742,1001.0391,268.5763}
};
/*new Float:gPresoROTASpawns[3][4] = {
{219.1653,109.2390,999.0156,358.9629},
{223.2178,110.6664,999.0156,355.7435},
{227.1820,110.4537,999.0156,7.7288}
//{264.6288,77.5742,1001.0391,0.0}//default
};*/
new Float:gPresoPcSpawns[3][4] = {
{193.3041,174.5611,1003.0234,359.3811},
{198.5518,162.2574,1003.0300,177.3532},
{198.1076,175.0731,1003.0234,0.0}
};
/*new Float:gPresoPfSpawns[3][4] = {
{1869.29,1239.13,18.17,0.0},
{1868.97,1226.77,18.17,0.0},
{1868.61,1223.14,18.17,0.0}
};*/
new Float:gPresoBopeSpawns[5][4] = {
{1869.41,1229.80,18.17,0.0},
{1869.11,1233.12,18.17,0.0},
{1869.29,1239.13,18.17,0.0},
{1868.97,1226.77,18.17,0.0},
{1868.61,1223.14,18.17,0.0}
};

new Float:gInviteSpawns[10][4] = {
{-1976.5912,166.1818,36.9623,272.6393},
{-1975.8610,162.1945,36.9623,272.0126},
{-1975.7461,157.5404,36.9623,276.1093},
{-1975.2136,151.4920,36.9623,268.2993},
{-1974.9963,145.3430,36.9623,269.2628},
{-1975.5842,140.8170,36.9623,269.8895},
{-1975.7874,134.0368,36.9623,271.7696},
{-1975.1681,129.0926,36.9623,270.8531},
{-1975.9069,121.4700,36.9623,270.5631},
{-1975.3311,112.7078,36.9623,267.7665}
};

new Float:gMedPlayerSpawns[2][3] = {
{1178.1,-1321.0,14.1},
{1177.7,-1325.0,14.0}
};
new Float:ConceSpawn[11][4] = {
{2784.7573,-1835.6709,9.5405,43.0568},
{2781.2344,-1838.8358,9.5206,29.1595},
{2776.4897,-1839.3440,9.5049,20.9151},
{2772.1289,-1842.0457,9.4905,19.4733},
{2766.9565,-1843.7014,9.4733,20.5247},
{2757.9744,-1847.2585,9.4375,20.3736},
{2752.5188,-1875.1747,9.4085,180.7251},
{2762.4429,-1876.4154,9.4481,180.9643},
{2772.4690,-1876.1725,9.4921,182.3796},
{2787.7598,-1876.2698,9.5581,181.1454},
{2802.8921,-1876.0167,9.6172,178.6075}
};
new Float:DuenteMacas[8][4] = {
{1711.8503,1193.0247,35.7302,178.1742},
{1711.7539,1191.0082,35.7302,178.8734},
{1711.6503,1189.2032,35.7302,178.1742},
{1711.5483,1187.4572,35.7302,178.1742},
{1711.8507,1185.5084,35.7302,181.3494},
{1711.9169,1183.7384,35.7302,181.3494},
{1711.9880,1181.8590,35.7302,181.3494},
{1712.0095,1179.9529,35.7302,179.7618}
};

forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);

enum pBoxingStats
{
    TitelName[32],
    TitelWins,
    TitelLoses,
};
new Titel[pBoxingStats];

enum pFishing
{
    pFish1[20],
    pFish2[20],
    pFish3[20],
    pFish4[20],
    pFish5[20],
    pWeight1,
    pWeight2,
    pWeight3,
    pWeight4,
    pWeight5,
    pFid1,
    pFid2,
    pFid3,
    pFid4,
    pFid5,
    pLastFish,
    pFishID,
    pLastWeight,
};
new Fishes[MAX_PLAYERS][pFishing];

enum pCooking
{
    pCook1[20],
    pCook2[20],
    pCook3[20],
    pCook4[20],
    pCook5[20],
    pCWeight1,
    pCWeight2,
    pCWeight3,
    pCWeight4,
    pCWeight5,
    pCookID1,
    pCookID2,
    pCookID3,
    pCookID4,
    pCookID5,
};
new Cooking[MAX_PLAYERS][pCooking];

enum pGroceries
{
    pChickens,
    pChicken,
    pHamburgers,
    pHamburger,
    pPizzas,
    pPizza,
};
new Groceries[MAX_PLAYERS][pGroceries];


enum eCars
{
    model_id,
    Float:pos_x,
    Float:pos_y,
    Float:pos_z,
    Float:z_angle,
};

enum hNews
{
    hTaken1,
    hTaken2,
    hTaken3,
    hTaken4,
    hTaken5,
    hAdd1[128],
    hAdd2[128],
    hAdd3[128],
    hAdd4[128],
    hAdd5[128],
    hContact1[128],
    hContact2[128],
    hContact3[128],
    hContact4[128],
    hContact5[128],
};
new News[hNews];

enum pInfo
{
    pOnline,
    Rufflesey[128],
    pLevel,
    pCone,
    pAdmin,
    pVip,
    gPupgrade,
    pConnectTime,
    pReg,
    pSex,
    pAge,
    pMuted,
    pExp,
    pCash,
    pConta,
    pCrimes,
    Rufflesills,
    pDeaths,
    pPhoneBook,
    pLottoNr,
    pFishes,
    pBiggestFish,
    pEmprego,
    pSalario,
    pHeadValue,
    pJailed,
    pJailTime,
    pAjustado,
    pMats,
    pDrogas,
    pDrogas2,
    pDrogas3,
    pLider,
    pMembro,
    pFamyLider,
    pFamyMember,
    pCargo,
    pSkin,
    pGold,
    pMV,
    pContractTime,
    pDetSkill,
    pSexSkill,
    pBoxSkill,
    pLawSkill,
    pMechSkill,
    pNewsSkill,
    pDrogasSkill,
    pCookSkill,
    pFishSkill,
    Float:pSHealth,
    pInt,
    pLocal,
    pTeam,
    pPnumber,
    pPHousekey,
    pPbiskey,
    pCarLic,
    pFlyLic,
    pBoatLic,
    pFishLic,
    pGunLic,
    pPayDay,
    pCDPlayer,
    pWins,
    pLoses,
    pAlcoholPerk,
    pDrugPerk,
    pMiserPerk,
    pPainPerk,
    pTraderPerk,
    pTut,
    pWarns,
    pMarried,
    pParedao,
    pRequestingBackup,
    pMask,
    pMaskuse,
    pBarraca,
    pMarriedTo[128],
    pSpawn,
    pSafeDrogas,
    pSafeDrogas2,
    pSafeDrogas3,
    psMats,
    pPHouseCarkey,
    pLuta,
    pDorgado,
    pDorgado2,
    pDoenca,
    pHelper,
    pLastDia,
    pLastMes,
    pLastAno,
    pLastHora,
    pLastMinuto,
    pLastSegundo,
    pVotou,
    pChave,
    pHosp,
    pHospTime,
    pTimeBlock,
    pWorkFree,
    pLiderBlock,
    pNomeBlock
};
new PlayerInfo[MAX_PLAYERS][pInfo];
new PlayerShotPlayer[MAX_PLAYERS][MAX_PLAYERS];
new pRoadblock[MAX_PLAYERS];
new pRoadBloq[MAX_PLAYERS];
new pRoadRampa[MAX_PLAYERS][10];
enum hInfo
{
    Float:hEntrancex,
    Float:hEntrancey,
    Float:hEntrancez,
    Float:hExitx,
    Float:hExity,
    Float:hExitz,
    hHealthx,
    hHealthy,
    hHealthz,
    hArmorrx,
    hArmorry,
    hArmorrz,
    hOwner[MAX_PLAYER_NAME],
    hDiscription[MAX_PLAYER_NAME],
    hValue,
    hHel,
    hArm,
    hInt,
    hLock,
    hOwned,
    hRooms,
    hRent,
    hRentabil,
    hTakings,
    hVec,
    hVcol1,
    hVcol2,
    hDate,
    hLevel,
    hWorld,
    Float:hSpawnX,
    Float:hSpawnY,
    Float:hSpawnZ,
    Float:hSpawnA,
    hVeiculo,
    hAtiva,
};
new HouseInfo[MAX_HOUSES][hInfo];
new HouseEntered[MAX_PLAYERS];

enum bInfo
{
    bOwned,
    bOwner[64],
    bMessage[128],
    bExtortion[MAX_PLAYER_NAME],
    Float:bEntranceX,
    Float:bEntranceY,
    Float:bEntranceZ,
    Float:bExitX,
    Float:bExitY,
    Float:bExitZ,
    bLevelNeeded,
    bBuyPrice,
    bEntranceCost,
    bTill,
    bLocked,
    bInterior,
    bProd,
    bMaxProd,
    bPlayerUsou,
};
new BizzInfo[MAX_BIZZES][bInfo];

enum sbInfo
{
    sbOwned,
    sbOwner[64],
    sbMessage[128],
    sbExtortion[MAX_PLAYER_NAME],
    Float:sbEntranceX,
    Float:sbEntranceY,
    Float:sbEntranceZ,
    sbLevel,
    sbBuyPrice,
    sbEntranceCost,
    sbTill,
    sbLocked,
    sbProd,
    sbMaxProd,
    sbAtiva,
    sbLucro,
    sbReceber,
    sbDonoON,
   // sbPlayerUsou,
};
new SBizzInfo[MAX_SBIZZES][sbInfo];

/*new HousePickup[MAX_HOUSES];

new SBizzPickup[MAX_SBIZZES];
new FazendaPickup[MAX_FAZENDA];             */
new BizzPickup[MAX_BIZZES];

new Text3D:HouseLabel[MAX_HOUSES];
new Text3D:BizzLabel[MAX_BIZZES];
new Text3D:SBizzLabel[MAX_SBIZZES];
new Text3D:FazendaLabel[MAX_FAZENDA];

new Text3D:DonodoPosto;
new Text3D:CofrePrefeitura;
new Text3D:LabelOrg1;
new Text3D:LabelOrg2;
new Text3D:LabelOrg4;
new Text3D:LabelOrg5;
new Text3D:LabelOrg6;
new Text3D:LabelOrg7;
new Text3D:LabelOrg8;
new Text3D:LabelOrg9;
new Text3D:LabelOrg10;
new Text3D:LabelOrg11;
new Text3D:LabelOrg12;
new Text3D:LabelOrg13;
new Text3D:LabelOrg14;
new Text3D:LabelOrg15;
new Text3D:LabelOrg16;
new Text3D:LabelOrg17;
new Text3D:LabelOrg18;
new Text3D:LabelOrg19;
new Text3D:LabelOrg20;
new Text3D:LabelOrg28;
new Text3D:LabelBanco;
new Text3D:LabelLot;
new Text3D:LabelPosto;
new Text3D:LabelLoja1;
new Text3D:LabelLoja2;
new Text3D:LabelPref;

enum pCrime
{
    pBplayer[32],
    pAccusing[32],
    pAccusedof[32],
    pVictim[32],
};
new PlayerCrime[MAX_PLAYERS][pCrime];

new GunPrice[30][1] = {
{124}, //parachute
{100}, //golfclub
{75}, //nightstick
{50}, //knife
{175}, //baseballbat
{75}, //shovel
{25}, //poolcue
{100}, //purpledildo
{125}, //whitedildo
{125}, //longwhitedildo
{125}, //whitedildo2
{50}, //flowers
{150}, //cane
{250}, //sdpistol
{250}, //colt45
{1000}, //deagle
{500}, //Tec9
{750}, //uzi
{750}, //mp5
{750}, //shotgun
{1500}, //spas12
{1000}, //sawnoff
{800}, //ak47
{800}, //m4
{250}, //rifle
{25}, //pistolammo
{20}, //shotgunammo
{12}, //smgammo
{20}, //assaultammo
{25} //rifle
};

new Peds[222][1] = {
{6},//Skin do Civil
{265},//TEAM_ADMIN
{267},{240},{228},{114},{120},{147},{294},{227},{61},{171},{270},{123},{59},{102},{108},{117},
{26},//Civis DOWN aqui
{26},{100},{256},{263},{262},{261},{260},{259},{258},{257},{256},{255},
{253},{252},{251},{249},{246},{245},{244},{243},{242},{241},{240},{239},
{238},{237},{236},{235},{234},{233},{232},{231},{230},{229},
{226},{225},{173},{174},{175},{224},{223},{222},{221},{220},{219},{218},
{217},{216},{215},{214},{213},{212},{211},{210},{209},
{207},{206},{205},{204},{203},{202},{201},{200},{199},{198},{197},{196},
{195},{194},{193},{192},{191},{190},{189},{185},{184},{183},
{182},{181},{180},{179},{178},{176},{172},{170},{168},{167},{162},
{161},{160},{159},{158},{157},{156},{155},{154},{153},{152},{151},
{146},{145},{144},{143},{142},{141},{140},{139},{138},{137},{136},{135},
{134},{133},{132},{131},{130},{129},{128},{254},{99},{97},{96},{95},{94},
{92},{90},{89},{88},{87},{85},{84},{83},{82},{81},{80},{79},{78},{77},{76},
{75},{73},{72},{69},{68},{67},{66},{64},{63},{62},{58},{57},{56},{55},
{54},{53},{52},{51},{50},{49},{45},{44},{43},{41},{39},{38},{37},{36},{35},
{34},{33},{32},{31},{30},{29},{28},{27},{26},{25},{24},{23},{22},{21},{20},
{19},{18},{17},{16},{15},{14},{13},{12},{11},{10},{1},{2},
{290},//ROSE
{291},//PAUL
{292},//CESAR
{187},
{296},//JIZZY
{297},//MADDOGG
{298},//CAT
{299}//ZERO
};
//----------------------------CARROS DAS CASAS!!!------------------------------//
new Float:HouseCarSpawns[216][8] = {
{1849.4982,-1925.5737,13.2900,269.0401},//House 1
{1871.3917,-1925.8879,13.2899,269.1748},//House 2
{1892.9766,-1926.0437,13.2903,271.2716},//House 3
{1914.0115,-1924.4537,13.2899,270.2092},//House 4
{1929.7886,-1926.0729,13.2902,270.7549},//House 5
{1939.3484,-1925.9573,13.2898,269.9824},//House 6
{1910.4330,-1118.2250,25.5575,181.0549},//House 7
{1180.7435,-1252.5255,14.9737,182.7825},//House 8
{1192.6936,-1273.5597,13.3416,87.6046},//House 9
{1175.0167,-1272.9294,13.3417,90.2634},//House 10
{2498.9478,-1249.5275,34.0686,270.1946},//House 11
{1170.9451,-1239.2083,18.3494,273.3052},//House 12
{1196.9413,-1238.5664,18.3943,273.2929},//House 13
{1176.4779,-1219.5706,18.4081,272.2165},//House 14
{1190.4327,-1219.2605,18.3734,91.7042},//House 15
{2787.4866,-1288.4287,42.1518,268.7791},//House 16
{2805.5789,-1288.3579,42.0388,88.0861}, //House 17
{2787.0332,-1313.7335,36.2163,272.2736},//House 18
{2805.9197,-1310.0641,36.9896,83.7590},//House 19
{2786.4358,-1340.6472,29.8615,271.9752},//House 20
{2805.2693,-1331.9712,31.8388,84.1128},//House 21
{2786.0234,-1365.7836,23.9176,273.3652},//House 22
{2801.8293,-1355.6475,26.0534,359.1473},//House 23
{1110.0980,-726.4769,100.2775,90.1167},//House 24
{259.7329,-1221.1926,74.6363,201.0530},//House 25
{1463.6920,-901.7015,54.6260,358.9970},//House 26
{1440.1053,-890.6041,50.4033,359.9137},//House 27
{251.8644,-1359.2205,52.9348,303.7466},//House 28
{225.6491,-1263.4418,66.3373,141.0180}, //House 29
{244.5874,-1265.7161,68.6251,129.7593},//House 30
{311.3341,-1335.1876,53.2553,38.0402},//House 31
{405.7558,-1263.5070,50.4031,21.9046}, //House 32
{658.3419,-1065.0410,48.6738,141.5126},//House 33
{346.8729,-1198.7612,76.2213,37.6200},//House 34
{322.6475,-1765.9531,4.4238,178.5158},//House 35
{295.5023,-1775.9580,4.2171,93.4352},//House 36
{280.8075,-1775.3854,4.0512,87.9319},//House 37
{207.1892,-1774.6537,3.6090,91.3147},//House 38
{192.9391,-1774.9485,3.4986,92.1630},//House 39
{158.1870,-1770.4294,4.1838,180.5296},//House 40
{232.5652,-1406.9209,51.4151,332.2393},//House 41
{893.5425,-1648.2144,13.3423,90.9365},//House 42
{865.2274,-1647.5223,13.3278,87.6618},//House 43
{858.6662,-1717.7675,13.3167,176.8085},//House 44
{859.5588,-1793.5956,13.7028,265.4355},//House 45
{886.3644,-1795.3136,13.4518,263.3625},//House 46
{186.3153,-1744.9629,4.1400,358.8522},//House 47
{-2662.8369,-286.4962,7.1653,45.2360},//House 48
{-2656.7075,-292.1844,7.1234,45.2123},//House 49
{762.1455,-1750.7178,12.5131,1.1641},//House 50
{762.5828,-1704.2640,5.4890,353.6793},//House 51
{763.5857,-1660.6586,4.2317,90.7014},//House 52
{757.2587,-1604.3864,13.0929,5.9952},//House 53
{688.2308,-1597.6438,13.9033,2.2492},//House 54
{644.3828,-1619.9209,14.9068,178.7542},//House 55
{651.8380,-1656.6346,14.5463,84.2223},//House 56
{640.4855,-1715.3002,14.0018,350.2966},//House 57
{263.4509,-1775.2330,4.0219,87.2185},//House 58
{229.2565,-1774.8066,3.9794,89.9125},//House 59
{1177.8580,-1108.5828,25.0556,96.3383},//House 60
{1148.6967,-1101.2035,25.3972,271.7426},//House 61
{1177.7563,-1067.5601,28.7511,89.4310},//House 62
{1148.2141,-1061.2251,29.4986,274.9547},//House 63
{1098.0648,-1060.9714,29.4398,89.6238},//House 64
{1098.4087,-1101.3031,25.3413,89.5804},//House 65
{1278.5043,-1098.5215,25.8433,86.8810},//House 66
{1247.6974,-1107.8274,25.2462,268.3052},//House 67
{1247.3267,-1067.8013,28.9153,269.5094},//House 68
{1278.1199,-1058.3632,29.5117,88.9960},//House 69
{1934.4705,-1122.1460,26.0856,180.4290},//House 70
{1991.4327,-1119.3549,26.5167,270.0136},//House 71
{2021.6805,-1128.7836,24.6966,88.9300},//House 72
{2051.9412,-1119.8440,24.5100,181.1352},//House 73
{2078.9299,-1128.1758,23.6885,2.2788},//House 74
{2089.0764,-1141.4445,25.2655,90.6571},//House 75
{479.7771,-1091.5778,82.2181,358.6423},//House 76
{2077.2048,-1188.1725,23.5396,180.4763},//House 77
{2091.2695,-1227.8802,23.7770,269.2285},//House 78
{2104.8574,-1238.3297,24.4608,359.5674},//House 79
{2185.0420,-1465.7026,25.2823,272.7695},//House 80
{2148.4448,-1238.5730,24.2841,0.6127},//House 81
{2138.3110,-1284.9482,24.4670,181.0458},//House 82
{2103.9817,-1276.1344,25.2348,179.9895},//House 83
{2094.7827,-1285.0341,24.7188,179.0456},//House 84
{2095.7930,-1316.7681,24.5058,0.8542},//House 85
{2141.3748,-1327.7395,25.2884,359.9716},//House 86
{2196.6633,-1280.3999,24.2767,181.8215},//House 87
{2216.8311,-1282.2571,24.3189,183.4800},//House 88
{2231.6025,-1293.4851,23.7217,271.0650},//House 89
{2255.3960,-1282.0201,25.0892,183.8116},//House 90
{2259.2869,-1392.6798,23.7864,87.6052},//House 91
{2245.5818,-1392.7546,23.8039,89.3087},//House 92
{2232.2793,-1392.7249,23.8124,91.1336},//House 93
{2451.4126,-2023.5222,13.3839,3.0543},//House 94
{2462.6924,-2015.7365,13.3705,269.7538},//House 95
{2497.5188,-2023.6563,13.3154,359.1064},//House 96
{2507.5095,-2016.0697,13.3386,272.9436},//House 97
{2473.3721,-1996.3116,13.3839,177.1863},//House 98
{166.8582,-1341.0671,69.5281,179.6169},//House 99
{1533.0730,-841.5164,65.0301,85.6957},//House 100
{1529.4301,-813.3212,71.6962,87.5072},//House 101
{1514.4915,-768.3907,80.1071,139.3631},//House 102
{1460.1550,-634.8544,95.6349,180.3095},//House 103
{1028.4092,-809.3570,101.6375,22.4174},//House 104
{1023.4676,-776.5500,102.8895,85.9234},//House 105
{976.9719,-826.1484,96.1396,27.7099},//House 106
{942.2021,-839.4097,94.3384,29.2666},//House 107
{967.4248,-759.9371,110.7354,97.0316},//House 108
{1354.3202,-629.7422,108.8383,15.4581},//House 109
{857.5845,-818.4150,88.4680,19.7793},//House 110
{873.1438,-868.6379,77.2717,25.7657},//House 111
{832.5815,-860.8075,69.6735,186.3269},//House 112
{830.2504,-886.6093,68.6002,240.1175},//House 113
{724.9798,-993.8918,52.4405,236.0503},//House 114
{1102.2498,-820.1213,86.7616,94.0184},//House 115
{686.1296,-1072.7681,49.3897,60.1605},//House 116
{619.2938,-1102.0067,46.5483,121.8466},//House 117
{635.1069,-1121.2477,44.9110,48.1246},//House 118
{542.3256,-1200.5511,44.2029,108.8708},//House 119
{422.6566,-1262.1964,51.4085,22.9768},//House 120
{568.3619,-1131.6035,50.4823,123.9380},//House 121
{1102.6473,-643.8488,112.7890,42.6801},//House 122
{1053.1963,-637.6051,119.9118,89.0114},//House 123
{1008.9766,-660.4042,120.9398,118.8311},//House 124
{912.9079,-665.6145,116.8016,237.1444},//House 125
{940.3124,-708.1927,122.0105,25.6720},//House 126
{866.5078,-710.9155,105.5066,329.7114},//House 127
{402.2745,-1148.2843,76.8555,146.8472},//House 128
{837.4636,-759.5170,84.9513,234.4386},//House 129
{2375.2605,-1146.4277,27.3545,178.0937},//House 130
{2400.0210,-1136.1881,29.8213,179.4731},//House 131
{2422.5791,-1131.1589,34.1230,182.4121},//House 132
{2490.6006,-1142.1642,38.0013,91.7532},//House 133
{2502.4731,-1133.9078,38.9480,153.9394},//House 134
{1855.3026,-2143.7849,13.2740,90.9317},//House 135
{1876.6418,-2143.8484,13.2740,90.6687},//House 136
{1898.3320,-2143.6541,13.2740,90.0334},//House 137
{1899.8561,-2060.0862,13.2752,269.2708},//House 138
{1877.6840,-2060.2092,13.2740,271.4854},//House 139
{1856.8407,-2060.2251,13.2739,269.8126},//House 140
{342.3443,-1876.0426,2.2556,185.0970},//House 141
{294.5735,-1876.1187,1.9910,179.1540},//House 142
{250.3848,-1875.6232,1.5720,182.1286},//House 143
{205.9865,-1876.2771,1.8068,180.8197},//House 144
{1184.6124,-1252.5688,14.9079,182.0491},//House 145
{643.0599,-1692.1389,14.6595,355.8115},//House 146
{2432.4036,-1058.5281,54.0708,1.0216},//House 147
{2428.7241,-1016.5968,54.0287,193.6693},//House 148
{2452.0002,-1056.6379,59.4693,356.1369},//House 149
{2454.2297,-1013.0950,59.4570,178.5090},//House 150
{2485.7505,-1015.7893,65.0382,152.5809},//House 151
{2475.2380,-1059.4473,66.5169,343.6566},//House 152
{2503.7432,-1025.2019,69.8130,177.6173},//House 153
{2497.3608,-1063.0977,69.8599,0.1788},//House 154
{1337.5875,-1096.0389,23.7476,171.7952},//House 155
{2067.6392,-1738.8765,13.6783,269.7427},//House 156
{2074.2124,-1714.0375,13.2683,180.2601},//House 157
{2052.5747,-1695.1714,13.2751,269.9927},//House 158
{2069.8877,-1653.6063,13.2616,270.4084},//House 159
{2074.3994,-1644.2268,13.3056,1.5210},//House 160
{2074.3162,-1627.4417,13.2695,0.3678},//House 161
{2009.4080,-1630.3995,13.2679,180.4287},//House 162
{2009.4829,-1640.2030,13.2681,180.4762},//House 163
{2009.6040,-1655.1643,13.2671,180.4767},//House 164
{2016.5885,-1707.6719,13.2685,90.1251},//House 165
{2009.2926,-1721.1993,13.2741,181.4235},//House 166
{2013.9171,-1737.2247,13.2739,91.1623},//House 167
{1965.1614,-1709.1593,15.6874,89.7320},//House 168
{1977.4946,-1708.0625,15.6905,270.3337},//House 169
{1966.4865,-1674.2998,15.6943,91.0181},//House 170
{1977.1470,-1674.1792,15.6924,272.6857},//House 171
{1965.3494,-1657.7709,15.6889,89.0905},//House 172
{1976.4122,-1657.5651,15.6904,268.6701},//House 173
{1964.0996,-1637.5804,15.6914,90.1747},//House 174
{1977.0326,-1637.9534,15.6924,90.9899},//House 175
{1983.6398,-1714.9231,15.6906,0.4947},//House 176
{1966.3846,-1682.8446,15.6877,359.3173},//House 177
{1962.2632,-1628.0461,15.6673,359.4508},//House 178
{2137.0073,-1483.8253,23.7542,1.6942},//House 179
{2142.0134,-1437.3711,24.4159,93.3585},//House 180
{2155.6753,-1423.6860,25.3094,89.9264},//House 181
{2150.2600,-1408.6781,24.9393,87.1573},//House 182
{2136.6177,-1359.7472,25.3103,181.0419},//House 183
{2138.8279,-1371.9531,24.0338,182.4558},//House 184
{2189.1489,-1376.1112,23.7610,90.5970},//House 185
{1724.8994,-2127.2815,13.3548,0.3840},
{1718.2008,-2119.5554,13.3504,92.4885},
{1744.9438,-2127.8958,13.3475,359.7429},
{1772.3884,-2126.9788,13.3475,359.7937},
{1793.5256,-2128.0461,13.3475,359.9629},
{1724.7358,-2098.8306,13.3474,180.4743},
{1747.5973,-2097.8967,13.3473,180.0130},
{1773.0033,-2098.4465,13.3474,179.5512},
{1784.1661,-2107.3918,13.2619,90.5782},
{1805.0066,-2107.1440,13.2617,89.6616},
{2465.7439,-1688.2839,13.2231,267.3799},
{2443.1267,-1645.1866,13.1773,179.7829},
{2403.8394,-1646.1586,13.2527,179.8597},
{2384.0750,-1645.7604,13.2320,179.6723},
{2372.7646,-1644.2150,13.2236,178.4814},
{2361.0459,-1677.3054,13.2497,0.3276},
{2393.1558,-1673.1257,13.6244,359.5457},
{2418.8188,-1672.2328,13.3117,0.5091},
{2327.0874,-1677.2684,14.1298,268.9741},
{2319.2739,-1717.8595,13.2516,180.0293},
{2308.7886,-1726.6083,13.1674,89.1289},
{2409.1560,-1719.4171,13.3826,178.3921},
{2390.1707,-1712.2106,13.3255,180.1817},
{2532.8218,-2012.6118,13.2561,90.5917},
{2532.8088,-2006.5491,13.2523,89.4100},
{2507.9360,-2004.3042,13.1111,89.6529},
{2494.6577,-1996.6238,13.2296,180.3268},
{2235.8276,-1639.0493,15.3949,161.2258},
{2264.2471,-1651.4939,15.2303,89.8430},
{2271.7920,-1646.1603,15.1795,179.6200},
{2306.1860,-1672.4305,14.0359,0.2121}
};
main()
{
print(" ");
print(" * GameMode Brasil Play Gamer v1.0 Ligada Com Sucess * ");
print(" ");
}
public SearchingHit(playerid)
{
    new searchhit = 0;
    for(new i=0; i<MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(searchhit == 0)
            {
                if(PlayerInfo[i][pHeadValue] > 0 && GotHit[i] == 0 && PlayerInfo[i][pMembro] != 8 && PlayerInfo[i][pMembro] != 24)
                {
                    searchhit = 1;
                    hitfound = 1;
                    hitidd = i;
                    for(new k=0; k<MaiorID; k++)
                    {
                        if(IsPlayerConnected(k))
                        {
                            if(PlayerInfo[k][pMembro] == 8 || PlayerInfo[k][pLider] == 8 || PlayerInfo[k][pMembro] == 24 || PlayerInfo[k][pLider] == 24)
                            {
                                SendClientMessage(k, COLOR_WHITE, "|______________ Agencia dos Assassinos ______________|");
                                SendClientMessage(k, COLOR_LIGHTBLUE, "Mensagem: Novo contrato disponivel.");
                                format(gstring, sizeof(gstring), "Contrato: %s   ID: %d   Valor: $%d", PlayerName(i), i, PlayerInfo[i][pHeadValue]);
                                SendClientMessage(k, COLOR_LIGHTBLUE, gstring);
                                SendClientMessage(k, COLOR_YELLOW, "Use darcont [ID], Para Atribuir o Contrato a um Assassíno.");
                            }
                        }
                    }
                    return 0;
                }
            }
        }
    }
    if(searchhit == 0)
    {
        SendClientMessage(playerid, COLOR_GREY, "   Nao ha contratos disponiveis!");
    }
    return 0;
}

public ExtortionBiz(bizid, money)
{
    format(gstring, sizeof(gstring), "Nenhum");
    if(strcmp(BizzInfo[bizid][bExtortion],gstring, true ) == 0 )
    {
        return 0;
    }
    for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            new wstring[MAX_PLAYER_NAME];
            format(gstring, sizeof(gstring), "%s", PlayerName(i));
            strmid(wstring, gstring, 0, strlen(gstring), 255);
            if(strcmp(BizzInfo[bizid][bExtortion] ,wstring, true ) == 0 )
            {
                new value = money / 100;
                value = value * 10;
                GivePlayerMoney(i, value);
                BizzInfo[bizid][bTill] -= value;
            }
        }
    }
    return 1;
}

public ExtortionSBiz(bizid, money)
{
    format(gstring, sizeof(gstring), "Ninguem");
    if(strcmp(SBizzInfo[bizid][sbExtortion],gstring, true ) == 0 )
    {
        return 0;
    }
    for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            new wstring[MAX_PLAYER_NAME];
            format(gstring, sizeof(gstring), "%s", PlayerName(i));
            strmid(wstring, gstring, 0, strlen(gstring), 255);
            if(strcmp(SBizzInfo[bizid][sbExtortion] ,wstring, true ) == 0 )
            {
                new value = money / 100;
                value = value * 10;
                GivePlayerMoney(i, value);
                SBizzInfo[bizid][sbTill] -= value;
            }
        }
    }
    return 1;
}

public PreparePaintball()
{
    for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(PlayerPaintballing[i] != 0)
            {
                SetPlayerVirtualWorld(i,0);
                SetPlayerInterior(i,10);
                SendClientMessage(i, COLOR_YELLOW, "O Paintball vai começar em 20 segundos.");
            }
        }
    }
    SetTimer("StartPaintball", 20000, 0);
    return 1;
}

public StartPaintball()
{
    PaintballRornd = 1;
    StartingPaintballRornd = 0;
    PaintballWinner = 999;
    PaintballWinnerKills = 0;
    for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(PlayerPaintballing[i] != 0)
            {
                ResetPlayerWeapons(i);
                GivePlayerWeapon(i, 29, 999);
                GivePlayerWeapon(i, 25, 999);
                GivePlayerWeapon(i, 31, 999);
                SetPlayerArmour(i, 100.0);
                SetPlayerHealth(i, 100.0);
                SetPlayerInterior(i,10);
                TogglePlayerControllable(i, 1);
                SendClientMessage(i, COLOR_YELLOW, "O Paintball começou, 5 minutos para acabar.");
                PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
            }
        }
    }
    SetTimer("PaintballEnded", 300000, 0);
    return 1;
}

public SendVIPMessage(color, string[])
{
 for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(PlayerInfo[i][pVip] >= 1 && !Voff[i])
            {
                SendClientMessage(i, color, string);
            }
        }
    }
}
forward ChatLider( color, msg[] );//Yiakin FEZ!!
public ChatLider( color, msg[] ){
    for( new i; i < MaiorID; i++ ){
        if( IsPlayerConnected( i ) ){
            if( PlayerInfo[ i ][ pLider ] > 0 && chatLider[ i ] == true ){
                SendClientMessage( i, color, msg );
            }
        }
    }
}

public PaintballEnded()
{
    for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(PlayerPaintballing[i] != 0)
            {
                if(IsPlayerConnected(PaintballWinner))
                {
                    format(gstring,sizeof(gstring), "** %s ganhou o PaintBall, Matou: %d",PlayerName(PaintballWinner),PaintballWinnerKills);
                    SendClientMessage(i, COLOR_LIGHTBLUE, gstring);
                    PaintballRornd = 0;
                }
                ResetPlayerWeapons(i);
                SetPlayerInterior(i,0);
                PlayerPaintballing[i] = 0;
                SetPlayerPos(i, SBizzInfo[10][sbEntranceX],SBizzInfo[10][sbEntranceY],SBizzInfo[10][sbEntranceZ]);
            }
        }
    }
    AnnorncedPaintballRornd = 0;
    PaintballRornd = 0;
    return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{


    new Nome[64];
    TogglePlayerControllable(playerid, 1);
    new string[128];
    new giveplayer[MAX_PLAYER_NAME];
    GetPlayerName(meavalie[playerid], giveplayer, sizeof(giveplayer));
    GetPlayerName(playerid, sendername, sizeof(sendername));
    if( dialogid == 5566 ){
        new linha[ 150 ];
        new str[ 1000 ];
        if( response ){
            if( listitem == 0 ){
                format( str, sizeof str, tpPlayer[ 0 ] );
                for( new i = 1; i < sizeof tpPlayer; i++ ){
                    format( linha, sizeof linha, tpPlayer[ i ] );
                    strcat( str, linha );
                }
            }
            if( listitem == 1 ){
                format( str, sizeof str, tpAnuncio[ 0 ] );
                for( new i = 1; i < sizeof tpAnuncio; i++ ){
                    format( linha, sizeof linha, tpAnuncio[ i ] );
                    strcat( str, linha );
                }
            }
            if( listitem == 2 ){
                format( str, sizeof str, tpInvasao[ 0 ] );
                for( new i = 1; i < sizeof tpInvasao; i++ ){
                    format( linha, sizeof linha, tpInvasao[ i ] );
                    strcat( str, linha );
                }
            }
            if( listitem == 3 ){
                format( str, sizeof str, tpModificacao[ 0 ] );
                for( new i = 1; i < sizeof tpModificacao; i++ ){
                    format( linha, sizeof linha, tpModificacao[ i ] );
                    strcat( str, linha );
                }
            }
            ShowPlayerDialog( playerid, 5567, DIALOG_STYLE_MSGBOX, "{FFFFFF}Lista de Punições", str, "Sair", "Voltar" );
        }
    }
    if( dialogid == 5567 ){
        if( !response )
            ShowPlayerDialog( playerid, 5566, DIALOG_STYLE_LIST, "{FFFFFF}Lista de Punições", "{FFFFFF}Players\nAnúncioes e Relatórios\nInvasões\nModificações e Cheaters", "Continuar", "Sair" );
    }
    if(dialogid == DIALOG_MV)
    {
        if(response)
        {
            switch (listitem)
            {
                case 0:
                {
                    new Mensagem[633];
                    strcat(Mensagem, "{FFFFFF}Por favor insira o código de transação que foi enviado ao seu e-mail\n");
                    strcat(Mensagem, "{FFFFFF}assim que o pagamento for confirmado, para que suas moedas verdes,\n possam ser ativadas.\n\n");
                    strcat(Mensagem, "{FFFFFF}Exemplo do código\n     {FF0000}8CECD04A-ECC6-4142-8484-E0F64BFB2B4E\n");
                    strcat(Mensagem, "{FFFFFF}Cole-o aqui nesta caixa e clique em confirmar, não passe este código a ninguém\n");
                    strcat(Mensagem, "{FFFFFF}mesmo que as moedas verdes sejam para outra pessoa.\n");
                    strcat(Mensagem, "{FFFFFF}OBS: O e-mail é enviado assim que o pagamento for confirmado, geralmente em 24 Horas.\n\n");
                    strcat(Mensagem, "{FF8080}ATENÇÃO: CASO NÃO ENCONTRE O E-MAIL, VERIFIQUE SEU LIXO ELETRÔNICO OU SUA CAIXA DE SPAM!");
                    ShowPlayerDialog(playerid, DIALOG_MV2, DIALOG_STYLE_INPUT, "Insira o código da transação", Mensagem, "Confirmar", "Cancelar");
                    return 1;
                }
                case 1:
                {
                    new mvs = PlayerInfo[playerid][pMV];
                 /*   if(PlayerInfo[playerid][pVip] != 0)
                    {
                        SendClientMessage(playerid, 0xB4B5B7FF, "Você já é VIP!");
                        return 1;
                    }          */
                    if(mvs == 0)    return  SendClientMessage(playerid, 0xB4B5B7FF, "[ERRO] Você não tem moedas verdes!");
                    if(mvs < 9999)  return  SendClientMessage(playerid, 0xB4B5B7FF, "[ERRO] Você não tem moedas verdes suficientes!");
                    if(mvs > 9999)
                    {


                    tipodovipcomprado[playerid] = 1;
                    format(strvinny,sizeof(strvinny),"Olá %s, Digite abaixo a quantidade\nde Meses de VIP Normal.\nVocê receberá os beneficios\nde todos os meses comprados de uma vez!",PlayerName(playerid));
                    ShowPlayerDialog(playerid, DIALOG_MV6, DIALOG_STYLE_INPUT,"Comprar VIP Normal",strvinny,"Comprar","Cancelar");

                    }
                    return 1;
                }
                case 2:
                {
                    new mvs = PlayerInfo[playerid][pMV];
                   /* if(PlayerInfo[playerid][pVip] != 0)
                    {
                        SendClientMessage(playerid, 0xB4B5B7FF, "Você já é VIP!");
                        return 1;
                    }   */
                    if(mvs == 0)    return  SendClientMessage(playerid, 0xB4B5B7FF, "[ERRO] Você não tem moedas verdes!");
                    if(mvs < 24999) return  SendClientMessage(playerid, 0xB4B5B7FF, "[ERRO] Você não tem moedas verdes suficientes!");
                    if(mvs > 24999)
                    {
                       tipodovipcomprado[playerid] = 2;
                     format(strvinny,sizeof(strvinny),"Olá %s, Digite abaixo a quantidade\nde Meses de SUPER VIP.\nVocê receberá os benefícios\nde todos os meses comprados de uma vez!",PlayerName(playerid));
                    ShowPlayerDialog(playerid, DIALOG_MV6, DIALOG_STYLE_INPUT,"Comprar SUPER VIP",strvinny,"Comprar","Cancelar");


                    }
                    return 1;
                }
                case 3:
                {
                    new mvs = PlayerInfo[playerid][pMV];
                    if(mvs == 0)    return  SendClientMessage(playerid, 0xB4B5B7FF, "[ERRO] Você não tem moedas verdes!");
                    if(mvs > 0)
                    {
                        new Mensagem[603];
                        strcat(Mensagem, "Digite o ID da pessoa que você quer doar estas moedas verdes!");
                        ShowPlayerDialog(playerid, DIALOG_MV3, DIALOG_STYLE_INPUT, "Doação de Moedas Verdes",Mensagem,"Doar","Cancelar");
                        return 1;
                    }
                }
            }
        }
        return 1;
    }
    if(dialogid == DIALOG_MV2)
    {
        if (response)
        {
            format(Fala,sizeof(Fala),"Codigos/%s.ini",inputtext);
            format(Fala2,sizeof(Fala2),"Codigos2/%s.ini",inputtext);
            if(dini_Exists(Fala))
            {
                new Total=dini_Int(Fala,"Quantidade")*10000;
                format(string,sizeof(string),"[VIP] Parabéns, Você acaba de receber R$ %d em Moedas Verdes!",Total);
                SendClientMessage(playerid,0xB4B5B7FF,string);
                PlayerInfo[playerid][pMV]+=Total;
                dini_Remove(Fala);
                return 1;
            }
            else if(dini_Exists(Fala2))
            {
                new Total=dini_Int(Fala2,"Quantidade")*25000;
                format(string,sizeof(string),"[VIP] Parabéns, Você acaba de receber R$ %d em Moedas Verdes!",Total);
                SendClientMessage(playerid,0xB4B5B7FF,string);
                PlayerInfo[playerid][pMV]+=Total;
                dini_Remove(Fala2);
                return 1;
            }
            else
            {
                SendClientMessage(playerid,0xB4B5B7FF,"[VIP] Código de transação inválido!");
                return 1;
            }
        }
    }
    if(dialogid == DIALOG_MV3)
    {
        if(response)
        {
            new giveplayerid = strval(inputtext);
            if(IsPlayerConnected(giveplayerid))
            {
                MVInfo[PessoaMV] = strval(inputtext);
                if(!strlen(inputtext))
                {
                    new Mensagem[603];
                    strcat(Mensagem, "Digite o ID da pessoa que você quer doar estas moedas verdes!");
                    ShowPlayerDialog(playerid, DIALOG_MV3, DIALOG_STYLE_INPUT, "Doação de Moedas Verdes",Mensagem,"Doar","Cancelar");
                    return 1;
                }
                else
                {
                        new Mensagem[603];
                        GetPlayerName(playerid, Nome, MAX_PLAYER_NAME);
                        format(Mensagem, sizeof(Mensagem), "Atualmente você tem: %d moedas verdes\nQuantas moedas verdes você deseja doar ?", PlayerInfo[playerid][pMV], Nome);
                        ShowPlayerDialog(playerid,DIALOG_MV4,DIALOG_STYLE_INPUT,"Doação de Moedas Verdes",Mensagem,"Doar","Cancelar");
                        return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Esse player não está logado!");
       return 1;
            }
        }
        return 1;
    }
    if(dialogid == DIALOG_MV4)
    {
        if(response)
        {
            if(!strlen(inputtext))
            {
                new Mensagem[603];
                GetPlayerName(playerid, Nome, MAX_PLAYER_NAME);
                format(Mensagem, sizeof(Mensagem), "Atualmente você tem: %d moedas verdes\nQuantas moedas verdes você deseja doar ?", PlayerInfo[playerid][pMV], Nome);
                ShowPlayerDialog(playerid,DIALOG_MV4,DIALOG_STYLE_INPUT,"Doação de Moedas Verdes",Mensagem,"Doar","Cancelar");
                return 1;
            }
            else
            {
                MVInfo[QuantidadeMV] = strval(inputtext);
                new mvs = PlayerInfo[playerid][pMV];
                if(mvs < MVInfo[QuantidadeMV])  return  SendClientMessage(playerid, 0xB4B5B7FF, "[ERRO] Você não tem moedas verdes suficientes!");
                if(MVInfo[QuantidadeMV] < 1)    return  SendClientMessage(playerid, 0xB4B5B7FF, "[ERRO] Você não não pode doar moedas negativas!");
                new Mensagem[603];
                //new aloka;
                //aloka == PlayerInfo[MVInfo[PessoaMV]];
                //GetPlayerName(PlayerInfo[MVInfo[PessoaMV]], Nome, MAX_PLAYER_NAME);
                format(Mensagem, sizeof(Mensagem), "Você deseja doar %d moedas verdes ?\nOBS: Esta ação é definitiva, caso você esteja vendendo Moedas Verdes",MVInfo[QuantidadeMV],Nome);
                format(Mensagem, sizeof(Mensagem), "Chame um admin primeiro e tenha certeza de que recebeu o combinado antes.");
                ShowPlayerDialog(playerid,DIALOG_MV5,DIALOG_STYLE_MSGBOX,"Doação de Moedas Verdes",Mensagem,"Sim","Não");
                return 1;
            }
        }
        return 1;
    }
    if(dialogid == DIALOG_MV5)
    {
        if(response == 1)
        {
            PlayerInfo[playerid][pMV]-=MVInfo[QuantidadeMV];
            PlayerInfo[MVInfo[PessoaMV]][pMV]+=MVInfo[QuantidadeMV];
            format(string, sizeof(string), "Você trasnferiu %d moedas verdes para: %s.",MVInfo[QuantidadeMV],PlayerName(MVInfo[PessoaMV]));
            SendClientMessage(playerid, COLOR_GRAD1, string);
            format(string, sizeof(string), "Você está recebendo uma doação de $ %d de Moedas Verdes de %s Tire SS deste momento, é muito importante.",MVInfo[QuantidadeMV], PlayerName(playerid));
            SendClientMessage(MVInfo[PessoaMV], COLOR_GRAD1, string);
            format(string,sizeof(string), "VipInfo: %s Transferiu $ %d de Moedas Verdes para a conta de: %s.",PlayerName(playerid),MVInfo[QuantidadeMV],PlayerName(MVInfo[PessoaMV]));
            ABroadCast(COLOR_YELLOW,string,1);
            return 1;
        }
        if(response == 0)
        {
            SendClientMessage(playerid, -1, "[VIP] Você cancelou!");
            return 1;
        }
    }
    if(dialogid == DialVinny(6))
    {
        if(response == 0) // direito
        {
            return SendClientMessage(playerid, -1, "Você Cancelou o menu de propriedades!");
        }
        else if(response == 1) // esquerdo
        {
            ShowPlayerDialog(playerid, DialVinny(7), DIALOG_STYLE_LIST, "{33CCFF}Menu Casa - Configurar", "Vender Casa\nEditar Preço\nEditar Nível\nEditar Tipo\nLocal do Veiculo\n{FF8080}Deletar Casa", "Ajustar", "Sair");
        }
        return 1;
    }
    if(dialogid == DialVinny(7))
    {
        if(response == 1) // esquerdo
        {
            if(listitem == 0)
            {
                OnPlayerCommandText(playerid,"/admvcasaid");
            }
            if(listitem == 1)
            {
            format(string,sizeof(string),"{FFFFFF} Coloque o Novo Valor à ser Ajustado, em seguida Clique em 'Confirmar'!");
            ShowPlayerDialog(playerid, DialVinny(8), DIALOG_STYLE_INPUT,"{33CCFF}Menu Casa - Preço",string,"Confirmar","");
            tipodialogH = 1;
            }
            if(listitem == 2)
            {
            format(string,sizeof(string),"{FFFFFF} Coloque o Novo Valor à ser Ajustado, em seguida Clique em 'Confirmar'!");
            ShowPlayerDialog(playerid, DialVinny(8), DIALOG_STYLE_INPUT,"{33CCFF}Menu Casa - Nível",string,"Confirmar","");
            tipodialogH = 2;

            }
            if(listitem == 3)
            {
            format(strvinny,sizeof(strvinny),"{FFFFFF} Coloque o Novo Valor à ser Ajustado, em seguida Clique em 'Confirmar'\n{FFB3FF}Legenda: 1 = Free, 2 = VIP e 3 = Super Vip!");
            ShowPlayerDialog(playerid, DialVinny(8), DIALOG_STYLE_INPUT,"{33CCFF}Menu Casa - Tipo",strvinny,"Confirmar","");

             tipodialogH = 3;
            }
            if(listitem == 4)
            {
                MenuCasa(playerid, 3);
            }
            if(listitem == 5)
            {
                ShowPlayerDialog(playerid, DialVinny(13), DIALOG_STYLE_MSGBOX,"{33CCFF}Menu Casa - Confirmação","{FFFFFF}Tem certeza que Deseja deletar esta Propriedade?","Sim","Não");
            }
        }
        else if(response == 0) // direito
        {
            SendClientMessage(playerid,-1,"Você saiu do Menu!");
        }
        return 1;
    }
    if(dialogid == DialVinny(13))
    {
        if(response == 1) // esquerdo
        {
                        format(string, sizeof(string), "Você deletou a Casa ID: %d, Dono: %s, Crie outra usando /menucasa!", casaid[playerid],HouseInfo[casaid[playerid]][hOwner]);
                        SendClientMessage(playerid, -1, string);
                        HouseInfo[casaid[playerid]][hHel] = 0;
                        HouseInfo[casaid[playerid]][hArm] = 0;
                        HouseInfo[casaid[playerid]][hHealthx] = 0;
                        HouseInfo[casaid[playerid]][hHealthy] = 0;
                        HouseInfo[casaid[playerid]][hHealthz] = 0;
                        HouseInfo[casaid[playerid]][hArmorrx] = 0;
                        HouseInfo[casaid[playerid]][hArmorry] = 0;
                        HouseInfo[casaid[playerid]][hArmorrz] = 0;
                        HouseInfo[casaid[playerid]][hLock] = 1;
                        HouseInfo[casaid[playerid]][hOwned] = 0;
                        HouseInfo[casaid[playerid]][hVec] = 475;
                        HouseInfo[casaid[playerid]][hVcol1] = -1;
                        HouseInfo[casaid[playerid]][hVcol2] = -1;
                        strmid(HouseInfo[casaid[playerid]][hOwner], "O estado", 0, strlen("O estado"), 255);
                        HouseInfo[casaid[playerid]][hEntrancex] = 0.000;
                        HouseInfo[casaid[playerid]][hEntrancey] = 0.000;
                        HouseInfo[casaid[playerid]][hEntrancez] = 0.000;
                        HouseInfo[casaid[playerid]][hSpawnX] = 0.000;
                        HouseInfo[casaid[playerid]][hSpawnY] = 0.000;
                        HouseInfo[casaid[playerid]][hSpawnZ] = 0.000;
                        HouseInfo[casaid[playerid]][hSpawnA] = 0.000;
                        HouseInfo[casaid[playerid]][hHel] = 0;
                        HouseInfo[casaid[playerid]][hAtiva] = 0;
                        /*Delete3DTextLabel(HouseLabel[casaid[playerid]]);
                        DestroyPickup(HousePickup[casaid[playerid]]);   */
                        DestroyVehicle(HouseInfo[casaid[playerid]][hVeiculo]);
                        SalvarCasa(casaid[playerid]);
                     //   DestroyAllDynamic3DTextLabels();

        }
        else ShowPlayerDialog(playerid, DialVinny(7), DIALOG_STYLE_LIST, "{33CCFF}Menu Casa - Configurar", "Vender Casa\nEditar Preço\nEditar Nível\nEditar Tipo\nLocal do Veiculo\n{FF8080}Deletar Casa", "Ajustar", "Sair");
    }
    if(dialogid == DialVinny(8))
    {
        if(response == 1) // esquerdo
        {
            if(tipodialogH == 1)
            {
                format(string, sizeof(string), "/seditar preco %d", strval(inputtext));
            }
            if(tipodialogH == 2)
            {
                format(string, sizeof(string), "/seditar level %d", strval(inputtext));
            }
            if(tipodialogH == 3)
            {
                format(string, sizeof(string), "/casav %d", strval(inputtext));
            }
            OnPlayerCommandText(playerid,string);
        }
    }
    if(dialogid == DialVinny(9))
    {
        if(response == 1) // esquerdo
        {
            for(new h=0; h < MAX_HOUSES;h++)
            {
                if(HouseInfo[h][hAtiva] == 0){
                casaid[playerid] = h;
                break;                                      }
            }
            GetPlayerPos(playerid, HouseInfo[casaid[playerid]][hEntrancex], HouseInfo[casaid[playerid]][hEntrancey], HouseInfo[casaid[playerid]][hEntrancez]);

            strmid(HouseInfo[casaid[playerid]][hOwner], "O estado", 0, strlen("O estado"), 255);
            HouseInfo[casaid[playerid]][hHel] = 0;
                        HouseInfo[casaid[playerid]][hArm] = 0;
                        HouseInfo[casaid[playerid]][hHealthx] = 0;
                        HouseInfo[casaid[playerid]][hHealthy] = 0;
                        HouseInfo[casaid[playerid]][hHealthz] = 0;
                        HouseInfo[casaid[playerid]][hArmorrx] = 0;
                        HouseInfo[casaid[playerid]][hArmorry] = 0;
                        HouseInfo[casaid[playerid]][hArmorrz] = 0;
                        HouseInfo[casaid[playerid]][hLock] = 1;
                        HouseInfo[casaid[playerid]][hOwned] = 0;
            HouseInfo[casaid[playerid]][hVec] = 475;
            HouseInfo[casaid[playerid]][hVcol1] = -1;
            HouseInfo[casaid[playerid]][hVcol2] = -1;
            HouseInfo[casaid[playerid]][hExitx] = 225.630997;
                    HouseInfo[casaid[playerid]][hExity] = 1022.479980;
                    HouseInfo[casaid[playerid]][hExitz] = 1084.069946;
                    HouseInfo[casaid[playerid]][hInt] = 7;

            format(string,sizeof(string),"{FFFFFF} Digite abaixo o Preço da Nova Casa!");
            ShowPlayerDialog(playerid, DialVinny(10), DIALOG_STYLE_INPUT,"{33CCFF}Menu Casa - Criação[PREÇO]",string,"Próximo","");
        }
        else
        {
            return SendClientMessage(playerid, -1, "Criação de Casa, Cancelada pelo usuário!");
        }
    }
    if(dialogid == DialVinny(10))
    {
        if(response == 1) // esquerdo
        {
            HouseInfo[casaid[playerid]][hValue] = strval(inputtext);
            format(string,sizeof(string),"CRIAÇÃO DE CASAS: Preço ajustado para: R$ %d!",strval(inputtext));
            SendClientMessage(playerid, -1, string);
            format(string,sizeof(string),"{FFFFFF} Digite abaixo o Nível da Nova Casa!");
            ShowPlayerDialog(playerid, DialVinny(11), DIALOG_STYLE_INPUT,"{33CCFF}Menu Casa - Criação[NÍVEL]",string,"Próximo","");
        }
        else
        {
            return SendClientMessage(playerid, -1, "Criação de Casa, Cancelada pelo usuário!");
        }
    }
    if(dialogid == DialVinny(11))
    {
        if(response == 1) // esquerdo
        {
            HouseInfo[casaid[playerid]][hLevel] = strval(inputtext);
            format(string,sizeof(string),"CRIAÇÃO DE CASAS: Nível ajustado para: %d!",strval(inputtext));
            SendClientMessage(playerid, -1, string);
            format(string,sizeof(string),"{FFFFFF} Digite abaixo o Tipo da Nova Casa!\n{FFB3FF}Legenda: 1 = Free, 2 = VIP e 3 = Super Vip!");
            ShowPlayerDialog(playerid, DialVinny(12), DIALOG_STYLE_INPUT,"{33CCFF}Menu Casa - Criação[VIP]",string,"Próximo","");
        }
        else
        {
            return SendClientMessage(playerid, -1, "Criação de Casa, Cancelada pelo usuário!");
        }
    }
    if(dialogid == DialVinny(12))
    {
        if(response == 1) // esquerdo
        {
            new RankVip2[32];
            if(strval(inputtext) == 1) { RankVip2 = "Free"; }
            else if(strval(inputtext) == 2) { RankVip2 = "Vip Normal"; }
            else if(strval(inputtext) >= 3) { RankVip2 = "Super VIP"; }
            format(string,sizeof(string),"CRIAÇÃO DE CASAS: Tipo ajustado para: %s!",RankVip2);
            SendClientMessage(playerid, -1, string);
            format(string, sizeof(string), "/casav %d", strval(inputtext));
            OnPlayerCommandText(playerid,string);
            SendClientMessage(playerid, -1, "Agora, Configure o Local que o Veículo Ficará!");
            MenuCasa(playerid, 3);
        }
        else
        {
            return SendClientMessage(playerid, -1, "Criação de Casa, Cancelada pelo usuário!");
        }
    }
    if(dialogid == DialVinny(14))
    {
        if(response == 0) // direito
        {
            return SendClientMessage(playerid, -1, "Você Cancelou o menu das empresas!");
        }
        else if(response == 1) // esquerdo
        {
            ShowPlayerDialog(playerid, DialVinny(15), DIALOG_STYLE_LIST, "{33CCFF}Menu Empresa - Configurar", "Vender Empresa\nAlterar Nome\nEditar Preço\nEditar Nível\nEditar Entrada\nEditar Produtos\nEditar Max. Produtos\nLucro Diário\n{FF8080}Deletar Empresa", "Ajustar", "Sair");
        }
        return 1;
    }
    if(dialogid == DialVinny(15))
    {
        if(response == 1) // esquerdo
        {
            if(listitem == 0)
            {
                format(string, sizeof(string), "/admvsemp %d", casaid[playerid]);
                OnPlayerCommandText(playerid,string);
            }
            if(listitem == 1)
            {
            format(string,sizeof(string),"{FFFFFF} Coloque o Novo Nome/Descrição à ser Ajustado, em seguida Clique em 'Confirmar'!");
            ShowPlayerDialog(playerid, DialVinny(17), DIALOG_STYLE_INPUT,"{33CCFF}Menu Empresa - Nome",string,"Confirmar","");
            tipodialogH = 6;
            }
            if(listitem == 2)
            {
            format(string,sizeof(string),"{FFFFFF} Coloque o Novo Valor à ser Ajustado, em seguida Clique em 'Confirmar'!");
            ShowPlayerDialog(playerid, DialVinny(17), DIALOG_STYLE_INPUT,"{33CCFF}Menu Empresa - Preço",string,"Confirmar","");
            tipodialogH = 1;
            }
            if(listitem == 3)
            {
            format(string,sizeof(string),"{FFFFFF} Coloque o Novo Valor à ser Ajustado, em seguida Clique em 'Confirmar'!");
            ShowPlayerDialog(playerid, DialVinny(17), DIALOG_STYLE_INPUT,"{33CCFF}Menu Empresa - Nível",string,"Confirmar","");
            tipodialogH = 2;

            }
            if(listitem == 4)
            {
            format(strvinny,sizeof(strvinny),"{FFFFFF} Coloque o Novo Valor à ser Ajustado, em seguida Clique em 'Confirmar'!");
            ShowPlayerDialog(playerid, DialVinny(17), DIALOG_STYLE_INPUT,"{33CCFF}Menu Empresa - Entrada",strvinny,"Confirmar","");

             tipodialogH = 7;
            }
            if(listitem == 5)
            {
            format(strvinny,sizeof(strvinny),"{FFFFFF} Coloque o Novo Valor à ser Ajustado, em seguida Clique em 'Confirmar'!");
            ShowPlayerDialog(playerid, DialVinny(17), DIALOG_STYLE_INPUT,"{33CCFF}Menu Empresa - Produtos",strvinny,"Confirmar","");

             tipodialogH = 3;
            }
            if(listitem == 6)
            {
            format(strvinny,sizeof(strvinny),"{FFFFFF} Coloque o Novo Valor à ser Ajustado, em seguida Clique em 'Confirmar'!");
            ShowPlayerDialog(playerid, DialVinny(17), DIALOG_STYLE_INPUT,"{33CCFF}Menu Empresa - Max. Produtos",strvinny,"Confirmar","");

             tipodialogH = 4;
            }
            if(listitem == 7)
            {
                format(strvinny,sizeof(strvinny),"{FFFFFF} Coloque o Novo Valor à ser Ajustado, em seguida Clique em 'Confirmar'!");
                 ShowPlayerDialog(playerid, DialVinny(17), DIALOG_STYLE_INPUT,"{33CCFF}Menu Empresa - Lucro Diário",strvinny,"Confirmar","");

             tipodialogH = 5;
            }
            if(listitem == 8)
            {
                ShowPlayerDialog(playerid, DialVinny(16), DIALOG_STYLE_MSGBOX,"{33CCFF}Menu Empresa - Confirmação","{FFFFFF}Tem certeza que Deseja deletar esta Empresa?","Sim","Não");
            }
        }
        else if(response == 0) // direito
        {
            SendClientMessage(playerid,-1,"Você saiu do Menu!");
        }
        return 1;
    }
    if(dialogid == DialVinny(16))
    {
        if(response == 1) // esquerdo
        {
            format(string, sizeof(string), "Você deletou a empresa ID: %d, Dono: %s, Crie outra usando /menuemp!", casaid[playerid],SBizzInfo[casaid[playerid]][sbOwner]);
            SendClientMessage(playerid, -1, string);
            SBizzInfo[casaid[playerid]][sbLocked] = 1;
            SBizzInfo[casaid[playerid]][sbOwned] = 0;
            strmid(SBizzInfo[casaid[playerid]][sbOwner], "O estado", 0, strlen("O estado"), 255);
            strmid(SBizzInfo[casaid[playerid]][sbExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
            SBizzInfo[casaid[playerid]][sbAtiva] = 0;
            SBizzInfo[casaid[playerid]][sbEntranceX] = 0.000;
            SBizzInfo[casaid[playerid]][sbEntranceY] = 0.000;
            SBizzInfo[casaid[playerid]][sbEntranceZ] = 0.000;
            SBizzInfo[casaid[playerid]][sbDonoON] = 0;
       //     DestroyAllDynamic3DTextLabels();
        }
        else ShowPlayerDialog(playerid, DialVinny(15), DIALOG_STYLE_LIST, "{33CCFF}Menu Empresa - Configurar", "Vender Empresa\nAlterar Nome\nEditar Preço\nEditar Nível\nEditar Entrada\nEditar Produtos\nEditar Max. Produtos\nLucro Diário\n{FF8080}Deletar Empresa", "Ajustar", "Sair");
    }
    if(dialogid == DialVinny(17))
    {
        if(response == 1) // esquerdo
        {
            if(tipodialogH == 1)
            {
                format(string, sizeof(string), "/seditar preco %d", strval(inputtext));
                OnPlayerCommandText(playerid,string);
            }
            if(tipodialogH == 2)
            {
                format(string, sizeof(string), "/seditar level %d", strval(inputtext));
                OnPlayerCommandText(playerid,string);
            }
            if(tipodialogH == 3)
            {
                SBizzInfo[casaid[playerid]][sbProd] = strval(inputtext);
                format(string,sizeof(string),"Produtos alterado para: %d!",strval(inputtext));
                SendClientMessage(playerid,-1,string);
            }
            if(tipodialogH == 4)
            {
                SBizzInfo[casaid[playerid]][sbMaxProd] = strval(inputtext);
                format(string,sizeof(string),"Max. Produtos alterado para: %d!",strval(inputtext));
                SendClientMessage(playerid,-1,string);
            }
            if(tipodialogH == 5)
            {

                SBizzInfo[casaid[playerid]][sbLucro] = strval(inputtext);
                format(string,sizeof(string),"Lucro alterado para: %d!",strval(inputtext));
                SendClientMessage(playerid,-1,string);
            }
            if(tipodialogH == 6)
            {
                strmid(SBizzInfo[casaid[playerid]][sbMessage], inputtext, 0, strlen(inputtext), 255);
                format(string,sizeof(string),"Nome alterado para: %s!",SBizzInfo[casaid[playerid]][sbMessage]);
                SendClientMessage(playerid,-1,string);
            }
            if(tipodialogH == 7)
            {
                SBizzInfo[casaid[playerid]][sbEntranceCost] = strval(inputtext);
                format(string,sizeof(string),"Entrada alterada Para: R$ %d!",strval(inputtext));
                SendClientMessage(playerid,-1,string);
            }
            a3d();
        }
    }
    if(dialogid == DialVinny(18))
    {
        if(response == 1) // esquerdo
        {
            for(new h=0; h < MAX_SBIZZES;h++)
            {
                if(SBizzInfo[h][sbAtiva] == 0){
                casaid[playerid] = h;
                break;                                      }
            }
            GetPlayerPos(playerid, SBizzInfo[casaid[playerid] ][sbEntranceX],SBizzInfo[casaid[playerid] ][sbEntranceY],SBizzInfo[casaid[playerid] ][sbEntranceZ]);

            SBizzInfo[casaid[playerid]][sbLocked] = 1;
            SBizzInfo[casaid[playerid]][sbOwned] = 0;
            strmid(SBizzInfo[casaid[playerid]][sbOwner], "O estado", 0, strlen("O estado"), 255);
            strmid(SBizzInfo[casaid[playerid]][sbExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
            SBizzInfo[casaid[playerid]][sbDonoON] = 0;
            format(string,sizeof(string),"{FFFFFF} Digite abaixo o Preço da Nova Empresa!");
            ShowPlayerDialog(playerid, DialVinny(19), DIALOG_STYLE_INPUT,"{33CCFF}Menu Empresa - Criação[PREÇO]",string,"Próximo","");
        }
        else
        {
            return SendClientMessage(playerid, -1, "Criação de empresa, Cancelada pelo usuário!");
        }
    }
    if(dialogid == DialVinny(19))
    {
        if(response == 1) // esquerdo
        {
            SBizzInfo[casaid[playerid]][sbBuyPrice] = strval(inputtext);
            format(string,sizeof(string),"CRIAÇÃO DE EMPRESA: Preço ajustado para: R$ %d!",strval(inputtext));
            SendClientMessage(playerid, -1, string);
            format(string,sizeof(string),"{FFFFFF} Digite abaixo o Nível da Nova Empresa!");
            ShowPlayerDialog(playerid, DialVinny(20), DIALOG_STYLE_INPUT,"{33CCFF}Menu Empresa - Criação[NÍVEL]",string,"Próximo","");
        }
        else
        {
            return SendClientMessage(playerid, -1, "Criação de empresa, Cancelada pelo usuário!");
        }
    }
    if(dialogid == DialVinny(20))
    {
        if(response == 1) // esquerdo
        {
            SBizzInfo[casaid[playerid]][sbLevel] = strval(inputtext);
            format(string,sizeof(string),"CRIAÇÃO DE EMPRESA: Nível ajustado para: %d!",strval(inputtext));
            SendClientMessage(playerid, -1, string);
            format(string,sizeof(string),"{FFFFFF} Digite abaixo a Quantidade de Max. Produtos da Nova Empresa!");
            ShowPlayerDialog(playerid, DialVinny(21), DIALOG_STYLE_INPUT,"{33CCFF}Menu Empresa - Criação[PRODUTOS]",string,"Próximo","");
        }
        else
        {
            return SendClientMessage(playerid, -1, "Criação de Empresa, Cancelada pelo usuário!");
        }
    }
    if(dialogid == DialVinny(21))
    {
        if(response == 1) // esquerdo
        {
            SBizzInfo[casaid[playerid]][sbMaxProd] = strval(inputtext);
            format(string,sizeof(string),"CRIAÇÃO DE EMPRESA: Max. Produtos ajustado para: %d!",strval(inputtext));
            SendClientMessage(playerid, -1, string);
            format(string,sizeof(string),"{FFFFFF} Digite abaixo o Valor estimado de Lucro diário da Nova Empresa!");
            ShowPlayerDialog(playerid, DialVinny(22), DIALOG_STYLE_INPUT,"{33CCFF}Menu Empresa - Criação[LUCRO]",string,"Próximo","");
        }
        else
        {
            return SendClientMessage(playerid, -1, "Criação de Empresa, Cancelada pelo usuário!");
        }
    }
    if(dialogid == DialVinny(22))
    {
        if(response == 1) // esquerdo
        {
            SBizzInfo[casaid[playerid]][sbLucro] = strval(inputtext);
            format(string,sizeof(string),"CRIAÇÃO DE EMPRESA: Faixa de Lucro diário ajustado para: %d!",strval(inputtext));
            SendClientMessage(playerid, -1, string);
            format(string,sizeof(string),"{FFFFFF} Digite abaixo um Nome ou Descrição da Nova Empresa!");
            ShowPlayerDialog(playerid, DialVinny(23), DIALOG_STYLE_INPUT,"{33CCFF}Menu Empresa - Criação[NOME]",string,"Concluir","");
        }
        else
        {
            return SendClientMessage(playerid, -1, "Criação de Empresa, Cancelada pelo usuário!");
        }
    }
    if(dialogid == DialVinny(23))
    {
        if(response == 1) // esquerdo
        {
            strmid(SBizzInfo[casaid[playerid]][sbMessage], inputtext, 0, strlen(inputtext), 255);
            format(string,sizeof(string),"CRIAÇÃO DE EMPRESA: Nome/Descrição da Empresa ajustado para: %s!",SBizzInfo[casaid[playerid]][sbMessage]);
            SendClientMessage(playerid, -1, string);
            format(gstring, sizeof(gstring), "~n~~n~~n~~n~~n~~n~~r~~h~]]~w~Empresa Criada com Sucesso~r~~h~]]",casaid[playerid]);
            GameTextForPlayer(playerid, gstring, 7000, 3);
            SBizzInfo[casaid[playerid]][sbAtiva] = 1;
        }
        else
        {
            return SendClientMessage(playerid, -1, "Criação de Empresa, Cancelada pelo usuário!");
        }
    }
    if(dialogid == DialVinny(24))
    {
        if(response == 0) // direito
        {
            return SendClientMessage(playerid, -1, "Você Cancelou o menu das fazendas!");
        }
        else if(response == 1) // esquerdo
        {
            ShowPlayerDialog(playerid, DialVinny(25), DIALOG_STYLE_LIST, "{33CCFF}Menu Fazenda - Configurar", "Vender Fazenda\nAlterar Nome\nEditar Preço\nEditar Nível\nEditar Fundos\nEditar Produtos\nEditar Max. Produtos\nLucro Diário\n{FF8080}Deletar Fazenda", "Ajustar", "Sair");
        }
        return 1;
    }
    if(dialogid == 555)
    {
        if(response == 1) // esquerdo
        {
            if(listitem == 0)
            {
              SetPlayerPos(playerid, 239.1693,117.6838,1003.2188);
              SetPlayerInterior(playerid, 10);
              SetPlayerVirtualWorld(playerid, 1);
            }
            if(listitem == 1)
            {
              SetPlayerPos(playerid, 256.6183,126.0865,1010.2188);
              SetPlayerInterior(playerid, 10);
              SetPlayerVirtualWorld(playerid, 1);
            }
            if(listitem == 2)
            {
              SetPlayerPos(playerid, 960.1323,-1727.9789,23.4883);
              SetPlayerInterior(playerid, 0);
              SetPlayerVirtualWorld(playerid, 0);
            }
         }
        return 1;
      }
    if(dialogid == DialVinny(25))
    {
        if(response == 1) // esquerdo
        {
            if(listitem == 0)
            {
                format(string, sizeof(string), "Você Vendeu a fazenda ID: %d, Dono: %s!", casaid[playerid],FazendaInfo[casaid[playerid]][fDono]);
                SendClientMessage(playerid, -1, string);
                FazendaInfo[casaid[playerid]][fOwned] = 0;
                strmid(FazendaInfo[casaid[playerid]][fDono], "Ninguem", 0, strlen("Ninguem"), 255);
                FazendaInfo[casaid[playerid]][fAtiva] = 1;
            }
            if(listitem == 1)
            {
                format(string,sizeof(string),"{FFFFFF} Coloque o Novo Nome/Descrição à ser Ajustado, em seguida Clique em 'Confirmar'!");
                ShowPlayerDialog(playerid, DialVinny(27), DIALOG_STYLE_INPUT,"{33CCFF}Menu Fazenda - Nome",string,"Confirmar","");
                tipodialogH = 6;
            }
            if(listitem == 2)
            {
            format(string,sizeof(string),"{FFFFFF} Coloque o Novo Valor à ser Ajustado, em seguida Clique em 'Confirmar'!");
            ShowPlayerDialog(playerid, DialVinny(27), DIALOG_STYLE_INPUT,"{33CCFF}Menu Fazenda - Preço",string,"Confirmar","");
            tipodialogH = 1;
            }
            if(listitem == 3)
            {
            format(string,sizeof(string),"{FFFFFF} Coloque o Novo Valor à ser Ajustado, em seguida Clique em 'Confirmar'!");
            ShowPlayerDialog(playerid, DialVinny(27), DIALOG_STYLE_INPUT,"{33CCFF}Menu Fazenda - Nível",string,"Confirmar","");
            tipodialogH = 2;

            }
            if(listitem == 4)
            {
            format(string,sizeof(string),"{FFFFFF} Coloque o Novo Valor à ser Ajustado, em seguida Clique em 'Confirmar'!");
            ShowPlayerDialog(playerid, DialVinny(27), DIALOG_STYLE_INPUT,"{33CCFF}Menu Fazenda - Fundos",string,"Confirmar","");
            tipodialogH = 7;

            }
            if(listitem == 5)
            {
            format(strvinny,sizeof(strvinny),"{FFFFFF} Coloque o Novo Valor à ser Ajustado, em seguida Clique em 'Confirmar'!");
            ShowPlayerDialog(playerid, DialVinny(27), DIALOG_STYLE_INPUT,"{33CCFF}Menu Fazenda - Produtos",strvinny,"Confirmar","");

             tipodialogH = 3;
            }
            if(listitem == 6)
            {
            format(strvinny,sizeof(strvinny),"{FFFFFF} Coloque o Novo Valor à ser Ajustado, em seguida Clique em 'Confirmar'!");
            ShowPlayerDialog(playerid, DialVinny(27), DIALOG_STYLE_INPUT,"{33CCFF}Menu Fazenda - Max. Produtos",strvinny,"Confirmar","");

             tipodialogH = 4;
            }
            if(listitem == 7)
            {
                format(strvinny,sizeof(strvinny),"{FFFFFF} Coloque o Novo Valor à ser Ajustado, em seguida Clique em 'Confirmar'!");
                 ShowPlayerDialog(playerid, DialVinny(27), DIALOG_STYLE_INPUT,"{33CCFF}Menu Fazenda - Lucro Diário",strvinny,"Confirmar","");

             tipodialogH = 5;
            }
            if(listitem == 8)
            {
                ShowPlayerDialog(playerid, DialVinny(26), DIALOG_STYLE_MSGBOX,"{33CCFF}Menu Fazenda - Confirmação","{FFFFFF}Tem certeza que Deseja deletar esta Fazenda?","Sim","Não");
            }
        }
        else if(response == 0) // direito
        {
            SendClientMessage(playerid,-1,"Você saiu do Menu!");
        }
        return 1;
    }
    if(dialogid == DialVinny(26))
    {
        if(response == 1) // esquerdo
        {
            format(string, sizeof(string), "Você deletou a fazenda ID: %d, Dono: %s, Crie outra usando /menufazenda!", casaid[playerid],FazendaInfo[casaid[playerid]][fDono]);
            SendClientMessage(playerid, -1, string);
            FazendaInfo[casaid[playerid]][fOwned] = 0;
            strmid(FazendaInfo[casaid[playerid]][fDono], "Ninguem", 0, strlen("Ninguem"), 255);
            FazendaInfo[casaid[playerid]][fAtiva] = 0;
            FazendaInfo[casaid[playerid]][ffX] = 0.000;
            FazendaInfo[casaid[playerid]][ffY] = 0.000;
            FazendaInfo[casaid[playerid]][ffZ] = 0.000;
          //  DestroyAllDynamic3DTextLabels();
        }
        else ShowPlayerDialog(playerid, DialVinny(25), DIALOG_STYLE_LIST, "{33CCFF}Menu Fazenda - Configurar", "Vender Fazenda\nAlterar Nome\nEditar Preço\nEditar Nível\nEditar Fundos\nEditar Produtos\nEditar Max. Produtos\nLucro Diário\n{FF8080}Deletar Fazenda", "Ajustar", "Sair");
    }
    if(dialogid == DialVinny(27))
    {
        if(response == 1) // esquerdo
        {
            if(tipodialogH == 1)
            {
                FazendaInfo[casaid[playerid]][fValor] = strval(inputtext);
            }
            if(tipodialogH == 2)
            {
                FazendaInfo[casaid[playerid]][fLevel] = strval(inputtext);
            }
            if(tipodialogH == 3)
            {
                FazendaInfo[casaid[playerid]][fProd] = strval(inputtext);
                format(string,sizeof(string),"Produtos alterado para: %d!",strval(inputtext));
                SendClientMessage(playerid,-1,string);
            }
            if(tipodialogH == 4)
            {
                FazendaInfo[casaid[playerid]][fMaxProd] = strval(inputtext);
                format(string,sizeof(string),"Max. Produtos alterado para: %d!",strval(inputtext));
                SendClientMessage(playerid,-1,string);
            }
            if(tipodialogH == 5)
            {

                FazendaInfo[casaid[playerid]][fLucro] = strval(inputtext);
                format(string,sizeof(string),"Lucro alterado para: %d!",strval(inputtext));
                SendClientMessage(playerid,-1,string);
            }
            if(tipodialogH == 6)
            {
                strmid(FazendaInfo[casaid[playerid]][fDescricao], inputtext, 0, strlen(inputtext), 255);
                format(string,sizeof(string),"Nome alterado para: %s!",FazendaInfo[casaid[playerid]][fDescricao]);
                SendClientMessage(playerid,-1,string);
            }
            if(tipodialogH == 7)
            {
                FazendaInfo[casaid[playerid]][fFundos] += strval(inputtext);
                format(string,sizeof(string),"Você Colocou %d no cofre da Fazenda!",strval(inputtext));
                SendClientMessage(playerid,-1,string);
            }
            a3d();
        }
    }
    if(dialogid == DialVinny(28))
    {
        if(response == 1) // esquerdo
        {
            for(new h=0; h < MAX_FAZENDA;h++)
            {
                if(FazendaInfo[h][fAtiva] == 0){
                casaid[playerid] = h;
                break;                                      }
            }
            GetPlayerPos(playerid, FazendaInfo[casaid[playerid] ][ffX],FazendaInfo[casaid[playerid] ][ffY],FazendaInfo[casaid[playerid] ][ffZ]);

            FazendaInfo[casaid[playerid]][fOwned] = 0;
            strmid(FazendaInfo[casaid[playerid]][fDono], "O estado", 0, strlen("O estado"), 255);
            format(string,sizeof(string),"{FFFFFF} Digite abaixo o Preço da Nova Fazenda!");
            ShowPlayerDialog(playerid, DialVinny(29), DIALOG_STYLE_INPUT,"{33CCFF}Menu Fazenda - Criação[PREÇO]",string,"Próximo","");
        }
        else
        {
            return SendClientMessage(playerid, -1, "Criação de empresa, Cancelada pelo usuário!");
        }
    }
    if(dialogid == DialVinny(29))
    {
        if(response == 1) // esquerdo
        {
            FazendaInfo[casaid[playerid]][fValor] = strval(inputtext);
            format(string,sizeof(string),"CRIAÇÃO DE FAZENDAS: Preço ajustado para: R$ %d!",strval(inputtext));
            SendClientMessage(playerid, -1, string);
            format(string,sizeof(string),"{FFFFFF} Digite abaixo o Nível da Nova Fazenda!");
            ShowPlayerDialog(playerid, DialVinny(30), DIALOG_STYLE_INPUT,"{33CCFF}Menu Fazenda - Criação[NÍVEL]",string,"Próximo","");
        }
        else
        {
            return SendClientMessage(playerid, -1, "Criação de empresa, Cancelada pelo usuário!");
        }
    }
    if(dialogid == DialVinny(30))
    {
        if(response == 1) // esquerdo
        {
            FazendaInfo[casaid[playerid]][fLevel] = strval(inputtext);
            format(string,sizeof(string),"CRIAÇÃO DE FAZENDAS: Nível ajustado para: %d!",strval(inputtext));
            SendClientMessage(playerid, -1, string);
            format(string,sizeof(string),"{FFFFFF} Digite abaixo a Quantidade de Max. Produtos da Nova Fazenda!");
            ShowPlayerDialog(playerid, DialVinny(31), DIALOG_STYLE_INPUT,"{33CCFF}Menu Fazenda - Criação[PRODUTOS]",string,"Próximo","");
        }
        else
        {
            return SendClientMessage(playerid, -1, "Criação de Fazenda, Cancelada pelo usuário!");
        }
    }
    if(dialogid == DialVinny(31))
    {
        if(response == 1) // esquerdo
        {
            FazendaInfo[casaid[playerid]][fMaxProd] = strval(inputtext);
            format(string,sizeof(string),"CRIAÇÃO DE FAZENDAS: Max. Produtos ajustado para: %d!",strval(inputtext));
            SendClientMessage(playerid, -1, string);
            format(string,sizeof(string),"{FFFFFF} Digite abaixo o Valor estimado de Lucro diário da Nova Fazenda!");
            ShowPlayerDialog(playerid, DialVinny(32), DIALOG_STYLE_INPUT,"{33CCFF}Menu Fazenda - Criação[LUCRO]",string,"Próximo","");
        }
        else
        {
            return SendClientMessage(playerid, -1, "Criação de Fazenda, Cancelada pelo usuário!");
        }
    }
    if(dialogid == DialVinny(32))
    {
        if(response == 1) // esquerdo
        {

            format(string,sizeof(string),"CRIAÇÃO DE FAZENDAS: Faixa de Lucro diário ajustado para: %d!",strval(inputtext));
            SendClientMessage(playerid, -1, string);
            FazendaInfo[casaid[playerid]][fLucro] = strval(inputtext);
            format(string,sizeof(string),"{FFFFFF} Digite abaixo um Nome ou Descrição da Nova Fazenda!");
            ShowPlayerDialog(playerid, DialVinny(33), DIALOG_STYLE_INPUT,"{33CCFF}Menu Fazenda - Criação[NOME]",string,"Concluir","");
        }
        else
        {
            return SendClientMessage(playerid, -1, "Criação de Fazenda, Cancelada pelo usuário!");
        }
    }
    if(dialogid == DialVinny(33))
    {
        if(response == 1) // esquerdo
        {
            strmid(FazendaInfo[casaid[playerid]][fDescricao], inputtext, 0, strlen(inputtext), 255);
            format(string,sizeof(string),"CRIAÇÃO DE FAZENDAS: Nome/Descrição da Fazenda ajustado para: %s!",FazendaInfo[casaid[playerid]][fDescricao]);
            SendClientMessage(playerid, -1, string);
            format(gstring, sizeof(gstring), "~n~~n~~n~~n~~n~~n~~r~~h~]]~w~Fazenda Criada com Sucesso~r~~h~]]",casaid[playerid]);
            GameTextForPlayer(playerid, gstring, 7000, 3);

            /*FazendaPickup[casaid[playerid]] = CreatePickup(19134, 23, FazendaInfo[casaid[playerid]][ffX], FazendaInfo[casaid[playerid]][ffY], FazendaInfo[casaid[playerid]][ffZ],-1);
            format(strlabel, sizeof(strlabel), "{FFFF00}Brasil {0000FF}Play {00FF00}Gamer\n{82fabE}%s\nEsta fazenda esta a venda\nValor: R$%d Nivel: %d\nProdutos: %d|%d\n{FFFFFF}Aperte ENTER para comprar",FazendaInfo[casaid[playerid]][fDescricao],FazendaInfo[casaid[playerid]][fValor],FazendaInfo[casaid[playerid]][fLevel],FazendaInfo[casaid[playerid]][fProd],FazendaInfo[casaid[playerid]][fMaxProd]);
            FazendaLabel[casaid[playerid]] = Create3DTextLabel(strlabel,COR_3DLABEL,FazendaInfo[casaid[playerid]][ffX], FazendaInfo[casaid[playerid]][ffY], FazendaInfo[casaid[playerid]][ffZ]+0.5,30.0,0);      */
            FazendaInfo[casaid[playerid]][fAtiva] = 1;
        }
        else
        {
            return SendClientMessage(playerid, -1, "Criação de Fazenda, Cancelada pelo usuário!");
        }
    }
    if(dialogid == DialVinny(34))
    {
        if(response == 1) // esquerdo
        {
            if(PlayerInfo[playerid][pVip] < 2)
            {
                SendClientMessage(playerid, -1, "Você não é um Player Super VIP, e não pode comprar uma Fazenda!");
                SendClientMessage(playerid, -1, "** Você pode Adquirir seu Super VIP acessando o /forum e comprando um de nossos planos!");
                return 1;
            }
            if(CheckFazDono(playerid) != 9999) return SendClientMessage(playerid, -1, "Você ja Possui uma Fazenda, venda primeiro e depois volte novamente!");
            if(FazendaInfo[casaid[playerid]][fValor] >  GetPlayerMoneyEx(playerid)) return SendClientMessage(playerid, -1, "ERRO: Você não tem o valor suficiente nas mãos, para comprar essa Propriedade!");
            strmid(FazendaInfo[casaid[playerid]][fDono], PlayerName(playerid), 0, strlen(PlayerName(playerid)), 255);
            format(string,sizeof(string),"Parabéns, você adquiriu a Fazenda: %s, Por: R$ %d.",FazendaInfo[casaid[playerid]][fDescricao],FazendaInfo[casaid[playerid]][fValor]);
            SendClientMessage(playerid, -1, string);
            new strtexs[300];
            format(strtexs, sizeof(strtexs), "~n~~n~~n~~r~~h~]] ~w~Parabens ~r~~h~]]~n~~n~~w~Voce comprou uma Nova Fazenda",
            FazendaInfo[casaid[playerid]][fDescricao],FazendaInfo[casaid[playerid]][fValor]);
            GameTextForPlayer(playerid, strtexs, 8000, 3);
            FazendaInfo[casaid[playerid]][fAtiva] = 1;
            FazendaInfo[casaid[playerid]][fOwned] = 1;
            GivePlayerMoney(playerid, -FazendaInfo[casaid[playerid]][fValor]);
            a3d();
        }
        else
        {
            casaid[playerid] = 9999;
            return SendClientMessage(playerid, -1, "Compra da fazenda Cancelada pelo usuário!");
        }
    }
    if(dialogid == DialVinny(35))
    {
        if(response == 1) // esquerdo
        {
            ShowPlayerDialog(playerid, DialVinny(36), DIALOG_STYLE_LIST, "{33CCFF}Menu Fazenda - Configurar", "Sacar Dinheiro\nDepositar Dinheiro\n{FF8080}Vender Fazenda", "Confirma", "Cancelar");
        }
        else
        {
            casaid[playerid] = 9999;
            return SendClientMessage(playerid, -1, "Menu de Gerenciamento Fechado!");
        }
    }
    if(dialogid == DialVinny(36))
    {
        if(response == 1) // esquerdo
        {
            if(listitem == 0)
            {
                format(strvinny,sizeof(strvinny),"{80FF80}Sua Fazenda Possui: R$ %d\n{FFFFFF}Digite abaixo a Quantidade que Deseja sacar!",FazendaInfo[casaid[playerid]][fFundos]);
                ShowPlayerDialog(playerid,DialVinny(37),DIALOG_STYLE_INPUT,"{33CCFF}Menu Fazenda - Sacar",strvinny,"Sacar","Voltar");
            }
            if(listitem == 1)
            {
                format(strvinny,sizeof(strvinny),"{80FF80}Sua Fazenda Possui: R$ %d\n{FFFFFF}Digite abaixo a Quantidade que Deseja Depositar!",FazendaInfo[casaid[playerid]][fFundos]);
                ShowPlayerDialog(playerid,DialVinny(43),DIALOG_STYLE_INPUT,"{33CCFF}Menu Fazenda - Depositar",strvinny,"Depositar","Voltar");
            }
            if(listitem == 2)
            {
                format(string,sizeof(string),"{FFFFFF}Tem certeza que Deseja Vender esta Propriedade por R$ %d?",FazendaInfo[casaid[playerid]][fValor]);
                ShowPlayerDialog(playerid, DialVinny(38), DIALOG_STYLE_MSGBOX,"{33CCFF}Menu Fazenda - Confirmação",string,"Sim","Não");
            }
        }
        else
        {
            casaid[playerid] = 9999;
            return SendClientMessage(playerid, -1, "Menu de Gerenciamento Fechado!");
        }
    }
    if(dialogid == DialVinny(37))
    {
        if(response == 1) // esquerdo
        {
            if(!IsNumero(inputtext))
            {
                format(strvinny,sizeof(strvinny),"{80FF80}Sua Fazenda Possui: R$ %d\n{FFFFFF}Digite abaixo a Quantidade que Deseja sacar!",FazendaInfo[casaid[playerid]][fFundos]);
                ShowPlayerDialog(playerid,DialVinny(37),DIALOG_STYLE_INPUT,"{33CCFF}Menu Fazenda - Sacar",strvinny,"Sacar","Voltar");
                return SendClientMessage(playerid, -1, "ERRO: Digite apenas Números!");
            }
            if(strval(inputtext) > FazendaInfo[casaid[playerid]][fFundos])
            {
                format(strvinny,sizeof(strvinny),"{80FF80}Sua Fazenda Possui: R$ %d\n{FFFFFF}Digite abaixo a Quantidade que Deseja sacar!",FazendaInfo[casaid[playerid]][fFundos]);
                ShowPlayerDialog(playerid,DialVinny(37),DIALOG_STYLE_INPUT,"{33CCFF}Menu Fazenda - Sacar",strvinny,"Sacar","Voltar");
                return SendClientMessage(playerid, -1, "ERRO: Sua fazenda não Possui esse Valor no Cofre!");
            }
            if(strval(inputtext) <= 0)
            {
                format(strvinny,sizeof(strvinny),"{80FF80}Sua Fazenda Possui: R$ %d\n{FFFFFF}Digite abaixo a Quantidade que Deseja sacar!",FazendaInfo[casaid[playerid]][fFundos]);
                ShowPlayerDialog(playerid,DialVinny(37),DIALOG_STYLE_INPUT,"{33CCFF}Menu Fazenda - Sacar",strvinny,"Sacar","Voltar");
                return SendClientMessage(playerid, -1, "ERRO: Sua fazenda não Possui esse Valor no Cofre!");
            }
            FazendaInfo[casaid[playerid]][fFundos] -= strval(inputtext);
            GivePlayerMoney(playerid, strval(inputtext));
            format(string,sizeof(string),"** Você Sacou R$ %d de sua Fazenda, Agora ela possui R$ %d no Cofre!",strval(inputtext),FazendaInfo[casaid[playerid]][fFundos]);
            SendClientMessage(playerid, -1,string);
            casaid[playerid] = 9999;
        }
        else
        {

            ShowPlayerDialog(playerid, DialVinny(36), DIALOG_STYLE_LIST, "{33CCFF}Menu Fazenda - Configurar", "Sacar Dinheiro\nDepositar Dinheiro\n{FF8080}Vender Fazenda", "Confirma", "Cancelar");
        }
    }
    if(dialogid == DialVinny(43))
    {
        if(response == 1) // esquerdo
        {
            if(!IsNumero(inputtext))
            {
                format(strvinny,sizeof(strvinny),"{80FF80}Sua Fazenda Possui: R$ %d\n{FFFFFF}Digite abaixo a Quantidade que Deseja Depositar!",FazendaInfo[casaid[playerid]][fFundos]);
                ShowPlayerDialog(playerid,DialVinny(37),DIALOG_STYLE_INPUT,"{33CCFF}Menu Fazenda - Depositar",strvinny,"Depositar","Voltar");
                return SendClientMessage(playerid, -1, "ERRO: Digite apenas Números!");
            }
            if(strval(inputtext) > GetPlayerMoneyEx(playerid))
            {
                format(strvinny,sizeof(strvinny),"{80FF80}Sua Fazenda Possui: R$ %d\n{FFFFFF}Digite abaixo a Quantidade que Deseja Depositar!",FazendaInfo[casaid[playerid]][fFundos]);
                ShowPlayerDialog(playerid,DialVinny(37),DIALOG_STYLE_INPUT,"{33CCFF}Menu Fazenda - Depositar",strvinny,"Depositar","Voltar");
                return SendClientMessage(playerid, -1, "ERRO: Você não possui esse dinheiro em mãos!");
            }
            FazendaInfo[casaid[playerid]][fFundos] += strval(inputtext);
            GivePlayerMoney(playerid, -strval(inputtext));
            format(string,sizeof(string),"** Você Depositou R$ %d no cofre da sua Fazenda, Agora ela possui R$ %d!",strval(inputtext),FazendaInfo[casaid[playerid]][fFundos]);
            SendClientMessage(playerid, -1,string);
            casaid[playerid] = 9999;
        }
        else
        {

            ShowPlayerDialog(playerid, DialVinny(36), DIALOG_STYLE_LIST, "{33CCFF}Menu Fazenda - Configurar", "Sacar Dinheiro\nDepositar Dinheiro\n{FF8080}Vender Fazenda", "Confirma", "Cancelar");
        }
    }
    if(dialogid == DialVinny(38))
    {
        if(response == 1) // esquerdo
        {
            format(string, sizeof(string), "Você Vendeu a Fazenda: %s, Por: R$ %d!", FazendaInfo[casaid[playerid]][fDescricao],FazendaInfo[casaid[playerid]][fValor]);
            SendClientMessage(playerid, -1, string);
            FazendaInfo[casaid[playerid]][fOwned] = 0;
            strmid(FazendaInfo[casaid[playerid]][fDono], "Ninguem", 0, strlen("Ninguem"), 255);
            FazendaInfo[casaid[playerid]][fAtiva] = 1;
            a3d();
            GivePlayerMoney(playerid, FazendaInfo[casaid[playerid]][fValor]);
            casaid[playerid] = 9999;
        }
        else
        {
            SendClientMessage(playerid, -1, "Venda da Fazenda cancelada!");
            ShowPlayerDialog(playerid, DialVinny(36), DIALOG_STYLE_LIST, "{33CCFF}Menu Fazenda - Configurar", "Sacar Dinheiro\nDepositar Dinheiro\n{FF8080}Vender Fazenda", "Confirma", "Cancelar");
        }
    }
    if(dialogid == DialVinny(39))
    {
        if(response == 1) // esquerdo
        {
            ShowPlayerDialog(playerid, DialVinny(40), DIALOG_STYLE_LIST, "{33CCFF}Menu Empresa - Configurar", "Setar Extorção\nSacar Dinheiro\nDepositar Dinheiro\n{FF8080}Vender Empresa", "Confirma", "Cancelar");
        }
        else
        {
            casaid[playerid] = 9999;
            return SendClientMessage(playerid, -1, "Menu de Gerenciamento Fechado!");
        }
    }
    if(dialogid == DialVinny(40))
    {
        if(response == 1) // esquerdo
        {
            if(listitem == 0)
            {
                format(string,sizeof(string),"{FFFFFF}Digite abaixo um nome para Extorção!");
                ShowPlayerDialog(playerid, DialVinny(41), DIALOG_STYLE_INPUT,"{33CCFF}Menu Empresa - Extorção",string,"Confirmar","Voltar");
                tipodialog[playerid] = 1;
            }
            if(listitem == 1)
            {
                format(strvinny,sizeof(strvinny),"{80FF80}Sua Empresa Possui: R$ %d no Cofre\n{FFFFFF}Digite abaixo a Quantidade que Deseja sacar!",SBizzInfo[casaid[playerid]][sbTill]);
                ShowPlayerDialog(playerid,DialVinny(41),DIALOG_STYLE_INPUT,"{33CCFF}Menu Empresa - Sacar",strvinny,"Sacar","Voltar");
                tipodialog[playerid] = 2;

            }
            if(listitem == 2)
            {
                format(strvinny,sizeof(strvinny),"{80FF80}Sua Empresa Possui: R$ %d no Cofre\n{FFFFFF}Digite abaixo a Quantidade que Deseja Depositar!",SBizzInfo[casaid[playerid]][sbTill]);
                ShowPlayerDialog(playerid,DialVinny(41),DIALOG_STYLE_INPUT,"{33CCFF}Menu Empresa - Depositar",strvinny,"Depositar","Voltar");
                tipodialog[playerid] = 3;
            }
            if(listitem == 3)
            {
                format(string,sizeof(string),"{FFFFFF}Tem certeza que Deseja Vender esta Empresa por R$ %d?",SBizzInfo[casaid[playerid]][sbBuyPrice]);
                ShowPlayerDialog(playerid, DialVinny(42), DIALOG_STYLE_MSGBOX,"{33CCFF}Menu Empresa - Confirmação",string,"Sim","Não");
            }
        }
        else
        {
            casaid[playerid] = 9999;
            return SendClientMessage(playerid, -1, "Menu de Gerenciamento Fechado!");
        }
    }
    if(dialogid == DialVinny(41))
    {
        if(response == 1) // esquerdo
        {
            if(tipodialog[playerid] == 1)
            {
                format(gstring,sizeof(gstring),"/extorcao %s",inputtext);
                OnPlayerCommandText(playerid,gstring);

            }
            else if(tipodialog[playerid] == 2)
            {
                format(gstring,sizeof(gstring),"/sacarempresa %s",inputtext);
                OnPlayerCommandText(playerid,gstring);
            }
            else if(tipodialog[playerid] == 3)
            {
                GivePlayerMoney(playerid,-strval(inputtext));
                SBizzInfo[casaid[playerid]][sbTill] += strval(inputtext);
                format(string, sizeof(string), "  Você guardou R$ %d no cofre de sua empresa. O saldo de sua empresa: R$ %d", strval(inputtext),SBizzInfo[casaid[playerid]][sbTill]);
                SendClientMessage(playerid, -1, string);
            }
        }
        else
        {
            ShowPlayerDialog(playerid, DialVinny(40), DIALOG_STYLE_LIST, "{33CCFF}Menu Empresa - Configurar", "Setar Extorção\nSacar Dinheiro\nDepositar Dinheiro\n{FF8080}Vender Empresa", "Confirma", "Cancelar");
        }
    }
    if(dialogid == DialVinny(42))
    {
        if(response == 1) // esquerdo
        {
            OnPlayerCommandText(playerid,"/venderempresa");
            casaid[playerid] = 9999;
        }
        else
        {
            SendClientMessage(playerid,-1,"Você cancelou a Venda de sua empresa!");
            ShowPlayerDialog(playerid, DialVinny(40), DIALOG_STYLE_LIST, "{33CCFF}Menu Empresa - Configurar", "Setar Extorção\nSacar Dinheiro\nDepositar Dinheiro\n{FF8080}Vender Empresa", "Confirma", "Cancelar");
        }
    }
    if(dialogid == DialVinny(5))
    {
        if(response == 0) // direito
        {
            return SendClientMessage(playerid, -1, "Voce desligou o Computador!");
        }
        else if(response == 1) // esquerdo
        {
            new strvinnydialog[512],carid = GetPlayerVehicleID(playerid), Caminhao = GetVehicleModel(carid),
            nomeminhao[64],maxcarg;
            if(Caminhao == 403 || Caminhao == 514 || Caminhao == 515)
            {
            nomeminhao = "Carreta";
            maxcarg = 500;
            }
            else if(Caminhao == 456)
            {
                nomeminhao = "Caminhão Baú";
                maxcarg = 100;
            }
            else if(Caminhao == 414)
            {
                nomeminhao = "Furgão";
                maxcarg = 50;
            }
            strcat(strvinnydialog, "{80FF80}Informações sobre seu Caminhão!\n\n");
            format(string, sizeof(string), "{FFFFFF}Tipo de Veículo: %s.\n\n{80FF80}Quantidade de Produtos para Empresas e Fazendas:",nomeminhao);
            strcat(strvinnydialog, string);
            format(strvinny, sizeof(strvinny), "{FFFFFF}\n\nProdutos para Fazendas: %d.\nProdutos  para Empresas: %d.\nEste Caminhão suporta até {FF8080}%d Produtos!",CaminhaoProdFazendas[carid],CaminhaoProdEmpresas[carid],maxcarg);
            strcat(strvinnydialog, strvinny);
            strcat(strvinnydialog, "\n\n{1E90FF}ATENÇÃO: {FFFFFF}Especifique Abaixo o Estabelecimento referente as informaçõs que deseja Visualizar!\n");
            ShowPlayerDialog(playerid, DialVinny(0), DIALOG_STYLE_MSGBOX, "{33CCFF}Computador Caminhoneiros - Info Caminhão", strvinnydialog, "Fazendas", "Empresas");
        }
        return 1;
    }
    if(dialogid == DialVinny(0))
    {
        if(response == 0) // direito
        {
            new strcamin[2000],Prodrequir,counte=0;
            for(new emp=0; emp < MAX_BIZZES;emp++)
            {
                new teste = BizzInfo[emp][bProd]+10;
                if(teste < BizzInfo[emp][bMaxProd])  {
                Prodrequir = BizzInfo[emp][bMaxProd]-BizzInfo[emp][bProd];
                format(string, sizeof(string), "{FFFFFF}Empresa: %s, Dono: %s, Fundos: %d, Precisa de %d Produtos\n",BizzInfo[emp][bMessage],BizzInfo[emp][bOwner],BizzInfo[emp][bTill],Prodrequir);
                strcat(strcamin, string);
                counte ++;}
            }
            for(new emp=0; emp < MAX_SBIZZES;emp++)
            {
                new teste = SBizzInfo[emp][sbProd]+10;
                if(teste < SBizzInfo[emp][sbMaxProd])  {
                Prodrequir = SBizzInfo[emp][sbMaxProd]-SBizzInfo[emp][sbProd];
                format(string, sizeof(string), "{FFFFFF}Empresa: %s, Dono: %s, Fundos: %d, Precisa de %d Produtos\n",SBizzInfo[emp][sbMessage],SBizzInfo[emp][sbOwner],SBizzInfo[emp][sbTill],Prodrequir);
                strcat(strcamin, string);
                counte ++;}
                if(counte >= 16) break;
            }
            ShowPlayerDialog(playerid, DialVinny(2), DIALOG_STYLE_MSGBOX, "{33CCFF}Computador Caminhoneiros - Info Empresas", strcamin, "Marcar GPS", "Fechar");
        }
        else if(response == 1) // esquerdo
        {
            new strcamin[2000],Prodrequir;
            for(new emp=0; emp < MAX_FAZENDA;emp++)
            {
                if(FazendaInfo[emp][fOwned] == 1){
                new teste = FazendaInfo[emp][fProd]+10;
                if(teste < FazendaInfo[emp][fMaxProd])  {
                Prodrequir = FazendaInfo[emp][fMaxProd]-FazendaInfo[emp][fProd];
                format(string, sizeof(string), "{FFFFFF}Fazenda: %s, Dono: %s, Fundos: %d, Precisa de %d Produtos\n",FazendaInfo[emp][fDescricao],FazendaInfo[emp][fDono],FazendaInfo[emp][fFundos],Prodrequir);
                strcat(strcamin, string); }}
                if(emp >= 16) break;
            }
            ShowPlayerDialog(playerid, DialVinny(1), DIALOG_STYLE_MSGBOX, "{33CCFF}Computador Caminhoneiros - Info Fazendas", strcamin, "Marcar GPS", "Fechar");
        }
        return 1;
    }
    if(dialogid == DialVinny(1))
    {
        if(response == 1) // e   squerdo
        {
            new strcamin[2000];
            numfazendas=0;
            for(new emp=0; emp < MAX_FAZENDA;emp++)
            {
                if(FazendaInfo[emp][fOwned] == 1)
                {
                    new teste = FazendaInfo[emp][fProd]+10;
                    if(teste < FazendaInfo[emp][fMaxProd])
                    {
                        //Prodrequir = FazendaInfo[emp][fMaxProd]-FazendaInfo[emp][fProd];
                        new location[MAX_ZONE_NAME];
                        Get2DZone(location, FazendaInfo[ emp ][ ffX ], FazendaInfo[ emp ][ ffY ], MAX_ZONE_NAME);
                        format(string, sizeof(string), "{FFFFFF}Fazenda: %s, Local: %s\n",FazendaInfo[emp][fDescricao],location);
                        strcat(strcamin, string);
                        EmpresasIDcerto[numfazendas][Fazendas] = emp;
                        numfazendas++;
                        if(numfazendas >= 16) break;
                    }
                }

            }
            ShowPlayerDialog(playerid, DialVinny(3), DIALOG_STYLE_LIST, "{33CCFF}Computador Caminhoneiros - Info GPS", strcamin, "Ligar GPS", "Fechar");
        }
        else if(response == 0) // direito
        {
            SendClientMessage(playerid,-1,"Você desligou o Computador!");
        }
        return 1;
    }
    if(dialogid == DialVinny(2))
    {
        if(response == 1) // esquerdo
        {
            new strcamin[2000];
            numfazendas=0;
            strcat(strcamin, "{80FF80}* Pegar Produtos: Empresa de Produtos\n");
            for(new emp=0; emp < MAX_BIZZES;emp++)
            {
                new teste = BizzInfo[emp][bProd]+10;
                if(teste < BizzInfo[emp][bMaxProd])  {
                //Prodrequir = BizzInfo[emp][bMaxProd]-BizzInfo[emp][bProd];
                new location[MAX_ZONE_NAME];
                Get2DZone(location, BizzInfo[emp][bEntranceX], BizzInfo[emp][bEntranceY], MAX_ZONE_NAME);
                format(string, sizeof(string), "{FFFFFF}Empresa: %s, Local: %s\n",BizzInfo[emp][bMessage],location);
                strcat(strcamin, string);
                EmpresasIDcerto[numfazendas][Fazendas] = emp;
                EmpresasIDcerto[numfazendas][Empresas]=0;
                numfazendas++;}
                if(numfazendas >= 16) break;

            }
            for(new emp=0; emp < MAX_SBIZZES;emp++)
            {
                new teste = SBizzInfo[emp][sbProd]+10;
                if(teste < SBizzInfo[emp][sbMaxProd])  {
                //Prodrequir = SBizzInfo[emp][sbMaxProd]-SBizzInfo[emp][sbProd];
                new location[MAX_ZONE_NAME];
                Get2DZone(location, SBizzInfo[emp][sbEntranceX], SBizzInfo[emp][sbEntranceY], MAX_ZONE_NAME);
                format(string, sizeof(string), "{FFFFFF}Empresa: %s, Local: %s\n",SBizzInfo[emp][sbMessage],location);
                strcat(strcamin, string);
                EmpresasIDcerto[numfazendas][Fazendas] = emp;
                EmpresasIDcerto[numfazendas][Empresas]=1;
                numfazendas++;}
                if(numfazendas >= 16) break;

            }
            ShowPlayerDialog(playerid, DialVinny(4), DIALOG_STYLE_LIST, "{33CCFF}Computador Caminhoneiros - Info GPS", strcamin, "Ligar GPS", "Fechar");
        }
        else if(response == 0) // direito
        {
            SendClientMessage(playerid,-1,"Você desligou o Computador!");
        }
        return 1;
    }
    if(dialogid == DialVinny(3))
    {
        if(response == 1) // e   squerdo
        {
            if(numfazendas > 0)
            {
                new idemp=EmpresasIDcerto[listitem][Fazendas];
                SetPlayerCheckpoint(playerid,FazendaInfo[ idemp ][ ffX ], FazendaInfo[ idemp ][ ffY ], FazendaInfo[ idemp ][ ffZ ], 4.0);
                GameTextForPlayer(playerid, "~w~Mapa da Fazenda ~r~~h~Marcado!", 5000, 1);
                gPlayerCheckpointStatus[playerid] = CHECKPOINT_CARRO;
            }
        }
        else if(response == 0) // direito
        {
            SendClientMessage(playerid,-1,"Você desligou o Computador!");
        }
        return 1;
    }
    if(dialogid == DialVinny(4))
    {
        if(response == 1) // e   squerdo
        {
            if(listitem == 0)
            {
                new idemp=24;
                SetPlayerCheckpoint(playerid,SBizzInfo[idemp][sbEntranceX], SBizzInfo[idemp][sbEntranceY], SBizzInfo[idemp][sbEntranceZ], 4.0);
                GameTextForPlayer(playerid, "~w~Empresa de Produtos ~r~~h~Marcado!", 5000, 1);
                gPlayerCheckpointStatus[playerid] = CHECKPOINT_CARRO;
                return 1;
            }
            listitem--;
            if(EmpresasIDcerto[listitem][Empresas] == 0)
            {

                new idemp=EmpresasIDcerto[listitem][Fazendas];
                SetPlayerCheckpoint(playerid,BizzInfo[idemp][bEntranceX], BizzInfo[idemp][bEntranceY], BizzInfo[idemp][bEntranceZ], 4.0);
                GameTextForPlayer(playerid, "~w~Mapa da Empresa ~r~~h~Marcado!", 5000, 1);
                gPlayerCheckpointStatus[playerid] = CHECKPOINT_CARRO;
                return 1;
            }
            if(EmpresasIDcerto[listitem][Empresas] == 1)
            {

                new idemp=EmpresasIDcerto[listitem][Fazendas];
                SetPlayerCheckpoint(playerid,SBizzInfo[idemp][sbEntranceX], SBizzInfo[idemp][sbEntranceY], SBizzInfo[idemp][sbEntranceZ], 4.0);
                GameTextForPlayer(playerid, "~w~Mapa da Empresa ~r~~h~Marcado!", 5000, 1);
                gPlayerCheckpointStatus[playerid] = CHECKPOINT_CARRO;
                return 1;
            }
        }
        else if(response == 0) // direito
        {
            SendClientMessage(playerid,-1,"Você desligou o Computador!");
        }
        return 1;
    }
    if(dialogid == DIALOG_LIBERARMV)
    {
        if(response)
        {
            switch (listitem)
            {
                case 0:
                {
                    new Mensagem[302];
                    strcat(Mensagem, "{FFFFFF}Por favor insira o código de transação que foi enviado ao PAG SEGURO\n");
                    strcat(Mensagem, "{FFFFFF}OBS: INSIRA DE MODO, COMO POR EXEMPLO O CODIGO ABAIXO:\n\n");
                    strcat(Mensagem, "{FFFFFF}Exemplo do código\n     {FF0000}8CECD04A-ECC6-4142-8484-E0F64BFB2B4E\n");
                    ShowPlayerDialog(playerid, DIALOG_LIBERARMV2, DIALOG_STYLE_INPUT, "Insira o código {FF0000}VIP", Mensagem, "Confirmar", "Cancelar");
                    return 1;
                }
                case 1:
                {
                    new Mensagem[302];
                    strcat(Mensagem, "{FFFFFF}Por favor insira o código de transação que foi enviado ao PAG SEGURO\n");
                    strcat(Mensagem, "{FFFFFF}OBS: INSIRA DE MODO, COMO POR EXEMPLO O CODIGO ABAIXO:\n\n");
                    strcat(Mensagem, "{FFFFFF}Exemplo do código\n     {FF0000}8CECD04A-ECC6-4142-8484-E0F64BFB2B4E\n");
                    ShowPlayerDialog(playerid, DIALOG_LIBERARMV3, DIALOG_STYLE_INPUT, "Insira o código {FF0000}SUPER-VIP", Mensagem, "Confirmar", "Cancelar");
                    return 1;
                }
            }
        }
        return 1;
    }
    if(dialogid == DIALOG_LIBERARMV2)
    {
        if (response)
        {
            strmid(MVInfo2[Codigo], inputtext, 0, strlen(inputtext), 255);
            if (PlayerInfo[playerid][pAdmin] == 3000)
            {
                new string3[64];
                format(string3, sizeof(string3), "Codigos/%s.ini", MVInfo2[Codigo]);
                if(dini_Exists(string3))
                {
                    SendClientMessage(playerid,COLOR_GRAD1,"Este código já está liberado!");
     return 1;
                }
                else
                {
                    new Mensagem[200];
                    format(Mensagem, sizeof(Mensagem), "** Você esta preste a liberar o código: %s", MVInfo2[Codigo]);
                    SendClientMessage(playerid, -1, Mensagem);
                    format(Mensagem, sizeof(Mensagem), "{FFFFFF}Você está prestes a liberar o código:\n{FF0000}%s\n{FFFFFF}Agora, Digite a quantidade Paga pelo Jogador  abaixo!", MVInfo2[Codigo]);
                    ShowPlayerDialog(playerid,4655,DIALOG_STYLE_INPUT,"Liberação VIP",Mensagem,"Confirmar","Cancelar");
                }
            }
            else
            {

                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if(dialogid == 4655)
    {
        if (response)
        {
            new quantti = strval(inputtext);
            if (PlayerInfo[playerid][pAdmin] == 3000)
            {
                new string3[64];
                format(string3, sizeof(string3), "Codigos/%s.ini", MVInfo2[Codigo]);
                if(dini_Exists(string3))
                {
                    SendClientMessage(playerid,COLOR_GRAD1,"Este código já está liberado!");
     return 1;
                }
                else
                {
                    new Mensagem[300];
                    dini_Create(string3);
                    dini_IntSet(string3,"Quantidade",quantti);
                    format(Mensagem, sizeof(Mensagem), "** Parabéns, Você LIBEROU o código: %s, Quantidade: %d!", MVInfo2[Codigo],quantti);
                    SendClientMessage(playerid, -1, Mensagem);
                    format(Mensagem, sizeof(Mensagem), "{FFFFFF}Você liberou o Código:\n{FF0000}%s\n{FFFFFF}Agora, Você tem a opção de decidir mandar um e-mail de aviso ao Player\nCaso queira mandar um e-mail, Digite abaixo e clique 'Confirmar',\nCaso contrário, clique em 'Finalizar'!", MVInfo2[Codigo]);
                    ShowPlayerDialog(playerid,DIALOG_LIBERARMV5,DIALOG_STYLE_INPUT,"E-Mail",Mensagem,"Confirmar","Finalizar");
                }
            }
            else
            {

                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if(dialogid == DIALOG_LIBERARMV3)
    {
        if (response)
        {
            strmid(MVInfo2[Codigo], inputtext, 0, strlen(inputtext), 255);
            if (PlayerInfo[playerid][pAdmin] == 3000)
            {
                new string3[64];
                format(string3, sizeof(string3), "Codigos2/%s.ini", MVInfo2[Codigo]);
                if(dini_Exists(string3))
                {
                    SendClientMessage(playerid,COLOR_GRAD1,"Este código já está liberado!");
     return 1;
                }
                else
                {
                    new Mensagem[200];
                    format(Mensagem, sizeof(Mensagem), "** Você esta preste a liberar o código: %s", MVInfo2[Codigo]);
                    SendClientMessage(playerid, -1, Mensagem);
                    format(Mensagem, sizeof(Mensagem), "{FFFFFF}Você está prestes a liberar o código:\n{FF0000}%s\n{FFFFFF}Agora, Digite a quantidade Paga pelo Jogador  abaixo!", MVInfo2[Codigo]);
                    ShowPlayerDialog(playerid,4654,DIALOG_STYLE_INPUT,"Liberação SUPER VIP",Mensagem,"Confirmar","Cancelar");
                }
            }
            else
            {

                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if(dialogid == 4654)
    {
        if (response)
        {
            new quantti = strval(inputtext);
            if (PlayerInfo[playerid][pAdmin] == 3000)
            {
                new string3[64];
                format(string3, sizeof(string3), "Codigos2/%s.ini", MVInfo2[Codigo]);
                if(dini_Exists(string3))
                {
                    SendClientMessage(playerid,COLOR_GRAD1,"Este código já está liberado!");
     return 1;
                }
                else
                {
                    new Mensagem[300];
                    dini_Create(string3);
                    dini_IntSet(string3,"Quantidade",quantti);
                    format(Mensagem, sizeof(Mensagem), "** Parabéns, Você LIBEROU o código: %s, Quantidade: %d!", MVInfo2[Codigo],quantti);
                    SendClientMessage(playerid, -1, Mensagem);
                    format(Mensagem, sizeof(Mensagem), "{FFFFFF}Você liberou o Código:\n{FF0000}%s\n{FFFFFF}Agora, Você tem a opção de decidir mandar um e-mail de aviso ao Player\nCaso queira mandar um e-mail, Digite abaixo e clique 'Confirmar',\nCaso contrário, clique em 'Finalizar'!", MVInfo2[Codigo]);
                    ShowPlayerDialog(playerid,DIALOG_LIBERARMV5,DIALOG_STYLE_INPUT,"E-Mail",Mensagem,"Confirmar","Finalizar");
                }
            }
            else
            {

                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if(dialogid == DIALOG_LIBERARMV5)
    {
        if(response)
        {
            strmid(MVInfo2[Email], inputtext, 0, strlen(inputtext), 255);
            if(!strlen(inputtext))
            {
                return SendClientMessage(playerid, -1, "ERRO: Campo Vazio, Você optou por não enviar um E-Mail de aviso ao Jogador!");
            }
            else
            {
                        new VarChefe[950],Parte[128];
                        format(Parte,sizeof(Parte),"Olá!");
                        strcat(VarChefe,Parte);
                        format(Parte,sizeof(Parte)," Você está recebendo este e-mail porque fez uma doação ao Brasil Play Gamer®, por isso,");
                        strcat(VarChefe,Parte);
                        format(Parte,sizeof(Parte)," terá direito a benefícios especiais dentro do servidor.\n\n");
                        strcat(VarChefe,Parte);
                        format(Parte,sizeof(Parte),"In-game, digite /menuvip e escolha a opção Ativar Moedas Verdes,");
                        strcat(VarChefe,Parte);
                        format(Parte,sizeof(Parte)," depois copie e cole o código abaixo:\n");
                        strcat(VarChefe,Parte);
                        format(Parte,sizeof(Parte),"%s\n\n",MVInfo2[Codigo]);
                        strcat(VarChefe,Parte);
                        format(Parte,sizeof(Parte),"Após ter ativado as suas Moedas Verdes você poderá comprar seu VIP ou SUPER VIP,");
                        strcat(VarChefe,Parte);
                        format(Parte,sizeof(Parte)," dependendo da quantidade que tiver adquirido.\n");
                        strcat(VarChefe,Parte);
                        format(Parte,sizeof(Parte),"Obrigado por colaborar com o nosso servidor.");
                        strcat(VarChefe,Parte);
                        format(Parte,sizeof(Parte),"        \n\nAtenciosamente.");
                        strcat(VarChefe,Parte);
                        format(Parte,sizeof(Parte),"  \n\nEquipe Brasil PlayGamer RPG");
                        strcat(VarChefe,Parte);
                        SendMail(MVInfo2[Email], EMAIL_SERVIDOR, EMAIL_SERVIDOR, "Ativação Moedas Verdes | Brasil PlayGamer®? ", VarChefe);
                format(string,sizeof(string),"** E-Mail Enviado com sucesso para o endereço: %s",MVInfo2[Email]);
                SendClientMessage(playerid, -1, string);
                return 1;
            }
        }
        else
        {
            return SendClientMessage(playerid, -1, " Você optou por não enviar um E-Mail de aviso ao Jogador!");
        }
        //return 1;
    }
    if(dialogid == 695)
    {
        if(response == 0)
        {
            return 1;
        }
        if(response == 1)
        {
            if(listitem == 0)
            {// Brasil
                PlayAudioStreamForPlayer(playerid,"http://107.161.126.158:8006");
            }
            if(listitem == 1)
            {
                StopAudioStreamForPlayer(playerid);
                return 1;
            }
            return 1;
        }
        return 1;
    }
    if(dialogid == DIALOG_MEAVALIE)
    {
        if(response == 1)
        {
            SendClientMessage(meavalie[playerid],0x0000FFAA,"O Jogador qualificou a sua ajuda como POSITIVA, voce ganhou 1 nivel.");
            PlayerInfo[meavalie[playerid]][pHelper] = PlayerInfo[meavalie[playerid]][pHelper]+1;
            format(string, sizeof(string), "Você avaliou a ajuda do Helper %s como: {9EC73D}positiva.",giveplayer);
            SendClientMessage(playerid,COR_HELPER,string);

        }
        if(response == 0)
        {
            SendClientMessage(meavalie[playerid],0xFF0000AA,"O Jogador qualificou a sua ajuda como NEGATIVA, você perdeu 1 nivel.");
            PlayerInfo[meavalie[playerid]][pHelper] = PlayerInfo[meavalie[playerid]][pHelper]-1;
            format(string, sizeof(string), "Você avaliou a ajuda do Helper %s como: {FF0000}negativa.",giveplayer);
            SendClientMessage(playerid,COR_HELPER,string);
        }
        return 1;
    }
    if(dialogid == 5678)
    {

    if(response)
    {

        if(listitem == 0)
        {

            OnPlayerCommandText(playerid,"/batercartao");
            TogglePlayerControllable(playerid, 1);
        }
        if(listitem == 1)
        {

            OnPlayerCommandText(playerid,"/equipar");
            TogglePlayerControllable(playerid, 1);
        }
        if(listitem == 2)
        {

            OnPlayerCommandText(playerid,"/escudo");
            TogglePlayerControllable(playerid, 1);
        }
        if(listitem == 3)
        {

            OnPlayerCommandText(playerid,"/tirarescudo");
            TogglePlayerControllable(playerid, 1);
        }
        if(listitem == 4)
        {

            OnPlayerCommandText(playerid,"/procurados");
            TogglePlayerControllable(playerid, 1);
        }
        if(listitem == 5)
        {

            OnPlayerCommandText(playerid,"/presos");
            TogglePlayerControllable(playerid, 1);
        }
        if(listitem == 6)
        {

            OnPlayerCommandText(playerid,"/coletepolicial");
            TogglePlayerControllable(playerid, 1);
        }
    }
    return 1;
}
    if(dialogid == 8906)
    {
        new DialogBPH[360];
        if(response >= 1)
        {
            if(listitem == 0)//
            {
                format(string, 128, "24-7\n");
                strcat(DialogBPH,string);
                format(string, 128, "Prefeitura (Commerce)\n");
                strcat(DialogBPH,string);
                format(string, 128, "Prefeitura (East Beach)\n");
                strcat(DialogBPH,string);
                format(string, 128, "Loja de armas\n");
                strcat(DialogBPH,string);
                format(string, 128, "Delegacia da PM\n");
                strcat(DialogBPH,string);
                format(string, 128, "Delegacia da PM - Interior\n");
                strcat(DialogBPH,string);
                format(string, 128, "ROTA - Interior\n");
                strcat(DialogBPH,string);
                format(string, 128, "Prefeitura(Commerce) - Interior\n");
                strcat(DialogBPH,string);
                format(string, 128, "Prefeitura(East Beach) - Interior\n");
                strcat(DialogBPH,string);
                format(string, 128, "Territorio Casarão\n");
                strcat(DialogBPH,string);
                format(string, 128, "Territorio Unity\n");
                strcat(DialogBPH,string);
                format(string, 128, "Territorio Parque Gleen\n");
                strcat(DialogBPH,string);
                format(string, 128, "Territorio Morro\n");
                strcat(DialogBPH,string);
                format(string, 128, "Territorio Mansão do Madd Dogg\n");
                strcat(DialogBPH,string);
                ShowPlayerDialog(playerid, 8907, DIALOG_STYLE_LIST, "Cameras Segurança Los Santos",DialogBPH,"Acessar","Cancelar");
    return 1;
            }
            if(listitem == 1)//
            {
                format(string, 128, "24-7\n");
                strcat(DialogBPH,string);
                format(string, 128, "Prefeitura (Country Club)\n");
                strcat(DialogBPH,string);
                format(string, 128, "Prefeitura (Downtown)\n");
                strcat(DialogBPH,string);
                format(string, 128, "Loja de armas\n");
                strcat(DialogBPH,string);
                format(string, 128, "Delegacia da PM\n");
                strcat(DialogBPH,string);
                format(string, 128, "Delegacia da PM - Interior\n");
                strcat(DialogBPH,string);
                format(string, 128, "ROTA - Interior\n");
                strcat(DialogBPH,string);
                format(string, 128, "Prefeitura(Country Club) - Interior\n");
                strcat(DialogBPH,string);
                format(string, 128, "Prefeitura(Downtown) - Interior\n");
                strcat(DialogBPH,string);
                format(string, 128, "Territorio Puteiro\n");
                strcat(DialogBPH,string);
                format(string, 128, "Territorio Construção\n");
                strcat(DialogBPH,string);
                format(string, 128, "Territorio Praia\n");
                strcat(DialogBPH,string);
                format(string, 128, "Territorio Navio\n");
                strcat(DialogBPH,string);
                format(string, 128, "Territorio Aeroporto\n");
                strcat(DialogBPH,string);
                ShowPlayerDialog(playerid, 8908, DIALOG_STYLE_LIST, "Cameras Segurança San Fierro",DialogBPH,"Acessar","Cancelar");
    return 1;
            }
            if(listitem == 2)//
            {
                format(string, 128, "Entrada LV\n");
                strcat(DialogBPH,string);
                format(string, 128, "Emerald: Entrada\n");
                strcat(DialogBPH,string);
                format(string, 128, "Emerald: Térreo\n");
                strcat(DialogBPH,string);
                format(string, 128, "Emerald: 2º andar\n");
                strcat(DialogBPH,string);
                format(string, 128, "Emerald: 3º andar\n");
                strcat(DialogBPH,string);
                format(string, 128, "Emerald: 4º andar\n");
                strcat(DialogBPH,string);
                format(string, 128, "Emerald: 5º andar\n");
                strcat(DialogBPH,string);
                format(string, 128, "Emerald: 6º andar\n");
                strcat(DialogBPH,string);
                format(string, 128, "Emerald: 7º andar\n");
                strcat(DialogBPH,string);
                format(string, 128, "Emerald: 8º andar\n");
                strcat(DialogBPH,string);
                format(string, 128, "Emerald: 9º andar\n");
                strcat(DialogBPH,string);
                format(string, 128, "Emerald: 10º andar\n");
                strcat(DialogBPH,string);
                format(string, 128, "Emerald: 1º Terraço\n");
                strcat(DialogBPH,string);
                format(string, 128, "Emerald: 2º Terraço\n");
                strcat(DialogBPH,string);
                ShowPlayerDialog(playerid, 8909, DIALOG_STYLE_LIST, "Cameras Segurança Las Venturas",DialogBPH,"Acessar","Cancelar");
    return 1;
            }
            if(listitem == 3)//
            {
                if(GetPlayerOrg(playerid) == 32 && PlayerInfo[playerid][pCargo] > 5)
                {
                    ShowPlayerDialog(playerid,8910, DIALOG_STYLE_INPUT, "Defina a senha","Defina a nova senha de acesso ao painel\nNumeros de 1 a 9","Definir","Cancelar");
        return 1;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "Você não pode mudar a senha de acesso!");
        return 1;
                }
            }
            if(listitem == 4)//
            {
                SetPlayerPos(playerid, 237.7438,108.0919,1010.2188);
                SetPlayerInterior(playerid, 10);
                SetCameraBehindPlayer(playerid);
                NaCamera[playerid] = 1;
                SetPlayerVirtualWorld(playerid, 1);
                TextDrawHideForPlayer(playerid, Hidealto2[playerid]);
                TextDrawHideForPlayer(playerid, Hidebaixo2[playerid]);
                TextDrawHideForPlayer(playerid, TextRec[playerid]);
    return 1;
            }
        if(listitem == 5)//
            {
                SetPlayerPos(playerid, 226.8586,127.6783,1010.2188);
                SetPlayerInterior(playerid, 10);
                SetCameraBehindPlayer(playerid);
                NaCamera[playerid] = 1;
                SetPlayerVirtualWorld(playerid, 1);
                TextDrawHideForPlayer(playerid, Hidealto2[playerid]);
                TextDrawHideForPlayer(playerid, Hidebaixo2[playerid]);
                TextDrawHideForPlayer(playerid, TextRec[playerid]);
    return 1;
            }
        if(listitem == 6)//
            {
                SetPlayerPos(playerid, 215.5024,125.1288,1003.2188);
                SetPlayerInterior(playerid, 10);
                SetCameraBehindPlayer(playerid);
                NaCamera[playerid] = 1;
                SetPlayerVirtualWorld(playerid, 1);
                TextDrawHideForPlayer(playerid, Hidealto2[playerid]);
                TextDrawHideForPlayer(playerid, Hidebaixo2[playerid]);
                TextDrawHideForPlayer(playerid, TextRec[playerid]);
    return 1;
            }
        }
        return 0;
    }
    if(dialogid == 8907)
    {
        if(response >= 1)
        {
            if(listitem == 0)//24 - 7 LS
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 1334.6313, -1743.1552, 29.8977, 1334.6313, -1743.1552, 29.8977 ,5000, CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 1370.9540,-1754.0128,13.5521);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 1)// Pref - LS (Commerce)
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 1483.3023, -1729.0262, 22.2732 ,1483.3023, -1729.0262, 22.2732, 5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, 1482.0903, -1738.8973, 21.2280,1482.0903, -1738.8973, 21.2280,5000 ,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 1483.5555,-1812.8312,41.1603);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 2)// Pref - LS (East Beach)
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 2810.1687, -1081.9837, 39.6626 ,2810.1687, -1081.9837, 39.6626, 5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, 1482.0903, -1738.8973, 21.2280,1482.0903, -1738.8973, 21.2280,5000 ,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 2785.8916,-1088.0073,30.7188);
                SetPlayerFacingAngle(playerid, 90.6171);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 3)// Loja de armas LS
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 1058.1326, -1872.9680, 24.4793,1058.1326, -1872.9680, 24.4793 ,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, 1064.9484, -1873.2060, 17.1658, 1064.9484, -1873.2060, 17.1658,5000 ,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 1026.2922,-1930.1968,12.7886);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }

            if(listitem == 4)// DP - LS
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 1526.0451, -1668.8969, 22.2694 ,1526.0451, -1668.8969, 22.2694, 5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, 1535.6578, -1671.6533, 18.8492 ,1535.6578, -1671.6533, 18.8492 ,5000,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 1577.6180,-1673.2339,19.8792);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 5)// Int DP - LS
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 269.7922, 75.9835, 1003.0452 ,269.7922, 75.9835, 1003.0452, 5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, 262.1318, 82.4114, 999.2991 , 262.1318, 82.4114, 999.2991,5000,CAMERA_MOVE);
                SetPlayerInterior(playerid, 6);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 264.4978,82.3155,1004.6830);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 6)// Int ROTA - LS
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 203.8481, 180.7021, 1004.9763 ,203.8481, 180.7021, 1004.9763,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
                SetPlayerInterior(playerid, 3);
                SetPlayerVirtualWorld(playerid, 1);
                SetPlayerPos(playerid, 193.9738,175.0059,1007.2417);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 7)// Int Pref LS (commerce)
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 354.5289, 189.0204, 1010.7874 ,354.5289, 189.0204, 1010.7874,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
                SetPlayerInterior(playerid, 3);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 331.9818,181.3290,1014.1875);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 8)// Int Pref LS (east beach)
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 354.5289, 189.0204, 1010.7874 ,354.5289, 189.0204, 1010.7874,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
                SetPlayerInterior(playerid, 3);
                SetPlayerVirtualWorld(playerid, 2);
                SetPlayerPos(playerid, 331.9818,181.3290,1014.1875);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 9)// casarao
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 1281.3691, -2008.3316, 71.9299 ,1281.3691, -2008.3316, 71.9299,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 1236.6776,-2070.7102,59.8886);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 10)// unity
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 1684.3660, -1945.9124, 28.2897 ,1684.3660, -1945.9124, 28.2897,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 1683.2881,-1963.3058,14.1172);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 11)// PG
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 1990.0914, -1249.6408, 36.0001,1990.0914, -1249.6408, 36.0001,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 1972.9620,-1287.1128,28.4919);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 12)// Morro
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 2177.7143, -1018.5062, 72.4801, 2177.7143, -1018.5062, 72.4801,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 2186.4172,-997.5766,62.8565);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 13)// Mansão do Madd Dogg
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 385.8288, -2029.9749, 22.8205, 385.8288, -2029.9749, 22.8205,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 354.0010,-2068.3403,7.8359);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
        }
        return 0;
    }
    if(dialogid == 8908)
    {
        if(response >= 1)
        {
            if(listitem == 0)//24-7 SF
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, -2434.0585, 720.8944, 40.7977, -2434.0585, 720.8944, 40.7977 ,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, -2408.4370,722.5980,35.1719);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 1)// Pref - SF (Country Club)
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, -2731.1198, -300.7951, 17.5377 ,-2731.1198, -300.7951, 17.5377, 5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, -2726.5800, -309.7051, 14.1175, -2726.5800, -309.7051, 14.1175,5000 ,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, -2717.6074,-320.6719,14.5174);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 2)// Pref - SF (Downtown)
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, -1908.6489, 828.8952, 42.8886 ,-1908.6489, 828.8952, 42.8886, 5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, -2726.5800, -309.7051, 14.1175, -2726.5800, -309.7051, 14.1175,5000 ,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, -1855.3246,863.7321,87.1946);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 3)// Loja de armas - SF
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, -2009.5368, 1037.4631, 64.2462 , -2009.5368, 1037.4631, 64.2462, 5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, -1999.6341, 1038.8548, 60.5001, -1999.6341, 1038.8548, 60.5001,5000 ,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, -1969.8776,992.5302,58.8125);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }

            if(listitem == 4)// DP - SF
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, -1607.5292, 735.9051, 20.9471, -1607.5292, 735.9051, 20.9471,5000 , CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, -1607.1802, 725.9112, 17.5269, -1607.1802, 725.9112, 17.5269,5000 ,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, -1610.9825,713.7554,48.9375);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 5)// Int DP - SF
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 269.7922, 75.9835, 1003.0452 ,269.7922, 75.9835, 1003.0452 ,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, 262.1318, 82.4114, 999.2991, 262.1318, 82.4114, 999.2991,5000 ,CAMERA_MOVE);
                SetPlayerInterior(playerid, 6);
                SetPlayerVirtualWorld(playerid, 1);
                SetPlayerPos(playerid, 264.4978,82.3155,1004.6830);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 6)// Int ROTA - SF
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 203.8481, 180.7021, 1004.9763 , 203.8481, 180.7021, 1004.9763,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
                SetPlayerInterior(playerid, 3);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 193.9738,175.0059,1007.2417);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 7)// Int Pref SF(country club)
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 354.5289, 189.0204, 1010.7874 ,354.5289, 189.0204, 1010.7874,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
                SetPlayerInterior(playerid, 3);
                SetPlayerVirtualWorld(playerid, 1);
                SetPlayerPos(playerid, 331.9818,181.3290,1014.1875);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 8)// Int Pref SF(Downtown)
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 354.5289, 189.0204, 1010.7874 ,354.5289, 189.0204, 1010.7874,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
                SetPlayerInterior(playerid, 3);
                SetPlayerVirtualWorld(playerid, 3);
                SetPlayerPos(playerid, 331.9818,181.3290,1014.1875);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 9)// puteiro
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, -2648.5639, 1360.6842, 21.8779 ,-2648.5639, 1360.6842, 21.8779,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, -2660.2417,1418.8271,23.8592);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 10)// construcao
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, -2113.3452, 169.9012, 48.2802 ,-2113.3452, 169.9012, 48.2802,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, -2055.3149,259.5490,28.6399);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 11)// praia
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, -2997.1215, 457.9920, 11.1850 ,-2997.1215, 457.9920, 11.1850,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, -2978.0056,463.0225,1.4561);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 12)// navio
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, -1504.6976, 144.9815, 32.2321 ,-1504.6976, 144.9815, 32.2321,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, -1544.5105,123.8271,32.9672);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 13)// aero
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, -1512.6502, -434.3499, 18.2579 ,-1512.6502, -434.3499, 18.2579,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, 195.1664, 176.2785, 1002.7268, 195.1664, 176.2785, 1002.7268,5000 ,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, -1516.2347,-505.0099,28.1568);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
        }
        return 0;
    }
    if(dialogid == 8909)
    {
        if(response >= 1)
        {
            if(listitem == 0)//entrada LV
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 1661.4241, -824.4493, 65.4594, 1661.4241, -824.4493, 65.4594 ,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 1632.5416,-843.3266,75.4453);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 1)//emerald
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 2071.3466, 2455.6970, 18.4713, 2071.3466, 2455.6970, 18.4713 ,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 2076.8347,2490.1584,10.8203);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 2)//emerald
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 2086.5546, 2413.6904, 12.9756, 2086.5546, 2413.6904, 12.9756 ,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 2070.7266,2414.4219,60.8169);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 3)//emerald
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 2091.0100, 2399.5551, 17.9183, 2091.0100, 2399.5551, 17.9183 ,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 2070.7266,2414.4219,60.8169);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 4)//emerald
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 2099.9316, 2404.8378, 22.2888, 2099.9316, 2404.8378, 22.2888 ,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 2070.7266,2414.4219,60.8169);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 5)//emerald
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 2099.9316, 2404.8378, 25.9510, 2099.9316, 2404.8378, 25.9510 ,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 2070.7266,2414.4219,60.8169);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 6)//emerald
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 2098.6154, 2409.8491, 30.1823, 2098.6154, 2409.8491, 30.1823 ,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 2070.7266,2414.4219,60.8169);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 7)//emerald
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 2098.6154, 2409.8491, 34.5943, 2098.6154, 2409.8491, 34.5943 ,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 2070.7266,2414.4219,60.8169);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 8)//emerald
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 2089.5283, 2411.3017, 39.4323, 2089.5283, 2411.3017, 39.4323 ,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 2070.7266,2414.4219,60.8169);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 9)//emerald
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 2090.7421, 2397.6442, 43.6785, 2090.7421, 2397.6442, 43.6785 ,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 2070.7266,2414.4219,60.8169);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 10)//emerald
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 2098.8125, 2410.4707, 47.9796, 2098.8125, 2410.4707, 47.9796 ,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 2070.7266,2414.4219,60.8169);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 11)//emerald
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 2101.7131, 2422.4331, 51.1960,2101.7131, 2422.4331, 51.1960 ,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid,2070.7266,2414.4219,60.8169);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 12)//emerald
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 2108.8217, 2430.7543, 70.9799, 2108.8217, 2430.7543, 70.9799 ,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 2070.7266,2414.4219,60.8169);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
            if(listitem == 13)//emerald
            {
                ClearChatbox(playerid, 100);
                InterpolateCameraPos( playerid, 2076.4880, 2424.4487, 87.2528, 2076.4880, 2424.4487, 87.2528 ,5000, CAMERA_MOVE);
                //InterpolateCameraLookAt( playerid, -2436.1376, 730.6759, 37.7075 , -2436.1376, 730.6759, 37.7075,5000,CAMERA_MOVE);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid, 2070.7266,2414.4219,60.8169);
                SendClientMessage(playerid, 0x33FF00FF, "USE: /cameras para voltar ao menu, você pode mover a camera com o MOUSE!");
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
                TextDrawShowForPlayer(playerid, Hidealto2[playerid]);
                TextDrawShowForPlayer(playerid, Hidebaixo2[playerid]);
                NaCamera[playerid] = 5;
    return 1;
            }
        }
        return 0;
    }
    if(dialogid == 8910)
    {
        if(response >= 1)
        {
            format(gstring,sizeof(gstring),"/definirsenha %s",inputtext);
            OnPlayerCommandText(playerid,gstring);
        }
  return 1;
    }
    if(dialogid == 8911)
    {
        if(response >= 1)
        {
            format(gstring,sizeof(gstring),"/acessarcamerass %s",inputtext);
            OnPlayerCommandText(playerid,gstring);
        }
  return 1;
    }
    if(dialogid == 1)
    {
    if(response == 0)
    {

        SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Você foi desconectado! Tempo limite para login atingido!");
        Kick(playerid);
        return 1;
    }
    if(response >= 1)
    {

        if(strlen(inputtext) == 0)
        {

            GetPlayerName(playerid,loginname,sizeof(loginname));
            //TogglePlayerControllable(playerid, 0);
            //SetPlayerPos(playerid,1415.4329,-806.9493,85.0470);
            format(loginstring,sizeof(loginstring),"  {FFFFFF}Seja bem-vindo ao {1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer v1.0\n{FFFFFF}            Site em criação\n\n{FFFFFF}                   Conta: {31611b}Registrada!\n{FFFFFF}                   Nick:{2657a9} %s\n\n{FFFFFF}                     Digite sua senha.\n{a09f2c}    ATENÇÃO! LIMITE DE TENTATIVAS [6]",loginname);
            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD,"            {1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer v1.0",loginstring,"Entrar","Sair");
            //InterpolateCameraPos(playerid, 1442.4664, -866.5638, 89.6085, 1416.4031,-870.2377,91.1348, 6000, CAMERA_CUT);
            //SetPlayerCameraPos(playerid, 1342.3231, -847.4993, 91.1653);
            //SetPlayerCameraLookAt(playerid, 1342.7404, -848.4073, 90.7405);
            return 1;
        }
        if(strval(inputtext) > 0)
        {

            strmid(StrPasswrd[playerid], inputtext, 0, strlen(inputtext), 255);
            Encrypt(StrPasswrd[playerid]);
            OnPlayerLogin(playerid);
            return 1;
        }
        strmid(StrPasswrd[playerid], inputtext, 0, strlen(inputtext), 255);
        Encrypt(StrPasswrd[playerid]);
        Hospital[playerid] = 1;
        SpawnPlayer(playerid);
        OnPlayerLogin(playerid);
        return 1;
    }
    return 1;
    }
    if(dialogid == 2)
    {
        if(response == 0)
        {
            SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Você foi desconectado! Tempo limite para login atingido!");
            Kick(playerid);
            return 1;
        }
        if(response >= 1)
        {
            format(string, sizeof(string), OpenAccPlayer, PlayerName(playerid));
            new File: hFile = fopen(string, io_read);
            if (hFile)
            {
                SendClientMessage(playerid, COLOR_YELLOW, "Este nick já está sendo utilizado!");
                fclose(hFile);
                Kick(playerid);
                return 1;
            }
            if(strlen(inputtext) == 0)
            {
                GetPlayerName(playerid,loginname,sizeof(loginname));
                //TogglePlayerControllable(playerid, 0);
                //SetPlayerPos(playerid,1415.4329,-806.9493,85.0470);
                format(loginstring,sizeof(loginstring),"  {FFFFFF}Seja bem-vindo ao {1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer v1.0\n{FFFFFF}            bpg-rapidosemortais.forumeiros.com\n\n{FFFFFF}                 Conta: {c31616}Não registrada!\n{FFFFFF}                 Nick:{2657a9} %s\n\n{FFFFFF}                   Escolha sua senha.\n{a09f2c}    *LEMBRE-SE DE ANOTAR SUA SENHA!*",loginname);
                ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT,"            {1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer v1.0",loginstring,"Registrar","Cancelar");
                //InterpolateCameraPos(playerid, 1442.4664, -866.5638, 89.6085, 1416.4031,-870.2377,91.1348, 6000, CAMERA_CUT);
                //InterpolateCameraPos(playerid, 1416.4031,-870.2377,91.1348, 1342.3231, -847.4993, 91.1653, 6000, CAMERA_CUT);
                //InterpolateCameraLookAt(playerid, 1415.4329,-806.9493,85.0470, 1342.7404, -848.4073, 90.7405, 10000, CAMERA_MOVE);
                return 1;
            }
            if(strval(inputtext) > 0)
            {
                if(strlen(inputtext) > 16)
                {
                     SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Erro: Sua senha contém mais de 16 caracteres!");
                     format(loginstring,sizeof(loginstring),"  {FFFFFF}Seja bem-vindo ao {1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer v1.0\n{FFFFFF}            bpg-rapidosemortais.forumeiros.com\n\n{FFFFFF}                 Conta: {c31616}Não registrada!\n{FFFFFF}                 Nick:{2657a9} %s\n\n{FFFFFF}                   Escolha sua senha.\n{a09f2c}    *LEMBRE-SE DE ANOTAR SUA SENHA!*",loginname);
                     ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT,"            {1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer v1.0",loginstring,"Registrar","Cancelar");
                     TogglePlayerControllable(playerid, 0);
                     return 1;
                }
                strmid(StrPasswrd[playerid], inputtext, 0, strlen(inputtext), 255);
                Encrypt(StrPasswrd[playerid]);
                OnPlayerRegister(playerid);
                return 1;
            }
            /*getdate(year, month, day);
            format(gstring, sizeof(gstring), "AdmAviso: %s Registrou no Servidor (%d-%d-%d), Senha: %s", PlayerName(playerid),day,month,year,StrPasswrd[playerid]);
            RegistroLog(gstring);
            SoEuVejoMsm(COLOR_YELLOW, gstring);*/
            strmid(StrPasswrd[playerid], inputtext, 0, strlen(inputtext), 255);
            Encrypt(StrPasswrd[playerid]);
            OnPlayerRegister(playerid);
            return 1;
        }
        return 1;
    }
    if(dialogid == DIALOGID2)
    {
        if(response)
        {
            if(listitem == 0)
            {
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
                PlayerInfo[playerid][pLuta] = 1;
            }
            if(listitem == 1)
            {
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
                PlayerInfo[playerid][pLuta] = 2;
            }
            if(listitem == 2)
            {
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
                PlayerInfo[playerid][pLuta] = 3;
            }
            if(listitem == 3)
            {
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
                PlayerInfo[playerid][pLuta] = 4;
            }
            if(listitem == 4)
            {
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
                PlayerInfo[playerid][pLuta] = 5;
            }
            if(listitem == 5)
            {
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
                PlayerInfo[playerid][pLuta] = 6;
            }
        }
        return 1;
    }
    if(dialogid == 3)
    {
        if(response == 0)
        {
            vinnyInfo[playerid][Tels] = 0;
            return 1;
        }
        if(response >= 1)
        {
            if(listitem == 0)
            {
                if (PlayerInfo[playerid][pPhoneBook] == 1)
                {
                    format(gstring,sizeof(gstring),"/ligar %d",vinnyInfo[playerid][Tels]);
                    OnPlayerCommandText(playerid,gstring);
                    return 1;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não tem lista telefônica !");
                    return 1;
                }
            }
            if(listitem == 1)
            {
                if (PlayerInfo[playerid][pPhoneBook] == 1)
                {
                    ShowPlayerDialog(playerid, 4, DIALOG_STYLE_INPUT, "Menu SMS", "Digite a Mensagem", "Enviar", "Cancelar");
                    return 1;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não tem uma agenda !");
                    return 1;
                }
            }
            return 1;
        }
        return 1;
    }
    if(dialogid == 4)
    {
        if(response == 0)
        {
            vinnyInfo[playerid][Tels] = 0;
            return 1;
        }
        if(response >= 1)
        {
            format(gstring,sizeof(gstring),"/sms %d %s",vinnyInfo[playerid][Tels],inputtext);
            OnPlayerCommandText(playerid,gstring);
            return 1;
        }
        return 1;
    }
    if(dialogid == 9)
    {
        if(response == 1)
        {
              SetTimerEx("EsperandoTutorial", 8*1000,false, "d", playerid);
              LiberadoTutorial[playerid] = false;
              PlayerInfo[playerid][pSex] = 1;
              SetPlayerSkinEx(playerid, 23);
              PlayerInfo[playerid][pSkin] = 23;
              ShowPlayerDialog(playerid, 799, DIALOG_STYLE_MSGBOX, "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer", "-{FF8000}Certo! Você é um Homem!\n{FFA4FF}Siga o tutorial.", "Tutorial", "");
              return 0;
        }
        else if(response == 0)
        {
              SetTimerEx("EsperandoTutorial", 8*1000,false, "d", playerid);
              LiberadoTutorial[playerid] = false;
              PlayerInfo[playerid][pSex] = 2;
              SetPlayerSkinEx(playerid, 216);
              PlayerInfo[playerid][pSkin] = 216;
              ShowPlayerDialog(playerid, 799, DIALOG_STYLE_MSGBOX, "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer", "-{FF8000}Certo! Você é uma Mulher!\n{FFA4FF}Siga o tutorial.", "Tutorial", "");

              return 0;
        }
        return 0;
    }
    if(dialogid == 799)
    {
        if(LiberadoTutorial[playerid] == true)
        {
            if(response == 1) {
                  SetTimerEx("EsperandoTutorial", 8*1000,false, "d", playerid);
                  LiberadoTutorial[playerid] = false;
                  PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
                  TextDrawShowForPlayer(playerid, BoasVindas);
                  SetPlayerCameraPos(playerid, 1870.3817, -1682.1737, 79.5768);
                  SetPlayerCameraLookAt(playerid, 1869.6132, -1681.5365, 78.9418);
                  RegistrationStep[playerid] = 0;
                  ClearChatbox(playerid, 20);
                  ShowPlayerDialog(playerid, 900, DIALOG_STYLE_MSGBOX, "{FFA4FF}Bem Vindo", "-{55FFAA}Este servidor é extremamente feito para você!\n\n-Tudo que foi feito aqui até hoje, tem a finalidade de que vocês possam ter uma jogabilidade altamente boa\n\n-Aqui você vai ter uma segunda vida, com amigos, esposas, tráfico, roubo, sequestros, etc...\n\n-Nossa equipe está disposta a te ajudar, vamos fazer o possivel para agradar vocês.", "Avançar", "");
                  SendClientMessage(playerid, 0x8080FFAA, "Seja Bem Vindo! Siga o Tutorial para Aprender as nossas Regras Básicas.");
                  return 0;
            }
            else if(response == 0)
            {
                  SetTimerEx("EsperandoTutorial", 8*1000,false, "d", playerid);
                  LiberadoTutorial[playerid] = false;
                  PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
                  TextDrawShowForPlayer(playerid, BoasVindas);
                  SetPlayerCameraPos(playerid, 1870.3817, -1682.1737, 79.5768);
                  SetPlayerCameraLookAt(playerid, 1869.6132, -1681.5365, 78.9418);
                  RegistrationStep[playerid] = 0;
                  ClearChatbox(playerid, 20);
                  ShowPlayerDialog(playerid, 900, DIALOG_STYLE_MSGBOX, "{FFA4FF}Bem Vindo", "-{55FFAA}Este servidor é extremamente feito para você!\n\n-Tudo que foi feito aqui até hoje, tem a finalidade de que vocês possam ter uma jogabilidade altamente boa\n\n-Aqui você vai ter uma segunda vida, com amigos, esposas, tráfico, roubo, sequestros, etc...\n\n-Nossa equipe está disposta a te ajudar, vamos fazer o possivel para agradar vocês.", "Avançar", "");
                  SendClientMessage(playerid, 0x8080FFAA, "Seja Bem Vindo! Siga o Tutorial para Aprender as nossas Regras Básicas.");
                  return 0;
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 799, DIALOG_STYLE_MSGBOX, "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer", "-{FF8000}Certo!\n{FFA4FF}Siga o tutorial.", "Tutorial", "");
            SendClientMessage(playerid, -1, "Espere ser liberado para o tutorial.");
        }
        return 0;
    }
    if(dialogid == 900)
    {
        if(LiberadoTutorial[playerid] == true)
        {
            if(response == 1) {
                  SetTimerEx("EsperandoTutorial", 8*1000,false, "d", playerid);
                  LiberadoTutorial[playerid] = false;
                  PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
                  TextDrawHideForPlayer(playerid, BoasVindas);
                  TextDrawShowForPlayer(playerid, InfoBasicas);
                  ShowPlayerDialog(playerid, 901, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Informações Básicas ::.", "-{98F5FF}Este é um servidor de RPG, Simulação de vida real.\n\n-Nós estamos absolutamente interessados em jogadores que não façam DM e DB.\n\n-Você Não mata ninguem na vida real, nao rouba ninguem na vida real.\n\n-Se você for um civil, jogue como um civil. Se for gangster... Ai Sim, Poderá Matar e Roubar.\n\n-Mais Sem Matar Civis ou Pessoas Que Não Fizeram Nada Com Você.", "Avançar", "");
                  PlayerInfo[playerid][pEmprego] = 0;//Desbuga o emprego
                  return 0;
            }
            else if(response == 0)
            {
                  SetTimerEx("EsperandoTutorial", 8*1000,false, "d", playerid);
                  LiberadoTutorial[playerid] = false;
                  PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
                  TextDrawHideForPlayer(playerid, BoasVindas);
                  TextDrawShowForPlayer(playerid, InfoBasicas);
                  ShowPlayerDialog(playerid, 901, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Informações Básicas ::.", "-{98F5FF}Este é um servidor de RPG, Simulação de vida real.\n\n-Nós estamos absolutamente interessados em jogadores que não façam DM e DB.\n\n-Você Não mata ninguem na vida real, nao rouba ninguem na vida real.\n\n-Se você for um civil, jogue como um civil. Se for gangster... Ai Sim, Poderá Matar e Roubar.\n\n-Mais Sem Matar Civis ou Pessoas Que Não Fizeram Nada Com Você.", "Avançar", "");
                  PlayerInfo[playerid][pEmprego] = 0;//Desbuga o emprego
                  return 0;
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 900, DIALOG_STYLE_MSGBOX, "{FFA4FF}Bem Vindo", "-{55FFAA}Este servidor é extremamente feito para você!\n\n-Tudo que foi feito aqui até hoje, tem a finalidade de que vocês possam ter uma jogabilidade altamente boa\n\n-Aqui você vai ter uma segunda vida, com amigos, esposas, tráfico, roubo, sequestros, etc...\n\n-Nossa equipe está disposta a te ajudar, vamos fazer o possivel para agradar vocês.", "Avançar", "");
            SendClientMessage(playerid, -1, "Espere ser liberado para o tutorial.");
        }
        return 0;
    }
    if(dialogid == 901)
    {
        if(LiberadoTutorial[playerid] == true)
        {
            if(response == 1) {
                  SetTimerEx("EsperandoTutorial", 8*1000,false, "d", playerid);
                  LiberadoTutorial[playerid] = false;
                  PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
                  TextDrawHideForPlayer(playerid, InfoBasicas);
                  TextDrawShowForPlayer(playerid, RegBasicas);
                  ShowPlayerDialog(playerid, 902, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Regras Básicas ::.", "-{FFD3A8}Sempre respeite um admin, ele está fazendo o melhor por você.\n\n-Não abuse da boa vontade de nossos admin. Não causar terrorismo, DM, DB. Não chingue, Não abuse de BUG.\n\n-Não peça admin, e nem para que eles aumentem seus cargos.\n\n-E o principal, nunca use xiter para se beneficiar, em caso de uso de xiter será banido imediatamente.", "Avançar", "");
                  return 0;
            }
            else if(response == 0)
            {
                  SetTimerEx("EsperandoTutorial", 8*1000,false, "d", playerid);
                  LiberadoTutorial[playerid] = false;
                  PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
                  TextDrawHideForPlayer(playerid, InfoBasicas);
                  TextDrawShowForPlayer(playerid, RegBasicas);
                  ShowPlayerDialog(playerid, 902, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Regras Básicas ::.", "-{FFD3A8}Sempre respeite um admin, ele está fazendo o melhor por você.\n\n-Não abuse da boa vontade de nossos admin. Não causar terrorismo, DM, DB. Não chingue, Não abuse de BUG.\n\n-Não peça admin, e nem para que eles aumentem seus cargos.\n\n-E o principal, nunca use xiter para se beneficiar, em caso de uso de xiter será banido imediatamente.", "Avançar", "");
                  return 0;
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 901, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Informações Básicas ::.", "-{98F5FF}Este é um servidor de RPG, Simulação de vida real.\n\n-Nós estamos absolutamente interessados em jogadores que não façam DM e DB.\n\n-Você Não mata ninguem na vida real, nao rouba ninguem na vida real.\n\n-Se você for um civil, jogue como um civil. Se for gangster... Ai Sim, Poderá Matar e Roubar.\n\n-Mais Sem Matar Civis ou Pessoas Que Não Fizeram Nada Com Você.", "Avançar", "");
            SendClientMessage(playerid, -1, "Espere ser liberado para o tutorial.");
        }
        return 0;
    }
    if(dialogid == 902)
    {
        if(LiberadoTutorial[playerid] == true)
        {
            if(response == 1) {
                SetTimerEx("EsperandoTutorial", 8*1000,false, "d", playerid);
                LiberadoTutorial[playerid] = false;
                PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
                TextDrawHideForPlayer(playerid, RegBasicas);
                TextDrawShowForPlayer(playerid, CmdUteis);
                ShowPlayerDialog(playerid, 903, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Comando Uteis ::.", "-{55FFAA}/relatorio - Falar com os admin, /duvida - Esclareça uma duvida, /gps - Veja onde ficar os lugares importantes.\n\n-/rg - Ver seus status, /ajuda, /meuskin - Vá até uma binco.\n\n-Digitando /ajuda você todos esses comandos e mais alguns que você utilizará.\n\n-Durante seu jogo, no /ajuda tem vários outros comandos que podem te ajudar.", "Avançar", "");
                return 0;
            }
            else if(response == 0)
            {
                  SetTimerEx("EsperandoTutorial", 8*1000,false, "d", playerid);
                  LiberadoTutorial[playerid] = false;
                  PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
                  TextDrawHideForPlayer(playerid, RegBasicas);
                  TextDrawShowForPlayer(playerid, CmdUteis);
                  ShowPlayerDialog(playerid, 903, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Comando Uteis ::.", "-{55FFAA}/relatorio - Falar com os admin, /duvida - Esclareça uma duvida, /gps - Veja onde ficar os lugares importantes.\n\n-/rg - Ver seus status, /ajuda, /meuskin - Vá até uma binco.\n\n-Digitando /ajuda você todos esses comandos e mais alguns que você utilizará.\n\n-Durante seu jogo, no /ajuda tem vários outros comandos que podem te ajudar.", "Avançar", "");
                  return 0;
            }

        }
        else
        {
            ShowPlayerDialog(playerid, 902, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Regras Básicas ::.", "-{FFD3A8}Sempre respeite um admin, ele está fazendo o melhor por você.\n\n-Não abuse da boa vontade de nossos admin. Não causar terrorismo, DM, DB. Não chingue, Não abuse de BUG.\n\n-Não peça admin, e nem para que eles aumentem seus cargos.\n\n-E o principal, nunca use xiter para se beneficiar, em caso de uso de xiter será banido imediatamente.", "Avançar", "");
            SendClientMessage(playerid, -1, "Espere ser liberado para o tutorial.");
        }
        return 0;
        }
    if(dialogid == 903)
    {
        if(LiberadoTutorial[playerid] == true)
        {
            if(response == 1) {
                  SetTimerEx("EsperandoTutorial", 8*1000,false, "d", playerid);
                  LiberadoTutorial[playerid] = false;
                  PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
                  TextDrawHideForPlayer(playerid, CmdUteis);
                  TextDrawShowForPlayer(playerid, LocaisUteis);
                  ShowPlayerDialog(playerid, 904, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Lugares Importantes ::.", "-{98F5FF}Nosso proximo tópico, mostrará alguns lugares importantes.\n\n-Onde você passará perto o jogo inteiro, e partes fundamentais do servidor.\n\n-Como: Prefeitura, DP, Banco, Binco e Morro.\n\n\n-----:> Brasil PlayGamer Agradece Sua Visita <:----.", "Avançar", "");
                  return 0;
            }
            else if(response == 0)
            {
                  SetTimerEx("EsperandoTutorial", 8*1000,false, "d", playerid);
                  LiberadoTutorial[playerid] = false;
                  PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
                  TextDrawHideForPlayer(playerid, CmdUteis);
                  TextDrawShowForPlayer(playerid, LocaisUteis);
                  ShowPlayerDialog(playerid, 904, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Lugares Importantes ::.", "-{98F5FF}Nosso proximo tópico, mostrará alguns lugares importantes.\n\n-Onde você passará perto o jogo inteiro, e partes fundamentais do servidor.\n\n-Como: Prefeitura, DP, Banco, Binco e Morro.\n\n\n-----:> Brasil PlayGamer Agradece Sua Visita <:----.", "Avançar", "");
                  return 0;
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 903, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Comando Uteis ::.", "-{55FFAA}/relatorio - Falar com os admin, /duvida - Esclareça uma duvida, /gps - Veja onde ficar os lugares importantes.\n\n-/rg - Ver seus status, /ajuda, /meuskin - Vá até uma binco.\n\n-Digitando /ajuda você todos esses comandos e mais alguns que você utilizará.\n\n-Durante seu jogo, no /ajuda tem vários outros comandos que podem te ajudar.", "Avançar", "");
            SendClientMessage(playerid, -1, "Espere ser liberado para o tutorial.");
        }
     return 0;
     }
    if(dialogid == 904)
    {
        if(LiberadoTutorial[playerid] == true)
        {
            if(response == 1) {
                  SetTimerEx("EsperandoTutorial", 8*1000,false, "d", playerid);
                  LiberadoTutorial[playerid] = false;
                  PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
                  ShowPlayerDialog(playerid, 905, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Prefeitura ::.", "-{FFD3A8}Neste local, você poderá pegar empregos e comprar carteiras de motorista.\n\n-Aqui também será onde o nosso Prefeito ficará quando eleito!\n\n-Lá dentro tem 2 icones -| Um R$ e uma Maleta |-\n\n-R$ = /licencas |  Maleta = /empregos", "Avançar", "");
                  SetPlayerPos(playerid,1538.3636,-1785.8292,13.5468);
                  SetPlayerCameraPos(playerid,1483.8164,-1727.4125,13.3828);
                  SetPlayerCameraLookAt(playerid,1481.0267,-1772.1371,19.4570);
                  SetPlayerInterior(playerid, 0);
                  return 0;
            }
            else if(response == 0)
            {
                  SetTimerEx("EsperandoTutorial", 8*1000,false, "d", playerid);
                  LiberadoTutorial[playerid] = false;
                  PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
                  ShowPlayerDialog(playerid, 905, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Prefeitura ::.", "-{FFD3A8}Neste local, você poderá pegar empregos e comprar carteiras de motorista.\n\n-Aqui também será onde o nosso Prefeito ficará quando eleito!\n\n-Lá dentro tem 2 icones -| Um R$ e uma Maleta |-\n\n-R$ = /licencas |  Maleta = /empregos", "Avançar", "");
                  SetPlayerPos(playerid,1538.3636,-1785.8292,13.5468);
                  SetPlayerCameraPos(playerid,1483.8164,-1727.4125,13.3828);
                  SetPlayerCameraLookAt(playerid,1481.0267,-1772.1371,19.4570);
                  SetPlayerInterior(playerid, 0);
                  return 0;
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 904, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Lugares Importantes ::.", "-{98F5FF}Nosso proximo tópico, mostrará alguns lugares importantes.\n\n-Onde você passará perto o jogo inteiro, e partes fundamentais do servidor.\n\n-Como: Prefeitura, DP, Banco, Binco e Morro.\n\n\n-----:> Brasil PlayGamer Agradece Sua Visita <:----.", "Avançar", "");
            SendClientMessage(playerid, -1, "Espere ser liberado para o tutorial.");
        }
        return 0;
        }
    if(dialogid == 905)
    {
        if(LiberadoTutorial[playerid] == true)
        {
            if(response == 1) {
                  SetTimerEx("EsperandoTutorial", 8*1000,false, "d", playerid);
                  LiberadoTutorial[playerid] = false;
                  PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
                  ShowPlayerDialog(playerid, 906, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Departamento de Policia ::.", "-{55FFAA}Neste local, ficarão os policiais de plantão e trabalhando.\n\n-Se não souber como chamar um admin é só vir até aqui que eles vão te ajudar\n\n-Dentro dela tem portões onde apenas policias poderão abrir\n\n-Busque por ajuda, ou denuncie crimes aqui!", "Avançar", "");
                  SetPlayerCameraPos(playerid,1519.4929,-1675.6611,21.0900);
                  SetPlayerCameraLookAt(playerid,1557.2080,-1675.8904,16.1953);
                  SetPlayerPos(playerid,1547.1060,-1693.2738,13.9214);
                  return 0;
            }
            else if(response == 0)
            {
                  SetTimerEx("EsperandoTutorial", 8*1000,false, "d", playerid);
                  LiberadoTutorial[playerid] = false;
                  PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
                  ShowPlayerDialog(playerid, 906, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Departamento de Policia ::.", "-{55FFAA}Neste local, ficarão os policiais de plantão e trabalhando.\n\n-Se não souber como chamar um admin é só vir até aqui que eles vão te ajudar\n\n-Dentro dela tem portões onde apenas policias poderão abrir\n\n-Busque por ajuda, ou denuncie crimes aqui!", "Avançar", "");
                  SetPlayerCameraPos(playerid,1519.4929,-1675.6611,21.0900);
                  SetPlayerCameraLookAt(playerid,1557.2080,-1675.8904,16.1953);
                  SetPlayerPos(playerid,1547.1060,-1693.2738,13.9214);
                  return 0;
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 905, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Prefeitura ::.", "-{FFD3A8}Neste local, você poderá pegar empregos e comprar carteiras de motorista.\n\n-Aqui também será onde o nosso Prefeito ficará quando eleito!\n\n-Lá dentro tem 2 icones -| Um R$ e uma Maleta |-\n\n-R$ = /licencas |  Maleta = /empregos", "Avançar", "");
            SendClientMessage(playerid, -1, "Espere ser liberado para o tutorial.");
        }
        return 0;
        }
    if(dialogid == 906)
    {
        if(LiberadoTutorial[playerid] == true)
        {
            if(response == 1) {
                  SetTimerEx("EsperandoTutorial", 8*1000,false, "d", playerid);
                  LiberadoTutorial[playerid] = false;
                  PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
                  ShowPlayerDialog(playerid, 907, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Banco ::.", "-{98F5FF}Neste local, você pode transitar sua grana, aumentar, sacar, depositar(também há caixas eletrônicos com essas funções).\n\n-Como na vida real, banco aqui é feito para pagamentos, juros, saques, salários, etc...\n\n-Dica: Mantenha o máximo de grana em sua conta, pois a cada pagamento(PayDay) os juros vão ser maiores.", "Avançar", "");
                  SetPlayerCameraPos(playerid,1463.9277,-1043.5249,31.3181);
                  SetPlayerCameraLookAt(playerid,1461.7306,-1014.2181,26.6566);
                  SetPlayerPos(playerid,1424.6486,-1020.7975,23.8281);
                  SetPlayerInterior(playerid, 0);
                  return 0;
            }
            else if(response == 0)
            {
                  SetTimerEx("EsperandoTutorial", 8*1000,false, "d", playerid);
                  LiberadoTutorial[playerid] = false;
                  PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
                  ShowPlayerDialog(playerid, 907, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Banco ::.", "-{98F5FF}Neste local, você pode transitar sua grana, aumentar, sacar, depositar(também há caixas eletrônicos com essas funções).\n\n-Como na vida real, banco aqui é feito para pagamentos, juros, saques, salários, etc...\n\n-Dica: Mantenha o máximo de grana em sua conta, pois a cada pagamento(PayDay) os juros vão ser maiores.", "Avançar", "");
                  SetPlayerCameraPos(playerid,1463.9277,-1043.5249,31.3181);
                  SetPlayerCameraLookAt(playerid,1461.7306,-1014.2181,26.6566);
                  SetPlayerPos(playerid,1424.6486,-1020.7975,23.8281);
                  SetPlayerInterior(playerid, 0);
                  return 0;
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 906, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Departamento de Policia ::.", "-{55FFAA}Neste local, ficarão os policiais de plantão e trabalhando.\n\n-Se não souber como chamar um admin é só vir até aqui que eles vão te ajudar\n\n-Dentro dela tem portões onde apenas policias poderão abrir\n\n-Busque por ajuda, ou denuncie crimes aqui!", "Avançar", "");
            SendClientMessage(playerid, -1, "Espere ser liberado para o tutorial.");
        }
        return 0;
        }
    if(dialogid == 907)
    {
        if(LiberadoTutorial[playerid] == true)
        {
            if(response == 1) {
                  SetTimerEx("EsperandoTutorial", 8*1000,false, "d", playerid);
                  LiberadoTutorial[playerid] = false;
                  PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
                  ShowPlayerDialog(playerid, 908, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Binco ::.", "-{FFD3A8}Neste local, você poderá mudar sua roupa (skin) para um que você goste.\n\n-Cada roupa (skin) que você escolher, será cobrado R$500\n\n-É só você entrar e digitar /meuskin [ID da SKIN] que irá mudar!", "Avançar", "");
                  SetPlayerPos(playerid, 2243.7371,-1668.1760,15.4766);
                  SetPlayerCameraPos(playerid, 2264.1365,-1653.5085,19.6254);
                  SetPlayerCameraLookAt(playerid, 2243.7371,-1668.1760,15.4766);
                  SetPlayerInterior(playerid, 0);
                  return 0;
            }
            else if(response == 0)
            {
                  SetTimerEx("EsperandoTutorial", 8*1000,false, "d", playerid);
                  LiberadoTutorial[playerid] = false;
                  PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
                  ShowPlayerDialog(playerid, 908, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Binco ::.", "-{FFD3A8}Neste local, você poderá mudar sua roupa (skin) para um que você goste.\n\n-Cada roupa (skin) que você escolher, será cobrado R$500\n\n-É só você entrar e digitar /meuskin [ID da SKIN] que irá mudar!", "Avançar", "");
                  SetPlayerPos(playerid, 2243.7371,-1668.1760,15.4766);
                  SetPlayerCameraPos(playerid, 2264.1365,-1653.5085,19.6254);
                  SetPlayerCameraLookAt(playerid, 2243.7371,-1668.1760,15.4766);
                  SetPlayerInterior(playerid, 0);
                  return 0;
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 907, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Banco ::.", "-{98F5FF}Neste local, você pode transitar sua grana, aumentar, sacar, depositar(também há caixas eletrônicos com essas funções).\n\n-Como na vida real, banco aqui é feito para pagamentos, juros, saques, salários, etc...\n\n-Dica: Mantenha o máximo de grana em sua conta, pois a cada pagamento(PayDay) os juros vão ser maiores.", "Avançar", "");
            SendClientMessage(playerid, -1, "Espere ser liberado para o tutorial.");
        }
        return 0;
        }
    if(dialogid == 908)
    {
        if(LiberadoTutorial[playerid] == true)
        {
            if(response == 1) {
                  SetTimerEx("EsperandoTutorial", 8*1000,false, "d", playerid);
                  LiberadoTutorial[playerid] = false;
                  PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
                  ShowPlayerDialog(playerid, 909, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Morro ::.", "-{55FFAA}Neste local, é onde vão ocorrer muitas guerras entre gangs.\n\n-Pois querem dominar o morro ou por território de trafico!\n\n-Muitas vezes é invadido pela ROTA/Policia Militar\n\n-Não fique de bobeira no morro, pode ser vitima de bala perdida!", "Avançar", "");
                  SetPlayerPos(playerid, 2144.1062,-970.9034,80.0703);
                  SetPlayerCameraPos(playerid,2212.5364,-989.5125,83.3038);
                  SetPlayerCameraLookAt(playerid,2151.6057,-1014.4344,67.1739);
                  SetPlayerInterior(playerid, 0);
                  return 0;
                }
            else if(response == 0)
            {
                      SetTimerEx("EsperandoTutorial", 8*1000,false, "d", playerid);
                      LiberadoTutorial[playerid] = false;
                  PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
                  ShowPlayerDialog(playerid, 909, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Morro ::.", "-{55FFAA}Neste local, é onde vão ocorrer muitas guerras entre gangs.\n\n-Pois querem dominar o morro ou por território de trafico!\n\n-Muitas vezes é invadido pela ROTA/Polícia Rodoviária Federal/Policia Militar\n\n-Não fique de bobeira no morro, pode ser vitima de bala perdida!", "Avançar", "");
                  SetPlayerPos(playerid, 2144.1062,-970.9034,80.0703);
                  SetPlayerCameraPos(playerid,2212.5364,-989.5125,83.3038);
                  SetPlayerCameraLookAt(playerid,2151.6057,-1014.4344,67.1739);
                  SetPlayerInterior(playerid, 0);
                  return 0;
                }
        }
        else
        {
            ShowPlayerDialog(playerid, 908, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Binco ::.", "-{FFD3A8}Neste local, você poderá mudar sua roupa (skin) para um que você goste.\n\n-Cada roupa (skin) que você escolher, será cobrado R$500\n\n-É só você entrar e digitar /meuskin [ID da SKIN] que irá mudar!", "Avançar", "");
            SendClientMessage(playerid, -1, "Espere ser liberado para o tutorial.");
        }
        return 0;
        }
    if(dialogid == 909)
    {
            if(response == 1) {
                SetTimerEx("EsperandoTutorial", 8*1000,false, "d", playerid);
                LiberadoTutorial[playerid] = false;
                PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
                TextDrawHideForPlayer(playerid, LocaisUteis);
                TextDrawShowForPlayer(playerid, BoasVindas);
                ShowPlayerDialog(playerid, 910, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Seja bem vindo ::.", "-{98F5FF}Seja bem vindo ao nosso servidor Brasil PlayGamer de RPG.\n\n-Sua presença aqui é muito importante para nós!\n\n-Vocês são o futuro do nosso servidor.", "Concluir", "");
                SendClientMessage(playerid, 0xFF80FFAA, "Obrigado por fazer parte da Nossa Familia.");
                SetPlayerPos(playerid,1803.5999,-1638.5000,13.3999);
                SetPlayerCameraPos(playerid, 1870.3817, -1682.1737, 79.5768);
                SetPlayerCameraLookAt(playerid, 1869.6132, -1681.5365, 78.9418);
                SetPlayerInterior(playerid, 0);
                return 0;
            }
            else if(response == 0)
            {
                SetTimerEx("EsperandoTutorial", 8*1000,false, "d", playerid);
                LiberadoTutorial[playerid] = false;
                PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
                TextDrawHideForPlayer(playerid, LocaisUteis);
                TextDrawShowForPlayer(playerid, BoasVindas);
                ShowPlayerDialog(playerid, 910, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Seja bem vindo ::.", "-{98F5FF}Seja bem vindo ao nosso servidor Brasil PlayGamer de RPG.\n\n-Sua presença aqui é muito importante para nós!\n\n-Vocês são o futuro do nosso servidor.", "Concluir", "");
                SendClientMessage(playerid, 0xFF80FFAA, "Obrigado por fazer parte da Nossa Familia.");
                SetPlayerPos(playerid,1803.5999,-1638.5000,13.3999);
                SetPlayerCameraPos(playerid, 1870.3817, -1682.1737, 79.5768);
                SetPlayerCameraLookAt(playerid, 1869.6132, -1681.5365, 78.9418);
                SetPlayerInterior(playerid, 0);
                return 0;
            }
        return 0;
      }
    if(dialogid == 910)
      {
        if(response == 1) {
            PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
            SetPlayerCameraPos(playerid,1519.4929,-1675.6611,21.0900);
            SetPlayerCameraLookAt(playerid,1557.2080,-1675.8904,16.1953);
            TextDrawHideForPlayer(playerid, BoasVindas);
            TextDrawHideForPlayer(playerid, BoxTuto1);
            TextDrawHideForPlayer(playerid, BoxTuto2);
            SendClientMessage(playerid, 0x00FFFFAA, "~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~");
            SendClientMessage(playerid, 0xFFD3A8FF, " Seja Bem Vindo ao nosso servidor {1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer");
            SendClientMessage(playerid, 0xFFD3A8FF, " Caso precise de ajuda digite /duvida [Texto] ou /relatorio [Texto]");
            SendClientMessage(playerid, 0xFFD3A8FF, " Visite nosso forum (/forum)");
            SendClientMessage(playerid, 0x00FFFFAA, "~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~");
            PlayerPlaySound(playerid, 1057, 0,0,0);
            PlayerInfo[playerid][pTut] = 1;
            SetPlayerInterior(playerid,0);
            TogglePlayerControllable(playerid, 1);
            SetPlayerVirtualWorld(playerid,0);
            Hospital[playerid] = 1;
            SetPlayerSpawn(playerid);
            SetCameraBehindPlayer(playerid);
            GivePlayerMoney(playerid, 50000);
            SendClientMessage(playerid, 0xC78FFFAA, "Você ganhou 50000 e level 3 por logar em nosso servidor, Bom Jogo!");
            SetPlayerInterior(playerid, 0);
            //gNews[playerid] = 0;
            gFam[playerid] = 0;
            return 0;
        }
        else if(response == 0)
        {
            PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
            SetPlayerCameraPos(playerid,1519.4929,-1675.6611,21.0900);
            SetPlayerCameraLookAt(playerid,1557.2080,-1675.8904,16.1953);
            TextDrawHideForPlayer(playerid, BoasVindas);
            TextDrawHideForPlayer(playerid, BoxTuto1);
            TextDrawHideForPlayer(playerid, BoxTuto2);
            SendClientMessage(playerid, 0x00FFFFAA, "~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~");
            SendClientMessage(playerid, CORS, " Seja Bem Vindo ao nosso servidor {1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer");
            SendClientMessage(playerid, CORS, " Caso precise de ajuda digite /duvida [Texto] ou /relatorio [Texto]");
            SendClientMessage(playerid, CORS, " Visite nosso forum (/forum)");
            SendClientMessage(playerid, 0x00FFFFAA, "~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~");
            PlayerPlaySound(playerid, 1057, 0,0,0);
            PlayerInfo[playerid][pTut] = 1;
            SetPlayerInterior(playerid,0);
            TogglePlayerControllable(playerid, 1);
            SetPlayerVirtualWorld(playerid,0);
            Hospital[playerid] = 1;
            SetPlayerSpawn(playerid);
            SetCameraBehindPlayer(playerid);
            GivePlayerMoney(playerid, 50000);
            SendClientMessage(playerid, 0xC78FFFAA, "Você ganhou 50000 e level 3 por logar em nosso servidor, Bom Jogo!");
            SetPlayerInterior(playerid, 0);
            //gNews[playerid] = 0;
            gFam[playerid] = 0;
            return 0;
        }
        return 0;
    }
    if(dialogid == 10)
    {
        if(response)
        {
            if(listitem == 0)
            {
                SendClientMessage(playerid, COLOR_WHITE, "|______________ Ajuda Player ______________|");
                SendClientMessage(playerid, COLOR_WHITE,"Digite o comando desejado para mais informações!");
                SendClientMessage(playerid, COLOR_GRAD1,"BPG > /logar /rg /regras /forum /relatorio /duvida /comprarnivel /organizacoes(/orgs)");
                SendClientMessage(playerid, COLOR_GRAD2,"BPG > /meuskin /pagar /horas /gps /mostrarlicencas /loteria /setint /empregos /orelhao");
                SendClientMessage(playerid, COLOR_GRAD2,"BPG > /trancar /mudarlocal /minhaslicencas /comprararma /beber /caridade /desligarorelhao");
                SendClientMessage(playerid, COLOR_GRAD2,"BPG > /abastecer /contrato /aceitar /cancelar /ejetar /servico /localizar /alugarcarro");
                SendClientMessage(playerid, COLOR_GRAD3,"BPG > (/g)ritar (/s)usurro (/an)uncio /eu /alugarheli /alugarquarto /desalugar");
                SendClientMessage(playerid, COLOR_GRAD4,"BPG > /saldo /sacar /depositar ");
                SendClientMessage(playerid, COLOR_GREEN,"______________________________________");
            }
            if(listitem == 1)
            {
                SendClientMessage(playerid, COLOR_WHITE, "|______________ Ajuda Empresa ______________|");
                SendClientMessage(playerid, COLOR_WHITE,"Digite o comando desejado para mais informações!");
                SendClientMessage(playerid, COLOR_GRAD3,"BPG > /ajudaempresa (/entradaemp)resa (/nomeemp)resa /extorcao /infoempresa");
                SendClientMessage(playerid, COLOR_GRAD4,"BPG > /entrar /sair /chave /venderemp (/depositaremp)resa /sacarempresa");
                SendClientMessage(playerid, COLOR_GREEN,"______________________________________________");
            }
            if(listitem == 2)
            {
                SendClientMessage(playerid, COLOR_WHITE, "|______________ Ajuda Casa ______________|");
                SendClientMessage(playerid, COLOR_WHITE,"Digite o comando desejado para mais informações!");
                SendClientMessage(playerid, COLOR_GRAD3,"BPG > /entrar /sair /chave /vida /moveis(/mv) /mapacasa(Mostra No Mapa)");
                SendClientMessage(playerid, COLOR_GRAD3,"BPG > /comprarcarro /pintarcarro /despejartodos /mudarcasa(1 a 10)");
                SendClientMessage(playerid, COLOR_GRAD3,"BPG > /aluguel /despejar /cofrecasa /trancar(carro da casa) /alugada");
            }
            if(listitem == 3)
            {
                SendClientMessage(playerid, COLOR_WHITE, "|______________ Ajuda Aluguel ______________|");
                SendClientMessage(playerid, COLOR_GRAD3,"Aluguel > /desalugar /entrar /sair /trancar /mapacasa");
            }
            if(listitem == 4)
            {
                if (PlayerInfo[playerid][pPnumber] > 0)
                {
                    SendClientMessage(playerid, COLOR_WHITE, "|______________ Ajuda Celular ______________|");
                    SendClientMessage(playerid, COLOR_WHITE,"Digite o comando desejado para mais informações!");
                    SendClientMessage(playerid, COLOR_GRAD3,"BPG > /ligar /sms (/at)ender (/des)ligar /agenda /desativar celular");
                    SendClientMessage(playerid, COLOR_WHITE,"BPG > Não se esqueça de comprar créditos na 24-7!");
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY,"Você não tem um telefone, compre um na 24-7, USE: /gps");
                }
            }
            if(listitem == 5)
            {
                if (PlayerInfo[playerid][pLider] >= 1)
                {
                    SendClientMessage(playerid, COLOR_WHITE, "|______________ Ajuda Lider ______________|");
                    SendClientMessage(playerid, COLOR_WHITE,"Digite o comando desejado para mais informações!");
                    SendClientMessage(playerid, COLOR_GRAD3,"BPG > /convidar /demitir /limparvaga /promover /contaslider(Pedir Contas)");
                    if(PlayerInfo[playerid][pLider] == 7)
                    {
                        SendClientMessage(playerid, COLOR_GRAD3,"Prefeito > (/pre)feito /setartaxa");
                        SendClientMessage(playerid, COLOR_GRAD3,"Prefeito > /pagarcops  (Dá algum dinheiro para os Policiais)");
                        SendClientMessage(playerid, COLOR_GRAD3,"Prefeito > /pagarmedicos (Dá algum dinheiro para os Medicos)");
                        SendClientMessage(playerid, COLOR_GRAD3,"Prefeito > /pagarbolsa (Dá algum dinheiro para os Cidadaos)");
                    }
                    SendClientMessage(playerid, COLOR_DBLUE,"____________________________________________");
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não é um Líder!");
                }
            }
            if(listitem == 6)
            {
                SendClientMessage(playerid,COLOR_WHITE, "|______________ Ajuda Emprego ______________|");
                if(PlayerInfo[playerid][pEmprego] == 1)
                {
                    SendClientMessage(playerid,COLOR_YELLOW,"BPG > Detetive < /procurar");
                }
                if(PlayerInfo[playerid][pEmprego] == 2)
                {
                    SendClientMessage(playerid,COLOR_YELLOW,"BPG > Advogado < /soltar /pp(Portão Presos - DP) /autorizacao(Icone Na DP)");
                }
                if(PlayerInfo[playerid][pEmprego] == 3)
                {
                    SendClientMessage(playerid,COLOR_YELLOW,"BPG > Prof. do Sexo < /transar");
                }
                else if(PlayerInfo[playerid][pEmprego] == 4)
                {
                    SendClientMessage(playerid,COLOR_YELLOW,"BPG > Vendedor de Drogas < /sistemadedrogas");
                }
                else if(PlayerInfo[playerid][pEmprego] == 5)
                {
                        SendClientMessage(playerid,COLOR_LIGHTBLUE,"BPG > Mecânicos <  /guinchar /reparar /abastecercarro /batercartao");
                }
                else if(PlayerInfo[playerid][pEmprego] == 6)
                {
                    SendClientMessage(playerid,COLOR_YELLOW,"BPG > Segurança < /proteger");
                }
                else if(PlayerInfo[playerid][pEmprego] == 7)
                {
                    SendClientMessage(playerid,COLOR_YELLOW,"BPG > Vendedor de Armas < /materiais(Casarão e Estação) /venderarma");
                }
                else if(PlayerInfo[playerid][pEmprego] == 8)
                {
                    SendClientMessage(playerid,COLOR_GREEN,"BPG > Lutador de Boxe < /lutar /statusluta");
                }
                else if(PlayerInfo[playerid][pEmprego] == 9)
                {
                    SendClientMessage(playerid,COLOR_YELLOW,"BPG > Motorista de Ônibus < /corrida Entrar e Sair do Trabalho! /cancelar onibus(Cancelar a Corrida) /terminais");
                }
                else if(PlayerInfo[playerid][pEmprego] == 10)
                {
                    SendClientMessage(playerid,COLOR_YELLOW,"BPG > Mendigo < /esmola /pbarraca(por barraca) /rbarraca(retirar barraca)");
                }
                else if(PlayerInfo[playerid][pEmprego] == 11)
                {
                    SendClientMessage(playerid,COLOR_YELLOW,"BPG > Caminhoneiro < /infocam, /comprarprodutos, /venderprodutos");
                }
                if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Comandos > (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /prender /batercartao /procurados /algemar /imo /reforco /relatoon");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Comandos > /revistar /retirar /prender (/gov)erno /arrombar (/do)minar /desalgemar /arrombar /bafometro /multar /infoorg /rondar");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Portões  > /pe - P Estacionamento | /pg - P Garagem | /pr - P Recepção | /pp - P Presos | /pv - P Vestiário");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Barreira > /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Bloqueio > /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
                }
                if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Governo: /equipargov (/r)adio - (/d)epartamento - (/m)egafone - /algemar - /imo - /infoorg /relatoon");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Governo: /revistar - /retirar - /pp - /pgov - Portão dos Carros - /ppre - Porta Prefeitura");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Prefeito: (/pre)feito /dartaxa(Para os Policias) /setartaxa(Taxa Por Pessoa)");
                }
                if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Taxistas: /corrida Entrar e Sair do Trabalho! /cancelar onibus(Cancelar a Corrida) /antaxi");
                }
                if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Comandos > (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /detento /batercartao /procurados /algemar /imo /reforco /infoorg /relatoon");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Comandos > /revistar /retirar /prender (/gov)erno /camera /arrombar (/do)minar /desalgemar /arrombar /bafometro /multar /desamarrarcop");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Portões  > /PFII - Portao Federal | /pb2 - Garagem1 | /pb - Garagem2");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Barreira > /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Bloqueio > /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
                }
                if(PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Comandos > (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /detento /batercartao /procurados /algemar /imo /reforco /infoorg /relatoon");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Comandos > /revistar /retirar /prender (/gov)erno /camera /arrombar (/do)minar /desalgemar /arrombar /bafometro /multar");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Portões  > /PFII - Portao Federal | /pb2 - Garagem1 | /pb - Garagem2");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Barreira > /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Bloqueio > /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
                }
                if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Exército > (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /prender /batercartao /infoorg /relatoon");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Exército > /revistar /retirar (/gov)erno /camera /arrombar /algemar /imo /br /rb /multar /procurados");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Exército > /abrirgn - Portão Principal /equipar /algemar /desalgemar /reforco /bafometro");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Exército > /guerra /pontos(ver pontuação da guerra) /tirarbombas - Bloqueia os Homens Bombas");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Barreira > /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Bloqueio > /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
                }
                if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Polícia Civil > (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /prender /batercartao /infoorg");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Polícia Civil > /revistar /retirar (/gov)erno /camera /arrombar /algemar /imo /br /rb /multar /procurados /relatoon");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Polícia Civil > /abrirgn - Portão Principal /equipar /algemar /desalgemar /reforco /bafometro");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Barreira > /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Bloqueio > /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
                }
                if (PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Médicos > | (/r)adio | (/d)epartamento | /vida | /batercartao | /infoorg | (/gov)erno");
                }
                if (PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Groove Street >  | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | (/ang)ang");
                }
                if (PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "BPG > Terroristas <  /equipar /homembomba /carrobomba /gi (Anuncio G.I)");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "BPG > Terroristas <  (/ga)ngue /guerra /pontos(ver pontuação da guerra) /infoorg");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "BPG > Terroristas <  /sequestrar e /desamarrar - Fazer um sequestro");
                }
                if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "BPG > Terroristas <  /equipar /homembomba /carrobomba /alq");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "BPG > Terroristas <  (/ga)ngue /guerra /pontos(ver pontuação da guerra) /infoorg");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "BPG > Terroristas <  /sequestrar e /desamarrar - Fazer um sequestro");
                }
                if (PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Comandos > (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /prender /batercartao /procurados /algemar /imo /infoorg /relatoon");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Comandos > /revistar /retirar /prender (/gov)erno /deliver /camera /arrombar /desalgemar /bafometro /reforco /multar /rondar");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Portões  > /ppr(Portão PR) | DP > /pv - Vestiário(DP) | /pr | /pp - Portao DP");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Barreira > /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Bloqueio > /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Apreender Veículo > /apreendercarro (/pcarro) - Apreende um Veículo, Somente Particular(Concessionária).");
                }
                if (PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "BPG > Máfias <  /(ga)ngue /mafia /mafiavarma /mafiavkit /amarrar /desamarrarm /infoorg /anmafia");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "BPG > Máfias <  Para pegar ou esconder materiais va a HQ ou um territorio");
                }
                if (PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Loz Aztecas > | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | (/ang)ang");
                }
                if (PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Hitmans > /laptop - Computador Hitman | /arrombar(Porta das Casas) | /anas - Anúncio Hitmans");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comandos > /ga - Chat Hitmans | /infoorg");
                }
                if (PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Triads > /laptop - Computador | /arrombar(Porta das Casas) | /anas - Anúncio Triads");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comandos > /ga - Chat Triads | /infoorg");
                }
                if (PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Ballas >  | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | (/ang)ang");
                }
                if (PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Los Vagos > | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | (/ang)ang");
                }
                if (PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Repórter >  | /noticias | /aovivo | (/preporter & /preporter2 = Portões) |");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comandos >  | (/ga)ngue) | /live | /noticias [texto] | /infoorg");
                }
                if (PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"B.O.P.E > (/m)egafone /equipar /batercartao /procurados /presos /reforco /multar /infoorg");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comandos > (/su)spect /limpar /revistar /r(adio) /d(epartamento) /do(minar) /arrombar /bafometro");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Portões  >  /ppf - Portão HQ | Portôes DP LS(/pr /pp /pv /pe /pg)");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Barreira > /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Bloqueio > /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
                }
                if(PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Snake >  | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | (/ang)ang");
                }
                if (PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comando Vermelho >  | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | (/ang)ang");
                }
                if (PlayerInfo[playerid][pMembro] == 36 || PlayerInfo[playerid][pLider] == 36)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Storm >  | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | (/ang)ang | /pStorm");
                }
                if (PlayerInfo[playerid][pMembro] == 35 || PlayerInfo[playerid][pLider] == 35)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"KiLLeRs >  | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | (/ang)ang");
                }
                if (PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE," DesTroyeR >  | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | (/ang)ang");
                }
                if (PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE," Justiceiros >  | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | (/ang)ang");
                }
                if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
                {
                    SendClientMessage(playerid,0xE8FFEAAA,"Policia Civil > | /mostrarsnha | /cameras | (/r)adio | /definirsenha | (/d)epartamento");
                }
                if (PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"HunTerS >  | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | (/ang)ang");
                }
                if (PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"FaTal DangeR >  | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | (/ang)ang");
                }
                if (PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"PCC >  | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | (/ang)ang");
                }
                if (PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Hells Agenls >  | (/ga)ng | /sequestrar & /desamarrar | /assaltar | /infoorg | /roubar | (/anhells)");
                }
                if (PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Mongols M.C. >  | (/ga)ng | /sequestrar & /desamarrar | /assaltar | /infoorg | /roubar | (/anmon)");
                }
                if (PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Sons Of Anarchy >  | (/ga)ng | /sequestrar & /desamarrar | /assaltar | /infoorg | /roubar | (/ansons)");
                }
                if (PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Triads >  | (/ga)ng | /roubar | /laptop | /infoorg | /membros | (/anas)");
                }
                if (PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Drifters >  | (/ga)ng | /tunar | /sequestrar & /desamarrar | /assaltar | /infoorg | /roubar | (/andrifters) | /do | /pd");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Drifters >  Locais de Domínio: Pista de Skate | Posto de Gasolina | Cemitério | Shopping Center");
                }
            }
            if(listitem == 7)
            {
                SendClientMessage(playerid, COLOR_WHITE, "|______________ Ajuda Pesca ______________|");
                SendClientMessage(playerid, COLOR_GRAD3,"Pescaria > /pescar (Tente pegar um peixe)   /peixes (Mostrar os peixes que você pegou)");
                SendClientMessage(playerid, COLOR_GRAD3,"Pescaria > /soltarultimo(Jogue o último peixe Você pegou de volta) /soltartodos(jogue todos seus peixes de volta)");
                SendClientMessage(playerid, COLOR_GRAD3,"Pescaria > /soltarpeixe (Liberação de uma de suas barbatanas) /vender(+ de 20 LBs | 24-7) /comer(Casas de Comida)");
            }
            if(listitem == 8)
            {
                SendClientMessage(playerid, COLOR_WHITE, "|______________ Ajuda IRC ______________|");
                SendClientMessage(playerid, COLOR_WHITE,"Chat IRC > (/irc entrar [nº canal] ou /irc entrar [nº canal] [Senha])  (/irc sair)");
                SendClientMessage(playerid, COLOR_WHITE,"Chat IRC > (/irc senha [nº canal])  (/irc needpass [nº canal])  (/irc trancar [nº canal])");
                SendClientMessage(playerid, COLOR_WHITE,"Chat IRC > (/irc Admins)  (/irc MOTD [motdtext])  (/irc status [nº canal])  (/i [texto])");
            }
            if(listitem == 9)
            {
                SendClientMessage(playerid, COLOR_WHITE, "|______________ Ajuda Cozinha ______________|");
                SendClientMessage(playerid, COLOR_GRAD3,"Cozinha > /cozinhar (Mostra as opcoes disponiveis) /cozido (Mostra o que ja foi cozinhado)");
                SendClientMessage(playerid, COLOR_GRAD3,"Cozinha > /comer (Come o que ja foi cozinhado)");
            }
            if(listitem == 10)
            {
                SendClientMessage(playerid, COLOR_WHITE, "|______________ Ajuda Casamento ______________|");
                SendClientMessage(playerid, COLOR_LIGHTRED,"/padrinho (cada 1 tem que ter 1 padrinho!)");
                SendClientMessage(playerid, COLOR_LIGHTRED,"/casar (quem pedir tem que ter 1 casa!)");
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"Não sabe o local? digite /gps - Igreja");
                SendClientMessage(playerid, TEAM_VAGOS_COLOR,"Separação(Digite: /separacao)");
            }
            if(listitem == 11)
            {
                SendClientMessage(playerid, COLOR_WHITE, "|______________ Forum do Server ______________|");
                SendClientMessage(playerid, COLOR_YELLOW,"bpg-rapidosemortais.forumeiros.com/");
                SendClientMessage(playerid, COLOR_YELLOW,"Se cadastre e veja as contas VIP's.");
            }
            if(listitem == 12)
            {
                SendClientMessage(playerid, COLOR_WHITE, "|______________ Créditos ______________|");
                SendClientMessage(playerid, COLOR_YELLOW, "GameMode GodFather, criado por: Vinny_Wesker e Denver.");
                SendClientMessage(playerid, COLOR_YELLOW, "Editado por: Caaw/MooP/William Para o servidor BPG  .");
                SendClientMessage(playerid, COLOR_YELLOW, "Agradecimentos: Caaw/MooP/William por Sistemas exclusivos.");
            }
            if(listitem == 13)
            {
                if (PlayerInfo[playerid][pVip] >= 1)
                {
                    SendClientMessage(playerid, COLOR_WHITE, "|______________ Ajuda VIPs e Premiuns ______________|");
                    SendClientMessage(playerid, 0xCDB38BAA, "-> /kitvip /mala /desativar celular /v(chat) /relatorio(cor destacada)");
                    SendClientMessage(playerid, COLOR_GRAD1, "-> Carros VIPS: /veiculo ajuda");
                    SendClientMessage(playerid, COLOR_GRAD1, "-> Casas VIPS: /ajudacasa");
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "Você não é um jogador VIP/S-VIP");
                }
            }
            if(listitem == 14)
            {
                SendClientMessage(playerid, COLOR_WHITE, "|______________ Seja VIP ______________|");
                SendClientMessage(playerid, COLOR_YELLOW,"/forum - Para virar VIP acesse nosso forum");
                SendClientMessage(playerid, COLOR_YELLOW,"Temos VIP's de R$10,00 até R$20,00!");
                SendClientMessage(playerid, COLOR_YELLOW,"Caso esteja com dúvida /senha ou /relato!");
                SendClientMessage(playerid, COLOR_LIGHTRED,"Acesse bpg-rapidosemortais.forumeiros.com/");
            }
        }
        return 1;
    }
    if(dialogid == 101)
    {
        if(response == 0)
        {
            format(string,sizeof(string),"Confirma");
            OnPlayerText(playerid,string);
            return 1;
        }
        if(response >= 1)
        {
            format(string,sizeof(string),"Proximo");
            OnPlayerText(playerid,string);
            ShowPlayerDialog(playerid,101,DIALOG_STYLE_MSGBOX,"Convite da Organização","{00FFFF}Você foi convidado para uma Organização\n{FF8000}Escolha o seu skin preferido\n{0080FF}Se você gostar desse Aperte em '{00FFFF}Pronto{0080FF}'\n{0080FF}Se não gostar use '{00FFFF}Próximo{0080FF}'","Próximo","Pronto");
            return 1;
        }
        return 1;
    }
    if(dialogid == 468)
    {
        if(response == 0)
        {
            format(string,sizeof(string),"Nao");
            OnPlayerText(playerid,string);
            return 1;
        }
        if(response >= 1)
        {
            format(string,sizeof(string),"Sim");
            OnPlayerText(playerid,string);
            return 1;
        }
        return 1;
    }
    if(dialogid == 642)
    {
        if(response == 0)
        {
            OnPlayerCommandText(playerid,"/cancelar convite");
        }
        if(response == 1)
        {
            OnPlayerCommandText(playerid,"/aceitar convite");
        }
  return 1;
    }
    if(dialogid == 4569)
    {
        if(response == 0)
        {
            ConviteFamy[playerid] = 0;
        }
        if(response == 1)
        {
            PlayerInfo[playerid][pFamyMember] = ConviteFamy[playerid];
            MudarNickAceito[playerid] = 1;
            format(strvinny,sizeof(strvinny),"{33FF99}Você aceitou o convite para a Família!\nAgora digite seu nick abaixo.\n{FFA8FF}O Nick deverá conter o nome de sua Família.\n{33FF99}Ex:{80FFFF} Nome_%s",NomeFamy(playerid));
            ShowPlayerDialog(playerid, 1234, DIALOG_STYLE_INPUT,"Convite Família",strvinny,"Confirmar","Cancelar");
        }
  return 1;
    }
    if(dialogid == 5123)
    {
        if(response == 1)
        {
            if(strlen(inputtext) < 1) return 1;
            if(strcmp(inputtext,Passwrd,true) == 0)
            {
                if(ServerOwner[playerid] == 0)
                {
                    ServerOwner[playerid] = 1;
                    vinnyOwna = 1;
                    SendClientMessage(playerid,-1,"{ffc000}** LOGIN ACEITO! VOCÊ ESTÁ CONECTADO COMO SCRIPTER/DONO DO GAMEMODE.");
                    getdate(year, month, day);
                    gettime(hour,minute);
                    format(gstring,sizeof(gstring), "%s se logou como admin secreto [%d/%d/%d - %d:%d]",PlayerName(playerid),day, month, year,hour, minute);
                    fdplog(gstring);
                    return 1;
                }
                else
                {
                    PlayerInfo[playerid][pAdmin] = 0;
                    ServerOwner[playerid] = 0;
                    SendClientMessage(playerid,COLOR_GREEN,"{ffc000}** LOGOUT EFETUADO! VOCÊ SAIU DO MODO SCRIPTER/DONO DO GAMEMODE.");
                    return 1;
                }
            }
            else
            {
                getdate(year, month, day);
                gettime(hour,minute);
                format(gstring,sizeof(gstring), "%s digitou a senha e errou [%d/%d/%d - %d:%d]",PlayerName(playerid),day, month, year,hour, minute);
                fdplog(gstring);
                SendClientMessage(playerid, COLOR_LIGHTRED,"[ERRO] A SENHA QUE VOCÊ DIGITOU ESTÁ INCORRETA! OPERAÇÃO ABORTADA.");
                return 1;
            }
        }
  return 1;
    }
    if(dialogid == 5124)
    {
        if(response == 1)
        {
            if(strlen(inputtext) < 1) return 1;
            if(strcmp(inputtext,Passwrd,true) == 0)
            {
                format(strvinny,sizeof(strvinny),"Senha correta, verificação completa!\nDigite agora a nova senha de Administração!\nEm seguida clique em 'Confirmar' para continuar.\nOu em 'Cancelar' Para abortar.\n** Esta operação está sendo registrada em Logs.",PlayerName(playerid));
                ShowPlayerDialog(playerid, 5125, DIALOG_STYLE_INPUT,"Alteração de Senha",strvinny,"Confirmar","Cancelar");
            }
            else return SendClientMessage(playerid, COLOR_LIGHTRED,"[ERRO] A SENHA QUE VOCÊ DIGITOU ESTÁ INCORRETA! OPERAÇÃO ABORTADA.");
        }
  return 1;
    }
    if(dialogid == 5125)
    {
        if(response == 0) return SendClientMessage(playerid, COLOR_LIGHTRED,"** OPERAÇÃO CANCELADA.");
        if(response == 1)
        {
            strmid(Passwrd, inputtext, 0, strlen(inputtext), 255);
            SendClientMessage(playerid, -1,"** Confirme a nova Senha!");
            format(string,sizeof(string),"Sua senha está prestes a ser alterada para: %s, digite novamente para confirmar.",Passwrd);
            SendClientMessage(playerid, -1,string);
            format(strvinny,sizeof(strvinny),"Senha adicionada com Sucesso!\nPara que possamos registrar, Precisamos da confirmação\nRepita novamente a mesma senha e clique em 'Confirmar'\nCaso queira abortar o procedimento clique em 'Cancelar'\n** Esta operação está sendo registrada em Logs.");
            ShowPlayerDialog(playerid, 5126, DIALOG_STYLE_INPUT,"Alteração de Senha",strvinny,"Confirmar","Cancelar");
            return 1;
        }
        return 1;
    }
    if(dialogid == 5126)
    {
        if(response == 0)
        { LoadPassword();
        return SendClientMessage(playerid, COLOR_LIGHTRED,"** Operação cancelada pelo usuário!"); }
        if(response == 1)
        {
            if(strcmp(inputtext,Passwrd,true) == 0)
            {
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"** Parabéns, Você alterou a senha com sucesso!");
                format(string,sizeof(string),"Sua nova senha de administração do servidor agora é: %s",Passwrd);
                SendClientMessage(playerid, -1,string);
                //Encrypt(inputtext);
                strmid(Passwrd, inputtext, 0, strlen(inputtext), 255);
                SalvarPassword();
                return 1;
            }
            else
            {LoadPassword();
            return SendClientMessage(playerid, COLOR_LIGHTRED,"ERRO: Você digitou uma senha diferente da primeira, Operação Abortada!"); }
        }
        return 1;
    }
    if(dialogid == 1234)
    {
        if(response == 0)
        {
            if(strfind(PlayerName(playerid), "Snake", true) != -1)
            {
                MudarNickAceito[playerid] = 0;
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você Cancelou a Mudança de Nick, Para família, Portanto Continuará na Família com Nick Atual.");
            }
            else if(strfind(PlayerName(playerid), "Snake", true) != -1)
            {
                MudarNickAceito[playerid] = 0;
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você Cancelou a Mudança de Nick, Para família, Portanto Continuará na Família com Nick Atual.");
            }
            else if(strfind(PlayerName(playerid), "HunTerS", true) != -1)
            {
                MudarNickAceito[playerid] = 0;
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você Cancelou a Mudança de Nick, Para família, Portanto Continuará na Família com Nick Atual.");
            }
            else if(strfind(PlayerName(playerid), "Storm", true) != -1)
            {
                MudarNickAceito[playerid] = 0;
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você Cancelou a Mudança de Nick, Para família, Portanto Continuará na Família com Nick Atual.");
            }
            else if(strfind(PlayerName(playerid), "asafasf", true) != -1)
            {
                MudarNickAceito[playerid] = 0;
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você Cancelou a Mudança de Nick, Para família, Portanto Continuará na Família com Nick Atual.");
            }
            else if(strfind(PlayerName(playerid), "asfasf", true) != -1)
            {
                MudarNickAceito[playerid] = 0;
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você Cancelou a Mudança de Nick, Para família, Portanto Continuará na Família com Nick Atual.");
            }
            else
            {
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você Não pode Cancelar a Mudança de Nick Pois Seu nick Não contêm o Nome de Sua Família!");
                SendClientMessage(playerid, 0xFF8080FF, "Você Não pode Cancelar a Mudança de Nick Pois Seu nick Não contêm o Nome de Sua Família!");
                format(gstring,sizeof(gstring),"{33FF99}Você aceitou o convite para a Família!\nAgora digite seu nick abaixo.\n{FFA8FF}O Nick deverá conter o nome de sua Família.\n{33FF99}Ex:{80FFFF} Nome_%s",NomeFamy(playerid));
                ShowPlayerDialog(playerid, 1234, DIALOG_STYLE_INPUT,"Convite Família",gstring,"Confirmar","Cancelar");
            }
        }
        if(response == 1)
        {
            format(gstring,sizeof(gstring),"/mudarnick %s",inputtext);
            OnPlayerCommandText(playerid,gstring);
        }
  return 1;
    }
    if(dialogid == DIALOG_MV6)
    {
        //SendClientMessage(playerid, 0xB4B5B7FF, "chegou dialog!");
        if(response == 1)
        {
            new mesesvip = strval(inputtext),Mensagem[128];
                                     //   SendClientMessage(playerid, 0xB4B5B7FF, "response!");
                if(!strlen(inputtext))
                {

                    strcat(Mensagem, "Digite a quantidade de meses que irá comprar\nUsando moedas verdes!");
                    ShowPlayerDialog(playerid, DIALOG_MV6, DIALOG_STYLE_INPUT, "Compra de VIP",Mensagem,"Comprar","Cancelar");
                    return 1;
                }
                else if(mesesvip <= 0)
                {
                    strcat(Mensagem, "Digite a quantidade de meses que irá comprar\nUsando moedas verdes!");
                    ShowPlayerDialog(playerid, DIALOG_MV6, DIALOG_STYLE_INPUT, "Compra de VIP",Mensagem,"Comprar","Cancelar");
                }
                else
                {
                    new PrecoVip = CalcularMVs(playerid, tipodovipcomprado[playerid], mesesvip),mvs = PlayerInfo[playerid][pMV];
                    if(mvs < PrecoVip)
                    {
                    format(strvinny, sizeof(strvinny), "Você precisa de %d Moedas verdes, para poder comprar %d meses vip, escolha menos meses!",PrecoVip,mesesvip);
                    SendClientMessage(playerid, -1, strvinny);
                    strcat(Mensagem, "Digite a quantidade de meses que irá comprar\nUsando suas moedas verdes disponiveis!");
                    ShowPlayerDialog(playerid, DIALOG_MV6, DIALOG_STYLE_INPUT, "Compra de VIP",Mensagem,"Comprar","Cancelar");
     return 1;
                    }
                    return SetarVip(playerid, tipodovipcomprado[playerid], mesesvip,0);
                }

        }
        return 1;
    }
    if(dialogid == 643)
    {
        if(response == 0)
        {
            OnPlayerCommandText(playerid,"/sair");
        }
        if(response == 1)
        {
            OnPlayerCommandText(playerid,"/alugarcarro");
        }
  return 1;
    }
    if(dialogid == 644)
    {
        if(response == 0)
        {
            OnPlayerCommandText(playerid,"/sair");
        }
        if(response == 1)
        {
            OnPlayerCommandText(playerid,"/alugarheli");
        }
  return 1;
    }
    if(dialogid == 1643)
    {
        if(response == 0)
        {
            format(strvinny, sizeof(strvinny), "Driver-By: Vítima %s NÃO Confirmou a Tentativa de DB, Acusado não será Kickado!",victmname);
            SendClientMessageToAll(COLOR_LIGHTRED,strvinny);
        }
        if(response == 1)
        {
            format(strvinny, sizeof(strvinny), "Driver-By: Vítima %s CONFIRMOU a Tentativa de DB, Acusado Foi Kickado!",victmname);
            SendClientMessageToAll(COLOR_LIGHTRED,strvinny);
            format(gstring, sizeof(gstring), "Você Foi Acusado de Cometer DB em: %s, e Foi Kickado", victmname);
            SendClientMessage(GetPlayerDB[playerid], COLOR_LIGHTBLUE, gstring);
            Kick(GetPlayerDB[playerid]);
        }
  return 1;
    }
    if(dialogid == DIALOG_SOLTURA)
    {
        if(response == 0)
        {
            SendClientMessage(playerid, COLOR_LIGHTRED, "Você recusou e não será solto pelo Advogado!");
            return 1;
        }
        if(response == 1)
        {
            if(PedidoAdvogado[playerid] < 999)
            {
                format(string, sizeof(string), "* O presidiário %s aceitou a sua proposta de soltura por R$%d", PlayerName(playerid), PrecoAdvogado[playerid]);
                SendClientMessage(PedidoAdvogado[playerid], COLOR_LIGHTBLUE, string);
                ConsumingMoney[playerid] = 1;
                ConsumingMoney[PedidoAdvogado[playerid]] = 1;
                GivePlayerMoneyEx(playerid, -PrecoAdvogado[playerid]);
                GivePlayerMoneyEx(PedidoAdvogado[playerid], PrecoAdvogado[playerid]);
                ApprovedAdvogado[PedidoAdvogado[playerid]] = 0;
                //WantLawyer[playerid] = 0;
                //CallLawyer[playerid] = 0;
                JailPrice[playerid] = 0;
                PlayerInfo[playerid][pAjustado] = 1;
                new Diminuir;
                if(PlayerInfo[PedidoAdvogado[playerid]][pLawSkill] < 50)
                {
                    Diminuir = PlayerInfo[playerid][pJailTime]-PlayerInfo[playerid][pJailTime]*10/100;
                    PlayerInfo[playerid][pJailTime] = Diminuir;
                    printf("%d",Diminuir);printf("%d",PlayerInfo[playerid][pJailTime]);
                    format(string, sizeof(string), "* Você aceitou a proposta do advogado %s por R$%d, ele era nível 1 e reduziu 10 por cento da sua pena!", PlayerName(PedidoAdvogado[playerid]), PrecoAdvogado[playerid]);
                }
                else if(PlayerInfo[PedidoAdvogado[playerid]][pLawSkill] >= 50 && PlayerInfo[PedidoAdvogado[playerid]][pLawSkill] < 100)
                {
                    Diminuir = PlayerInfo[playerid][pJailTime]-PlayerInfo[playerid][pJailTime]*20/100;
                    PlayerInfo[playerid][pJailTime] = Diminuir;
                    format(string, sizeof(string), "* Você aceitou a proposta do advogado %s por R$%d, ele era nível 2 e reduziu 20 por cento da sua pena!", PlayerName(PedidoAdvogado[playerid]), PrecoAdvogado[playerid]);
                }
                else if(PlayerInfo[PedidoAdvogado[playerid]][pLawSkill] >= 100 && PlayerInfo[PedidoAdvogado[playerid]][pLawSkill] < 200)
                {
                    Diminuir = PlayerInfo[playerid][pJailTime]-PlayerInfo[playerid][pJailTime]*30/100;
                    PlayerInfo[playerid][pJailTime] = Diminuir;
                    format(string, sizeof(string), "* Você aceitou a proposta do advogado %s por R$%d, ele era nível 3 e reduziu 30 por cento da sua pena!", PlayerName(PedidoAdvogado[playerid]), PrecoAdvogado[playerid]);
                }
                else if(PlayerInfo[PedidoAdvogado[playerid]][pLawSkill] >= 200 && PlayerInfo[PedidoAdvogado[playerid]][pLawSkill] < 400)
                {
                    Diminuir = PlayerInfo[playerid][pJailTime]-PlayerInfo[playerid][pJailTime]*50/100;
                    PlayerInfo[playerid][pJailTime] = Diminuir;
                    format(string, sizeof(string), "* Você aceitou a proposta do advogado %s por R$%d, ele era nível 4 e reduziu 50 por cento da sua pena!", PlayerName(PedidoAdvogado[playerid]), PrecoAdvogado[playerid]);
                }
                else if(PlayerInfo[PedidoAdvogado[playerid]][pLawSkill] >= 400)
                {
                    Diminuir = PlayerInfo[playerid][pJailTime]-PlayerInfo[playerid][pJailTime]*70/100;
                    PlayerInfo[playerid][pJailTime] = Diminuir;
                    format(string, sizeof(string), "* Você aceitou a proposta do advogado %s por R$%d, ele era nível 5 e reduziu 70 por cento da sua pena!", PlayerName(PedidoAdvogado[playerid]), PrecoAdvogado[playerid]);
                }
                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                if(PlayerInfo[playerid][pJailTime] < 1) { PlayerInfo[playerid][pJailTime] = 1; }
                PlayerInfo[PedidoAdvogado[playerid]][pLawSkill] ++;
                if(PlayerInfo[PedidoAdvogado[playerid]][pLawSkill] == 50)
                { SendClientMessage(PedidoAdvogado[playerid], COLOR_YELLOW, "* Sua habilidade de advogado e agora Nível 2, você vai ganhar mais dinheiro em menos tempo."); }
                else if(PlayerInfo[PedidoAdvogado[playerid]][pLawSkill] == 100)
                { SendClientMessage(PedidoAdvogado[playerid], COLOR_YELLOW, "* Sua habilidade de advogado e agora Nível 3, você vai ganhar mais dinheiro em menos tempo."); }
                else if(PlayerInfo[PedidoAdvogado[playerid]][pLawSkill] == 200)
                { SendClientMessage(PedidoAdvogado[playerid], COLOR_YELLOW, "* Sua habilidade de advogado e agora Nível 4, você vai ganhar mais dinheiro em menos tempo."); }
                else if(PlayerInfo[PedidoAdvogado[playerid]][pLawSkill] == 400)
                { SendClientMessage(PedidoAdvogado[playerid], COLOR_YELLOW, "* Sua habilidade de advogado e agora Nível 5, você vai ganhar mais dinheiro em menos tempo."); }
                PedidoAdvogado[playerid] = 999;
                PrecoAdvogado[playerid] = 0;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "O Advogado não está conectado!");
            }
        }
        return 1;
    }
    if(dialogid == 2245)
    {
        if(response == 0)   //n acc
        {
            format(string, sizeof(string), "* Você Recusou Receber uma: %s, de: %s.", NomeArma[playerid],PlayerName(IDpassouArma[playerid]));
            SendClientMessage(playerid, 0xFF7979FF, string);
            format(string, sizeof(string), "* %s Recusou receber uma %s de Você.", PlayerName(playerid),NomeArma[playerid]);
            SendClientMessage(IDpassouArma[playerid], 0xFF7979FF, string);
            PassArmaID[playerid] = 0;
            QuantMun[playerid] = 0;
            IDpassouArma[playerid] = 9999;
        }
        if(response == 1)  // acc
        {
            new ArmaTeste[32];
            GetWeaponName(PassArmaID[playerid],ArmaTeste,sizeof(ArmaTeste));
            strmid(NomeArma[playerid], ArmaTeste, 0, strlen(ArmaTeste), 255);
            format(string, sizeof(string), "* Você Aceitou Receber uma: %s, com %d Munições, de: %s.", NomeArma[playerid],QuantMun[playerid],PlayerName(IDpassouArma[playerid]));
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            format(string, sizeof(string), "* %s Aceitou receber uma %s de Você.", PlayerName(playerid),NomeArma[playerid]);
            SendClientMessage(IDpassouArma[playerid], COLOR_LIGHTBLUE, string);
            format(string, sizeof(string), "* %s Esta Passando uma %s para %s.",PlayerName(IDpassouArma[playerid]),NomeArma[playerid],PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            GivePlayerWeapon(playerid, PassArmaID[playerid], QuantMun[playerid]);
            SetPlayerArmedWeapon( playerid, PassArmaID[playerid] );
            RemovePlayerWeapon(IDpassouArma[playerid], PassArmaID[playerid]);
            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            PassArmaID[playerid] = 0;
            QuantMun[playerid] = 0;
            IDpassouArma[playerid] = 9999;
        }
  return 1;
    }
    if(dialogid == dhitman) //dialog hitmans
    {
        if(response == 0)
        {
        return 1;
            }
        if(listitem == 0)
            {
                SetPlayerSkinEx(playerid, 23);
                return 1;
            }
            else if(listitem == 1)
            {
                SetPlayerSkinEx(playerid, 285);
                return 1;
            }
            else if(listitem == 2)
            {
                SetPlayerSkinEx(playerid, 120);
                return 1;
            }
            else if(listitem == 3)
            {
                SetPlayerSkinEx(playerid, 113);
                return 1;
            }
            else if(listitem == 4)
            {
                SetPlayerSkinEx(playerid, 270);
                return 1;
            }
            else if(listitem == 5)
            {
                SetPlayerSkinEx(playerid, 104);
                return 1;
            }
            else if(listitem == 6)
            {
                SetPlayerSkinEx(playerid, 295);
                return 1;
            }
            else if(listitem == 7)
            {
                SetPlayerSkinEx(playerid, 283);
                return 1;
            }
            else if(listitem == 8)
            {
                SetPlayerSkinEx(playerid, 287);
                return 1;
            }
            else if(listitem == 9)
            {
                SetPlayerSkinEx(playerid, 123);
                return 1;
            }
            else if(listitem == 10)
            {
                SetPlayerSkinEx(playerid, 249);
            }
            else if(listitem == 11)
            {
                SetPlayerSkinEx(playerid, 247);
                return 1;
            }
            else if(listitem == 12)
            {
                SetPlayerSkinEx(playerid, 108);
                return 1;
            }
            else if(listitem == 13)
            {
                SetPlayerSkinEx(playerid, 19);
                return 1;
            }
            else if(listitem == 14)
            {
                SetPlayerSkinEx(playerid, 108);
                return 1;
            }
            else if(listitem == 15)
            {
                SetPlayerSkinEx(playerid, 115);
                return 1;
            }
        return 1;
    }
    if(dialogid == 156)
    {
        if(response == 1)
        {
        }
        else if(response == 0)
        {
        }
        return 0;
    }
    if(dialogid == 26547)
    {
        if(response)
        {
            new carid = GetPlayerVehicleID(playerid);
            if(listitem == 0) //reparar
            {
                RepairVehicle(carid);
                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 10.0);
            }
            if(listitem == 1) //automatico
            {
                TunarCarro(carid);
                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 10.0);
            }
            if(listitem == 2) //personalisar
            {
                ShowMenuForPlayer(Principal, playerid);
                TogglePlayerControllable(playerid, false);
                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 10.0);
            }
            if(listitem == 3) //neon
            {
                ShowPlayerDialog(playerid, 8899, DIALOG_STYLE_LIST, "Escolha de Neons", "Azul\nVermelho\nVerde\nBranco\nRosa\nAmarelo\nRemover todos os Neons", "Selecionar", "Cancelar");
                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 10.0);
            }
            if(listitem == 4) //nitro
            {
                AddVehicleComponentEx(carid,1010);
                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 10.0);
            }
        }
    }
    if(dialogid == 8899){if(response){if(listitem == 0){
            DestroyDynamicObject(GetPVarInt(playerid, "neon"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon2"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon3"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon4"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon5"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon6"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon7"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon8"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon9"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon10"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon11"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon12"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon13"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover1"));
            DeletePVar(playerid, "Status");
            //blue
            SetPVarInt(playerid, "Status", 1);
            SetPVarInt(playerid, "neon", CreateDynamicObject(18648,0,0,0,0,0,0));
            SetPVarInt(playerid, "neon1", CreateDynamicObject(18648,0,0,0,0,0,0));
            AttachNeonToVehicle(GetPVarInt(playerid, "neon"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            AttachNeonToVehicle(GetPVarInt(playerid, "neon1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            SendClientMessage(playerid, COLOR_DBLUE, "Neon Azul Instalado no seu Carro.");}
            if(listitem == 1){
            DestroyDynamicObject(GetPVarInt(playerid, "neon"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon2"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon3"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon4"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon5"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon6"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon7"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon8"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon9"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon10"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon11"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon12"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon13"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover1"));
            DeletePVar(playerid, "Status");
            //red
            SetPVarInt(playerid, "Status", 1);
            SetPVarInt(playerid, "neon2", CreateDynamicObject(18647,0,0,0,0,0,0));
            SetPVarInt(playerid, "neon3", CreateDynamicObject(18647,0,0,0,0,0,0));
            AttachNeonToVehicle(GetPVarInt(playerid, "neon2"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            AttachNeonToVehicle(GetPVarInt(playerid, "neon3"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            SendClientMessage(playerid, COLOR_LIGHTRED, "Neon Vermelho Instalado no seu Carro.");}
            if(listitem == 2){
            DestroyDynamicObject(GetPVarInt(playerid, "neon"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon2"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon3"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon4"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon5"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon6"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon7"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon8"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon9"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon10"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon11"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon12"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon13"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover1"));
            DeletePVar(playerid, "Status");
            //green
            SetPVarInt(playerid, "Status", 1);
            SetPVarInt(playerid, "neon4", CreateDynamicObject(18649,0,0,0,0,0,0));
            SetPVarInt(playerid, "neon5", CreateDynamicObject(18649,0,0,0,0,0,0));
            AttachNeonToVehicle(GetPVarInt(playerid, "neon4"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            AttachNeonToVehicle(GetPVarInt(playerid, "neon5"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            SendClientMessage(playerid, TEAM_GROVE_COLOR, "Neon Verde Instalado no seu Carro.");}
            if(listitem == 3){
            DestroyDynamicObject(GetPVarInt(playerid, "neon"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon2"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon3"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon4"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon5"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon6"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon7"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon8"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon9"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon10"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon11"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon12"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon13"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover1"));
            DeletePVar(playerid, "Status");
            //COLOR_WHITE
            SetPVarInt(playerid, "Status", 1);
            SetPVarInt(playerid, "neon6", CreateDynamicObject(18652,0,0,0,0,0,0));
            SetPVarInt(playerid, "neon7", CreateDynamicObject(18652,0,0,0,0,0,0));
            AttachNeonToVehicle(GetPVarInt(playerid, "neon6"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            AttachNeonToVehicle(GetPVarInt(playerid, "neon7"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            SendClientMessage(playerid, COLOR_WHITE, "Neon Branco Instalado no seu Carro.");}
            if(listitem == 4){
            DestroyDynamicObject(GetPVarInt(playerid, "neon"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon2"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon3"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon4"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon5"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon6"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon7"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon8"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon9"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon10"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon11"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon12"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon13"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover1"));
            DeletePVar(playerid, "Status");
            //pink
            SetPVarInt(playerid, "Status", 1);
            SetPVarInt(playerid, "neon8", CreateDynamicObject(18651,0,0,0,0,0,0));
            SetPVarInt(playerid, "neon9", CreateDynamicObject(18651,0,0,0,0,0,0));
            AttachNeonToVehicle(GetPVarInt(playerid, "neon8"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            AttachNeonToVehicle(GetPVarInt(playerid, "neon9"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            SendClientMessage(playerid, COLOR_GRAD3, "Neon Rosa Instalado no seu Carro.");}
            if(listitem == 5){
            DestroyDynamicObject(GetPVarInt(playerid, "neon"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon2"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon3"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon4"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon5"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon6"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon7"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon8"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon9"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon10"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon11"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon12"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon13"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover1"));
            DeletePVar(playerid, "Status");
            //yellow
            SetPVarInt(playerid, "Status", 1);
            SetPVarInt(playerid, "neon10", CreateDynamicObject(18650,0,0,0,0,0,0));
            SetPVarInt(playerid, "neon11", CreateDynamicObject(18650,0,0,0,0,0,0));
            AttachNeonToVehicle(GetPVarInt(playerid, "neon10"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            AttachNeonToVehicle(GetPVarInt(playerid, "neon11"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Neon Amarelo Instalado no seu Carro.");}
            if(listitem == 6){//remove neon
            DestroyDynamicObject(GetPVarInt(playerid, "neon"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon2"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon3"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon4"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon5"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon6"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon7"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon8"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon9"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon10"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon11"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon12"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon13"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover1"));
            DeletePVar(playerid, "Status");
            new idcarro=GetPlayerVehicleID(playerid);
            if(VeiculoNeon[idcarro] != 0) DestroyDynamicObject(VeiculoNeon[idcarro]);
            }
         }
    return 0;
    }
    if(dialogid == 5)
    {
        if(response == 0)
        {
            vinnyInfo[playerid][PpLoja2472] = 0;
            return 1;
        }
        if(response >= 1)
        {
            if(listitem == 0)
            {
                OnPlayerCommandText(playerid,"/comprar 1");
                vinnyInfo[playerid][PpLoja2472] = 0;
                return 1;
            }
            if(listitem == 1)
            {
                OnPlayerCommandText(playerid,"/comprar 2");
                vinnyInfo[playerid][PpLoja2472] = 0;
                return 1;
            }
            if(listitem == 2)
            {
                OnPlayerCommandText(playerid,"/comprar 3");
                vinnyInfo[playerid][PpLoja2472] = 0;
                return 1;
            }
            if(listitem == 3)
            {
                OnPlayerCommandText(playerid,"/comprar 4");
                vinnyInfo[playerid][PpLoja2472] = 0;
                return 1;
            }
            if(listitem == 4)
            {
                OnPlayerCommandText(playerid,"/comprar 5");
                vinnyInfo[playerid][PpLoja2472] = 0;
                return 1;
            }
            if(listitem == 5)
            {
                OnPlayerCommandText(playerid,"/comprar 6");
                vinnyInfo[playerid][PpLoja2472] = 0;
                return 1;
            }
            if(listitem == 6)
            {
                OnPlayerCommandText(playerid,"/comprar 7");
                vinnyInfo[playerid][PpLoja2472] = 0;
                return 1;
            }
            if(listitem == 7)
            {
                OnPlayerCommandText(playerid,"/comprar 8");
                vinnyInfo[playerid][PpLoja2472] = 0;
                return 1;
            }
            if(listitem == 8)
            {
                OnPlayerCommandText(playerid,"/comprar 9");
                vinnyInfo[playerid][PpLoja2472] = 0;
                return 1;
            }
            if(listitem == 9)
            {
                OnPlayerCommandText(playerid,"/comprar 10");
                vinnyInfo[playerid][PpLoja2472] = 0;
                return 1;
            }
            if(listitem == 10)
            {
                OnPlayerCommandText(playerid,"/comprar 11");
                vinnyInfo[playerid][PpLoja2472] = 0;
                return 1;
            }
            if(listitem == 11)
            {
                OnPlayerCommandText(playerid,"/comprar 12");
                vinnyInfo[playerid][PpLoja2472] = 0;
                return 1;
            }
            if(listitem == 12)
            {
                OnPlayerCommandText(playerid,"/comprar 13");
                vinnyInfo[playerid][PpLoja2472] = 0;
                return 1;
            }
            if(listitem == 13)
            {
                OnPlayerCommandText(playerid,"/comprar 14");
                vinnyInfo[playerid][PpLoja2472] = 0;
                return 1;
            }
            vinnyInfo[playerid][PpLoja2472] = 0;
            return 1;
        }
    }
    if(dialogid == 6)
    {
        if(response == 0)
        {
            vinnyInfo[playerid][PLojaA1] = 0;
            vinnyInfo[playerid][PLojaA2] = 0;
            return 1;
        }
        if(response == 1)
        {
            if(listitem == 0)
            {
                ShowPlayerDialog(playerid, DialVinny(44), DIALOG_STYLE_LIST, "Escolha seu KitVip", "Kit Vip\nKit Super-VIP", "Confirmar", "Cancelar");
                return 1;
            }
            if(listitem == 1)
            {
                strmid(vinnyInfo[playerid][ArmaLoja], "eagle", 0, strlen("eagle"), 255);
                ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
                return 1;
            }
            if(listitem == 2)
            {
                strmid(vinnyInfo[playerid][ArmaLoja], "mp5", 0, strlen("mp5"), 255);
                ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
                return 1;
            }
            if(listitem == 3)
            {
                strmid(vinnyInfo[playerid][ArmaLoja], "shotgun", 0, strlen("shotgun"), 255);
                ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
                return 1;
            }
            if(listitem == 4)
            {
                strmid(vinnyInfo[playerid][ArmaLoja], "ak47", 0, strlen("ak47"), 255);
                ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
                return 1;
            }
            if(listitem == 5)
            {
                strmid(vinnyInfo[playerid][ArmaLoja], "m4", 0, strlen("m4"), 255);
                ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
                return 1;
            }
            if(listitem == 6)
            {
                strmid(vinnyInfo[playerid][ArmaLoja], "rifle", 0, strlen("rifle"), 255);
                ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
                return 1;
            }
            if(listitem == 7)
            {
                strmid(vinnyInfo[playerid][ArmaLoja], "parachute", 0, strlen("parachute"), 255);
                ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
                return 1;
            }
            if(listitem == 8)
            {
                strmid(vinnyInfo[playerid][ArmaLoja], "golfclub", 0, strlen("golfclub"), 255);
                ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
                return 1;
            }
            if(listitem == 9)
            {
                strmid(vinnyInfo[playerid][ArmaLoja], "nightstick", 0, strlen("nightstick"), 255);
                ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
                return 1;
            }
            if(listitem == 10)
            {
                strmid(vinnyInfo[playerid][ArmaLoja], "baseballbat", 0, strlen("baseballbat"), 255);
                ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
                return 1;
            }
            if(listitem == 11)
            {
                strmid(vinnyInfo[playerid][ArmaLoja], "shovel", 0, strlen("shovel"), 255);
                ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
                return 1;
            }
            if(listitem == 12)
            {
                strmid(vinnyInfo[playerid][ArmaLoja], "poolcue", 0, strlen("poolcue"), 255);
                ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
                return 1;
            }
            if(listitem == 13)
            {
                strmid(vinnyInfo[playerid][ArmaLoja], "purpledildo", 0, strlen("purpledildo"), 255);
                ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
                return 1;
            }
            if(listitem == 14)
            {
                strmid(vinnyInfo[playerid][ArmaLoja], "whitedildo", 0, strlen("whitedildo"), 255);
                ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
                return 1;
            }
            if(listitem == 15)
            {
                strmid(vinnyInfo[playerid][ArmaLoja], "longwhitedildo", 0, strlen("longwhitedildo"), 255);
                ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
                return 1;
            }
            if(listitem == 16)
            {
                strmid(vinnyInfo[playerid][ArmaLoja], "whitedildo2", 0, strlen("whitedildo2"), 255);
                ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
                return 1;
            }
            if(listitem == 17)
            {
                strmid(vinnyInfo[playerid][ArmaLoja], "flowers", 0, strlen("flowers"), 255);
                ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
                return 1;
            }
            if(listitem == 18)
            {
                strmid(vinnyInfo[playerid][ArmaLoja], "cane", 0, strlen("cane"), 255);
                ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
                return 1;
            }
            vinnyInfo[playerid][PLojaA1] = 0;
            vinnyInfo[playerid][PLojaA2] = 0;
            return 1;
        }
        return 1;
    }
    if(dialogid == DialVinny(44))
    {
        if(response == 0)
        {

            return 1;
        }
        if(response == 1)
        {
            if(listitem == 0)
            {
                if(PlayerInfo[playerid][pVip] == 0) return SendClientMessage(playerid, -1, "ERRO: Você não é um Player Vip do servidor!");
                ResetPlayerWeapons(playerid);
                SetPlayerArmour(playerid, 100.0);
                SetPlayerHealth(playerid, 100.0);
                GivePlayerWeapon(playerid, 24, 750);
                GivePlayerWeapon(playerid, 25, 750);
                GivePlayerWeapon(playerid, 29, 750);
                GivePlayerWeapon(playerid, 31, 750);
                GivePlayerWeapon(playerid, 8, 1);
                GivePlayerWeapon(playerid, 4, 1);
                format(string, sizeof(string), "* VIP: %s pega seus equipamentos de Vip Normal.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                return 1;
            }
            if(listitem == 1)
            {
                if(PlayerInfo[playerid][pVip] < 2) return SendClientMessage(playerid, -1, "ERRO: Você não é um Player Super Vip do servidor!");
                ResetPlayerWeapons(playerid);
                SetPlayerArmour(playerid, 100.0);
                SetPlayerHealth(playerid, 100.0);
                GivePlayerWeapon(playerid, 24, 999);
                GivePlayerWeapon(playerid, 25, 999);
                GivePlayerWeapon(playerid, 29, 999);
                GivePlayerWeapon(playerid, 31, 999);
                GivePlayerWeapon(playerid, 8, 1);
                GivePlayerWeapon(playerid, 4, 1);
                format(string, sizeof(string), "* VIP: %s pega seus equipamentos de Super Vip.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                return 1;
            }
        }
    }
    if(dialogid == 7)
    {
        if(response == 0)
        {
            vinnyInfo[playerid][PLojaA1] = 0;
            vinnyInfo[playerid][PLojaA2] = 0;
            vinnyInfo[playerid][ArmaLoja] = 0;
            return 1;
        }
        if(response == 1)
        {
            format(gstring,sizeof(gstring),"/comprararma %s %d",vinnyInfo[playerid][ArmaLoja],strval(inputtext));
            OnPlayerCommandText(playerid,gstring);
            vinnyInfo[playerid][PLojaA1] = 0;
            vinnyInfo[playerid][PLojaA2] = 0;
            vinnyInfo[playerid][ArmaLoja] = 0;
            return 1;
        }
        vinnyInfo[playerid][PLojaA1] = 0;
        vinnyInfo[playerid][PLojaA2] = 0;
        vinnyInfo[playerid][ArmaLoja] = 0;
        return 1;
    }
    if(dialogid == 8)
    {
        if(response == 0)
        {
            vinnyInfo[playerid][PLojaA1] = 0;
            vinnyInfo[playerid][PLojaA2] = 0;
            return 1;
        }
        if(response == 1)
        {
            if(listitem == 0)
            {
                OnPlayerCommandText(playerid,"/kitvip");
                vinnyInfo[playerid][PLojaA1] = 0;
                vinnyInfo[playerid][PLojaA2] = 0;
                vinnyInfo[playerid][ArmaLoja] = 0;
                return 1;
            }
            if(listitem == 1)
            {
                OnPlayerCommandText(playerid,"/kitsvip");
                vinnyInfo[playerid][PLojaA1] = 0;
                vinnyInfo[playerid][PLojaA2] = 0;
                vinnyInfo[playerid][ArmaLoja] = 0;
                return 1;
            }
            return 1;
        }
        vinnyInfo[playerid][PLojaA1] = 0;
        vinnyInfo[playerid][PLojaA2] = 0;
        vinnyInfo[playerid][ArmaLoja] = 0;
        return 1;
    }
    if(dialogid == 2568)
    {
        TogglePlayerControllable(playerid, 1);
        if(!response) { return 1; }
        switch(listitem)
        {
            case 0:
            {
                ShowPlayerDialog(playerid,2587,DIALOG_STYLE_LIST,"GPS Locais em Geral","Prefeitura\nDepartamento de Policia\n24-7(Mercado)\nLoja de Armas 1\nLoja de Armas 2\nBinco(Loja de Roupas)\nAluguel de Carros\nCentro de Licencas\nHospital\nPosto Sul\nBanco\nLoterica\nConcessionária","Selecionar","Voltar");
            }
            case 1:
            {
                new aff[700];
                format(aff,sizeof(aff),"Polícia Militar\nROTA\nExército \nMédicos\nLos Aztecas\nGuerrilheiros Israelitas\nPrefeitura\nHitmans\nRepórteres\nTaxistas\nBOPE\nMafia Russa\nMafia Japonesa\nGroove Street\nFARC");//15
                format(aff,sizeof(aff),"%s\nPolícia Rodoviária Federal\nBallas\nLos Vagos\nComando Vermelho\nPCC\nHells Angels\nMongols\nSons Of Anarchy\nTriads\nDrifters\nFaTal DangeR\nBPM\nSnake\nDesTroyeR\nJusticeiros\nPF\nPolícia Federal\nDark Gods\nDAPT\nStorm", aff);
                ShowPlayerDialog(playerid,2588,DIALOG_STYLE_LIST,"GPS Head Quarters",aff,"Selecionar","");
            }
            case 2:
            {
                ShowPlayerDialog(playerid,2570,DIALOG_STYLE_LIST,"GPS Territorios","Morro(Gang)\nPista de Skate(Gang)\nEstacao Unity(Mafia)\nCasarao(Mafia)","Selecionar","Voltar");
            }
            case 3:
            {
                ShowPlayerDialog(playerid,9874,DIALOG_STYLE_LIST,"GPS HQ Empregos","Mecanicos\nCaminhoneiros\nMotorista de Onibus","Selecionar","");
            }
            case 4:
            {
                DisablePlayerCheckpoint(playerid);
            }
        }
    }
    if(dialogid == 9874)
    {
        if(!response) { return 1; }
        switch(listitem)
        {
            case 0:
            {
                SetPlayerCheckpoint(playerid, 956.2701,-1561.0848,13.5686,8.0);//Mecanicos
            }
            case 1:
            {
                SetPlayerCheckpoint(playerid,2221.0286,-2229.0088,13.5469,8.0);//Caminhoeiro
            }
            case 2:
            {
                SetPlayerCheckpoint(playerid, 2425.3486,-2089.3240,13.5469,8.0);//Motorista de Onibus
            }
        }
    }
//INICIO SISTEMA DE BANCO
    if(dialogid == 1122) //deposito
    {
        if(!response) return ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
        else if(strval(inputtext) > GetPlayerMoneyEx(playerid)) return SendClientMessage(playerid,COLOR_GREY,"Você não possui esta quantia!");
        else if(!IsNumero(inputtext))
        {
            format(gstring,sizeof(gstring),"Seu Saldo atual é: R$[%d]\nDigite a quantidade que deseja depositar abaixo .",PlayerInfo[playerid][pConta]);
            ShowPlayerDialog(playerid,1122,DIALOG_STYLE_INPUT,"Depositar",gstring,"Depositar","Sair");
            SendClientMessage(playerid,COLOR_GREY,"Digite apenas números !");
        }
        else
        {
            format(gstring,sizeof(gstring),"/depositar %d",strval(inputtext));
            OnPlayerCommandText(playerid,gstring);
        }
        return 1;
    }
    if(dialogid == 1123) //saque
    {
        if(!response) return ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
        else if(strval(inputtext) > PlayerInfo[playerid][pConta]) return SendClientMessage(playerid,COLOR_GREY,"Você não tem isso tudo na sua conta !");
        else if(!IsNumero(inputtext))
        {
            format(gstring,sizeof(gstring),"Seu Saldo atual é: [%d]\nColoque a quantidade que deseja sacar agora.",PlayerInfo[playerid][pConta]);
            ShowPlayerDialog(playerid,1123,DIALOG_STYLE_INPUT,"Sacar",gstring,"Sacar","Voltar");
            SendClientMessage(playerid,COLOR_GREY,"Digite apenas números!");
        }
        else
        {
            format(gstring,sizeof(gstring),"/sacar %d",strval(inputtext));
            OnPlayerCommandText(playerid,gstring);
        }
        return 1;
    }
    if(dialogid == 1124)
    {
        ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
        return 1;
    }
    if(dialogid == 1130) //transferir - playerid
    {
        if(!response) return ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
        else if(strval(inputtext) == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_GREY,"O jogador não está online !");
        else if(!IsNumero(inputtext))
        {
            format(gstring,sizeof(gstring),"Seu saldo atual é: R$[%d]\nColoque o ID do jogador para transferir :",PlayerInfo[playerid][pConta]);
            ShowPlayerDialog(playerid,1130,DIALOG_STYLE_INPUT,"Transferir",gstring,"Proximo","Voltar");
            SendClientMessage(playerid,COLOR_GREY,"Use o ID,não o nome - Se não sabe o id use /id [nome/parte do nome]");
        }
        else
        {
            chosenpid = strval(inputtext);
            format(gstring,sizeof(gstring),"Saldo: R$[%d]\nAgora coloque a quantidade que deseja transferir !",PlayerInfo[playerid][pConta]);
            ShowPlayerDialog(playerid,1131,DIALOG_STYLE_INPUT,"Transferir",gstring,"Transferir","Voltar");
        }
        return 1;
    }
    if(dialogid == 1131) //transferir - quantidade
    {
        if(!response) return ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
        else if(strval(inputtext) > PlayerInfo[playerid][pConta]) return SendClientMessage(playerid,COLOR_GREY,"Você não tem esta quantia para transferir !");
        else if(strval(inputtext) > 100000000) return SendClientMessage(playerid,COLOR_GREY,"Você não pode transferir mais que R$100000000 de uma vez!");
        else if(!IsNumero(inputtext))
        {
            ShowPlayerDialog(playerid,1131,DIALOG_STYLE_INPUT,"Transferir","Agora coloque a quantidade que deseja transferir","Transferir","Voltar");
            SendClientMessage(playerid,COLOR_GREY,"Por favor,use números !");
        }
        else
        {
            format(gstring,sizeof(gstring),"/transferirsadasdad %d %d",chosenpid, strval(inputtext));
            OnPlayerCommandText(playerid,gstring);
        }
        return 1;
    }
    if(dialogid == 1125 && response) // /Banco
    {
        if(response == 0) { return 1; }
        switch(listitem)
        {
            case 0:
            {
                format(gstring,sizeof(gstring),"Seu Saldo atual é : R$%d\nColoque a quantidade para depositar .",PlayerInfo[playerid][pConta]);
                ShowPlayerDialog(playerid,1122,DIALOG_STYLE_INPUT,"Depositar",gstring,"Depositar","Voltar");
            }
            case 1:
            {
                format(gstring,sizeof(gstring),"Seu Saldo atual é: R$%d\nColoque a quantidade para sacar .",PlayerInfo[playerid][pConta]);
                ShowPlayerDialog(playerid,1123,DIALOG_STYLE_INPUT,"Sacar",gstring,"Sacar","Voltar");
            }
            case 2:
            {
                format(gstring,sizeof(gstring),"Seu saldo atual é R$%d",PlayerInfo[playerid][pConta]);
                ShowPlayerDialog(playerid,1124,DIALOG_STYLE_MSGBOX,"Saldo",gstring,"Ok","Voltar");
            }
            case 3:
            {
                format(gstring,sizeof(gstring),"Seu Saldo atual é: R$%d\nColoque o ID do Jogador para transferir .",PlayerInfo[playerid][pConta]);
                ShowPlayerDialog(playerid,1130,DIALOG_STYLE_INPUT,"Transferir",gstring,"Proximo","Voltar");
            }
        }
    }
//FIM SISTEMA DE BANCO
    if(dialogid == 2587)
    {
        TogglePlayerControllable(playerid, 1);
        if(response == 0) { return ShowPlayerDialog(playerid,2568,DIALOG_STYLE_LIST,"GPS","Locais em Geral\nHead Quarters\nTerritorios\nDesligar GPS","Aceitar","Cancelar"); }
        switch(listitem)
        {
            case 0:
            {
                SetPlayerCheckpoint(playerid, 1481.1926,-1764.2736,18.7958,8.0);//prefeitura
            }
            case 1:
            {
                SetPlayerCheckpoint(playerid, 1546.2761,-1675.5995,13.5620,8.0);//DP
            }
            case 2:
            {
                SetPlayerCheckpoint(playerid, 1350.4865,-1753.2505,13.3582,8.0);//24-7
            }
            case 3:
            {
                SetPlayerCheckpoint(playerid, 1790.5725,-1167.3705,23.8281,8.0);//Loja de armas
            }
            case 4:
            {
                SetPlayerCheckpoint(playerid, 1068.7330,-1875.4727,13.5469,8.0);//Loja de armas 2
            }
            case 5:
            {
                SetPlayerCheckpoint(playerid, 2244.7954,-1663.5021,15.4766,8.0);//Binco
            }
            case 6:
            {
                SetPlayerCheckpoint(playerid, 550.7012,-1278.5721,17.2482,8.0);//Aluguel de Carros
            }
            case 7:
            {
                SetPlayerCheckpoint(playerid, 1411.5593,-1699.5270,13.5395,8.0);//Centro de Licencas
            }
            case 8:
            {
                SetPlayerCheckpoint(playerid, 1175.3164,-1323.7809,14.3906,8.0);//Hospital
            }
            case 9:
            {
                SetPlayerCheckpoint(playerid, 1928.826904,-1776.405517,13.546895,8.0);//Posto Sul
            }
            case 10:
            {
                SetPlayerCheckpoint(playerid, 1462.395751,-1012.391174,26.843799,8.0);//Banco
            }
            case 11:
            {
                SetPlayerCheckpoint(playerid, 1631.8547,-1172.5637,24.0843,8.0);//Loterica
            }
            case 12:
            {
                SetPlayerCheckpoint(playerid, 2780.4939,-1812.2635,11.8438,8.0);//Conce
            }
        }
    }
    if(dialogid == 2588)
    {
        TogglePlayerControllable(playerid, 1);
        if(response == 0) { return ShowPlayerDialog(playerid,2568,DIALOG_STYLE_LIST,"GPS","Locais em Geral\nHead Quarters\nTerritorios\nDesligar GPS","Aceitar","Cancelar"); }
        switch(listitem)
        {
            case 0:
            {
                SetPlayerCheckpoint(playerid, 1542.2899,-1628.9122,13.3828,10.0);//pm
            }
            case 1:
            {
                SetPlayerCheckpoint(playerid, 331.9971,-1515.8209,35.8672,10.0);//ROTA
            }
            case 2:
            {
                SetPlayerCheckpoint(playerid, -1529.3425,484.8882,7.1797,10.0);//Exército
            }
            case 3:
            {
                SetPlayerCheckpoint(playerid, 1189.8499,-1323.6030,13.5668,10.0);//medicos
            }
            case 4:
            {
                SetPlayerCheckpoint(playerid, 1684.5166,-2112.8179,13.4859,10.0);//aztecas
            }
            case 5:
            {
                SetPlayerCheckpoint(playerid, -2276.7942,2352.8162,4.8680,10.0);//GuerrilheirosIsraelitas
            }
            case 6:
            {
                SetPlayerCheckpoint(playerid, 1483.5127,-1756.9006,13.5469,10.0);//prefeitura
            }
            case 7:
            {
                SetPlayerCheckpoint(playerid, 1027.2889,-373.1000,73.3238,10.0);//hitmans
            }
            case 8:
            {
                SetPlayerCheckpoint(playerid, 775.2274,-1391.1093,13.4500,10.0);//reporteres
            }
            case 9:
            {
                SetPlayerCheckpoint(playerid, 1051.8407,-1461.7759,13.5506,10.0);//taxistas
            }
            case 10:
            {
                SetPlayerCheckpoint(playerid, 907.9634,-988.5206,37.6215,10.0);//BOPE
            }
            case 11:
            {
                SetPlayerCheckpoint(playerid, 1680.1494,1665.7244,10.8203,10.0);//Mafia Russa
            }
            case 12:
            {
                SetPlayerCheckpoint(playerid, 2513.6294,1821.8140,10.8142,10.0);//Mafia Japonesa
            }
            case 13:
            {
                SetPlayerCheckpoint(playerid, 2484.7034,-1666.5739,13.3438,10.0);//groove
            }
            case 14:
            {
                SetPlayerCheckpoint(playerid, 395.9687,2518.1458,16.4844,10.0);//FARC
            }
            case 15:
            {
                SetPlayerCheckpoint(playerid, 933.4649,-1226.1569,16.9045,10.0);//PRF
            }
            case 16:
            {
                SetPlayerCheckpoint(playerid, 1119.2783,-1159.2039,23.5971,10.0);//Ballas
            }
            case 17:
            {
                SetPlayerCheckpoint(playerid, 2828.2498,-1184.3743,24.9464,10.0);//vagos
            }
            case 18:
            {
                SetPlayerCheckpoint(playerid, 2185.1260,-1765.0551,13.3761,10.0);//cv
            }
            case 19:
            {
                SetPlayerCheckpoint(playerid, 1338.2207,-916.5588,35.9187,10.0);//pcc
            }
            case 20:
            {
                SetPlayerCheckpoint(playerid, 681.344543,-478.446380,16.335937,10.0);//hells Angels
            }
            case 21:
            {
                SetPlayerCheckpoint(playerid, 10.9980,-2647.3674,40.1858,10.0);//Mongols
            }
            case 22:
            {
                SetPlayerCheckpoint(playerid, -1544.6113,-2781.6897,47.4471,10.0);//Sons
            }
            case 23:
            {
                SetPlayerCheckpoint(playerid, 2709.6440,-2403.8472,13.4725,10.0);// triad
            }
            case 24:
            {
                SetPlayerCheckpoint(playerid, 836.3047,-1890.9922,12.8672,10.0); // drifters
            }
            case 25:
            {
                SetPlayerCheckpoint(playerid, 97.2535,-1674.6256,10.6929,10.0); // FaTal DangeR
            }
            case 26:
            {
                SetPlayerCheckpoint(playerid, 1421.6129,-1648.3108,13.3570,10.0); // BPM
            }
            case 27:
            {
                SetPlayerCheckpoint(playerid, -65.199996948242,-2295.3000488281,11.10000038147,10.0); // Exército
            }
            case 28:
            {
                SetPlayerCheckpoint(playerid, 2863.1956,-305.3304,7.9483,10.0); // DesTroyeR
            }
            case 29:
            {
                SetPlayerCheckpoint(playerid, 318.7953,-1896.9225,1.6139,10.0); // Justiceiros
            }
            case 30:
            {
                SetPlayerCheckpoint(playerid, 921.2814,-1721.2269,13.3828,10.0); // secretaria
            }
            case 31:
            {
                SetPlayerCheckpoint(playerid, -2432.5056,488.4315,29.9315,10.0); // Policia Civil
            }
            case 32:
            {
                SetPlayerCheckpoint(playerid, 707.6414,-1402.6970,13.3784,10.0); // Dark Gods
            }
            case 33:
            {
                SetPlayerCheckpoint(playerid, 985.9582,-2158.6436,13.0938,10.0); // dapt
            }
            case 34:
            {
                SetPlayerCheckpoint(playerid, 2439.0862,-1549.8430,24.0000,10.0); // Storm // yiakin FEZ!!
            }
        }
    }
    if(dialogid == 2569)
    {
        TogglePlayerControllable(playerid, 1);
        if(response == 0) { return 1; }
        switch(listitem)
        {
            case 0:
            {
                ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer","* Você está prestes a se tornar um Detetive, terá que cumprir 5 horas de contrato.\nPara se tornar Detetive, clique em aceitar.","Aceitar","Cancelar");
                GettingEmprego[playerid] = 1;
                TogglePlayerControllable(playerid, 1);
            }
            case 1:
            {
                ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer","* Você está prestes a se tornar um Advogado, terá que cumprir 5 horas de contrato.\nPara se tornar um Advogado, clique em aceitar.","Aceitar","Cancelar");
                GettingEmprego[playerid] = 2;
                TogglePlayerControllable(playerid, 1);
            }
            case 2:
            {
                ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer","* Você está prestes a se tornar um Vendedor De Drogas, terá que cumprir 5 horas de contrato.\nPara aceitar o emprego, clique em aceitar.","Aceitar","Cancelar");
                GettingEmprego[playerid] = 4;
                TogglePlayerControllable(playerid, 1);
            }
            case 3:
            {
                ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer","*Você está prestes a se tornar um Mecânico, terá que cumprir 5 horas de contrato.\nPara se tornar um Mecânico, clique em aceitar.","Aceitar","Cancelar");
                GettingEmprego[playerid] = 5;
                TogglePlayerControllable(playerid, 1);
            }
            case 4:
            {
                ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer","* Você está prestes a se tornar um Vendedor De Armas, terá que cumprir 5 horas de contrato.\nPara se tornar um Vendedor De Armas, clique em aceitar.","Aceitar","Cancelar");
                GettingEmprego[playerid] = 7;
                TogglePlayerControllable(playerid, 1);
            }
            case 5:
            {
                ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer","* Você está prestes a se tornar um Motorista de Onibus, terá que cumprir 5 horas de contrato.\nPara se tornar um Motorista de Onibus, clique em aceitar.","Aceitar","Cancelar");
                GettingEmprego[playerid] = 9;
                TogglePlayerControllable(playerid, 1);
            }
            case 6:
            {
                ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer","* Você está prestes a se tornar um Caminhoneiro, terá que cumprir 5 horas de contrato.\nPara se tornar um Caminhoneiro, clique em aceitar.","Aceitar","Cancelar");
                GettingEmprego[playerid] = 11;
                TogglePlayerControllable(playerid, 1);
            }
         }
    }
    if(dialogid == 2586)
    {
        if(!response)
        {
            GettingEmprego[playerid] = 0;
            return SendClientMessage(playerid, COLOR_GREY, "Você cancelou o emprego.");
        }
        else
        {
            PlayerInfo[playerid][pEmprego] = GettingEmprego[playerid];
            if(PlayerInfo[playerid][pEmprego] == 1) { PlayerInfo[playerid][pDetSkill] = 400; }
            if((PlayerInfo[playerid][pEmprego] == 11 || PlayerInfo[playerid][pEmprego] == 5 || PlayerInfo[playerid][pEmprego] == 9)  && GetPlayerOrg(playerid) == 0) { SetPlayerSpawn(playerid); }
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Parabens com seu novo emprego, digite /ajuda para ver seus novos comandos!");
        }
    }
    if(dialogid == 2570)
    {
        TogglePlayerControllable(playerid, 1);
        if(response == 0) { return ShowPlayerDialog(playerid,2568,DIALOG_STYLE_LIST,"GPS","Locais em Geral\nHead Quarters\nTerritorios\nDesligar GPS","Aceitar","Cancelar"); }
        switch(listitem)
        {
            case 0:
            {
                SetPlayerCheckpoint(playerid, 2155.7847,-1010.8846,62.9648,8.0);//Morro
            }
            case 1:
            {
                SetPlayerCheckpoint(playerid, 1919.1139,-1411.3921,13.5703,8.0);//Pista de Skate
            }
            case 2:
            {
                SetPlayerCheckpoint(playerid, 1741.1454,-1945.1676,13.5640,8.0);//Estacao Unity
            }
            case 3:
            {
                SetPlayerCheckpoint(playerid, 1242.5569,-2036.5902,60.0824,8.0);//Casarao
            }
        }
    }
    if(dialogid == 2571)
    {
        TogglePlayerControllable(playerid, 1);
        if(response == 0) { return 1; }
        switch(listitem)
        {
            case 0:
            {
                //Motorista
                if(GetPlayerMoneyEx(playerid) < 2000) return SendClientMessage(playerid,COLOR_GREY,"Você não tem R$2000 para comprar!");
                TogglePlayerControllable(playerid, 1);
                GivePlayerMoney(playerid,-2000);
                BizzInfo[5][bTill] += 2000;
                ExtortionBiz(5, 2000);
                PlayerInfo[playerid][pCarLic] = 1;
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comprou a Licença De Motorista!");
            }
            case 1:
            {
                //Voo
                if(GetPlayerMoneyEx(playerid) < 2500) return SendClientMessage(playerid,COLOR_GREY,"Você não tem R$2500 para comprar");
                TogglePlayerControllable(playerid, 1);
                GivePlayerMoney(playerid,-2500);
                BizzInfo[5][bTill] += 2500;
                ExtortionBiz(5, 2500);
                PlayerInfo[playerid][pFlyLic] = 1;
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comprou a Licença De Voo!");
            }
            case 2:
            {
                //Navegacao
                if(GetPlayerMoneyEx(playerid) < 2000) return SendClientMessage(playerid,COLOR_GREY,"Você não R$2000 para comprar!");
                TogglePlayerControllable(playerid, 1);
                GivePlayerMoney(playerid,-2000);
                BizzInfo[5][bTill] += 2000;
                ExtortionBiz(5, 2000);
                PlayerInfo[playerid][pBoatLic] = 1;
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comprou a Licença De Navegação!");
            }
            case 3:
            {
                //Pesca
                if(GetPlayerMoneyEx(playerid) < 1000) return SendClientMessage(playerid,COLOR_GREY,"Você não tem R$1000 para comprar!");
                TogglePlayerControllable(playerid, 1);
                GivePlayerMoney(playerid,-1000);
                BizzInfo[5][bTill] += 1000;
                ExtortionBiz(5, 1000);
                PlayerInfo[playerid][pFishLic] = 1;
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comprou a Licença De Pesca!");
            }
            case 4:
            {
                if(PlayerInfo[playerid][pConnectTime] < 4) return SendClientMessage(playerid, COLOR_GREY, "Você precisa jogar pelo menos 4 horas para pegar licencas de armas!");
                //Armas
                if(GetPlayerMoneyEx(playerid) < 2500) return SendClientMessage(playerid,COLOR_GREY,"Você não tem R$2500 para comprar!");
                TogglePlayerControllable(playerid, 1);
                GivePlayerMoney(playerid,-2500);
                BizzInfo[5][bTill] += 2500;
                ExtortionBiz(5, 2500);
                PlayerInfo[playerid][pGunLic] = 1;
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comprou a Licença De Armas!");
            }
        }
    }
    if(dialogid == 2572)
    {
        TogglePlayerControllable(playerid, 1);
        if(!response) { return 1; }
        switch(listitem)
        {
            case 0:
            {
                ShowPlayerDialog(playerid,2573,DIALOG_STYLE_INPUT,"Pegar Maconha","Digite a quantia de maconha em gramas","Pegar","Voltar");
            }
            case 1:
            {
                ShowPlayerDialog(playerid,2574,DIALOG_STYLE_INPUT,"Pegar Cocaina","Digite a quantia de cocaina em gramas","Pegar","Voltar");
            }
            case 2:
            {
                ShowPlayerDialog(playerid,2575,DIALOG_STYLE_INPUT,"Pegar Crack","Digite a quantia de crack em gramas","Pegar","Voltar");
            }
            case 3:
            {
                ShowPlayerDialog(playerid,2576,DIALOG_STYLE_INPUT,"Esconder Maconha","Digite a quantia de maconha em gramas","Pegar","Voltar");
            }
            case 4:
            {
                ShowPlayerDialog(playerid,2577,DIALOG_STYLE_INPUT,"Esconder Cocaina","Digite a quantia de cocaina em gramas","Pegar","Voltar");
            }
            case 5:
            {
                ShowPlayerDialog(playerid,2578,DIALOG_STYLE_INPUT,"Esconder Crack","Digite a quantia de crack em gramas","Pegar","Voltar");
            }
            case 6:
            {
                ShowPlayerDialog(playerid,2579,DIALOG_STYLE_INPUT,"Pegar Safe Maconha","Digite a quantia de safe maconha em gramas","Pegar","Voltar");
            }
            case 7:
            {
                ShowPlayerDialog(playerid,2580,DIALOG_STYLE_INPUT,"Pegar Safe Cocaina","Digite a quantia de safe cocaina em gramas","Pegar","Voltar");
            }
            case 8:
            {
                ShowPlayerDialog(playerid,2581,DIALOG_STYLE_INPUT,"Pegar Safe Crack","Digite a quantia de safe crack em gramas","Pegar","Voltar");
            }
        }
    }
    if(dialogid == 2573)
    {
        if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
        else if(!IsNumero(inputtext))
        {
            ShowPlayerDialog(playerid,2573,DIALOG_STYLE_INPUT,"Pegar Maconha","Digite a quantia de maconha em gramas","Pegar","Voltar");
            SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
            return 1;
        }
        new price, tel;
        new level = PlayerInfo[playerid][pDrogasSkill];
        if(level >= 0 && level <= 50)
        { tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 100) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 100 graças ao lvl de sua Habilidade!"); return 1; } }
        else if(level >= 51 && level <= 100)
        { tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 200) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 200 graças ao lvl de sua Habilidade!"); return 1; } }
        else if(level >= 101 && level <= 200)
        { tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 350) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 350 graças ao lvl de sua Habilidade!"); return 1; } }
        else if(level >= 201 && level <= 400)
        { tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 500) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 500 graças ao lvl de sua Habilidade!"); return 1; } }
        else if(level >= 401)
        { tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 999) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 999 graças ao lvl de sua Habilidade!"); return 1; } }
        if(PlayerInfo[playerid][pDrogas] > 4)
        {
            format(gstring, sizeof(gstring), "  Você ainda tem %d gramas de maconha, Venda tudo primeiro !", PlayerInfo[playerid][pDrogas]);
            SendClientMessage(playerid, COLOR_GREY, gstring);
            return 1;
        }
        price = strval(inputtext) * tel;
        if(GetPlayerMoneyEx(playerid) > strval(inputtext))
        {
            format(gstring, sizeof(gstring), "* Você comprou %d gramas por $%d.", strval(inputtext), price);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
            GivePlayerMoney(playerid, -price);
            SBizzInfo[17][sbTill] += price;
            ExtortionSBiz(17, price);
            GastarProdutos(2, 17, 1);
            PlayerInfo[playerid][pDrogas] = strval(inputtext)+PlayerInfo[playerid][pDrogas];
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "   Você não tem dinheiro para isso !");
        }
    }
    if(dialogid == 2574)
    {
        if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
        else if(!IsNumero(inputtext))
        {
            ShowPlayerDialog(playerid,2574,DIALOG_STYLE_INPUT,"Pegar Cocaina","Digite a quantia de cocaina em gramas","Pegar","Voltar");
            SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
            return 1;
        }
        new price, tel;
        new level = PlayerInfo[playerid][pDrogasSkill];
        if(level >= 0 && level <= 50)
        { tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 100) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode pegar abaixo de 1 ou superior 100 graças ao lvl de sua Habilidade!"); return 1; } }
        else if(level >= 51 && level <= 100)
        { tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 200) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode pegar abaixo de 1 ou superior 200 graças ao lvl de sua Habilidade!"); return 1; } }
        else if(level >= 101 && level <= 200)
        { tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 350) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode pegar abaixo de 1 ou superior 350 graças ao lvl de sua Habilidade!"); return 1; } }
        else if(level >= 201 && level <= 400)
        { tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 500) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode pegar abaixo de 1 ou superior 500 graças ao lvl de sua Habilidade!"); return 1; } }
        else if(level >= 401)
        { tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 999) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode pegar abaixo de 1 ou superior 999 graças ao lvl de sua Habilidade!"); return 1; } }
        if(PlayerInfo[playerid][pDrogas2] > 4)
        {
            format(gstring, sizeof(gstring), "  Você ainda tem %d gramas de cocaina, Venda tudo primeiro !", PlayerInfo[playerid][pDrogas2]);
            SendClientMessage(playerid, COLOR_GREY, gstring);
            return 1;
        }
        price = strval(inputtext) * tel;
        if(GetPlayerMoneyEx(playerid) > strval(inputtext))
        {
            format(gstring, sizeof(gstring), "* Você comprou %d gramas por $%d.", strval(inputtext), price);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
            GivePlayerMoney(playerid, -price);
            SBizzInfo[14][sbTill] += price;
            ExtortionSBiz(14, price);
            GastarProdutos(2, 14, 1);
            PlayerInfo[playerid][pDrogas2] = strval(inputtext)+PlayerInfo[playerid][pDrogas2];
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "   Você não tem dinheiro para isso !");
        }
    }
    if(dialogid == 2575)
    {
        if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
        else if(!IsNumero(inputtext))
        {
            ShowPlayerDialog(playerid,2575,DIALOG_STYLE_INPUT,"Pegar Crack","Digite a quantia de crack em gramas","Pegar","Voltar");
            SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
            return 1;
        }
        new price, tel;
        new level = PlayerInfo[playerid][pDrogasSkill];
        if(level >= 0 && level <= 50)
        { tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 100) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 100 graças ao lvl de sua Habilidade!"); return 1; } }
        else if(level >= 51 && level <= 100)
        { tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 200) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 200 graças ao lvl de sua Habilidade!"); return 1; } }
        else if(level >= 101 && level <= 200)
        { tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 350) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 350 graças ao lvl de sua Habilidade!"); return 1; } }
        else if(level >= 201 && level <= 400)
        { tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 500) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 500 graças ao lvl de sua Habilidade!"); return 1; } }
        else if(level >= 401)
        { tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 999) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 999 graças ao lvl de sua Habilidade!"); return 1; } }
        if(PlayerInfo[playerid][pDrogas3] > 4)
        {
            format(gstring, sizeof(gstring), "  Você ainda tem %d gramas de crack, Venda tudo primeiro !", PlayerInfo[playerid][pDrogas3]);
            SendClientMessage(playerid, COLOR_GREY, gstring);
            return 1;
        }
        price = strval(inputtext) * tel;
        if(GetPlayerMoneyEx(playerid) > strval(inputtext))
        {
            format(gstring, sizeof(gstring), "* Você comprou %d gramas por $%d.", strval(inputtext), price);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
            GivePlayerMoney(playerid, -price);
            SBizzInfo[15][sbTill] += price;
            ExtortionSBiz(15, price);
            GastarProdutos(2, 15, 1);
            PlayerInfo[playerid][pDrogas3] = strval(inputtext)+PlayerInfo[playerid][pDrogas3];
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "   Você não tem dinheiro para isso !");
        }
    }
    if(dialogid == 2576)
    {
        if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
        else if(!IsNumero(inputtext))
        {
            ShowPlayerDialog(playerid,2576,DIALOG_STYLE_INPUT,"Esconder Maconha","Digite a quantia de crack em gramas","Esconder","Voltar");
            SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
            return 1;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
        {
            SendClientMessage(playerid, COLOR_GRAD2, "não pode esconder menos de 1 e nem mais de 10000");
            return 1;
        }
        if(PlayerInfo[playerid][pDrogas] >= ammount)
        {
            PlayerInfo[playerid][pDrogas] = PlayerInfo[playerid][pDrogas]-ammount;
            PlayerInfo[playerid][pSafeDrogas] = PlayerInfo[playerid][pSafeDrogas]+ammount;
            format(gstring, sizeof(gstring), "* Você escondeu %d gramas!",ammount);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
            return 1;
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não tem tudo isso!");
            return 1;
        }
    }
    if(dialogid == 2577)
    {
        if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
        else if(!IsNumero(inputtext))
        {
            ShowPlayerDialog(playerid,2577,DIALOG_STYLE_INPUT,"Esconder Cocaina","Digite a quantia de cocaina em gramas","Esconder","Voltar");
            SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
            return 1;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
        {
            SendClientMessage(playerid, COLOR_GRAD2, "não pode esconder menos de 1 e nem mais de 10000");
            return 1;
        }
        if(PlayerInfo[playerid][pDrogas2] >= ammount)
        {
            PlayerInfo[playerid][pDrogas2] = PlayerInfo[playerid][pDrogas2]-ammount;
            PlayerInfo[playerid][pSafeDrogas2] = PlayerInfo[playerid][pSafeDrogas2]+ammount;
            format(gstring, sizeof(gstring), "* Você escondeu %d gramas!",ammount);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
            return 1;
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não tem tudo isso!");
            return 1;
        }
    }
    if(dialogid == 2578)
    {
        if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
        else if(!IsNumero(inputtext))
        {
            ShowPlayerDialog(playerid,2578,DIALOG_STYLE_INPUT,"Esconder Crack","Digite a quantia de crack em gramas","Esconder","Voltar");
            SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
            return 1;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
        {
            SendClientMessage(playerid, COLOR_GRAD2, "não pode esconder menos de 1 e nem mais de 10000");
            return 1;
        }
        if(PlayerInfo[playerid][pDrogas3] >= ammount)
        {
            PlayerInfo[playerid][pDrogas3] = PlayerInfo[playerid][pDrogas3]-ammount;
            PlayerInfo[playerid][pSafeDrogas3] = PlayerInfo[playerid][pSafeDrogas3]+ammount;
            format(gstring, sizeof(gstring), "* Você escondeu %d gramas!",ammount);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
            return 1;
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não tem tudo isso!");
            return 1;
        }
    }
    if(dialogid == 2579)
    {
        if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
        else if(!IsNumero(inputtext))
        {
            ShowPlayerDialog(playerid,2579,DIALOG_STYLE_INPUT,"Pegar Safe Maconha","Digite a quantia de maconha em gramas","Pegar","Voltar");
            SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
            return 1;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
        {
            SendClientMessage(playerid, COLOR_GRAD2, "não pode pegar menos de 1 e nem mais de 10000");
            return 1;
        }
        if(PlayerInfo[playerid][pSafeDrogas] >= ammount)
        {
            PlayerInfo[playerid][pDrogas] = PlayerInfo[playerid][pDrogas]+ammount;
            PlayerInfo[playerid][pSafeDrogas] = PlayerInfo[playerid][pSafeDrogas]-ammount;
            format(gstring, sizeof(gstring), "* Você pegou %d gramas de maconha no esconderijo!",ammount);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
            return 1;
        }
        else
        {
            SendClientMessage(playerid, COLOR_GRAD2, "Você não tem tudo isso!");
            return 1;
        }
    }
    if(dialogid == 2580)
    {
        if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
        else if(!IsNumero(inputtext))
        {
            ShowPlayerDialog(playerid,2580,DIALOG_STYLE_INPUT,"Pegar Safe Cocaina","Digite a quantia de cocaina em gramas","Pegar","Voltar");
            SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
            return 1;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
        {
            SendClientMessage(playerid, COLOR_GRAD2, "não pode pegar menos de 1 e nem mais de 10000");
            return 1;
        }
        if(PlayerInfo[playerid][pSafeDrogas2] >= ammount)
        {
            PlayerInfo[playerid][pDrogas2] = PlayerInfo[playerid][pDrogas2]+ammount;
            PlayerInfo[playerid][pSafeDrogas2] = PlayerInfo[playerid][pSafeDrogas2]-ammount;
            format(gstring, sizeof(gstring), "* Você pegou %d gramas de cocaína no esconderijo!",ammount);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
            return 1;
        }
        else
        {
            SendClientMessage(playerid, COLOR_GRAD2, "Você não tem tudo isso!");
            return 1;
        }
    }
    if(dialogid == 2581)
    {
        if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
        else if(!IsNumero(inputtext))
        {
            ShowPlayerDialog(playerid,2581,DIALOG_STYLE_INPUT,"Pegar Safe Crack","Digite a quantia de crack em gramas","Pegar","Voltar");
            SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
            return 1;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
        {
            SendClientMessage(playerid, COLOR_GRAD2, "não pode pegar menos de 1 e nem mais de 10000");
            return 1;
        }
        if(PlayerInfo[playerid][pSafeDrogas3] >= ammount)
        {
            PlayerInfo[playerid][pDrogas3] = PlayerInfo[playerid][pDrogas3]+ammount;
            PlayerInfo[playerid][pSafeDrogas3] = PlayerInfo[playerid][pSafeDrogas3]-ammount;
            format(gstring, sizeof(gstring), "* Você pegou %d gramas de crack no esconderijo!",ammount);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
            return 1;
        }
        else
        {
            SendClientMessage(playerid, COLOR_GRAD2, "Você não tem tudo isso!");
            return 1;
        }
    }
    if(dialogid == 2582)
    {
        if(!response) { return 1; }
        switch(listitem)
        {
            case 0:
            {
                OnPlayerCommandText(playerid, "/equipar");
            }
            case 1:
            {
                ShowPlayerDialog(playerid,2590,DIALOG_STYLE_INPUT,"Pegar Pacotes","Digite a quantia de Pacotes que deseja pegar","Pegar","Voltar");
            }
            case 2:
            {
                ShowPlayerDialog(playerid,2583,DIALOG_STYLE_INPUT,"Pegar Safe Materiais","Digite a quantia de safe materiais que deseja pegar","Pegar","Voltar");
            }
            case 3:
            {
                ShowPlayerDialog(playerid,2584,DIALOG_STYLE_INPUT,"Esconder Materiais","Digite a quantia de materiais para esconder","Esconder","Voltar");
            }
        }
    }
    if(dialogid == 2590)
    {
        if(!response) { return ShowPlayerDialog(playerid, 2582, DIALOG_STYLE_LIST, "Mafia Menu", "Equipar\nPegar Pacotes\nPegar Materiais\nEsconder Materiais", "Confirma", "Cancela"); }
        else if(!IsNumero(inputtext))
        {
            ShowPlayerDialog(playerid,2590,DIALOG_STYLE_INPUT,"Pegar Pacotes","Digite a quantia de Pacotes que deseja pegar","Pegar","Voltar");
            SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
            return 1;
        }
        new quantidade = strval(inputtext);
        if(quantidade < 1 || quantidade > 55)
        {
            SendClientMessage(playerid, COLOR_GRAD2, "não pode pegar menos de 1 e nem mais de 55");
            return 1;
        }
        else
        {
            format(gstring,sizeof(gstring),"/mafia pegar %d",quantidade);
            OnPlayerCommandText(playerid,gstring);
        }
    }
    if(dialogid == 2583)
    {
        if(!response) { return ShowPlayerDialog(playerid, 2582, DIALOG_STYLE_LIST, "Mafia Menu", "Equipar\nPegar Pacotes\nPegar Materiais\nEsconder Materiais", "Confirma", "Cancela"); }
        else if(!IsNumero(inputtext))
        {
            ShowPlayerDialog(playerid,2583,DIALOG_STYLE_INPUT,"Pegar Safe Materiais","Digite a quantia de safe materiais que deseja pegar","Pegar","Voltar");
            SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
            return 1;
        }
        new quantidade = strval(inputtext);
        if(quantidade < 1 || quantidade > 10000)
        {
            SendClientMessage(playerid, COLOR_GRAD2, "não pode pegar menos de 1 e nem mais de 10000");
            return 1;
        }
        if(PlayerInfo[playerid][psMats] >= quantidade)
        {
            PlayerInfo[playerid][pMats] = PlayerInfo[playerid][pMats]+quantidade;
            PlayerInfo[playerid][psMats] = PlayerInfo[playerid][psMats]-quantidade;
            format(gstring, sizeof(gstring), "* Você pegou %d materiais no esconderijo!",quantidade);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
            return 1;
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não tem tudo isso!");
            return 1;
        }
    }
    if(dialogid == 2584)
    {
        if(!response) { return ShowPlayerDialog(playerid, 2582, DIALOG_STYLE_LIST, "Mafia Menu", "Equipar\nPegar Pacotes\nPegar Materiais\nEsconder Materiais", "Confirma", "Cancela"); }
        else if(!IsNumero(inputtext))
        {
            ShowPlayerDialog(playerid,2584,DIALOG_STYLE_INPUT,"Esconder Materiais","Digite a quantia de materiais para esconder","Esconder","Voltar");
            SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
            return 1;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
        {
            SendClientMessage(playerid, COLOR_GRAD2, "não pode pegar menos de 1 e nem mais de 10000");
            return 1;
        }
        if(PlayerInfo[playerid][pMats] >= ammount)
        {
            PlayerInfo[playerid][pMats] = PlayerInfo[playerid][pMats]-ammount;
            PlayerInfo[playerid][psMats] = PlayerInfo[playerid][psMats]+ammount;
            format(gstring, sizeof(gstring), "* Você escondeu %d materiais!",ammount);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
            return 1;
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não tem tudo isso!");
            return 1;
        }
    }
    if(dialogid == 2585)
    {
        if(!response) { return 1; }
        switch(listitem)
        {
            case 0:
            {
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid, 1524.4977,-1677.9469,6.2188);
            }
            case 1:
            {
                SetPlayerInterior(playerid, 6);
                SetPlayerPos(playerid, 246.2975,87.4735,1003.6406);
            }
            case 2:
            {
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid, 1565.1235,-1666.9944,28.3956);
            }
        }
    }
    if(dialogid == 2586)
    {
        if(!response) { return ShowPlayerDialog(playerid, 2586, DIALOG_STYLE_INPUT, "Pegar Materiais", "Digite a quantidade de materiais/nque deseja pegar", "Pegar", "Cancelar"); }
        else if(!IsNumero(inputtext))
        {
            ShowPlayerDialog(playerid, 2586, DIALOG_STYLE_INPUT, "Pegar Materiais", "Digite a quantidade de materiais/nque deseja pegar", "Pegar", "Cancelar");
            SendClientMessage(playerid,COLOR_GREY,"Porfavor, use números!");
            return 1;
        }
        new ammount = strval(inputtext);
        if(MatsHolding[playerid] >= 10)
        {
            SendClientMessage(playerid, COLOR_GREY, "   Você já tem pacotes !");
            return 1;
        }
        if(ammount < 1 || ammount > 10) { SendClientMessage(playerid, COLOR_GREY, "   Número de pacotes mínimo 1 máximo 10 !"); return 1; }
        new price = ammount * 100;
        if(GetPlayerMoneyEx(playerid) > price)
        {
            format(gstring, sizeof(gstring), "* Você recebeu %d materiais por R$%d.", ammount, price);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
            GivePlayerMoney(playerid, - price);
            MatsHolding[playerid] = ammount;
        }
        else
        {
            format(gstring, sizeof(gstring), "   Você não tem R$%d !", price);
            SendClientMessage(playerid, COLOR_GREY, gstring);
        }
    }
//Sistema de Cofre ORG
    if(dialogid == 11)
    {
        if(response == 0)
        {
            SendClientMessage(playerid, COLOR_DBLUE, "Você não quis ir ao evento criado pelo Admin");
            return 1;
        }
        if(response >= 1)
        {
            if(PlayerInfo[playerid][pJailed] >= 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "Você está preso e por isso não poderá comparecer ao evento criado pelo Admin.");
                return 1;
            }
            ResetPlayerWeapons(playerid);
            SetPlayerArmour(playerid, 0.0);
            SetPlayerHealth(playerid, 100.0);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "Obrigado por comparecer a este evento criado pelo Admin!");
            SetPlayerPos(playerid,vc,vy,vz);
            NoEvento[playerid] = true;
            return 1;
        }
        return 1;
    }
    if(dialogid == 12)
    {
        if(!response) return 1;
        if(response >= 1)
        {
            new org = GetPlayerOrg(playerid);
            if(listitem == 0)
            {
                format(string,sizeof(string),"O Saldo da Sua Organização é de R$%d\nO que você deseja fazer ?",CofreOrg[org][Dinheiro]);
                ShowPlayerDialog(playerid, 13, DIALOG_STYLE_MSGBOX, "Cofre da Organização", string, "Sacar", "Depositar");
                return 1;
            }
            if(listitem == 1)
            {
                format(string,sizeof(string),"A Sua Organização tem %d de Materiais\nO que você deseja fazer ?",CofreOrg[org][Materiais]);
                ShowPlayerDialog(playerid, 14, DIALOG_STYLE_MSGBOX, "Cofre da Organização", string, "Sacar", "Depositar");
                return 1;
            }
            if(listitem == 2)
            {
                format(string,sizeof(string),"A Sua Organização tem %d de Maconha\nO que você deseja fazer ?",CofreOrg[org][Maconha]);
                ShowPlayerDialog(playerid, 15, DIALOG_STYLE_MSGBOX, "Cofre da Organização", string, "Sacar", "Depositar");
                return 1;
            }
            if(listitem == 3)
            {
                format(string,sizeof(string),"A Sua Organização tem %d de Cocaina\nO que você deseja fazer ?",CofreOrg[org][Cocaina]);
                ShowPlayerDialog(playerid, 16, DIALOG_STYLE_MSGBOX, "Cofre da Organização", string, "Sacar", "Depositar");
                return 1;
            }
            if(listitem == 4)
            {
                format(string,sizeof(string),"A Sua Organização tem %d de Crack\nO que você deseja fazer ?",CofreOrg[org][Crack]);
                ShowPlayerDialog(playerid, 17, DIALOG_STYLE_MSGBOX, "Cofre da Organização", string, "Sacar", "Depositar");
                return 1;
            }
        }
        return 1;
    }
    if(dialogid == 13)
    {
        new org = GetPlayerOrg(playerid);
        if(response == 0)
        {
            format(string,sizeof(string),"O Saldo da Sua Organização é de R$%d\nQuantos você deseja Depositar ?",CofreOrg[org][Dinheiro]);
            ShowPlayerDialog(playerid, 18, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Depositar", "Cancelar");
            return 1;
        }
        if(response >= 1)
        {
            format(string,sizeof(string),"O Saldo da Sua Organização é de R$%d\nQuantos você deseja Sacar ?",CofreOrg[org][Dinheiro]);
            ShowPlayerDialog(playerid, 19, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Sacar", "Cancelar");
            return 1;
        }
        return 1;
    }
    if(dialogid == 14)
    {
        new org = GetPlayerOrg(playerid);
        if(response == 0)
        {
            format(string,sizeof(string),"A Sua Organização tem %d de Materiais\nQuantos você deseja Depositar ?",CofreOrg[org][Materiais]);
            ShowPlayerDialog(playerid, 20, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Depositar", "Cancelar");
            return 1;
        }
        if(response >= 1)
        {
            format(string,sizeof(string),"A Sua Organização tem %d de Materiais\nQuantos você deseja Sacar ?",CofreOrg[org][Materiais]);
            ShowPlayerDialog(playerid, 21, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Sacar", "Cancelar");
            return 1;
        }
        return 1;
    }
    if(dialogid == 15)
    {
        new org = GetPlayerOrg(playerid);
        if(response == 0)
        {
            format(string,sizeof(string),"A Sua Organização tem %d de Maconha\nQuantos você deseja Depositar ?",CofreOrg[org][Maconha]);
            ShowPlayerDialog(playerid, 22, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Depositar", "Cancelar");
            return 1;
        }
        if(response >= 1)
        {
            format(string,sizeof(string),"A Sua Organização tem %d de Maconha\nQuantos você deseja Sacar ?",CofreOrg[org][Maconha]);
            ShowPlayerDialog(playerid, 23, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Sacar", "Cancelar");
            return 1;
        }
        return 1;
    }
    if(dialogid == 16)
    {
        new org = GetPlayerOrg(playerid);
        if(response == 0)
        {
            format(string,sizeof(string),"A Sua Organização tem %d de Cocaina\nQuantos você deseja Depositar ?",CofreOrg[org][Cocaina]);
            ShowPlayerDialog(playerid, 24, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Depositar", "Cancelar");
            return 1;
        }
        if(response >= 1)
        {
            format(string,sizeof(string),"A Sua Organização tem %d de Cocaina\nQuantos você deseja Sacar ?",CofreOrg[org][Cocaina]);
            ShowPlayerDialog(playerid, 25, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Sacar", "Cancelar");
            return 1;
        }
        return 1;
    }
    if(dialogid == 17)
    {
        new org = GetPlayerOrg(playerid);
        if(response == 0)
        {
            format(string,sizeof(string),"A Sua Organização tem %d de Crack\nQuantos você deseja Depositar ?",CofreOrg[org][Crack]);
            ShowPlayerDialog(playerid, 26, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Depositar", "Cancelar");
            return 1;
        }
        if(response >= 1)
        {
            format(string,sizeof(string),"A Sua Organização tem %d de Crack\nQuantos você deseja Sacar ?",CofreOrg[org][Crack]);
            ShowPlayerDialog(playerid, 27, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Sacar", "Cancelar");
            return 1;
        }
        return 1;
    }
    if(dialogid == 18)
    {
        if(response >= 1)
        {
            new org = GetPlayerOrg(playerid);
            new depgrana = strval(inputtext);
            if(GetPlayerMoneyEx(playerid) < depgrana)
            {
                SendClientMessage(playerid,COLOR_GRAD1,"Você não tem tudo isso!");
                return 1;
            }
            if(depgrana > 0)
            {
                if(GetPlayerMoneyEx(playerid) >= depgrana)
                {
                    GivePlayerMoney(playerid, -depgrana);
                    DepositarGranaOrg(org,depgrana);
                    for(new k=0; k<MaiorID; k++)
                    {
                        if(GetPlayerOrg(k) == GetPlayerOrg(playerid))
                        {
                            format(gstring, sizeof(gstring), "** Agência %s: %s Depositou R$%d no Cofre, Novo Saldo da Organização: R$%d.",NomeORG(playerid),PlayerName(playerid),depgrana,CofreOrg[org][Dinheiro]);
                            SendClientMessage(k, 0x77EEA1FF, gstring);
                        }
                    }
                    format(string,sizeof(string),"Você Depositou R$%d",depgrana);
                    SendClientMessage(playerid,COLOR_GRAD1,string);
                    if(GetPlayerOrg(playerid) == 7)
                    {
                        a3d();
                    }
                    return 1;
                }
            }
            return 1;
        }
        return 1;
    }
    if(dialogid == 19)
    {
        if(response >= 1)
        {
            new org = GetPlayerOrg(playerid);
            new sacgrana = strval(inputtext);
            if(sacgrana > CofreOrg[org][Dinheiro])
            {
                SendClientMessage(playerid,COLOR_GRAD1,"Sua Organização não tem tudo isso!");
                return 1;
            }
            if(PlayerInfo[playerid][pCargo] < 5 && PlayerInfo[playerid][pLider] < 1)
            {
                SendClientMessage(playerid,COLOR_GRAD1,"Somente Líder e Sub-Líder Podem Sacar Dinheiro");
                return 1;
            }
            if(sacgrana > 0)
            {
                if(sacgrana <= CofreOrg[org][Dinheiro])
                {
                    GivePlayerMoney(playerid, sacgrana);
                    SacarGranaOrg(org,sacgrana);
                    for(new k=0; k<MaiorID; k++)
                    {
                        if(GetPlayerOrg(k) == GetPlayerOrg(playerid))
                        {
                            format(gstring, sizeof(gstring), "** Agência %s: %s Sacou R$%d do Cofre, Novo Saldo da Organização: R$%d.",NomeORG(playerid),PlayerName(playerid),sacgrana,CofreOrg[org][Dinheiro]);
                            SendClientMessage(k, 0x77EEA1FF, gstring);
                        }
                    }
                    format(string,sizeof(string),"Você Sacou R$%d",sacgrana);
                    SendClientMessage(playerid,COLOR_GRAD1,string);
                    if(GetPlayerOrg(playerid) == 7)
                    {
                        a3d();
                        if(PlayerInfo[playerid][pLider] == 7)
                        {
                            format(string, sizeof(string), "[PlayGamer News] O Prefeito: %s, Acabou de Sacar alguma Quantia Em Dinheiro dos Cofres Públicos!",PlayerName(playerid));
                            OOCNews(0x1583F0FF, string);
                        }
                    }
                    return 1;
                }
            }
            return 1;
        }
        return 1;
    }
    if(dialogid == 20)
    {
        if(response >= 1)
        {
            new org = GetPlayerOrg(playerid);
            new depmat = strval(inputtext);
            new pMateriais = PlayerInfo[playerid][pMats];
            if(pMateriais < depmat)
            {
                SendClientMessage(playerid,COLOR_GRAD1,"Você não tem tudo isso!");
                return 1;
            }
            if(depmat > 0)
            {
                if(pMateriais >= depmat)
                {
                    PlayerInfo[playerid][pMats] = pMateriais-depmat;
                    DepositarMaterialOrg(org,depmat);
                    format(string,sizeof(string),"Você Depositou %d de Materiais, o Novo Saldo de Materiais é de %d",depmat,CofreOrg[org][Materiais]);
                    SendClientMessage(playerid,COLOR_GRAD1,string);
                    return 1;
                }
            }
            return 1;
        }
        return 1;
    }
    if(dialogid == 21)
    {
        if(response >= 1)
        {
            new org = GetPlayerOrg(playerid);
            new sacmat = strval(inputtext);
            new pMateriais = PlayerInfo[playerid][pMats];
            if(sacmat > CofreOrg[org][Materiais])
            {
                SendClientMessage(playerid,COLOR_GRAD1,"Sua Organização não tem tudo isso!");
                return 1;
            }
            if(PlayerInfo[playerid][pCargo] < 5 && PlayerInfo[playerid][pLider] < 1)
            {
                SendClientMessage(playerid,COLOR_GRAD1,"Somente Líder e Sub-Líder Podem Sacar Materiais");
                return 1;
            }
            if(sacmat > 0)
            {
                if(sacmat <= CofreOrg[org][Materiais])
                {
                    PlayerInfo[playerid][pMats] = pMateriais+sacmat;
                    SacarMaterialOrg(org,sacmat);
                    format(string,sizeof(string),"Você Sacou %d Materiais, o Novo Saldo de Materiais é %d",sacmat,CofreOrg[org][Materiais]);
                    SendClientMessage(playerid,COLOR_GRAD1,string);
                    return 1;
                }
            }
            return 1;
        }
        return 1;
    }
    if(dialogid == 22)
    {
        if(response >= 1)
        {
            new org = GetPlayerOrg(playerid);
            new depmac = strval(inputtext);
            new pMaconha = PlayerInfo[playerid][pDrogas];
            if(pMaconha < depmac)
            {
                SendClientMessage(playerid,COLOR_GRAD1,"Você não tem tudo isso!");
                return 1;
            }
            if(depmac > 0)
            {
                if(pMaconha >= depmac)
                {
                    PlayerInfo[playerid][pDrogas] = pMaconha-depmac;
                    DepositarMaconhaOrg(org,depmac);
                    format(string,sizeof(string),"Você Depositou %d de Maconha, o Novo Saldo de Maconha é de %d",depmac,CofreOrg[org][Maconha]);
                    SendClientMessage(playerid,COLOR_GRAD1,string);
                    return 1;
                }
            }
            return 1;
        }
        return 1;
    }
    if(dialogid == 23)
    {
        if(response == 0)
        {
            return 1;
        }
        if(response >= 1)
        {
            new org = GetPlayerOrg(playerid);
            new sacmac = strval(inputtext);
            new pMaconha = PlayerInfo[playerid][pDrogas];
            if(sacmac > CofreOrg[org][Maconha])
            {
                SendClientMessage(playerid,COLOR_GRAD1,"Sua Organização não tem tudo isso!");
                return 1;
            }
            if(PlayerInfo[playerid][pCargo] < 5)
            {
                SendClientMessage(playerid,COLOR_GRAD1,"Somente Lider e Sub-Lider Podem Sacar Maconha");
                return 1;
            }
            if(sacmac > 0)
            {
                if(sacmac <= CofreOrg[org][Maconha])
                {
                    PlayerInfo[playerid][pDrogas] = pMaconha+sacmac;
                    SacarMaconhaOrg(org,sacmac);
                    format(string,sizeof(string),"Você Sacou %d de Maconha, o Novo Saldo de Maconha é de %d",sacmac,CofreOrg[org][Maconha]);
                    SendClientMessage(playerid,COLOR_GRAD1,string);
                    return 1;
                }
            }
            return 1;
        }
        return 1;
    }
    if(dialogid == 24)
    {
        if(response >= 1)
        {
            new org = GetPlayerOrg(playerid);
            new depcoca = strval(inputtext);
            new pCocaina = PlayerInfo[playerid][pDrogas2];
            if(pCocaina < depcoca)
            {
                SendClientMessage(playerid,COLOR_GRAD1,"Você não tem tudo isso!");
                return 1;
            }
            if(depcoca > 0)
            {
                if(pCocaina >= depcoca)
                {
                    PlayerInfo[playerid][pDrogas2] = pCocaina-depcoca;
                    DepositarCocainaOrg(org,depcoca);
                    format(string,sizeof(string),"Você Depositou %d de Cocaina, o Novo Saldo de Cocaina é de %d",depcoca,CofreOrg[org][Cocaina]);
                    SendClientMessage(playerid,COLOR_GRAD1,string);
                    return 1;
                }
            }
            return 1;
        }
        return 1;
    }
    if(dialogid == 25)
    {
        if(response >= 1)
        {
            new org = GetPlayerOrg(playerid);
            new saccoca = strval(inputtext);
            new pCocaina = PlayerInfo[playerid][pDrogas2];
            if(saccoca > CofreOrg[org][Cocaina])
            {
                SendClientMessage(playerid,COLOR_GRAD1,"Sua Organização não tem tudo isso!");
                return 1;
            }
            if(PlayerInfo[playerid][pCargo] < 5 && PlayerInfo[playerid][pLider] < 1)
            {
                SendClientMessage(playerid,COLOR_GRAD1,"Somente Líder e Sub-Líder Podem Sacar Cocaína");
                return 1;
            }
            if(saccoca > 0)
            {
                if(saccoca <= CofreOrg[org][Cocaina])
                {
                    PlayerInfo[playerid][pDrogas2] = pCocaina+saccoca;
                    SacarCocainaOrg(org,saccoca);
                    format(string,sizeof(string),"Você Sacou %d de Cocaína, o Novo Saldo de Cocaína é de %d",saccoca,CofreOrg[org][Cocaina]);
                    SendClientMessage(playerid,COLOR_GRAD1,string);
                    return 1;
                }
            }
            return 1;
        }
        return 1;
    }
    if(dialogid == 26)
    {
        if(response >= 1)
        {
            new org = GetPlayerOrg(playerid);
            new depcrac = strval(inputtext);
            new pCrack = PlayerInfo[playerid][pDrogas3];
            if(pCrack < depcrac)
            {
                SendClientMessage(playerid,COLOR_GRAD1,"Você não tem tudo isso!");
                return 1;
            }
            if(depcrac > 0)
            {
                if(pCrack >= depcrac)
                {
                    PlayerInfo[playerid][pDrogas3] = pCrack-depcrac;
                    DepositarCrackOrg(org,depcrac);
                    format(string,sizeof(string),"Você Depositou %d de Crack, o Novo Saldo de Crack é de %d",depcrac,CofreOrg[org][Crack]);
                    SendClientMessage(playerid,COLOR_GRAD1,string);
                    return 1;
                }
            }
            return 1;
        }
        return 1;
    }
    if(dialogid == 27)
    {
        if(response >= 1)
        {
            new org = GetPlayerOrg(playerid);
            new saccrac = strval(inputtext);
            new pCrack = PlayerInfo[playerid][pDrogas3];
            if(saccrac > CofreOrg[org][Crack])
            {
                SendClientMessage(playerid,COLOR_GRAD1,"Sua Organização não tem tudo isso!");
                return 1;
            }
            if(PlayerInfo[playerid][pCargo] < 5 && PlayerInfo[playerid][pLider] < 1)
            {
                SendClientMessage(playerid,COLOR_GRAD1,"Somente Líder e Sub-Líder Podem Sacar Crack");
                return 1;
            }
            if(saccrac > 0)
            {
                if(saccrac <= CofreOrg[org][Crack])
                {
                    PlayerInfo[playerid][pDrogas3] = pCrack+saccrac;
                    SacarCrackOrg(org,saccrac);
                    format(string,sizeof(string),"Você Sacou %d de Crack, o Novo Saldo de Crack é de %d",saccrac,CofreOrg[org][Crack]);
                    SendClientMessage(playerid,COLOR_GRAD1,string);
                    return 1;
                }
            }
            return 1;
        }
        return 1;
    }
    if(dialogid == 28)
    {
        new Float:health;
        GetPlayerName(playerid, sendername, sizeof(sendername));
        GetPlayerHealth(playerid, health);
        if(!response) return 1;
        if (GetPlayerMoneyEx(playerid) <= 0)
        {
            GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro", 5000, 1);
            return 1;
        }
        if(response)
        {
            if(listitem == 0)
            {
                format(string, sizeof(string), "* %s come um espetinho de coração.", sendername);
                GivePlayerMoney(playerid, -2);
                SetPlayerHealth(playerid, health + 20);
            }
            if(listitem == 1)
            {
                format(string, sizeof(string), "* %s come um churrasco de carne de vaca.", sendername);
                GivePlayerMoney(playerid, -4);
                SetPlayerHealth(playerid, health + 50);
            }
            if(listitem == 2)
            {
                format(string, sizeof(string), "* %s come um churrasco de jacare.", sendername);
                GivePlayerMoney(playerid, -5);
                SetPlayerHealth(playerid, health + 80);
            }
            if(listitem == 3)
            {
                format(string, sizeof(string), "* %s come um churrasco de frango.", sendername);
                GivePlayerMoney(playerid, -3);
                SetPlayerHealth(playerid, health + 35);
            }
            if(listitem == 4)
            {
                format(string, sizeof(string), "* %s bebeu água.", sendername);
                GivePlayerMoney(playerid, -1);
                SetPlayerHealth(playerid, health + 10);
                ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
            }
            if(listitem == 5)
            {
                format(string, sizeof(string), "* %s bebeu suco.", sendername);
                GivePlayerMoney(playerid, -1);
                SetPlayerHealth(playerid, health + 10);
                ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
            }
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        }
        return 1;
    }
    if(dialogid == 29)
    {
        new Float:health;
        GetPlayerName(playerid, sendername, sizeof(sendername));
        GetPlayerHealth(playerid, health);
        if(!response) return 1;
        if (GetPlayerMoneyEx(playerid) <= 0)
        {
            GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro", 5000, 1);
            return 1;
        }
        if(response)
        {
            if(listitem == 0)
            {
                format(string, sizeof(string), "* %s come um X-SIMPLES.", sendername);
                GivePlayerMoney(playerid, -2);
                SetPlayerHealth(playerid, health + 20);
            }
            if(listitem == 1)
            {
                format(string, sizeof(string), "* %s come um X-TUDO.", sendername);
                GivePlayerMoney(playerid, -4);
                SetPlayerHealth(playerid, health + 50);
            }
            if(listitem == 2)
            {
                format(string, sizeof(string), "* %s come um X-ESPECIAL.", sendername);
                GivePlayerMoney(playerid, -5);
                SetPlayerHealth(playerid, health + 80);
            }
            if(listitem == 3)
            {
                format(string, sizeof(string), "* %s come um X-FRANGO.", sendername);
                GivePlayerMoney(playerid, -3);
                SetPlayerHealth(playerid, health + 35);
            }
            if(listitem == 4)
            {
                format(string, sizeof(string), "* %s bebeu água.", sendername);
                GivePlayerMoney(playerid, -1);
                SetPlayerHealth(playerid, health + 10);
                ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
            }
            if(listitem == 5)
            {
                format(string, sizeof(string), "* %s bebeu suco.", sendername);
                GivePlayerMoney(playerid, -1);
                SetPlayerHealth(playerid, health + 10);
                ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
            }
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        }
    }
    if(dialogid == 30)
    {
        new Float:health;
        GetPlayerName(playerid, sendername, sizeof(sendername));
        GetPlayerHealth(playerid, health);
        if(!response) return 1;
        if (GetPlayerMoneyEx(playerid) <= 0)
        {
            GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro", 5000, 1);
            return 1;
        }
        if(response)
        {
            if(listitem == 0)
            {
                format(string, sizeof(string), "* %s come uma pizza pequena de presunto e mussarela.", sendername);
                GivePlayerMoney(playerid, -2);
                SetPlayerHealth(playerid, health + 20);
            }
            if(listitem == 1)
            {
                format(string, sizeof(string), "* %s come uma pizza grande de presunto e mussarela.", sendername);
                GivePlayerMoney(playerid, -4);
                SetPlayerHealth(playerid, health + 50);
            }
            if(listitem == 2)
            {
                format(string, sizeof(string), "* %s come uma pizza extra grande.", sendername);
                GivePlayerMoney(playerid, -5);
                SetPlayerHealth(playerid, health + 80);
            }
            if(listitem == 3)
            {
                format(string, sizeof(string), "* %s come uma pizza de Bacon e Chocolate.", sendername);
                GivePlayerMoney(playerid, -3);
                SetPlayerHealth(playerid, health + 35);
            }
            if(listitem == 4)
            {
                format(string, sizeof(string), "* %s bebeu água.", sendername);
                GivePlayerMoney(playerid, -1);
                SetPlayerHealth(playerid, health + 10);
                ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
            }
            if(listitem == 5)
            {
                format(string, sizeof(string), "* %s bebeu suco.", sendername);
                GivePlayerMoney(playerid, -1);
                SetPlayerHealth(playerid, health + 10);
                ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
            }
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        }
    }
    if(dialogid == 31)
    {
        new Float:health;
        GetPlayerName(playerid, sendername, sizeof(sendername));
        GetPlayerHealth(playerid, health);
        if(!response) return 1;
        if (GetPlayerMoneyEx(playerid) <= 0)
        {
            GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro", 5000, 1);
            return 1;
        }
        if(response)
        {
            if(listitem == 0)
            {
                format(string, sizeof(string), "* %s come uma rosquinha pequena.", sendername);
                GivePlayerMoney(playerid, -2);
                SetPlayerHealth(playerid, health + 20);
            }
            if(listitem == 1)
            {
                format(string, sizeof(string), "* %s come uma rosquinha normal.", sendername);
                GivePlayerMoney(playerid, -4);
                SetPlayerHealth(playerid, health + 50);
            }
            if(listitem == 2)
            {
                format(string, sizeof(string), "* %s come uma rosquinha de chefe.", sendername);
                GivePlayerMoney(playerid, -5);
                SetPlayerHealth(playerid, health + 80);
            }
            if(listitem == 3)
            {
                format(string, sizeof(string), "* %s come uma super rosquinha.", sendername);
                GivePlayerMoney(playerid, -3);
                SetPlayerHealth(playerid, health + 35);
            }
            if(listitem == 4)
            {
                format(string, sizeof(string), "* %s bebeu água.", sendername);
                GivePlayerMoney(playerid, -1);
                SetPlayerHealth(playerid, health + 10);
                ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
            }
            if(listitem == 5)
            {
                format(string, sizeof(string), "* %s bebeu suco.", sendername);
                GivePlayerMoney(playerid, -1);
                SetPlayerHealth(playerid, health + 10);
                ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
            }
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        }
    }
    if(dialogid == 14697)
    {
        if(response == 0) OnPlayerCommandText(playerid,"/gorg");
    }
    if(dialogid == 14657)
    {
        if(response >= 1) //sim
        {
            if(listitem == 0)
            {
                OnPlayerCommandText(playerid,"/gorg");
                SendClientMessage(playerid, COLOR_GRAD2, "ERRO: Este Membro não pode Ser Gerenciado!");
            }
            else
            {
                ShowPlayerDialog(playerid,26457,DIALOG_STYLE_INPUT,"{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer {FFFFFF} - Limpar Vaga","{33FF99}Menu para Demitir membros da Organização.\n{69B4FF}Coloque Abaixo, o Motivo da Demição do Membro.\nEm Seguida Clique em '{80FFFF}Limpar{69B4FF}', Para Cancelar ..\nClique em '{80FFFF}Voltar{69B4FF}'!","Limpar","Voltar");
                VagaLimpar[playerid] = listitem-1;
            }
        }
    }
    if(dialogid == 26457)
    {
        if(response == 1) //sim
        {
            new StrOrgLimpar[150];
            if(strlen(inputtext) > 24)
            {
                return SendClientMessage(playerid, COLOR_GRAD2, "ERRO: Digite menos Caracteres!");
            }
            if(VagaLimpar[playerid] == 0) format(StrOrgLimpar,sizeof(StrOrgLimpar),"sub %s",inputtext);
            else format(StrOrgLimpar,sizeof(StrOrgLimpar),"%d %s",VagaLimpar[playerid],inputtext);
            format(gstring,sizeof(gstring),"/limparvaga %s",StrOrgLimpar);
            OnPlayerCommandText(playerid,gstring);
            //OnPlayerCommandText(playerid,"/gorg");
            VagaLimpar[playerid] = 99;
        }
        else
        {
            OnPlayerCommandText(playerid,"/gorg");
            VagaLimpar[playerid] = 99;
        }
    }
    /*if(dialogid == 14657)
    {
        if(response == 1) //sim
        {
            ShowPlayerDialog(playerid,26457,DIALOG_STYLE_INPUT,"{FFFF00}Brasil {0000FF}Play {00FF00}Gamer {FFFFFF} - Limpar Vaga","{33FF99}Menu para Demitir membros da Organização.\n{FFA8FF}Coloque Abaixo, o Número da Vaga que Quer limpar.\nEm Seguida Clique em '{80FFFF}Limpar{FFA8FF}', Para Cancelar ..\nClique em '{80FFFF}Voltar{FFA8FF}'!","Limpar","Voltar");
        }
    }
    if(dialogid == 26457)
    {
        if(!IsNumero(inputtext))
        {
            ShowPlayerDialog(playerid,26457,DIALOG_STYLE_INPUT,"{FFFF00}Brasil {0000FF}Play {00FF00}Gamer {FFFFFF} - Limpar Vaga","{33FF99}Menu para Demitir membros da Organização.\n{FFA8FF}Coloque Abaixo, o Número da Vaga que Quer limpar.\nEm Seguida Clique em '{80FFFF}Limpar{FFA8FF}', Para Cancelar ..\nClique em '{80FFFF}Voltar{FFA8FF}'!","Limpar","Voltar");
            SendClientMessage(playerid,COLOR_GREY,"Digite apenas números de 1 à 30!");
            return 1;
        }
        if(response == 1) //sim
        {
            format(gstring,sizeof(gstring),"/limparvaga %d",strval(inputtext));
            OnPlayerCommandText(playerid,gstring);
            OnPlayerCommandText(playerid,"/infoorg");
        }
        else
        {
            OnPlayerCommandText(playerid,"/infoorg");
        }
    }     */
    if(dialogid == 1319)
    {
        if(response == 1)
        {
            if(listitem == 0)
            {
                ShowPlayerDialog(playerid,1320,DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer {FFFFFF} - Concessionária","Você Está Prestes a Vender seu Veículo.\nTem Certeza que deseja Fazer isto?","Sim","Não");
            }
            if(listitem == 1)
            {
                format(strvinny,sizeof(strvinny),"{33FF99}Bem Vindo %s à Concessionária Brasil PlayGamer!\n{FFA8FF}Escolha o Tipo de Veículo que Deseja abaixo.\n{33FF99}Para comprar um Veículo você Deverá ter em Mãos o Dinheiro Correspondente ao Valor do Carro.",PlayerName(playerid));
                ShowPlayerDialog(playerid, 5467, DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer {FFFFFF} - Concessionária",strvinny,"Carro","Moto/Bike");
            }
        }
        else
        {
            //Tudo que vai acontecer no botão direito.
        }
    }
    if(dialogid == 5467)
    {
        if(response == 1)
        {
                new textdialog[1000];
                strins(textdialog,"Bravura\n",strlen(textdialog)); //401
                strins(textdialog,"Buffalo\n",strlen(textdialog)); //402
                strins(textdialog,"Perenniel\n",strlen(textdialog)); //404
                strins(textdialog,"Sentinel\n",strlen(textdialog)); //405
                strins(textdialog,"Limosine\n",strlen(textdialog)); //409
                strins(textdialog,"Manana\n",strlen(textdialog)); //410
                strins(textdialog,"Voodoo\n",strlen(textdialog)); //412
                strins(textdialog,"Cheetah\n",strlen(textdialog)); //415
                strins(textdialog,"Moonbeam\n",strlen(textdialog)); //418
                strins(textdialog,"Esperanto\n",strlen(textdialog)); //419
                strins(textdialog,"Washington\n",strlen(textdialog)); //421
                strins(textdialog,"Premier\n",strlen(textdialog)); //426
                strins(textdialog,"Banshee\n",strlen(textdialog)); //429
                strins(textdialog,"Hotknife\n",strlen(textdialog)); //434
                strins(textdialog,"Previon\n",strlen(textdialog)); //436
                strins(textdialog,"Stallion\n",strlen(textdialog)); //439
                strins(textdialog,"Romero\n",strlen(textdialog)); //442
                strins(textdialog,"Admiral\n",strlen(textdialog)); //445
                strins(textdialog,"Turismo\n",strlen(textdialog)); //451
                strins(textdialog,"Solair\n",strlen(textdialog)); //458
                strins(textdialog,"Glendale\n",strlen(textdialog)); //466
                strins(textdialog,"Oceanic\n",strlen(textdialog)); //467
                strins(textdialog,"Hermes\n",strlen(textdialog)); //474
                strins(textdialog,"Sabre\n",strlen(textdialog)); //475
                strins(textdialog,"ZR-350\n",strlen(textdialog)); //477
                strins(textdialog,"Regina\n",strlen(textdialog)); //479
                strins(textdialog,"Comet\n",strlen(textdialog)); //480
                strins(textdialog,"Camper\n",strlen(textdialog)); //483
                strins(textdialog,"Virgo\n",strlen(textdialog)); //491
                strins(textdialog,"Greenwood\n",strlen(textdialog)); //492
                strins(textdialog,"Blista Compact\n",strlen(textdialog)); //496
                strins(textdialog,"Super GT\n",strlen(textdialog)); //506
                strins(textdialog,"Elegant\n",strlen(textdialog)); //507
                strins(textdialog,"Nebula\n",strlen(textdialog)); //516
                strins(textdialog,"Majestic\n",strlen(textdialog)); //517
                strins(textdialog,"Buccaneer\n",strlen(textdialog)); //518
                strins(textdialog,"Fortune\n",strlen(textdialog)); //526
                strins(textdialog,"Cadrona\n",strlen(textdialog)); //527
                strins(textdialog,"Willard\n",strlen(textdialog)); //529
                strins(textdialog,"Feltzer\n",strlen(textdialog)); //533
                strins(textdialog,"Remington\n",strlen(textdialog)); //534
                strins(textdialog,"Slamvan\n",strlen(textdialog)); //535
                strins(textdialog,"Blade\n",strlen(textdialog)); //536
                strins(textdialog,"Vincent\n",strlen(textdialog)); //540
                strins(textdialog,"Bullet\n",strlen(textdialog)); //541
                strins(textdialog,"Clover\n",strlen(textdialog)); //542
                strins(textdialog,"Hustler\n",strlen(textdialog)); //545
                strins(textdialog,"Intruder\n",strlen(textdialog)); //546
                strins(textdialog,"Primo\n",strlen(textdialog)); //547
                strins(textdialog,"Tampa\n",strlen(textdialog)); //549
                strins(textdialog,"Sunrise\n",strlen(textdialog)); //550
                strins(textdialog,"Merit\n",strlen(textdialog)); //551
                strins(textdialog,"Windsor\n",strlen(textdialog)); //555
                strins(textdialog,"Uranus\n",strlen(textdialog)); //558
                strins(textdialog,"Jester\n",strlen(textdialog)); //559
                strins(textdialog,"Sultan\n",strlen(textdialog)); //560
                strins(textdialog,"Stratum\n",strlen(textdialog)); //561
                strins(textdialog,"Elegy\n",strlen(textdialog)); //562
                strins(textdialog,"Flash\n",strlen(textdialog)); //565
                strins(textdialog,"Tahoma\n",strlen(textdialog)); //566
                strins(textdialog,"Savanna\n",strlen(textdialog)); //567
                strins(textdialog,"Broadway\n",strlen(textdialog)); //575
                strins(textdialog,"Tornado\n",strlen(textdialog)); //576
                strins(textdialog,"Stafford\n",strlen(textdialog)); //580
                strins(textdialog,"Emperor\n",strlen(textdialog)); //585
                strins(textdialog,"Euros\n",strlen(textdialog)); //587
                strins(textdialog,"Club\n",strlen(textdialog)); //589
                strins(textdialog,"Alpha\n",strlen(textdialog)); //602
                strins(textdialog,"Phoenix\n",strlen(textdialog)); //603
                strins(textdialog,"Infernus",strlen(textdialog)); //411
                ShowPlayerDialog(playerid,1321,DIALOG_STYLE_LIST,"{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer {FFFFFF} - Concessionária",textdialog,"Selecionar","Cancelar");
                SendClientMessage(playerid, 0x23C0FCFF, "[BPG Veículo] {FFFFFF}Escolha o Modelo do Veículo que Deseja Comprar!");

        }
        if(response == 0)
        {
                new textdialog[256];
                strins(textdialog,"PCJ-600 \n",strlen(textdialog)); //461
                strins(textdialog,"Faggio\n",strlen(textdialog)); //462
                strins(textdialog,"Freeway\n",strlen(textdialog)); //463
                strins(textdialog,"Sanchez\n",strlen(textdialog)); //468
                strins(textdialog,"Quad Motor\n",strlen(textdialog)); //471
                strins(textdialog,"BMX Bike\n",strlen(textdialog)); //481
                strins(textdialog,"Mountain Bike\n",strlen(textdialog)); //510
                strins(textdialog,"FCR-900\n",strlen(textdialog)); //521
                strins(textdialog,"NRG-500\n",strlen(textdialog)); //522
                strins(textdialog,"BF-400\n",strlen(textdialog)); //581
                strins(textdialog,"Wayfarer",strlen(textdialog)); //586
                ShowPlayerDialog(playerid,1647,DIALOG_STYLE_LIST,"{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer {FFFFFF} - Concessionária",textdialog,"Selecionar","Cancelar");
                SendClientMessage(playerid, 0x23C0FCFF, "[BPG Veículo] {FFFFFF}Escolha o Modelo do Veículo que Deseja Comprar!");
        }
    }
    if(dialogid == 1647)
    {
        if(response == 1)
        {
            if(listitem == 0){ ModeloCarro[playerid] = 461;  }
            if(listitem == 1){ ModeloCarro[playerid] = 462;  }
            if(listitem == 2){ ModeloCarro[playerid] = 463;  }
            if(listitem == 3){ ModeloCarro[playerid] = 468;  }
            if(listitem == 4){ ModeloCarro[playerid] = 471;  }
            if(listitem == 5){ ModeloCarro[playerid] = 481;  }
            if(listitem == 6){ ModeloCarro[playerid] = 510;  }
            if(listitem == 7){ ModeloCarro[playerid] = 521;  }
            if(listitem == 8){ ModeloCarro[playerid] = 522;  }
            if(listitem == 9){ ModeloCarro[playerid] = 581;  }
            if(listitem == 10){ ModeloCarro[playerid] = 586;  }
            format(strvinny,sizeof(strvinny),"{33FF99}Parabéns %s, Está Quase Pronto!\n{33FF99}Você Escolheu o Veículo: {FFA8FF}%s.\n{33FF99}Valor {FFA8FF}R$ %d\n{33FF99}Caso Deseja comprar este Veículo, Clique em '{FFA8FF}Comprar{33FF99}'.",PlayerName(playerid),vehName[ModeloCarro[playerid]-400],CalcularPrecoCar(playerid));
            ShowPlayerDialog(playerid, 3168, DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer {FFFFFF} - Concessionária",strvinny,"Comprar","Voltar");
        }
        else
        {
            return SendClientMessage(playerid, 0xFFA8A8FF, "[BPG Veículo] {FFFFFF} Compra do veículo Cancelada!");
        }
    }
    if(dialogid == 1321)
    {
        if(response == 1)
        {
            if(listitem == 0){ ModeloCarro[playerid] = 401;  }
            if(listitem == 1){ ModeloCarro[playerid] = 402;  }
            if(listitem == 2){ ModeloCarro[playerid] = 404;  }
            if(listitem == 3){ ModeloCarro[playerid] = 405;  }
            if(listitem == 4){ ModeloCarro[playerid] = 409;  }
            if(listitem == 5){ ModeloCarro[playerid] = 410;  }
            if(listitem == 6){ ModeloCarro[playerid] = 412;  }
            if(listitem == 7){ ModeloCarro[playerid] = 415;  }
            if(listitem == 8){ ModeloCarro[playerid] = 418;  }
            if(listitem == 9){ ModeloCarro[playerid] = 419;  }
            if(listitem == 10){ ModeloCarro[playerid] = 421;  }
            if(listitem == 11){ ModeloCarro[playerid] = 426;  }
            if(listitem == 12){ ModeloCarro[playerid] = 429;  }
            if(listitem == 13){ ModeloCarro[playerid] = 434;  }
            if(listitem == 14){ ModeloCarro[playerid] = 436;  }
            if(listitem == 15){ ModeloCarro[playerid] = 439;  }
            if(listitem == 16){ ModeloCarro[playerid] = 442;  }
            if(listitem == 17){ ModeloCarro[playerid] = 445;  }
            if(listitem == 18){ ModeloCarro[playerid] = 451;  }
            if(listitem == 19){ ModeloCarro[playerid] = 458;  }
            if(listitem == 20){ ModeloCarro[playerid] = 466;  }
            if(listitem == 21){ ModeloCarro[playerid] = 467;  }
            if(listitem == 22){ ModeloCarro[playerid] = 474;  }
            if(listitem == 23){ ModeloCarro[playerid] = 475;  }
            if(listitem == 24){ ModeloCarro[playerid] = 477;  }
            if(listitem == 25){ ModeloCarro[playerid] = 479;  }
            if(listitem == 26){ ModeloCarro[playerid] = 480;  }
            if(listitem == 27){ ModeloCarro[playerid] = 483;  }
            if(listitem == 28){ ModeloCarro[playerid] = 491;  }
            if(listitem == 29){ ModeloCarro[playerid] = 492;  }
            if(listitem == 30){ ModeloCarro[playerid] = 496;  }
            if(listitem == 31){ ModeloCarro[playerid] = 506;  }
            if(listitem == 32){ ModeloCarro[playerid] = 507;  }
            if(listitem == 33){ ModeloCarro[playerid] = 516;  }
            if(listitem == 34){ ModeloCarro[playerid] = 517;  }
            if(listitem == 35){ ModeloCarro[playerid] = 518;  }
            if(listitem == 36){ ModeloCarro[playerid] = 526;  }
            if(listitem == 37){ ModeloCarro[playerid] = 527;  }
            if(listitem == 38){ ModeloCarro[playerid] = 529;  }
            if(listitem == 39){ ModeloCarro[playerid] = 533;  }
            if(listitem == 40){ ModeloCarro[playerid] = 534;  }
            if(listitem == 41){ ModeloCarro[playerid] = 535;  }
            if(listitem == 42){ ModeloCarro[playerid] = 536;  }
            if(listitem == 43){ ModeloCarro[playerid] = 540;  }
            if(listitem == 44){ ModeloCarro[playerid] = 541;  }
            if(listitem == 45){ ModeloCarro[playerid] = 542;  }
            if(listitem == 46){ ModeloCarro[playerid] = 545;  }
            if(listitem == 47){ ModeloCarro[playerid] = 546;  }
            if(listitem == 48){ ModeloCarro[playerid] = 547;  }
            if(listitem == 49){ ModeloCarro[playerid] = 549;  }
            if(listitem == 50){ ModeloCarro[playerid] = 550;  }
            if(listitem == 51){ ModeloCarro[playerid] = 551;  }
            if(listitem == 52){ ModeloCarro[playerid] = 555;  }
            if(listitem == 53){ ModeloCarro[playerid] = 558;  }
            if(listitem == 54){ ModeloCarro[playerid] = 559;  }
            if(listitem == 55){ ModeloCarro[playerid] = 560;  }
            if(listitem == 56){ ModeloCarro[playerid] = 561;  }
            if(listitem == 57){ ModeloCarro[playerid] = 562;  }
            if(listitem == 58){ ModeloCarro[playerid] = 565;  }
            if(listitem == 59){ ModeloCarro[playerid] = 566;  }
            if(listitem == 60){ ModeloCarro[playerid] = 567;  }
            if(listitem == 61){ ModeloCarro[playerid] = 575;  }
            if(listitem == 62){ ModeloCarro[playerid] = 576;  }
            if(listitem == 63){ ModeloCarro[playerid] = 580;  }
            if(listitem == 64){ ModeloCarro[playerid] = 585;  }
            if(listitem == 65){ ModeloCarro[playerid] = 587;  }
            if(listitem == 66){ ModeloCarro[playerid] = 589;  }
            if(listitem == 67){ ModeloCarro[playerid] = 602;  }
            if(listitem == 68){ ModeloCarro[playerid] = 603;  }
            if(listitem == 69){ ModeloCarro[playerid] = 411;  }
            format(strvinny,sizeof(strvinny),"{33FF99}Parabéns %s, Está Quase Pronto!\n{33FF99}Você Escolheu o Veículo: {FFA8FF}%s.\n{33FF99}Valor {FFA8FF}R$ %d\n{33FF99}Caso Deseja comprar este Veículo, Clique em '{FFA8FF}Comprar{33FF99}'.",PlayerName(playerid),vehName[ModeloCarro[playerid]-400],CalcularPrecoCar(playerid));
            ShowPlayerDialog(playerid, 3168, DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer {FFFFFF} - Concessionária",strvinny,"Comprar","Voltar");
        }
        else
        {
            return SendClientMessage(playerid, 0xFFA8A8FF, "[BPG Veículo] {FFFFFF} Compra do veículo Cancelada!");
        }
    }
    if(dialogid == 3168)
    {
        if(response == 1)
        {
            ComprarCarro(playerid);
        }
        else
        {
            format(strvinny,sizeof(strvinny),"{33FF99}Bem Vindo %s à Concessionária Brasil PlayGamer!\n{FFA8FF}Escolha o Tipo de Veículo que Deseja abaixo.\n{33FF99}Para comprar um Veículo você Deverá ter em Mãos o Dinheiro Correspondente ao Valor do Carro.",PlayerName(playerid));
            ShowPlayerDialog(playerid, 5467, DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer {FFFFFF} - Concessionária",strvinny,"Carro","Moto/Bike");
            return SendClientMessage(playerid, 0xFFA8A8FF, "[BPG Veículo] {FFFFFF} Compra do veículo Cancelada, Voltando ao Menu!");
        }
    }
    if(dialogid == 1320)
    {
        if(response == 1)
        {
            if(PlayerInfo[playerid][pChave] != 0)
            {
                for(new idx = 0; idx < sizeof(Carro); idx++)
                {
                    if(strcmp(Carro[idx][Dono],PlayerName(playerid),true)==0 || Carro[idx][CarroID] == PlayerInfo[playerid][pChave])
                    {
                        new PrecodoCarroVendido = PrecoCarVenda(playerid,Carro[idx][Modelo])/2;
                        strmid(Carro[idx][Dono], "Ninguem", 0, strlen("Ninguem"), 256);
                        Carro[idx][CarroON] = 0;
                        Carro[idx][Modelo] = 0;
                        Carro[idx][cSpawnX] = 0.000000;
                        Carro[idx][cSpawnY] = 0.000000;
                        Carro[idx][cSpawnZ] = 0.000000;
                        Carro[idx][cAngulo] = 0.000000;
                        Carro[idx][CorUm] = 0;
                        Carro[idx][CorDois] = 0;
                        LimparTunning(idx);
                        DestroyVehicle(Carro[idx][CarroID]);
                        Carro[idx][CarroID] = 0;
                        Carro[idx][cDate] = 0;
                        GivePlayerMoney(playerid, PrecodoCarroVendido);
                        SBizzInfo[24][sbTill] -= PrecodoCarroVendido;
                        for(new i;i<MaiorID;i++) {CheckDonoCarro(i);}
                        SaveCarros();
                        break;
                    }
                }
            }
            else
            {
                return SendClientMessage(playerid, 0xFFA8A8FF, "[BPG Veículo] {FFFFFF}Você não tem um Veículo!");
            }

        }
        else
        {
            return SendClientMessage(playerid, 0xFFA8A8FF, "[BPG Veículo] {FFFFFF} Venda do veículo Cancelada!");
        }
    }
    if(dialogid==148)
    {
        if(response == 1)
        {
            if(listitem==0)
            {
                OnPlayerCommandText(playerid,"/estacionarcarro");
            }
            if(listitem==1)
            {
                OnPlayerCommandText(playerid,"/trancarcarro");
            }
            if(listitem==2)
            {
                ShowPlayerDialog(playerid, 1554, DIALOG_STYLE_INPUT, "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer {FFFFFF} - Pintura", "{55FFAA}Escolha a Nova cor do Seu veículo.\nVocê Deverá escolher a Cor Um e a Cor Dois.\nSeparando-as com EPAÇO Ex: 0 3(Preto - Vermelho)", "Pintar", "Cancelar");
            }
            if(listitem==3)
            {
                if(!IsPlayerInVehicle(playerid, PlayerInfo[playerid][pChave])) return SendClientMessage(playerid, 0x77EEA1FF, "[BPG Veículo] {FFFFFF}Você Precisa estar dentro do seu Veículo para Ligar ou Desligar o Motor!");
                new veh = PlayerInfo[playerid][pChave],engine,farois,alarm,doors,bonnet,boot,objective;
                GetVehicleParamsEx(veh,engine,farois,alarm,doors,bonnet,boot,objective);
                if(Engine[playerid]==0 || engine == 0)
                {
                    SetVehicleParamsEx(veh,VEHICLE_PARAMS_ON,farois,alarm,doors,bonnet,boot,objective);
                    Engine[playerid]=1;
                }
                else if(Engine[playerid]==1 || engine == 1)
                {
                    SetVehicleParamsEx(veh,VEHICLE_PARAMS_OFF,farois,alarm,doors,bonnet,boot,objective);
                    Engine[playerid]=0;
                }
            }
            if(listitem==4)
            {
                if(!IsPlayerInVehicle(playerid, PlayerInfo[playerid][pChave])) return SendClientMessage(playerid, 0x77EEA1FF, "[BPG Veículo] {FFFFFF}Você Precisa estar dentro do seu Veículo para Ligar ou Desligar o Farol!");
                new veh = PlayerInfo[playerid][pChave],engine,farois,alarm,doors,bonnet,boot,objective;
                GetVehicleParamsEx(veh,engine,farois,alarm,doors,bonnet,boot,objective);
                if(Farois[playerid]==0 || farois ==0)
                {
                    SetVehicleParamsEx(veh,engine,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
                    Farois[playerid]=1;
                }
                else if(Farois[playerid]==1 || farois == 1)
                {
                    SetVehicleParamsEx(veh,engine,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
                    Farois[playerid]=0;
                }
            }
            if(listitem==5)
            {
                OnPlayerCommandText(playerid,"/rcomponentes");
            }
            if(listitem==6)
            {
                OnPlayerCommandText(playerid,"/mapacarro");
            }
            if(listitem==7)
            {
                ShowPlayerDialog(playerid, 1356, DIALOG_STYLE_INPUT, "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer {FFFFFF} - Transferência", "{33FF99}Escolha o Novo Dono do Seu veículo.\nColoque Abaixo o ID do Jogador,\nQue você Deseja Transferir o Veículo.\n{80FFFF}OBS: Após Transferido, o Veículo não Pertencerá mais a Você!", "Transferir", "Cancelar");
            }
        }
        else { }
    }
    if(dialogid == 1554)
    {
        if(response == 1)
        {
            format(gstring,sizeof(gstring),"/carrocor %s",inputtext);
            OnPlayerCommandText(playerid,gstring);
        }
    }
    if(dialogid == 1356)
    {
        if(response == 1)
        {
            format(gstring,sizeof(gstring),"/transferircarro %s",inputtext);
            OnPlayerCommandText(playerid,gstring);
        }
        else
        {
            SendClientMessage(playerid, 0xFFA8A8FF, "[BPG Veículo] {FFFFFF}Transferência Cancelada!");
        }
    }
    return 1;
}

//------------------------------------------------------------------------------------------------------

public IsAMember(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==15 || member==6 || member==12 || member==13)
        {
            return 1;
        }
        if(lider==15 || lider==6 || lider==12 || lider==13)
        {
            return 1;
        }
    }
    return 0;
}

public IsACop(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==1 || member==2 || member==3 || member==16 || member==11 || member==28 || member==32 || member==33)
        {
            return 1;
        }
        else if(lider==1 || lider==2 || lider==3 || lider==16 || lider==11 || lider==28 || lider==32 || lider==33)
        {
            return 1;
        }
    }
    return 0;
}
public IsAAssasinos(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==8 || member==24)
        {
            return 1;
        }
        else if(lider==8 || lider==24)
        {
            return 1;
        }
    }
    return 0;
}
public IsAGang(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==5 || member==14 || member==17 || member==18 || member==19 || member==20 || member==21 || member==22 || member==23 || member==26 || member==27 || member==25 || member==30 || member==31 || member==35 || member==36 || member==34 || member==29)
        {
            return 1;
        }
        else if(lider==5 || lider==14 || lider==17 || lider==18 || lider==19 || lider==20  || lider==21 || lider==22 || lider==23 || lider==25 || lider==26 || lider==27 || lider==30 || lider==31 || lider==35 || lider==36 || lider==34 || lider==29)
        {
            return 1;
        }
    }
    return 0;
}
public IsAClub(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==21 || member==22)
        {
            return 1;
        }
        else if(lider==21 || lider==22)
        {
            return 1;
        }
    }
    return 0;
}
public IsAMon(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==22)
        {
            return 1;
        }
        else if(lider==22)
        {
            return 1;
        }
    }
    return 0;
}
forward IsASse(playerid);
public IsASse(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==32 || member==32)
        {
      return 1;
        }
        else if(lider==32 || lider==32)
        {
      return 1;
        }
    }
    return 0;
}
public IsASons(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==23)
        {
            return 1;
        }
        else if(lider==23)
        {
            return 1;
        }
    }
    return 0;
}
public IsAHell(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==21)
        {
            return 1;
        }
        else if(lider==21)
        {
            return 1;
        }
    }
    return 0;
}

public IsAtClothShop(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(PlayerToPoint(25.0,playerid,207.5627,-103.7291,1005.2578) || PlayerToPoint(25.0,playerid,203.9068,-41.0728,1001.8047))
        {//Binco & Suburban
            return 1;
        }
        else if(PlayerToPoint(30.0,playerid,214.4470,-7.6471,1001.2109) || PlayerToPoint(50.0,playerid,161.3765,-83.8416,1001.8047) || PlayerToPoint(50.0,playerid,162.6288,-86.3102,1001.8047))
        {//Zip & Victim
            return 1;
        }
    }
    return 0;
}

public IsAtGasStation(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(PlayerToPoint(15.0,playerid,1941.9850,-1774.6639,19.7006))
        {
            if(IsAPlane(GetPlayerVehicleID(playerid)))
            {
                return 1;
            }
        }
        if(PlayerToPoint(6.0,playerid,1004.0070,-939.3102,42.1797) || PlayerToPoint(6.0,playerid,1944.3260,-1772.9254,13.3906) || PlayerToPoint(6.0,playerid,1400.6882,-1680.5344,42.4339) || PlayerToPoint(6.0,playerid,1496.5316,-1544.0677,23.5481) || PlayerToPoint(6.0,playerid,2737.3364,-1774.2123,43.7973) || PlayerToPoint(6.0,playerid,2756.12,-2386.98,13.21))
        {//LS
            return 1;
        }
        else if(PlayerToPoint(6.0,playerid,-1609.7958,-2718.2048,48.5391))
        {//LS
            return 1;
        }
        else if(PlayerToPoint(6.0,playerid,-2029.4968,156.4366,28.9498) || PlayerToPoint(8.0,playerid,-2408.7590,976.0934,45.4175))
        {//SF
            return 1;
        }
        else if(PlayerToPoint(6.0,playerid,1380.4712,462.7467,20.1107) || PlayerToPoint(8.0,playerid,1385.0475,460.5417,20.1068))
        {//PC
            return 1;
        }
        else if(PlayerToPoint(6.0,playerid,1383.5532,457.1286,19.9561) || PlayerToPoint(8.0,playerid,1379.1952,459.1295,19.9587))
        {//PC
            return 1;
        }
        else if(PlayerToPoint(5.0,playerid,-2243.9629,-2560.6477,31.8841) || PlayerToPoint(8.0,playerid,-1676.6323,414.0262,6.9484))
        {//Between LS and SF
            return 1;
        }
        else if(PlayerToPoint(6.0,playerid,2202.2349,2474.3494,10.5258) || PlayerToPoint(10.0,playerid,614.9333,1689.7418,6.6968))
        {//LV
            return 1;
        }
        else if(PlayerToPoint(8.0,playerid,-1328.8250,2677.2173,49.7665) || PlayerToPoint(6.0,playerid,70.3882,1218.6783,18.5165))
        {//LV
            return 1;
        }
        else if(PlayerToPoint(8.0,playerid,2113.7390,920.1079,10.5255) || PlayerToPoint(6.0,playerid,-1327.7218,2678.8723,50.0625))
        {//LV
            return 1;
        }
    }
    return 0;
}
public IsAtGasStationgang(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(PlayerToPoint(15.0,playerid,-91.4212,-1169.1992,2.4298))
        {// posto abandoado
            return 1;
        }
    }
    return 0;
}
public IsAtFishPlace(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(PlayerToPoint(1.0,playerid,403.8266,-2088.7598,7.8359) || PlayerToPoint(1.0,playerid,398.7553,-2088.7490,7.8359))
        {//Fishplace at the bigwheel
            return 1;
        }
        else if(PlayerToPoint(1.0,playerid,396.2197,-2088.6692,7.8359) || PlayerToPoint(1.0,playerid,391.1094,-2088.7976,7.8359))
        {//Fishplace at the bigwheel
            return 1;
        }
        else if(PlayerToPoint(1.0,playerid,383.4157,-2088.7849,7.8359) || PlayerToPoint(1.0,playerid,374.9598,-2088.7979,7.8359))
        {//Fishplace at the bigwheel
            return 1;
        }
        else if(PlayerToPoint(1.0,playerid,369.8107,-2088.7927,7.8359) || PlayerToPoint(1.0,playerid,367.3637,-2088.7925,7.8359))
        {//Fishplace at the bigwheel
            return 1;
        }
        else if(PlayerToPoint(1.0,playerid,362.2244,-2088.7981,7.8359) || PlayerToPoint(1.0,playerid,354.5382,-2088.7979,7.8359))
        {//Fishplace at the bigwheel
            return 1;
        }
        else if(PlayerToPoint(1.0,playerid,1990.4675,-1183.3180,20.5116) || PlayerToPoint(1.0,playerid,1991.7828,-1183.4724,20.5116) || PlayerToPoint(1.0,playerid,1949.8274,-1215.4484,20.5019) || PlayerToPoint(1.0,playerid,1948.1309,-1215.2512,20.5019))
        {//Parque Gleen
            return 1;
        }
    }
    return 0;
}

public IsAtCookPlace(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(PlayerToPoint(3.0,playerid,369.9786,-4.0798,1001.8589))
        {//Cluckin Bell
            return 1;
        }
        else if(PlayerToPoint(3.0,playerid,376.4466,-60.9574,1001.5078) || PlayerToPoint(3.0,playerid,378.1215,-57.4928,1001.5078) || PlayerToPoint(4.0,playerid,681.5817,-456.0235,-25.6099))
        {//Burgershot
            return 1;
        }
        else if(PlayerToPoint(3.0,playerid,374.1185,-113.6361,1001.4922) || PlayerToPoint(3.0,playerid,377.7971,-113.7668,1001.4922))
        {//Well Stacked Pizza
            return 1;
        }
    }
    return 0;
}
public IsAtBar(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(PlayerToPoint(4.0,playerid,495.7801,-76.0305,998.7578) || PlayerToPoint(4.0,playerid,499.9654,-20.2515,1000.6797) || PlayerToPoint(4.0,playerid,1551.4578,-1717.0885,13.5469) || PlayerToPoint(4.0,playerid,1254.0154,-792.7376,1084.2344) || PlayerToPoint(15.0,playerid,942.4760,4.9500,1000.9297))
        {//In grove street bar (with girlfriend), and in Havanna
            return 1;
        }
        else if(PlayerToPoint(4.0,playerid,1215.9480,-13.3519,1000.9219) || PlayerToPoint(10.0,playerid,-2658.9749,1407.4136,906.2734) || PlayerToPoint(10.0,playerid,378.5476,-189.0421,1000.6328) || PlayerToPoint(10.0,playerid,968.8497,-46.3663,1001.1172) || PlayerToPoint(6.0,playerid,2372.4138,-1133.9048,1050.8750))
        {//PIG Pen
            return 1;
        }
        else if(PlayerToPoint(2.0,playerid,1511.2272,-1711.9803,14.0469) || PlayerToPoint(2.0,playerid,1511.2172,-1714.7565,14.0469) || PlayerToPoint(10.0,playerid,239.0100,-2241.8064,1.9766))
        {
            return 1;
        }
    }
    return 0;
}
public IsABoat(carid)
{
    new oo = GetVehicleModel(carid);
    if(oo == 430 || oo == 452 || oo == 453 || oo == 454 || oo == 472 || oo == 473 || oo == 484 || oo == 493 || oo == 595)
    {
        return 1;
    }
    return 0;
}

public IsAPlane(carid)
{
    new oo = GetVehicleModel(carid);
    if(oo == 487 || oo == 520 || oo == 417 || oo == 425 || oo == 447 || oo == 460 || oo == 464 || oo == 465 || oo == 469 || oo == 476 || oo == 488 || oo == 497
    || oo == 501 || oo == 511  || oo == 512 || oo == 513 || oo == 519 || oo == 548 || oo == 553 || oo == 563 || oo == 577 || oo == 592 || oo == 593)
    {
        return 1;
    }
    return 0;
}

public IsACopCar(carid)//copcarroo
{
    for(new i=0;i<sizeof(CopCarros);i++)
    {
        if(carid == CopCarros[i])
        {
            SetVehicleNumberPlate(carid, "BPG Cop");
            return 1;
        }
    }
    return 0;
}

public IsAEnforcerCar(carid) // Enforcers
{
    if(GetVehicleModel(carid) == 428 || GetVehicleModel(carid) == 247 || GetVehicleModel(carid) == 427)
    {
        return 1;
    }
    return 0;
}
public IsABlindadoCar(carid) // Enforcers
{
    if(GetVehicleModel(carid) == 528)
    {
        return 1;
    }
    return 0;
}
public IsACaminhaozinhoCar(carid) // Trocar e Pegar Materiais
{
    if(GetVehicleModel(carid) == 498)
    {
        return 1;
    }
    return 0;
}
public IsAAmbu(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==4 || member==4)
        {
            return 1;
        }
        else if(lider==4 || lider==4)
        {
            return 1;
        }
    }
    return 0;
}
public IsAnAmbulanceCar(carid)
{
    for(new i=0;i<sizeof(MedicosCar);i++)
    {
        if(carid == MedicosCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG Gov");
            return 1;
        }
    }
    return 0;
}

public IsAGatev(carid)
{
    if((carid == 189) || (carid == 190) || (carid == 188) || (carid == 187))
    {
        return 1;
    }
    return 0;
}

//------------------------------------------------------------------------------------------------------
public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
    new str[ 128 ];
    if( hittype == 1 || hittype == 2 ){
        if(weaponid != 38)
        {
            if((gettime() - shotTime[playerid]) < 1)
            {
                shot[playerid]+=1;
            }
            else
            {
                shot[playerid]=0;
            }
            if(shot[playerid] > 12)
            {
                Warnning[ playerid ] ++;
                shot[ playerid ] = 0;
                format( str, sizeof str, "O player %s recebeu um warnning por suspeita de rapid fire ( %d/3 ).",PlayerName( playerid ), Warnning[ playerid ] );
                ABroadCast( COLOR_LIGHTRED, str, 1 );

                if( Warnning[ playerid ] >= 3 ){
                    format( str, sizeof str, "AdmAviso: O player %s foi kickado por suspeita de: Rapid Fire", PlayerName( playerid ) );
                    SendClientMessageToAll( COLOR_LIGHTRED, str );
                    shot[ playerid ] = 0;
                    Warnning[ playerid ] = 0;
                    Kick(playerid);
                }
            }
            shotTime[playerid] = gettime();
        }
    }
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && weaponid == 24){

        fAutoC[playerid] ++;

        if(gettime() > GetPVarInt(playerid, "UmSegundo")){

            SetPVarInt(playerid, "UmSegundo", gettime() + 1);
            fAutoC[playerid] = 0;

        }else{
            if(fAutoC[playerid] > 2){
                Warnning[ playerid ] ++;
                format( str, sizeof str, "O player %s recebeu um warnning por suspeita de: Auto Cbug( %d/3 ).",PlayerName( playerid ), Warnning[ playerid ] );
                ABroadCast( COLOR_LIGHTRED, str, 1 );
                fAutoC[playerid] = 0;
                if( Warnning[ playerid ] >= 3 ){
                    format( str, sizeof str, "AdmAviso: O player %s foi kickado por suspeita de: Auto Cbug", PlayerName( playerid ) );
                    SendClientMessageToAll( COLOR_LIGHTRED, str );
                    fAutoC[playerid] = 0;
                    Warnning[ playerid ] = 0;
                    Kick(playerid);
                }
            }
        }
    }
    return 1;
}
public OnPlayerConnect(playerid)
{
    PlayAudioStreamForPlayer(playerid,"https://dl.dropboxusercontent.com/s/yurd2d2tmumrpym/Bullet%20Train.mp3");
    new aa = random(13)+1;
    new str[56];
    format(str,sizeof str,"",aa,aa);
    TextDrawSetString(ImagemEntrada,str);
    TextDrawShowForPlayer( playerid, ImagemEntrada );
    if(BanXiterOn == true)
    {
        if(PlayerSerialBanido(playerid))
        {
            Ban(playerid);
        }
    }
    if(TendoGuerra ==1)
    {
        PiscarGuerra();
    }
    taserlog[ playerid ] = true;
    tomoutiro[ playerid ] = 999;
    tempotiro[ playerid ] = 0;
    armatiro[ playerid ] = 0;
    temphitman[ playerid ] = 0;
    tirohitman[ playerid ] = 9999;
    tirotime[ playerid ] = 0;
    tima[playerid] = SetTimerEx("Faus",750,1,"d",playerid);
    ____[playerid] = TextDrawCreate(485.000000, 360.000000,"-");
    TextDrawAlignment(____[playerid],0);
    TextDrawBackgroundColor(____[playerid],0x000000ff);
    TextDrawFont(____[playerid],2);
    TextDrawLetterSize(____[playerid],0.3,1.100000);
    TextDrawColor(____[playerid],0xffffffff);
    TextDrawSetOutline(____[playerid],1);
    TextDrawSetProportional(____[playerid],1);
    TextDrawSetShadow(____[playerid],1);
    shotTime[playerid] = 0;
    shot[playerid] = 0;
    pref[ playerid ] = false;
    Warnning[ playerid ] = 0;
    //PlayAudioStreamForPlayer(playerid, "http://dl.dropboxusercontent.com/s/zszuz5mh22nnpad/GTA%20San%20Andreas%20Theme%20Song%20Remix%20%28CJ%20Singing%21%21%29.mp3?dl=1&token_hash=AAEIBGIOxu9caSnYkCv77-YJlRiD65LaOerRc8Fg5w_l6A");
    ContarJogadores();
    PlayerInfo[playerid][pMV] = 0;
    PlayerInfo[playerid][pGold] = 0;
    LocalizarTime[playerid] = 0;
    ConfigurandoCar[playerid] = 0;
    casaid[playerid] = 99999;
    LocalizarAccepted[playerid] = 999;
    tipodovipcomprado[playerid] = 0;
    Espiando[ playerid ] = -1;
    CheckBanTemp( playerid );
    chatLider[ playerid ] = true;
    if(IsPlayerNPC(playerid))
    {
        Hospital[playerid] = 1;
        SpawnPlayer(playerid);
        new nome[24];
        GetPlayerName(playerid, nome, 24);
        format(str, sizeof str, "%s - Arara", nome);
        if(dini_Isset("Araras.ini", str))
        {
            Infoa[playerid][Arara] = bool:dini_Bool("Araras.ini", str);
            format(str, sizeof str, "%s - Racao", nome);
            Infoa[playerid][Racao] = bool:dini_Bool("Araras.ini", str);
            format(str, sizeof str, "%s - Grande", nome);
            Infoa[playerid][Grande] = dini_Int("Araras.ini", str);
            if(Infoa[playerid][Arara])
            {
                Infoa[playerid][Tempo] = SetTimerEx("Crescimento", 300000, true, "i", playerid);
                SendClientMessage(playerid, 0xFFFF00FF, "Alimente sua arara ou ela morrerá.");
            }
        }
        return 1;
    }
    if(!IsPlayerNPC(playerid)) pObject[playerid][slotreserved] = false;
//===============================[INICIO DO GET IP]=============================//
    IPlog(playerid);
    MorroShowForPlayer(playerid);
    if(Morro[Guerra] >= 1)
    {
        MorroFlashForPlayer(playerid);
    }

 //============================= text betao ===================================
    TDxiter4[playerid] = CreatePlayerTextDraw(playerid, 317.000000, 212.187500, "Sobeitao");
    PlayerTextDrawLetterSize(playerid, TDxiter4[playerid], 0.295000, 1.074999);
    PlayerTextDrawAlignment(playerid, TDxiter4[playerid], 2);
    PlayerTextDrawColor(playerid, TDxiter4[playerid], -1);
    PlayerTextDrawSetShadow(playerid, TDxiter4[playerid], 0);
    PlayerTextDrawSetOutline(playerid, TDxiter4[playerid], 1);
    PlayerTextDrawBackgroundColor(playerid, TDxiter4[playerid], 255);
    PlayerTextDrawFont(playerid, TDxiter4[playerid], 1);
    PlayerTextDrawSetProportional(playerid, TDxiter4[playerid], 1);
//===============================[FIM DO GET IP]================================//
    if(strfind(PlayerName(playerid), "_", true) == -1 || strfind(PlayerName(playerid), "[", true) != -1 || strfind(PlayerName(playerid), "]", true) != -1 || strfind(PlayerName(playerid), "lixo", true) != -1 || strfind(PlayerName(playerid), "buceta", true) != -1 || strfind(PlayerName(playerid), "caralho", true) != -1 || strfind(PlayerName(playerid), "[", true) != -1 || strfind(PlayerName(playerid), "server", true) != -1
    || strfind(PlayerName(playerid), "servidor", true) != -1 || strfind(PlayerName(playerid), "crash", true) != -1 || strfind(PlayerName(playerid), "bpl", true) != -1 || strfind(PlayerName(playerid), "gamerx", true) != -1 || strfind(PlayerName(playerid), "[", true) != -1 || strfind(PlayerName(playerid), "189", true) != -1 || strfind(PlayerName(playerid), "201", true) != -1 || strfind(PlayerName(playerid), "200", true) != -1 || strfind(PlayerName(playerid), ".", true) != -1
    || strfind(PlayerName(playerid), "*", true) != -1 || strfind(PlayerName(playerid), "(", true) != -1 || strfind(PlayerName(playerid), ")", true) != -1 || strfind(PlayerName(playerid), "@", true) != -1 || strfind(PlayerName(playerid), "amx", true) != -1 || strfind(PlayerName(playerid), "prn", true) != -1 || strfind(PlayerName(playerid), "__", true) != -1)
    {
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você Foi Kickado por usar algum nome incorreto!");
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Seu nome deve ser no formato Nome_Sobrenome Ex: Vini_Silva");
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Troque-o e volte, Obrigado.");
        format(gstring,64,OpenAccPlayer,PlayerName(playerid));
        Kick(playerid);
        dini_Remove(gstring);
        return 1;
    }
    for(new i; i<sizeof(NicksProibidos); i++)
    {
        if(strcmp(NicksProibidos[i],PlayerName(playerid),true)==0)
        {
            SendClientMessage(playerid,CORS,"Você está usando um nome que é proibido no PlayGamer!");
            SendClientMessage(playerid,CORS,"Você foi banido!");
            getdate(Ano, Mes, Dia);
            SBan(playerid, "Pego Usando um nome que é proibido no PlayGamer", "Automático");
        }
    }
    //above hp textdraw
    SetPlayerPos(playerid,1415.4329,-806.9493,85.0470);
    //=========================================
    gActivePlayers[playerid]++;
    strmid(Infovinny[playerid][pMotivo], "Nenhum", 0, strlen("Nenhum"), 256);
    strmid(Infovinny[playerid][pAdmBan], "Nenhum", 0, strlen("Nenhum"), 256);
    strmid(Infovinny[playerid][pData], "0/0/0", 0, strlen("0/0/0"), 256);
    strmid(Infovinny[playerid][pHora], "0:0:0", 0, strlen("0:0:0"), 256);
    //pban[playerid] = 0;
    Reduzido[playerid] = 0; // pedagio
    var1[playerid] = 0;
    votou[playerid] = true;
    VagaLimpar[playerid] = 99;
    TruckMission[playerid] = 0;
//  emguerra[playerid] = 0;
    storeexit[playerid] = 0;
    away[playerid] = 0;
    pCofreOrg[playerid] = 0;
    InviteOffer[playerid] = 999;
    InviteJob[playerid] = 0;
    mudandonick[playerid] = 0;
    PFimes[playerid] = 0;
    gPlayerTerminal[playerid] = 0;
    meavaliehelper[playerid] = 0;
    HideIR[playerid] = 0;
    Refueling[playerid] = 0;
    GasETanto[playerid] = 0;
    GranaGas[playerid] = 0;
    PlayerInfo[playerid][pMuted] = 0;
    PlayerInfo[playerid][pVotou] = 0;
    PlayerInfo[playerid][pTimeBlock] = 0;
    PlayerInfo[playerid][pWorkFree] = 0;
    BlockAccount[ playerid ] = false;
   // ZerarContagem(playerid);
    PlayerInfo[playerid][pOnline] = 0;
    PlayerInfo[playerid][pChave] = 0;
    Engine[playerid]=0;
    Farois[playerid]=0;
    SelectChar[playerid] = 0;  HidePM[playerid] = 0; PhoneOnline[playerid] = 0; OfAssalto[playerid] = 999; precoassalto[playerid] = 0;
    SelectCharID[playerid] = 0; SelectCharPlace[playerid] = 0; ChosenSkin[playerid] = 0; SemBombas[playerid] = 0;
    GettingEmprego[playerid] = 0; GuardOffer[playerid] = 999; GuardPrice[playerid] = 0;
    ApprovedAdvogado[playerid] = 0;
    CurrentMoney[playerid] = 0; UsedFind[playerid] = 0;
    CP[playerid] = 0; Robbed[playerid] = 0; PlayerInfo[playerid][pSpawn] = 0;
    CarOffer[playerid] = 999; CarPrice[playerid] = 0; CarID[playerid] = 0; CarCalls[playerid] = 0;
    RobbedTime[playerid] = 0; MoneyMessage[playerid] = 0; Condom[playerid] = 0;
    SexOffer[playerid] = 999; SexPrice[playerid] = 0; MendigoOffer[playerid] = 999; MendigoPrice[playerid] = 0;
    RepairOffer[playerid] = 999; RepairPrice[playerid] = 0; RepairCar[playerid] = 0;
    TalkingLive[playerid] = 9999; LiveOffer[playerid] = 999;
    RefillOffer[playerid] = 999; RefillPrice[playerid] = 0; MapIconsShown[playerid] = 0;
    DrugOffer[playerid] = 999; PlayerCuffed[playerid] = 0; PlayerCuffedTime[playerid] = 0;
    DrugPrice[playerid] = 0; RegistrationStep[playerid] = 0;
    DrugGram[playerid] = 0; ConnectedToPC[playerid] = 0; OrderReady[playerid] = 0;
    JailPrice[playerid] = 0; Hospital[playerid] = 1; GotHit[playerid] = 0;
    WantedPoints[playerid] = 0; SetPlayerWantedLevel(playerid, 0); GoChase[playerid] = 999; GetChased[playerid] = 999; PlacedNews[playerid] = 0;
    OnDuty[playerid] = 0; TestFishes[playerid] = 0;
    BoxWaitTime[playerid] = 0; ChangePos2[playerid][1] = 0;
    SafeTime[playerid] = 60; TransportDuty[playerid] = 0; PlayerTied[playerid] = 0;
    BusCallTime[playerid] = 0; CopsrondaCallTime[playerid] = 0; TaxiCallTime[playerid] = 0; MedicCallTime[playerid] = 0; MechanicCallTime[playerid] = 0;
    BusrouteEast[playerid][0] = 0; BusrouteWest[playerid][0] = 0; BusShowLocation[playerid][0] = 0; BusShowLocationC[playerid] = 0;
    FindTimePoints[playerid] = 0; FindTime[playerid] = 0; EmpregoDuty[playerid] = 0; EmRondaCop[playerid] = 0;
    Mobile[playerid] = 9999; Music[playerid] = 0; BoxOffer[playerid] = 999; PlayerBoxing[playerid] = 0;
    PlayerDrunk[playerid] = 0; PlayerDrunkTime[playerid] = 0;
    FishCornt[playerid] = 0; ConsumingMoney[playerid] = 0;
    gLastCar[playerid] = 0; HideAdm[playerid] = 0;
    /*gNews[playerid] = 0;*/ BigEar[playerid] = 0; gDice[playerid] = 0; gFam[playerid] = 0;
    gPlayerLogged[playerid] = 0; gPlayerLogTries[playerid] = 0; gPlayerConta[playerid] = 0;
    gPlayerSpawned[playerid] = 0;
    PlayerTazeTime[playerid] = 0; PlayerStoned[playerid] = 0;
    TicketOffer[playerid] = 999; TicketMoney[playerid] = 0;
    MatsHolding[playerid] = 0;
    gPlayerMission[playerid] = 0; TaxiAccepted[playerid] = 999; BusAccepted[playerid] = 999; MedicAccepted[playerid] = 999; MechanicAccepted[playerid] = 999; CopsrondaAccepted[playerid] = 999;
    PlayerInfo[playerid][pCash] = 1000; NoFuel[playerid] = 0;
    HireCar[playerid] = 0;
    TransportValue[playerid] = 0; TransportMoney[playerid] = 0; TransportTime[playerid] = 0; TransportCost[playerid] = 0; TransportDriver[playerid] = 999;
    Locator[playerid] = 0; ConviteFamy[playerid] = 0;
    WatchingTV[playerid] = 0; PlayerPaintballing[playerid] = 0; PlayerPaintballKills[playerid] = 0;
    Fishes[playerid][pLastFish] = 0; Fishes[playerid][pFishID] = 0;
    ProposeOffer[playerid] = 999; MarryWitness[playerid] = 999; MarryWitnessOffer[playerid] = 999; MarriageCeremoney[playerid] = 0; ProposedTo[playerid] = 999; GotProposedBy[playerid] = 999; DivorceOffer[playerid] = 999;
    GivePlayerMoney(playerid,PlayerInfo[playerid][pCash]);
    Infovinny[playerid][NumSenha] = 999;
    AdvogPreco[playerid] = 0;
    ConviteAdv[playerid] = 999;
    ServerOwner[playerid] = 0;
    RelatoEntregue[playerid] = 0;
    BaniuPlayer[playerid] = 0;
    PediuServico[playerid] = 0;
    MudarNickAceito[playerid] = 0;
    MudarSenhaAceito[playerid] = 0;
    antifakekill[playerid] = 0;
    Sequestrado[playerid] = 0;
    XiterCrashando[playerid] = 0;
    InAFoodPlace[playerid] = 0;
    MiraInfo[playerid] = 0;
    OnEquipado[playerid] = 0;
    OnMafiaEquipado[playerid] = 0;
    vinnyInfo[playerid][PLojaA1] = 0;
    vinnyInfo[playerid][PLojaA2] = 0;
    vinnyInfo[playerid][PpLoja247] = 0;
    vinnyInfo[playerid][PpLoja2472] = 0;
    PlayerInfo[playerid][pLevel] = 0;
    PlayerInfo[playerid][pCone] = 0;
    PlayerInfo[playerid][pAdmin] = 0;
    PlayerInfo[playerid][pHelper] = 0;
    IDpassouArma[playerid] = 9999;
    PlayerInfo[playerid][pVip] = 0;
    PlayerInfo[playerid][gPupgrade] = 0;
    PlayerInfo[playerid][pConnectTime] = 0;
    PlayerInfo[playerid][pReg] = 0;
    PlayerInfo[playerid][pSex] = 0;
    PlayerInfo[playerid][pAge] = 0;
    PlayerInfo[playerid][pExp] = 0;
    PlayerInfo[playerid][pConta] = 0;
    PlayerInfo[playerid][pCrimes] = 0;
    PlayerInfo[playerid][pDeaths] = 0;
    PlayerInfo[playerid][pPhoneBook] = 0;
    PlayerInfo[playerid][pLottoNr] = 0;
    PlayerInfo[playerid][pFishes] = 0;
    PlayerInfo[playerid][pBiggestFish] = 0;
    PlayerInfo[playerid][pEmprego] = 0;
    PlayerInfo[playerid][pSalario] = 0;
    PlayerInfo[playerid][pHeadValue] = 0;
    PlayerInfo[playerid][pJailed] = 0;
    PlayerInfo[playerid][pAjustado] = 0;
    PlayerInfo[playerid][pJailTime] = 0;
    PlayerInfo[playerid][pMats] = 0;
    PlayerInfo[playerid][pDorgado] = 0;
    PlayerInfo[playerid][pDorgado2] = 0;
    PlayerInfo[playerid][pDoenca] = 0;
    PlayerInfo[playerid][pDrogas] = 0;
    PlayerInfo[playerid][pDrogas2] = 0;
    PlayerInfo[playerid][pDrogas3] = 0;
    PlayerInfo[playerid][pSafeDrogas] = 0;
    PlayerInfo[playerid][pSafeDrogas2] = 0;
    PlayerInfo[playerid][pSafeDrogas3] = 0;
    PlayerInfo[playerid][pLider] = 0;
    PlayerInfo[playerid][pMembro] = 0;
    PlayerInfo[playerid][pFamyLider] = 0;
    PlayerInfo[playerid][pFamyMember] = 0;
    PlayerInfo[playerid][pCargo] = 0;
    PlayerInfo[playerid][pContractTime] = 0;
    PlayerInfo[playerid][pDetSkill] = 0;
    PlayerInfo[playerid][pSexSkill] = 0;
    PlayerInfo[playerid][pBoxSkill] = 0;
    PlayerInfo[playerid][pLawSkill] = 0;
    PlayerInfo[playerid][pMechSkill] = 0;
    PlayerInfo[playerid][pNewsSkill] = 0;
    PlayerInfo[playerid][pDrogasSkill] = 0;
    PlayerInfo[playerid][pCookSkill] = 0;
    PlayerInfo[playerid][pFishSkill] = 0;
    PlayerInfo[playerid][pSHealth] = 0.0;
    PlayerInfo[playerid][pInt] = 0;
    PlayerInfo[playerid][pLocal] = 9999;
    PlayerInfo[playerid][pTeam] = 3;
    PlayerInfo[playerid][pSkin] = 23;
    admtrampando[playerid] = 0;
    helptrampando[playerid] = 0;
    IsXiter[playerid] = 0;
    new randphone = 1000 + random(9999);//minimum 1000  max 9999 //giving one at the start
    PlayerInfo[playerid][pPnumber] = randphone;
    PlayerInfo[playerid][pPHousekey] = 9999;
    PlayerInfo[playerid][pPbiskey] = 9999;
    PlayerInfo[playerid][pCarLic] = 0;
    PlayerInfo[playerid][pFlyLic] = 0;
    PlayerInfo[playerid][pBoatLic] = 0;
    PlayerInfo[playerid][pFishLic] = 0;
    PlayerInfo[playerid][pGunLic] = 0;
    PlayerInfo[playerid][pPayDay] = 0;
    PlayerInfo[playerid][pCDPlayer] = 0;
    PlayerInfo[playerid][pWins] = 0;
    PlayerInfo[playerid][pLoses] = 0;
    PlayerInfo[playerid][pAlcoholPerk] = 0;
    PlayerInfo[playerid][pDrugPerk] = 0;
    PlayerInfo[playerid][pMiserPerk] = 0;
    PlayerInfo[playerid][pPainPerk] = 0;
    PlayerInfo[playerid][pTraderPerk] = 0;
    PlayerInfo[playerid][pTut] = 0;
    PlayerInfo[playerid][pWarns] = 0;
    pRoadblock[playerid] = 0;
    PlayerInfo[playerid][pParedao] = 0;
    pRoadBloq[playerid] = 0;
    SpikeInfo[playerid][sCreated] = 0;
    PlayerInfo[playerid][pRequestingBackup] = 0;
    PlayerInfo[playerid][pMask] = 0;
    PlayerInfo[playerid][pMaskuse] = 0;
    PlayerInfo[playerid][pBarraca] = 0;
    PlayerInfo[playerid][pLuta] = 0;
    CurarAtivo[playerid] = 999;
    CurarPreco[playerid] = 0;
    PlayerInfo[playerid][pLastDia] = 0;
    PlayerInfo[playerid][pLastMes] = 0;
    PlayerInfo[playerid][pLastAno] = 1012;
    PlayerInfo[playerid][pLastHora] = 0;
    PlayerInfo[playerid][pLastMinuto] = 0;
    PlayerInfo[playerid][pLastSegundo] = 0;
    SetPVarInt(playerid, "PlayerMorto", 0);
    ClearCrime(playerid);
    ClearFishes(playerid);
    ClearCooking(playerid);
    ClearGroceries(playerid);
    ClearMarriage(playerid);
    strmid(StrPasswrd[playerid], "PlayGamerOwna", 0, strlen("PlayGamerOwna"), 255);
    SetPlayerColor(playerid,COLOR_GRAD2);
    TextShow[playerid] = false;
    HouseEntered[playerid] = 9999;
    RemoverObjetos(playerid);
    new string2[64];
    format(string2, sizeof(string2), OpenAccPlayer, PlayerName(playerid));
    SendClientMessage(playerid, 0x1E90FFAA, "[BPG]{FFFFFF} Carregando... aguarde alguns segundos!");
    //mapaicone
    if(dini_Exists(string2))
    {
        gPlayerConta[playerid] = 1;
    }
    else
    {
        gPlayerConta[playerid] = 0;
    }
    new connecting_ip[32+1];
    GetPlayerIp(playerid,connecting_ip,32);
    new num_players_on_ip = GetNumberOfPlayersOnThisIP(connecting_ip);
    if(num_players_on_ip > MAX_IPSCONNECT)
    {
        GetPlayerName(playerid, sendername, sizeof(sendername));
        printf("MAXIPs: Player ID(%d) Limite IP: %d, IP %s Banido!", playerid, MAX_IPSCONNECT, connecting_ip);
        format(gstring, sizeof(gstring), "AntiAttack:%s[ID: %d] Foi acusado ser ser Um BotAttack e Foi banido!",sendername,playerid);
        ABroadCast(COLOR_LIGHTRED,gstring,1);
        Ban(playerid);
        return 1;
    }
    for(new i = 0; i < sizeof(Carro); i++)
    {
        if(Carro[i][CarroON] == 1)
        {
            OnVehicleStreamIn(i, playerid);
        }
    }
    return 1;
}
public ClearMarriage(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        strmid(PlayerInfo[playerid][pMarriedTo], "Ninguem", 0, strlen("Ninguem"), 255);
        PlayerInfo[playerid][pMarried] = 0;
    }
    return 1;
}
public ClearCrime(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new string[MAX_PLAYER_NAME];
        format(string, sizeof(string), "********");
        strmid(PlayerCrime[playerid][pBplayer], string, 0, strlen(string), 255);
        strmid(PlayerCrime[playerid][pVictim], string, 0, strlen(string), 255);
        strmid(PlayerCrime[playerid][pAccusing], string, 0, strlen(string), 255);
        strmid(PlayerCrime[playerid][pAccusedof], string, 0, strlen(string), 255);
    }
    return 1;
}

public FishCost(playerid, fish)
{
    if(IsPlayerConnected(playerid))
    {
        new cost = 0;
        switch (fish)
        {
            case 1:
            {
                cost = 1;
            }
            case 2:
            {
                cost = 3;
            }
            case 3:
            {
                cost = 3;
            }
            case 5:
            {
                cost = 5;
            }
            case 6:
            {
                cost = 2;
            }
            case 8:
            {
                cost = 8;
            }
            case 9:
            {
                cost = 12;
            }
            case 11:
            {
                cost = 9;
            }
            case 12:
            {
                cost = 7;
            }
            case 14:
            {
                cost = 12;
            }
            case 15:
            {
                cost = 9;
            }
            case 16:
            {
                cost = 7;
            }
            case 17:
            {
                cost = 7;
            }
            case 18:
            {
                cost = 10;
            }
            case 19:
            {
                cost = 4;
            }
            case 21:
            {
                cost = 3;
            }
        }
        return cost;
    }
    return 0;
}

public ClearFishes(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        Fishes[playerid][pFid1] = 0; Fishes[playerid][pFid2] = 0; Fishes[playerid][pFid3] = 0;
        Fishes[playerid][pFid4] = 0; Fishes[playerid][pFid5] = 0;
        Fishes[playerid][pWeight1] = 0; Fishes[playerid][pWeight2] = 0; Fishes[playerid][pWeight3] = 0;
        Fishes[playerid][pWeight4] = 0; Fishes[playerid][pWeight5] = 0;
        new string[MAX_PLAYER_NAME];
        format(string, sizeof(string), "Nenhum");
        strmid(Fishes[playerid][pFish1], string, 0, strlen(string), 255);
        strmid(Fishes[playerid][pFish2], string, 0, strlen(string), 255);
        strmid(Fishes[playerid][pFish3], string, 0, strlen(string), 255);
        strmid(Fishes[playerid][pFish4], string, 0, strlen(string), 255);
        strmid(Fishes[playerid][pFish5], string, 0, strlen(string), 255);
    }
    return 1;
}

public ClearFishID(playerid, fish)
{
    if(IsPlayerConnected(playerid))
    {
        new string[MAX_PLAYER_NAME];
        format(string, sizeof(string), "Nenhum");
        switch (fish)
        {
            case 1:
            {
                strmid(Fishes[playerid][pFish1], string, 0, strlen(string), 255);
                Fishes[playerid][pWeight1] = 0;
                Fishes[playerid][pFid1] = 0;
            }
            case 2:
            {
                strmid(Fishes[playerid][pFish2], string, 0, strlen(string), 255);
                Fishes[playerid][pWeight2] = 0;
                Fishes[playerid][pFid2] = 0;
            }
            case 3:
            {
                strmid(Fishes[playerid][pFish3], string, 0, strlen(string), 255);
                Fishes[playerid][pWeight3] = 0;
                Fishes[playerid][pFid3] = 0;
            }
            case 4:
            {
                strmid(Fishes[playerid][pFish4], string, 0, strlen(string), 255);
                Fishes[playerid][pWeight4] = 0;
                Fishes[playerid][pFid4] = 0;
            }
            case 5:
            {
                strmid(Fishes[playerid][pFish5], string, 0, strlen(string), 255);
                Fishes[playerid][pWeight5] = 0;
                Fishes[playerid][pFid5] = 0;
            }
        }
    }
    return 1;
}

public ClearCooking(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        Cooking[playerid][pCookID1] = 0; Cooking[playerid][pCookID2] = 0; Cooking[playerid][pCookID3] = 0;
        Cooking[playerid][pCookID4] = 0; Cooking[playerid][pCookID5] = 0;
        Cooking[playerid][pCWeight1] = 0; Cooking[playerid][pCWeight2] = 0; Cooking[playerid][pCWeight3] = 0;
        Cooking[playerid][pCWeight4] = 0; Cooking[playerid][pCWeight5] = 0;
        new string[MAX_PLAYER_NAME];
        format(string, sizeof(string), "Nenhum");
        strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
        strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
        strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
        strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
        strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
    }
    return 1;
}

public ClearCookingID(playerid, cook)
{
    if(IsPlayerConnected(playerid))
    {
        new string[MAX_PLAYER_NAME];
        format(string, sizeof(string), "Nenhum");
        switch (cook)
        {
            case 1:
            {
                strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
                Cooking[playerid][pCWeight1] = 0;
                Cooking[playerid][pCookID1] = 0;
            }
            case 2:
            {
                strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
                Cooking[playerid][pCWeight2] = 0;
                Cooking[playerid][pCookID2] = 0;
            }
            case 3:
            {
                strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
                Cooking[playerid][pCWeight3] = 0;
                Cooking[playerid][pCookID3] = 0;
            }
            case 4:
            {
                strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
                Cooking[playerid][pCWeight4] = 0;
                Cooking[playerid][pCookID4] = 0;
            }
            case 5:
            {
                strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
                Cooking[playerid][pCWeight5] = 0;
                Cooking[playerid][pCookID5] = 0;
            }
        }
    }
    return 1;
}

public ClearGroceries(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
        Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
        Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
    }
    return 1;
}

public Lotto(number)
{
    new JackpotFallen = 0;
    format(gstring, sizeof(gstring), "Loterica: Hoje o numero sorteado foi o nº %d.", number);
    OOCNews(COLOR_WHITE, gstring);
    for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(PlayerInfo[i][pLottoNr] > 0)
            {
                if(PlayerInfo[i][pLottoNr] == number)
                {
                    JackpotFallen = 1;
                    format(gstring, sizeof(gstring), "Loterica: %s ganhou R$%d com seu bilhete.", PlayerName(i), Jackpot);
                    OOCNews(COLOR_WHITE, gstring);
                    format(gstring, sizeof(gstring), "* Você ganhou R$%d com seu bilhete de loteria.", Jackpot);
                    SendClientMessage(i, COLOR_YELLOW, gstring);
                    ConsumingMoney[i] = 1;
                    GivePlayerMoney(i, Jackpot);
                }
                else
                {
                    SendClientMessage(i, COLOR_GREY, " Você não tem um bilhete.");
                }
            }
            PlayerInfo[i][pLottoNr] = 0;
        }
    }
    if(JackpotFallen)
    {
        new rand = random(125000); rand += 15789;
        Jackpot = rand;
        SaveStuff();
        format(gstring, sizeof(gstring), "Loterica: O prêmio acumulou para: R$%d.", Jackpot);
        OOCNews(COLOR_WHITE, gstring);
    }
    else
    {
        new rand = random(15000); rand += 2158;
        Jackpot += rand;
        SaveStuff();
        format(gstring, sizeof(gstring), "Loterica: O prêmio acumulou para: R$%d.", Jackpot);
        OOCNews(COLOR_WHITE, gstring);
    }
    return 1;
}

//------------------------------------------------------------------------------------------------------
public OnPlayerDisconnect(playerid, reason)
{
    if( tirohitman[ playerid ] ^ 9999 && reason ^ 2 ){
        new string[ 128 ];
        tirohitman[ playerid ] = 9999;
        tirotime[ playerid ] = 0;
        PlayerInfo[ playerid ][ pJailed ] = 2;
        PlayerInfo[ playerid ][ pJailTime ] = 120 * 60;
        format( string, sizeof string, "O player %s foi preso automaticamente por 120 minutos. Motivo: Anti-RPG.", PlayerName( playerid ) );
        SendClientMessageToAll( COLOR_LIGHTRED, string );
    }
    DeletePVar(playerid, "PlayerMorto");
    PlayerInfo[playerid][pOnline] = 0;
    SalvarPlayer(playerid);
    new caller = Mobile[playerid];
    new nome[24], str[50];
    GetPlayerName(playerid, nome, 24);
    format(str, sizeof str, "%s - Arara", nome);
    dini_BoolSet("Araras.ini", str, Infoa[playerid][Arara]);
    format(str, sizeof str, "%s - Racao", nome);
    dini_BoolSet("Araras.ini", str, Infoa[playerid][Racao]);
    format(str, sizeof str, "%s - Grande", nome);
    dini_IntSet("Araras.ini", str, Infoa[playerid][Grande]);
    casaid[playerid] = 9999;
    PlayerInBank[ playerid ] = false;
    PegarAtividade( playerid );
    KillTimer(tima[playerid]);
    TextDrawHideForPlayer(playerid,____[playerid]);
    TextDrawDestroy(____[playerid]);
    for( new i; i < MAX_PLAYERS; i ++ ){
        if( IsPlayerConnected( i ) ) {
            if( Espiando[ i ] == playerid ){
                if( PlayerInfo[ i ][ pAdmin ] > 0 ){
                    PlayerInfo[ i ][ pTeam ] = 0;
                    TogglePlayerSpectating( i, false );
                    SpawnPlayer( i );
                    SendClientMessage( i, -1, "O player deslogou." );
                    Espiando[ i ] = -1;
                }
            }
        }
    }

    Espiando[ playerid ] = -1;
    if(caller != 9999)
    {
        if(caller < 255)
        {
            SendClientMessage(caller,  COLOR_GRAD2, "A ligação caiu...");
            CellTime[caller] = 0;
            CellTime[playerid] = 0;
            Mobile[caller] = 9999;
        }
        Mobile[playerid] = 9999;
        CellTime[playerid] = 0;
    }
    if(HireCar[playerid] > 0)
    {
        VTrancado[HireCar[playerid]] = 0;
        UnLockCar(HireCar[playerid]);
        SetVehicleToRespawn(HireCar[playerid]);
        HireCar[playerid] = 0;
    }
    if (PlayerInfo[playerid][pBarraca] != 0)
    {
        RemoveBarraca(playerid);
    }
    if (PlayerInfo[playerid][pParedao] != 0)
    {
        RemoveParedao(playerid);
    }
    if(pRoadblock[playerid] != 0)
    {
        RemoveRoadblock(playerid);
    }
    if(SpikeInfo[playerid][sCreated] != 0)
    {
        RemoveRoadPregos(playerid);
    }
    if(pRoadBloq[playerid] != 0)
    {
        RemoveRoadBloq(playerid);
    }
    if(PlayerInfo[playerid][pCone] != 0)
    {
        RemoveCone(playerid);
    }
    if(pRoadRampa[playerid][1] != 0) RemovePlataforma(playerid);
    /*if(PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] != 3000)
    {
        format(gstring, sizeof(gstring), "~p~%s: ~r~~h~OFF", PlayerName(playerid));
        for(new i=0; i<MaiorID; i++)
        {
            if(IsPlayerConnected(i))
            {
                GameTextForPlayer(i, gstring , 1000, 1);
            }
        }
    }*/
    if(Infovinny[playerid][NumSenha] != 999)
    {
        Infovinny[playerid][NumSenha] = 999;
        strmid(Infovinny[playerid][PergSenha], "Vazia", 0, strlen("Vazia"), 255);
        SenhasAtendimento --;
    }
    switch(reason)
    {
        case 0: format(gstring, sizeof(gstring), "%s saiu do server por perda de conexão ou crash.", PlayerName(playerid));
        case 1: format(gstring, sizeof(gstring), "%s saiu por vontade propria.", PlayerName(playerid));
        case 2: format(gstring, sizeof(gstring), "%s Saiu do servidor kickado ou banido.", PlayerName(playerid));
    }
    ProxDetector(100.0, playerid, gstring,0xFFBB77AA,0xFFBB77AA,0xFFBB77AA,0xFFBB77AA,0xFFBB77AA);
    gActivePlayers[playerid]--;
    if(MudarNickAceito[playerid] == 1)
    {
        MudarNickAceito[playerid] = 0;
    }
    if(ProvocoCasarao[playerid] == 1)
    {
        GangZoneStopFlashForAll(GZCasarao);
        GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
        GuerranoCasarao = 0;
        ProvocoCasarao[playerid] = 0;
        donocasarao = 0;
        Dominando[playerid] = 0;
        KillTimer(TempoGuerraCasarao);
    }
    if(ProvocoEstacao[playerid] == 1)
    {
        GangZoneStopFlashForAll(GZEstacao);
        GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
        GuerranaEstacao = 0;
        ProvocoEstacao[playerid] = 0;
        donoestacao = 0;
        Dominando[playerid] = 0;
        KillTimer(TempoGuerraEstacao);
    }
    if(ProvocoCemiterio[playerid] == 1)
    {
        GangZoneStopFlashForAll(GZCemiterio);
        GangZoneShowForAll(GZCemiterio, 0xFFFFFF96);
        GuerranoCemiterio = 0;
        ProvocoCemiterio[playerid] = 0;
        donoCemiterio = 0;
        Dominando[playerid] = 0;
        KillTimer(TempoGuerraCemiterio);
    }
    if(ProvocoShop[playerid] == 1)
    {
        GangZoneStopFlashForAll(GZShop);
        GangZoneShowForAll(GZShop, 0xFFFFFF96);
        GuerranoShop = 0;
        ProvocoShop[playerid] = 0;
        donoShop = 0;
        Dominando[playerid] = 0;
        KillTimer(TempoGuerraShop);
    }
    if(ProvocoPark[playerid] == 1)
    {
        GangZoneStopFlashForAll(GZPark);
        GangZoneShowForAll(GZPark, 0xFFFFFF96);
        GuerranoPark = 0;
        ProvocoPark[playerid] = 0;
        donoPark = 0;
        Dominando[playerid] = 0;
        KillTimer(TempoGuerraPark);
    }
    if(ProvocoSkate[playerid] == 1)
    {
        GangZoneStopFlashForAll(GZSkate);
        GangZoneShowForAll(GZSkate, 0xFFFFFF96);
        GuerranoSkate = 0;
        ProvocoSkate[playerid] = 0;
        donoskate = 0;
        Dominando[playerid] = 0;
        KillTimer(TempoGuerraSkate);
    }
    for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(TaxiAccepted[i] < 999)
            {
                if(TaxiAccepted[i] == playerid)
                {
                    TaxiAccepted[i] = 999;
                    GameTextForPlayer(i, "~w~O Cliente~n~~r~Saiu do jogo", 5000, 1);
                    TaxiCallTime[i] = 0;
                    DisablePlayerCheckpoint(i);
                }
            }
            else if(LocalizarTime[i] < 999)
            {
                if(LocalizarAccepted[i] == playerid)
                {
                    LocalizarTime[i] = 999;
                    GameTextForPlayer(i, "~w~O Cliente~n~~r~Saiu do jogo", 5000, 1);
                    //TaxiCallTime[i] = 0;
                    DisablePlayerCheckpoint(i);
                }
            }
            else if(CopsrondaAccepted[i] < 999)
            {
                if(CopsrondaAccepted[i] == playerid)
                {
                    CopsrondaAccepted[i] = 999;
                    GameTextForPlayer(i, "~w~Policial o player~n~~r~Deixou o jogo", 5000, 1);
                    CopsrondaCallTime[i] = 0;
                    DisablePlayerCheckpoint(i);
                }
            }
            else if(MedicAccepted[i] < 999)
            {
                if(MedicAccepted[i] == playerid)
                {
                    MedicAccepted[i] = 999;
                    GameTextForPlayer(i, "~w~O Cliente~n~~r~Saiu do jogo", 5000, 1);
                    MedicCallTime[i] = 0;
                    DisablePlayerCheckpoint(i);
                }
            }
            else if(MechanicAccepted[i] < 999)
            {
                if(MechanicAccepted[i] == playerid)
                {
                    MechanicAccepted[i] = 999;
                    GameTextForPlayer(i, "~w~O Cliente~n~~r~Saiu do jogo", 5000, 1);
                    MechanicCallTime[i] = 0;
                    DisablePlayerCheckpoint(i);
                }
            }
            else if(BusAccepted[i] < 999)
            {
                if(BusAccepted[i] == playerid)
                {
                    BusAccepted[i] = 999;
                    GameTextForPlayer(i, "~w~O Cliente~n~~r~Saiu do jogo", 5000, 1);
                    BusCallTime[i] = 0;
                    DisablePlayerCheckpoint(i);
                }
            }
        }
    }
    if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
    {
        if(IsPlayerConnected(TransportDriver[playerid]))
        {
            TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
            TransportTime[TransportDriver[playerid]] = 0;
            TransportCost[TransportDriver[playerid]] = 0;
            format(gstring, sizeof(gstring), "~w~Passageiro saiu~n~~g~ganhou R$%d",TransportCost[playerid]);
            GameTextForPlayer(TransportDriver[playerid], gstring, 5000, 1);
        }
    }
    if(GotHit[playerid] > 0)
    {
        if(GetChased[playerid] < 999)
        {
            if(IsPlayerConnected(GetChased[playerid]))
            {
                SendClientMessage(GetChased[playerid], COLOR_YELLOW, "Seu contrato saiu do servidor.");
                GotHit[GetChased[playerid]] = 0;//Yiakin FEZ!!
                GoChase[GetChased[playerid]] = 999;
            }
        }
    }
    if(PlayerPaintballing[playerid] != 0)
    {
        PaintballPlayers --;
    }
    if(HireCar[playerid] != 299)
    {
        gLastDriver[HireCar[playerid]] = 300;
        VTrancado[HireCar[playerid]] = 0;
        UnLockCar(HireCar[playerid]);
    }
    if (gLastCar[playerid] > 0)
    {
        gLastDriver[gLastCar[playerid]] = 300;
        if(PlayerInfo[playerid][pPHousekey] != gLastCar[playerid]-1)
        {
            VTrancado[gLastCar[playerid]] = 0;
            UnLockCar(gLastCar[playerid]);
        }
    }
    if(PlayerBoxing[playerid] > 0)
    {
        if(Boxer1 == playerid)
        {
            if(IsPlayerConnected(Boxer2))
            {
                PlayerBoxing[Boxer2] = 0;
                SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
                SetPlayerInterior(Boxer2, 5);
                GameTextForPlayer(Boxer2, "~r~Luta interrompida", 5000, 1);
            }
        }
        else if(Boxer2 == playerid)
        {
            if(IsPlayerConnected(Boxer1))
            {
                PlayerBoxing[Boxer1] = 0;
                SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186);
                SetPlayerInterior(Boxer1, 5);
                GameTextForPlayer(Boxer1, "~r~Luta interrompida", 5000, 1);
            }
        }
        InRing = 0;
        RorndStarted = 0;
        Boxer1 = 9999;
        Boxer2 = 9999;
        TBoxer = 9999;
    }
    if(TransportDuty[playerid] == 1)
    {
        TaxiDrivers -= 1;
    }
    else if(TransportDuty[playerid] == 2)
    {
        BusDrivers -= 1;
    }
    if(IsACop(playerid))
    {
        if(EmRondaCop[playerid] == 1) { Copsronda -= 1; }
    }
    if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
    {
        if(EmpregoDuty[playerid] == 1) { Medics -= 1; }
    }
    else if(IsAMec(playerid))
    {
        if(EmpregoDuty[playerid] == 1) { Mechanics -= 1; }
    }
    if(PlayerInfo[playerid][pEmprego] == 2) { Advogado -= 1; }
    BusrouteEast[playerid][0] = 0;
    BusrouteWest[playerid][0] = 0;
    Delete3DTextLabel(ProcuradoP[playerid]);
    SetTimer("ContarJogadores", 3000, 0);
    gPlayerLogged[playerid] = 0;
    return 1;
}
public SetPlayerSpawn(playerid)
{
    if(IsPlayerConnected(playerid) && !IsPlayerNPC(playerid))
    {
        if(sincronizando[playerid] == 1)
        {
            return 1;
        }
        if(PlayerInfo[playerid][pVip] > 0) { SetPlayerHealth(playerid, 100.0); }
        else { SetPlayerHealth(playerid, 50.0+PlayerInfo[playerid][pSHealth]); }
        spawnado[playerid] = 1;
        SetPlayerToTeamColor(playerid);
        if(PlayerInfo[playerid][pTut] == 0)
        {
            /*gNews[playerid] = 1;*/ gFam[playerid] = 1;
            TogglePlayerControllable(playerid, 0);
            RegistrationStep[playerid] = 1;
            ClearChatbox(playerid, 8);
            SetPlayerVirtualWorld(playerid,playerid+1);
            TextDrawShowForPlayer(playerid, BoxTuto1);
            TextDrawShowForPlayer(playerid, BoxTuto2);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "Seja Bem Vindo ao Brasil PlayGamer{FFD700}- RPG v1.0");
            ShowPlayerDialog(playerid,9,DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer RPG - Registro","{FF8000}Seja Bem Vindo!\n{FF8000}Diga O Seu Sexo.\n ","Masculino","Feminino");
            //PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0);
        }
        new rand;
        new House = PlayerInfo[playerid][pPHousekey];
        if(GetPlayerFamy(playerid) == FamilyBloqueada)
        {
            SendClientMessage(playerid, COLOR_LIGHTRED, "* A sua Família Cancelada, Você foi Expulso Automaticamente.");
            PlayerInfo[playerid][pFamyLider] = 0;
            PlayerInfo[playerid][pFamyMember] = 0;
        }
        if(PlayerInfo[playerid][pLuta] == 1)
        {
            SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
        }
        if(PlayerInfo[playerid][pLuta] == 2)
        {
            SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
        }
        if(PlayerInfo[playerid][pLuta] == 3)
        {
            SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
        }
        if(PlayerInfo[playerid][pLuta] == 4)
        {
            SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
        }
        if(PlayerInfo[playerid][pLuta] == 5)
        {
            SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
        }
        if(PlayerInfo[playerid][pLuta] == 6)
        {
            SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
        }
        if(PlayerPaintballing[playerid] != 0)
        {
            ResetPlayerWeapons(playerid);
            GivePlayerWeapon(playerid, 29, 999);
            GivePlayerWeapon(playerid, 31, 999);
            GivePlayerWeapon(playerid, 25, 999);
            SetPlayerArmour(playerid, 100);
            SetPlayerHealth(playerid, 100);
            SetPlayerInterior(playerid, 10);
            PlayerInfo[playerid][pInt] = 10;
            rand = random(sizeof(PaintballSpawns));
            SetPlayerPos(playerid, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
            return 1;
        }
        if(PlayerInfo[playerid][pHosp] > 0) return SetTimerEx("EntrarHospital", 1000, 0, "d",playerid);
        if(GetPVarInt(playerid, "PlayerMorto") >= 1 && PlayerPaintballing[playerid] == 0 && admtrampando[playerid] == 0 && !NoEvento[playerid])
        {
            ResetPlayerWeapons(playerid);
            Hospital[playerid] = 1;
            PlayerInfo[playerid][pDeaths] += 1;
            SetPVarInt(playerid, "PlayerMorto", 0);
            PlayerInfo[playerid][pHosp] = 1;
            PlayerInfo[playerid][pHospTime] = TEMPO_HOSPITAL;
            SetTimerEx("EntrarHospital", 1000, 0, "d",playerid);
            return 1;
        }
        if(PlayerInfo[playerid][pJailed] > 1)
        {
            SetPlayerHealth(playerid,50);
        }
        if(PlayerInfo[playerid][pJailed] == 1)
        {
            SetPlayerInterior(playerid, 6);
            rand = random(sizeof(gPresoPmSpawns));
            SetPlayerPos(playerid, gPresoPmSpawns[rand][0], gPresoPmSpawns[rand][1], gPresoPmSpawns[rand][2]); // Warp the player
            SetPlayerFacingAngle(playerid, gPresoPmSpawns[rand][3]);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentença incompleta,Você voltou para Prisão");
         return 1;
        }
        if(PlayerInfo[playerid][pJailed] == 44)
        {
            SetPlayerInterior(playerid, 6);
            rand = random(sizeof(gPresoPmSpawns));
            SetPlayerPos(playerid, gPresoPmSpawns[rand][0], gPresoPmSpawns[rand][1], gPresoPmSpawns[rand][2]); // Warp the player
            SetPlayerFacingAngle(playerid, gPresoPmSpawns[rand][3]);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentença incompleta,Você voltou para Prisão");
            SetPlayerVirtualWorld(playerid,1);
         return 1;
        }
        if(PlayerInfo[playerid][pJailed] == 2)
        {
            SetPlayerInterior(playerid, 0);
            SetPlayerPos(playerid, 346.5848, 306.1026, 999.1484);
            SetPlayerInterior(playerid,6);
            SetPlayerVirtualWorld(playerid,random(20));
         return 1;
        }
        if(PlayerInfo[playerid][pJailed] == 55)
        {
            SetPlayerInterior(playerid, 0);
            SetPlayerPos(playerid, -90.674201965332, -2251.2922363281, 14.351654052734);
            SetPlayerInterior(playerid,0);
            SetPlayerVirtualWorld(playerid,0);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentença incompleta,Você voltou para Prisão");
         return 1;
        }
        if(PlayerInfo[playerid][pJailed] == 9)
        {
            SetPlayerInterior(playerid, 0);
            rand = random(sizeof(gPresoBopeSpawns));
            SetPlayerPos(playerid, gPresoBopeSpawns[rand][0], gPresoBopeSpawns[rand][1], gPresoBopeSpawns[rand][2]); // Warp the player
            SetPlayerFacingAngle(playerid, gPresoBopeSpawns[rand][3]);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentença incompleta,Você voltou para Prisão");
         return 1;
        }
        if(PlayerInfo[playerid][pJailed] == 3)
        {
            SetPlayerInterior(playerid, 3);
            rand = random(sizeof(gPresoPcSpawns));
            SetPlayerPos(playerid, gPresoPcSpawns[rand][0], gPresoPcSpawns[rand][1], gPresoPcSpawns[rand][2]); // Warp the player
            SetPlayerFacingAngle(playerid, gPresoPcSpawns[rand][3]);
            SetPlayerVirtualWorld(playerid,7);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentença incompleta,Você voltou para Prisão");
         return 1;
        }
        if(PlayerInfo[playerid][pJailed] == 4)
        {
            SetPlayerInterior(playerid, 6);
            rand = random(sizeof(gPresoPmSpawns));
            SetPlayerPos(playerid, gPresoPmSpawns[rand][0], gPresoPmSpawns[rand][1], gPresoPmSpawns[rand][2]); // Warp the player
            SetPlayerFacingAngle(playerid, gPresoPmSpawns[rand][3]);
            SetPlayerVirtualWorld(playerid,0);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentença incompleta,Você voltou para Prisão");
         return 1;
        }
        if(PlayerInfo[playerid][pJailed] == 5)
        {
            SetPlayerInterior(playerid, 3);
            rand = random(sizeof(gPresoPcSpawns));
            SetPlayerPos(playerid, gPresoPcSpawns[rand][0], gPresoPcSpawns[rand][1], gPresoPcSpawns[rand][2]); // Warp the player
            SetPlayerFacingAngle(playerid, gPresoPcSpawns[rand][3]);
            SetPlayerVirtualWorld(playerid,0);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentença incompleta,Você voltou para Prisão");
         return 1;
        }
        if(PlayerInfo[playerid][pJailed] == 40)
        {
            SetPlayerInterior(playerid, 3);
            rand = random(sizeof(gPresoPcSpawns));
            SetPlayerPos(playerid, gPresoPcSpawns[rand][0], gPresoPcSpawns[rand][1], gPresoPcSpawns[rand][2]); // Warp the player
            SetPlayerFacingAngle(playerid, gPresoPcSpawns[rand][3]);
            SetPlayerVirtualWorld(playerid,8);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentença incompleta,Você voltou para Prisão");
         return 1;
        }
        if(PlayerInfo[playerid][pJailed] == 6)
        {
            SetPlayerInterior(playerid, 0);
            SetPlayerPos(playerid,2695.6262,-2126.2393,13.5488);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentença incompleta,Você voltou para Prisão");
         return 1;
        }
        if(PlayerInfo[playerid][pJailed] == 7)
        {
            SetPlayerInterior(playerid, 0);
            SetPlayerPos(playerid,-1293.2203,490.5885,11.1953);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentença incompleta,Você voltou para Prisão");
         return 1;
        }
        if(PlayerInfo[playerid][pJailed] == 69)
        {
            SetPlayerInterior(playerid, 10);
            SetPlayerPos(playerid, RandomCadeia[rand][0], RandomCadeia[rand][1], RandomCadeia[rand][2]);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentença incompleta,Você voltou para Prisão");
         return 1;
        }
        if(PlayerInfo[playerid][pJailed] == 8)
        {
            SetPlayerInterior(playerid, 6);
            rand = random(sizeof(gPresoPmSpawns));
            SetPlayerPos(playerid, gPresoPmSpawns[rand][0], gPresoPmSpawns[rand][1], gPresoPmSpawns[rand][2]); // Warp the player
            SetPlayerFacingAngle(playerid, gPresoPmSpawns[rand][3]);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentença incompleta,Você voltou para Prisão");
         return 1;
        }
        if(House != 9999 && PlayerInfo[playerid][pSpawn] == 1)
        {
            SetPlayerToTeamColor(playerid);
            SetPlayerInterior(playerid,HouseInfo[House][hInt]);
            SetPlayerVirtualWorld(playerid,HouseInfo[House][hWorld]);
            SetPlayerPos(playerid, HouseInfo[House][hExitx], HouseInfo[House][hExity],HouseInfo[House][hExitz]); // Warp the player
            PlayerInfo[playerid][pLocal] = House;
            PlayerInfo[playerid][pInt] = HouseInfo[House][hInt];
            HouseEntered[playerid] = House;
         return 1;
        }
        if (PlayerInfo[playerid][pEmprego] == 11 && GetPlayerOrg(playerid) == 0)// caminhoneiros Nascimento
        {
            SetPlayerPos(playerid, 2179.7561,-2256.4763,14.7734);
            SetPlayerFacingAngle(playerid,225.8974);
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid,0);
            PlayerInfo[playerid][pInt] = 0;
               return 1;
        }
        if (PlayerInfo[playerid][pEmprego] == 5 && GetPlayerOrg(playerid) == 0)// caminhoneiros Nascimento
        {
            SetPlayerPos(playerid, 962.6816,-1539.8987,13.5880);
            SetPlayerFacingAngle(playerid,359.2953);
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid,0);
            PlayerInfo[playerid][pInt] = 0;
               return 1;
        }
        if (PlayerInfo[playerid][pEmprego] == 9 && GetPlayerOrg(playerid) == 0)// caminhoneiros Nascimento
        {
            SetPlayerPos(playerid, 2450.5103,-2068.6902,13.5469);
            SetPlayerFacingAngle(playerid,183.4885);
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid,0);
            PlayerInfo[playerid][pInt] = 0;
            return 1;
        }
        if ((PlayerInfo[playerid][pFamyMember] == 2 || PlayerInfo[playerid][pFamyLider] == 2) && PlayerInfo[playerid][pSpawn] == 4)//Family Snake
        {
            SetPlayerToTeamColor(playerid);
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid, 0);
            SetPlayerPos(playerid, 1356.5128,-2881.5972,14.2059);
            SetPlayerFacingAngle(playerid, 345.4498);
            PlayerInfo[playerid][pInt] = 0;
            return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)// Taxistas Nascimento
        {
            SetPlayerPos(playerid, 1004.5120,-1431.9630,13.5469);
            SetPlayerFacingAngle(playerid,181.6931);
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid,0);
            PlayerInfo[playerid][pInt] = 0;
               return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27)//Hells Angels Sub HQ
        {
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid, 0);
            SetPlayerPos(playerid, -67.4004,-1757.3894,10.8547);
            SetPlayerFacingAngle(playerid, 264.9378);
            PlayerInfo[playerid][pInt] = 0;
            return 1;
        }
        /*if (PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27)// Snake Nascimento
        {
            SetPlayerPos(playerid, 209.7866,-33.6813,1001.9297);
            SetPlayerFacingAngle(playerid,176.3347);
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid,1);
            PlayerInfo[playerid][pInt] = 1;
               return 1;
        }   */
        if (PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)//Policia Militar Nascimento
        {
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid, 0);
            SetPlayerWantedLevel(playerid, 0);
            SetPlayerPos(playerid, 1529.4567,-1671.7179,6.2188);
            PlayerInfo[playerid][pInt] = 0;
            SetPlayerWantedLevel(playerid, 0);
         return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 35 || PlayerInfo[playerid][pLider] == 35)//KiLLeRs Nascimento
        {
            SetPlayerToTeamColor(playerid);
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid, 0);
            SetPlayerPos(playerid, 788.7240,-2209.8838,15.2078);
            SetPlayerFacingAngle(playerid, 77.0296);
            PlayerInfo[playerid][pInt] = 0;
            return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)//ROTA Nascimento
        {
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid, 3);
            SetPlayerWantedLevel(playerid, 0);
            SetPlayerPos(playerid, 232.29,163.78,1003.02);
            PlayerInfo[playerid][pInt] = 3;
            SetPlayerWantedLevel(playerid, 0);
         return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28)//BPM Nascimento
        {
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid, 0);
            SetPlayerWantedLevel(playerid, 0);
            SetPlayerPos(playerid, 1368.4298,-1630.7504,13.5395);
            PlayerInfo[playerid][pInt] = 0;
            SetPlayerWantedLevel(playerid, 0);
         return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)//Exército Nascimento
        {
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid, 0);
            SetPlayerWantedLevel(playerid, 0);
            SetPlayerPos(playerid, -1346.9358,492.0078,11.2027);
            PlayerInfo[playerid][pInt] = 0;
            SetPlayerWantedLevel(playerid, 0);
            return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)//MEDICO Nascimento
        {
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid, 0);
            SetPlayerPos(playerid, 1705.5629,1174.0107,34.8259);
            PlayerInfo[playerid][pInt] = 0;
            SetPlayerWantedLevel(playerid, 0);
            return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)//Aztecas Nascimento
        {
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid, 0);
            SetPlayerPos(playerid, 1676.0964,-2113.3378,13.5468);
            SetPlayerFacingAngle(playerid,181.4693);
            PlayerInfo[playerid][pInt] = 0;
            return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)//GuerrilheirosIsraelitas Nascimento
        {
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid, 0);
            SetPlayerPos(playerid,-2280.3262,2288.3750,4.9631);
            SetPlayerFacingAngle(playerid,0.8485);
            PlayerInfo[playerid][pInt] = 0;
            return 1;
        }
        if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)//Prefeito Nascimento
        {
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid, 3);
            SetPlayerPos(playerid, 354.8267,154.4102,1025.7964);
            PlayerInfo[playerid][pInt] = 0;
            SetPlayerArmour(playerid, 100);
            SetPlayerWantedLevel(playerid, 0);
            return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8) //Hitmans Nascimento
        {
            SetPlayerPos(playerid, 1105.8496,-328.8095,73.9922);
            SetPlayerFacingAngle(playerid,334.6795);
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid,0);
            PlayerInfo[playerid][pInt] = 0;
               return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24) //Triads Nascimento
        {
            SetPlayerPos(playerid, 2774.21,-2436.74,13.64);
            SetPlayerFacingAngle(playerid,334.6795);
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid,0);
            PlayerInfo[playerid][pInt] = 0;
               return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9) //Repórters Nascimento
        {
            SetPlayerPos(playerid, 735.3049,-1350.8284,13.5000);
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid,0);
            PlayerInfo[playerid][pInt] = 0;
               return 1;
        }
        if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14) //Groove Nascimento
        {
            SetPlayerPos(playerid, 2516.1411,-1675.4065,13.9113);
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid,0);
            PlayerInfo[playerid][pInt] = 0;
               return 1;
        }
        if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15) //FARC Nascimento
        {
            SetPlayerPos(playerid, 414.5280,2531.5229,19.1648);
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid,0);
            PlayerInfo[playerid][pInt] = 0;
               return 1;
        }
        if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16) //Polícia Rodoviária Federal Nascimento
        {
            SetPlayerPos(playerid, 232.29,163.78,1003.02);
            SetPlayerWantedLevel(playerid, 0);
            SetPlayerVirtualWorld(playerid,7);
            SetPlayerInterior(playerid,3);
            PlayerInfo[playerid][pInt] = 3;
            SetPlayerWantedLevel(playerid, 0);
               return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17) //Ballas Membros  Nascimento
        {
            SetPlayerPos(playerid, 1150.5472,-1180.6296,32.0275);
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid,0);
            PlayerInfo[playerid][pInt] = 0;
               return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18) //Vagos Nascimento
        {
            SetPlayerPos(playerid, 2808.3562,-1176.4606,25.3687);
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid,0);
            PlayerInfo[playerid][pInt] = 0;
               return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13) //Máfia Japonesa Nascimento
        {
            SetPlayerPos(playerid, 2627.6733,1824.2223,11.0234);
            SetPlayerFacingAngle(playerid,90.3036);
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid,0);
            PlayerInfo[playerid][pInt] = 0;
               return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12) //Máfia Russa Nascimento
        {
            SetPlayerPos(playerid, 1617.1228,1674.1149,11.2184);
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid,0);
            PlayerInfo[playerid][pInt] = 0;
               return 1;
        }
     if (PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)//bope Nascimento
        {
            SetPlayerVirtualWorld(playerid,6);
            SetPlayerInterior(playerid, 3);
            SetPlayerWantedLevel(playerid, 0);
            SetPlayerPos(playerid, 232.29,163.78,1003.02);
            PlayerInfo[playerid][pInt] = 3;
            SetPlayerWantedLevel(playerid, 0);
         return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)//bope Nascimento
        {
            SetPlayerVirtualWorld(playerid,8);
            SetPlayerInterior(playerid, 3);
            SetPlayerWantedLevel(playerid, 0);
            SetPlayerPos(playerid, 232.29,163.78,1003.02);
            PlayerInfo[playerid][pInt] = 3;
            SetPlayerWantedLevel(playerid, 0);
         return 1;
        }
     if (PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19) //comando vermelho
        {
            SetPlayerInterior(playerid, 0);
            SetPlayerPos(playerid, 2151.3245,-1807.9917,13.5465);
            SetPlayerVirtualWorld(playerid,0);
            PlayerInfo[playerid][pInt] = 0;
            return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28) //BPM
        {
            SetPlayerInterior(playerid, 6);
            SetPlayerPos(playerid, 246.5794,65.2859,1003.6406);
            SetPlayerVirtualWorld(playerid,0);
            PlayerInfo[playerid][pInt] = 6;
            return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29) //Snake
        {
            SetPlayerToTeamColor(playerid);
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid, 6);
            SetPlayerPos(playerid, 748.5834,1438.0070,1102.9531);
            SetPlayerFacingAngle(playerid, 77.0296);
            PlayerInfo[playerid][pInt] = 6;
            return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30) //Killers
        {
            SetPlayerToTeamColor(playerid);
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid, 3);
            SetPlayerPos(playerid, 932.5859,-2.5810,1001.5469);
            SetPlayerFacingAngle(playerid, 275.5027);
            PlayerInfo[playerid][pInt] = 3;
            return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31) //Justiceiros
        {
            SetPlayerToTeamColor(playerid);
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid, 6);
            SetPlayerPos(playerid, 768.3229,-36.9015,1000.6865);
            SetPlayerFacingAngle(playerid, 183.1041);
            PlayerInfo[playerid][pInt] = 6;
            return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)//Policia Civil
        {
            SetPlayerVirtualWorld(playerid,1);
            SetPlayerInterior(playerid, 10);
            SetPlayerPos(playerid, 237.3384,108.1396,1003.2257);
            SetPlayerFacingAngle(playerid,285.5956);
            PlayerInfo[playerid][pInt] = 10;
            SetPlayerWantedLevel(playerid, 0);
            return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26) //HunTerS
        {
            SetPlayerInterior(playerid, 0);
            SetPlayerPos(playerid, 2081.4709,-1562.6056,13.3781);
            SetPlayerFacingAngle(playerid, 264.4792);
            SetPlayerVirtualWorld(playerid,0);
            PlayerInfo[playerid][pInt] = 0;
            return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20) //PCC
        {
            SetPlayerPos(playerid, 1333.1842,-855.9254,39.5781);
            SetPlayerFacingAngle(playerid, 180.5602);
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid,0);
            PlayerInfo[playerid][pInt] = 0;
               return 1;
        }
        if ((PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21) && PlayerInfo[playerid][pSpawn] == 3)//Hells Angels Sub HQ
        {
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid, 0);
            SetPlayerPos(playerid, 1960.9839, -2041.2151, 0.5250);
            SetPlayerFacingAngle(playerid, 91.6009);
            PlayerInfo[playerid][pInt] = 0;
            return 1;
        }
        if ((PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22) && PlayerInfo[playerid][pSpawn] == 3)//Hells Angels Sub HQ
        {
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid, 0);
            SetPlayerPos(playerid, 2126.1000,-1773.6999,13.6000);
            SetPlayerFacingAngle(playerid, 91.6009);
            PlayerInfo[playerid][pInt] = 0;
            return 1;
        }
        if ((PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23) && PlayerInfo[playerid][pSpawn] == 3)//Hells Angels Sub HQ
        {
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid, 0);
            SetPlayerPos(playerid, 2410.8999,-1223.9000,24.7000);
            SetPlayerFacingAngle(playerid, 91.6009);
            PlayerInfo[playerid][pInt] = 0;
            return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)//Hells Angels Nascimento
        {
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid, 11);
            SetPlayerPos(playerid, 508.1166,-86.4055,998.9609);
            SetPlayerFacingAngle(playerid,2.9314);
            PlayerInfo[playerid][pInt] = 11;
            return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)//Mongols Nascimento
        {
            SetPlayerVirtualWorld(playerid,1);
            SetPlayerInterior(playerid, 1);
            SetPlayerPos(playerid, 681.5294,-453.1663,-25.6171);
            SetPlayerFacingAngle(playerid,2.9314);
            PlayerInfo[playerid][pInt] = 1;
            return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)//sons Nascimento
        {
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid, 18);
            SetPlayerPos(playerid, -225.6823,1411.0549,27.6048);    //nascimentosons
            SetPlayerFacingAngle(playerid,2.9314);
            PlayerInfo[playerid][pInt] = 18;
            return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25)//Drifters Nascimento
        {
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid, 0);
            SetPlayerPos(playerid, 839.5292,-2052.7095,12.8672);    //nascimento       Drifters
            SetPlayerFacingAngle(playerid,354.4844);
            PlayerInfo[playerid][pInt] = 0;
            return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)//Dark Gods
        {
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid, 0);
            SetPlayerPos(playerid, 725.8690,-1450.2448,17.6953);
            PlayerInfo[playerid][pInt] = 0;
            SetPlayerWantedLevel(playerid, 0);
            return 1;
        }
        if (PlayerInfo[playerid][pMembro] == 36 || PlayerInfo[playerid][pLider] == 36)//Storm
        {
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid, 0);
            SetPlayerPos(playerid, 2490.7168,-1518.0807,23.9922);
            SetPlayerFacingAngle(playerid, 179.0476);
            PlayerInfo[playerid][pInt] = 0;
            return 1;
        }
        if ((gTeam[playerid]) == 1)
        {
            SetPlayerToTeamColor(playerid);
            rand = random(sizeof(gMedPlayerSpawns));
            SetPlayerPos(playerid, gMedPlayerSpawns[rand][0], gMedPlayerSpawns[rand][1], gMedPlayerSpawns[rand][2]); // Warp the player
            SetPlayerFacingAngle(playerid, 270.0);
            SetPlayerInterior(playerid,0);
            PlayerInfo[playerid][pInt] = 0;
            return 1;
        }
        else
        {
            SetPlayerPos(playerid,1726.9946,-1635.9073,20.2168);
            SetPlayerFacingAngle(playerid, 2.7415);
            SetPlayerInterior(playerid,0);
            SetPlayerVirtualWorld(playerid,0);
            PlayerInfo[playerid][pInt] = 0;
        }
        Hospital[playerid] = 1;
        SetPVarInt(playerid, "PlayerMorto", 0);
    }
    return 1;
}
//------------------------------------------------------------------------------------------------------

public OnPlayerDeath(playerid, killerid, reason)
{
    if( killerid == INVALID_PLAYER_ID ){
        if( tomoutiro[ playerid ] ^ 999 && tempotiro[ playerid ] > gettime() ){
            if( IsPlayerConnected( tomoutiro[ playerid ] ) ){
                return OnPlayerDeath( playerid, tomoutiro[ playerid ], armatiro[ playerid ] );
            }
        }
    }
    if(NoEvento[playerid])
    {
        NoEvento[playerid] = false;
    }
    new string[128];
    if(gettime() - GetPVarInt(playerid, "ultimaDeath") < 3) //  ou o jogador morreu mais de uma vez nos últimos 2 segundos
    {
        format(string,sizeof(string), "AntiAttack:%s[ID: %d] Foi acusado ser Fake Kill e Foi Kickado(Ant Xiter: 3)!",PlayerName(playerid),playerid);
        ABroadCast(COLOR_LIGHTRED,string,1);
        Kick(playerid);
        //return 1;
    }
    if(IsPlayerConnected(killerid) && killerid != INVALID_PLAYER_ID)
    { // caso ouver killerid
        if(GetDistanceBetweenPlayers(killerid, playerid) > 300 && GetPVarInt(playerid, "ultimoShoot") != killerid)
        { // caso a distancia entre o killerid for menor que 300
            format(string,sizeof(string), "AntiAttack:%s[ID: %d] Foi acusado ser Fake Kill e Foi Kickado(Ant Xiter: 3)!",PlayerName(playerid),playerid);
            ABroadCast(COLOR_LIGHTRED,string,1);
            //Ban(playerid);
            Kick(playerid);
            //return 1;
        }
    }
    tomoutiro[ playerid ] = 999;
    tempotiro[ playerid ] = 0;
    armatiro[ playerid ] = 0;
    if(Sequestrado[playerid] >= 1)
    {
        format(string, sizeof(string), "[SEQUESTRO:] A Vítima de Sequestro %s Morreu, Sequestro Acabado.",PlayerName(playerid));
        SendClientMessageToAll(COLOR_DBLUE, string);
        Sequestrado[playerid] = 0;
        PlayerTied[playerid] = 0;
        PlayerInfo[playerid][pMuted] = 0;
        PlayerInfo[playerid][pInt] = 0;
        SetPlayerInterior(playerid, 0);
        TogglePlayerControllable(playerid, 1);
    }
    SetPVarInt(playerid, "ultimaDeath", gettime());
    SetPVarInt(playerid, "PlayerMorto", 1);
    if(NaCamera[playerid] > 1)
    {
        TextDrawHideForPlayer(playerid, Hidealto2[playerid]);
        TextDrawHideForPlayer(playerid, Hidebaixo2[playerid]);
        TextDrawHideForPlayer(playerid, TextRec[playerid]);
        NaCamera[playerid] = 0;
    }
    if(FakeKillOn == 1)
    {
        if(killerid != INVALID_PLAYER_ID)
        {
            if(!PlayerShotPlayer[killerid][playerid])
            {
                new NomePlayer[MAX_PLAYER_NAME];
                GetPlayerName(playerid,NomePlayer,sizeof(NomePlayer));
                format(string,sizeof(string), "AntiAttack:%s[ID: %d] Foi acusado ser Fake Kill e Foi desconectado(Ant Xiter: 1)!",NomePlayer,playerid);
                ABroadCast(COLOR_LIGHTRED,string,1);
                Kick(playerid);
                SetTimer("DesligarFakeKill", 15000, false);
            }
        }
        foreach(Player,i)
        {
            PlayerShotPlayer[i][playerid] = 0;
        }
        antifakekill[playerid] ++;
        SetTimerEx("FakeKillAtivo", 1000,false,"i",playerid);
    }
    else if(FakeKillOn == 0)
    {
        antifakekill[playerid] ++;
        SetTimerEx("LigarFakeKill", 1000,false,"i",playerid);
        if(killerid != INVALID_PLAYER_ID)
        {
            if(!PlayerShotPlayer[killerid][playerid])
            {
                LigarFakeKill(playerid);
            }
        }
        foreach(Player,i)
        {
            PlayerShotPlayer[i][playerid] = 0;
        }
        if(Verck >= 1)
        {
            SendDeathMessage(killerid, playerid, reason); //chat kill
        }
        new Float:px,Float:py,Float:pz;
        gPlayerSpawned[playerid] = 0;
        PlayerInfo[playerid][pLocal] = 9999;
        GetPlayerPos(playerid, px, py, pz);
        spawnado[playerid] = 0;
        if(Verdm >= 1 && GetPlayerOrg(killerid) != 8 && GetPlayerOrg(killerid) != 24)
        {
            new NomePlayer[MAX_PLAYER_NAME], NomeKiller[MAX_PLAYER_NAME];
            GetPlayerName(playerid,NomePlayer,sizeof(NomePlayer));
            GetPlayerName(killerid,NomeKiller,sizeof(NomeKiller));
            format(string, sizeof(string), "AdmAviso: %s[ORG: %s] matou o %s [ORG:%s]", NomeKiller, NomeORG(killerid), NomePlayer, NomeORG(playerid));
            ABroadCast(0xFF5959AA,string,1);
        }
        if(GetPlayerOrg(killerid) != 0 && playerid != INVALID_PLAYER_ID && killerid != INVALID_PLAYER_ID)
        {
            new NomePlayer[MAX_PLAYER_NAME], NomeKiller[MAX_PLAYER_NAME],ArmaTeste[32];
            GetPlayerName(playerid,NomePlayer,sizeof(NomePlayer));
            GetPlayerName(killerid,NomeKiller,sizeof(NomeKiller));
            if(GetPlayerWeapon(killerid) != 0)  {GetWeaponName(GetPlayerWeapon(killerid),ArmaTeste,sizeof(ArmaTeste));}
            else { ArmaTeste = "Nenhuma"; }
            format(gstring, sizeof(gstring), "** Agência %s: %s Matou %s[%s], com a Arma: %s.",NomeORG(killerid), NomeKiller,NomePlayer,NomeORG(playerid), ArmaTeste);
            SendFamilyMessage(GetPlayerOrg(killerid), 0x77EEA1FF, gstring);
            format(gstring, sizeof(gstring), "INFO: Você Matou %s com a Arma: %s!", NomePlayer, ArmaTeste);
            SendClientMessage(killerid, -1, gstring);
            format(gstring, sizeof(gstring), "INFO: Você Foi Morto por %s[%s] com, Arma: %s!", NomeKiller,NomeORG(killerid), ArmaTeste);
            SendClientMessage(playerid, -1, gstring);
        }
        if(TendoGuerra == 1 && IsPlayerInTerritorio(killerid) || IsPlayerInTerritorio(playerid))
        {
            new za = GetPlayerOrg(killerid);
            GPontos[za] += 3;
        }
        if (gPlayerTerminal[playerid] != 0)
        {
            BusrouteEnd(playerid);
        }
        if(PlayerPaintballing[killerid] == 0)
        {
            if(IsPlayerInTerritorio(killerid))
            {

            }
            else
            {
                SetPlayerCriminal(killerid, 255, "Assassinato");
                PlayerInfo[killerid][Rufflesills] += 1;
            }
        }
        if(PlayerInfo[playerid][pHeadValue] > 0)
        {
            if(IsPlayerConnected(killerid))
            {
                if(GetPlayerOrg(killerid) == 8 || GetPlayerOrg(killerid) == 24)
                {
                    if(GoChase[killerid] == playerid)
                    {
                        ConsumingMoney[killerid] = 1;
                        GivePlayerMoney(killerid, PlayerInfo[playerid][pHeadValue]);
                        format(string, sizeof(string), "Você foi morto por contrato pelo Assassino %s no valor de %d e não foi DM!",PlayerName(killerid),PlayerInfo[playerid][pHeadValue]);
                        //SendClientMessage(playerid, 0x33FF00FF, string);
                        SendClientMessage(playerid, COLOR_YELLOW, string);
                        format(string, sizeof(string), "<< [%s] Assasino %s Cumpriu o contrato em %s e recebeu $%d >>",NomeORG(killerid), PlayerName(killerid),PlayerName(playerid),PlayerInfo[playerid][pHeadValue]);
                        SendFamilyMessage(8, COLOR_YELLOW, string);
                        SendFamilyMessage(24, COLOR_YELLOW, string);
                        if(Verdmhit >= 1)
                        {
                            new NomePlayer[MAX_PLAYER_NAME], NomeKiller[MAX_PLAYER_NAME];
                            GetPlayerName(playerid,NomePlayer,sizeof(NomePlayer));
                            GetPlayerName(killerid,NomeKiller,sizeof(NomeKiller));
                            format(string, sizeof(string), "AdmAviso: %s[ORG: %s] Compriu Contrato Em %s [ORG:%s]", PlayerName(killerid), NomeORG(killerid), PlayerName(playerid), NomeORG(playerid));
                            ABroadCast(0xFF5959AA,string,1);
                        }
                        if(GetPlayerOrg(killerid) == 8)
                        {
                            InfoCont[1]++;
                        }
                        else if(GetPlayerOrg(killerid) == 24)
                        {
                            InfoCont[2]++;
                        }
                        PlayerInfo[playerid][pHeadValue] = 0;
                        GotHit[playerid] = 0;
                        GetChased[playerid] = 999;
                        GoChase[killerid] = 999;
                    }
                }
            }
        }
        if(TendoGuerra == 1 && IsPlayerInTerritorio(playerid) && IsPlayerInTerritorio(killerid))
        {
            if(PlayerInfo[killerid][pMembro] == 3 || PlayerInfo[killerid][pLider] == 3)
            {
                if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
                {
                    Territorio[gimortos] += 1;
                }
                if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
                {
                    Territorio[almortos] += 1;
                }
                if(PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)
                {
                    Territorio[aermortos] += 1;
                }
            }
            if(PlayerInfo[killerid][pMembro] == 6 || PlayerInfo[killerid][pLider] == 6)
            {
                if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
                {
                    Territorio[exemortos] += 1;
                }
                if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
                {
                    Territorio[almortos] += 1;
                }
                if(PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)
                {
                    Territorio[aermortos] += 1;
                }
            }
            if(PlayerInfo[killerid][pMembro] == 15 || PlayerInfo[killerid][pLider] == 15)
            {
                if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
                {
                    Territorio[exemortos] += 1;
                }
                if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
                {
                    Territorio[gimortos] += 1;
                }
                if(PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)
                {
                    Territorio[aermortos] += 1;
                }
            }
            if(PlayerInfo[killerid][pMembro] == 33 || PlayerInfo[killerid][pLider] == 33)
            {
                if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
                {
                    Territorio[exemortos] += 1;
                }
                if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
                {
                    Territorio[gimortos] += 1;
                }
                if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
                {
                    Territorio[almortos] += 1;
                }
            }
        }
    //==================================[SUSPEITO MORTO]=========================//
        if(WantedPoints[playerid] >= 1 && !NoEvento[playerid])
        {
               if(!IsPlayerInMorro(playerid) && !IsPlayerInMorro(killerid))
                {
                    new price = WantedPoints[playerid] * 1000;
                    if(PlayerInfo[killerid][pMembro] == 1 || PlayerInfo[killerid][pLider] == 1)
                    {
                        if(!IsPlayerInMorro(killerid))
                        {
                            format(string, sizeof(string), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
                            GameTextForPlayer(killerid, string, 5000, 1);
                            ConsumingMoney[killerid] = 1;
                            GivePlayerMoney(killerid, price / 2);
                            PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
                            GivePlayerMoney(playerid, - price);
                            PlayerInfo[playerid][pJailed] = 1;
                            if(PlayerInfo[playerid][pVip] >= 2)
                            {
                                 PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(120);
                            }
                            else
                            {
                                PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(120);
                            }
                            format(string, sizeof(string), "* Você está preso por %d Segundos na Policia Militar, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
                            SendClientMessage(playerid, COLOR_LIGHTRED, string);
                            WantedPoints[playerid] = 0;
                            SetPlayerWantedLevel(playerid, 0);
                            PlayerInfo[playerid][pDrogas] = 0;
                            PlayerInfo[playerid][pDrogas2] = 0;
                            PlayerInfo[playerid][pDrogas3] = 0;
                            PlayerInfo[playerid][pMats] = 0;
                            PlayerInfo[playerid][pAjustado] = 0;
                        }
                    }
                    else if(PlayerInfo[killerid][pMembro] == 2 || PlayerInfo[killerid][pLider] == 2)
                    {
                        if(!IsPlayerInMorro(killerid))
                        {
                            format(string, sizeof(string), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
                            GameTextForPlayer(killerid, string, 5000, 1);
                            ConsumingMoney[killerid] = 1;
                            GivePlayerMoney(killerid, price / 2);
                            PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
                            GivePlayerMoney(playerid, - price);
                            PlayerInfo[playerid][pJailed] = 4;
                            if(PlayerInfo[playerid][pVip] >= 2)
                            {
                                 PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(120);
                            }
                            else
                            {
                                PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(120);
                            }
                            format(string, sizeof(string), "* Você está preso por %d Segundos na HQ ROTA, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
                            SendClientMessage(playerid, COLOR_LIGHTRED, string);
                            WantedPoints[playerid] = 0;
                            SetPlayerWantedLevel(playerid, 0);
                            PlayerInfo[playerid][pDrogas] = 0;
                            PlayerInfo[playerid][pDrogas2] = 0;
                            PlayerInfo[playerid][pDrogas3] = 0;
                            PlayerInfo[playerid][pMats] = 0;
                            PlayerInfo[playerid][pAjustado] = 0;
                            //ProcuradoPlayer(playerid);
                        }
                    }
                    else if(PlayerInfo[killerid][pMembro] == 28 || PlayerInfo[killerid][pLider] == 28)
                    {
                        if(!IsPlayerInMorro(killerid))
                        {
                            format(string, sizeof(string), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
                            GameTextForPlayer(killerid, string, 5000, 1);
                            ConsumingMoney[killerid] = 1;
                            GivePlayerMoney(killerid, price / 2);
                            PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
                            GivePlayerMoney(playerid, - price);
                            PlayerInfo[playerid][pJailed] = 44;
                            if(PlayerInfo[playerid][pVip] >= 2)
                            {
                                 PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(120);
                            }
                            else
                            {
                                PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(120);
                            }
                            format(string, sizeof(string), "* Você está preso por %d Segundos na HQ ROTA pela BPM, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
                            SendClientMessage(playerid, COLOR_LIGHTRED, string);
                            WantedPoints[playerid] = 0;
                            SetPlayerWantedLevel(playerid, 0);
                            PlayerInfo[playerid][pDrogas] = 0;
                            PlayerInfo[playerid][pDrogas2] = 0;
                            PlayerInfo[playerid][pDrogas3] = 0;
                            PlayerInfo[playerid][pMats] = 0;
                            PlayerInfo[playerid][pAjustado] = 0;
                            //ProcuradoPlayer(playerid);
                        }
                    }
                    else if(PlayerInfo[killerid][pMembro] == 3 || PlayerInfo[killerid][pLider] == 3)
                    {
                        if(!IsPlayerInMorro(killerid))
                        {
                            format(string, sizeof(string), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
                            GameTextForPlayer(killerid, string, 5000, 1);
                            ConsumingMoney[killerid] = 1;
                            GivePlayerMoney(killerid, price / 2);
                            PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
                            GivePlayerMoney(playerid, - price);
                            PlayerInfo[playerid][pJailed] = 7;
                            if(PlayerInfo[playerid][pVip] >= 2)
                            {
                                 PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(120);
                            }
                            else
                            {
                                PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(120);
                            }
                            format(string, sizeof(string), "* Você está preso por %d Segundos no Exército , e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
                            SendClientMessage(playerid, COLOR_LIGHTRED, string);
                            WantedPoints[playerid] = 0;
                            SetPlayerWantedLevel(playerid, 0);
                            PlayerInfo[playerid][pDrogas] = 0;
                            PlayerInfo[playerid][pDrogas2] = 0;
                            PlayerInfo[playerid][pDrogas3] = 0;
                            PlayerInfo[playerid][pMats] = 0;
                            PlayerInfo[playerid][pAjustado] = 0;
                            //ProcuradoPlayer(playerid);
                        }
                    }
                    else if(PlayerInfo[killerid][pMembro] == 16 || PlayerInfo[killerid][pLider] == 16)
                    {
                        if(!IsPlayerInMorro(killerid))
                        {
                            format(string, sizeof(string), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
                            GameTextForPlayer(killerid, string, 5000, 1);
                            ConsumingMoney[killerid] = 1;
                            GivePlayerMoney(killerid, price / 2);
                            PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
                            GivePlayerMoney(playerid, - price);
                            PlayerInfo[playerid][pJailed] = 3;
                            if(PlayerInfo[playerid][pVip] >= 2)
                            {
                                 PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(120);
                            }
                            else
                            {
                                PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(120);
                            }
                            format(string, sizeof(string), "* Você está preso por %d Segundos na Polícia B.O.P.E, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
                            SendClientMessage(playerid, COLOR_LIGHTRED, string);
                            WantedPoints[playerid] = 0;
                            SetPlayerWantedLevel(playerid, 0);
                            PlayerInfo[playerid][pDrogas] = 0;
                            PlayerInfo[playerid][pDrogas2] = 0;
                            PlayerInfo[playerid][pDrogas3] = 0;
                            PlayerInfo[playerid][pMats] = 0;
                            PlayerInfo[playerid][pAjustado] = 0;
                            //ProcuradoPlayer(playerid);
                        }
                    }
                    else if(PlayerInfo[killerid][pMembro] == 11 || PlayerInfo[killerid][pLider] == 11)
                    {
                        if(!IsPlayerInMorro(killerid))
                        {
                            format(string, sizeof(string), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
                            GameTextForPlayer(killerid, string, 5000, 1);
                            ConsumingMoney[killerid] = 1;
                            GivePlayerMoney(killerid, price / 2);
                            PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
                            GivePlayerMoney(playerid, - price);
                            PlayerInfo[playerid][pJailed] = 5;
                            if(PlayerInfo[playerid][pVip] >= 2)
                            {
                                 PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(120);
                            }
                            else
                            {
                                PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(120);
                            }
                            format(string, sizeof(string), "* Você está preso por %d Segundos na Polícia Rodoviária Federal, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
                            SendClientMessage(playerid, COLOR_LIGHTRED, string);
                            WantedPoints[playerid] = 0;
                            SetPlayerWantedLevel(playerid, 0);
                            PlayerInfo[playerid][pDrogas] = 0;
                            PlayerInfo[playerid][pDrogas2] = 0;
                            PlayerInfo[playerid][pDrogas3] = 0;
                            PlayerInfo[playerid][pMats] = 0;
                            PlayerInfo[playerid][pAjustado] = 0;
                            //ProcuradoPlayer(playerid);
                        }
                    }
                    else if(PlayerInfo[killerid][pMembro] == 32 || PlayerInfo[killerid][pLider] == 32)
                    {
                        if(!IsPlayerInMorro(killerid))
                        {
                            format(string, sizeof(string), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
                            GameTextForPlayer(killerid, string, 5000, 1);
                            ConsumingMoney[killerid] = 1;
                            GivePlayerMoney(killerid, price / 2);
                            PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
                            GivePlayerMoney(playerid, - price);
                            PlayerInfo[playerid][pJailed] = 69;
                            if(PlayerInfo[playerid][pVip] >= 2)
                            {
                                 PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(120);
                            }
                            else
                            {
                                PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(120);
                            }
                            format(string, sizeof(string), "* Você está preso por %d Segundos na Policia Civil, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
                            SendClientMessage(playerid, COLOR_LIGHTRED, string);
                            WantedPoints[playerid] = 0;
                            SetPlayerWantedLevel(playerid, 0);
                            PlayerInfo[playerid][pDrogas] = 0;
                            PlayerInfo[playerid][pDrogas2] = 0;
                            PlayerInfo[playerid][pDrogas3] = 0;
                            PlayerInfo[playerid][pMats] = 0;
                            PlayerInfo[playerid][pAjustado] = 0;
                            //ProcuradoPlayer(playerid);
                        }
                    }
                    else if(PlayerInfo[killerid][pMembro] == 33 || PlayerInfo[killerid][pLider] == 33)
                    {
                        format(gstring, sizeof(gstring), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
                        GameTextForPlayer(killerid, gstring, 5000, 1);
                        ConsumingMoney[killerid] = 1;
                        GivePlayerMoney(killerid, price / 2);
                        PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
                        GivePlayerMoney(playerid, - price);
                        PlayerInfo[playerid][pJailed] = 40;
                        SetPlayerVirtualWorld(playerid, 0);
                        PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(120);
                        format(gstring, sizeof(gstring), "* Você está preso por %d Segundos na Policia Militar LS, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
                        SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
                        WantedPoints[playerid] = 0;
                        SetPlayerWantedLevel(playerid, 0);
                        PlayerInfo[playerid][pDrogas] = 0;
                        PlayerInfo[playerid][pDrogas2] = 0;
                        PlayerInfo[playerid][pDrogas3] = 0;
                        PlayerInfo[playerid][pMats] = 0;
                        PlayerInfo[playerid][pAjustado] = 0;
                    }
                }
            }
    //=================[NOVO ROUBAR]================
        if(ProvocoBanco[playerid] == 1)
        {
            //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayGamer Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
            format(string, sizeof(string), "%s e os %s não conseguiram roubar o cofre do Banco! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
            SendClientMessageToAll(GetPlayerColor(playerid), string);
            ProvocoBanco[playerid] = 0; roubando[playerid] = 0; roubobanco = 0; KillTimer(tempobanco); temporoubobanco = 0;
        }
        if(ProvocoLot[playerid] == 1)
        {
            //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayGamer Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
            format(string, sizeof(string), "%s e os %s não conseguiram roubar o cofre da Lotérica! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
            SendClientMessageToAll(GetPlayerColor(playerid), string);
            ProvocoLot[playerid] = 0; roubando[playerid] = 0; roubolot = 0; KillTimer(tempolot); temporoubolot = 0;
        }
        if(ProvocoPostoGas[playerid] == 1)
        {
            //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayGamer Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
            format(string, sizeof(string), "%s e os %s não conseguiram roubar o cofre do Posto de Gasolina Abandonado! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
            SendClientMessageToAll(GetPlayerColor(playerid), string);
            ProvocoPostoGas[playerid] = 0; roubando[playerid] = 0; rouboposto = 0; KillTimer(tempoposto); temporouboposto = 0;
        }
        if(ProvocoLoja1[playerid] == 1)
        {
            //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayGamer Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
            format(string, sizeof(string), "%s e os %s não conseguiram roubar o cofre da Loja de Armas 1! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
            SendClientMessageToAll(GetPlayerColor(playerid), string);
            ProvocoLoja1[playerid] = 0; roubando[playerid] = 0; rouboloja1 = 0; KillTimer(tempoloja1); temporouboloja1 = 0;
        }
        if(ProvocoLoja2[playerid] == 1)
        {
            //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayGamer Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
            format(string, sizeof(string), "%s e os %s não conseguiram roubar o cofre da Loja de Armas 2! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
            SendClientMessageToAll(GetPlayerColor(playerid), string);
            ProvocoLoja2[playerid] = 0; roubando[playerid] = 0; rouboloja2 = 0; KillTimer(tempoloja2); temporouboloja2 = 0;
        }
        if(ProvocoPrefe[playerid] == 1)
        {
            //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayGamer Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
            format(string, sizeof(string), "%s e os %s não conseguiram roubar o cofre da Prefeitura! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
            SendClientMessageToAll(GetPlayerColor(playerid), string);
        }
    //=======================[FIM ROUBAR]========================
        if(ProvocoCasarao[playerid] == 1)
        {
            GangZoneStopFlashForAll(GZCasarao);
            GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
            GuerranoCasarao = 0;
            ProvocoCasarao[playerid] = 0;
            donocasarao = 0;
            Dominando[playerid] = 0;
            KillTimer(TempoGuerraCasarao);
        }
        if(ProvocoEstacao[playerid] == 1)
        {
            GangZoneStopFlashForAll(GZEstacao);
            GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
            GuerranaEstacao = 0;
            ProvocoEstacao[playerid] = 0;
            donoestacao = 0;
            Dominando[playerid] = 0;
            KillTimer(TempoGuerraEstacao);
        }
        if(ProvocoCemiterio[playerid] == 1)
        {
            GangZoneStopFlashForAll(GZCemiterio);
            GangZoneShowForAll(GZCemiterio, 0xFFFFFF96);
            GuerranoCemiterio = 0;
            ProvocoCemiterio[playerid] = 0;
            donoCemiterio = 0;
            Dominando[playerid] = 0;
            KillTimer(TempoGuerraCemiterio);
        }
        if(ProvocoShop[playerid] == 1)
        {
            GangZoneStopFlashForAll(GZShop);
            GangZoneShowForAll(GZShop, 0xFFFFFF96);
            GuerranoShop = 0;
            ProvocoShop[playerid] = 0;
            donoShop = 0;
            Dominando[playerid] = 0;
            KillTimer(TempoGuerraShop);
        }
        if(ProvocoPark[playerid] == 1)
        {
            GangZoneStopFlashForAll(GZPark);
            GangZoneShowForAll(GZPark, 0xFFFFFF96);
            GuerranoPark = 0;
            ProvocoPark[playerid] = 0;
            donoPark = 0;
            Dominando[playerid] = 0;
            KillTimer(TempoGuerraPark);
        }
        if(ProvocoSkate[playerid] == 1)
        {
            GangZoneStopFlashForAll(GZSkate);
            GangZoneShowForAll(GZSkate, 0xFFFFFF96);
            GuerranoSkate = 0;
            ProvocoSkate[playerid] = 0;
            donoskate = 0;
            Dominando[playerid] = 0;
            KillTimer(TempoGuerraSkate);
        }
        new IdCarroDB = GetVehicleModel(GetPlayerVehicleID(killerid));
        if(PlayerInfo[killerid][pAdmin] == 0 && GetPlayerState(killerid) == 2 && GetPlayerState(playerid) != 2 && IdCarroDB != 447 && IdCarroDB != 425 && IdCarroDB != 520 && IdCarroDB != 564)
        {
            GetPlayerName(killerid,kickname,sizeof(kickname));
            GetPlayerName(playerid,victmname,sizeof(victmname));
            format(string,sizeof(string),"[BPG]{FFA4FF} %s {FFFFFF}ID:[{FFA4FF}%d{FFFFFF}] cometeu DB em{93FFFF} %s{FFFFFF}.",kickname,killerid,PlayerName(playerid));
            SendClientMessageToAll(0xFF8080AA,string);
            GetPlayerDB[playerid] = killerid;
            format(string, sizeof(string), "AntiDB: Vítima %s, Suspeito %s.", PlayerName(playerid), PlayerName(killerid));
            SoEuVejoMsm(0x00F2F2FF, string);
            if(SysDBOn == 0)
            {
                SetTimerEx("ShowMessageDB", 5000,false,"i",playerid);
            }
        }
        if(reason == 38)
        {
            if(IsPlayerConnected(killerid))
            {
                format(string,sizeof(string), "AdmAviso: [%d]%s usou minigun em %s.",killerid,PlayerName(killerid),PlayerName(playerid));
                ABroadCast(COLOR_YELLOW,string,1);
                printf("%s", string);
            }
        }
        if(reason == 35)
        {
            if(IsPlayerConnected(killerid))
            {
                format(string,sizeof(string), "AdmAviso: [%d]%s usou Bazuka em %s.",killerid,PlayerName(killerid),PlayerName(playerid));
                ABroadCast(COLOR_YELLOW,string,1);
                printf("%s", string);
            }
        }
        if(reason == 36)
        {
            if(IsPlayerConnected(killerid))
            {
                format(string,sizeof(string), "AdmAviso: [%d]%s usou Bazuka =2= em %s.",killerid,PlayerName(killerid),PlayerName(playerid));
                ABroadCast(COLOR_YELLOW,string,1);
                printf("%s", string);
            }
        }
        if(reason == 26)
        {
            if(IsPlayerConnected(killerid))
            {
                format(string,sizeof(string), "AdmAviso: [%d]%s usou 12 Cano cerrado em %s.",killerid,PlayerName(killerid),PlayerName(playerid));
                ABroadCast(COLOR_YELLOW,string,1);
                printf("%s", string);
            }
        }
        if(reason == 32)
        {
            if(IsPlayerConnected(killerid))
            {
                format(string,sizeof(string), "AdmAviso: [%d]%s usou TEC9 em %s.",killerid,PlayerName(killerid),PlayerName(playerid));
                ABroadCast(COLOR_YELLOW,string,1);
                printf("%s", string);
            }
        }
        if (gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11)
        {
            DisablePlayerCheckpoint(playerid);
            gPlayerCheckpointStatus[playerid] = CHECKPOINT_Nenhum;
        }
        new caller = Mobile[playerid];
        if(caller != 9999)
        {
            if(caller < 255)
            {
                SendClientMessage(caller,  COLOR_GRAD2, "Morreram do outro lado da linha....");
                CellTime[caller] = 0;
                CellTime[playerid] = 0;
                StopMusic(playerid);
                StopMusic(caller);
                Mobile[caller] = 9999;
            }
            Mobile[playerid] = 9999;
            CellTime[playerid] = 0;
            new pSpecialAction = GetPlayerSpecialAction(caller);
            if (pSpecialAction == SPECIAL_ACTION_USECELLPHONE)
            {
                SetPlayerSpecialAction(caller,SPECIAL_ACTION_STOPUSECELLPHONE);
                //SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
            }
        }
        ClearCrime(playerid);
        if(PlayerPaintballing[playerid] != 0)
        {
            PlayerPaintballKills[killerid] ++;
            if(PlayerPaintballKills[killerid] > PaintballWinnerKills)
            {
                PaintballWinner = killerid;
                PaintballWinnerKills = PlayerPaintballKills[killerid];
             for(new i = 0; i < MaiorID; i++)
                {
                    if(IsPlayerConnected(i))
                    {
                        if(PlayerPaintballing[i] != 0)
                        {
                            format(string, sizeof(string), "* %s está em 1º com %d Kills.",PlayerName(killerid),PaintballWinnerKills);
                            SendClientMessage(i, COLOR_WHITE, string);
                        }
                    }
                }
            }
        }
        if(PlayerInfo[killerid][pHeadValue] > 0)
        {
            if(IsPlayerConnected(playerid))
            {
                if(PlayerInfo[playerid][pLider] == 8  || PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 24  || PlayerInfo[playerid][pMembro] == 24)
                {
                    if(GoChase[playerid] == killerid)
                    {
                        ConsumingMoney[playerid] = 1;
                        format(string, sizeof(string), "<< [%s] Assasino %s foi morto por %s e perdeu o contrato >>",NomeORG(playerid), PlayerName(playerid),PlayerName(killerid));
                        SendFamilyMessage(PlayerInfo[playerid][pMembro], COLOR_YELLOW, string);
                        PlayerInfo[killerid][pHeadValue] = 0;
                        GotHit[killerid] = 0;
                        GetChased[killerid] = 999;
                        GoChase[playerid] = 999;
                    }
                }
            }
        }
        killerid = INVALID_PLAYER_ID;
        ShowGz(playerid);
    }
    return true;
}
public OnPlayerHaveExtraCash(playerid,extraamount)
{
 return 1;
}
/*public OnPlayerShootPlayer(Shooter,Target,Float:HealthLost,Float:ArmourLost)
{
    if(GetPlayerWeapon(Shooter) == 34)
    {
        new Float:a[2];
        GetPlayerArmour(Target,a[0]);
        if(a[0] > 0.0) return SetPlayerArmour(Target,0.0);
        GetPlayerHealth(Target,a[1]);
        if((a[1]) > 0.0) return SetPlayerHealth(Target,0.0);
    }
    if(GetPlayerWeapon(Shooter) == 31)
    {
        new Float:a[2];
        GetPlayerArmour(Target,a[0]);
        if(a[0] > 0.0) return SetPlayerArmour(Target,a[0]+5.0);
        GetPlayerHealth(Target,a[1]);
        if((a[1]) > 0.0) return SetPlayerHealth(Target,a[1]+5.0);
    }
    if(GetPlayerWeapon(Shooter) == 24)
    {
        new Float:a[2];
        GetPlayerArmour(Target,a[0]);
        if(a[0] > 0.0) return SetPlayerArmour(Target,a[0]+50.0);
        GetPlayerHealth(Target,a[1]);
        if((a[1]) > 0.0) return SetPlayerHealth(Target,a[1]+50.0);
    }
    if(GetPlayerWeapon(Shooter) == 25)
    {
        new Float:a[2];
        GetPlayerArmour(Target,a[0]);
        if(a[0] > 0.0) return SetPlayerArmour(Target,a[0]+40.0);
        GetPlayerHealth(Target,a[1]);
        if((a[1]) > 0.0) return SetPlayerHealth(Target,a[1]+40.0);
    }
    return 1;
}   */
public OnPlayerGiveDamage(playerid, damagedid, Float: amount, weaponid, bodypart)
{
    new
        Float:colete[ MAX_PLAYERS ],
        Float:vida[ MAX_PLAYERS ]
    ;
    tomoutiro[ damagedid ] = playerid;
    tempotiro[ damagedid ] = gettime() + 10;
    armatiro[ damagedid ] = weaponid;
    GetPlayerArmour( damagedid, colete[ damagedid ] );
    GetPlayerHealth( damagedid, vida[ damagedid ] );
    if( ATaser[ damagedid ] ^ true ){
        if( colete[ damagedid ] > 0 ){
            if( ( colete[ damagedid ] - amount ) < 0 ){
                new Float:soma;
                soma = amount - colete[ damagedid ];
                SetPlayerArmour( damagedid, 0 );
                SetPlayerHealth( damagedid, vida[ damagedid ] - soma );
            }
            else
                SetPlayerArmour( damagedid, colete[ damagedid ] - amount );
        }
        else{
            if( ( vida[ damagedid ] ) > 0 ){
                SetPlayerHealth( damagedid, vida[ damagedid ] - amount );
            }
            else
                SetPlayerHealth( damagedid,  0  );
        }
    }
    else{
        SetPlayerArmour( damagedid, colete[ damagedid ] );
        SetPlayerHealth( damagedid, vida[ damagedid ] );
    }
    return true;
}
/*public OnPlayerGiveDamage(playerid, damagedid, Float: amount, weaponid, bodypart)
{
    new
        Float:colete[ MAX_PLAYERS ],
        Float:vida[ MAX_PLAYERS ]
    ;
    GetPlayerArmour( damagedid, colete[ damagedid ] );
    GetPlayerHealth( damagedid, vida[ damagedid ] );
    if( colete[ damagedid ] > 0 ){
        SetPlayerArmour( damagedid, colete[ damagedid ] + amount );
    }
    else{
        if( ( vida[ damagedid ] + amount ) > 100 ){
            new Float:soma;
            soma = 100 - vida[ damagedid ];
            SetPlayerHealth( damagedid, soma );
            SetPlayerArmour( damagedid, amount - soma );
        }
        else
            SetPlayerHealth( damagedid,  vida[ damagedid ] + amount  );
    }
    switch( weaponid ){
        case 8:     amount = 32;
        case 24:    amount = 35;
        case 25:    amount = 45;
        case 29:    amount = 3;
        case 30,31: amount = 5;
        case 34:{
            if( GetDistanceBetweenPlayers( damagedid, playerid ) > 70 ){
                amount = 100;
            }
            else
                amount = 67;
        }
    }
    GetPlayerArmour( damagedid, colete[ damagedid ] );
    GetPlayerHealth( damagedid, vida[ damagedid ] );
    if( colete[ damagedid ] > 0 ){
        if( ( colete[ damagedid ] - amount ) < 0 ){
            new Float:soma;
            soma = amount - colete[ damagedid ];
            SetPlayerArmour( damagedid, 0 );
            SetPlayerHealth( damagedid, vida[ damagedid ] - soma );
        }
        else
            SetPlayerArmour( damagedid, colete[ damagedid ] - amount );
    }
    else{
        if( ( vida[ damagedid ] ) > 0 ){
            SetPlayerHealth( damagedid, vida[ damagedid ] - amount );
        }
        else
            SetPlayerHealth( damagedid,  0  );
    }
    return true;
}*/
public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid, bodypart)
{
    new str[ 128 ];
    if(issuerid != INVALID_PLAYER_ID)
    {
        PlayerShotPlayer[issuerid][playerid] = 1;
        SetPVarInt(playerid, "ultimoShoot", issuerid);
        if( GoChase[ issuerid ] == playerid && tirohitman[ playerid ] ^ issuerid ){
            tirohitman[ playerid ] = issuerid;
            tirotime[ playerid ] = gettime() + 600;
            SendClientMessage( playerid, 0xCD5C5CFF, "Atenção você esta sendo caçado(a) por um assassino, você só poderá deslogar se conseguir despista-lo." );
            SendClientMessage( playerid, 0xCD5C5CFF, "Você será avisado quando conseguir despista-lo. Caso desloque antes do tempo, você sera automaticamente punido." );
        }
        new Float: h,Float:c;
        GetPlayerArmour( playerid, c );
        GetPlayerHealth( playerid, h );
        if( issuerid ^ INVALID_PLAYER_ID ){
            if( IsACop( issuerid ) ){
                if( weaponid == 23 && Taser[ issuerid ] == true ){
                    if( ATaser[ playerid ] == false ){
                        if( IsPlayerInAnyVehicle( playerid ) )
                            RemovePlayerFromVehicle( playerid );
                        ApplyAnimation(playerid,"PED","KO_skid_front",4.1,0,1,1,1,0);
                        ATaser[ playerid ] = true;
                        SetPlayerHealth( playerid, h );
                        SetPlayerArmour( playerid, c );
                        format( str, sizeof str, "O policial %s atingiu você com a taser.", PlayerName( issuerid ) );
                        SendClientMessage( playerid, COLOR_LIGHTRED, str );
                        format( str, sizeof str, "Você atingiu %s com sua taser. O administradores foram alertados.", PlayerName( playerid ) );
                        SendClientMessage( issuerid, COLOR_LIGHTRED, str );
                        format( str, sizeof str, "Adm Aviso: O policial %s atingiu o player %s com a taser.", PlayerName( issuerid ), PlayerName( playerid ) );
                        for( new i; i < MAX_PLAYERS; i++ ){
                            if( IsPlayerConnected( i ) ){
                                if( PlayerInfo[ i ][ pAdmin ] > 0 && taserlog[ i ] == true ){
                                    SendClientMessage( i, COLOR_LIGHTRED, str );
                                }
                            }
                        }
                        SetTimerEx( "DescongelarTaser", 1000, false, "d", playerid );
                        return true;
                    }
                    else{
                        SetPlayerHealth( playerid, h );
                        SetPlayerArmour( playerid, c );
                    }
                }
            }
        }
    }
    Atirou[playerid] = issuerid;
    SetTimerEx("PegarJet", 30000,false,"i",playerid);
    return 1;
}
public OnPlayerSpawn(playerid)
{
    StopAudioStreamForPlayer(playerid);
    //TextDrawHideForPlayer(playerid, Textdrawbanner);
    if(gPlayerLogged[playerid] == 0)
        return SendClientMessage(playerid, COLOR_LIGHTRED, "** [BPG ERRO] Você precisa logar antes do Spawn**");
    if(Infoa[playerid][Arara]) { SetPlayerAttachedObject(playerid,0, 19079, 1, 0.319503, -0.089340, -0.185576, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); }
    if(sincronizando[playerid] == 1)
    {
        return 1;
    }
    temphitman[ playerid ] = 0;
    tirohitman[ playerid ] = 9999;
    tirotime[ playerid ] = 0;
    gTeam[playerid] = PlayerInfo[playerid][pTeam]; //Set the Team
    if (gTeam[playerid] == 4) //medic / criminal reset team
    {
        gTeam[playerid] = 3;
    }
    if(gPlayerLogged[playerid] == 0)
    {
        SendClientMessage(playerid, COLOR_LIGHTRED, "AdmAviso: Você foi kickado Automaticamente, Motivo: Spawn sem login");
        Kick(playerid);
        return 1;
    }
    StopAudioStreamForPlayer(playerid);
    StatusPlayer(2, playerid);
    StatusPlayer(6, playerid);
    if(gTeam[playerid] == 11 && PlayerInfo[playerid][pLider] < 1)
    {
        Hospital[playerid] = 1;
        SendClientMessage(playerid, COLOR_LIGHTRED, "Você não foi aprovado pelo líder, agora é um Civil !");
        PlayerInfo[playerid][pTeam] = 3;
        gTeam[playerid] = 3;
        if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
        SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
        SpawnPlayer(playerid);
    }
    if(gTeam[playerid] == 5)
    {
        if(PlayerInfo[playerid][pMembro] < 1)
        {
            Hospital[playerid] = 1;
            SendClientMessage(playerid, COLOR_LIGHTRED, "Você não faz parte de uma familia, agora é um Civil !");
            PlayerInfo[playerid][pTeam] = 3;
            gTeam[playerid] = 3;
            if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
            SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
            SpawnPlayer(playerid);
        }
    }
    if(gTeam[playerid] == 10)
    {
        if(PlayerInfo[playerid][pMembro] != 8 || PlayerInfo[playerid][pMembro] != 24)
        {
            Hospital[playerid] = 1;
            SendClientMessage(playerid, COLOR_LIGHTRED, "Você não faz parte de uma agencia, é um Civil !");
            PlayerInfo[playerid][pTeam] = 3;
            gTeam[playerid] = 3;
            if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
            SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
            SpawnPlayer(playerid);
        }
    }
    if(gTeam[playerid] == 2 && PlayerInfo[playerid][pMembro] > 3)
    {
        Hospital[playerid] = 1;
        SendClientMessage(playerid, COLOR_LIGHTRED, "Você não é mais um oficial, é um Civil !");
        PlayerInfo[playerid][pTeam] = 3;
        gTeam[playerid] = 3;
        if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
        SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
        SpawnPlayer(playerid);
    }
    if(gTeam[playerid] == 3)
    {
        if(PlayerInfo[playerid][pMembro] > 0 || PlayerInfo[playerid][pLider] > 0)
        {
            Hospital[playerid] = 1;
            if(PlayerInfo[playerid][pMembro] == 1) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
            else if(PlayerInfo[playerid][pMembro] == 2) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
            else if(PlayerInfo[playerid][pMembro] == 3) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
            else if(PlayerInfo[playerid][pMembro] == 4) { SetSpawnInfo(playerid, 1, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 1; gTeam[playerid] = 1; }
            else if(PlayerInfo[playerid][pMembro] == 5) { SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
            else if(PlayerInfo[playerid][pMembro] == 6) { SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
            else if(PlayerInfo[playerid][pMembro] == 8) { SetSpawnInfo(playerid, 10, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 10; gTeam[playerid] = 10; }
            else if(PlayerInfo[playerid][pMembro] == 9) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
            else if(PlayerInfo[playerid][pMembro] == 10) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
            else if(PlayerInfo[playerid][pMembro] == 11) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
            else if(PlayerInfo[playerid][pMembro] == 12) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 22; }
            else if(PlayerInfo[playerid][pMembro] == 13) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 20; }
            else if(PlayerInfo[playerid][pMembro] == 14) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 15; }
            else if(PlayerInfo[playerid][pMembro] == 15) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 16; }
            else if(PlayerInfo[playerid][pMembro] == 16) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
            else if(PlayerInfo[playerid][pMembro] == 17) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 18; }
            else if(PlayerInfo[playerid][pMembro] == 18) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 19) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 20) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 21) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 22) { SetSpawnInfo(playerid, 10, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 23) { SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 24) { SetSpawnInfo(playerid, 10, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 10; gTeam[playerid] = 10; }
            else if(PlayerInfo[playerid][pMembro] == 25) { SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 26) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 27) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 28) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
            else if(PlayerInfo[playerid][pMembro] == 29) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
            else if(PlayerInfo[playerid][pMembro] == 30) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 31) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 32) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 33) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 35) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }

            else if(PlayerInfo[playerid][pLider] == 1) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
            else if(PlayerInfo[playerid][pLider] == 2) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
            else if(PlayerInfo[playerid][pLider] == 3) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
            else if(PlayerInfo[playerid][pLider] == 4) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
            else if(PlayerInfo[playerid][pLider] == 5) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
            else if(PlayerInfo[playerid][pLider] == 6) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
            else if(PlayerInfo[playerid][pLider] == 7) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
            else if(PlayerInfo[playerid][pLider] == 8) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
            else if(PlayerInfo[playerid][pLider] == 9) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
            else if(PlayerInfo[playerid][pLider] == 10) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
            else if(PlayerInfo[playerid][pLider] == 11) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
            else if(PlayerInfo[playerid][pLider] == 12) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 22; }
            else if(PlayerInfo[playerid][pLider] == 13) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 20; }
            else if(PlayerInfo[playerid][pLider] == 14) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 15; }
            else if(PlayerInfo[playerid][pLider] == 15) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 16; }
            else if(PlayerInfo[playerid][pLider] == 16) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
            else if(PlayerInfo[playerid][pLider] == 17) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 18; }
            else if(PlayerInfo[playerid][pLider] == 18) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 19) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 20) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 21) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 22) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 23) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 24) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 25) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 26) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 27) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 28) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
            else if(PlayerInfo[playerid][pLider] == 29) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
            else if(PlayerInfo[playerid][pLider] == 30) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 31) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 32) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 33) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 35) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            SpawnPlayer(playerid);
        }
    }
    if(PlayerInfo[playerid][pSkin] > 0) { SetPlayerSkinEx(playerid, PlayerInfo[playerid][pSkin]); }
    else
    {
        if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; SetPlayerSkinEx(playerid, PlayerInfo[playerid][pSkin]); }
        else { PlayerInfo[playerid][pSkin] = 216; SetPlayerSkinEx(playerid, PlayerInfo[playerid][pSkin]); }
    }
    SetPlayerSpawn(playerid);
    SetPlayerToTeamColor(playerid);
    PlayerFixRadio(playerid);
    return 1;
}
/*forward RegistroLog(string[]);
public RegistroLog(string[])
{
    new entry[128];
    format(entry, sizeof(entry), "%s\n",string);
    new File:hFile;
    hFile = fopen("Logs/Players.log", io_append);
    fwrite(hFile, entry);
    fclose(hFile);
}*/
public KickLog(string[])
{
    new entry[128];
    format(entry, sizeof(entry), "%s\n",string);
    new File:hFile;
    hFile = fopen("Logs/kick.log", io_append);
    fwrite(hFile, entry);
    fclose(hFile);
}
forward NicksLog(string[]);
public NicksLog(string[])
{
    new entry[128];
    format(entry, sizeof(entry), "%s\n",string);
    new File:hFile;
    hFile = fopen("Logs/Nicks.log", io_append);
    fwrite(hFile, entry);
    fclose(hFile);
}
forward AtackLog(string[]);
public AtackLog(string[])
{
    new entry[128];
    format(entry, sizeof(entry), "%s\n",string);
    new File:hFile;
    hFile = fopen("Logs/AtackLog.log", io_append);
    fwrite(hFile, entry);
    fclose(hFile);
}
forward SBanLog(string[]);
public SBanLog(string[])
{
    new entry[128];
    format(entry, sizeof(entry), "%s\n",string);
    new File:hFile;
    hFile = fopen("Logs/s_ban.log", io_append);
    fwrite(hFile, entry);
    fclose(hFile);
}
public BanLog(string[])
{
    new entry[128];
    format(entry, sizeof(entry), "%s\n",string);
    new File:hFile;
    hFile = fopen("Logs/ban.log", io_append);
    fwrite(hFile, entry);
    fclose(hFile);
}
stock fdplog(string[])
{
    new entry[128];
    format(entry, sizeof(entry), "%s\n",string);
    new File:hFile;
    hFile = fopen("Logs/fdp.log", io_append);
    fwrite(hFile, entry);
    fclose(hFile);
}
public OnPlayerEnterCheckpoint(playerid)
{
    if(TaxiCallTime[playerid] > 0 && TaxiAccepted[playerid] < 999)
    {
        TaxiAccepted[playerid] = 999;
        GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
        TaxiCallTime[playerid] = 0;
        DisablePlayerCheckpoint(playerid);
    }
    else if(LocalizarTime[playerid] > 0 && LocalizarAccepted[playerid] < 999)
    {
        LocalizarAccepted[playerid] = 999;
        GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
        LocalizarTime[playerid] = 0;
        DisablePlayerCheckpoint(playerid);
    }
    else if(BusCallTime[playerid] > 0 && BusAccepted[playerid] < 999)
    {
        BusAccepted[playerid] = 999;
        GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
        BusCallTime[playerid] = 0;
        DisablePlayerCheckpoint(playerid);
    }
    else if(MedicCallTime[playerid] > 0 && MedicAccepted[playerid] < 999)
    {
        MedicAccepted[playerid] = 999;
        GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
        MedicCallTime[playerid] = 0;
        DisablePlayerCheckpoint(playerid);
    }
    else if(MechanicCallTime[playerid] > 0 && MechanicAccepted[playerid] < 999)
    {
        MechanicAccepted[playerid] = 999;
        GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
        MechanicCallTime[playerid] = 0;
        DisablePlayerCheckpoint(playerid);
    }
    else if(CopsrondaCallTime[playerid] > 0 && CopsrondaAccepted[playerid] < 999)
    {
        CopsrondaAccepted[playerid] = 999;
        GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
        CopsrondaCallTime[playerid] = 0;
        DisablePlayerCheckpoint(playerid);
    }
    else if(CP[playerid] == 5)
    {
        GameTextForPlayer(playerid, "~y~Complete a Missao indo nos Checkpoint", 2500, 1);
        CP[playerid] = 0;
        DisablePlayerCheckpoint(playerid);
    }
    else if(TruckMission[playerid] == 1)
    {
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você obteve R$10000 por entregar a carga, espere sua recarga por 5 minutos.");
        DisablePlayerCheckpoint(playerid);
        TruckMission[playerid] = 0;
        GivePlayerMoney(playerid, 10000);
        var1[playerid] = 1;
        TempoRecarga = SetTimerEx("ZerarRecarga", 180000, 0, "i", playerid);
    }
    else if(TruckMission[playerid] == 2)
    {
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você obteve R$10000 por entregar a carga, espere sua recarga por 5 minutos.");
        DisablePlayerCheckpoint(playerid);
        TruckMission[playerid] = 0;
        GivePlayerMoney(playerid, 10000);
        var1[playerid] = 1;
        TempoRecarga = SetTimerEx("ZerarRecarga", 180000, 0, "i", playerid);
    }
    else if(TruckMission[playerid] == 3)
    {
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você obteve R$10000 por entregar a carga, espere sua recarga por 5 minutos.");
        DisablePlayerCheckpoint(playerid);
        TruckMission[playerid] = 0;
        GivePlayerMoney(playerid, 10000);
        var1[playerid] = 1;
        TempoRecarga = SetTimerEx("ZerarRecarga", 180000, 0, "i", playerid);
    }
    if(PlayerToPoint(8.0,playerid,1481.1926,-1764.2736,18.7958))//Prefeitura
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~Prefeitura", 5000, 3);
    }
    if(PlayerToPoint(8.0,playerid,2780.4939,-1812.2635,11.8438))//conce
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~~h~Concessionaria", 5000, 3);
    }
    if(PlayerToPoint(8.0,playerid,1462.395751,-1012.391174,26.843799))//Banco
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Banco", 5000, 3);
    }
    if(PlayerToPoint(8.0,playerid,1546.2761,-1675.5995,13.5620))//DP
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou ao ~b~Departamento de Policia", 5000, 3);
    }
    if(PlayerToPoint(8.0,playerid,1350.4865,-1753.2505,13.3582))//24-7
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou a ~b~24-7", 5000, 3);
    }
    if(PlayerToPoint(8.0,playerid,1790.5725,-1167.3705,23.8281))//Loja de Armas
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou a ~b~Loja de Armas", 5000, 3);
    }
    if(PlayerToPoint(8.0,playerid,1068.7330,-1875.4727,13.5469))//Loja de Armas 2
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou a ~b~Loja de Armas 2", 5000, 3);
    }
    if(PlayerToPoint(8.0,playerid,2244.7954,-1663.5021,15.4766))//Binco
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~Binco", 5000, 3);
    }
    if(PlayerToPoint(8.0,playerid,550.7012,-1278.5721,17.2482))//Aluguel de Carros
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Aluguel de Carros", 5000, 3);
    }
    	if(PlayerToPoint(8.0,playerid,1411.5593,-1699.5270,13.5395))//Centro de Licencas
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Centro de Licencas", 5000, 3);
    }
    if(PlayerToPoint(8.0,playerid,1175.3164,-1323.7809,14.3906))//Hospital
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Hospital", 5000, 3);
    }
    if(PlayerToPoint(8.0,playerid,1928.826904,-1776.405517,13.546895))//Posto Sul
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou ao ~b~Posto Sul", 5000, 3);
    }
    if(PlayerToPoint(8.0,playerid,2232.5723,-1332.8412,23.9815))//Igreja
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~Igreja", 5000, 3);
    }
    if(PlayerToPoint(8.0,playerid,461.3484,-1500.9084,31.0592))//Zip
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~Zip", 5000, 3);
    }
    if(PlayerToPoint(8.0,playerid,550.7012,-1278.5721,17.2482))//Aluguel de Carros 1
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~p~|Voce chegou no ~b~Aluguel de Carros", 5000, 3);
    }
    if(PlayerToPoint(1.7,playerid,246.4971,74.3957,1003.6406))//Postao Presos DP
    {
        OnPlayerCommandText(playerid,"/pp");
        GameTextForPlayer(playerid, " ~w~Portao Celas ~b~Aberto", 5000, 3);
    }
    if(PlayerToPoint(2.0,playerid,367.3167,162.2013,1025.7891))//Postao Interno Prefeitura
    {
        OnPlayerCommandText(playerid,"/ppre");
        GameTextForPlayer(playerid, " ~w~Porta Prefeitura ~b~Aberto", 5000, 3);
    }
    else
    {
        switch (gPlayerCheckpointStatus[playerid])
        {
            case CHECKPOINT_HOME:
            {
                PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
                DisablePlayerCheckpoint(playerid);
                gPlayerCheckpointStatus[playerid] = CHECKPOINT_Nenhum;
                GameTextForPlayer(playerid, "~w~Chegou em~n~~y~Casa", 5000, 1);
            }
            case CHECKPOINT_CARRO:
            {
                PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
                DisablePlayerCheckpoint(playerid);
                gPlayerCheckpointStatus[playerid] = CHECKPOINT_Nenhum;
                GameTextForPlayer(playerid, "~w~Chegou no~n~~y~ Local", 5000, 1);
            }
        }
    }
    if (gPlayerTerminal[playerid] != 0)
    {
        if (IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2)
        {
            switch(gPlayerTerminal[playerid])
            {
                case 1:
                {
                    SetPlayerCheckpoint(playerid,1533.1049,-1610.5599,13.4766, 5.0);
                    SetTimerEx("busstoptimer", 10000, false, "i", playerid);
                    TogglePlayerControllable(playerid, 0);
                    SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
                }
                case 2:
                {
                    SetPlayerCheckpoint(playerid,1736.9674,-1601.5439,13.5225, 5.0);
                    SetTimerEx("busstoptimer", 10000, false, "i", playerid);
                    TogglePlayerControllable(playerid, 0);
                    SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
                }
                case 3:
                {
                    SetPlayerCheckpoint(playerid,1818.3682,-1694.8099,13.4831, 5.0);
                    SetTimerEx("busstoptimer", 10000, false, "i", playerid);
                    TogglePlayerControllable(playerid, 0);
                    SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
                }
                case 4:
                {
                    SetPlayerCheckpoint(playerid,1819.0150,-1872.5851,13.5023, 5.0);
                    SetTimerEx("busstoptimer", 10000, false, "i", playerid);
                    TogglePlayerControllable(playerid, 0);
                    SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
                }
                case 5:
                {
                    SetPlayerCheckpoint(playerid,1987.3519,-2169.5242,13.4809, 5.0);
                    SetTimerEx("busstoptimer", 10000, false, "i", playerid);
                    TogglePlayerControllable(playerid, 0);
                    SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
                }
                case 6:
                {
                    SetPlayerCheckpoint(playerid,2274.7886,-2274.3623,13.4837, 5.0);
                    SetTimerEx("busstoptimer", 10000, false, "i", playerid);
                    TogglePlayerControllable(playerid, 0);
                    SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
                }
                case 7:
                {
                    SetPlayerCheckpoint(playerid,1996.1328,-2163.6931,13.4833, 5.0);
                    SetTimerEx("busstoptimer", 10000, false, "i", playerid);
                    TogglePlayerControllable(playerid, 0);
                    SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
                }
                case 8:
                {
                    SetPlayerCheckpoint(playerid,1964.8201,-2077.6494,13.4842, 5.0);
                    SetTimerEx("busstoptimer", 10000, false, "i", playerid);
                    TogglePlayerControllable(playerid, 0);
                    SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
                }
                case 9:
                {
                    SetPlayerCheckpoint(playerid,1825.4634,-1906.8052,13.5044, 5.0);
                    SetTimerEx("busstoptimer", 10000, false, "i", playerid);
                    TogglePlayerControllable(playerid, 0);
                    SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
                }
                case 10:
                {
                    SetPlayerCheckpoint(playerid,1824.8920,-1705.7137,13.4842, 5.0);
                    SetTimerEx("busstoptimer", 10000, false, "i", playerid);
                    TogglePlayerControllable(playerid, 0);
                    SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
                }
                case 11:
                {
                    SetPlayerCheckpoint(playerid,1526.6500,-1612.1188,13.4907, 5.0);
                    SetTimerEx("busstoptimer", 10000, false, "i", playerid);
                    TogglePlayerControllable(playerid, 0);
                    SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
                }
                case 12:
                {
                    SetPlayerCheckpoint(playerid,1373.5723,-1729.5554,13.4952, 5.0);
                    SetTimerEx("busstoptimer", 10000, false, "i", playerid);
                    TogglePlayerControllable(playerid, 0);
                    SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
                }
                case 13:
                {
                    new conta = gPlayerTerminal[playerid]*500;
                    format(gstring,sizeof(gstring), "Você completou o ROTA do ônibus e ganhou R$%d, use /terminais para iniciar novamente a ROTA.", conta);
                    SendClientMessage(playerid, COLOR_YELLOW, gstring);
                    SendClientMessage(playerid, COLOR_YELLOW, "Use /sair para sair do ônibus.");
                    BusrouteEnd(playerid);
                }
            }
            gPlayerTerminal[playerid]++;
            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
            return 1;
        }
    }
    DisablePlayerCheckpoint(playerid);
    return 1;
}
public OnPlayerPickUpPickup(playerid, pickupid)
{
    if(pickupid == portaodpauto)
    {
        playerpickup[playerid] = pickupid;
    }
    return 1;
}
public OnPlayerSelectedMenuRow(playerid, row)
{
    new Menu:vinnyOwn = GetPlayerMenu(playerid);
    if(vinnyOwn == Principal)
    {
        switch(row) {
            case 0:
            if(IsPlayerConnected(playerid))
            {
                ShowMenuForPlayer(Coresvinny, playerid);
            }
            case 1:
            if(IsPlayerConnected(playerid))
            {
                ShowMenuForPlayer(Rodas, playerid);
            }
            case 2:
            if(IsPlayerConnected(playerid))
            {
                ShowMenuForPlayer(VolumedoCarro, playerid);
            }
            case 3:
            if(IsPlayerConnected(playerid))
            {
                ShowMenuForPlayer(Componentes, playerid);
            }
            case 4:
            if(IsPlayerConnected(playerid))
            {
                ShowMenuForPlayer(PaintJobs, playerid);
            }
        }
    }
    if(vinnyOwn == Coresvinny)
    {
        switch(row) {
            case 0:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
                GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
                GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535
                ||GetVehicleModel(GetPlayerVehicleID(playerid)) == 576
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    ChangeVehicleColorEx(car,0,0);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você Pintou seu carro de Preto.");
                    ShowMenuForPlayer(Coresvinny, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
            case 1:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    ChangeVehicleColorEx(car,1,1);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você Pintou seu carro de Branco.");
                    ShowMenuForPlayer(Coresvinny, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
            case 2:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    ChangeVehicleColorEx(car,3,3);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você Pintou seu carro de Vermelho.");
                    ShowMenuForPlayer(Coresvinny, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
            case 3:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    ChangeVehicleColorEx(car,79,79);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você Pintou seu carro de Azul.");
                    ShowMenuForPlayer(Coresvinny, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
            case 4:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    ChangeVehicleColorEx(car,86,86);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você Pintou seu carro de Verde.");
                    ShowMenuForPlayer(Coresvinny, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
                case 5:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    ChangeVehicleColorEx(car,6,6);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você Pintou seu carro de Amarelo.");
                    ShowMenuForPlayer(Coresvinny, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
                case 6:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    ChangeVehicleColorEx(car,126,126);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você Pintou seu carro de Rosa.");
                    ShowMenuForPlayer(Coresvinny, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
                case 7:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    ChangeVehicleColorEx(car,66,66);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você Pintou seu carro de Marrom.");
                    ShowMenuForPlayer(Coresvinny, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
               case 8:
                ShowMenuForPlayer(Principal, playerid);
        }
    }
    if(vinnyOwn == Rodas)
    {
        switch(row) {
            case 0:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    AddVehicleComponentEx(car,1025);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO] Você adicionou Offroad Rodas.");
                    ShowMenuForPlayer(Rodas, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
            case 1:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    AddVehicleComponentEx(car,1074);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Rodas Mega.");
                    ShowMenuForPlayer(Rodas, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
            case 2:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    AddVehicleComponentEx(car,1076);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Wires Rodas.");
                    ShowMenuForPlayer(Rodas, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
            case 3:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575
                 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    AddVehicleComponentEx(car,1078);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Twist Rodas.");
                    ShowMenuForPlayer(Rodas, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
            case 4:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    AddVehicleComponentEx(car,1081);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Groove Rodas.");
                    ShowMenuForPlayer(Rodas, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
                case 5:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    AddVehicleComponentEx(car,1082);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Import Rodas.");
                    ShowMenuForPlayer(Rodas, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
                case 6:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    AddVehicleComponentEx(car,1085);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Atomic Rodas.");
                    ShowMenuForPlayer(Rodas, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
                case 7:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    AddVehicleComponentEx(car,1097);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Virtual Rodas");
                    ShowMenuForPlayer(Rodas, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
                case 8:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    AddVehicleComponentEx(car,1098);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Access Rodas.");
                    ShowMenuForPlayer(Rodas, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
               case 9:
                ShowMenuForPlayer(Principal, playerid);
        }
    }
    if(vinnyOwn == VolumedoCarro)
    {
        switch(row) {
            case 0:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    AddVehicleComponentEx(car,1086);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Volume Alto sistema.");
                    ShowMenuForPlayer(VolumedoCarro, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
            case 1:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    AddVehicleComponentEx(car,1086);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Volume Super Alto sistema.");
                    ShowMenuForPlayer(VolumedoCarro, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
            case 2:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    AddVehicleComponentEx(car,1086);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Volume Ultra Alto sistema.");
                    ShowMenuForPlayer(VolumedoCarro, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
            case 3:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561
                 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    AddVehicleComponentEx(car,1086);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Volume King Alto sistema.");
                    ShowMenuForPlayer(VolumedoCarro, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
               case 4:
                ShowMenuForPlayer(Principal, playerid);
        }
    }
    if(vinnyOwn == Componentes)
    {
        switch(row) {
            case 0:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    AddVehicleComponentEx(car,1087);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO]:Você adicionou Suspenção para o carro.");
                    ShowMenuForPlayer(Componentes, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
            case 1:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    AddVehicleComponentEx(car,1010);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Nitro 10x de carro.");
                    ShowMenuForPlayer(Componentes, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
            case 2:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    RepairVehicle(car);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você tem reparado com êxito carro.");
                    ShowMenuForPlayer(Componentes, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
               case 3:
                ShowMenuForPlayer(Principal, playerid);
        }
    }
    if(vinnyOwn == PaintJobs)
    {
        switch(row) {
            case 0:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    ChangeVehiclePaintjobEx(car,0);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO] Voce adicionou um paintjob com sucesso no carro");
                    ShowMenuForPlayer(PaintJobs, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
            case 1:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    ChangeVehiclePaintjobEx(car,1);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO] Voce adicionou um paintjob com sucesso no carro");
                    ShowMenuForPlayer(PaintJobs, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
            case 2:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    ChangeVehiclePaintjobEx(car,2);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO] Voce adicionou um paintjob com sucesso no carro");
                    ShowMenuForPlayer(PaintJobs, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
                case 3:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    ChangeVehiclePaintjobEx(car,3);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO] Voce adicionou um paintjob com sucesso no carro");
                    ShowMenuForPlayer(PaintJobs, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
                case 4:
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561
                || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    new car = GetPlayerVehicleID(playerid);
                    ChangeVehiclePaintjobEx(car,4);
                    SendClientMessage(playerid,0xFFFF00AA,"[INFO] Voce adicionou um paintjob com sucesso no carro");
                    ShowMenuForPlayer(PaintJobs, playerid);
                }
                else
                {
                    ShowMenuForPlayer(Principal, playerid);
                }
               case 5:
                ShowMenuForPlayer(Principal, playerid);
        }
    }
    return 1;
}
public SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num)
{
 for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            SetPlayerCheckpoint(i,allx,ally,allz, radi);
            if (num != 9999)
            {
                gPlayerCheckpointStatus[i] = num;
            }
        }
    }

}
public SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi)
{
 for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(gTeam[i] == 2)
            {
                SetPlayerCheckpoint(i,allx,ally,allz, radi);
            }
        }
    }
    return 1;
}
public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
    SetTimerEx( "AtualizarTv", 3000, false, "d", playerid );
    return true;
}
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
    new string[128],ChaveCarro = PlayerInfo[playerid][pChave];
    if(gPlayerLogged[playerid] == 0)
    {
        SendClientMessage(playerid, COLOR_LIGHTRED, "AdmAviso: Você foi kickado Automaticamente, Motivo: Se moveu Sem Logar!");
        Kick(playerid);
        return 1;
    }
    for( new i; i < sizeof MongolsCar; i++ ){// Yiakin FEZ!!
        if( MongolsCar[ i ] == vehicleid ){
            if( !ispassenger && GetPlayerOrg( playerid ) ^ 22 ){
                if( PlayerInfo[ playerid ][ pAdmin ] < 1 || ( PlayerInfo[ playerid ][ pAdmin ] > 0 && admtrampando[ playerid ] == 0 ) ){
                    ClearAnimations( playerid );
                    SendClientMessage( playerid, -1, "Você não possui as chaves deste veiculo." );
                }
            }
            break;
        }
    }
    if( PlayerInfo[ playerid ][ pTimeBlock ] > gettime() ){
        new time, str[ 128 ];
        time = ( PlayerInfo[ playerid ][ pTimeBlock ] - gettime() )/60;
        format( str, sizeof str, "{EE0000}Sua conta esta bloqueado por %d minutos.", time );
        SendClientMessage( playerid, -1, str );
        new Float:p[ 3 ];
        GetPlayerPos( playerid, p[ 0 ], p[ 1 ], p[ 2 ] );
        SetPlayerPos( playerid, p[ 0 ], p[ 1 ], p[ 2 ] );
        RemovePlayerFromVehicleEx( playerid );
        return true;
    }
    if(ispassenger == 0)
    {
       for(new c = 0; c < sizeof(Carro); c++)
       {
            if(vehicleid == Carro[c][CarroID])
            {
                if(ChaveCarro == Carro[c][CarroID])
                {
                    format(string, sizeof(string), "[BPG Veículo] {FFFFFF}%s Seja Bem Vindo em Seu Veículo, %s.", PlayerName(playerid),vehName[GetVehicleModel(ChaveCarro)-400]);
                    SendClientMessage(playerid, 0x1E90FFFF, string);
                }
                else
                {
                    format(string, sizeof(string), "[BPG Veículo] {FFFFFF}Este Veículo: %s, Pertence à %s.", vehName[GetVehicleModel(vehicleid)-400], Carro[c][Dono]);
                    SendClientMessage(playerid, 0x77EEA1FF, string);
                    if (PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
                    {
                        SendClientMessage(playerid, COLOR_YELLOW,"Info: Você pode Apreender este Veículo, levando na HQ PRF e Digitando '/pcarro'!");
                    }
                }
                break;
            }
        }
    }
    return 1;
}
public OnPlayerStateChange(playerid, newstate, oldstate)
{
    if(newstate==PLAYER_STATE_PASSENGER)
        {
         if(GetPlayerWeapon(playerid) == 24)
         {
             SendClientMessage(playerid,0xFFFFFFAA,"Você não pode usar Eagle quando estiver de passageiro, sua arma foi trocada!");
             new gun,tmp;
             GetPlayerWeaponData(playerid,4,gun,tmp);
             #pragma unused tmp
             if(gun)SetPlayerArmedWeapon(playerid,gun);
             else
             SetPlayerArmedWeapon(playerid,0);
       }
    }
    if(IsACop(playerid))
    {
        SetPlayerArmedWeapon(playerid,31);
    }
    if(IsPlayerNPC(playerid)) return 1;
    /*if(gPlayerLogged[playerid] == 0)
    {
        SendClientMessage(playerid, COLOR_LIGHTRED, "AdmAviso: Você foi kickado Automaticamente, Motivo: Se moveu Sem Logar!");
        Kick(playerid);
        return 1;
    }*/
    new oldnew;
    /*if(AntCarSpam == 1)
    {
        PlayerCarSpam[playerid] ++;
        SetTimerEx("DesPlayerCarSpam", 1000,false,"i",playerid);
    }*/
    for( new i; i < MAX_PLAYERS; i ++ ){
        if( IsPlayerConnected( i ) ) {
            if( Espiando[ i ] == playerid ){
                if( PlayerInfo[ i ][ pAdmin ] > 0 ){
                    if( IsPlayerInAnyVehicle( playerid ) )
                        PlayerSpectateVehicle( i, GetPlayerVehicleID( playerid ), SPECTATE_MODE_NORMAL );
                    else
                        PlayerSpectatePlayer( i, playerid, SPECTATE_MODE_NORMAL );
                    SetPlayerInterior( i, GetPlayerInterior( playerid ) );
                    SetPlayerVirtualWorld( i, GetPlayerVirtualWorld( playerid ) );
                }
            }
        }
    }
    if(newstate == PLAYER_STATE_ONFOOT)
    {
        if(ConfigurandoCar[playerid] == 1)
        {
            GetVehiclePos(vehteste, HouseInfo[casaid[playerid]][hSpawnX], HouseInfo[casaid[playerid]][hSpawnY], HouseInfo[casaid[playerid]][hSpawnZ]);
            GetVehicleZAngle(vehteste, HouseInfo[casaid[playerid]][hSpawnA]);
            ConfigurandoCar[playerid] = 0;
            DestroyVehicle(vehteste);
            TextDrawHideForPlayer(playerid, TextPosto[playerid]);
            format(gstring, sizeof(gstring), "~n~~n~~n~~n~~n~~n~~r~~h~]]~w~Veiculo Configurado~r~~h~]]",casaid[playerid]);
            GameTextForPlayer(playerid, gstring, 7000, 3);

            HouseInfo[casaid[playerid]][hVeiculo] = CreateVehicle(HouseInfo[casaid[playerid]][hVec], HouseInfo[casaid[playerid]][hSpawnX], HouseInfo[casaid[playerid]][hSpawnY], HouseInfo[casaid[playerid]][hSpawnZ], HouseInfo[casaid[playerid]][hSpawnA], HouseInfo[casaid[playerid]][hVcol1], HouseInfo[casaid[playerid]][hVcol2], 6000000);

            SalvarCasa(casaid[playerid]);
            /*format(strlabel, sizeof(strlabel), "{FFFF00}Brasil {0000FF}Play {00FF00}Gamer\n{82fabE}Casa A Venda\nTipo: %s\nValor: R$%d\nNivel: %d\n{FFFFFF}Para comprar digite /comprarcasa",HouseInfo[casaid[playerid]][hDiscription],HouseInfo[casaid[playerid]][hValue],HouseInfo[casaid[playerid]][hLevel]);
            HouseLabel[casaid[playerid]] = Create3DTextLabel(strlabel,COR_3DLABEL,HouseInfo[casaid[playerid]][hEntrancex], HouseInfo[casaid[playerid]][hEntrancey], HouseInfo[casaid[playerid]][hEntrancez]+0.5,15.0,0);
            HousePickup[casaid[playerid]] = CreatePickup(1273, 23, HouseInfo[casaid[playerid]][hEntrancex], HouseInfo[casaid[playerid]][hEntrancey], HouseInfo[casaid[playerid]][hEntrancez],-1);     */
            HouseInfo[casaid[playerid]][hAtiva] = 1;
            //a3d();
        }
        if(TransportDuty[playerid] > 0)
        {
            if(TransportDuty[playerid] == 1)
            {
                TaxiDrivers -= 1;
            }
            else if(TransportDuty[playerid] == 2)
            {
                BusDrivers -= 1;
            }
            TransportDuty[playerid] = 0;
            format(gstring, sizeof(gstring), "* Está fora de serviço, ganhou R$%d.", TransportMoney[playerid]);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
            GivePlayerMoney(playerid, TransportMoney[playerid]);
            ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
        }
        if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
        {
            if(IsPlayerConnected(TransportDriver[playerid]))
            {
                TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
                TransportTime[TransportDriver[playerid]] = 0;
                TransportCost[TransportDriver[playerid]] = 0;
                format(gstring, sizeof(gstring), "~w~Custo da corrida~n~~r~R$%d",TransportCost[playerid]);
                GameTextForPlayer(playerid, gstring, 5000, 1);
                format(gstring, sizeof(gstring), "~w~Passageiro saiu do taxi~n~~g~ganhou R$%d",TransportCost[playerid]);
                GameTextForPlayer(TransportDriver[playerid], gstring, 5000, 1);
                GivePlayerMoney(playerid, -TransportCost[playerid]);
                TransportCost[playerid] = 0;
                TransportTime[playerid] = 0;
                TransportDriver[playerid] = 999;
            }
        }
        TelePos[playerid][0] = 0.0;
        TelePos[playerid][1] = 0.0;
    }
    if (newstate == 2 || newstate == 3)
    {
    if (oldnew == 0)
        {
        format(gstring, sizeof(gstring), "~g~%s",vehName[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
        GameTextForPlayer(playerid, gstring, 6000, 1);
        }
    }
    if(newstate == PLAYER_STATE_PASSENGER) // TAXI, BUSSES, BOTS
    {
        new name[MAX_PLAYER_NAME];
        GetPlayerName(playerid, name, sizeof(name));
        new vehicleid = GetPlayerVehicleID(playerid);
        for(new i = 0; i < MaiorID; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && TransportDuty[i] > 0)
                {
                    if(GetPlayerMoneyEx(playerid) < TransportValue[i])
                    {
                        format(gstring, sizeof(gstring), "* Você precisa de R$%d para entrar.", TransportValue[i]);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
                        RemovePlayerFromVehicleEx(playerid);
                    }
                    else
                    {
                        if(TransportDuty[i] == 1)
                        {
                            format(gstring, sizeof(gstring), "* Pagou R$%d para o taxista.", TransportValue[i]);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
                            format(gstring, sizeof(gstring), "* Passageiro %s entrou no Taxi.", name);
                            SendClientMessage(i, COLOR_LIGHTBLUE, gstring);
                            TransportTime[i] = 1;
                            TransportTime[playerid] = 1;
                            TransportCost[playerid] = TransportValue[i];
                            TransportCost[i] = TransportValue[i];
                            TransportDriver[playerid] = i;
                        }
                        else if(TransportDuty[i] == 2)
                        {
                            format(gstring, sizeof(gstring), "* Pagou R$%d para o Motorista De Onibus.", TransportValue[i]);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
                            format(gstring, sizeof(gstring), "* Passageiro %s entrou no Onibus.", name);
                            SendClientMessage(i, COLOR_LIGHTBLUE, gstring);
                        }
                        GivePlayerMoney(playerid, - TransportValue[i]);
                        TransportMoney[i] += TransportValue[i];
                    }
                }
            }
        }
    }
    if(newstate == PLAYER_STATE_DRIVER)
    {// 38 / 49 / 56 = SS
        new newcar = GetPlayerVehicleID(playerid);
        new oldcar = gLastCar[playerid];
        new HouseCar = PlayerInfo[playerid][pPHousekey];
        TelePos[playerid][0] = 0.0;
        TelePos[playerid][1] = 0.0;
        new carid=GetVehicleModel(newcar);
        if(carid == 481 || carid == 509 || carid == 510) { }
        else
        {
            if( PlayerInfo[ playerid ][ pAdmin ] < 1 || ( PlayerInfo[ playerid ][ pAdmin ] > 0 && admtrampando[ playerid ] == 0 ) ){
                if(IsAAztecaCar(newcar))
                {
                    if(!IsAAzteca(playerid))
                    {
                        SendClientMessage(playerid, COR_AZTECAS, "Você não é um Azteca, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsAOniCar(newcar))
                {
                    if(!IsAOni(playerid))
                    {
                        SendClientMessage(playerid, COLOR_GRAD2, "Você não é um Motorista De Onibus, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsAMecCar(newcar))
                {
                    if(PlayerInfo[playerid][pEmprego] != 5)
                    {
                        SendClientMessage(playerid, COLOR_GRAD2, "Você não é um Mecânico, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsAGMOBCar(newcar))
                {
                    if(GetPlayerOrg(playerid) != 19)
                    {
                        SendClientMessage(playerid, 0xc2091600, "Você não é do Comando Vermelho, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsAPCCCar(newcar))
                {
                    if(GetPlayerOrg(playerid) != 20)
                    {
                        SendClientMessage(playerid, 0xCCFF99FF, "Você não é do PCC, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsASmiCar(newcar))
                {
                    if(GetPlayerOrg(playerid) != 26)
                    {
                        SendClientMessage(playerid, 0xCCFF99FF, "Você não é da HunTerS, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsAPsykOCar(newcar))
                {
                    if(!IsAPsykO(playerid))
                    {
                        SendClientMessage(playerid, 0xA52A2AFF, "Você não é da KiLLeRs, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsAFaTaL_ImperiuMCarCar(newcar))
                {
                    if(GetPlayerOrg(playerid) != 27)
                    {
                        SendClientMessage(playerid, 0xA52A2AFF, "Você não é da FaTal DangeR, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsAFakersCar(newcar))
                {
                    if(GetPlayerOrg(playerid) != 29)
                    {
                        SendClientMessage(playerid, 0xCCFF99FF, "Você não é da Snake, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsACaminhoneiroCar(newcar))
                {
                    if(!IsACaminhoneiro(playerid))
                    {
                        SendClientMessage(playerid, COLOR_GRAD2, "Você não é um Caminhoneiro, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                    else
                    {
                        SendClientMessage(playerid, -1, "<!> Você pode ligar o Computador com informações do caminhão a qualquer Momento (/infocam)!");
                    }
                }
                else if(IsAJornalCar(newcar))
                {
                    if(!IsAJornal(playerid))
                    {
                        SendClientMessage(playerid, COR_REP, "Você não é um Repórter, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsAGICar(newcar))
                {
                    if(!IsAHam(playerid))
                    {
                        SendClientMessage(playerid, COR_GI, "Você não é do Guerrilheiros Israelitas, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsABallasCar(newcar))
                {
                    if(!IsABallas(playerid))
                    {
                        SendClientMessage(playerid, COR_BALLAS, "Você não é dos Ballas, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsACaminhaoCar(newcar))
                {
                    if(PlayerInfo[playerid][pEmprego] != 11)
                    {
                        SendClientMessage(playerid, COLOR_GRAD2, "Você não é um Caminhoneiro, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsAReggaeCar(newcar))
                {
                    if(!IsAReggae(playerid))
                    {
                        SendClientMessage(playerid, COR_Reggae, "Você não é dos Dark Gods, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsAVagosCar(newcar))
                {
                    if(!IsAVagos(playerid))
                    {
                        SendClientMessage(playerid, COR_VAGOS, "Você não é dos Vagos, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsAStrikerSCar(newcar))
                {
                    if(!IsAStrikerS(playerid))
                    {
                        SendClientMessage(playerid, COR_MONK, "Você não é dos Justiceiros, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsATaxiCar(newcar))
                {
                    if(!IsATaxi(playerid))
                    {
                        SendClientMessage(playerid, COLOR_TAXISTA, "Você não é um Taxista, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsAFDCar(newcar))
                {
                    if(!IsAFD(playerid))
                    {
                        SendClientMessage(playerid, COR_FD, "Você não é um Storm, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsAHelperCar(newcar))
                {
                    if(!IsAHelper(playerid))
                    {
                        SendClientMessage(playerid, COR_HELPER, "Você não é um Helper, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsAAdminCar(newcar))
                {
                    if(!IsAAdmin(playerid))
                    {
                        SendClientMessage(playerid, COR_ADMIN, "Você não é um Admin, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsAPsycoCar(newcar))
                {
                    if(!IsAPsyco(playerid))
                    {
                        SendClientMessage(playerid, COR_Killers, "Você não é um DesTroyeR, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsAGrooveCar(newcar))
                {
                    if(!IsAGroove(playerid))
                    {
                        SendClientMessage(playerid, COR_GRO, "Você não é da Groove Street, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsAAlCar(newcar))
                {
                    if(!IsAAl(playerid))
                    {
                        SendClientMessage(playerid, COR_AL, "Você não é da FARC, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsAHellCar(newcar))
                {
                    if(GetPlayerOrg(playerid) != 21)
                    {
                        SendClientMessage(playerid, 0xAA0000AA, "Você não é dos Hells Angels, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsASonsCar(newcar))
                {
                    if(GetPlayerOrg(playerid) != 23)
                    {
                        SendClientMessage(playerid, COR_SONS, "Você não é dos Sons Of Anarchy, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsADriftCar(newcar))
                {
                    if(GetPlayerOrg(playerid) != 25)
                    {
                        SendClientMessage(playerid, COR_SONS, "Você não é dos Drifters, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsACopCar(newcar))
                {
                    if(!IsACop(playerid))
                    {
                        SendClientMessage(playerid, COR_PM, "Você não é um policial, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsAHitCar(newcar))
                {
                    if(!IsAHit(playerid))
                    {
                        SendClientMessage(playerid, COR_HITMAN, "Você não é um Hitman, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsATriadCar(newcar))
                {
                    if(GetPlayerOrg(playerid) != 24)
                    {
                        SendClientMessage(playerid, COR_TRIAD, "Você não é um Triads, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsAYaCar(newcar))
                {
                    if(!IsAYa(playerid))
                    {
                        SendClientMessage(playerid, COR_YAK, "Você não é da Máfia Japonesa, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsAMLHCar(newcar))
                {
                    if(!IsAMLH(playerid))
                    {
                        SendClientMessage(playerid, COR_COSA, "Você não é da Máfia Russa, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsAGOVCar(newcar))
                {
                    if(!IsAGOV(playerid))
                    {
                        SendClientMessage(playerid, COR_PREFEITURA, "Você não é do governo, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                else if(IsAnAmbulanceCar(newcar))
                {
                    if(!IsAAmbu(playerid))
                    {
                        SendClientMessage(playerid, COR_SAMU, "Você não é um Médico, por isso não tem a chave desse veículo!");
                        RemovePlayerFromVehicleEx(playerid);
                    }
                }
                if(IsABlindadoCar(newcar))
                {
                    if(IsACop(playerid))
                    {
                        SendClientMessage(playerid, COR_PM, "Este veículo Possui Sistema de Blindagem, Será mais difícil Explodir!");
                        SetVehicleHealth(newcar, 2000.0);
                    }
                }
            }
        }
        if(IsAPlane(newcar))
        {
            if(PlayerInfo[playerid][pFlyLic] < 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não tem licença para Voar!");
                SendClientMessage(playerid, COLOR_GREY, "Para Adquirir Licenças Digite /gps Centro de Licencas!");
                SetPlayerCriminal(playerid,255,"Voando Sem Licença");
            }
        }
        else
        {
            if(PlayerInfo[playerid][pCarLic] < 1)
            {
                if(PlayerDrunk[playerid] >= 1)
                {
                    SetPlayerCriminal(playerid,255, "Dirigindo Bebado");
                }
                if(IsACivilCar(newcar)) { }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "Você não tem licença para dirigir carro!");
                    SendClientMessage(playerid, COLOR_GREY, "Para Adquirir Licenças Digite /gps Centro de Licencas!");
                    format(gstring, sizeof(gstring), "Você cometeu um crime ({80F0FF} Dirigindo Sem Carteira {FF4800}). Relato:{B3FFFF} Camêras de Segurança");
                    SendClientMessage(playerid, 0xFF4800FF, gstring);
                    if(WantedPoints[playerid] < 6) WantedPoints[playerid] += 1;
                    PlayerInfo[playerid][pCrimes] += 1;
                    SetPlayerWantedLevel(playerid, WantedPoints[playerid]);
                }
            }
            else if(PlayerDrunk[playerid] >= 1)
            {
                SetPlayerCriminal(playerid,255, "Dirigindo Bêbado");
            }
        }
        new alugarstr[180];
        if(IsAAlugCar(newcar))
        {
            if (HireCar[playerid] != newcar)
            {
                format(gstring, sizeof(gstring), "~w~Voce pode alugar esse carro~n~Custo:~g~$%d~n~~w~para alugar o carro use ~g~/alugarcarro~w~~n~para sair use ~r~/sair",SBizzInfo[1][sbEntranceCost]);
                TogglePlayerControllable(playerid, 0);
                GameTextForPlayer(playerid, gstring, 5000, 3);
                format(alugarstr,sizeof(alugarstr), "{FF8000}Você pode alugar este carro.\nPreço:{00FFFF} %d\n{FF8000}Caso queira alugar aperte em '{00FFFF}Alugar{FF8000}'!\nCaso contrário aperte em '{00FFFF}Sair{FF8000}'!",SBizzInfo[1][sbEntranceCost]);
                ShowPlayerDialog(playerid,643,DIALOG_STYLE_MSGBOX,"Aluguel de Carros",alugarstr,"Alugar","Sair");
            }
        }

        if(IsAAlugHeli(newcar))
        {
            if (HireCar[playerid] != newcar)
            {
                format(gstring, sizeof(gstring), "~w~Voce pode alugar esse heli~n~Custo:~g~$%d~n~~w~para alugar o heli use ~g~/alugarheli~w~~n~para sair use ~r~/sair",SBizzInfo[19][sbEntranceCost]);
                TogglePlayerControllable(playerid, 0);
                GameTextForPlayer(playerid, gstring, 5000, 3);
                format(alugarstr,sizeof(alugarstr), "{FF8000}Você pode alugar este veiculo.\nPreço:{00FFFF} %d\n{FF8000}Caso queira alugar aperte em '{00FFFF}Alugar{FF8000}'!\nCaso contrário aperte em '{00FFFF}Sair{FF8000}'!",SBizzInfo[1][sbEntranceCost]);
                ShowPlayerDialog(playerid,643,DIALOG_STYLE_MSGBOX,"Aluguel de Carros",alugarstr,"Alugar","Sair");
            }
        }
        else if(IsACivilCar(newcar))
        {
            if(GetPlayerOrg(playerid) != 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "Este carro é Reservado apenas Para Civis!");
                RemovePlayerFromVehicleEx(playerid);
            }
            else
            {
                SendClientMessage(playerid, 0xFFD3A8AA, "Novato, você poderá chegar aos locais digitando /gps ou falando com um admin /relatorio");
                SendClientMessage(playerid, 0xFFD3A8AA, "Para selecionar alguma opção no /gps - aperte a tecla space ! Maior tecla de seu teclado !");
                SendClientMessage(playerid, 0x55FFAAAA, "Consiga Suas Licenças! /gps Centro de Licenças.");
            }
        }
        if(oldcar != 301)
        {
            if((HouseCar != oldcar && oldcar != 0) && (HireCar[playerid] != oldcar && newcar != HouseCar))
            {
                if(gLastDriver[oldcar] == playerid && oldcar != newcar)
                {
                    gLastDriver[oldcar] = 300;
                    VTrancado[oldcar] = 0;
                    UnLockCar(oldcar);
                }
            }
        }
        gLastCar[playerid] = newcar;
        gLastDriver[newcar] = playerid;
    }
    if(newstate == PLAYER_STATE_SPAWNED && logouagora[playerid] ==0 )
    {
        if(sincronizando[playerid] == 1)
        {
        return 1;
        }
        new Float: lwx, Float:lwy, Float:lwz;
        GetPlayerPos(playerid, lwx, lwy, lwz);
        if((lwz > 530.0 && PlayerInfo[playerid][pInt] == 0) || PlayerToPoint(1000.0, playerid, -1041.9,-1868.4,79.1)) //the highest land point in sa = 526.8
        {
            if(sincronizando[playerid] == 1)
            {
            return 1;
            }
            SetPlayerSpawn(playerid);
        }
        TelePos[playerid][0] = 0.0;
        TelePos[playerid][1] = 0.0;
        gPlayerSpawned[playerid] = 1;
        SafeTime[playerid] = 60;
    }
    return 1;
}

forward OnPlayerChangeVehicle(playerid, vehicleid);
public OnPlayerChangeVehicle(playerid, vehicleid)
{
    #pragma unused vehicleid
    if(gPlayerLogged[playerid] == 0)
    {
        SendClientMessage(playerid, COLOR_LIGHTRED, "AdmAviso: Você foi kickado Automaticamente, Motivo: Se moveu Sem Logar!");
        Kick(playerid);
    }
    if(PlayerInfo[playerid][pAdmin] != 3000)
    {
        if((GetTickCount() - vehicleTime[playerid]) < 250)
        {
            GetPlayerPos(playerid, xpoz, ypoz, zpoz);
            SendClientMessage(playerid, COLOR_LIGHTRED, "Você foi desconectado do servidor acusado de Car Spam");
            format(gstring,sizeof(gstring), "AntiAttack:%s[ID: %d] Poder Ser xiter Car Spam, e Foi Banido!",PlayerName(playerid),playerid);
            ABroadCast(COLOR_LIGHTRED, gstring,1);
            format(gstring,sizeof(gstring),"Inf: Coordenadas, X:%f Y:%f Z:%f, Ant Xiter: 1, Digite /irxiter ir Até o Acusado",xpoz,ypoz,zpoz);
            ABroadCast(0x00F2F2AA, gstring,1);
            getdate(year, month, day);
            format(gstring, sizeof(gstring), "AdmAviso: %s Acusação Car Spam (%d-%d-%d)", PlayerName(playerid),day,month,year);
            AtackLog(gstring);
            Kick(playerid);
        }
    }
    vehicleTime[playerid] = GetTickCount();
}

public HireCost(carid)
{
    switch (carid)
    {
        case 69:
        {
            return 90000; //Ford-GT
        }
        case 70:
        {
            return 130000; //infernus
        }
        case 71:
        {
            return 100000; //Diablo
        }
        case 72:
        {
            return 80000;
        }
        case 73:
        {
            return 70000;
        }
        case 74:
        {
            return 60000;
        }
    }
    return 0;
}

public CarCheck()//ATUAL
{
    for(new j = 0; j<MaiorID; j++)
    {
        if(IsPlayerConnected(j))
        {
            new Float:health;
            GetPlayerHealth(j, health);
            if(PlayerInfo[j][pDoenca]==1)
            {
                GetPlayerHealth(j, health);
                SetPlayerHealth(j, health - 4.0);
                SendClientMessage(j, COLOR_LIGHTBLUE, "* Perdeu 4 de Saúde por DST - Vá até um hospital ou procure um médico para se curar");
            }
            else if(PlayerInfo[j][pDoenca]==2)
            {
                GetPlayerHealth(j, health);
                SetPlayerHealth(j, health - 8.0);
                SendClientMessage(j, COLOR_LIGHTBLUE, "* Perdeu 8 de Saúde por DST - Vá até um hospital ou procure um médico para se curar");
            }
            else if(PlayerInfo[j][pDoenca]==3)
            {
                GetPlayerHealth(j, health);
                SetPlayerHealth(j, health - 12.0);
                SendClientMessage(j, COLOR_LIGHTBLUE, "* Perdeu 12 de Saúde por DST - Vá até um hospital ou procure um médico para se curar");
            }
            else if(PlayerInfo[j][pDoenca]==4)
            {
                GetPlayerHealth(j, health);
                SetPlayerHealth(j, health - 5.0);
                SendClientMessage(j, COLOR_LIGHTBLUE, "* Perdeu 5 de Saúde por Cirrose - Vá até um hospital ou procure um médico para se curar.");
            }
            else if(PlayerInfo[j][pDoenca]==5)
            {
                GetPlayerHealth(j, health);
                SetPlayerHealth(j, health - 5.0);
                SendClientMessage(j, COLOR_LIGHTBLUE, "* Perdeu 5 de Saúde por Câncer de Pulmão - Vá até um hospital ou procure um médico para se curar.");
            }
            if(GetPlayerMoneyEx(j) < 0)
            {
                if(MoneyMessage[j]==0)
                {
                    format(gstring, sizeof(gstring), "Você esta devendo: R$%d Se não tiver essa grana você vai preso automaticamente!", GetPlayerMoneyEx(j));
                    SendClientMessage(j, COLOR_LIGHTRED, gstring);
                    MoneyMessage[j] = 1;
                }
            }
            else
            {
                MoneyMessage[j] = 0;
            }
        }
    }
    for(new c = 1; c < 254; c++)
    {
        if (gLastDriver[c] >= 300)
        {
            gLastDriver[c]++;
        }
        //forndowner = -1;
    }
    return 1;
}

public CarInit()
{
    for(new c = 1; c < 254; c++)
    {
        gLastDriver[c] = 299;
    }
    gLastDriver[301]=255;
    return 1;
}

public CarTow(carid)
{
 for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(IsPlayerInVehicle(i, carid) || HireCar[i] == carid)
            {
                gLastDriver[carid] = 9999;
                return 0;
            }
        }
    }
    SetVehiclePos(carid,HouseCarSpawns[carid-1][0], HouseCarSpawns[carid-1][1], HouseCarSpawns[carid-1][2]);
    SetVehicleZAngle(carid, HouseCarSpawns[carid-1][3]);
    LinkVehicleToInterior(carid, 0);
    return 1;
}
public OnPlayerExitVehicle(playerid, vehicleid)
{
    if (GetPlayerState(playerid) == 1)
    {
        return 1;
    }
    if (gPlayerTerminal[playerid] != 0)
    {
        BusrouteEnd(playerid);
    }
    TogglePlayerControllable(playerid, 1);
    return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
    if(IsPlayerNPC(playerid))
    {
        SpawnPlayer(playerid);
        return 1;
    }
    if (RegistrationStep[playerid] == 0 && gPlayerLogged[playerid] != 1)
    {
        ClearChatbox(playerid, 20);
        SetPlayerPos(playerid, 1699.2,1435.1, 10.7);
        new plname[MAX_PLAYER_NAME];
        GetPlayerName(playerid,loginname,sizeof(loginname));
        //PlayerPlaySound(playerid, 1183, 0.0, 0.0, 0.0);
        //GameTextForPlayer(playerid," ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~p~b~g~r~y~a~r~s~b~i~y~l ~p~m~b~a~r~g~g~i~p~c ~y~g~p~a~r~m~b~e~g~s ~n~~r~r~p~p~b~g ~w~v1.0",10000,6);
        //GameTextForPlayer(playerid," ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~g~ Brasil ~b~Play~r~~h~ Gamer ~n~~p~RPG v1.0",10000,6);
        SendClientMessage(playerid, 0xFFFFFFFF, " ");
        SendClientMessage(playerid, 0xFFFFFFFF, " ");
        SendClientMessage(playerid, 0xFFFFFFFF, "- {ff8282}INFORMAÇÕES DO SERVIDOR{FFFFFF}");
        format(strvinny,sizeof(strvinny),"- Último GMX: {ff8282}%d/%d/%d  {FFFFFF}Horário:{ff8282} %d:%d:%d",AnoGMX, MesGMX, DiaGMX, HoraGMX, MinutoGMX, SegundoGMX);
        SendClientMessage(playerid,0xFFFFFFFF,strvinny);
        SendClientMessage(playerid, 0xFFFFFFFF, "- IP do Servidor: {ff8282}Em Criação");
        SendClientMessage(playerid, 0xFFFFFFFF, "- Site do Servidor: {ff8282}bpg-rapidosemortais.forumeiros.com");
        format(strvinny,sizeof(strvinny),"- Jogadores Online: {ff8282}%d",ContarJogadores());
        SendClientMessage(playerid,0xFFFFFFFF,strvinny);
        if(EleicoesOn == 1)
        {
            SendClientMessage(playerid, 0xFFFFFFFF, "- Eleição: {ff8282}Em andamento");
        }
        else
        {
            SendClientMessage(playerid, 0xFFFFFFFF, "- Eleição: {ff8282}Desativada");
        }
        if(Morro[Guerra] == 1)
        {
            SendClientMessage(playerid, 0xFFFFFFFF, "- Guerra do Morro: {ff8282}Em andamento");
        }
        else
        {
            SendClientMessage(playerid, 0xFFFFFFFF, "- Guerra do Morro: {ff8282}Finalizada");
        }
        SendClientMessage(playerid, 0xFFFFFFFF, " ");
        SendClientMessage(playerid, 0xFFFFFFFF, " ");
        new strtexton[64];
        format(strtexton,sizeof(strtexton),"~b~~h~~h~~h~Players: ~g~~h~~h~%d",ContarJogadores());
        TextDrawSetString(TextPlayersOn, strtexton);
        TextDrawShowForPlayer(playerid, NovaVersao);
        TextDrawShowForPlayer(playerid, TextPlayersOn);
        TextDrawShowForPlayer(playerid, TextLogin);
        TextDrawShowForPlayer(playerid, TextLogin1);
        GetPlayerName(playerid, plname, sizeof(plname));
        format(gstring,sizeof(gstring), OpenAccPlayer, plname);
        if(dini_Exists(gstring))
        {
            format(loginstring,sizeof(loginstring),"  {FFFFFF}Seja bem-vindo ao {1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer v1.0\n{FFFFFF}            bpg-rapidosemortais.forumeiros.com\n\n{FFFFFF}                   Conta: {31611b}Registrada!\n{FFFFFF}                   Nick:{2657a9} %s\n\n{FFFFFF}                     Digite sua senha.\n{a09f2c}    ATENÇÃO! LIMITE DE TENTATIVAS [6]",loginname);
            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD,"            {1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer v1.0",loginstring,"Entrar","Sair");
            TogglePlayerControllable(playerid, 0);
        }
        else
        {
            format(loginstring,sizeof(loginstring),"  {FFFFFF}Seja bem-vindo ao {1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer v1.0\n{FFFFFF}            bpg-rapidosemortais.forumeiros.com\n\n{FFFFFF}                 Conta: {c31616}Não registrada!\n{FFFFFF}                 Nick:{2657a9} %s\n\n{FFFFFF}                   Escolha sua senha.\n{a09f2c}    *LEMBRE-SE DE ANOTAR SUA SENHA!*",loginname);
            ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT,"            {1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer v1.0",loginstring,"Registrar","Cancelar");
            TogglePlayerControllable(playerid, 0);
        }
        SetPlayerInterior(playerid, 0);
        SetPlayerVirtualWorld(playerid, 0);
        TogglePlayerControllable(playerid, 0);
        /*SetPlayerPos(playerid,1258.5939,-1397.4402,31.5672);
        SetPlayerCameraPos(playerid, 1342.3231, -847.4993, 91.1653);
        SetPlayerCameraLookAt(playerid, 1342.7404, -848.4073, 90.7405);
        //SetTimerEx("MoverCamera", 2700,false,"i",playerid);                */
        InterpolateCameraPos(playerid, 1442.4664, -866.5638, 89.6085, 1416.4031,-870.2377,91.1348, 6000, CAMERA_CUT);
        InterpolateCameraPos(playerid, 1416.4031,-870.2377,91.1348, 1342.3231, -847.4993, 91.1653, 6000, CAMERA_CUT);
        InterpolateCameravinny(playerid, 1415.4329,-806.9493,85.0470, 1342.7404, -848.4073, 90.7405, 10000);
        PlayerInfo[playerid][pSkin] = Peds[classid][0];
        SetPlayerTeamFromClass(playerid,classid);
    }
    else
    {
        Hospital[playerid] = 1;
        SpawnPlayer(playerid);
    }
    return false;
}

public SetupPlayerForClassSelection(playerid)
{
}

//---------------------------------------------------------

public SetPlayerTeamFromClass(playerid,classid)
{
    if (classid >= 1 && classid <= 11)
    {
        gTeam[playerid] = 11; //admin
        PlayerInfo[playerid][pTeam] = 11;
    }
    else
    {
        gTeam[playerid] = 3;
        PlayerInfo[playerid][pTeam] = 3;
    }
}

//---------------------------------------------------------

public SetPlayerCriminal(playerid,declare,reason[])
{
    if(IsPlayerConnected(playerid) && !IsACop(playerid))
    {
        if(WantedPoints[playerid] < 20) WantedPoints[playerid] += 1;
        PlayerInfo[playerid][pCrimes] += 1;
        new turned[MAX_PLAYER_NAME];
        new turner[MAX_PLAYER_NAME];
        new location[MAX_ZONE_NAME];
        GetPlayer2DZone(playerid, location, MAX_ZONE_NAME);
        strmid(PlayerCrime[playerid][pAccusedof], reason, 0, strlen(reason), 255);
        GetPlayerName(playerid, turned, sizeof(turned));
        if (declare == 9999)
        {
            format(turner, sizeof(turner), "Câmeras de Segurança");
            strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
        }
        else
        {
            if(IsPlayerConnected(declare))
            {
                GetPlayerName(declare, turner, sizeof(turner));
                strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
                strmid(PlayerCrime[declare][pBplayer], turned, 0, strlen(turned), 255);
                strmid(PlayerCrime[declare][pAccusing], reason, 0, strlen(reason), 255);
            }
        }
        format(gstring, sizeof(gstring), "Você cometeu um crime ({80F0FF} %s {FF4800}). Relato:{B3FFFF} %s",reason,turner);
        SendClientMessage(playerid, 0xFF4800FF, gstring);
        SetPlayerWantedLevel(playerid, WantedPoints[playerid]);
        format(gstring, sizeof(gstring), "Nível de procurado:{00EAEA} %d", WantedPoints[playerid]);
        SendClientMessage(playerid, 0xFEBF01FF, gstring);
        //ProcuradoPlayer(playerid);
        for(new i = 0; i < MaiorID; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(IsACop(i) && admtrampando[i] != 1 && !SuOff[i])
                {
                    format(gstring, sizeof(gstring), "HQ - Todas as unidades: Relato:{01E8F3} %s",turner);
                    SendClientMessage(i, 0x0476F4FF, gstring);
                    format(gstring, sizeof(gstring), "HQ - Crime:{01E8F3} %s{0476F4}, Suspeito:{01E8F3} %s",reason,turned);
                    SendClientMessage(i, 0x0476F4FF, gstring);
                    if(GetPlayerInterior(playerid) == 0)
                    {
                        format(gstring, sizeof(gstring), "Local:{01E8F3} %s{0476F4}, Em Interior:{01E8F3} Não",location);
                        SendClientMessage(i, 0x0476F4FF, gstring);
                    }
                    else
                    {
                        format(gstring, sizeof(gstring), "Local:{01E8F3} %s{0476F4}, Em Interior:{01E8F3} Sim",location);
                        SendClientMessage(i, 0x0476F4FF, gstring);
                    }
                }
            }
        }
    }//not connected
}
//---------------------------------------------------------

public SetPlayerFree(playerid,declare,reason[])
{
    if(IsPlayerConnected(playerid))
    {
        ClearCrime(playerid);
        new turned[MAX_PLAYER_NAME];
        new turner[MAX_PLAYER_NAME];
        if (declare == 9999)
        {
            format(turner, sizeof(turner), "190");
        }
        else
        {
            if(IsPlayerConnected(declare))
            {
                GetPlayerName(declare, turner, sizeof(turner));
            }
        }
        GetPlayerName(playerid, turned, sizeof(turned));
        //format(gstring, sizeof(gstring), "SMS: %s, Porque Você %s, Você Não é Mais um Criminoso, Sender: MOLE (555)",turned,reason);
        RingTone[playerid] = 20;
        SetPlayerWantedLevel(playerid, 0);
        //SendClientMessage(playerid, COLOR_YELLOW, gstring);
        for(new i = 0; i < MaiorID; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(IsACop(i))
                {
                    format(gstring, sizeof(gstring), "<< HQ: Todas As Unidades, Oficial %s Completou a sentença >>",turner);
                    SendClientMessage(i, COLOR_DBLUE, gstring);
                    format(gstring, sizeof(gstring), "HQ: %s Foi processado, %s",turned,reason);
                    SendClientMessage(i, COLOR_DBLUE, gstring);
                    SetPlayerWantedLevel(playerid, 0);
                }
            }
        }
    }
}

public RingToner()
{
 for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(RingTone[i] != 6 && RingTone[i] != 0 && RingTone[i] < 11)
            {
                RingTone[i] = RingTone[i] -1;
                PlayerPlaySound(i, 1138, 0.0, 0.0, 0.0);
            }
            if(RingTone[i] == 6)
            {
                RingTone[i] = RingTone[i] -1;
            }
            if(RingTone[i] == 20)
            {
                RingTone[i] = RingTone[i] -1;
                PlayerPlaySound(i, 1139, 0.0, 0.0, 0.0);
            }
        }
    }
    SetTimer("RingTonerRev", 1000, 0);
    return 1;
}
forward portaoadminclosed();
public portaoadminclosed()
{
    MoveDynamicObject(portaoadmin,1535.0999756 , -1451.4000244 , 15.1999998, 2);//PortaoClosed
 return 1;
}
public RingTonerRev()
{
 for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(RingTone[i] != 5 && RingTone[i] != 0 && RingTone[i] < 10)
            {
                RingTone[i] = RingTone[i] -1;
                PlayerPlaySound(i, 1137, 0.0, 0.0, 0.0);
            }
            if(RingTone[i] == 5)
            {
                RingTone[i] = RingTone[i] -1;
            }
            if(RingTone[i] == 19)
            {
                PlayerPlaySound(i, 1139, 0.0, 0.0, 0.0);
                RingTone[i] = 0;
            }
        }
    }
    SetTimer("RingToner", 1000, 0);
    return 1;
}

public OtherTimer()
{
    //TextPropertys();
    new Float:oldposx, Float:oldposy, Float:oldposz;
    for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(NaCamera[i] == 1)
            {
                TextDrawHideForPlayer(i, TextRec[i]);
                NaCamera[i] = 0;
            }
            if(NaCamera[i] == 5)
            {
                TextDrawShowForPlayer(i, TextRec[i]);
                NaCamera[i] = 6;
            }
            else if(NaCamera[i] == 6)
            {
                TextDrawHideForPlayer(i, TextRec[i]);
                NaCamera[i] = 5;
            }
            if(PlayerInfo[i][pConta] > 999999999 && ComecouConversao[i] == 0)
            {
                TempoCheckGB[i] = SetTimerEx("CheckGB", 1000, 1, "i", i);
                ComecouConversao[i] = 1;
                IniciouGB[i] = 0;
                TerminouGB[i] = 0;
            }
            if(GetPlayerMoney(i) > 9999999 && ComecouConversao2[i] == 0)
            {
                TempoCheckGB2[i] = SetTimerEx("CheckCashGB", 1000, 1, "i", i);
                ComecouConversao2[i] = 1;
                IniciouGB2[i] = 0;
                TerminouGB2[i] = 0;
            }
            if(admtrampando[i] == 1)
            {
                SetPlayerHealth(i, 50000);
                if(IsPlayerInAnyVehicle(i) && GetPlayerState(i) != PLAYER_STATE_PASSENGER)
                {
                    SetVehicleHealth(GetPlayerVehicleID(i) , 1000.0);
                }
            }
            if(helptrampando[i] == 1)
            {
                SetPlayerHealth(i, 50000);
                SetVehicleHealth(GetPlayerVehicleID(i) , 1000.0);
            }
            if(PlayerInfo[i][pJailed] > 0)
            {
                SetPlayerHealth(i, 999);
            }
            //new vehicleid = GetPlayerVehicleID(i);
            if(SafeTime[i] > 0)
            {
                SafeTime[i]--;
            }
            if(SafeTime[i] == 1)
            {
                if(gPlayerConta[i] == 1 && gPlayerLogged[i] == 0)
                {

                }
            }
            if(PlayerInfo[i][pLocal] != 9999 && PlayerInfo[i][pInt] != 0)
            {
                new House = PlayerInfo[i][pLocal];
                GetPlayerPos(i, oldposx, oldposy, oldposz);
                if(oldposz != 0.0)
                {
                    if(oldposz < 600.0)
                    {
                        if(House > 10000)
                        {
                            new tmpcar = GetPlayerVehicleID(i);
                            if (!PlayerToPoint(6, i,1040.6,-1021.0,31.7) && House == 10001 ||!PlayerToPoint(6, i,-2720.5,217.5,4.1) && House == 10002 ||!PlayerToPoint(6, i,2644.6,-2044.9,13.3) && House == 10003)
                            {
                                if (GetPlayerState(i) == 2)
                                {
                                    SetVehiclePos(tmpcar, HouseCarSpawns[tmpcar-1][0], HouseCarSpawns[tmpcar-1][1], HouseCarSpawns[tmpcar-1][2]);
                                    SetVehicleZAngle(tmpcar, HouseCarSpawns[tmpcar-1][3]);
                                    LinkVehicleToInterior(tmpcar, 0);
                                }
                                else
                                {
                                    SetPlayerPos(i, HouseCarSpawns[tmpcar-1][0], HouseCarSpawns[tmpcar-1][1], HouseCarSpawns[tmpcar-1][2]);
                                }
                                new oldcash = gSpentCash[i];
                                new Total = GetPlayerMoneyEx(i) - oldcash;
                                printf("Total %d = GetPlayerMoneyEx(playerid) %d - oldcash %d",Total,GetPlayerMoneyEx(i),oldcash);
                                gSpentCash[i] = 0;
                                TelePos[i][0] = 0.0;
                                TelePos[i][1] = 0.0;
                                PlayerInfo[i][pLocal] = 9999;
                                SetPlayerInterior(i,0);
                                PlayerInfo[i][pInt] = 0;
                            }
                        }
                        if(House >= 99 && House != 10000)
                        {
                            SetPlayerPos(i, BizzInfo[House-99][bEntranceX], BizzInfo[House-99][bEntranceY],BizzInfo[House-99][bEntranceZ]); // Warp the player
                            PlayerInfo[i][pLocal] = 9999;
                            SetPlayerInterior(i,0);
                            PlayerInfo[i][pInt] = 0;
                        }
                        else if(House < 99 && House != 10000)
                        {
                            SetPlayerPos(i, HouseInfo[House][hEntrancex], HouseInfo[House][hEntrancey],HouseInfo[House][hEntrancez]); // Warp the player
                            PlayerInfo[i][pLocal] = 9999;
                            SetPlayerInterior(i,0);
                            PlayerInfo[i][pInt] = 0;
                        }
                    }
                }
            }
            if(CellTime[i] > 0)
            {
                if (CellTime[i] == cchargetime)
                {
                    CellTime[i] = 1;
                    if(Mobile[Mobile[i]] == i)
                    {
                        CallCost[i] = CallCost[i]+callcost;
                    }
                }
                CellTime[i] = CellTime[i] +1;
                if (Mobile[Mobile[i]] == 9999 && CellTime[i] == 5)
                {
                    if(IsPlayerConnected(Mobile[i]))
                    {
                        new called[MAX_PLAYER_NAME];
                        GetPlayerName(Mobile[i], called, sizeof(called));
                        format(gstring, sizeof(gstring), "* %s's Ligando.", called);
                        RingTone[Mobile[i]] = 10;
                        ProxDetector(30.0, Mobile[i], gstring, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    }
                }
            }
            if(CellTime[i] == 0 && CallCost[i] > 0)
            {
                format(gstring, sizeof(gstring), "~w~Custo da ligacao~n~~r~R$%d",CallCost[i]);
                GivePlayerMoney(i, -CallCost[i]);
                SBizzInfo[2][sbTill] += CallCost[i];
                ExtortionSBiz(2, CallCost[i]);
                GastarProdutos(2, 2, 1);
                GameTextForPlayer(i, gstring, 5000, 1);
                CallCost[i] = 0;
            }
            if(TransportTime[i] > 0)
            {//Taxi driver and passenger only
                if(TransportTime[i] >= 16)
                {
                    TransportTime[i] = 1;
                    if(TransportDriver[i] < 999)
                    {
                        if(IsPlayerConnected(TransportDriver[i]))
                        {
                            TransportCost[i] += TransportValue[TransportDriver[i]];
                            TransportCost[TransportDriver[i]] = TransportCost[i];
                        }
                    }
                }
                TransportTime[i] += 1;
                format(gstring, sizeof(gstring), "~r~%d ~w~: ~g~R$%d",TransportTime[i],TransportCost[i]);
                GameTextForPlayer(i, gstring, 15000, 6);
            }
            /*if (gPlayerTerminal[i] != 0)
            {
                new vehicleid = GetPlayerVehicleID(i);
                if (vehicleid != 0)
                {
                    if (!IsABus(vehicleid))
                    {
                        if (gPlayerTerminal[i] != 0) BusrouteEnd(i);
                    }
                }
                else
                {
                    if (gPlayerTerminal[i] != 0) BusrouteEnd(i);
                }
            } */
        }
    }
   // TextPropertys();
    return 1;
}

public SetPlayerUnjail()
{
    if(PaintballPlayers >= 2 && PaintballRornd != 1 && StartingPaintballRornd != 1)
    {
        StartingPaintballRornd = 1;
        SetTimer("PreparePaintball", 30000, 0);
    }
    for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            //new newcar = GetPlayerVehicleID(i);
            new level = PlayerInfo[i][pLevel];
            new vip = PlayerInfo[i][pVip];
            if(level >= 0 && level <= 2) { PlayerInfo[i][pSalario] += 3; }
            else if(level >= 3 && level <= 4) { PlayerInfo[i][pSalario] += 4; }
            else if(level >= 5 && level <= 6) { PlayerInfo[i][pSalario] += 5; }
            else if(level >= 7 && level <= 8) { PlayerInfo[i][pSalario] += 6; }
            else if(level >= 9 && level <= 10) { PlayerInfo[i][pSalario] += 7; }
            else if(level >= 11 && level <= 12) { PlayerInfo[i][pSalario] += 8; }
            else if(level >= 13 && level <= 14) { PlayerInfo[i][pSalario] += 9; }
            else if(level >= 15 && level <= 16) { PlayerInfo[i][pSalario] += 10; }
            else if(level >= 17 && level <= 18) { PlayerInfo[i][pSalario] += 11; }
            else if(level >= 19 && level <= 20) { PlayerInfo[i][pSalario] += 12; }
            else if(level >= 21) { PlayerInfo[i][pSalario] += 15; }
            if(vip == 1) { PlayerInfo[i][pSalario] += 2; }
            if(vip == 2) { PlayerInfo[i][pSalario] += 3; }
            if(vip == 2) { PlayerInfo[i][pSalario] += 4; }
            if(PlayerInfo[i][pHosp] > 0)
            {
                if(PlayerInfo[i][pHospTime] > 0)
                {
                    TextHospital(i);
                    PlayerInfo[i][pHospTime]--;
                }
                if(PlayerInfo[i][pHospTime] <= 0)
                {
                    SairHospital(i);
                }
            }
            if(PlayerInfo[i][pJailed] > 0)
            {
                if(PlayerInfo[i][pJailTime] > 0)
                {
                    PlayerInfo[i][pJailTime]--;
                }
                if(PlayerInfo[i][pJailTime] <= 0)
                {
                    PlayerInfo[i][pJailTime] = 0;
                    Hospital[i] = 1;
                    if(PlayerInfo[i][pJailed] == 1)
                    {
                        SetPlayerInterior(i, 6);
                        SetPlayerPos(i,268.0903,77.6489,1001.0391);
                    }
                    else if(PlayerInfo[i][pJailed] == 3)
                    {
                        SetPlayerInterior(i, 3);
                        SetPlayerVirtualWorld(i,7);
                        SetPresoVirtualWord(i);
                    }
                    else if(PlayerInfo[i][pJailed] == 4)
                    {
                        SetPlayerInterior(i, 3);
                        SetPlayerVirtualWorld(i,0);
                        SetPresoVirtualWord(i);
                    }
                    else if(PlayerInfo[i][pJailed] == 5)
                    {
                        SetPlayerInterior(i, 3);
                        SetPlayerVirtualWorld(i,6);
                        SetPresoVirtualWord(i);
                    }
                    else if(PlayerInfo[i][pJailed] == 40)
                    {
                        SetPlayerInterior(i, 3);
                        SetPlayerVirtualWorld(i,8);
                        SetPresoVirtualWord(i);
                    }
                    else if(PlayerInfo[i][pJailed] == 6)
                    {
                        SetPlayerInterior(i, 0);
                        SetPlayerPos(i,1541.1633,-1674.6908,13.5520);
                        SpawnPlayer(i);
                    }
                    else if(PlayerInfo[i][pJailed] == 7)
                    {
                        SetPlayerInterior(i, 0);
                        SetPlayerPos(i,-1529.3772,486.5050,7.1797);
                    }
                    else if(PlayerInfo[i][pJailed] == 69)
                    {
                        SetPlayerInterior(i, 10);
                        SetPlayerPos(i,222.4105,114.9287,999.0156);
                    }
                    else if(PlayerInfo[i][pJailed] == 8)
                    {
                        SetPlayerInterior(i, 6);
                        SetPlayerPos(i,268.0903,77.6489,1001.0391);
                    }
                    else if(PlayerInfo[i][pJailed] == 55)
                    {
                        SetPlayerInterior(i, 0);
                        SetPlayerPos(i,-104.33955383301,-2400.6862792969,38.346069335938);
                    }
                    else if(PlayerInfo[i][pJailed] == 2)
                    {
                        SetPlayerWorldBounds(i,20000.0000,-20000.0000,20000.0000,-20000.0000); //Reset world to player
                        SetPlayerInterior(i, 0);
                        SpawnPlayer(i);
                    }
                    else if(PlayerInfo[i][pJailed] == 44)
                    {
                        SetPlayerInterior(i, 0);
                        SetPlayerVirtualWorld(i,0);
                        SetPlayerPos(i,1390.6696,-1649.8809,13.3730);
                    }
                    SetPlayerHealth(i, 50);
                    PlayerInfo[i][pJailed] = 0;
                    SendClientMessage(i, COLOR_GRAD1,"Você pagou sua divida com a sociedade.");
                    GameTextForPlayer(i, "~g~Livre~n~~w~Nao cometa mais crimes", 5000, 1);
                    WantedPoints[i] = 0;
                    if(gTeam[i] == 4) { gTeam[i] = 3; }
                    ClearCrime(i);
                    SetPlayerToTeamColor(i);
                    //ProcuradoPlayer(i);
                }
            }
            if(GetPlayerMoneyEx(i) - CurrentMoney[i] >= 50000 && PlayerInfo[i][pAdmin] < 1)
            {
                if(ConsumingMoney[i])
                {
                    CurrentMoney[i] = GetPlayerMoneyEx(i);
                    ConsumingMoney[i] = 0;
                }
                else
                {
                    CurrentMoney[i] = GetPlayerMoneyEx(i);
                }
            }
            else
            {
                CurrentMoney[i] = GetPlayerMoneyEx(i);
            }
            if(UsedFind[i] >= 1)
            {
                UsedFind[i] += 1;
                if(UsedFind[i] >= 120)
                {
                    UsedFind[i] = 0;
                }
            }
            if(PlayerTazeTime[i] >= 1)
            {
                PlayerTazeTime[i] += 1;
                if(PlayerTazeTime[i] == 15)
                {
                    PlayerTazeTime[i] = 0;
                }
                else
                {
                    new Float:angle;
                    GetPlayerFacingAngle(i, angle);
                    SetPlayerFacingAngle(i, angle + 90);
                }
            }
            if(PlayerDrunk[i] >= 5)
            {
                PlayerDrunkTime[i] += 1;
                if(PlayerDrunkTime[i] == 8)
                {
                    PlayerDrunkTime[i] = 0;
                    PlayerDrunk[i] = 0;
                    new Float:angle;
                    GetPlayerFacingAngle(i, angle);
                    if(IsPlayerInAnyVehicle(i))
                    {
                        if(GetPlayerState(i) == 2)
                        {
                            SetVehicleZAngle(GetPlayerVehicleID(i), angle + 25);
                        }
                    }
                    else
                    {
                        ApplyAnimation(i,"PED", "WALK_DRUNK",4.0,0,1,0,0,0);
                    }
                }
            }
            if(PlayerStoned[i] >= 2)
            {
                PlayerStoned[i] += 1;
                if(PlayerStoned[i] == 10)
                {
                    PlayerStoned[i] = 0;
                    new Float:angle;
                    GetPlayerFacingAngle(i, angle);
                    if(IsPlayerInAnyVehicle(i))
                    {
                        if(GetPlayerState(i) == 2)
                        {
                            SetVehicleZAngle(GetPlayerVehicleID(i), angle + 25);
                        }
                    }
                    else
                    {
                        SetPlayerFacingAngle(i, angle + 90);
                    }
                }
            }
            if(BoxWaitTime[i] > 0)
            {
                if(BoxWaitTime[i] >= BoxDelay)
                {
                    BoxDelay = 0;
                    BoxWaitTime[i] = 0;
                    PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
                    GameTextForPlayer(i, "~g~A Luta Começou", 5000, 1);
                    TogglePlayerControllable(i, 1);
                    RorndStarted = 1;
                }
                else
                {
                    format(gstring, sizeof(gstring), "%d", BoxDelay - BoxWaitTime[i]);
                    GameTextForPlayer(i, gstring, 1500, 6);
                    BoxWaitTime[i] += 1;
                }
            }
            if(RorndStarted > 0)
            {
                if(PlayerBoxing[i] > 0)
                {
                    new trigger = 0;
                    new Lost = 0;
                    new Float:angle;
                    new Float:health;
                    GetPlayerHealth(i, health);
                    if(health < 12)
                    {
                        if(i == Boxer1) { Lost = 1; trigger = 1; }
                        else if(i == Boxer2) { Lost = 2; trigger = 1; }
                    }
                    if(health < 28) { GetPlayerFacingAngle(i, angle); SetPlayerFacingAngle(i, angle + 85); }
                    if(trigger)
                    {
                        new winner[MAX_PLAYER_NAME];
                        new loser[MAX_PLAYER_NAME];
                        new titel[MAX_PLAYER_NAME];
                        if(Lost == 1)
                        {
                            if(IsPlayerConnected(Boxer1) && IsPlayerConnected(Boxer2))
                            {
                                SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186); SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
                                SetPlayerInterior(Boxer1, 5); SetPlayerInterior(Boxer2, 5);
                                GetPlayerName(Boxer1, loser, sizeof(loser));
                                GetPlayerName(Boxer2, winner, sizeof(winner));
                                if(PlayerInfo[Boxer1][pEmprego] == 8) { PlayerInfo[Boxer1][pLoses] += 1; }
                                if(PlayerInfo[Boxer2][pEmprego] == 8) { PlayerInfo[Boxer2][pWins] += 1; }
                                if(TBoxer < 255)
                                {
                                    if(IsPlayerConnected(TBoxer))
                                    {
                                        if(TBoxer != Boxer2)
                                        {
                                            if(PlayerInfo[Boxer2][pEmprego] == 8)
                                            {
                                                TBoxer = Boxer2;
                                                GetPlayerName(TBoxer, titel, sizeof(titel));
                                                new nstring[MAX_PLAYER_NAME];
                                                format(nstring, sizeof(nstring), "%s", titel);
                                                strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
                                                Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
                                                Titel[TitelLoses] = PlayerInfo[TBoxer][pLoses];
                                                SaveBoxer();
                                                format(gstring, sizeof(gstring), "Noticias do Boxe: %s venceu a luta contra %s e agora é campeão.",  titel, loser);
                                                OOCNews(COLOR_WHITE,gstring);
                                            }
                                            else
                                            {
                                                SendClientMessage(Boxer2, COLOR_GREY, " Você precisa ser um lutador de boxe para ganhar uma luta!");
                                            }
                                        }
                                        else
                                        {
                                            GetPlayerName(TBoxer, titel, sizeof(titel));
                                            format(gstring, sizeof(gstring), "Noticias do Boxe: %s venceu a luta contra %s.",  titel, loser);
                                            OOCNews(COLOR_WHITE,gstring);
                                            Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
                                            Titel[TitelLoses] = PlayerInfo[Boxer2][pLoses];
                                            SaveBoxer();
                                        }
                                    }
                                }//TBoxer
                                format(gstring, sizeof(gstring), " Você perdeu a luta contra %s.", winner);
                                SendClientMessage(Boxer1, COLOR_LIGHTBLUE, gstring);
                                GameTextForPlayer(Boxer1, "~r~Voce Perdeu", 3500, 1);
                                format(gstring, sizeof(gstring), " Você ganhou a luta contra %s.", loser);
                                SendClientMessage(Boxer2, COLOR_LIGHTBLUE, gstring);
                                GameTextForPlayer(Boxer2, "~r~Voce Venceu", 3500, 1);
                                if(GetPlayerHealth(Boxer1, health) < 20)
                                {
                                    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, " Você está exausto da luta, vá se recuperar.");
                                    SetPlayerHealth(Boxer1, 30.0);
                                }
                                else
                                {
                                    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, " Você continua em bom estado após a luta.");
                                    SetPlayerHealth(Boxer1, 50.0);
                                }
                                if(GetPlayerHealth(Boxer2, health) < 20)
                                {
                                    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, " Você está exausto da luta, vá se recuperar.");
                                    SetPlayerHealth(Boxer2, 30.0);
                                }
                                else
                                {
                                    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, " Você continua em bom estado após a luta.");
                                    SetPlayerHealth(Boxer2, 50.0);
                                }
                                GameTextForPlayer(Boxer1, "~g~Fim da Luta", 5000, 1); GameTextForPlayer(Boxer2, "~g~Fim da Luta", 5000, 1);
                                if(PlayerInfo[Boxer2][pEmprego] == 8) { PlayerInfo[Boxer2][pBoxSkill] += 1; }
                                PlayerBoxing[Boxer1] = 0;
                                PlayerBoxing[Boxer2] = 0;
                            }
                        }
                        else if(Lost == 2)
                        {
                            if(IsPlayerConnected(Boxer1) && IsPlayerConnected(Boxer2))
                            {
                                SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186); SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
                                SetPlayerInterior(Boxer1, 5); SetPlayerInterior(Boxer2, 5);
                                GetPlayerName(Boxer1, winner, sizeof(winner));
                                GetPlayerName(Boxer2, loser, sizeof(loser));
                                if(PlayerInfo[Boxer2][pEmprego] == 8) { PlayerInfo[Boxer2][pLoses] += 1; }
                                if(PlayerInfo[Boxer1][pEmprego] == 8) { PlayerInfo[Boxer1][pWins] += 1; }
                                if(TBoxer < 255)
                                {
                                    if(IsPlayerConnected(TBoxer))
                                    {
                                        if(TBoxer != Boxer1)
                                        {
                                            if(PlayerInfo[Boxer1][pEmprego] == 8)
                                            {
                                                TBoxer = Boxer1;
                                                GetPlayerName(TBoxer, titel, sizeof(titel));
                                                new nstring[MAX_PLAYER_NAME];
                                                format(nstring, sizeof(nstring), "%s", titel);
                                                strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
                                                Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
                                                Titel[TitelLoses] = PlayerInfo[TBoxer][pLoses];
                                                SaveBoxer();
                                                format(gstring, sizeof(gstring), "Noticias do Boxe: %s venceu a luta contra %s e agora é o campeão.",  titel, loser);
                                                OOCNews(COLOR_WHITE,gstring);
                                            }
                                            else
                                            {
                                                SendClientMessage(Boxer1, COLOR_GREY, " Você precisa ser um lutador de boxe para ganhar uma luta!");
                                            }
                                        }
                                        else
                                        {
                                            GetPlayerName(TBoxer, titel, sizeof(titel));
                                            format(gstring, sizeof(gstring), "Noticias do Boxe: %s venceu a luta contra %s.",  titel, loser);
                                            OOCNews(COLOR_WHITE,gstring);
                                            Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
                                            Titel[TitelLoses] = PlayerInfo[Boxer1][pLoses];
                                            SaveBoxer();
                                        }
                                    }
                                }//TBoxer
                                format(gstring, sizeof(gstring), " Você perdeu a luta contra %s.", winner);
                                SendClientMessage(Boxer2, COLOR_LIGHTBLUE, gstring);
                                GameTextForPlayer(Boxer2, "~r~Voce Perdeu", 3500, 1);
                                format(gstring, sizeof(gstring), " Você ganhou a luta contra %s.", loser);
                                SendClientMessage(Boxer1, COLOR_LIGHTBLUE, gstring);
                                GameTextForPlayer(Boxer1, "~g~Voce Venceu", 3500, 1);
                                if(GetPlayerHealth(Boxer1, health) < 20)
                                {
                                    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, " Você está exausto da luta, vá se recuperar.");
                                    SetPlayerHealth(Boxer1, 30.0);
                                }
                                else
                                {
                                    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, " Você continua em bom estado após a luta.");
                                    SetPlayerHealth(Boxer1, 50.0);
                                }
                                if(GetPlayerHealth(Boxer2, health) < 20)
                                {
                                    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, " Você está exausto da luta, vá se recuperar.");
                                    SetPlayerHealth(Boxer2, 30.0);
                                }
                                else
                                {
                                    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, " Você continua em bom estado após a luta.");
                                    SetPlayerHealth(Boxer2, 50.0);
                                }
                                GameTextForPlayer(Boxer1, "~g~Fim da luta", 5000, 1); GameTextForPlayer(Boxer2, "~g~Fim da luta", 5000, 1);
                                if(PlayerInfo[Boxer1][pEmprego] == 8) { PlayerInfo[Boxer1][pBoxSkill] += 1; }
                                PlayerBoxing[Boxer1] = 0;
                                PlayerBoxing[Boxer2] = 0;
                            }
                        }
                        InRing = 0;
                        RorndStarted = 0;
                        Boxer1 = 9999;
                        Boxer2 = 9999;
                        TBoxer = 9999;
                        trigger = 0;
                    }
                }
            }
            if(StartingPaintballRornd == 1 && AnnorncedPaintballRornd == 0)
            {
                AnnorncedPaintballRornd = 1;
                if(PlayerPaintballing[i] != 0)
                {
                    SendClientMessage(i, COLOR_YELLOW, "Paintball será anunciado em 30 segundos (Para obter mais jogadores).");
                }
            }
            if(FindTime[i] > 0)
            {
                if(FindTime[i] == FindTimePoints[i]) { FindTime[i] = 0; FindTimePoints[i] = 0; DisablePlayerCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~Marca Vermelha Ativada", 2500, 1); }
                else
                {
                    format(gstring, sizeof(gstring), "%d", FindTimePoints[i] - FindTime[i]);
                    GameTextForPlayer(i, gstring, 1500, 6);
                    FindTime[i] += 1;
                }
            }
            if(TaxiCallTime[i] > 0)
            {
                if(TaxiAccepted[i] < 999)
                {
                    if(IsPlayerConnected(TaxiAccepted[i]))
                    {
                        new Float:X,Float:Y,Float:Z;
                        GetPlayerPos(TaxiAccepted[i], X, Y, Z);
                        SetPlayerCheckpoint(i, X, Y, Z, 5);
                    }
                }
            }
            if(LocalizarTime[i] > 0)
            {
                if(LocalizarAccepted[i] < 999)
                {
                    if(IsPlayerConnected(LocalizarAccepted[i]))
                    {
                        new Float:X,Float:Y,Float:Z;
                        GetPlayerPos(LocalizarAccepted[i], X, Y, Z);
                        SetPlayerCheckpoint(i, X, Y, Z, 5);
                    }
                }
            }
            if(BusCallTime[i] > 0)
            {
                if(BusAccepted[i] < 999)
                {
                    if(IsPlayerConnected(BusAccepted[i]))
                    {
                        new Float:X,Float:Y,Float:Z;
                        GetPlayerPos(BusAccepted[i], X, Y, Z);
                        SetPlayerCheckpoint(i, X, Y, Z, 5);
                    }
                }
            }
            if(MedicCallTime[i] > 0)
            {
                if(MedicAccepted[i] < 999)
                {
                    if(IsPlayerConnected(MedicAccepted[i]))
                    {
                        new Float:X,Float:Y,Float:Z;
                        GetPlayerPos(MedicAccepted[i], X, Y, Z);
                        SetPlayerCheckpoint(i, X, Y, Z, 5);
                    }
                }
            }
            if(CopsrondaCallTime[i] > 0)
            {
                if(CopsrondaAccepted[i] < 999)
                {
                    if(IsPlayerConnected(CopsrondaAccepted[i]))
                    {
                        new Float:X,Float:Y,Float:Z;
                        GetPlayerPos(CopsrondaAccepted[i], X, Y, Z);
                        SetPlayerCheckpoint(i, X, Y, Z, 5);
                    }
                }
            }
            if(MechanicCallTime[i] > 0)
            {
                if(MechanicAccepted[i] < 999)
                {
                    if(IsPlayerConnected(MechanicAccepted[i]))
                    {
                        new Float:X,Float:Y,Float:Z;
                        GetPlayerPos(MechanicAccepted[i], X, Y, Z);
                        SetPlayerCheckpoint(i, X, Y, Z, 5);
                    }
                }
            }
            if(Robbed[i] == 1)
            {
                if(RobbedTime[i] <= 0)
                {
                    RobbedTime[i] = 0;
                    Robbed[i] = 0;
                }
                else
                {
                    RobbedTime[i] -= 1;
                }
            }
            if(PlayerCuffed[i] == 1)
            {
                if(PlayerCuffedTime[i] <= 0)
                {
                    TogglePlayerControllable(i, 1);
                    PlayerCuffed[i] = 0;
                    PlayerCuffedTime[i] = 0;
                    PlayerTazeTime[i] = 1;
                }
                else
                {
                    PlayerCuffedTime[i] -= 1;
                }
            }
        }
    }
}
public CheckGas()
{
    for(new i=0;i<MaiorID;i++)
    {
        if(IsPlayerConnected(i))
        {
            if(GetPlayerState(i) == PLAYER_STATE_DRIVER && !IsPlayerNPC(i))
            {
                new vehicle = GetPlayerVehicleID(i);
                new VehicleModel = GetVehicleModel(vehicle);
                new GasEtempo[MAX_PLAYERS],ResultOwn[MAX_PLAYERS];
                GasEtempo[i] = Gas[vehicle]*18;
                ResultOwn[i] = GasEtempo[i]/60;
                if(VehicleModel == 509 || VehicleModel == 481 || VehicleModel == 510 || VehicleModel == 417 || VehicleModel == 425 || VehicleModel == 447 || VehicleModel == 469 || VehicleModel == 476 || VehicleModel == 487 || VehicleModel == 430 || VehicleModel == 462
                || VehicleModel == 488 || VehicleModel == 497 || VehicleModel == 511 || VehicleModel == 512 || VehicleModel == 513 || VehicleModel == 519 || VehicleModel == 520 || VehicleModel == 548 || VehicleModel == 553 || VehicleModel == 563
                || VehicleModel == 577 || VehicleModel == 592 || VehicleModel == 593 || VehicleModel == 595 || VehicleModel == 493 || VehicleModel == 472 || VehicleModel == 454 || VehicleModel == 453 || VehicleModel == 452 || VehicleModel == 446) { return 1; }
                if(Gas[vehicle] <= 0)
                {
                    NoFuel[i] = 1;
                    TogglePlayerControllable(i, 0);
                    PlayerPlaySound(i, 1159, 0.0, 0.0, 0.0);
                    GameTextForPlayer(i,"~r~~h~~n~~n~~n~~n~~n~~n~~n~~n~Sem combustivel~n~~b~~h~~h~",1500,3);
                    SendClientMessage(i, COLOR_YELLOW, "O motor desligou por falta de combustível, dê /servico mecanico.");
                    new mot, lu, alar, por, cap, porma, ob;
                    GetVehicleParamsEx(vehicle, mot, lu, alar, por, cap, porma, ob);
                    SetVehicleParamsEx(vehicle, VEHICLE_PARAMS_OFF, lu, alar, por, cap, porma, ob);
                    motor[i] = 0;
                    SendClientMessage(i, -1, "Veiculo {E31919}Desligado!");
                    return 1;
                }
                else if(Gas[vehicle] >= 5)
                {
                    if(Gas[vehicle] <= 10) { PlayerPlaySound(i, 1085, 0.0, 0.0, 0.0),SendClientMessage(i, 0xFFAEAEAA, "[ALERTA]{DADADA} O nível de Combustível do Seu Veículo Está Baixo, Vá ao Posto mais Proximo!"); }
                }
                else if(ResultOwn[i] <= 4)
                {
                    SendClientMessage(i, 0xFFAEAEAA, "[ALERTA]{DADADA} Seu carro tem Menos de 2 minutos de Combustivel, Vá ao Posto mais Proximo!");
                }
                Gas[vehicle]--;
            }
        }
    }
    return 1;
}
public Abastecendo(playerid)
{
        if(IsPlayerConnected(playerid))
        {
            new VID = GetPlayerVehicleID(playerid);
            if(Refueling[playerid] != 0)
            {
                if(GetPlayerMoneyEx(playerid) >= GranaGas[playerid]+60)
                {
                    if(Gas[VID] == GasETanto[playerid])
                    {
                        TextDrawHideForPlayer(playerid, TextPosto[playerid]);
                        format(gstring, sizeof(gstring), "~n~~n~~n~~n~~n~~n~~r~~h~]]~b~~h~~h~Veiculo Reabastecido~r~~h~]]~n~~n~~g~~h~~h~Preco: ~w~R$ %d",GranaGas[playerid]);
                        GameTextForPlayer(playerid, gstring, 7000, 3);
                        format(gstring,sizeof(gstring)," Veiculo Reabastecido, Por: R$%d.",GranaGas[playerid]);
                        SendClientMessage(playerid,COLOR_LIGHTBLUE,gstring);
                        GivePlayerMoney(playerid, - GranaGas[playerid]);
                        Refueling[playerid] = 0;
                        PlayerPlaySound(playerid, 1149, 0.0, 0.0, 0.0);
                        SBizzInfo[3][sbTill] += GranaGas[playerid];
                        ExtortionSBiz(3, GranaGas[playerid]);
                        GastarProdutos(2, 3, 1);
                        GranaGas[playerid] = 0;
                        GasETanto[playerid] = 0;
                        TogglePlayerControllable(playerid, 1);
                    }
                    else //if(Gas[VID] < Refueling[playerid])
                    {
                        TextDrawShowForPlayer(playerid, TextPosto[playerid]);
                        Gas[VID] ++;
                        GranaGas[playerid] += 60;
                        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                        format(strvinny,sizeof(strvinny),"~>~~>~ ~p~~h~Reabastecimento ~<~~<~~n~~n~~n~~b~~h~~h~~h~Veiculo: ~g~~h~~h~%s~n~~n~~b~~h~~h~~h~Litros:~g~~h~~h~ %d~n~~n~~b~~h~~h~~h~Valor: ~w~R$ ~r~~h~%d",vehName[GetVehicleModel(GetPlayerVehicleID(playerid))-400],Gas[VID],GranaGas[playerid]);
                        TextDrawSetString(TextPosto[playerid], strvinny);
                        //SetTimer("Abastecendo", 200, 0);
                        SetTimerEx("Abastecendo", 200,false,"i",playerid);
                    }
                }
                else
                {
                    TextDrawHideForPlayer(playerid, TextPosto[playerid]);
                    format(gstring,sizeof(gstring)," Você não tem mais grana para terminar de Abastecer!");
                    SendClientMessage(playerid,COLOR_LIGHTBLUE,gstring);
                    Refueling[playerid] = 0;
                    TogglePlayerControllable(playerid, 1);
                }
            }
        }
    return 1;
}
public GasGang(playerid)
{
 for(new i=0; i<MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            new VID;
            new FillUp;
            VID = GetPlayerVehicleID(i);
            FillUp = GasMax - Gas[VID];
            if(Refuelinggang[i] == 1)
            {
                if(PlayerInfo[i][pMembro] == 21 || PlayerInfo[i][pLider] == 21)
                {
                    if(donoPosto == 21)
                    {
                        Gas[VID] += FillUp;
                        FillUp = FillUp * 50;
                        format(gstring,sizeof(gstring),"Veiculo Reabastecido Gratuitamente,Porque os Hells Angels está controlando do Posto.");
                        PlayerPlaySound(i, 1149, 0.0, 0.0, 0.0);
                        SendClientMessage(i,COLOR_LIGHTBLUE,gstring);
                        SBizzInfo[3][sbTill] += FillUp;
                        ExtortionSBiz(3, FillUp);
                        GastarProdutos(2, 3, 1);
                        Refuelinggang[i] = 0;
                    }
                    else
                    {
                        format(gstring,sizeof(gstring),"Os Hells Angels não está no Controle do Posto.");
                        SendClientMessage(i,COLOR_LIGHTBLUE,gstring);
                    }
                }
                if(PlayerInfo[i][pMembro] == 22 || PlayerInfo[i][pLider] == 22)
                {
                    if(donoPosto == 22)
                    {
                        Gas[VID] += FillUp;
                        FillUp = FillUp * 50;
                        format(gstring,sizeof(gstring),"Veiculo Reabastecido Gratuitamente,Porque os Mongols está no controle do Posto.");
                        PlayerPlaySound(i, 1149, 0.0, 0.0, 0.0);
                        SendClientMessage(i,COLOR_LIGHTBLUE,gstring);
                        SBizzInfo[3][sbTill] += FillUp;
                        ExtortionSBiz(3, FillUp);
                        GastarProdutos(2, 3, 1);
                        Refuelinggang[i] = 0;
                    }
                    else
                    {
                        format(gstring,sizeof(gstring),"Os Mongols não está no Controle do Posto.");
                        SendClientMessage(i,COLOR_LIGHTBLUE,gstring);
                    }
                }
                if(PlayerInfo[i][pMembro] == 23 || PlayerInfo[i][pLider] == 23)
                {
                    if(donoPosto == 23)
                    {
                        Gas[VID] += FillUp;
                        FillUp = FillUp * 50;
                        format(gstring,sizeof(gstring),"Veiculo Reabastecido Gratuitamente,Porque os Sons Of Anarchy está no controle do Posto.");
                        PlayerPlaySound(i, 1149, 0.0, 0.0, 0.0);
                        SendClientMessage(i,COLOR_LIGHTBLUE,gstring);
                        SBizzInfo[3][sbTill] += FillUp;
                        ExtortionSBiz(3, FillUp);
                        Refuelinggang[i] = 0;
                        GastarProdutos(2, 3, 1);
                    }
                    else
                    {
                        format(gstring,sizeof(gstring),"Os Sons Of Anarchy não está no Controle do Posto.");
                        SendClientMessage(i,COLOR_LIGHTBLUE,gstring);
                    }
                }
                if(PlayerInfo[i][pMembro] == 25 || PlayerInfo[i][pLider] == 25)
                {
                    if(donoPosto == 25)
                    {
                        Gas[VID] += FillUp;
                        FillUp = FillUp * 50;
                        format(gstring,sizeof(gstring),"Veiculo Reabastecido Gratuitamente,Porque os Drifters está no controle do Posto.");
                        PlayerPlaySound(i, 1149, 0.0, 0.0, 0.0);
                        SendClientMessage(i,COLOR_LIGHTBLUE,gstring);
                        SBizzInfo[3][sbTill] += FillUp;
                        ExtortionSBiz(3, FillUp);
                        Refuelinggang[i] = 0;
                        GastarProdutos(2, 3, 1);
                    }
                    else
                    {
                        format(gstring,sizeof(gstring),"Os Drifters não está no Controle do Posto.");
                        SendClientMessage(i,COLOR_LIGHTBLUE,gstring);
                    }
                }
                if(IsACop(playerid))
                {
                    if(donoPosto == 2 || donoPosto == 1)
                    {
                        Gas[VID] += FillUp;
                        FillUp = FillUp * 50;
                        format(gstring,sizeof(gstring),"Veiculo Reabastecido Gratuitamente,Porque o Governo está no controle do Posto.");
                        PlayerPlaySound(i, 1149, 0.0, 0.0, 0.0);
                        SendClientMessage(i,COLOR_LIGHTBLUE,gstring);
                        SBizzInfo[3][sbTill] += FillUp;
                        ExtortionSBiz(3, FillUp);
                        Refuelinggang[i] = 0;
                        GastarProdutos(2, 3, 1);
                    }
                    else
                    {
                        format(gstring,sizeof(gstring),"O Governo não está no Controle do Posto.");
                        SendClientMessage(playerid,COLOR_LIGHTBLUE,gstring);
                    }
                }
            }
        }
    }
    return 1;
}
public PrintSBizInfo(playerid,targetid)
{
    if(IsPlayerConnected(playerid))
    {
        new coordsstring[128];
        format(coordsstring, sizeof(coordsstring),"|__________________ %s __________________|",SBizzInfo[targetid][sbMessage]);
        SendClientMessage(playerid, COLOR_WHITE,coordsstring);
        format(coordsstring, sizeof(coordsstring), "Trancada: %d Entrada: R$%d Cofre: R$%d", SBizzInfo[targetid][sbLocked], SBizzInfo[targetid][sbEntranceCost], SBizzInfo[targetid][sbTill]);
        SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
        format(coordsstring, sizeof(coordsstring), "Extorção: %s",SBizzInfo[targetid][sbExtortion]);
        SendClientMessage(playerid, COLOR_GRAD2,coordsstring);
    }
}

public PrintBizInfo(playerid,targetid)
{
    if(IsPlayerConnected(playerid))
    {
        new coordsstring[128];
        format(coordsstring, sizeof(coordsstring),"|__________________ %s __________________|",BizzInfo[targetid][bMessage]);
        SendClientMessage(playerid, COLOR_WHITE,coordsstring);
        format(coordsstring, sizeof(coordsstring), "Trancada: %d Entrada: R$%d Cofre: R$%d", BizzInfo[targetid][bLocked], BizzInfo[targetid][bEntranceCost], BizzInfo[targetid][bTill]);
        SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
        format(coordsstring, sizeof(coordsstring), "Extorção: %s",BizzInfo[targetid][bExtortion]);
        SendClientMessage(playerid, COLOR_GRAD2,coordsstring);
    }
}

public ShowStats(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
    {
        new cash =  GetPlayerMoneyEx(targetid);
        new atext[20];
        if(PlayerInfo[targetid][pSex] == 1) { atext = "Masculino"; }
        else if(PlayerInfo[targetid][pSex] == 2) { atext = "Feminino"; }
        new dtext[20];
        if(PlayerInfo[targetid][pDoenca] == 1) { dtext = "Mongolismo"; }
        else if(PlayerInfo[targetid][pDoenca] == 2) { dtext = "AIDS"; }
        else if(PlayerInfo[targetid][pDoenca] == 3) { dtext = "Herpes Genital"; }
        else if(PlayerInfo[targetid][pDoenca] == 4) { dtext = "Cirrose"; }
        else if(PlayerInfo[targetid][pDoenca] == 5) { dtext = "Câncer de Pulmão"; }
        else { dtext = "Nenhuma"; }
        new jtext[20];
        if(PlayerInfo[targetid][pEmprego] == 1) { jtext = "Detetive"; }
        else if(PlayerInfo[targetid][pEmprego] == 2) { jtext = "Advogado"; }
        else if(PlayerInfo[targetid][pEmprego] == 3) { jtext = "Prof.Sexo"; }
        else if(PlayerInfo[targetid][pEmprego] == 4) { jtext = "Vendedor De Drogas"; }
        else if(PlayerInfo[targetid][pEmprego] == 5) { jtext = "Mecanico"; }
        else if(PlayerInfo[targetid][pEmprego] == 6) { jtext = "Segurança"; }
        else if(PlayerInfo[targetid][pEmprego] == 7) { jtext = "Vendedor De Armas"; }
        else if(PlayerInfo[targetid][pEmprego] == 8) { jtext = "Boxeador"; }
        else if(PlayerInfo[targetid][pEmprego] == 9) { jtext = "Motorista de Onibus"; }
        else if(PlayerInfo[targetid][pEmprego] == 10) { jtext = "Mendigo"; }
        else if(PlayerInfo[targetid][pEmprego] == 11) { jtext = "Caminhoneiro"; }
        else { jtext = "Nenhum"; }
        new CarroDono[64], IdcarroD = PlayerInfo[targetid][pChave];
        if(IdcarroD == 0)
        {
            CarroDono = "Nenhum";
        }
        else
        {
            strmid(CarroDono, vehName[GetVehicleModel(IdcarroD)-400], 0, strlen(vehName[GetVehicleModel(IdcarroD)-400]), 255);
        }
        new RankVip[34];
        if(PlayerInfo[targetid][pVip] == 0) { RankVip = "Gratis"; }
        else if(PlayerInfo[targetid][pVip] == 1) { RankVip = "VIP"; }
        else if(PlayerInfo[targetid][pVip] == 2) { RankVip = "SUPER VIP"; }
        /*new married[20];
        strmid(married, PlayerInfo[targetid][pMarriedTo], 0, strlen(PlayerInfo[targetid][pMarriedTo]), 255);
        if(strcmp(married," ", true ) == 0 || strcmp(married,"", true ) == 0)
        {
            married = "Ninguem";
        }*/
        //new age = PlayerInfo[targetid][pAge];
        new ptime = PlayerInfo[targetid][pConnectTime];
        //new lotto = PlayerInfo[targetid][pLottoNr];
        new deaths = PlayerInfo[targetid][pDeaths];
        new fishes = PlayerInfo[targetid][pFishes];
        new bigfish = PlayerInfo[targetid][pBiggestFish];
        new crimes = PlayerInfo[targetid][pCrimes];
        new Drogas = PlayerInfo[targetid][pDrogas]; // maconha
        new Drogas2 = PlayerInfo[targetid][pDrogas2]; // cocaina
        new Drogas3 = PlayerInfo[targetid][pDrogas3]; // crack
        new SafeDrogas = PlayerInfo[targetid][pSafeDrogas]; // maconha
        new SafeDrogas2 = PlayerInfo[targetid][pSafeDrogas2]; // cocaina
        new SafeDrogas3 = PlayerInfo[targetid][pSafeDrogas3]; // crack
        new mats = PlayerInfo[targetid][pMats];
        new smats = PlayerInfo[targetid][psMats];
        //new Dark Gods = WantedLevel[targetid];
        new level = PlayerInfo[targetid][pLevel];
        new exp = PlayerInfo[targetid][pExp];
        new kills = PlayerInfo[targetid][Rufflesills];
        new gold = PlayerInfo[targetid][pGold];
        new moedasverdes = PlayerInfo[targetid][pMV];
        new pnumber = PlayerInfo[targetid][pPnumber];
        new Conta = PlayerInfo[targetid][pConta];
        new nxtlevel = PlayerInfo[targetid][pLevel]+1;
        new expquantidade = nxtlevel*levelexp;
        new costlevel = nxtlevel*levelcost;//10k for testing purposes
        new Housekey;
        new bizkey;
        new local;
        new intir;
        if(PlayerInfo[targetid][pPHousekey] == 9999) Housekey = 255;
        else Housekey = PlayerInfo[targetid][pPHousekey];
        if(PlayerInfo[targetid][pPbiskey] == 9999) bizkey = 255;
        else bizkey = PlayerInfo[targetid][pPbiskey];
        if(PlayerInfo[targetid][pInt] == 9999) intir = 255;
        else intir = PlayerInfo[targetid][pInt];
        if(PlayerInfo[targetid][pLocal] == 9999) local = 255;
        else local = PlayerInfo[targetid][pLocal];
        new Float:shealth = PlayerInfo[targetid][pSHealth];
        new Float:health;
        //new creditos = PlayerInfo[targetid][pCreditos];
        new name[MAX_PLAYER_NAME];
        GetPlayerName(targetid, name, sizeof(name));
        GetPlayerHealth(targetid,health);
        new Float:px,Float:py,Float:pz;
        GetPlayerPos(targetid, px, py, pz);
        if(targetid == playerid)
        {
            format(gstring, sizeof(gstring),"~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~ .:: Seu RG {FFA4FF}%s{FF8000} ::.  ~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~",name);
            SendClientMessage(playerid, CORS,gstring);
        }
        else
        {
            format(gstring, sizeof(gstring),"~.~.~.~.~.~.~.~.~.~.~.~.~.~ RG de %s  ~.~.~.~.~.~.~.~.~.~.~.~.~.~",name);
            SendClientMessage(playerid, COLOR_WHITE,gstring);
        }
        format(gstring, sizeof(gstring), "Nivel:[%d] Sexo:[%s] Vida:[%.1f] Dinheiro:[R$%d] Banco:[R$%d] Celular:[%d]", level,atext,shealth+50, cash, Conta, pnumber);
        SendClientMessage(playerid, 0x80FF80AA,gstring);
        format(gstring, sizeof(gstring), "Conta:[%s] Casado Com:[%s] Horas Jogadas:[%d] Profissão Secundaria:[%s]", RankVip,PlayerInfo[targetid][pMarriedTo],ptime,jtext);
        SendClientMessage(playerid, 0x00FFFFAA,gstring);
        format(gstring, sizeof(gstring), "Peixes:[%d] Maior Peixe:[%d] Crimes Cometidos:[%d] Matou:[%d] Morreu:[%d]", fishes,bigfish,crimes,kills,deaths );
        SendClientMessage(playerid, 0x80FF80AA,gstring);
        format(gstring, sizeof(gstring), "Próximo Nivel:[R$%d] Respeito:[%d/%d] Doenças:[%s] GoldBar [%d]",costlevel,exp,expquantidade,dtext,gold);
        SendClientMessage(playerid, 0x00FFFFAA,gstring);
        format(gstring, sizeof(gstring), "Materiais:[%d] Safe Materiais:[%d] Organização:[%s] Cargo:[%s]",mats,smats,NomeORG(targetid),OrgCargo(targetid));
        SendClientMessage(playerid, 0x80FF80AA,gstring);
        format(gstring, sizeof(gstring), "Maconha:[%d] Cocaina:[%d] Crack:[%d] Safe Maconha:[%d] Safe Cocaina:[%d] Safe Crack:[%d]",Drogas,Drogas2,Drogas3,SafeDrogas,SafeDrogas2,SafeDrogas3);
        SendClientMessage(playerid, 0x00FFFFAA,gstring);
        format(gstring, sizeof(gstring), "Chave De Casa:[%d] Chave Da Empresa:[%d] Chave Do Carro(Aluguel):[%d] Interior:[%d] Local:[%d]", Housekey,bizkey,HireCar[targetid],intir,local);
        SendClientMessage(playerid, 0x80FF80AA,gstring);
        format(gstring, sizeof(gstring), "Veículo:[%s, Placa(%d)] Nivel de Procurado:[%d] Moedas Verdes(M.V) [%d]", CarroDono,IdcarroD,WantedPoints[targetid], moedasverdes);
        SendClientMessage(playerid, 0x00FFFFAA,gstring);
        if(PlayerInfo[targetid][pVip] != 0)
        {
            for(new x=0; x<sizeof(VipInfo); x++)
            {
                if(strcmp(VipInfo[x][vNick],PlayerName(targetid),true) == 0)
                {
                    format(gstring, sizeof(gstring), "** Você é um Jogador %s do Servidor, Seu VIP Expira na Data: %s.", RankVip,VipInfo[x][vVencimento]);
                    SendClientMessage(playerid, -1,gstring);
                }
            }
        }
    }
}

public SetPlayerToTeamColor(playerid)
{
    if(admtrampando[playerid] == 1)
    {
        SetPlayerColor(playerid, COR_ADMIN);
    }
    else if(helptrampando[playerid] == 1)
    {
        SetPlayerColor(playerid, COR_HELPER);
    }
    else if (PlayerInfo[playerid][pTeam] == 3)//Civis
    {
       SetPlayerColor(playerid, COLOR_WHITE);
    }
    else if (PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)//PM
    {
       SetPlayerColor(playerid, COR_PM);
    }
    else if (PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)//ROTA
    {
       SetPlayerColor(playerid, COR_ROTA);
    }
    else if (PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28)//BPM
    {
       SetPlayerColor(playerid, COR_GPT);
    }
    else if (PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)//Exército
    {
       SetPlayerColor(playerid, COR_EXE);
    }
    else if (PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)//Medicos
    {
       SetPlayerColor(playerid, COR_SAMU);
    }
    else if (PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)//Aztecas
    {
       SetPlayerColor(playerid, COR_AZTECAS);
    }
    else if (PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)//Guerrilheiros Israelitas
    {
       SetPlayerColor(playerid, COR_GI);
    }
    else if (PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)//Governo
    {
       SetPlayerColor(playerid, COR_PREFEITURA);
    }
    else if (PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)//Hitmans
    {
       SetPlayerColor(playerid, COR_HITMAN);
    }
    else if (PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)//Reporter
    {
       SetPlayerColor(playerid, COR_REP);
    }
    else if (PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)//Taxistas
    {
       SetPlayerColor(playerid, COR_TAXI);
    }
    else if (PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)//PFII
    {
       SetPlayerColor(playerid, COR_BOPE);
    }
    else if (PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)//Máfia Russa
    {
       SetPlayerColor(playerid, COR_COSA);
    }
    else if (PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)//Máfia Japonesa
    {
       SetPlayerColor(playerid, COR_YAK);
    }
    else if (PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)//Grove
    {
       SetPlayerColor(playerid, COR_GRO);
    }
    else if (PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)//FARC
    {
       SetPlayerColor(playerid, COR_FARC);
    }
    else if (PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)//Polícia Rodoviária Federal
    {
       SetPlayerColor(playerid, COR_PRF);
    }
    else if (PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)//BALLAS
    {
       SetPlayerColor(playerid, COR_BALLAS);
    }
    else if (PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)//vagos
    {
       SetPlayerColor(playerid, COR_VAGOS);
    }
    else if (PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)//CV
    {
       SetPlayerColor(playerid, 0xc2091600);
    }
    else if (PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)//PCC
    {
       SetPlayerColor(playerid, 0xCCFF99FF);
    }
    else if (PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)//Hells Angels
    {
       SetPlayerColor(playerid, 0xAA0000AA);
    }
    else if (PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)//Hells Angels
    {
       SetPlayerColor(playerid, COR_MONGOLS);
    }
    else if (PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)//Hells Angels
    {
       SetPlayerColor(playerid, COR_SONS);
    }
    else if (PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)//TRIADS
    {
       SetPlayerColor(playerid, COR_TRIAD);
    }
    else if (PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25)//Hells Angels
    {
       SetPlayerColor(playerid, COR_DRIFT);
    }
    else if (PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)//CV
    {
       SetPlayerColor(playerid, COR_DESTRO);
    }
    else if (PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27)//CV
    {
       SetPlayerColor(playerid, COR_FaTal_DangeR);
    }
    else if (PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29)//Snake
    {
       SetPlayerColor(playerid, cor_fak);
    }
    else if (PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30)//Killers
    {
       SetPlayerColor(playerid, COR_Killers);
    }
    else if (PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31)//Justiceiros
    {
       SetPlayerColor(playerid, COR_StrikerS);
    }
    else if (PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)//Policia Civil
    {
       SetPlayerColor(playerid, COR_PF);
    }
    else if (PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)//Polícia Federall
    {
       SetPlayerColor(playerid, COR_Federal);
    }
    else if (PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)//Dark Gods
    {
       SetPlayerColor(playerid, COR_Reggae);
    }
    else if (PlayerInfo[playerid][pMembro] == 35 || PlayerInfo[playerid][pLider] == 35)//KiLLeRs
    {
       SetPlayerColor(playerid, COR_PsykO);
    }
    else if (PlayerInfo[playerid][pMembro] == 36 || PlayerInfo[playerid][pLider] == 36)//Storm
    {
       SetPlayerColor(playerid, COR_FD);
    }
    else //caso dê algum bug
    {
       SetPlayerColor(playerid, COLOR_WHITE);
    }
}
//---------------------------------------------------------

public GameModeInitExitFunc()
{
 for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            DisablePlayerCheckpoint(i);
            gPlayerCheckpointStatus[i] = CHECKPOINT_Nenhum;
            GameTextForPlayer(i, "GMX...", 4000, 5);
            SetPlayerCameraPos(i,1460.0, -1324.0, 287.2);
            SetPlayerCameraLookAt(i,1374.5, -1291.1, 239.0);
            gPlayerLogged[i] = 0;
        }
    }
//  KillTimer(synctimer);
    KillTimer(newmistimer);
    KillTimer(unjailtimer);
    KillTimer(othtimer);
    KillTimer(cartimer);
    KillTimer(Contastimer);
    KillTimer(checkgastimer);
    KillTimer(pickuptimer);
    KillTimer(productiontimer);
    KillTimer(turftimer);
    KillTimer(tempoGranaTR);
    KillTimer(TempoAdministrador);
    KillTimer(TempoHelper);
    SaveBoxer();
    SetTimer("GameModeExitFunc", 4000, 0);
    return 1;
}
public GameModeExitFunc()
{
//  KillTimer(synctimer);
    KillTimer(TempoAnGang);
    KillTimer(TempoAnMafia);
    KillTimer(TempoAnFARC);
    KillTimer(TempoRecarga);
    KillTimer(TempoAnGuerrilheirosIsraelitas);
    KillTimer(TempoAnPrefeito);
    KillTimer(TempoAnTaxi);
    KillTimer(TempoAnHitmans);
    KillTimer(TempoAnmerce);
    KillTimer(newmistimer);
    KillTimer(unjailtimer);
    KillTimer(othtimer);
    KillTimer(cartimer);
    KillTimer(Contastimer);
    KillTimer(checkgastimer);
    KillTimer(pickuptimer);
    KillTimer(productiontimer);
    KillTimer(turftimer);
    KillTimer(tempoGranaTR);
    KillTimer(TempoAdministrador);
    KillTimer(TempoHelper);
    KillTimer(TempoAn);
    KillTimer(TempoServicoTaxi);
    KillTimer(TempoServicoOnibus);
    KillTimer(TempoServicoPolicia);
    KillTimer(TempoServicoMedico);
    KillTimer(TempoServicoMecanico);
    KillTimer(TempoMecanico);
    KillTimer(TempoMedico);
    KillTimer(TempoAnGov);
    KillTimer(TempoAnReporter);
    KillTimer(TempoSincronizar);
    KillTimer(Tempohbomba);
    KillTimer(Tempocbomba);
    SaveBoxer();
    GameModeExit();
}

public LoadBoxer()
{
    new arrCoords[3][64];
    new strFromFile2[128];
    new File: file = fopen("PlayGamer/boxer.ini", io_read);
    if (file)
    {
        fread(file, strFromFile2);
        split(strFromFile2, arrCoords, ',');
        Titel[TitelWins] = strval(arrCoords[0]);
        strmid(Titel[TitelName], arrCoords[1], 0, strlen(arrCoords[1]), 255);
        Titel[TitelLoses] = strval(arrCoords[2]);
        fclose(file);
    }
    return 1;
}

public SaveBoxer()
{
    new coordsstring[128];
    format(coordsstring, sizeof(coordsstring), "%d,%s,%d", Titel[TitelWins],Titel[TitelName],Titel[TitelLoses]);
    new File: file2 = fopen("PlayGamer/boxer.ini", io_write);
    fwrite(file2, coordsstring);
    fclose(file2);
    return 1;
}

public LoadStuff()
{
    new arrCoords[4][64];
    new strFromFile2[128];
    new File: file = fopen("PlayGamer/stuff.ini", io_read);
    if (file)
    {
        fread(file, strFromFile2);
        split(strFromFile2, arrCoords, ',');
        Jackpot = strval(arrCoords[0]);
        Tax = strval(arrCoords[1]);
        TaxValue = strval(arrCoords[2]);
        fclose(file);
    }
    return 1;
}

public SaveStuff()
{
    new coordsstring[128];
    format(coordsstring, sizeof(coordsstring), "%d,%d,%d", Jackpot,Tax,TaxValue);
    new File: file2 = fopen("PlayGamer/stuff.ini", io_write);
    fwrite(file2, coordsstring);
    fclose(file2);
    return 1;
}

public SaveHelp()
{
    new idx = 0;
    new File: file2;
    while(idx < sizeof(HelpInfo))
    {
        new coordsstring[128];
        format(coordsstring, sizeof(coordsstring), "%s,%d\n",HelpInfo[idx][gMembro],HelpInfo[idx][HelperAtivo]);
        if(idx == 0)
        {
            file2 = fopen("PlayGamer/Helpers.cfg", io_write);
        }
        else
        {
            file2 = fopen("PlayGamer/Helpers.cfg", io_append);
        }
        fwrite(file2, coordsstring);
        idx++;
        fclose(file2);
    }
    return 1;
}
public LoadHelp()
{
    new arrCoords[2][64];
    new strFromFile2[128];
    new File: file = fopen("PlayGamer/Helpers.cfg", io_read);
    if (file)
    {
        new idx = 0;
        while(idx < sizeof(HelpInfo))
        {
            fread(file, strFromFile2);
            split(strFromFile2, arrCoords, ',');
            strmid(HelpInfo[idx][gMembro], arrCoords[0], 0, strlen(arrCoords[0]), 255);
            HelpInfo[idx][HelperAtivo] = strval(arrCoords[1]);
            idx++;
        }
        printf("Sistema de Helper Carregado! Vagas: %d ", idx);
    }
    fclose(file);
    return 1;
}
public SaveAdm()
{
    new idx;
    new File: file2;
    print("===========[Salvando Admins]============");
    while (idx < sizeof(AdmInfo))
    {
        new coordsstring[128];
        format(coordsstring, sizeof(coordsstring), "%s,%d\n",AdmInfo[idx][gMembro],AdmInfo[idx][AdminAtivo]);
        if(idx == 0)
        {
            file2 = fopen("PlayGamer/Admins.cfg", io_write);
        }
        else
        {
            file2 = fopen("PlayGamer/Admins.cfg", io_append);
        }
        printf("Admin %s, Salvo!", AdmInfo[idx][gMembro]);
        fwrite(file2, coordsstring);
        idx++;
        fclose(file2);
    }
    print("=======================================");
    return 1;
}
public LoadAdm()
{
    new arrCoords[2][64];
    new strFromFile2[128];
    new File: file = fopen("PlayGamer/Admins.cfg", io_read);
    if (file)
    {
        new idx = 0;
        print("===========[Abrindo Admins]============");
        while(idx < sizeof(AdmInfo))
        {
            fread(file, strFromFile2);
            split(strFromFile2, arrCoords, ',');
            strmid(AdmInfo[idx][gMembro], arrCoords[0], 0, strlen(arrCoords[0]), 255);
            AdmInfo[idx][AdminAtivo] = strval(arrCoords[1]);
            idx++;
        }
        printf("Sistema de Admin Carregado! Vagas: %d ", idx);
    }
    fclose(file);
    return 1;
}
//------------------------------------------------------------------------------------------------------
public OnGameModeInit()
{
    /*ImagemEntrada = TextDrawCreate(1.000000, -1.000000, "_");
    TextDrawBackgroundColor(ImagemEntrada, 255);
    TextDrawFont(ImagemEntrada, 4);
    TextDrawLetterSize(ImagemEntrada, 0.500000, 1.000000);
    TextDrawColor(ImagemEntrada, -1);
    TextDrawSetOutline(ImagemEntrada, 0);
    TextDrawSetProportional(ImagemEntrada, 1);
    TextDrawSetShadow(ImagemEntrada, 1);
    TextDrawUseBox(ImagemEntrada, 1);
    TextDrawBoxColor(ImagemEntrada, 255);
    TextDrawTextSize(ImagemEntrada, 645.000000, 450.000000);
    AddPlayerClass(0, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);*/
    for( new i; i < MAX_BIZZES; i ++ )
    {
        BizzInfo[i][bPlayerUsou] = 999;
    }
    for( new i; i < MAX_ORGS; i++ )
        TimerOrg[ i ] = 0;
    ServerMoneyInit();
    GMXPROIBIDO = 0;
    FerrisWheelObjects[10]=CreateObject(18877,389.7734,-2028.4688,22,0,0,90,300);
    FerrisWheelObjects[11]=CreateObject(18878,389.7734,-2028.4688,22,0,0,90,300);
    forEx((sizeof FerrisWheelObjects)-2,x){
        FerrisWheelObjects[x]=CreateObject(18879,389.7734,-2028.4688,22,0,0,90,300);
        AttachObjectToObject(FerrisWheelObjects[x], FerrisWheelObjects[10],gFerrisCageOffsets[x][0],gFerrisCageOffsets[x][1],gFerrisCageOffsets[x][2],0.0, 0.0, 90, 0 );}
        SetTimer("RotateFerrisWheel",FERRIS_WHEEL_WAIT_TIME,false);
        forEx(MAX_PLAYERS,playerid){
        RemoveBuildingForPlayer(playerid, 6463, 389.7734, -2028.4688, 19.8047, 0.5);
        RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2035.3828, 29.9531, 50);
        RemoveBuildingForPlayer(playerid, 6298, 389.7734, -2028.4688, 19.8047, 0.5);
        RemoveBuildingForPlayer(playerid, 6461, 389.7734, -2028.5000, 20.1094, 0.5);
        RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2028.5000, 32.2266, 50);
    }
    //misseis

    /*AddStaticSAM( -24.3981,-2331.3115,19.3330);
    AddStaticSAM( 26.7216,-2380.3430,16.4561);
    AddStaticSAM( 5.0477,-2399.1523,16.4709);
    AddStaticSAM( -70.9525,-2278.5601,22.3635);
    AddStaticSAM( -118.1392,-2220.4456,16.4614);
    AddStaticSAM( -133.3530,-2233.9038,16.4614);
    SetTimer("OnSamSiteUpdate",2000,true);
    SAM_start();*/
    //CarregarQuantidadeCasas();
    CriarTextoGuerra();
    EnableStuntBonusForAll(true);
    BanXiterOn = false;
    getdate(v[0], v[1], v[2]);
    gettime(v[3], v[4], v[5]);
    print("\n---------------------------------------------------------");
    printf("Server Ligado: [%02d/%02d/%d %02d:%02d:%02d]", v[2], v[1], v[0], v[3], v[4], v[5]);
    print("---------------------------------------------------------\n");
    SetHora();
    print("-----------------------------");
    print("*** GM - BPG RPG Iniciado ***");
    print("-----------------------------");
    MaiorID = MAX_PLAYERS;
//=====================================[INFOORG]================================//
    LoadOrgs();
//==============================================================================//
    getdate(year, month, day);
    Verck = 1;
    Verdmhit = 1;
    format(DataServidor, sizeof(DataServidor), "%d/%d/%d", day,month,year);
    for(new i;i<MaiorID;i++)
    {
        strmid(StrPasswrd[i], "Vazio", 0, strlen("Vazio"), 255);
    }
    CarregarMorro();
    //guerra de pontos by vinny ==2256        2256           2256        2256
    GZMorro[1] = GangZoneCreate(2202.403320, -1131.981933, 2322.403320, -1107.981933);//indo pra ponta
    GZMorro[2] = GangZoneCreate(2041.285644, -1075.884277, 2320.285644, -940.884277);//meio
    GZMorro[3] = GangZoneCreate(2106.894042, -1108.459472, 2319.894042, -1075.459472);//int
    GZMorro[4] = GangZoneCreate(2320.003906, -1108.388183, 2494.003906, -942.388183); //grande
    for(new c=0;c<MaiorID;c++)
    {
        if(IsPlayerConnected(c) && !IsPlayerNPC(c))
        {
            pObject[c][slotreserved] = false;
        }
    }
    {
        dini_Create("Araras.ini");
    }
    LoadCarros();
    FamilyBloqueada = 99;
    SetTimer( "ContratoAutomatico", 1000*10*60, true );//Yiakin FEZ!!
   // CarregarArvores();
//================================= Tunar ==================================
    Principal = CreateMenu("Tunar", 1, 20.0, 120.0, 150.0, 40.0);
    AddMenuItem(Principal, 0, "Cores");
    AddMenuItem(Principal, 0, "Rodas");
    AddMenuItem(Principal, 0, "Volume do radio");
    AddMenuItem(Principal, 0, "Componentes");
    AddMenuItem(Principal, 0, "PaintJobs");
    Coresvinny = CreateMenu("Tunar", 1, 20.0, 120.0, 150.0, 40.0);
    AddMenuItem(Coresvinny, 0, "Preto");
    AddMenuItem(Coresvinny, 0, "Branco");
    AddMenuItem(Coresvinny, 0, "Vermelho");
    AddMenuItem(Coresvinny, 0, "Azul");
    AddMenuItem(Coresvinny, 0, "Verde");
    AddMenuItem(Coresvinny, 0, "Amarelo");
    AddMenuItem(Coresvinny, 0, "Rosa");
    AddMenuItem(Coresvinny, 0, "Marrom");
    AddMenuItem(Coresvinny, 0, "Voltar");
    Rodas = CreateMenu("Tunar", 1, 20.0, 120.0, 150.0, 40.0);
    AddMenuItem(Rodas, 0, "Offroad");
    AddMenuItem(Rodas, 0, "Mega");
    AddMenuItem(Rodas, 0, "Wires");
    AddMenuItem(Rodas, 0, "Twist");
    AddMenuItem(Rodas, 0, "Grove");
    AddMenuItem(Rodas, 0, "Import");
    AddMenuItem(Rodas, 0, "Atomic");
    AddMenuItem(Rodas, 0, "Ahab");
    AddMenuItem(Rodas, 0, "Virtual");
    AddMenuItem(Rodas, 0, "Voltar");
    VolumedoCarro = CreateMenu("Tunar", 1, 20.0, 120.0, 150.0, 40.0);
    AddMenuItem(VolumedoCarro, 0, "Alto");
    AddMenuItem(VolumedoCarro, 0, "Super Alto");
    AddMenuItem(VolumedoCarro, 0, "Ultra Alto");
    AddMenuItem(VolumedoCarro, 0, "King Alto");
    AddMenuItem(VolumedoCarro, 0, "Voltar");
    Componentes= CreateMenu("Tunar", 1, 20.0, 120.0, 150.0, 40.0);
    AddMenuItem(Componentes, 0, "Suspensao");
    AddMenuItem(Componentes, 0, "Nitro x10");
    AddMenuItem(Componentes, 0, "Reparar Carro");
    AddMenuItem(Componentes, 0, "Voltar");
    PaintJobs= CreateMenu("Tunar", 1, 20.0, 120.0, 150.0, 40.0);
    AddMenuItem(PaintJobs,0,"Paintjob 1");
    AddMenuItem(PaintJobs,0,"Paintjob 2");
    AddMenuItem(PaintJobs,0,"Paintjob 3");
    AddMenuItem(PaintJobs,0,"Paintjob 4");
    AddMenuItem(PaintJobs,0,"Paintjob 5");
    AddMenuItem(PaintJobs, 0, "Voltar");
//=========================================================================
    // NOVA HQ MEDICOS
    Create3DTextLabel("{FFA07A}::Elevador::\n{FFFFFF}Para subir aperte {FFA07A}'ENTER'",COR_3DLABEL,2037.2682,-1404.5232,17.2572,15.0,0);//Yiakin FEZ!!
    Create3DTextLabel("{FFA07A}::Elevador::\n{FFFFFF}Para subir aperte {FFA07A}'ENTER'",COR_3DLABEL,2037.2682,-1404.5232,17.2572,15.0,0);
    Create3DTextLabel("{FFA07A}::Elevador::\n{FFFFFF}Para descer aperte {FFA07A}'ENTER'",COR_3DLABEL,2042.4469,-1395.6266,48.3359,15.0,0);
    //Create3DTextLabel("{FFA07A}::Hospital de Los Santos::\n{FFFFFF}Para entrar aperte {FFA07A}'ENTER'",COR_3DLABEL,2025.1075,-1402.5234,17.2085 + 0.5,15.0,0);
    //CreatePickup( 1239, 1, 2025.1075,-1402.5234,17.2085 );
    //-------------

    Create3DTextLabel("PARA SUBIR '/eadm'", COLOR_YELLOW2, 1528.9015,-1468.4169,9.5000, 10, 0);
    Create3DTextLabel("PARA DESCER '/eadm'", COLOR_YELLOW2, 1523.1340,-1455.0103,63.8594, 10, 0);
    Create3DTextLabel("Policia Civil Publica\nAperte 'F' Para Sair",COR_3DLABEL,238.6220,114.9466,1010.2188,30.0,1);
    Create3DTextLabel("Menu cameras de segurança 1\nAperte a letra 'F' para acessar",COR_3DLABEL,237.7438,108.0919,1010.2188,15.0,1);//BOMB
    Create3DTextLabel("Menu cameras de segurança 2\nAperte a letra 'F' para acessar",COR_3DLABEL,226.8586,127.6783,1010.2188,15.0,1);//BOMB
    Create3DTextLabel("Menu cameras de segurança 3\nAperte a letra 'F' para acessar",COR_3DLABEL,215.5024,125.1288,1003.2188,15.0,1);//BOMB
    Create3DTextLabel("Policia Civil Publica\nAperte 'F' Para Entrar",COR_3DLABEL,943.0517,-1743.3169,13.5546,30.0,0);
    Duplicar3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Autorização para Advogados\n{FFFFFF}Digite /Autorizacao para Pegar",COR_3DLABEL,256.0320,84.5082,1002.4453,5.0,0);
    Create3DTextLabel("Saida",COR_3DLABEL,246.7823,62.3387,1003.6406,5.0,1,0);
    Create3DTextLabel("{FF0000}::Elevador::\n{FFFFFF}Para subir aperte {FF0000}'ENTER'",COR_3DLABEL,1385.2656,-1661.7928,13.4636,5.0,0);
    Create3DTextLabel("{FF0000}::Elevador::\n{FFFFFF}Para descer aperte {FF0000}'ENTER'",COR_3DLABEL,1390.8943,-1661.2303,39.5469,5.0,0);
    Duplicar3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Autorização para Advogados\n{FFFFFF}Digite /Autorizacao para Pegar",COR_3DLABEL,269.4763,76.6585,1001.0391,5.0,0);
    Duplicar3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Autorização para Advogados\n{FFFFFF}Digite /Autorizacao para Pegar",COR_3DLABEL,202.5491,179.1493,1003.0323,20.0,0);
    Duplicar3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Autorização para Advogados\n{FFFFFF}Digite /Autorizacao para Pegar",COR_3DLABEL,-1318.5383,489.2506,11.1953,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Autorização para Advogados\n{FFFFFF}Digite /Autorizacao para Pegar",COR_3DLABEL,214.9535,118.0954,999.0156,20.0,0);
    Duplicar3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Autorização para Advogados\n{FFFFFF}Digite /Autorizacao para Pegar",COR_3DLABEL,323.7303,308.9208,999.1484,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Ginásio de Lutas de LS\n{FFFFFF}Aperte Enter Para Mudar Luta",COR_3DLABEL,768.2192,-3.9873,1000.7203,15.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Sala de Votações\n{FFFFFF}Digite /votar para Votar",COR_3DLABEL,359.4827,207.1152,1008.3828,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Área de Eleições\n{FFFFFF}Entre aqui Para Votar",COR_3DLABEL,366.5278,189.0388,1008.3828,30.0,0);
    Create3DTextLabel("Seja Bem Vindo ao\n{551A8B}{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer",0xFFFFFFFF,1726.9946,-1635.9073,20.2168,16.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Ajuda Para Novatos\n{FFFFFF}Aperte Enter Para Ver",COR_3DLABEL,1722.2274,-1625.4542,20.2117,16.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Orelhão Público\n{FFFFFF}Digite ''/Orelhao'' Para Usar",COR_3DLABEL,1710.7872,-1605.3376,13.5469,16.0,0);
    /*Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre do Banco\n{FFFFFF}Digite /roubar Para Roubar",COR_3DLABEL,2306.5127,-6.1166,26.7422,10.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre da Lotérica\n{FFFFFF}Digite /roubar Para Roubar",COR_3DLABEL,820.6042,8.3990,1004.1962,10.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre do Posto\n{FFFFFF}Digite /roubar Para Roubar",COR_3DLABEL,381.5648,-188.1646,1000.6328,10.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre da Loja de Armas 1\n{FFFFFF}Digite /roubar Para Roubar",COR_3DLABEL,2169.1516,1589.9265,999.9713,10.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre da Loja de Armas 2\n{FFFFFF}Digite /roubar Para Roubar",COR_3DLABEL,451.3090,-79.8603,999.5547,10.0,0);*/
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre da Prefeitura",COR_3DLABEL,354.6608,172.0170,1008.3802,10.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Lotérica de Los Santos\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,1631.9160,-1172.1013,24.0781,30.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Agência de Empregos BPG\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,361.8300,173.5202,1008.3828,15.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Mudança de Sexo\n{FFFFFF}Digite /Mudarsexo para Trocar",COR_3DLABEL,360.5766, 164.2014, 1008.3828,15.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82FABE}Compra de Produtos\n{FFFFFF}Digite '/Comprarprodutos' para Comprar",COR_3DLABEL,2066.3315,-2088.7920,14.1241,15.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Bônus por players online\n{FFFFFF}Aperte Enter Para pegar o Presente",COR_3DLABEL,1447.0576,-1781.6187,13.6468,40.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Caixa Eletrônico\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,2224.1819,-1141.8778,1025.7969,15.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Caixa Eletrônico\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,2232.2729,-1162.5684,25.8906,15.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Caixa Eletrônico\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,957.4735,-48.6141,1001.1172,15.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Caixa Eletrônico\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1550.4686,-1669.6666,13.5624,15.0,0);
    Duplicar3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Caixa Eletrônico\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,229.6725,153.8311,1003.0234,15.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Caixa Eletrônico\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,321.4753,305.5962,999.1484,15.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Caixa Eletrônico\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,-1347.6376,499.9476,11.1953,15.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Caixa Eletrônico\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,251.4170,120.7698,1010.2188,15.0,1);//Caixa Eletronico Policia Civil
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Caixa Eletrônico\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1467.5273, -1782.6521, 13.1987,15.0,0);
    //Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Banco PlayGamer\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,2308.9492,-14.1523,26.7422,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Mercado BPG 24/7\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,1833.6124,-1842.4968,13.5781,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Mercado BPG 24/7\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,1000.5861,-919.8832,42.3281,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Mercado BPG 24/7\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,1928.6006,-1776.4480,13.5469,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Mercado BPG 24/7\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,1315.5110,-898.9860,39.5781,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Mercado BPG 24/7\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,1352.3269,-1759.2491,13.5078,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Los Santos Prefeitura\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,1484.3788,-1777.2107,15.5364,40.0,0);
   // Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Sub-HQ Hells Angels\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,1974.7767, -2068.1162, 13.5756,40.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Alhambra\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,1837.0278,-1682.3890,13.3233,30.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}MenuCop\n{FFFFFF}Digite /MenuCop Para Usar",COR_3DLABEL,255.1110,76.0224,1003.6406,3.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}MenuCop\n{FFFFFF}Digite /MenuCop Para Usar",COR_3DLABEL,-1616.1294,681.1594,7.1875,3.0,0);
    Duplicar3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}MenuCop\n{FFFFFF}Digite /MenuCop Para Usar",COR_3DLABEL,230.1107,165.2237,1003.0234,3.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}MenuCop\n{FFFFFF}Digite /MenuCop Para Usar",COR_3DLABEL,1530.3945,-1664.0377,6.2187,3.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}MenuCop\n{FFFFFF}Digite /MenuCop Para Usar",COR_3DLABEL,302.7606,-1529.7537,24.9219,3.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}MenuCop\n{FFFFFF}Digite /MenuCop Para Usar",COR_3DLABEL,1712.3607,1177.3903,34.8259,5.0,0);
//  Create3DTextLabel("Bater Cartão\n{FFFFFF}Aperte Enter Para Bater",COR_3DLABEL,914.2933,-1235.1436,17.2109,3.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\nBater Cartão\n{FFFFFF}Aperte Enter Para Bater",COR_3DLABEL,-1345.8823,492.5301,11.2027,3.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\nBater Cartão\n{FFFFFF}Aperte Enter Para Bater",COR_3DLABEL,326.4911,307.0710,999.1484,3.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\nBater Cartão\n{FFFFFF}Aperte Enter Para Bater",COR_3DLABEL,629.1463,-581.5966,16.9337,3.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\nBater Cartão\n{FFFFFF}Aperte Enter Para Bater",COR_3DLABEL,-2446.4824,516.1896,30.2254,3.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Menu de Drogas\nDigite /pegar",COR_3DLABEL,2152.4727,-1014.0005,62.8375,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Menu de Drogas\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1450.4479,-2287.0803,13.5469,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Menu de Drogas\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1919.1384,-1415.4775,13.5703,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Menu de Drogas\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1123.7664,-1506.4692,15.7869,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Menu da Mafia\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1615.9785,1687.5527,11.2184,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Menu da Mafia\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,2626.9204,1815.5192,11.0234,20.0,0);
    //Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Menu da Mafia\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,675.0947,-1275.7603,13.6334,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Menu da Mafia\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1738.6844,-1944.9553,13.5647,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Loja de Roupas Binco\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,2244.3423,-1665.5542,15.4766,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Loja de Roupas ZIP\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,461.3484,-1500.9084,31.0592,20.0,0);
    //Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}B.O.P.E\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,914.33,-1037.52,31.90,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}The Pig Pen\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,2421.4998,-1219.2438,25.5617,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Ginásio de Lutas de LS\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,2229.9011,-1721.2582,13.5613,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Burguer Shot\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,1200.4497,-918.7695,43.1105,20.0,0);
    //Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {00FF00}Gamer\n{82fabE}Burguer Shot\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,810.4855,-1616.1888,13.5469,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cluckin Bell\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,927.6217,-1353.0105,13.3438,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Well Stacked Pizza\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,2105.4858,-1806.4725,13.5547,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}BPG's Bar\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,975.4691,-1335.9618,13.5319,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Hotel BPG\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,2233.2659,-1159.8256,25.8906,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Hotel BPG\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,2212.6235,-1150.4385,1025.7969,20.0,0);
    Duplicar3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Departamento\n{FFFFFF}Aperte Enter Para Sair",COR_3DLABEL,238.68,138.68,1003.02,20.0,-1);
 //Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}B.O.P.E\n{FFFFFF}Aperte Enter Para Sair",COR_3DLABEL,238.68,138.68,1003.02,20.0,6);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Storm\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,2481.42,-1536.85,24.12,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Storm\n{FFFFFF}Aperte Enter Para Sair",COR_3DLABEL,-1424.1304,928.8401,1036.3972,20.0,0);
    Create3DTextLabel("Brasil {FFFFFF}Play{FF0000}Gamer\n{82fabE}B.O.P.E\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,913.68,-1004.56,37.98,20.0,0);
    Create3DTextLabel("Brasil {FFFFFF}Play{FF0000}Gamer\n{82fabE}B.O.P.E\n{FFFFFF}Aperte Enter Para ir Aos Presos",COR_3DLABEL,1883.72,1200.16,18.17,20.0,0);
    Create3DTextLabel("Brasil {FFFFFF}Play{FF0000}Gamer\n{82fabE}B.O.P.E\n{FFFFFF}Aperte Enter Para Voltar",COR_3DLABEL,1874.39,1222.66,18.17,20.0,0);
    Create3DTextLabel("Brasil {FFFFFF}Play{FF0000}Gamer\n{82fabE}B.O.P.E\n{FFFFFF}Aperte Enter Para Sair",COR_3DLABEL,1866.00,1184.52,18.17,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Posto Abandonado\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,-78.9350,-1169.6569,2.1504,20.0,0);
    //Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HQ Los Aztecas\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,1673.9886,-2122.1403,14.6014,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.:: Hitmans ::.\nPegue seu pacote aqui!\nOu aperte F para acessar o cofre",COR_3DLABEL,1097.9017,-326.4841,73.9922,15.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.:: Triads ::.\nPegue seu pacote aqui!\nOu aperte F para acessar o cofre",COR_3DLABEL,2743.39,-2454.62,13.86,15.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Equipar FARC\nDigite /equipar Para Equipar",COR_3DLABEL,414.5280,2531.5229,19.1648,15.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Equipar Policia Civil\nAperte Enter Para Equipar",COR_3DLABEL,234.3249,111.4311,1003.2257,15.0,1);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Equipar Guerrilheiros Israelitas\nDigite /equipar Para Equipar",COR_3DLABEL,-2237.5623,2353.8267,4.9804,15.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Menu de Compras\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,-26.8819,-89.6936,1003.5469,15.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Menu de Compras\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,-22.2540,-55.6456,1003.5469,15.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Menu de Compras\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,-22.3265,-138.4765,1003.5469,15.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Menu de Compras\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,-30.3140,-28.3121,1003.5573,15.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Elevador da DP\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1524.4977,-1677.9469,6.2188,8.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Elevador da DP\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1565.1235,-1666.9944,28.3956,8.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Elevador da DP\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,246.2975,87.4735,1003.6406,8.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Menu de Comprar Licencas\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1490.2411,1307.2179,1093.2891,10.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Menu de Comprar Armas\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,312.5540,-168.7472,999.5938,8.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Menu de Comprar Armas\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,295.5530,-84.1116,1001.5156,8.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Menu de Comprar Armas\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,296.1042,-38.0026,1001.5156,8.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Menu de Comprar Armas\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,316.3512,-133.7587,999.6016,8.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Menu de Pegar Materiais\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,2026.2104,-1896.1097,13.5469,10,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Menu de Pegar Materiais\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1240.5569,-2036.9919,59.9709,10,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Trocar Materiais\nAperte Enter Para Trocar",COR_3DLABEL,1990.8590,-1996.3722,13.5469,10,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Snake\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,752.9537,1443.1010,1102.7031,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HQ Snake\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,3046.1663,-1956.1207,11.1547,30.0,0);

    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Trocar Materiais\nAperte Enter Para Trocar",COR_3DLABEL,1240.3546,-2067.5168,59.9752,10,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cura do Hospital\n{FFFFFF}Digite /curarme Para Se Curar",COR_3DLABEL,1719.8948,1170.1931,34.8259,8,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cura do Hospital\nDigite /curarme Para Se Curar",COR_3DLABEL,2029.5945,-1404.6426,17.2512,8,0);
    Create3DTextLabel("{82fabE}Elevador Policia Civil\n{FFFFFF}Aperte Enter",COR_3DLABEL,239.1693,117.6838,1003.2188,7,1);
    Create3DTextLabel("{82fabE}Elevador Policia Civil\n{FFFFFF}Aperte Enter",COR_3DLABEL,256.6183,126.0865,1010.2188,7,1);
    Create3DTextLabel("{82fabE}Elevador Policia Civil\n{FFFFFF}Aperte Enter",COR_3DLABEL,960.1323,-1727.9789,23.4883,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Limpar Ficha\n{FFFFFF}Digite /limpar Para Limpar",COR_3DLABEL,253.9280,69.6094,1003.6406,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Limpar Ficha\n{FFFFFF}Digite /limpar Para Limpar",COR_3DLABEL,223.3242,109.9442,1010.2188,7,1);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Limpar Ficha\n{FFFFFF}Digite /limpar Para Limpar",COR_3DLABEL,237.3384,108.1396,1003.2257,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Limpar Ficha\n{FFFFFF}Digite /limpar Para Limpar",COR_3DLABEL,259.2474,120.3977,1003.2188,7,0);
    Duplicar3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Limpar Ficha\n{FFFFFF}Digite /limpar Para Limpar",COR_3DLABEL,198.9671,168.1982,1003.0234,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Limpar Ficha\n{FFFFFF}Digite /limpar Para Limpar",COR_3DLABEL,234.8419,111.2194,1003.2257,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Limpar Ficha\n{FFFFFF}Digite /limpar Para Limpar",COR_3DLABEL,326.8282,304.4166,999.1484,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Limpar Ficha\n{FFFFFF}Digite /limpar Para Limpar",COR_3DLABEL,256.5436,69.7123,1003.6406,7, 1, 0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Limpar Ficha\n{FFFFFF}Digite /limpar Para Limpar",COR_3DLABEL,1898.40,1193.43,18.17,7, 1, 0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Limpar Ficha\n{FFFFFF}Digite /limpar Para Limpar",COR_3DLABEL,-103.09999847412,-2257,11.199999809265,7, 0, 0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::MenuCop::.\n{00DDDD}Aperte 'ENTER' para acessar o menu",COR_3DLABEL,1391.5026,-1623.0095,13.5469,20,0);
    //Create3DTextLabel("Brasil {FFFFFF}Play{FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,1679.9660,-2119.3588,13.5468,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,-74.3351,-1738.7722,10.8547,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,1679.9660,-2119.3588,13.5468,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,715.2682,-1450.2914,17.6953,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,747.3004,-1358.9138,13.5000,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,2510.6958,-1672.439,13.4323,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,1138.1064,-1196.2368,32.0275,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,2815.6347,-1178.5112,25.2702,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,2155.1694,-1810.1579,13.5494,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,1304.88,-860.02,39.58,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use Aperte F para equipar",COR_3DLABEL,1002.0766,-1463.7814,13.5533,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,506.5681,-80.5381,998.9609,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,313.87,-1338.44,14.31,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,23.5511,-2654.6933,40.5070,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,2085.4214,-2273.9043,13.5469,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,-220.6183,1405.9781,27.1656,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,1961.1135, -2046.2855, -1.1177,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,2079.4207,-1574.9639,14.9043,7,0); //HunTerS
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,199.8940,-34.6994,1002.3040,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,2344.1047,-1353.3613,27.1266,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,788.7240,-2209.8838,14.9078,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,761.412963,1440.191650,1102.703125,7,0);
    //Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Família Snake\n{FFFFFF}Use /equipar para equipar",COR_3DLABEL,1345.5323,-2881.0178,14.2059,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Elevador::.\n{00DDDD}B.O.P.E\n{FFFFFF}Use /ebope para usar o Elevador",COR_3DLABEL,923.53,-1036.32,31.90,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Elevador::.\n{00DDDD}B.O.P.E\n{FFFFFF}Use /ebope para usar o Elevador",COR_3DLABEL,922.81,-1017.19,109.09,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Elevador::.\n{00DDDD}Storm\n{FFFFFF}Use /ebb para usar o elevador!",COR_3DLABEL,2473.5903,-1531.1597,24.1497,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Elevador::.\n{00DDDD}Storm\n{FFFFFF}Use /ebb para usar o elevador!",COR_3DLABEL,2462.6775,-1518.4772,32.5703,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,2474.5720,-1518.7666,23.9966,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,945.7804,2.2144,1000.9297,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,273.8237,-2164.9209,2.7978,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,846.0684,-2037.2328,12.8672,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Equipar::.\n{00DDDD}Use /equipar para equipar",COR_3DLABEL,1865.16,1198.86,18.17,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.:: Disfarce ::.\n{FFFFFF}Digite /dhitman para disfarsar",COR_3DLABEL,1110.4048,-355.8542,73.9851,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.:: Disfarce ::.\n{FFFFFF}Digite /dtriads para disfarsar",COR_3DLABEL,2773.01,-2461.69,13.64,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}.::Tunning Drifters::.\n{FFFFFF}Digite /Tunar para Personalizar",COR_3DLABEL,828.9000,-2056.1999,12.6000,28,0);

    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Policiais\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1568.6442,-1689.9729,6.2188,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Policiais\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,238.4616,111.9311,1010.2188,7,1);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Policiais\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,629.0273,-575.9557,16.9614,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Policiais\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,-2446.4119,529.9799,30.2148,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Policiais\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,-1341.1760,500.5289,11.1953,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Médicos\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1703.7823,1174.0271,34.8259,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Aztecas\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,2811.7102,-1166.1824,1025.5703,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Guerrilheiros Israelitas\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,-2242.7534,2359.0886,4.9809,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Prefeitura\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,356.3957,152.4393,1025.7891,7,0);
    //Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Hitmans\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1097.9017,-326.4841,73.9922,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Repórteres\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,752.1580,-1358.9927,13.5000,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Taxistas\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,992.5768,-1460.1726,13.5469,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Policiais\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,320.8083,307.5377,999.1484,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Mafia Russa\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,-2634.2791,1409.7692,906.4647,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Mafia Japonesa\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,-2167.5757,644.8060,1057.7687,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Groove Street\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,2514.1301,-1691.2979,14.0460,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre FARC\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,400.0611,2539.5366,16.5448,7,0);
    Duplicar3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Policiais\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,208.8036,145.8378,1003.0234,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Ballas\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1151.1399,-1197.9670,32.0275,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Vagos\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,2341.6677,-1186.3137,1027.9766,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Comando Vermelho\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,2151.3218,-1789.1669,13.5097,7,0);
    //Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Snake\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,752.9537,1443.1010,1102.7031,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre PCC\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1304.62,-866.76,39.58,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Hells Angels\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,509.7744,-73.3584,998.7578,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Mongols\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,684.7512,-461.8790,-25.6098,7,0);
    Create3DTextLabel("{1E90FF}Brasil {0000FF}Play {FF0000}Gamer\n{82fabE}Cofre Sons Of Anarchy\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,-223.7290,1410.9444,27.7734,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Drifters\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,827.9384,-2035.7565,12.8672,7,0);
    //Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HQ Snake\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,3046.1663,-1956.1207,11.1547,30.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HQ DesTroyeR\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,3034.8000,-318.1000,8.6000,30.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre HunTerS\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,2069.0581,-1567.3153,14.9078,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre FaTal DangeR\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,-77.4083,-1729.6631,10.8547,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Justiceiros\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,280.7871,-2167.1914,2.7978,30.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Justiceiros\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,203.8630,-40.8281,1001.8047,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Storm\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,2472.9619,-1524.3949,24.1870,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre DesTroyeR\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,961.2562,-0.0548,1001.1558,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Dark Gods\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,725.6419,-1451.0293,17.6953,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Psychopath\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,792.5604,-2215.7935,14.9078,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre Justiceiros\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,273.4333,-2169.5715,2.7978,7,0);

    //SetTimer("SendMensagens",240000,1);
    tempoGranaTR = SetTimer("GranaTerritorios", TEMPOGivePlayerMoney, 1);
    SetTimer("Velocimetro", 700, 1);
    AhOff = 0;
    new string[MAX_PLAYER_NAME];
    new string1[MAX_PLAYER_NAME];
    for(new c=0;c<MAX_VEHICLES;c++)
    {
        Gas[c] = GasMax;
        VeiculoNeon[c] = 0;
    }
    donoestacao = 0;
    donocasarao = 0;
    donoPark = 0;
    donoCemiterio = 0;
    donoPosto = 0;
    donoShop = 0;
    donoskate = 0;

    CarregarCasas();
    CarregarEmpresas();
    CarregarMiniEmpresas();
    CarregarFazendas();

    News[hTaken1] = 0; News[hTaken2] = 0; News[hTaken3] = 0; News[hTaken4] = 0; News[hTaken5] = 0;
    format(string, sizeof(string), "Nenhum");
    strmid(News[hAdd1], string, 0, strlen(string), 255);
    strmid(News[hAdd2], string, 0, strlen(string), 255);
    strmid(News[hAdd3], string, 0, strlen(string), 255);
    strmid(News[hAdd4], string, 0, strlen(string), 255);
    strmid(News[hAdd5], string, 0, strlen(string), 255);
    format(string1, sizeof(string1), "Nenhum");
    strmid(News[hContact1], string1, 0, strlen(string1), 255);
    strmid(News[hContact2], string1, 0, strlen(string1), 255);
    strmid(News[hContact3], string1, 0, strlen(string1), 255);
    strmid(News[hContact4], string1, 0, strlen(string1), 255);
    strmid(News[hContact5], string1, 0, strlen(string1), 255);

    SetGameModeText("BPG RPG: Brasil");
    SendRconCommand("hostname [BR/PT] Brasil PlayGamer [RPG v1.0]");
    SetTimer("RandomServerNames",2000,1);
    SendRconCommand("mapname RPG LS/SF/LV");
    ShowPlayerMarkers(0);
    AllowInteriorWeapons(1);
    //AllowAdminTeleport(1);
    DisableInteriorEnterExits();
    UsePlayerPedAnims();
    //CarregarIDEmpresas();
    // Player Class's
    for(new i = 0; i <= sizeof(Peds)-1; i++)
    {
        AddPlayerClass(Peds[i][0],1958.3783,1343.1572,1100.3746,269.1425,-1,-1,-1,-1,-1,-1);
    }
    new Float:testev = 0.000;
 for(new h = 0; h < sizeof(SBizzInfo); h++)
    {
        if(SBizzInfo[h][sbAtiva] != 1)
        {
            SBizzInfo[h][sbLocked] = 1;
            SBizzInfo[h][sbOwned] = 0;
            strmid(SBizzInfo[h][sbOwner], "O estado", 0, strlen("O estado"), 255);
            strmid(SBizzInfo[h][sbExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
            SBizzInfo[h][sbAtiva] = 0;
            SBizzInfo[h][sbDonoON] = 0;
            SBizzInfo[h][sbEntranceX] = 0.000;
            SBizzInfo[h][sbEntranceY] = 0.000;
            SBizzInfo[h][sbEntranceZ] = 0.000;
        }
        else
        {
            if(SBizzInfo[h][sbEntranceX] == testev && SBizzInfo[h][sbEntranceY] == testev) SBizzInfo[h][sbAtiva] = 0;
        }
    }
    for(new h = 0; h < MAX_FAZENDA; h++)
    {
        if(FazendaInfo[h][fAtiva] != 1)
        {
            FazendaInfo[h][fOwned] = 0;
            strmid(FazendaInfo[h][fDono], "Ninguem", 0, strlen("Ninguem"), 255);
            FazendaInfo[h][fAtiva] = 0;
            FazendaInfo[h][ffX] = 0.000;
            FazendaInfo[h][ffY] = 0.000;
            FazendaInfo[h][ffZ] = 0.000;
            FazendaInfo[h][fLucro] = 0;
            FazendaInfo[h][fMaxProd] = 0;
            FazendaInfo[h][fProd] = 0;
            FazendaInfo[h][fReceber] = 0;
            FazendaInfo[h][fValor] = 0;
            FazendaInfo[h][fFundos] = 0;
            FazendaInfo[h][fAtiva] = 0;
        }
        else
        {
            if(FazendaInfo[h][ffX] == testev && FazendaInfo[h][ffY] == testev) FazendaInfo[h][fAtiva] = 0;
        }
    }
    for(new h = 0; h < sizeof(HouseInfo); h++)
    {
        if(HouseInfo[h][hAtiva] != 1)
        {
                        HouseInfo[h][hHel] = 0;
                        HouseInfo[h][hArm] = 0;
                        HouseInfo[h][hHealthx] = 0;
                        HouseInfo[h][hHealthy] = 0;
                        HouseInfo[h][hHealthz] = 0;
                        HouseInfo[h][hArmorrx] = 0;
                        HouseInfo[h][hArmorry] = 0;
                        HouseInfo[h][hArmorrz] = 0;
                        HouseInfo[h][hLock] = 1;
                        HouseInfo[h][hOwned] = 0;
                        HouseInfo[h][hVec] = 475;
                        HouseInfo[h][hVcol1] = -1;
                        HouseInfo[h][hVcol2] = -1;
                        strmid(HouseInfo[h][hOwner], "O estado", 0, strlen("O estado"), 255);
                        HouseInfo[h][hEntrancex] = 0.000;
                        HouseInfo[h][hEntrancey] = 0.000;
                        HouseInfo[h][hEntrancez] = 0.000;
                        HouseInfo[h][hSpawnX] = 0.000;
                        HouseInfo[h][hSpawnY] = 0.000;
                        HouseInfo[h][hSpawnZ] = 0.000;
                        HouseInfo[h][hSpawnA] = 0.000;
        }
        else
        {
            if(HouseInfo[h][hEntrancex] == testev && HouseInfo[h][hEntrancey] == testev) HouseInfo[h][hAtiva] = 0;
        }
    }
    AddStaticPickup(1314, 23, 1523.1340,-1455.0103,63.8594,0); // /eadm
    AddStaticPickup(1314, 23, 922.81,-1017.19,109.09); // /ebope
    AddStaticPickup(1314, 23, 923.53,-1036.32,31.90); // /ebope
    AddStaticPickup(1314, 23, 2473.5903,-1531.1597,24.1497); // /ebb
    AddStaticPickup(1314, 23, 2462.6775,-1518.4772,32.5703); // /ebb
    //AddStaticPickup(1318, 23, 914.33,-1037.52,31.90); //Entrada BOPE
    AddStaticPickup(1318, 23, 238.68,138.68,1003.02,-1); //Saida ROTA
    AddStaticPickup(1318, 23, 2481.42,-1536.85,24.12); //Saida Monkeys
    AddStaticPickup(1318, 23, 203.72,-50.08,1001.80); //Entrada Monkeys
    AddStaticPickup(1318, 23, 1866.00,1184.52,18.17); //Saida BOPE
    AddStaticPickup(1318, 23, 913.68,-1004.56,37.98); //entrada BOPE
    AddStaticPickup(1318, 23, -2455.0996,503.7621,30.0775); //entrada BOPE
    AddStaticPickup(1314, 23, 1528.9015,-1468.4169,9.5000,0); // /eadm
    AddStaticPickup(1247, 23, 1368.4421,-1666.0829,13.4968,0);//BPM
    AddStaticPickup(1318, 23, 1898.40,1193.43,18.17); //Limpar BOPE
    AddStaticPickup(1242, 23, 1865.16,1198.86,18.17); //Menu BOPE
    AddStaticPickup(1318, 23, 1874.39,1222.66,18.17); //Presos BOPE
    AddStaticPickup(1318, 23, 1883.72,1200.16,18.17); //Presos BOPE
    AddStaticPickup(1314, 23, 1002.0766,-1463.7814,13.5533); //Equipar taxistas
    AddStaticPickup(356, 23, 1679.9660,-2119.3588,13.5468);
    AddStaticPickup(1318, 23, 414.5280,2531.5229,19.1648); //equipar FARC
    AddStaticPickup(1242, 23, 234.3249,111.4311,1003.2257,1); //equipar secretaria
    AddStaticPickup(356, 23, -74.3351,-1738.7722,10.8547);
    AddStaticPickup(1247, 23, 747.3004,-1358.9138,13.5000);
    AddStaticPickup(1318, 23, 715.2682,-1450.2914,17.6953);//Equipar Dark Gods
    AddStaticPickup(356, 23, 2510.6958,-1672.439,13.4323);
    AddStaticPickup(356, 23, 1138.1064,-1196.2368,32.0275);
    AddStaticPickup(356, 23, 2815.6347,-1178.5112,25.2702);
    AddStaticPickup(356, 23, 2155.1694,-1810.1579,13.5494);
    AddStaticPickup(356, 23, 1304.88,-860.02,39.58);
    AddStaticPickup(356, 23, 506.5681,-80.5381,998.9609);
    AddStaticPickup(356, 23, 23.5511,-2654.6933,40.5070);
    AddStaticPickup(356, 23, 2085.4214,-2273.9043,13.5469);
    AddStaticPickup(356, 23, -220.6183,1405.9781,27.1656);
    AddStaticPickup(356, 23, 1961.1135, -2046.2855, -1.1177);
    AddStaticPickup(356, 23, 2079.4207,-1574.9639,14.9043);  //equipar HunTerS
    AddStaticPickup(356, 23, 2344.1047,-1353.3613,27.1266);
    AddStaticPickup(356, 23, 199.8940,-34.6994,1002.3040);
    AddStaticPickup(356, 23, 788.7240,-2209.8838,14.9078); //KiLLeRs
    AddStaticPickup(356, 23, 761.412963,1440.191650,1102.703125); //famy Sys
    AddStaticPickup(356, 23, 1345.5323,-2881.0178,14.2059); //famy Cor
    AddStaticPickup(356, 23, 2474.5720,-1518.7666,23.9966); //HunTerS
    AddStaticPickup(356, 23, 945.7804,2.2144,1000.9297); //Killers
    AddStaticPickup(356, 23, 273.8237,-2164.9209,2.7978); //famy lgn
    AddStaticPickup(356, 23, 846.0684,-2037.2328,12.8672); //famy drifters
    AddStaticPickup(356, 23, 2332.0429,11.0080,26.4765);
    AddStaticPickup(1318, 23, 2140.9382,-1801.9813,16.1475) ; // Entrada HQ Comando Vermelho
    AddStaticPickup(1318, 23, 246.2975,87.4735,1003.6406); //elevador cop
    portaodpauto = CreatePickup(1210, 0, 246.4286,73.8840,1003.6406); //Dp Auto
    AddStaticPickup(351,23,312.5540,-168.7472,999.5938); // loja de armas 1
    AddStaticPickup(351,23,295.5530,-84.1116,1001.5156); // loja de armas 2
    AddStaticPickup(351,23,296.1042,-38.0026,1001.5156); // loja de armas 3
    AddStaticPickup(351,23,316.3512,-133.7587,999.6016); // loja de armas 4
    AddStaticPickup(1241,23,-22.2540,-55.6456,1003.5469); // loja 24/7
    AddStaticPickup(1241,23,-26.8819,-89.6936,1003.5469); // loja 24/7
    AddStaticPickup(1241,23,-22.3265,-138.4765,1003.5469); // loja 24/7
    AddStaticPickup(1241,23,-30.3140,-28.3121,1003.5573); // loja 24/7
    AddStaticPickup(1247, 23, 943.0517,-1743.3169,13.5546);//Policia Civil
    AddStaticPickup(1239,23,237.7438,108.0919,1010.2188,1) ; // Policia Civil 1
    AddStaticPickup(1239,23,226.8586,127.6783,1010.2188,1) ; // Policia Civil 2
    AddStaticPickup(1239,23,215.5024,125.1288,1003.2188,1) ; // Policia Civil 3
    AddStaticPickup(1239,23,304.7589,-1526.1545,24.9219) ; // Estacionamento rota fora 3
    AddStaticPickup(1239,23,288.6039,167.1537,1007.1719,1) ; // Estacionamento rota dentro 3
//==================================[COFRE HQ]======================================//
    AddStaticPickup(1239, 23, 1568.6442,-1689.9729,6.2188); //Cofre ORG
    AddStaticPickup(1239, 23, 238.4616,111.9311,1010.2188,1); //Cofre ORG
    AddStaticPickup(1239, 23, 629.0273,-575.9557,16.9614); //Cofre ORG
    AddStaticPickup(1239, 23, -2446.4119,529.9799,30.2148); //Cofre ORG
    AddStaticPickup(1239, 23, -1341.1760,500.5289,11.1953); //Cofre ORG
    AddStaticPickup(1239, 23, 1703.7823,1174.0271,34.8259); //Cofre ORG
    AddStaticPickup(1239, 23, 2811.7102,-1166.1824,1025.5703); //Cofre ORG
    AddStaticPickup(1239, 23, -2242.7534,2359.0886,4.9809); //Cofre ORG
    AddStaticPickup(1239, 23, 356.3957,152.4393,1025.7891); //Cofre ORG
    //AddStaticPickup(1239, 23, 1097.9017,-326.4841,73.9922); //Cofre ORG
    AddStaticPickup(1239, 23, 752.1580,-1358.9927,13.5000); //Cofre ORG
    AddStaticPickup(1239, 23, 992.5768,-1460.1726,13.5469); //Cofre ORG
    AddStaticPickup(1239, 23, 320.8083,307.5377,999.1484); //Cofre ORG
    AddStaticPickup(1239, 23, -2634.2791,1409.7692,906.4647); //Cofre ORG
    AddStaticPickup(1239, 23, -2167.5757,644.8060,1057.7687); //Cofre ORG
    AddStaticPickup(1239, 23, 2514.1301,-1691.2979,14.0460); //Cofre ORG
    AddStaticPickup(1239, 23, 400.0611,2539.5366,16.5448); //Cofre ORG
    AddStaticPickup(1239, 23, 208.8036,145.8378,1003.0234,-1); //Cofre ORG
    AddStaticPickup(1239, 23, 1151.1399,-1197.9670,32.0275); //Cofre ORG
    AddStaticPickup(1239, 23, 2341.6677,-1186.3137,1027.9766); //Cofre ORG
    AddStaticPickup(1239, 23, 2151.3218,-1789.1669,13.5097); //Cofre ORG
    AddStaticPickup(1239, 23, 752.9537,1443.1010,1102.7031); //Cofre ORG
    AddStaticPickup(1239, 23, 1304.62,-866.76,39.58); //Cofre ORG
    AddStaticPickup(1239, 23, 509.7744,-73.3584,998.7578); //Cofre ORG
    AddStaticPickup(1239, 23, 684.7512,-461.8790,-25.6098); //Cofre ORG
    AddStaticPickup(1239, 23, -223.7290,1410.9444,27.7734); //Cofre ORG
    AddStaticPickup(1239, 23, 827.9384,-2035.7565,12.8672); //Cofre ORG
    AddStaticPickup(1239, 23, 2069.0581,-1567.3153,14.9078); //Cofre ORG HunTerS
    AddStaticPickup(1239, 23, -77.4083,-1729.6631,10.8547); //Cofre ORG
    AddStaticPickup(1239, 23, 203.8630,-40.8281,1001.8047); //Cofre ORG
    AddStaticPickup(1239, 23, 2472.9619,-1524.3949,24.1870); //Cofre ORG Storm
    AddStaticPickup(1239, 23, -65.199996948242,-2295.3000488281,11.10000038147); //Cofre ORG FE
    AddStaticPickup(1239, 23, 961.2562,-0.0548,1001.1558); //Cofre ORG PsycO
    AddStaticPickup(1239, 23, 725.6419,-1451.0293,17.6953); //Cofre ORG Dark Gods
    AddStaticPickup(1239, 23,792.5604,-2215.7935,14.9078); //Cofre ORG psychopaths
    AddStaticPickup(1239, 23,273.4333,-2169.5715,2.7978); //Cofre ORG Justiceiros
//SAIDAS
    AddStaticPickup(1318, 23, 934.6144,7.9437,1000.9867); //Killers
    AddStaticPickup(1318, 23, 774.0968,-49.8827,1000.5859); //Justiceiros
    AddStaticPickup(1318, 23, 934.6144,7.9437,1000.9867,1); //Policia Civil
//======================================================================//
    AddStaticPickup(1277, 23, 1490.2411,1307.2179,1093.2891); //licencas
    AddStaticPickup(1277, 23, 355.4539,159.9982,1008.4802); //Fundos pref
    AddStaticPickup(1318, 23, 1467.5273, -1782.6521, 13.1987); //caixa prefeitura
    AddStaticPickup(1210, 23, 361.8300,173.5202,1008.3828); //Empregos
    AddStaticPickup(19132, 23, 360.5766, 164.2014, 1008.3828); //sexos
    AddStaticPickup(18749, 23, 1726.9946,-1635.9073,20.2168); //Boas Vindas '-'
    AddStaticPickup(19132, 23, 2066.3315,-2088.7920,14.1241); //produtos comprar
    AddStaticPickup(19132, 23, 1447.0576,-1781.6187,13.6468); //presentes
    AddStaticPickup(19132, 23, 1722.2274,-1625.4542,20.2117); //Ajuda Novatos
    AddStaticPickup(19132, 23, 1710.7872,-1605.3376,13.5469); //Ajuda Novatos
    AddStaticPickup(19132, 23, 359.4827,207.1152,1008.3828); //votos eu acho
    AddStaticPickup(19132, 23, 239.0100,-2241.8064,1.9766); //votos eu acho
    AddStaticPickup(19132, 23, 2780.4939,-1812.2635,11.8438); //conce
    AddStaticPickup(1240, 23, 1719.8948,1170.1931,34.8259); //Hospital 1 near Ammu
    AddStaticPickup(1240, 23, 2029.5945,-1404.6426,17.2512); //Hospital 2 near speedway
    AddStaticPickup(1318, 23, 1484.3788,-1777.2107,15.5364); //Gamer Hall
    AddStaticPickup(1318, 23, 2773.01,-2461.69,13.64); // dtriads
    AddStaticPickup(2060, 23, 2026.2104,-1896.1097,13.5469); //Pacotes de Material
    AddStaticPickup(2060, 23, 1990.8590,-1996.3722,13.5469); //Fabrica de Material
    AddStaticPickup(371, 23, 1544.2,-1353.4,329.4); //LS towertop
    AddStaticPickup(371, 23, 1536.0, -1360.0, 1150.0); //LS towertop
    AddStaticPickup(1242, 23, 1527.5,-12.1,1002.0); //binco armor
    AddStaticPickup(1240, 23, 279.3000,1853.5619,8.7649); //area51 health
    AddStaticPickup(1318, 23, 259.2474,120.3977,1003.2188);// /limpar
    AddStaticPickup(1318, 23, 223.3242,109.9442,1010.2188,1);// /limpar
    AddStaticPickup(1318, 23, 234.8461,111.1823,1003.2257);// /limpar
    AddStaticPickup(1318, 23, 1097.9017,-326.4841,73.9922); // equipar hitman
    AddStaticPickup(1318, 23, 1110.4048,-355.8542,73.9851); // disfarce hitman
    AddStaticPickup(1318, 23, 239.1693,117.6838,1003.2188,1);//Elevador Policia Civil 1
    AddStaticPickup(1318, 23, 256.6183,126.0865,1010.2188,1);//Elevador Policia Civil 2
    AddStaticPickup(1318, 23, 960.1323,-1727.9789,23.4883);//Elevador Policia Civil 3
    AddStaticPickup(1318, 23, 2743.39,-2454.62,13.86);
    AddStaticPickup(1242,23,352.0188,197.6048,1008.3828); //EquiparSercretaria
    AddStaticPickup(1318,23,1524.4977,-1677.9469,6.2188); //epm
    AddStaticPickup(1318,23,1565.1235,-1666.9944,28.3956); //epm
    AddStaticPickup(1318,23,374.3401,-2055.2114,8.0156); //emc
    AddStaticPickup(1318,23,368.7828,-2054.5476,15.4066); //emc
    AddStaticPickup(1318,23,964.0209,-1465.8312,13.4589); //etaxi
    AddStaticPickup(1318,23,965.7349,-1465.6044,21.3783); //etaxi
    AddStaticPickup(1318,23,2268.0308,2449.0750,3.5313); //Subirlv
    AddStaticPickup(1318,23,2267.2820,2458.2598,38.6837); //Descerlv
    AddStaticPickup(1314,23,2808.0322,-1176.3846,25.3794); // Elevador Vagos
    AddStaticPickup(1314,23,2807.4321,-1174.6454,32.6688); // Elevador Vagos
    //AddStaticPickup(1314,23,1263.2212,-1675.5933,13.5469); // Elevador sk
    //AddStaticPickup(1314,23,1273.8400,-1640.5203,27.3750); // Elevador sk
    AddStaticPickup(2060,23,2626.9204,1815.5192,11.0234); //Mafia - Pegar
    AddStaticPickup(1314,23,1327.1804,-884.2955,39.5781); //elevador pcc
    AddStaticPickup(1314,23,1324.3936,-890.1075,45.2266); //elevador pcc
    AddStaticPickup(1314,23,-54.6216,-237.0123,31.5678); //Elevador PC Descer
    AddStaticPickup(1314,23,346.8519,-1494.9565,36.0391);//Elevador ROTA Subir
    AddStaticPickup(1314,23,345.1602,-1482.8597,76.5391);//Elevador ROTA Descer
    AddStaticPickup(2060,23,1240.3546,-2067.5168,59.9752);// Trocar Materias Máfias
    AddStaticPickup(2060,23,1615.9785,1687.5527,11.2184);// Equipar Máfia Russa
// Entrances and exits start
    AddStaticPickup(1318, 23, 1384.4771,-1671.6896,13.4901);//Pickup 97
    AddStaticPickup(1318, 23, 2808.1106,-1189.6528,25.3436); //HQ VAGOS
    AddStaticPickup(1318, 23, 1554.9537,-1675.6584,16.1953);//DP PM
    AddStaticPickup(1318, 23, 918.8992,-1252.3286,16.2109);//Entrada Interior HQ PC
    AddStaticPickup(1247, 23, 1545.4073,-1607.9791,13.3828);//DP Prender
//  AddStaticPickup(1247, 23, 920.5212,-1184.8267,16.9766); // PC GARAGEM PRENDER
    AddStaticPickup(1247, 23, 341.4560,-1499.6265,36.0390); // pr garagem
    AddStaticPickup(1318, 23, 1836.4064,-1682.4403,13.3493);//Alhabra
    AddStaticPickup(1318, 23, 327.8898,-1511.8446,36.0325);//DP GT3
    AddStaticPickup(1318, 23, 975.4691,-1335.9618,13.5319);//Bar Pawno
    AddStaticPickup(1275, 23, 2244.3423,-1665.5542,15.4766);//Entrada Binco
    AddStaticPickup(1318, 23, 2229.9011,-1721.2582,13.5613);//Ganton gym
    AddStaticPickup(1318, 23, 2421.4998,-1219.2438,25.5617);//Pig Pen
    AddStaticPickup(1318, 23, 2419.9941,-1509.5865,24.0000);//Cluckin bell under it
    AddStaticPickup(1318, 23, 2398.6240,-1899.2014,13.5469);//Cluckin bell next to 10 green
    AddStaticPickup(1318, 23, 810.5328,-1616.1392,13.5469);//Marina burger
    AddStaticPickup(1318, 23, 927.6217,-1353.0105,13.3438);//Cluckin Bell
    AddStaticPickup(1318, 23, 1200.4232,-918.5194,43.1125);//Vinewood burger
    AddStaticPickup(1318, 23, 1833.6124,-1842.4968,13.5781);//24/7 estação entrada
    AddStaticPickup(1318, 23, 1315.5110,-898.9860,39.5781);//24/7 perto madd dogg
    AddStaticPickup(1318, 23, 1000.5861,-919.8832,42.3281);//24/7 gas station vinewood
    AddStaticPickup(1318, 23, 1928.6006,-1776.4480,13.5469);//24/7 posto sul
    AddStaticPickup(1318, 23, -25.1326,-141.0670,1003.5469); // 24-7 Exit
    AddStaticPickup(1318, 23, 1352.3269,-1759.2491,13.5078);//24/7 Near DMV
    AddStaticPickup(1318, 23, 1833.6124,-1842.4968,13.5781);//24/7 Near 8-Ball
    AddStaticPickup(1318, 23, 203.5140,-202.2578,1.5781); //Pizza stack at BlueBerry
    AddStaticPickup(1318, 23, 242.7591,66.4315,1003.6406); // Inside PD elevator
    AddStaticPickup(1318, 23, 1570.3828,-1333.8882,16.4844); // Building next ABC
    AddStaticPickup(1318, 2, 2495.3481,-1691.1355,14.7656); // Grove HQ
    AddStaticPickup(1274, 1, 1929.5409,-1785.1664,13.5469); // Caixa Eletronico 1
    AddStaticPickup(1274, 1, 2232.2886,-1162.6107,25.8906); // Caixa Eletronico 2
    AddStaticPickup(1274, 1, 1550.4796,-1669.7039,13.5624); // Caixa Eletronico 3
    AddStaticPickup(1274, 1, 251.4170,120.7698,1010.2188,1); // Caixa Eletronico Policia Civil
    AddStaticPickup(1279, 23, 2152.4727,-1014.0005,62.8375); //Drogas Morro
    AddStaticPickup(1279, 23, 1919.1384,-1415.4775,13.5703); // Drogas Skate
    AddStaticPickup(1242, 23, 229.8216,165.0319,1003.0234,-1) ; // Equipar PC
    AddStaticPickup(1242, 23, 255.1110,76.0224,1003.6406) ; // Equipar DP
    AddStaticPickup(1254, 23, 313.87,-1338.44,14.31) ; // Equipar HunTerS
    AddStaticPickup(1318, 23, 252.5820,69.7423,1003.6406) ; // Limpar DP
    AddStaticPickup(1318, 23, 1712.3607,1177.3903,34.8259) ; // Limpar DP
    AddStaticPickup(1318, 23, 681.4846,-474.1617,16.5362) ; // entrada hq hells angels
    AddStaticPickup(1318, 23, 23.8872,-2646.5869,40.4640) ; // entrada hq Mongols
    AddStaticPickup(1318, 23, -1566.5295,-2730.2783,48.7435) ; // entrada hq sons
    AddStaticPickup(1318, 23, 732.61,-1344.33,13.52) ; // entrada hq rep
    AddStaticPickup(1318, 23, 2025.1075,-1402.5234,17.2085) ; // entrada hospital
    //AddStaticPickup(1318, 23,1228.2998,511.7998,19.6000) ; // entrada Snake
    AddStaticPickup(1318, 23, -78.9350,-1169.6569,2.1504) ; // entrada hq Posto Abandonado
    AddStaticPickup(1242, 23, 1530.3945,-1664.0377,6.2187) ; // Equipar DP Garagem
    AddStaticPickup(1247, 23, 225.8874,114.2892,999.0156,-1) ; // PrenderCadeia Policia Civil
    AddStaticPickup(1247, 23, 197.2681,179.3594,1003.0234,-1) ; // PrenderCadeia PC
    AddStaticPickup(1247, 23, 268.2967,77.5858,1001.0391) ; // PrenderCadeia PM
    AddStaticPickup(1242, 23, 302.7606,-1529.7537,24.9219) ; // Equipar ROTA Garagem
//  AddStaticPickup(1242, 23, 914.2933,-1235.1436,17.2109) ; // Equipar PC Garagem
    AddStaticPickup(1242, 23, -1345.8823,492.5301,11.2027) ; // Equipar Exército
    AddStaticPickup(1318, 23, 607.7161,-1459.0728,14.3895) ; // Hq Taxista Interior
    AddStaticPickup(1314, 23, 599.3150,-1520.4652,15.0129) ; // Evelador Taxi 1
    AddStaticPickup(1314, 23, 594.9153,-1528.5319,30.8906) ; // Elevador Taxi 2
    AddStaticPickup(1242, 23, 326.4911,307.0710,999.1484) ; // EQUIPAR PFII
    AddStaticPickup(1242, 23, 629.1463,-581.5966,16.9337) ; // EQUIPAR PC
    //AddStaticPickup(1318, 23, 675.0947,-1275.7603,13.6334) ; // Esconder Materiais Mafia Japonesa
    AddStaticPickup(1318, 23, 256.0320,84.5082,1002.4453,-1) ; // Autorização
    AddStaticPickup(1318, 23, 202.5491,179.1493,1003.0323,-1) ; // Autorização
    AddStaticPickup(1318, 23, 214.9535,118.0954,999.0156,-1) ; // Autorização
    AddStaticPickup(1318, 23, 323.7303,308.9208,999.1484,-1) ; // Autorização
    AddStaticPickup(1247, 23, 935.14,-1035.45,32.03) ; // PRENDER BOPE
    AddStaticPickup(1210, 23, 355.2333,169.3552,1025.7891); // DarTaxa
    AddStaticPickup(1210, 23, 367.3167,162.2013,1025.7891); // Portao Prefeitura
    AddStaticPickup(1314, 23, 1173.4185,-1361.2090,13.9694) ; // HQ MEDICOS EMBAIXO
    AddStaticPickup(1314, 23, 1169.0085,-1329.3441,31.4640) ; // HQ MEDICOS EM CIMA
    AddStaticPickup(1314, 23, 2522.9346,-1679.4137,15.4970) ; // HQ MEDICOS EMBAIXO
    AddStaticPickup(1314, 23, 2524.4297,-1681.8153,19.9302) ; // HQ MEDICOS EM CIMA
    AddStaticPickup(1318, 23, 2232.9934,-1333.1924,23.9815) ; // IGREJA
    AddStaticPickup(1247, 23, -1298.8188,490.5014,11.1953) ; // PRENDER Exército
    AddStaticPickup(1247, 23, 944.5190,-1684.6168,13.5447) ; // PRENDER PF
    AddStaticPickup(1274, 23, 2306.5127,-6.1166,26.7422) ; // Acesso Restrito Banco
    AddStaticPickup(1318, 23, 1631.9160,-1172.1013,24.0781) ; // Acesso Restrito Lotérica
    AddStaticPickup(1318, 23, 3046.1663,-1956.1207,11.1547) ; // Acesso Restrito Lotérica
    AddStaticPickup(1318, 23, 3034.8000,-318.1000,8.6000) ; // Acesso Restrito Lotérica
    AddStaticPickup(1318, 23, 280.7871,-2167.1914,2.7978) ; // Acesso Restrito Lotérica
    AddStaticPickup(1318, 23, 366.5278,189.0388,1008.3828) ; // etnrada votacao
    AddStaticPickup(1274, 23, 820.6042,8.3990,1004.1962) ; // Roubo Lotérica
    AddStaticPickup(1274, 23, 381.5648,-188.1646,1000.6328) ; // Roubo Lotérica
    AddStaticPickup(1274, 23, 354.6608,172.0170,1008.3802) ; // Roubo prefeitura
    AddStaticPickup(1318, 23, 1991.7828,-1183.4724,20.5116) ; // Pescar Parque Gleen 1
    AddStaticPickup(1318, 23, 1948.1309,-1215.2512,20.5019) ; // Pescar Parque Gleen 2
    AddStaticPickup(1318, 23, 839.8817,-1339.4336,7.1719) ; // Orelhao Estação Civil
    AddStaticPickup(1318, 23, 198.9671,168.1982,1003.0234,-1) ; // Limpar PC
    AddStaticPickup(1318, 23, 326.8282,304.4166,999.1484) ; // Limpar PFII
    AddStaticPickup(1314, 23, 768.2192,-3.9873,1000.7203); // mudarluta
    AddStaticPickup(1275, 23, 461.3484,-1500.9084,31.0592); // Entrada ZIP
    AddStaticPickup(1318, 23, 2233.2659,-1159.8256,25.8906); // Entrada Hotel
    AddStaticPickup(1318, 23, 1614.2990,1679.7318,11.2184); // Entrada Máfia Russa
    AddStaticPickup(1274, 23, 2224.1484,-1141.8772,1025.7969); // Caixa Eletronico em lol
    AddStaticPickup(1318, 23, 2232.8149,-1165.7214,25.8906) ; // Orelhao hotel
    AddStaticPickup(1318, 23, 2219.9551,-1154.7574,1025.7969) ; // Orelhao hotel
    AddStaticPickup(1318, 23, 1673.9886,-2122.1403,14.6014) ; // Entrada HQ Los Aztecas
    AddStaticPickup(1318, 23, 1154.9366,-1180.8309,32.8187) ; // Entrada HQ Ballas
    AddStaticPickup(1318, 23, 1548.7111,-1717.2552,13.5546) ; // Pickup BAR
    //AddStaticPickup(1274, 23, 2308.9492,-14.1523,26.7422); // Banco Los Santos($)
    AddStaticPickup(1274, 23, 2169.1516,1589.9265,999.9713); // Roubo Loja de Armas 1($)
    AddStaticPickup(1274, 23, 451.3090,-79.8603,999.5547); // Roubo Loja de Armas 2($)
    AddStaticPickup(1318, 23, 2104.8252,-1806.5239,13.5547) ; // Pickup Entrada Pizza
    AddStaticPickup(1242, 23, -2237.5623,2353.8267,4.9804) ; // equipar GuerrilheirosIsraelitas
    AddStaticPickup(1247, 23, 195.5733,158.4008,1003.0234,-1); //prender novo
    AddStaticPickup(1274, 23, 229.6725,153.8311,1003.0234,-1); //CAIXA PC
    AddStaticPickup(1274, 23, 321.4753,305.5962,999.1484); //CAIXA PFII
    AddStaticPickup(1274, 23, -1347.6376,499.9476,11.1953); //CAIXA EXE
    AddStaticPickup(1239, 23, 822.0201,4.2154,1004.1797); // coisa lot 3
    AddStaticPickup(1239, 23, 822.0099,6.3927,1004.1797); // coisa lot 4
    AddStaticPickup(1239, 23, 822.0237,1.7826,1004.1797); // coisa lot 2
    AddStaticPickup(1239, 23, 822.0087,-0.1116,1004.1797); // coisa lot 1
    AddStaticPickup(1318, 23, 2334.8550,-1044.9471,52.3582); //equipar hitman
    AddStaticPickup( 1242, 1, 1391.5026,-1623.0095,13.5469 );//equipar 19º
    AddStaticPickup( 1318, 1, 256.5436,69.7123,1003.6406,-1 );//
    AddStaticPickup( 1239, 1, 269.4763,76.6585,1001.0391,-1 );
    AddStaticPickup( 1239, 1, 1385.2656,-1661.7928,13.4636 );//elevadorbaixo 19º
    AddStaticPickup( 1239, 1, 1390.8943,-1661.2303,39.5469 );//elevadorcima 19º
    AddStaticPickup( 1318, 1, 246.7823,62.3387,1003.6406,1 );//saida 19º
    AddStaticPickup( 1318, 1, 288.8585,166.9211,1007.1719,6 );//saida BOPEG
    AddStaticPickup( 1318, 1, 913.2850,-1037.3043,31.8984);//Entrada BOPEG
    AddStaticPickup( 1318, 1, 278.4538,-1518.2914,24.9289);//Entrada RotaG
    AddStaticPickup( 1318, 1, 288.8438,166.9216,1007.1719,3);//Saida RotaG
    //potao hitman
    gatehit = CreateObject(16501,1023.9850000,-366.7998000,74.0000000,90.0000000,0.0000000,90.0000000); //object(cn2_savgardr2_) (1)// Yiakin fez!!
    //--
    // PORTOES MEDICOS NOVOS
    gatemedic[ 0 ] = CreateObject(985,2001.3000000,-1357.3000000,24.7000000,0.0000000,0.0000000,0.0000000); //object(gate_autor) (30)//Yiakin FEZ!!
    gatemedic[ 1 ] = CreateObject(986,2096.2998000,-1446.5996000,24.7000000,0.0000000,0.0000000,269.9890000); //object(gate_autol) (2)
    gatemedic[ 2 ] = CreateObject(980,2002.8000000,-1450.9000000,15.3000000,0.0000000,0.0000000,0.0000000); //object(airportgate) (1)
    gatemedic[ 3 ] = CreateObject(980,1997.0000000,-1445.1000000,15.3000000,0.0000000,0.0000000,90.0000000); //object(airportgate) (2)

    //---
    // HQ MEDICOS NOVA
    CreateDynamicObject(0,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(985,2027.4000000,-1450.8000000,14.2800000,0.0000000,347.4000000,0.0000000); //object(gate_autor) (5)
    CreateDynamicObject(985,1997.2000000,-1434.3000000,13.9000000,0.0000000,11.0000000,270.0000000); //object(gate_autor) (6)
    CreateDynamicObject(985,2013.2002000,-1450.7998000,13.2000000,0.0000000,0.0000000,0.0000000); //object(gate_autor) (7)
    CreateDynamicObject(985,2035.1000000,-1450.8000000,16.0000000,0.0000000,347.3990000,0.0000000); //object(gate_autor) (8)
    CreateDynamicObject(985,2042.7000000,-1450.8000000,17.6000000,0.0000000,348.6000000,0.0000000); //object(gate_autor) (9)
    CreateDynamicObject(985,2058.1001000,-1450.8000000,20.6500000,0.0000000,348.5960000,0.0000000); //object(gate_autor) (10)
    CreateDynamicObject(985,2050.4004000,-1450.7998000,19.1000000,0.0000000,348.5960000,0.0000000); //object(gate_autor) (11)
    CreateDynamicObject(985,2065.8000000,-1450.7000000,22.2000000,0.0000000,348.7000000,0.0000000); //object(gate_autor) (13)
    CreateDynamicObject(985,2070.3000000,-1450.7000000,23.0900000,0.0000000,348.6950000,0.0000000); //object(gate_autor) (14)
    CreateDynamicObject(985,2078.5000000,-1450.8000000,23.9400000,0.0000000,359.9900000,0.0000000); //object(gate_autor) (15)
    CreateDynamicObject(985,2086.3999000,-1450.8000000,23.9400000,0.0000000,359.9890000,0.0000000); //object(gate_autor) (16)
    CreateDynamicObject(985,2094.3000000,-1450.8000000,23.9000000,0.0000000,359.9890000,0.0000000); //object(gate_autor) (17)
    CreateDynamicObject(985,2098.0000000,-1450.8000000,23.9000000,0.0000000,359.9890000,0.0000000); //object(gate_autor) (18)
    CreateDynamicObject(985,2017.2002000,-1450.7998000,13.2000000,0.0000000,0.0000000,0.0000000); //object(gate_autor) (19)
    CreateDynamicObject(985,1997.2000000,-1426.5000000,15.4600000,0.0000000,11.7000000,270.0000000); //object(gate_autor) (20)
    CreateDynamicObject(985,1997.2000000,-1419.5000000,16.9000000,0.0000000,10.7000000,270.0000000); //object(gate_autor) (21)
    CreateDynamicObject(985,1997.2000000,-1410.6000000,18.5200000,0.0000000,10.3000000,270.0000000); //object(gate_autor) (22)
    CreateDynamicObject(985,1997.2000000,-1402.8000000,19.9400000,0.0000000,10.3000000,270.0000000); //object(gate_autor) (23)
    CreateDynamicObject(985,1997.2000000,-1395.1000000,21.3600000,0.0000000,11.0000000,270.0000000); //object(gate_autor) (24)
    CreateDynamicObject(985,1997.2000000,-1387.9000000,22.8000000,0.0000000,10.9970000,270.0000000); //object(gate_autor) (25)
    CreateDynamicObject(985,1997.2000000,-1379.8000000,23.5500000,0.0000000,0.0000000,270.0000000); //object(gate_autor) (26)
    CreateDynamicObject(985,1997.2000000,-1371.8000000,23.5500000,0.0000000,0.0000000,270.0000000); //object(gate_autor) (27)
    CreateDynamicObject(985,1997.2000000,-1363.8000000,23.5500000,0.0000000,0.0000000,270.0000000); //object(gate_autor) (28)
    CreateDynamicObject(985,1997.2000000,-1355.8000000,23.5500000,0.0000000,0.0000000,270.0000000); //object(gate_autor) (29)

    CreateDynamicObject(3051,2041.8000000,-1396.5699000,48.7000000,0.0000000,0.0000000,316.9240000); //object(lift_dr) (1)
    CreateDynamicObject(3051,2043.0200000,-1396.5601000,48.7000000,0.0000000,0.0000000,135.9180000); //object(lift_dr) (3)
    CreateDynamicObject(3934,2028.2000000,-1381.2000000,47.3200000,0.0000000,0.0000000,0.0000000); //object(helipad01) (1)

    // HQ caminhoneiros...
    CreateDynamicObject( 3574,2165.1999500,-2319.3000500,15.2000000,0.0000000,0.0000000,135.0000000 ); //object(lasdkrtgrp2) (1)
    CreateDynamicObject( 3627,2187.3994100,-2294.8994100,16.1000000,0.0000000,0.0000000,134.9950000 ); //object(dckcanpy) (3)
    CreateDynamicObject( 3578,2017.5999800,-2084.1001000,13.3000000,0.0000000,0.0000000,233.4950000 ); //object(dockbarr1_la) (1)
    CreateDynamicObject( 3578,2014.4000200,-2094.0000000,13.3000000,0.0000000,0.0000000,270.0000000 ); //object(dockbarr1_la) (2)
    //=============
//GI
    CreateObject(712,-2287.69995117,2269.89990234,15.19999981,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (1)
    CreateObject(712,-2237.30004883,2269.39990234,15.30000019,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (2)
    CreateObject(620,-2265.80004883,2283.69995117,3.79999995,0.00000000,0.00000000,0.00000000); //object(veg_palm04) (1)
    CreateObject(620,-2255.89990234,2283.89990234,3.79999995,0.00000000,0.00000000,0.00000000); //object(veg_palm04) (2)
//>-------------------------------------- HQ Storm ----------------------------------------
    PortaoDS = CreateDynamicObject(980,2441.3999000,-1549.5000000,25.8000000,0.0000000,0.0000000,270.0000000); //object(airportgate) (1)
    CreateDynamicObject(3749,2441.8999000,-1549.5000000,28.9000000,0.0000000,0.0000000,270.0000000); //object(clubgate01_lax) (1)
    CreateDynamicObject(3475,2441.3000500,-1561.3000500,27.6000000,0.0000000,0.0000000,0.0000000); //object(vgsn_fncelec_pst) (1)
    CreateDynamicObject(3475,2444.1001000,-1564.0999800,27.6000000,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (2)
    CreateDynamicObject(3475,2449.8000500,-1564.0999800,27.6000000,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (3)
    CreateDynamicObject(3475,2455.6001000,-1564.0999800,27.6000000,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (4)
    CreateDynamicObject(3475,2461.3999000,-1564.0999800,27.6000000,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (5)
    CreateDynamicObject(3475,2467.1999500,-1564.0999800,27.6000000,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (6)
    CreateDynamicObject(3475,2473.0000000,-1564.0999800,27.6000000,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (7)
    CreateDynamicObject(3475,2478.8000500,-1564.0999800,27.6000000,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (8)
    CreateDynamicObject(3475,2484.5000000,-1564.0999800,27.6000000,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (9)
    CreateDynamicObject(3475,2490.1999500,-1564.0999800,27.6000000,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (10)
    CreateDynamicObject(3475,2494.1999500,-1564.0999800,27.6000000,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (11)
    CreateDynamicObject(3475,2497.0000000,-1561.3000500,27.6000000,0.0000000,0.0000000,180.0000000); //object(vgsn_fncelec_pst) (12)
    CreateDynamicObject(3475,2497.0000000,-1555.5999800,27.6000000,0.0000000,0.0000000,179.9950000); //object(vgsn_fncelec_pst) (13)
    CreateDynamicObject(3475,2497.0000000,-1550.0000000,27.6000000,0.0000000,0.0000000,179.9950000); //object(vgsn_fncelec_pst) (14)
    CreateDynamicObject(3475,2497.0000000,-1544.3000500,27.6000000,0.0000000,0.0000000,179.9950000); //object(vgsn_fncelec_pst) (15)
    CreateDynamicObject(3475,2497.0000000,-1538.6999500,27.6000000,0.0000000,0.0000000,179.9950000); //object(vgsn_fncelec_pst) (16)
    CreateDynamicObject(3475,2497.0000000,-1533.0000000,27.6000000,0.0000000,0.0000000,179.9950000); //object(vgsn_fncelec_pst) (17)
    CreateDynamicObject(3475,2497.0000000,-1527.4000200,27.6000000,0.0000000,0.0000000,179.9950000); //object(vgsn_fncelec_pst) (18)
    CreateDynamicObject(3475,2497.0000000,-1521.8000500,27.6000000,0.0000000,0.0000000,179.9950000); //object(vgsn_fncelec_pst) (19)
    CreateDynamicObject(3475,2497.0000000,-1517.5000000,27.6000000,0.0000000,0.0000000,179.9950000); //object(vgsn_fncelec_pst) (20)
    CreateDynamicObject(3475,2494.1999500,-1514.6999500,27.2000000,0.0000000,0.0000000,269.7450000); //object(vgsn_fncelec_pst) (21)
    CreateDynamicObject(3475,2488.5000000,-1514.6999500,27.2000000,0.0000000,0.0000000,269.7420000); //object(vgsn_fncelec_pst) (22)
    CreateDynamicObject(3095,2478.3999000,-1514.1999500,20.3000000,90.0000000,179.9560000,180.0440000); //object(a51_jetdoor) (1)
    CreateDynamicObject(3475,2482.6999500,-1514.6999500,27.2000000,0.0000000,0.0000000,269.7420000); //object(vgsn_fncelec_pst) (23)
    CreateDynamicObject(3475,2476.8999000,-1514.6999500,27.2000000,0.0000000,0.0000000,269.7420000); //object(vgsn_fncelec_pst) (24)
    CreateDynamicObject(3095,2469.3999000,-1514.1999500,20.3000000,90.0000000,180.0490000,179.9450000); //object(a51_jetdoor) (2)
    CreateDynamicObject(3475,2471.0000000,-1514.5999800,27.2000000,0.0000000,0.0000000,269.7420000); //object(vgsn_fncelec_pst) (25)
    CreateDynamicObject(3475,2465.3999000,-1514.5999800,27.2000000,0.0000000,0.0000000,269.7420000); //object(vgsn_fncelec_pst) (26)
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-= Estação SF -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    CreateDynamicObject(1622, 2865.4282226563, 2040.8848876953, 22.136564254761, 0, 0, 0);
    CreateDynamicObject(8042, -1980.3858642578, 186.26402282715, 32.554893493652, 0, 0, 196.99658203125);
    CreateDynamicObject(1374, -1980.1450195313, 177.70043945313, 27.900552749634, 0, 0, 0);
    CreateDynamicObject(1374, -1980.1649169922, 194.52893066406, 28.020668029785, 0, 0, 183.9990234375);
    CreateDynamicObject(1232, -1995.3541259766, 165.32040405273, 29.324142456055, 0, 0, 0);
    CreateDynamicObject(1232, -1995.2906494141, 174.68069458008, 29.324142456055, 0, 0, 0);
    CreateDynamicObject(1232, -1995.25, 152.15354919434, 29.316505432129, 0, 0, 0);
    CreateDynamicObject(1232, -1995.5133056641, 140.05833435059, 29.316505432129, 0, 0, 0);
    CreateDynamicObject(1232, -1995.4831542969, 125.83853149414, 29.324142456055, 0, 0, 0);
    CreateDynamicObject(1232, -2001.3125, 122.416015625, 29.175704956055, 0, 0, 0);
    CreateDynamicObject(1232, -2001.3203125, 131.67483520508, 29.175704956055, 0, 0, 0);
    CreateDynamicObject(1232, -2001.3134765625, 143.099609375, 29.175704956055, 0, 0, 0);
    CreateDynamicObject(1232, -2001.3923339844, 155.10510253906, 29.175704956055, 0, 0, 0);
    CreateDynamicObject(1232, -2001.4189453125, 167.48046875, 29.175704956055, 0, 0, 358);
    CreateDynamicObject(1686, -2026.0028076172, 158.73139953613, 28.0390625, 0, 0, 0);
    CreateDynamicObject(1686, -2025.966796875, 154.6318359375, 28.0390625, 0, 0, 0);
    CreateDynamicObject(1686, -2027.1217041016, 158.73818969727, 28.0390625, 0, 0, 180);
    CreateDynamicObject(1686, -2027.1695556641, 154.78746032715, 28.0390625, 0, 0, 179.99450683594);
    CreateDynamicObject(3660, -2000.0991210938, 166.59613037109, 29.34056854248, 0, 0, 270);
    CreateDynamicObject(3660, -2000.0965576172, 147.17715454102, 29.34056854248, 0, 0, 270);
    CreateDynamicObject(3660, -2000.0528564453, 130.1614074707, 29.332931518555, 0, 0, 270);
    CreateDynamicObject(3660, -1996.21875, 130.16839599609, 29.34056854248, 0, 0, 270);
    CreateDynamicObject(3660, -1996.1856689453, 149.61073303223, 29.332931518555, 0, 0, 270);
    CreateDynamicObject(3660, -1996.189453125, 166.53784179688, 29.34056854248, 0, 0, 270);
    CreateDynamicObject(1364, -1981.1398925781, 164.33207702637, 27.471622467041, 0, 0, 270);
    CreateDynamicObject(1364, -1981.0379638672, 154.58618164063, 27.471622467041, 0, 0, 270);
    CreateDynamicObject(1364, -1981.5166015625, 121.75, 27.471622467041, 0, 0, 270);
    CreateDynamicObject(3806, -1998.3657226563, 119.95146179199, 26.960609436035, 0, 0, 269.99951171875);
    CreateDynamicObject(3806, -1998.4833984375, 176.783203125, 27.01061630249, 0, 0, 87.994995117188);
    CreateDynamicObject(3283, -2047.0656738281, 289.73291015625, 33.833824157715, 0, 0, 86);
    CreateDynamicObject(3250, -2064.0388183594, 289.46035766602, 34.450588226318, 0, 0, 0);
    CreateDynamicObject(3171, -2080.0649414063, 265.19760131836, 34.458431243896, 0, 0, 0);
    CreateDynamicObject(11674, -1991.3662109375, 212.8115234375, 26.679862976074, 0, 0, 37.996215820313);
    CreateDynamicObject(3037, -2111.9616699219, 165.30859375, 36.351188659668, 0, 0, 2);
    CreateDynamicObject(11480, -2071.6916503906, 287.88531494141, 36.767868041992, 0, 0, 0);
    CreateDynamicObject(11503, -2077.6809082031, 288.08145141602, 34.707820892334, 0, 0, 0);
    CreateDynamicObject(16285, -2089.9829101563, 287.28674316406, 34.423351287842, 0, 0, 0);
    CreateDynamicObject(11480, -2083.6508789063, 286.79510498047, 36.74169921875, 0, 0, 0);
    CreateDynamicObject(11480, -2056.091796875, 287.82406616211, 36.654830932617, 0, 0, 0);
    CreateDynamicObject(5020, -2083.1665039063, 290.12860107422, 36.346496582031, 0, 0, 272);
    CreateDynamicObject(5020, -2084.1892089844, 290.14761352539, 36.343551635742, 0, 0, 271.99951171875);
    CreateDynamicObject(5020, -2071.1430664063, 291.12713623047, 36.288631439209, 0, 0, 269.99951171875);
    CreateDynamicObject(5020, -2072.1589355469, 291.18182373047, 36.348819732666, 0, 0, 269.99450683594);
    CreateDynamicObject(5020, -2055.67578125, 291.32952880859, 36.238361358643, 0, 0, 269.99450683594);
    CreateDynamicObject(5020, -2056.4582519531, 291.38427734375, 36.236652374268, 0, 0, 269.99450683594);
    CreateDynamicObject(3640, -2101.4118652344, 266.72891235352, 39.191379547119, 0, 0, 88);
    CreateDynamicObject(1223, -2097.8427734375, 233.16040039063, 34.040721893311, 0, 0, 0);
    CreateDynamicObject(1223, -2098.1721191406, 278.59646606445, 34.015213012695, 0, 0, 0);
    CreateDynamicObject(1290, -2040.341796875, 208.62545776367, 41.413703918457, 0, 0, 0);
    CreateDynamicObject(1500, -1988.6256103516, 207.37593078613, 26.687675476074, 0, 0, 268.75);
    CreateDynamicObject(1500, -1988.6188964844, 207.3221282959, 26.687675476074, 0, 0, 92.74755859375);
    CreateDynamicObject(983, -1980.3065185547, 172.43838500977, 27.222618103027, 0, 0, 0.5);
    CreateDynamicObject(983, -1980.3239746094, 174.04399108887, 27.222618103027, 0, 0, 0.4998779296875);
    CreateDynamicObject(983, -1980.5463867188, 199.04620361328, 27.222618103027, 0, 0, 0.4998779296875);
    CreateDynamicObject(983, -1980.6060791016, 203.03713989258, 27.222618103027, 0, 0, 0.4998779296875);
    CreateDynamicObject(983, -1977.2951660156, 206.31690979004, 27.197618484497, 4, 0, 89.999877929688);
    CreateDynamicObject(983, -1971.5855712891, 206.33323669434, 26.772613525391, 3.9990234375, 0, 89.994506835938);
    CreateDynamicObject(983, -1965.2348632813, 206.30256652832, 26.297616958618, 3.9990234375, 0, 89.744506835938);
    CreateDynamicObject(983, -1963.6036376953, 206.283203125, 26.197618484497, 4.4935302734375, 0, 89.741821289063);
    CreateDynamicObject(983, -1960.4298095703, 203.02658081055, 25.973934173584, 0, 0, 358.49987792969);
    CreateDynamicObject(983, -1960.5206298828, 196.68180847168, 25.973934173584, 0, 0, 359.49487304688);
    CreateDynamicObject(983, -1960.5607910156, 191.88166809082, 26.048933029175, 357, 0, 359.49462890625);
    CreateDynamicObject(983, -1960.6275634766, 185.5185546875, 26.448926925659, 355.99523925781, 0, 359.48913574219);
    CreateDynamicObject(983, -1960.6712646484, 179.1434173584, 26.873920440674, 355.98999023438, 0, 359.48913574219);
    CreateDynamicObject(983, -1960.7143554688, 172.47418212891, 27.323913574219, 356.23999023438, 0, 359.48913574219);
    CreateDynamicObject(983, -1960.7283935547, 174.06158447266, 27.223915100098, 356.23718261719, 0, 359.48913574219);
    CreateDynamicObject(983, -1960.7738037109, 167.70416259766, 27.44891166687, 358.48718261719, 0, 359.48913574219);
    CreateDynamicObject(1223, -1980.3647460938, 206.31164550781, 26.634750366211, 0, 0, 0);
    CreateDynamicObject(1223, -1980.5107421875, 206.28515625, 26.6875, 0, 0, 76);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 12);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 17.9970703125);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 25.99560546875);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 37.99365234375);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 45.99072265625);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 51.98876953125);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 57.9873046875);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 63.98583984375);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 73.984375);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 81.98193359375);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 89.97998046875);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 97.97802734375);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 107.97607421875);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 115.9736328125);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 119.97171020508);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 127.970703125);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 137.96875);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 145.96630859375);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 153.96435546875);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 161.96240234375);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 167.96044921875);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 169.958984375);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 177.95849609375);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 185.95654296875);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 193.95458984375);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 201.95263671875);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 209.95069885254);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 215.94873046875);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 221.947265625);
    CreateDynamicObject(1223, -1981.8011474609, 169.23223876953, 26.6875, 0, 0, 223.94580078125);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 231.94534301758);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 235.943359375);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 243.94239807129);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 251.9404296875);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 257.9384765625);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 263.93701171875);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 271.935546875);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 277.93359375);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 283.93212890625);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 291.9306640625);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 299.9287109375);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 307.9267578125);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 311.9248046875);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 315.923828125);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 321.9228515625);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 327.92138671875);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 333.919921875);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 341.91845703125);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 349.91650390625);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 357.91455078125);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 357.91259765625);
    CreateDynamicObject(1223, -1980.3642578125, 206.3115234375, 26.634750366211, 0, 0, 223.9453125);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 233.94534301758);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 247.94287109375);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 259.93942260742);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 275.9365234375);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 287.9326171875);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 307.9296875);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 323.9248046875);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 339.9208984375);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 353.9169921875);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 17.91357421875);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 37.913208007813);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 51.908325195313);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 67.904907226563);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 83.901000976563);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 99.897094726563);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 113.89318847656);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 127.88977050781);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 139.88635253906);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 149.88342285156);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 159.88098144531);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 177.87854003906);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 171.87414550781);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 189.8701171875);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 207.86572265625);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 203.861328125);
    CreateDynamicObject(1223, -1981.80078125, 169.2314453125, 26.6875, 0, 0, 219.85682678223);
    CreateDynamicObject(1223, -1960.4141845703, 206.17059326172, 25.311655044556, 0, 0, 219.85290527344);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 231.85290527344);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 245.84997558594);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 259.84655761719);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 271.84313964844);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 283.84020996094);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 293.83728027344);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 305.83483886719);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 319.83190917969);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 325.82849121094);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 337.82702636719);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 349.82409667969);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 357.82116699219);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 11.819213867188);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 23.815795898438);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 37.812866210938);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 53.809448242188);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 71.805541992188);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 85.801147460938);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 97.797729492188);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 109.79479980469);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 119.79187011719);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 131.78942871094);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 145.78649902344);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 159.78308105469);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 171.77966308594);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 189.77673339844);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 205.77233886719);
    CreateDynamicObject(1223, -1960.4140625, 206.169921875, 25.311655044556, 0, 0, 211.76843261719);
    CreateDynamicObject(1223, -1960.7219238281, 170.83538818359, 26.6875, 0, 0, 275.76696777344);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 289.76232910156);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 305.75891113281);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 321.75500488281);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 333.75109863281);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 347.74816894531);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 357.74475097656);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 13.742309570313);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 23.738403320313);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 31.735961914063);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 43.734008789063);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 59.731079101563);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 71.727172851563);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 83.724243164063);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 99.721313476563);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 113.71740722656);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 127.71401977539);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 139.71057128906);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 153.70764160156);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 167.70422363281);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 179.70080566406);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 187.69787597656);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 199.69592285156);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 205.69300842285);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 215.69152832031);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 227.68910217285);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 241.68615722656);
    CreateDynamicObject(1223, -1960.7216796875, 170.8349609375, 26.6875, 0, 0, 249.6827545166);
    CreateDynamicObject(1215, -1998.0590820313, 207.37948608398, 31.720748901367, 0, 0, 0);
    CreateDynamicObject(1215, -1997.3525390625, 207.12626647949, 31.720748901367, 0, 0, 0);
    CreateDynamicObject(1215, -1997.0998535156, 207.83212280273, 31.720748901367, 0, 0, 0);
    CreateDynamicObject(1215, -1997.7941894531, 208.46075439453, 31.720748901367, 0, 0, 0);
    CreateDynamicObject(1215, -1998.5983886719, 208.24865722656, 31.720748901367, 0, 0, 0);
    CreateDynamicObject(1215, -1986.0541992188, 207.36740112305, 31.720748901367, 0, 0, 0);
    CreateDynamicObject(1215, -1984.4028320313, 207.28890991211, 31.720748901367, 0, 0, 0);
    CreateDynamicObject(1215, -1985.0938720703, 206.65426635742, 31.720748901367, 0, 0, 0);
    CreateDynamicObject(1215, -1985.1098632813, 207.75305175781, 31.720748901367, 0, 0, 0);
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-= HQ ADM -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    CreateDynamicObject(2406,1529.0999756,-1467.8000488,11.0000000,0.0000000,0.0000000,10.0000000); //object(cj_surf_board3) (1)
    CreateDynamicObject(6865,1526.8000488,-1450.0999756,14.6000004,0.0000000,0.0000000,230.0000000); //object(steerskull) (3)
    CreateDynamicObject(1231,1517.3000488,-1481.0000000,11.3000002,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (1)
    CreateDynamicObject(1231,1509.6999512,-1465.4000244,11.1999998,0.0000000,0.0000000,282.0000000); //object(streetlamp2) (2)
    CreateDynamicObject(1231,1530.9000244,-1480.8000488,11.3000002,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (3)
    CreateDynamicObject(1231,1527.8000488,-1464.3000488,11.3000002,0.0000000,0.0000000,280.0000000); //object(streetlamp2) (4)
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-= 24/7 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    CreateDynamicObject(16500,1303.02832031,-1862.37500000,11.36451912,0.00000000,0.00000000,270.00000000); //object(cn2_savgardr1_) (1)
    CreateDynamicObject(1649,1302.76171875,-1862.35839844,15.03605175,0.00000000,0.00000000,0.00000000); //object(wglasssmash) (1)
    CreateDynamicObject(16500,1298.65063477,-1862.36987305,11.36451912,0.00000000,0.00000000,269.79602051); //object(cn2_savgardr1_) (2)
    CreateDynamicObject(1649,1298.39648438,-1862.36328125,15.03605175,0.00000000,0.00000000,179.98352051); //object(wglasssmash) (3)
    CreateDynamicObject(16500,1305.04101562,-1864.81640625,14.51648521,0.00000000,0.00000000,0.00000000); //object(cn2_savgardr1_) (3)
    CreateDynamicObject(16500,1305.04003906,-1869.61132812,14.51648521,0.00000000,0.00000000,0.00000000); //object(cn2_savgardr1_) (4)
    CreateDynamicObject(16500,1305.05346680,-1874.58215332,14.51648521,0.00000000,0.00000000,0.00000000); //object(cn2_savgardr1_) (5)
    CreateDynamicObject(16500,1305.05078125,-1878.00976562,14.51648521,0.00000000,0.00000000,0.00000000); //object(cn2_savgardr1_) (6)
    CreateDynamicObject(3113,1302.36132812,-1873.64160156,16.61693382,0.00000000,284.99633789,0.00000000); //object(carrier_door_sfse) (1)
    CreateDynamicObject(3113,1288.05566406,-1873.62011719,16.62453270,0.00000000,284.99084473,179.99450684); //object(carrier_door_sfse) (2)
    CreateDynamicObject(3113,1282.69702148,-1878.45556641,10.35835457,0.00000000,0.00000000,179.99450684); //object(carrier_door_sfse) (3)
    CreateDynamicObject(16500,1302.57434082,-1880.50354004,14.51648521,0.00000000,0.00000000,268.88391113); //object(cn2_savgardr1_) (7)
    CreateDynamicObject(16500,1297.65551758,-1880.40991211,14.51648521,0.00000000,0.00000000,268.87939453); //object(cn2_savgardr1_) (8)
    CreateDynamicObject(16500,1292.67089844,-1880.30859375,14.51648521,0.00000000,0.00000000,268.87390137); //object(cn2_savgardr1_) (9)
    CreateDynamicObject(16500,1287.68212891,-1880.20324707,14.51648521,0.00000000,0.00000000,268.87939453); //object(cn2_savgardr1_) (10)
    CreateDynamicObject(16500,1287.55688477,-1877.65539551,14.51648521,0.00000000,0.00000000,180.00000000); //object(cn2_savgardr1_) (11)
    CreateDynamicObject(16500,1287.54101562,-1872.70068359,14.51648521,0.00000000,0.00000000,179.99450684); //object(cn2_savgardr1_) (12)
    CreateDynamicObject(16500,1287.54211426,-1867.74926758,14.51648521,0.00000000,0.00000000,179.99450684); //object(cn2_savgardr1_) (13)
    CreateDynamicObject(16500,1287.52770996,-1864.82409668,14.51648521,0.00000000,0.00000000,179.99450684); //object(cn2_savgardr1_) (14)
    CreateDynamicObject(16500,1294.24023438,-1862.35009766,11.36451912,0.00000000,0.00000000,269.79125977); //object(cn2_savgardr1_) (15)
    CreateDynamicObject(1523,1291.84204102,-1862.32019043,12.54687500,0.00000000,0.00000000,180.00000000); //object(gen_doorext10) (1)
    CreateDynamicObject(1649,1294.00280762,-1862.35327148,15.00798702,0.00000000,0.00000000,0.00000000); //object(wglasssmash) (4)
    CreateDynamicObject(1523,1288.80371094,-1862.39404297,12.54687500,0.00000000,0.00000000,0.00000000); //object(gen_doorext10) (2)
    CreateDynamicObject(16500,1286.44702148,-1862.37316895,11.36451912,0.00000000,0.00000000,269.79125977); //object(cn2_savgardr1_) (16)
    CreateDynamicObject(1649,1286.74902344,-1862.36132812,15.03605175,0.00000000,0.00000000,179.64294434); //object(wglasssmash) (5)
    CreateDynamicObject(1651,1290.31896973,-1862.36425781,16.14500809,0.00000000,0.00000000,270.00000000); //object(od_copwindows) (2)
    CreateDynamicObject(1984,1295.10644531,-1864.81054688,12.54687500,0.00000000,0.00000000,177.99499512); //object(shlf5_till) (1)
    CreateDynamicObject(1887,1304.46289062,-1863.99694824,12.54687500,0.00000000,0.00000000,270.00000000); //object(shop_shelf11) (1)
    CreateDynamicObject(1887,1304.45812988,-1866.95410156,12.54687500,0.00000000,0.00000000,270.00000000); //object(shop_shelf11) (2)
    CreateDynamicObject(1887,1304.44848633,-1869.89978027,12.55251408,0.00000000,0.00000000,270.00000000); //object(shop_shelf11) (3)
    CreateDynamicObject(1888,1304.45092773,-1872.84570312,12.54687500,0.00000000,0.00000000,270.00000000); //object(shop_shelf12) (1)
    CreateDynamicObject(1888,1304.45703125,-1875.77636719,12.55251503,0.00000000,0.00000000,270.00000000); //object(shop_shelf12) (2)
    CreateDynamicObject(1888,1304.47192383,-1878.72668457,12.55251503,0.00000000,0.00000000,270.00000000); //object(shop_shelf12) (3)
    CreateDynamicObject(1885,1288.32141113,-1864.22570801,12.54687500,0.00000000,0.00000000,270.00000000); //object(shop_baskets) (1)
    CreateDynamicObject(1513,1295.12866211,-1864.86657715,13.76966381,0.00000000,0.00000000,330.00000000); //object(dyn_sweetie_tray) (1)
    CreateDynamicObject(1847,1301.55041504,-1880.17358398,12.55251408,0.00000000,0.00000000,179.11608887); //object(shop_shelf06) (1)
    CreateDynamicObject(1847,1296.63671875,-1880.09765625,12.54687500,0.00000000,0.00000000,179.11560059); //object(shop_shelf06) (2)
    CreateDynamicObject(1847,1291.70996094,-1880.01074219,12.54687500,0.00000000,0.00000000,178.70361328); //object(shop_shelf06) (3)
    CreateDynamicObject(1884,1299.29492188,-1874.64160156,12.55251503,0.00000000,0.00000000,270.00000000); //object(shop_dBEFhlf) (1)
    CreateDynamicObject(1884,1299.31311035,-1871.69128418,12.54687500,0.00000000,0.00000000,270.00000000); //object(shop_dBEFhlf) (2)
    CreateDynamicObject(1884,1299.31250000,-1868.74023438,12.54687500,0.00000000,0.00000000,270.00000000); //object(shop_dBEFhlf) (3)
    CreateDynamicObject(1981,1288.15075684,-1875.95983887,12.54687500,0.00000000,0.00000000,90.00000000); //object(shlf1_cab_mid) (1)
    CreateDynamicObject(1981,1288.15148926,-1876.74670410,12.54687500,0.00000000,0.00000000,90.00000000); //object(shlf1_cab_mid) (2)
    CreateDynamicObject(1981,1288.15173340,-1877.73327637,12.54687500,0.00000000,0.00000000,90.00000000); //object(shlf1_cab_mid) (3)
    CreateDynamicObject(1981,1288.15283203,-1878.73400879,12.54687500,0.00000000,0.00000000,90.00000000); //object(shlf1_cab_mid) (4)
    CreateDynamicObject(1981,1288.14990234,-1879.72949219,12.54687500,0.00000000,0.00000000,90.00000000); //object(shlf1_cab_mid) (5)
    CreateDynamicObject(1981,1288.15039062,-1874.98095703,12.54687500,0.00000000,0.00000000,90.00000000); //object(shlf1_cab_mid) (6)
    CreateDynamicObject(1981,1288.15136719,-1874.00976562,12.54687500,0.00000000,0.00000000,90.00000000); //object(shlf1_cab_mid) (7)
    CreateDynamicObject(1981,1288.15051270,-1873.02319336,12.54687500,0.00000000,0.00000000,90.00000000); //object(shlf1_cab_mid) (8)
    CreateDynamicObject(1989,1288.21777344,-1872.03991699,12.54687500,0.00000000,0.00000000,90.00000000); //object(kb_coolerlft2) (4)
    CreateDynamicObject(1989,1288.21777344,-1871.08007812,12.54687500,0.00000000,0.00000000,90.00000000); //object(kb_coolerlft2) (5)
    CreateDynamicObject(1989,1288.21789551,-1870.10510254,12.54687500,0.00000000,0.00000000,90.00000000); //object(kb_coolerlft2) (6)
    CreateDynamicObject(1989,1288.21740723,-1869.11059570,12.54687500,0.00000000,0.00000000,90.00000000); //object(kb_coolerlft2) (7)
    CreateDynamicObject(1883,1294.19531250,-1874.61425781,12.54687500,0.00000000,0.00000000,0.00000000); //object(shop_shelf01) (1)
    CreateDynamicObject(1883,1294.31579590,-1869.90332031,12.54687500,0.00000000,0.00000000,0.00000000); //object(shop_shelf01) (2)
    CreateDynamicObject(1649,1302.72131348,-1862.35839844,15.03605175,0.00000000,0.00000000,179.98352051); //object(wglasssmash) (7)
    CreateDynamicObject(1649,1298.41503906,-1862.34277344,15.03605175,0.00000000,0.00000000,0.00000000); //object(wglasssmash) (8)
    CreateDynamicObject(1649,1294.03906250,-1862.35351562,15.03605175,0.00000000,0.00000000,179.64294434); //object(wglasssmash) (9)
    CreateDynamicObject(1649,1286.67968750,-1862.33886719,15.03605175,0.00000000,0.00000000,0.00000000); //object(wglasssmash) (10)
    CreateDynamicObject(1651,1290.41528320,-1862.34472656,16.12860870,0.00000000,0.00000000,90.00000000); //object(od_copwindows) (6)
    CreateDynamicObject(2395,1288.15270996,-1865.11022949,12.62869072,270.00000000,180.00000000,180.00000000); //object(cj_sports_wall) (1)
    CreateDynamicObject(2395,1289.70227051,-1864.39343262,12.57653618,270.00000000,179.99450684,179.99450684); //object(cj_sports_wall) (2)
    CreateDynamicObject(2395,1290.48437500,-1863.73852539,12.57653522,270.00000000,179.99450684,179.99450684); //object(cj_sports_wall) (3)
    CreateDynamicObject(2395,1288.15173340,-1867.85510254,12.62869072,270.00000000,179.99963379,179.99963379); //object(cj_sports_wall) (4)
    CreateDynamicObject(2395,1288.14929199,-1870.58618164,12.62869072,270.00000000,180.00149536,180.00149536); //object(cj_sports_wall) (5)
    CreateDynamicObject(2395,1290.58691406,-1864.24621582,12.57653618,270.00000000,179.99450684,179.99450684); //object(cj_sports_wall) (6)
    CreateDynamicObject(2395,1291.86120605,-1865.11169434,12.62869072,270.00000000,180.00041199,180.00041199); //object(cj_sports_wall) (7)
    CreateDynamicObject(2395,1299.30395508,-1865.11010742,12.62655354,270.00000000,179.99993896,179.99993896); //object(cj_sports_wall) (8)
    CreateDynamicObject(2395,1291.87841797,-1867.85473633,12.62807465,270.00000000,179.99957275,179.99957275); //object(cj_sports_wall) (9)
    CreateDynamicObject(2395,1294.22070312,-1866.45617676,12.58393764,270.00000000,179.99450684,179.99450684); //object(cj_sports_wall) (10)
    CreateDynamicObject(2395,1291.87280273,-1870.58508301,12.62807465,270.00000000,179.99957275,179.99957275); //object(cj_sports_wall) (11)
    CreateDynamicObject(2395,1295.59387207,-1865.10986328,12.62807465,270.00000000,179.99957275,179.99957275); //object(cj_sports_wall) (12)
    CreateDynamicObject(2395,1298.14050293,-1864.33886719,12.58393860,270.00000000,179.99450684,179.99450684); //object(cj_sports_wall) (13)
    CreateDynamicObject(2395,1295.58642578,-1867.85400391,12.62869072,270.00000000,180.00149536,180.00149536); //object(cj_sports_wall) (14)
    CreateDynamicObject(2395,1301.97766113,-1864.20458984,12.58241749,270.00000000,179.99450684,179.99450684); //object(cj_sports_wall) (15)
    CreateDynamicObject(2395,1303.01428223,-1865.11230469,12.62887573,270.00000000,179.99450684,179.99450684); //object(cj_sports_wall) (16)
    CreateDynamicObject(2395,1288.97424316,-1873.30407715,12.62869072,270.00000000,180.00152588,180.00152588); //object(cj_sports_wall) (17)
    CreateDynamicObject(2395,1288.97290039,-1876.04553223,12.62869072,270.00000000,180.00152588,180.00152588); //object(cj_sports_wall) (18)
    CreateDynamicObject(2395,1288.97314453,-1878.78833008,12.62869072,270.00000000,179.99853516,179.99853516); //object(cj_sports_wall) (19)
    CreateDynamicObject(2395,1288.96972656,-1881.52990723,12.62869072,270.00000000,180.00036621,180.00036621); //object(cj_sports_wall) (20)
    CreateDynamicObject(2395,1299.29748535,-1867.85424805,12.62728596,270.00000000,179.99853516,179.99853516); //object(cj_sports_wall) (21)
    CreateDynamicObject(2395,1292.70874023,-1876.04443359,12.62869072,270.00000000,180.00042725,180.00042725); //object(cj_sports_wall) (22)
    CreateDynamicObject(2395,1292.70642090,-1878.78906250,12.62869072,270.00000000,180.00042725,180.00042725); //object(cj_sports_wall) (23)
    CreateDynamicObject(2395,1292.69165039,-1873.30517578,12.62869072,270.00000000,180.00038147,180.00038147); //object(cj_sports_wall) (24)
    CreateDynamicObject(2395,1295.59143066,-1870.58447266,12.62869072,270.00000000,179.99853516,179.99853516); //object(cj_sports_wall) (25)
    CreateDynamicObject(2395,1297.28002930,-1868.52258301,12.58455372,270.00000000,179.99450684,179.99450684); //object(cj_sports_wall) (26)
    CreateDynamicObject(2395,1302.39721680,-1867.84350586,12.58314991,270.00000000,179.99450684,179.99450684); //object(cj_sports_wall) (27)
    CreateDynamicObject(2395,1299.29858398,-1870.58618164,12.62869072,270.00000000,180.00042725,180.00042725); //object(cj_sports_wall) (28)
    CreateDynamicObject(2395,1303.01831055,-1867.85363770,12.62869072,270.00000000,180.00149536,180.00149536); //object(cj_sports_wall) (29)
    CreateDynamicObject(2395,1303.02270508,-1870.58483887,12.62869072,270.00000000,179.99853516,179.99853516); //object(cj_sports_wall) (30)
    CreateDynamicObject(2395,1296.42370605,-1873.30529785,12.62869072,270.00000000,180.00149536,180.00149536); //object(cj_sports_wall) (31)
    CreateDynamicObject(2395,1296.44421387,-1876.04406738,12.62869072,270.00000000,179.99450684,179.99450684); //object(cj_sports_wall) (32)
    CreateDynamicObject(2395,1292.71044922,-1881.52917480,12.62869072,270.00000000,179.99450684,179.99450684); //object(cj_sports_wall) (33)
    CreateDynamicObject(2395,1296.43664551,-1878.78918457,12.62869072,270.00000000,179.99450684,179.99450684); //object(cj_sports_wall) (34)
    CreateDynamicObject(2395,1302.78649902,-1873.32312012,12.62869072,270.00000000,180.00000000,180.00000000); //object(cj_sports_wall) (35)
    CreateDynamicObject(2395,1302.99133301,-1872.29040527,12.58455467,270.00000000,179.99450684,179.99450684); //object(cj_sports_wall) (36)
    CreateDynamicObject(2395,1302.78356934,-1876.04760742,12.62869072,270.00000000,180.00149536,180.00149536); //object(cj_sports_wall) (37)
    CreateDynamicObject(2395,1302.78479004,-1878.78710938,12.62869072,270.00000000,180.00149536,180.00149536); //object(cj_sports_wall) (38)
    CreateDynamicObject(2395,1302.78710938,-1881.52685547,12.62869072,270.00000000,179.99853516,179.99853516); //object(cj_sports_wall) (39)
    CreateDynamicObject(2395,1296.42504883,-1881.52868652,12.62869072,270.00000000,180.00149536,180.00149536); //object(cj_sports_wall) (40)
    CreateDynamicObject(2395,1299.56604004,-1881.52868652,12.62869072,270.00000000,179.99853516,179.99853516); //object(cj_sports_wall) (41)
    CreateDynamicObject(2395,1300.14245605,-1878.79113770,12.62869072,270.00000000,179.99957275,179.99957275); //object(cj_sports_wall) (42)
    CreateDynamicObject(2395,1299.06445312,-1873.32495117,12.62869072,270.00000000,180.00149536,180.00149536); //object(cj_sports_wall) (43)
    CreateDynamicObject(2395,1299.10241699,-1876.04809570,12.62869072,270.00000000,179.99450684,179.99450684); //object(cj_sports_wall) (44)
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-= Posto de Gasolina (Madeira) -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    CreateDynamicObject(19378, 1928.162231, -1770.991088, 11.727699, 0.000000, 0.000000, 0.000000, 300);
    CreateDynamicObject(19378, 1923.424560, -1766.259887, 11.727699, 0.000000, 0.000000, 90.000000, 300);
    CreateDynamicObject(19378, 1928.162231, -1780.615844, 11.727699, 0.000000, 0.000000, 0.000000, 300);
    CreateDynamicObject(19378, 1928.165405, -1781.624023, 11.727699, 0.000000, 0.000000, 0.000000, 300);
    CreateDynamicObject(19378, 1919.184814, -1766.262451, 11.727699, 0.000000, 0.000000, 90.000000, 300);
    CreateDynamicObject(19378, 1914.456176, -1770.989135, 11.727699, 0.000000, 0.000000, 0.000000, 300);
    CreateDynamicObject(19378, 1914.257080, -1781.629150, 11.727699, 0.000000, 0.000000, 0.000000, 300);
    CreateDynamicObject(19378, 1923.432983, -1786.357666, 11.727699, 0.000000, 0.000000, 90.000000, 300);
    CreateDynamicObject(19378, 1918.985351, -1786.356689, 11.727699, 0.000000, 0.000000, 90.000000, 300);
    CreateDynamicObject(19378, 1922.994873, -1781.623779, 16.900089, 0.000000, 90.000000, 0.000000, 300);
    CreateDynamicObject(19378, 1922.996826, -1771.988891, 16.900089, 0.000000, 90.000000, 0.000000, 300);
    CreateDynamicObject(19378, 1922.995361, -1770.990234, 16.900999, 0.000000, 90.000000, 0.000000, 300);
    CreateDynamicObject(19378, 1919.618408, -1770.988403, 16.902000, 0.000000, 90.000000, 0.000000, 300);
    CreateDynamicObject(19378, 1919.616577, -1780.621337, 16.902000, 0.000000, 90.000000, 0.000000, 300);
    CreateDynamicObject(19378, 1919.623779, -1781.623657, 16.903999, 0.000000, 90.000000, 0.000000, 300);
    CreateDynamicObject(1635, 1918.477416, -1786.961181, 15.363719, 0.000000, 0.000000, 90.000000, 300);
    CreateDynamicObject(1687, 1926.179199, -1785.238769, 17.797422, 0.000000, 0.000000, 0.000000, 300);
    CreateDynamicObject(1691, 1926.831787, -1769.460083, 17.408258, 0.000000, 0.000000, 0.000000, 300);
    CreateDynamicObject(2649, 1920.666625, -1769.182983, 17.470161, 0.000000, 0.000000, 90.000000, 300);
    CreateDynamicObject(2649, 1920.651977, -1772.390136, 17.470161, 0.000000, 0.000000, 270.000000, 300);
    CreateDynamicObject(1532, 1928.281005, -1776.809692, 12.546875, 0.000000, 0.000000, 90.000000, 300);
    CreateDynamicObject(2240, 1928.903442, -1774.653320, 13.145091, 0.000000, 0.000000, 0.000000, 300);
    CreateDynamicObject(2727, 1928.198608, -1784.561035, 14.127786, 90.000000, 90.000000, 0.000000, 300);

//>=-=-=-=-=-=-==-=-=-=-=-=-=-=- HQ 97ºBPM =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    /*AddStaticVehicleEx(596,1361.9000200,-1658.3000500,13.2000000,270.0000000,-1,-1,15); //Police Car (LSPD)
    AddStaticVehicleEx(596,1361.9000200,-1654.8000500,13.2000000,270.0000000,-1,-1,15); //Police Car (LSPD)
    AddStaticVehicleEx(596,1361.9000200,-1651.0999800,13.2000000,270.0000000,-1,-1,15); //Police Car (LSPD)
    AddStaticVehicleEx(596,1361.9000200,-1647.4000200,13.2000000,270.0000000,-1,-1,15); //Police Car (LSPD)
    AddStaticVehicleEx(596,1361.9000200,-1643.6999500,13.2000000,270.0000000,-1,-1,15); //Police Car (LSPD)
    AddStaticVehicleEx(596,1361.9000200,-1640.0000000,13.2000000,270.0000000,-1,-1,15); //Police Car (LSPD)
    AddStaticVehicleEx(596,1362.0000000,-1636.3000500,13.2000000,270.0000000,-1,-1,15); //Police Car (LSPD)
    AddStaticVehicleEx(596,1362.0000000,-1632.5999800,13.2000000,270.0000000,-1,-1,15); //Police Car (LSPD)
    AddStaticVehicleEx(599,1377.1999500,-1632.0000000,13.8000000,90.0000000,-1,-1,15); //Police Ranger
    AddStaticVehicleEx(599,1377.3000500,-1635.9000200,13.8000000,90.0000000,-1,-1,15); //Police Ranger
    AddStaticVehicleEx(599,1377.4000200,-1643.3000500,13.8000000,90.0000000,-1,-1,15); //Police Ranger
    AddStaticVehicleEx(599,1377.4000200,-1639.5999800,13.8000000,90.0000000,-1,-1,15); //Police Ranger
    AddStaticVehicleEx(523,1367.6999500,-1682.5999800,13.2000000,0.0000000,-1,-1,15); //HPV1000
    AddStaticVehicleEx(523,1366.0999800,-1682.5999800,13.2000000,0.0000000,-1,-1,15); //HPV1000
    AddStaticVehicleEx(523,1364.5999800,-1682.5999800,13.2000000,0.0000000,-1,-1,15); //HPV1000
    AddStaticVehicleEx(523,1363.0999800,-1682.5999800,13.2000000,0.0000000,-1,-1,15); //HPV1000
    AddStaticVehicleEx(523,1361.6999500,-1682.5999800,13.2000000,0.0000000,-1,-1,15); //HPV1000
    AddStaticVehicleEx(523,1360.3000500,-1682.5999800,13.2000000,0.0000000,-1,-1,15); //HPV1000
    AddStaticVehicleEx(523,1358.8000500,-1682.5999800,13.2000000,0.0000000,-1,-1,15); //HPV1000
    AddStaticVehicleEx(461,1355.9000200,-1682.5000000,13.3000000,0.0000000,32,32,15); //PCJ-600
    AddStaticVehicleEx(461,1357.3000500,-1682.5000000,13.3000000,0.0000000,1,1,15); //PCJ-600
    AddStaticVehicleEx(461,1354.5999800,-1682.5000000,13.3000000,0.0000000,95,10,15); //PCJ-600
    AddStaticVehicleEx(461,1353.3000500,-1682.5000000,13.3000000,0.0000000,-1,-1,15); //PCJ-600
    AddStaticVehicleEx(427,1388.6999500,-1629.0999800,13.8000000,90.0000000,-1,-1,15); //Enforcer
    AddStaticVehicleEx(427,1388.5999800,-1617.8000500,13.8000000,90.0000000,-1,-1,15); //Enforcer
    AddStaticVehicleEx(415,1383.0999800,-1660.3000500,13.3000000,90.0000000,102,28,15); //Cheetah
    AddStaticVehicleEx(602,1383.0000000,-1663.6999500,13.3000000,90.0000000,32,32,15); //Alpha
    AddStaticVehicleEx(601,1356.3000500,-1666.8000500,13.5000000,270.0000000,245,245,15); //S.W.A.T. Van
    AddStaticVehicleEx(601,1356.4000200,-1671.4000200,13.5000000,270.0000000,245,245,15); //S.W.A.T. Van
    AddStaticVehicleEx(497,1397.0999800,-1669.0999800,39.8000000,0.0000000,-1,-1,15); //Police Maverick
    AddStaticVehicleEx(497,1397.9000200,-1686.5999800,39.8000000,0.0000000,-1,-1,15); //Police Maverick
    AddStaticVehicleEx(596,1361.9000200,-1661.5000000,13.2000000,270.0000000,-1,-1,15); //Police Car (LSPD)*/
    CreateObject(987,1398.0999800,-1708.7399900,11.3500000,0.0000000,0.0000000,90.0000000); //object(elecfence_bar) (1
    CreateObject(985,1386.0000000,-1648.5699500,18.7400000,0.0000000,0.0000000,270.0000000); //object(gate_autor) (2)
    CreateObject(985,1387.6999500,-1656.0000000,18.7400000,0.0000000,0.0000000,116.0000000); //object(gate_autor) (3)
    CreateObject(986,1348.3000500,-1722.0000000,14.3000000,0.0000000,0.0000000,180.7000000); //object(gate_autol) (3)
    CreateObject(985,1351.6999500,-1589.6999500,14.2000000,0.0000000,0.0000000,343.9950000); //object(gate_autor) (27
    CreateObject(986,1366.5999800,-1691.0000000,9.8000000,0.0000000,0.0000000,88.6980000); //object(gate_autol) (4)
    CreateObject(985,1374.0999800,-1704.9899900,9.7800000,0.0000000,0.0000000,147.9000000); //object(gate_autor) (33)
    CreateObject(986,1366.6494100,-1688.3994100,9.8000000,0.0000000,0.0000000,88.6930000); //object(gate_autol) (6)
    CreateObject(2955,1385.9000200,-1671.1999500,13.7000000,0.0000000,0.0000000,0.0000000); //object(imy_compin) (1)
    CreateObject(8674,1359.0000000,-1618.6999500,14.3000000,0.0000000,0.0000000,0.0000000); //object(csrsfence02_lvs) (1)
    CreateObject(8674,1359.4000200,-1684.4000200,14.3000000,0.0000000,0.0000000,0.0000000); //object(csrsfence02_lvs) (2)
    CreateObject(8674,1359.0000000,-1618.6992200,14.3000000,0.0000000,0.0000000,0.0000000); //object(csrsfence02_lvs) (3)
    CreateObject(8674,1371.1992200,-1611.0996100,18.1000000,0.0000000,0.0000000,347.9920000); //object(csrsfence02_lvs) (4)
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-= Vinewood -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    CreateDynamicObject( 8040 , 1422.938964 , -817.699707 , 67.654525 , 0.000000 , 0.000000 , 0.000000 );
    CreateDynamicObject( 7488 , 1408.515747 , -810.667480 , 47.700119 , 0.000000 , 0.000000 , 0.000000 );
    CreateDynamicObject( 7488 , 1425.594360 , -810.667480 , 47.700119 , 0.000000 , 0.000000 , 0.000000 );
    CreateDynamicObject( 980 , 1465.575805 , -821.593505 , 66.897377 , -90.000000 , 0.000000 , 630.000000 );
    CreateDynamicObject( 980 , 1471.154785 , -821.588317 , 66.880104 , -90.000000 , 0.000000 , 450.000000 );
    CreateDynamicObject( 980 , 1476.679687 , -821.593505 , 66.897377 , -90.000000 , 0.000000 , 630.000000 );
    CreateDynamicObject( 980 , 1482.123046 , -821.588317 , 66.880104 , -90.000000 , 0.000000 , 450.000000 );
    CreateDynamicObject( 980 , 1487.584960 , -821.593505 , 66.897377 , -90.000000 , 0.000000 , 630.000000 );
    CreateDynamicObject( 980 , 1493.067138 , -821.588317 , 66.880104 , -90.000000 , 0.000000 , 450.000000 );
    CreateDynamicObject( 980 , 1498.538085 , -821.593505 , 66.897377 , -90.000000 , 0.000000 , 630.000000 );
    CreateDynamicObject( 987 , 1463.065551 , -827.498596 , 61.985099 , 0.000000 , 0.000000 , 0.000000 );
    CreateDynamicObject( 987 , 1475.056396 , -827.496154 , 62.000637 , 0.000000 , 0.000000 , 0.000000 );
    CreateDynamicObject( 987 , 1486.961791 , -827.498596 , 61.985099 , 0.000000 , 0.000000 , 0.000000 );
    CreateDynamicObject( 987 , 1492.966186 , -827.496154 , 62.000637 , 0.000000 , 0.000000 , 0.000000 );
    CreateDynamicObject( 2780 , 1488.382690 , -822.021118 , 59.626750 , 0.000000 , 0.000000 , 0.000000 );
    CreateDynamicObject( 2780 , 1472.780883 , -822.342834 , 60.826129 , 0.000000 , 0.000000 , 0.000000 );
    CreateDynamicObject( 2780 , 1480.756713 , -823.194519 , 62.025867 , 0.000000 , 0.000000 , 0.000000 );
    CreateDynamicObject( 2780 , 1495.023071 , -821.812744 , 59.758216 , 0.000000 , 0.000000 , 0.000000 );
    CreateDynamicObject( 2780 , 1465.921630 , -822.716735 , 61.720527 , 0.000000 , 0.000000 , 0.000000 );
    CreateDynamicObject( 3528 , 1473.180175 , -813.741699 , 72.061920 , 0.000000 , 356.000000 , 300.000000 );
    CreateDynamicObject( 3864 , 1385.027832 , -834.040771 , 71.367843 , 0.000000 , 0.000000 , 2358.000000 );
    CreateDynamicObject( 4106 , 1432.963745 , -838.207153 , 66.852722 , 0.000000 , 0.000000 , 6390.000000 );
    CreateDynamicObject( 970 , 1403.072753 , -837.994750 , 68.762069 , 0.000000 , 0.000000 , 450.000000 );
    CreateDynamicObject( 5130 , 1404.857421 , -830.026977 , 65.298088 , 0.000000 , 0.000000 , 5444.000000 );
    CreateDynamicObject( 18368 , 1430.094482 , -811.683898 , 69.375885 , 0.000000 , 0.000000 , 2424.000000 );
    CreateDynamicObject( 3361 , 1413.126953 , -839.204101 , 62.227001 , 0.000000 , 0.000000 , 0.000000 );
    CreateDynamicObject( 3361 , 1419.046386 , -839.198364 , 58.285545 , 0.000000 , 0.000000 , 0.000000 );
    CreateDynamicObject( 3361 , 1423.674194 , -839.191589 , 55.210758 , 0.000000 , 0.000000 , 0.000000 );
    CreateDynamicObject( 8615 , 1427.766357 , -842.274658 , 51.284061 , 0.000000 , 0.000000 , 10170.000000 );
    CreateDynamicObject( 1320 , 1508.981201 , -798.140930 , 74.321708 , 0.000000 , 0.000000 , 86.000000 );
    CreateDynamicObject( 744 , 1457.719116 , -814.159545 , 67.888900 , 0.000000 , 0.000000 , 0.000000 );
    CreateDynamicObject( 9812 , 1494.338867 , -825.554992 , 60.203712 , 0.000000 , 0.000000 , 0.000000 );
    CreateDynamicObject( 9812 , 1495.131958 , -825.014587 , 64.981666 , -90.000000 , 0.000000 , 2148.000000 );
    CreateDynamicObject( 1321 , 1516.042114 , -864.866027 , 63.916961 , 0.000000 , 0.000000 , 222.000000 );
//labirinto
    CreateDynamicObject(11541, 4079.79980, -1818.19922, 4.30000,   0.00000, 0.00000, 355.98999);
    CreateDynamicObject(11541, 4167.79980, -1744.00000, 4.30000,   0.00000, 0.00000, 265.99548);
    CreateDynamicObject(11541, 4259.00000, -1825.29980, 4.30000,   0.00000, 0.00000, 175.98999);
    CreateDynamicObject(11541, 4173.59961, -1904.09961, 4.30000,   0.00000, 0.00000, 85.98999);
    CreateDynamicObject(12814, 4219.00000, -1770.69922, 1.20000,   0.00000, 0.00000, 357.99500);
    CreateDynamicObject(16685, 4202.20020, -1877.09961, 2.20000,   0.00000, 0.00000, 355.99548);
    CreateDynamicObject(16685, 4143.09961, -1821.39941, 2.20000,   0.00000, 0.00000, 355.98450);
    CreateDynamicObject(16685, 4158.89990, -1770.30005, 2.20000,   0.00000, 0.00000, 355.99548);
    CreateDynamicObject(3098, 4212.79980, -1801.90002, 4.50000,   0.00000, 0.00000, 267.99500);
    CreateDynamicObject(3098, 4153.20020, -1867.30005, 4.50000,   0.00000, 0.00000, 173.99097);
    CreateDynamicObject(11442, 4226.00000, -1829.09998, 2.20000,   0.00000, 0.00000, 358.00000);
    CreateDynamicObject(11442, 149.60001, 156.20000, 486.79999,   0.00000, 0.00000, 261.99597);
    CreateDynamicObject(11459, 4210.39990, -1836.30005, 2.20000,   0.00000, 0.00000, 356.00000);
    CreateDynamicObject(11458, 4215.10010, -1881.50000, 2.20000,   0.00000, 0.00000, 266.00000);
    CreateDynamicObject(11457, 4200.50000, -1809.40002, 2.20000,   0.00000, 0.00000, 354.00000);
    CreateDynamicObject(11446, 4202.89990, -1847.80005, 2.20000,   0.00000, 0.00000, 356.00000);
    CreateDynamicObject(11445, 4210.70020, -1811.09998, 2.20000,   0.00000, 0.00000, 88.00000);
    CreateDynamicObject(11444, 4227.20020, -1810.80005, 2.20000,   0.00000, 0.00000, 266.00000);
    CreateDynamicObject(11443, 4209.20020, -1823.40002, 2.20000,   0.00000, 0.00000, 356.00000);
    CreateDynamicObject(11442, 4235.50000, -1798.09998, 2.20000,   0.00000, 0.00000, 356.00000);
    CreateDynamicObject(11441, 4214.00000, -1826.50000, 2.20000,   0.00000, 0.00000, 266.00000);
    CreateDynamicObject(11440, 4230.00000, -1785.59961, 1.65000,   0.00000, 0.00000, 355.99548);
    CreateDynamicObject(11428, 4198.89990, -1779.50000, 6.90000,   0.00000, 0.00000, 354.00000);
    CreateDynamicObject(11427, 4164.39990, -1871.90002, 9.40000,   0.00000, 0.00000, 266.00000);
    CreateDynamicObject(11088, 4135.20020, -1797.39941, 8.50000,   0.00000, 0.00000, 355.99548);
    CreateDynamicObject(11442, 4221.39990, -1802.40002, 2.20000,   0.00000, 0.00000, 265.99548);
    CreateDynamicObject(11442, 4217.70020, -1771.69995, 2.20000,   0.00000, 0.00000, 263.99548);
    CreateDynamicObject(11442, 4219.20020, -1792.00000, 2.20000,   0.00000, 0.00000, 355.99048);
    CreateDynamicObject(11444, 4218.70020, -1810.19995, 2.20000,   0.00000, 0.00000, 265.99548);
    CreateDynamicObject(11444, 4206.70020, -1771.09998, 2.20000,   0.00000, 0.00000, 175.99548);
    CreateDynamicObject(11444, 4206.00000, -1781.09998, 2.20000,   0.00000, 0.00000, 175.98999);
    CreateDynamicObject(11445, 4207.20020, -1797.30005, 2.20000,   0.00000, 0.00000, 357.99500);
    CreateDynamicObject(11445, 4191.39990, -1791.69995, 2.20000,   0.00000, 0.00000, 83.98950);
    CreateDynamicObject(11442, 4192.39990, -1801.59998, 2.20000,   0.00000, 0.00000, 353.99548);
    CreateDynamicObject(11443, 4222.89990, -1818.00000, 2.20000,   0.00000, 0.00000, 85.99548);
    CreateDynamicObject(11441, 4227.00000, -1823.09961, 2.20000,   0.00000, 0.00000, 265.99548);
    CreateDynamicObject(11441, 4214.89990, -1820.00000, 2.20000,   0.00000, 0.00000, 175.99548);
    CreateDynamicObject(12929, 4105.20020, -1871.39941, 2.15000,   0.00000, 0.00000, 174.00000);
    CreateDynamicObject(12928, 4105.20020, -1871.50000, 2.20000,   0.00000, 0.00000, 174.00000);
    CreateDynamicObject(3866, 4163.10010, -1861.80005, 10.00000,   0.00000, 0.00000, 266.00000);
    CreateDynamicObject(11442, 4197.89990, -1829.59998, 2.20000,   0.00000, 0.00000, 265.99500);
    CreateDynamicObject(11442, 4223.39990, -1837.90002, 2.20000,   0.00000, 0.00000, 359.98999);
    CreateDynamicObject(11459, 4216.29980, -1846.90002, 2.20000,   0.00000, 0.00000, 355.99548);
    CreateDynamicObject(11459, 4187.70020, -1824.19995, 2.20000,   0.00000, 0.00000, 355.99548);
    CreateDynamicObject(11459, 4208.00000, -1844.59998, 2.20000,   0.00000, 0.00000, 263.99548);
    CreateDynamicObject(11446, 4212.79980, -1852.90002, 2.20000,   0.00000, 0.00000, 359.99548);
    CreateDynamicObject(11446, 4196.70020, -1836.40002, 2.20000,   0.00000, 0.00000, 355.99451);
    CreateDynamicObject(11446, 4204.60010, -1828.50000, 2.20000,   0.00000, 0.00000, 263.98999);
    CreateDynamicObject(11444, 4235.70020, -1817.69995, 2.20000,   0.00000, 0.00000, 265.99548);
    CreateDynamicObject(11444, 4234.60010, -1835.19995, 2.20000,   0.00000, 0.00000, 265.99548);
    CreateDynamicObject(11444, 4236.10010, -1826.19995, 2.20000,   0.00000, 0.00000, 173.99548);
    CreateDynamicObject(3098, 4235.39990, -1807.00000, 4.50000,   0.00000, 0.00000, 263.99500);
    CreateDynamicObject(3098, 4212.09961, -1779.00000, 4.50000,   0.00000, 0.00000, 263.99048);
    CreateDynamicObject(3098, 4219.20020, -1783.00000, 4.50000,   0.00000, 0.00000, 263.99048);
    CreateDynamicObject(3098, 4217.00000, -1778.19922, 4.50000,   0.00000, 0.00000, 263.99048);
    CreateDynamicObject(11428, 4181.70020, -1818.89941, 7.10000,   0.00000, 0.00000, 355.99548);
    CreateDynamicObject(11442, 4184.70020, -1772.50000, 2.20000,   0.00000, 0.00000, 265.98999);
    CreateDynamicObject(11442, 4179.20020, -1779.39941, 2.20000,   0.00000, 0.00000, 265.98450);
    CreateDynamicObject(11442, 4181.50000, -1789.30005, 2.20000,   0.00000, 0.00000, 173.98999);
    CreateDynamicObject(11442, 4173.29980, -1801.00000, 2.20000,   0.00000, 0.00000, 173.98499);
    CreateDynamicObject(11457, 4227.50000, -1871.79980, 1.65000,   0.00000, 0.00000, 353.99597);
    CreateDynamicObject(11458, 4211.20020, -1872.19995, 2.20000,   0.00000, 0.00000, 171.99548);
    CreateDynamicObject(11458, 4230.50000, -1860.69995, 2.20000,   0.00000, 0.00000, 175.99097);
    CreateDynamicObject(11458, 4224.50000, -1854.59998, 2.20000,   0.00000, 0.00000, 175.98999);
    CreateDynamicObject(11459, 4208.60010, -1863.09998, 2.20000,   0.00000, 0.00000, 355.99548);
    CreateDynamicObject(11459, 4217.39990, -1863.50000, 2.20000,   0.00000, 0.00000, 265.99548);
    CreateDynamicObject(11442, 4199.70020, -1879.30005, 2.20000,   0.00000, 0.00000, 263.98901);
    CreateDynamicObject(11442, 4200.00000, -1864.90002, 2.20000,   0.00000, 0.00000, 265.98499);
    CreateDynamicObject(11442, 4189.89990, -1876.09998, 2.20000,   0.00000, 0.00000, 265.98450);
    CreateDynamicObject(11442, 4192.29980, -1864.69995, 2.20000,   0.00000, 0.00000, 265.98450);
    CreateDynamicObject(3098, 4206.70020, -1880.40002, 4.50000,   0.00000, 0.00000, 263.99048);
    CreateDynamicObject(3098, 4215.60010, -1857.50000, 4.50000,   0.00000, 0.00000, 263.99048);
    CreateDynamicObject(3098, 4203.89990, -1854.00000, 4.50000,   0.00000, 0.00000, 263.99048);
    CreateDynamicObject(3098, 4199.70020, -1840.90002, 4.50000,   0.00000, 0.00000, 263.99048);
    CreateDynamicObject(3098, 4225.10010, -1846.40002, 4.50000,   0.00000, 0.00000, 263.99048);
    CreateDynamicObject(11445, 4186.39990, -1812.59998, 2.20000,   0.00000, 0.00000, 83.99500);
    CreateDynamicObject(11445, 4183.60010, -1840.90002, 2.20000,   0.00000, 0.00000, 83.99048);
    CreateDynamicObject(11445, 4194.60010, -1846.69995, 2.20000,   0.00000, 0.00000, 353.99048);
    CreateDynamicObject(11459, 4198.00000, -1855.19995, 2.20000,   0.00000, 0.00000, 355.99548);
    CreateDynamicObject(11459, 4178.29980, -1855.19995, 2.20000,   0.00000, 0.00000, 355.99548);
    CreateDynamicObject(11459, 4182.60010, -1870.30005, 2.20000,   0.00000, 0.00000, 355.99548);
    CreateDynamicObject(11442, 4177.29980, -1880.69995, 2.20000,   0.00000, 0.00000, 265.99548);
    CreateDynamicObject(11442, 4171.50000, -1843.59998, 2.20000,   0.00000, 0.00000, 265.99548);
    CreateDynamicObject(11442, 4185.29980, -1852.19995, 2.20000,   0.00000, 0.00000, 265.99548);
    CreateDynamicObject(11442, 4189.39990, -1834.09998, 2.20000,   0.00000, 0.00000, 265.99548);
    CreateDynamicObject(11442, 4151.70020, -1877.09998, 2.20000,   0.00000, 0.00000, 265.99548);
    CreateDynamicObject(11442, 4142.10010, -1861.69995, 2.20000,   0.00000, 0.00000, 265.99548);
    CreateDynamicObject(11442, 4141.70020, -1850.69922, 2.30000,   0.00000, 0.00000, 175.98999);
    CreateDynamicObject(3098, 4168.89990, -1853.19995, 4.70000,   0.00000, 0.00000, 173.99048);
    CreateDynamicObject(3098, 4157.60010, -1878.40002, 4.50000,   0.00000, 0.00000, 173.99048);
    CreateDynamicObject(3098, 4149.29980, -1849.09998, 4.30000,   0.00000, 0.00000, 173.99048);
    CreateDynamicObject(3098, 4137.20020, -1868.30005, 4.50000,   0.00000, 0.00000, 173.99048);
    CreateDynamicObject(11442, 4131.50000, -1867.30005, 2.20000,   0.00000, 0.00000, 265.99548);
    CreateDynamicObject(11442, 4123.39990, -1873.59998, 2.20000,   0.00000, 0.00000, 175.99097);
    CreateDynamicObject(11459, 4170.39990, -1826.59998, 2.20000,   0.00000, 0.00000, 263.99048);
    CreateDynamicObject(11459, 4101.10010, -1859.30005, 2.20000,   0.00000, 0.00000, 265.99048);
    CreateDynamicObject(11459, 4140.00000, -1879.50000, 2.20000,   0.00000, 0.00000, 265.99048);
    CreateDynamicObject(11459, 4102.20020, -1846.09998, 2.20000,   0.00000, 0.00000, 265.99048);
    CreateDynamicObject(11459, 4107.20020, -1853.40002, 2.20000,   0.00000, 0.00000, 265.98999);
    CreateDynamicObject(11442, 4101.39990, -1838.19995, 2.50000,   0.00000, 0.00000, 175.99548);
    CreateDynamicObject(11442, 4125.39990, -1844.30005, 2.20000,   0.00000, 0.00000, 175.98999);
    CreateDynamicObject(11442, 4130.70020, -1853.59998, 2.20000,   0.00000, 0.00000, 85.98999);
    CreateDynamicObject(11442, 4118.79980, -1865.00000, 2.20000,   0.00000, 0.00000, 85.98999);
    CreateDynamicObject(11442, 4117.50000, -1845.00000, 2.20000,   0.00000, 0.00000, 85.98999);
    CreateDynamicObject(11441, 4106.39990, -1862.59998, 2.20000,   0.00000, 0.00000, 265.99548);
    CreateDynamicObject(11441, 4112.10010, -1856.00000, 2.20000,   0.00000, 0.00000, 265.99548);
    CreateDynamicObject(11441, 4109.00000, -1846.40002, 2.20000,   0.00000, 0.00000, 177.99548);
    CreateDynamicObject(11441, 4114.00000, -1846.30005, 2.20000,   0.00000, 0.00000, 177.99500);
    CreateDynamicObject(11441, 4119.50000, -1857.40002, 2.20000,   0.00000, 0.00000, 177.99500);
    CreateDynamicObject(11441, 4123.79980, -1854.90002, 2.20000,   0.00000, 0.00000, 177.99500);
    CreateDynamicObject(11441, 4114.39990, -1865.69995, 2.20000,   0.00000, 0.00000, 173.99500);
    CreateDynamicObject(11441, 4099.79980, -1856.09998, 2.20000,   0.00000, 0.00000, 175.99048);
    CreateDynamicObject(11441, 4123.50000, -1862.40002, 2.20000,   0.00000, 0.00000, 175.98999);
    CreateDynamicObject(11441, 4134.10010, -1876.00000, 2.20000,   0.00000, 0.00000, 85.98999);
    CreateDynamicObject(11441, 4145.00000, -1870.80005, 2.20000,   0.00000, 0.00000, 85.98999);
    CreateDynamicObject(11441, 4149.50000, -1861.09998, 2.20000,   0.00000, 0.00000, 85.98999);
    CreateDynamicObject(16327, 4144.89990, -1766.80005, 2.20000,   0.00000, 0.00000, 356.00000);
    CreateDynamicObject(16327, 4171.39990, -1787.50000, 2.20000,   0.00000, 0.00000, 355.99548);
    CreateDynamicObject(3865, 4110.79980, -1771.59998, 4.10000,   0.00000, 0.00000, 356.00000);
    CreateDynamicObject(3865, 4105.20020, -1781.90002, 4.10000,   0.00000, 0.00000, 355.99548);
    CreateDynamicObject(3865, 4109.79980, -1793.30005, 4.10000,   0.00000, 0.00000, 355.99548);
    CreateDynamicObject(3865, 4103.70020, -1803.19995, 4.10000,   0.00000, 0.00000, 355.99548);
    CreateDynamicObject(3865, 4107.60010, -1818.00000, 4.10000,   0.00000, 0.00000, 355.99548);
    CreateDynamicObject(12986, 4159.79980, -1769.29980, 3.70000,   0.00000, 0.00000, 357.99500);
    CreateDynamicObject(16071, 4151.50000, -1778.29980, 4.47500,   0.00000, 0.00000, 25.99915);
    CreateDynamicObject(1457, 4130.60010, -1769.00000, 3.80000,   0.00000, 0.00000, 356.00000);
    CreateDynamicObject(3763, 4092.89990, -1881.40002, 50.30000,   0.00000, 0.00000, 358.00000);
    CreateDynamicObject(3763, 4101.39941, -1758.00000, 50.30000,   0.00000, 0.00000, 357.98950);
    CreateDynamicObject(3763, 4245.89990, -1766.40002, 50.30000,   0.00000, 0.00000, 355.99500);
    CreateDynamicObject(3763, 4237.20020, -1891.19995, 50.30000,   0.00000, 0.00000, 355.98999);
    CreateDynamicObject(3460, 4115.00000, -1876.06543, 6.42783,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3460, 4108.15283, -1865.66565, 6.39717,   0.00000, 0.00000, 276.00000);
    CreateDynamicObject(3460, 4164.41797, -1773.41943, 6.40498,   0.00000, 0.00000, 25.99854);
    CreateDynamicObject(3460, 4179.61084, -1769.85632, 6.39717,   0.00000, 0.00000, 165.99365);
    CreateDynamicObject(10357, 4139.12012, -1750.07129, 29.86980,   0.00000, 35.99670, 267.99500);
    CreateDynamicObject(10357, 4212.89014, -1756.17444, 29.86980,   0.00000, 35.99670, 267.99500);
    CreateDynamicObject(10357, 4175.31104, -1754.00525, 29.86980,   0.00000, 35.99670, 267.99500);
    CreateDynamicObject(10357, 4131.54102, -1892.70972, 29.86980,   0.00000, 35.99670, 85.99500);
    CreateDynamicObject(10357, 4167.47852, -1893.86621, 29.86980,   0.00000, 35.99670, 85.98999);
    CreateDynamicObject(10357, 4204.55078, -1893.78174, 29.86980,   0.00000, 35.99670, 85.98999);
    CreateDynamicObject(10357, 4259.41309, -1826.83276, 29.86980,   0.00000, 35.99670, 175.99500);
    CreateDynamicObject(10357, 4087.98633, -1820.02515, 29.86980,   0.00000, 35.99670, 355.98999);
    CreateDynamicObject(11541, 4292.40381, -1827.33496, 39.92000,   0.00000, 0.00000, 175.98999);
    CreateDynamicObject(11541, 4190.64160, -1714.42383, 39.92000,   0.00000, 0.00000, 265.99548);
    CreateDynamicObject(11541, 4062.69531, -1701.81506, 39.92000,   0.00000, 0.00000, 265.99548);
    CreateDynamicObject(11541, 4050.37695, -1802.60547, 39.92000,   0.00000, 0.00000, 355.98450);
    CreateDynamicObject(11541, 4143.62744, -1923.17981, 39.92000,   0.00000, 0.00000, 85.98999);
    CreateDynamicObject(11541, 4258.00635, -1932.06604, 39.67000,   0.00000, 0.00000, 85.98999);
    CreateDynamicObject(11541, 4045.27417, -1875.02515, 39.92000,   0.00000, 0.00000, 355.98999);
    CreateDynamicObject(11541, 4299.94727, -1722.64380, 39.42000,   0.00000, 0.00000, 175.98999);
    CreateDynamicObject(650, 4218.49707, -1829.30823, 2.17656,   0.00000, 0.00000, 80.00000);
    CreateDynamicObject(650, 4216.09277, -1806.05823, 2.17656,   0.00000, 0.00000, 129.99695);
    CreateDynamicObject(650, 4198.73926, -1799.56006, 2.18437,   0.00000, 0.00000, 193.99573);
    CreateDynamicObject(650, 4209.38672, -1784.81885, 2.18437,   0.00000, 0.00000, 193.99109);
    CreateDynamicObject(650, 4170.13721, -1772.46033, 2.18437,   0.00000, 0.00000, 193.99109);
    CreateDynamicObject(650, 4168.82568, -1793.69617, 2.17656,   0.00000, 0.00000, 303.99109);
    CreateDynamicObject(650, 4173.19727, -1807.17786, 2.17656,   0.00000, 0.00000, 353.98621);
    CreateDynamicObject(650, 4182.21094, -1798.53833, 2.17656,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(650, 4192.46631, -1824.17932, 2.17656,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(650, 4231.88574, -1842.41907, 2.18437,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(650, 4210.13232, -1855.88672, 2.17656,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(650, 4209.28174, -1875.20898, 2.18437,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(650, 4221.81982, -1880.99084, 2.17656,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(650, 4200.63330, -1872.25940, 2.17656,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(650, 4163.63916, -1865.27014, 2.17656,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(650, 4168.38818, -1878.12988, 2.17656,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(650, 4178.68896, -1878.74414, 2.17656,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(650, 4175.60791, -1863.49487, 2.17656,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(650, 4150.83447, -1854.71545, 2.17656,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(650, 4140.51855, -1855.15161, 2.17656,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(650, 4134.67334, -1845.34937, 2.17656,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(650, 4126.56641, -1851.99963, 2.17656,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(650, 4131.24512, -1861.25269, 2.17656,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(650, 4125.16748, -1866.86829, 2.17656,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(650, 4115.87402, -1855.71118, 2.18437,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(650, 4099.86279, -1855.95862, 2.17656,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(650, 4108.30518, -1849.08374, 2.18437,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(650, 4109.14844, -1862.89404, 2.17656,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(650, 4103.71094, -1837.75806, 2.17656,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(650, 4104.00537, -1827.22156, 2.17656,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(650, 4144.91895, -1772.01538, 2.17656,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(650, 4154.01855, -1767.32959, 2.17656,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(650, 4179.11230, -1787.26709, 2.17656,   0.00000, 0.00000, 353.98499);
    CreateDynamicObject(651, 4159.45459, -1840.49878, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(651, 4192.32764, -1842.60632, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(651, 4215.54150, -1841.78857, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(651, 4234.97266, -1840.14050, 2.18437,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(651, 4234.79980, -1813.64661, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(651, 4223.50146, -1796.55676, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(651, 4234.55029, -1778.66565, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(651, 4222.53418, -1771.10620, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4182.06396, -1800.65137, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4168.24072, -1823.59131, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4172.95508, -1847.48376, 2.18437,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4168.90820, -1843.15283, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4172.91797, -1839.19568, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4186.28906, -1846.71191, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4190.99414, -1850.80688, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4200.53271, -1859.16504, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4201.18164, -1869.26526, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4209.18164, -1874.65283, 2.18437,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4200.77539, -1872.60120, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4200.07861, -1871.89063, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4197.10889, -1873.48621, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4187.91748, -1870.55164, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4188.79736, -1860.35693, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4175.73682, -1863.89148, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4175.64697, -1862.69714, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4183.30469, -1852.89685, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4192.26465, -1843.05359, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4192.59424, -1842.44775, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4134.59619, -1844.96362, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4159.12939, -1840.31226, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4172.73291, -1806.81787, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4168.83301, -1793.87280, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4182.34717, -1798.44519, 2.33824,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4178.60840, -1786.42871, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(678, 4222.13770, -1771.26489, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3098, 4170.31006, -1766.51892, 4.47028,   0.00000, 0.00000, 263.99048);
    CreateDynamicObject(684, 4160.69727, -1786.01123, 2.37297,   0.00000, 0.00000, 52.00000);
    CreateDynamicObject(674, 4134.32275, -1781.49060, 1.95156,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(674, 4181.45508, -1782.94214, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(674, 4202.57959, -1784.34851, 2.18437,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(674, 4210.00244, -1769.57312, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(674, 4217.91699, -1791.88721, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(674, 4226.70166, -1814.17712, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(674, 4233.42529, -1831.13062, 2.17656,   0.00000, 0.00000, 80.00000);
    CreateDynamicObject(680, 4219.62549, -1835.52380, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(680, 4207.39697, -1835.48621, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(680, 4196.31152, -1850.71216, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(680, 4170.29053, -1860.34229, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(680, 4156.15820, -1856.29712, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(680, 4134.41553, -1850.68689, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(680, 4100.48779, -1849.85010, 2.18437,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(680, 4107.51416, -1826.14429, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(680, 4104.89893, -1813.12512, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(680, 4106.25000, -1802.54407, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(680, 4107.31592, -1783.06458, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(680, 4106.70654, -1762.98730, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(680, 4138.23926, -1765.09583, 2.17656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(680, 4151.34766, -1774.92651, 2.17656,   0.00000, 0.00000, 0.00000);
    /*//praça
    CreateDynamicObject(18981, 1454.81, -1607.68, 11.80,   0.00, 90.00, 0.00);
    CreateDynamicObject(19378, 1438.04, -1601.92, 12.18,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1437.89, -1724.30, 12.25,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1447.40, -1724.24, 12.25,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1456.83, -1724.21, 12.25,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1466.08, -1724.15, 12.25,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1475.49, -1724.19, 12.25,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1485.06, -1724.24, 12.25,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1494.49, -1724.34, 12.25,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1503.99, -1724.17, 12.25,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1513.62, -1724.09, 12.25,   0.00, 90.00, 90.00);
    CreateDynamicObject(18981, 1454.70, -1706.66, 11.80,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1479.77, -1657.33, 11.80,   0.00, 90.00, 0.00);
    CreateDynamicObject(19378, 1521.45, -1600.46, 12.25,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1523.17, -1724.21, 12.25,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1520.19, -1713.71, 12.25,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1521.53, -1703.29, 12.25,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1521.51, -1693.22, 12.25,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1521.58, -1682.89, 12.25,   0.00, 90.00, 90.00);
    CreateDynamicObject(18981, 1504.47, -1706.65, 11.80,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1479.56, -1706.69, 11.80,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1479.76, -1681.70, 11.80,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1455.00, -1681.88, 11.80,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1454.77, -1656.97, 11.80,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1454.85, -1632.62, 11.80,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1479.71, -1632.54, 11.80,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1504.52, -1682.08, 11.80,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1504.34, -1657.35, 11.80,   0.00, 90.00, 0.00);
    CreateDynamicObject(19378, 1437.84, -1713.89, 12.18,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1437.73, -1703.64, 12.18,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1437.89, -1693.30, 12.18,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1437.80, -1683.17, 12.18,   0.00, 90.00, 90.00);
    CreateDynamicObject(18981, 1504.46, -1632.54, 11.80,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1504.31, -1608.29, 11.80,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1479.64, -1607.63, 11.80,   0.00, 90.00, 0.00);
    CreateDynamicObject(19378, 1437.98, -1672.86, 12.18,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1438.02, -1662.77, 12.18,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1438.26, -1652.64, 12.18,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1437.78, -1642.19, 12.18,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1437.96, -1632.51, 12.18,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1437.88, -1622.41, 12.18,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1437.85, -1612.23, 12.18,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1521.63, -1672.64, 12.25,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1521.66, -1662.15, 12.25,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1521.66, -1651.79, 12.25,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1521.67, -1641.41, 12.25,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1521.42, -1631.16, 12.25,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1521.37, -1620.98, 12.25,   0.00, 90.00, 90.00);
    CreateDynamicObject(19378, 1521.37, -1610.92, 12.25,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1446.99, -1703.49, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1447.03, -1713.67, 12.29,   0.00, 90.00, 90.00);
    //CreateDynamicObject(19447, 1456.30, -1718.96, 11.36,   0.00, 0.00, 90.00);
    //CreateDynamicObject(19447, 1442.20, -1695.51, 11.36,   0.00, 0.00, 0.00);
    //CreateDynamicObject(19447, 1447.24, -1719.00, 11.36,   0.00, 0.00, 90.00);

    CreateDynamicObject(700, 1494.16, -1600.81, 12.06,   0.00, 0.00, 0.00);
    CreateDynamicObject(700, 1458.60, -1716.16, 12.26,   0.00, 0.00, 0.00);
    CreateDynamicObject(700, 1444.65, -1714.98, 12.06,   0.00, 0.00, 0.00);
    CreateDynamicObject(700, 1445.00, -1693.60, 12.06,   0.00, 0.00, -0.06);
    CreateDynamicObject(19381, 1465.73, -1686.72, 12.29,   0.00, 90.00, 90.00);

    CreateDynamicObject(19381, 1511.99, -1703.24, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1466.45, -1602.79, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1502.54, -1703.32, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1512.00, -1713.74, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1502.55, -1695.52, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1512.00, -1695.56, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(700, 1514.40, -1693.32, 12.06,   0.00, 0.00, 0.00);

    //CreateDynamicObject(19447, 1488.71, -1704.99, 11.36,   0.00, 0.00, 0.00);
    //CreateDynamicObject(19447, 1442.72, -1602.34, 11.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(700, 1499.43, -1692.79, 12.06,   0.00, 0.00, -0.06);
    CreateDynamicObject(700, 1513.83, -1716.45, 12.26,   0.00, 0.00, 0.00);
    CreateDynamicObject(700, 1500.12, -1716.37, 12.06,   0.00, 0.00, 0.00);
    //CreateDynamicObject(19447, 1516.89, -1714.25, 11.36,   0.00, 0.00, 0.00);
    //CreateDynamicObject(19447, 1512.17, -1719.09, 11.36,   0.00, 0.00, 90.00);
    //CreateDynamicObject(19447, 1511.96, -1652.81, 11.36,   0.00, 0.00, 90.00);
    CreateDynamicObject(19381, 1456.43, -1677.22, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1456.52, -1703.35, 12.29,   0.00, 90.00, 90.00);
    //CreateDynamicObject(19447, 1442.24, -1714.24, 11.36,   0.00, 0.00, 0.00);
    //CreateDynamicObject(19447, 1442.23, -1704.92, 11.36,   0.00, 0.00, 0.00);

    //CreateDynamicObject(19447, 1502.65, -1719.10, 11.36,   0.00, 0.00, 90.00);
    //CreateDynamicObject(19447, 1493.40, -1719.17, 11.36,   0.00, 0.00, 90.00);
    //CreateDynamicObject(19447, 1488.69, -1695.58, 11.36,   0.00, 0.00, 0.00);
    //CreateDynamicObject(19447, 1516.88, -1695.17, 11.36,   0.00, 0.00, 0.00);
    //CreateDynamicObject(19447, 1488.72, -1714.35, 11.36,   0.00, 0.00, 0.00);
    //CreateDynamicObject(19447, 1470.72, -1714.15, 11.36,   0.00, 0.00, 0.00);
    //CreateDynamicObject(19447, 1470.72, -1704.64, 11.36,   0.00, 0.00, 0.00);
    //CreateDynamicObject(19447, 1470.72, -1695.38, 11.36,   0.00, 0.00, 0.00);
    //CreateDynamicObject(19447, 1465.98, -1718.96, 11.36,   0.00, 0.00, 90.00);
    //CreateDynamicObject(19447, 1470.71, -1686.22, 11.36,   0.00, 0.00, 0.00);
    //CreateDynamicObject(19447, 1447.48, -1653.09, 11.36,   0.00, 0.00, 90.00);
    //CreateDynamicObject(19447, 1488.71, -1686.15, 11.36,   0.00, 0.00, 0.00);
    //CreateDynamicObject(19447, 1465.92, -1681.43, 11.36,   0.00, 0.00, 90.00);
    //CreateDynamicObject(19447, 1447.03, -1671.84, 11.36,   0.00, 0.00, 90.00);
    //CreateDynamicObject(19447, 1466.61, -1643.56, 11.36,   0.00, 0.00, 90.00);
    //CreateDynamicObject(19447, 1498.05, -1648.10, 11.36,   0.00, 0.00, 0.00);
    //CreateDynamicObject(19447, 1511.94, -1671.86, 11.36,   0.00, 0.00, 90.00);
    CreateDynamicObject(19381, 1456.63, -1713.75, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1465.82, -1713.62, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1465.91, -1703.33, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1465.90, -1692.89, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1456.35, -1692.86, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1456.52, -1685.78, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1446.99, -1692.95, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1447.16, -1682.63, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1447.27, -1677.08, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1502.38, -1713.76, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1493.68, -1713.80, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1493.57, -1703.89, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1493.71, -1693.42, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1493.72, -1686.72, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1503.07, -1677.09, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1502.91, -1685.49, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1512.02, -1685.32, 12.29,   0.00, 90.00, 90.00);
    //CreateDynamicObject(19447, 1461.27, -1676.67, 11.36,   0.00, 0.00, 0.00);
    //CreateDynamicObject(19447, 1471.31, -1602.05, 11.36,   0.00, 0.00, 0.00);
    //CreateDynamicObject(19447, 1498.09, -1676.77, 11.36,   0.00, 0.00, 0.00);
    //CreateDynamicObject(19447, 1502.95, -1671.89, 11.36,   0.00, 0.00, 90.00);

    //CreateDynamicObject(19447, 1456.44, -1671.84, 11.36,   0.00, 0.00, 90.00);
    //CreateDynamicObject(19447, 1442.19, -1685.96, 11.36,   0.00, 0.00, 0.00);
    //CreateDynamicObject(19447, 1516.99, -1685.41, 11.36,   0.00, 0.00, 0.00);

    //CreateDynamicObject(19447, 1502.83, -1652.81, 11.36,   0.00, 0.00, 90.00);
    CreateDynamicObject(19447, 1493.48, -1681.45, 11.36,   0.00, 0.00, 90.00);
    CreateDynamicObject(19447, 1447.57, -1597.55, 11.36,   0.00, 0.00, 90.00);
    CreateDynamicObject(19447, 1461.87, -1648.33, 11.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(19447, 1488.50, -1602.28, 11.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(19447, 1471.36, -1629.21, 11.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(19447, 1471.35, -1619.93, 11.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(19447, 1471.33, -1610.40, 11.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(19447, 1471.37, -1638.79, 11.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(19447, 1516.67, -1602.37, 11.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(19447, 1488.47, -1628.76, 11.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(19447, 1488.55, -1619.61, 11.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(19447, 1488.56, -1610.21, 11.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(19447, 1456.95, -1653.10, 11.36,   0.00, 0.00, 90.00);
    CreateDynamicObject(19447, 1442.23, -1676.71, 11.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(19447, 1442.78, -1648.11, 11.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(19447, 1442.80, -1638.57, 11.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(19447, 1442.80, -1630.10, 11.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(19447, 1442.76, -1620.84, 11.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(19447, 1442.77, -1611.36, 11.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(19447, 1488.52, -1638.37, 11.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(19447, 1516.73, -1648.08, 11.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(19447, 1516.76, -1638.61, 11.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(19447, 1516.75, -1628.99, 11.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(19447, 1516.73, -1619.39, 11.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(19447, 1516.68, -1610.36, 11.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(19447, 1493.33, -1643.27, 11.36,   0.00, 0.00, 90.00);
    CreateDynamicObject(19447, 1493.12, -1597.48, 11.36,   0.00, 0.00, 90.00);
    CreateDynamicObject(19447, 1502.62, -1597.47, 11.36,   0.00, 0.00, 90.00);
    CreateDynamicObject(19381, 1512.22, -1677.27, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1511.73, -1647.54, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1502.96, -1647.45, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1447.61, -1647.87, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1466.30, -1633.12, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1466.50, -1622.90, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1456.75, -1633.10, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1447.43, -1633.08, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1447.63, -1623.00, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1456.97, -1622.79, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1466.54, -1612.80, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1457.02, -1612.41, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1447.61, -1612.73, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1447.51, -1602.96, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1456.87, -1602.86, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1493.50, -1617.34, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1493.44, -1602.43, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1502.72, -1602.71, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1493.43, -1607.08, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1502.10, -1607.24, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1511.95, -1602.75, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1511.76, -1607.07, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1511.84, -1617.18, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1502.46, -1617.50, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1502.48, -1627.79, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1493.66, -1627.56, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1493.42, -1637.88, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1502.99, -1637.76, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1512.02, -1637.91, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1511.89, -1627.72, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1466.33, -1638.32, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1447.65, -1643.30, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1456.81, -1643.34, 12.29,   0.00, 90.00, 90.00);
    CreateDynamicObject(19381, 1456.87, -1647.62, 12.29,   0.00, 90.00, 90.00);
    //CreateDynamicObject(19447, 1511.93, -1597.47, 11.36,   0.00, 0.00, 90.00);
    //CreateDynamicObject(19447, 1466.44, -1597.53, 11.36,   0.00, 0.00, 90.00);
    //CreateDynamicObject(19447, 1457.01, -1597.54, 11.36,   0.00, 0.00, 90.00);

    CreateDynamicObject(700, 1458.09, -1693.93, 12.06,   0.00, 0.00, 0.00);
    CreateDynamicObject(700, 1462.92, -1601.86, 12.06,   0.00, 0.00, 0.00);
    CreateDynamicObject(700, 1446.53, -1601.84, 12.06,   0.00, 0.00, 0.00);
    CreateDynamicObject(700, 1464.34, -1629.44, 12.06,   0.00, 0.00, 0.00);
    CreateDynamicObject(700, 1446.50, -1629.49, 12.06,   0.00, 0.00, 0.00);
    CreateDynamicObject(700, 1493.40, -1630.53, 12.06,   0.00, 0.00, 0.00);
    CreateDynamicObject(700, 1510.89, -1630.72, 12.06,   0.00, 0.00, 0.00);
    CreateDynamicObject(700, 1511.10, -1601.13, 12.06,   0.00, 0.00, 0.00);
    CreateDynamicObject(1280, 1471.64, -1656.76, 12.59,   0.00, 0.00, 322.59);
    CreateDynamicObject(1280, 1488.56, -1670.38, 12.59,   0.00, 0.00, 141.82);
    CreateDynamicObject(1280, 1480.30, -1674.26, 12.59,   0.00, 0.00, 90.00);
    CreateDynamicObject(1280, 1480.95, -1702.59, 12.59,   0.00, 0.00, 180.00);
    CreateDynamicObject(1280, 1481.78, -1691.04, 12.59,   0.00, 0.00, 180.00);
    CreateDynamicObject(1280, 1480.85, -1712.09, 12.59,   0.00, 0.00, 180.00);
    CreateDynamicObject(1280, 1479.70, -1712.03, 12.59,   0.00, 0.00, 0.00);
    CreateDynamicObject(1280, 1480.06, -1702.64, 12.59,   0.00, 0.00, 0.00);
    CreateDynamicObject(1280, 1480.94, -1691.05, 12.59,   0.00, 0.00, 0.00);
    CreateDynamicObject(1280, 1482.26, -1682.10, 12.59,   0.00, 0.00, 180.00);
    CreateDynamicObject(1280, 1478.49, -1603.73, 12.59,   0.00, 0.00, 0.00);
    CreateDynamicObject(1280, 1469.08, -1663.77, 12.59,   0.00, 0.00, 357.90);
    CreateDynamicObject(1280, 1471.81, -1670.24, 12.59,   0.00, 0.00, 38.91);
    CreateDynamicObject(1280, 1479.90, -1652.54, 12.59,   0.00, 0.00, -90.00);
    CreateDynamicObject(1280, 1488.46, -1656.88, 12.59,   0.00, 0.00, 219.37);
    CreateDynamicObject(1280, 1481.58, -1682.03, 12.59,   0.00, 0.00, 0.00);
    CreateDynamicObject(1280, 1478.79, -1641.40, 12.59,   0.00, 0.00, 0.00);
    CreateDynamicObject(1280, 1478.89, -1628.07, 12.59,   0.00, 0.00, 0.00);
    CreateDynamicObject(1280, 1478.86, -1615.88, 12.59,   0.00, 0.00, 0.00);
    CreateDynamicObject(1280, 1490.86, -1663.07, 12.59,   0.00, 0.00, 182.99);
    CreateDynamicObject(1280, 1479.42, -1603.64, 12.59,   0.00, 0.00, 181.20);
    CreateDynamicObject(1280, 1479.63, -1641.50, 12.59,   0.00, 0.00, 179.91);
    CreateDynamicObject(1280, 1479.67, -1628.04, 12.59,   0.00, 0.00, 180.47);
    CreateDynamicObject(1280, 1479.62, -1615.94, 12.59,   0.00, 0.00, 180.47);
//  CreateDynamicObject(970, 1479.63, -1718.79, 12.74,   0.00, 0.00, 0.00);*/


//TOTAL  OBJETOS DAKI PRA BAIXO
//====================[HQ PM]====================================================
    CreateDynamicObject(3749,1551.6999512,-1627.3399658,11.8999996,0.0000000,180.0000000,270.0000000); //object(clubgate01_lax) (1)
    CreateDynamicObject(3749,1551.6999512,-1628.5000000,11.8999996,0.0000000,179.9945068,270.0000000); //object(clubgate01_lax) (4)
/*    CreateDynamicObject(988,1549.5300293,-1625.1999512,13.4200001,0.0000000,0.0000000,270.0000000); //object(ws_apgate) (1)
    CreateDynamicObject(988,1549.5300293,-1630.6999512,13.4200001,0.0000000,0.0000000,270.0000000); //object(ws_apgate) (2)     */
    CreateDynamicObject(1695,1552.2099609,-1621.0369873,18.2000008,0.0000000,0.0000000,0.0000000); //object(roofstuff14) (1)
    CreateDynamicObject(1695,1550.8398438,-1618.7299805,18.2000008,0.0000000,0.0000000,0.0000000); //object(roofstuff14) (2)
    CreateDynamicObject(1695,1552.2099609,-1618.7294922,18.2000008,0.0000000,0.0000000,0.0000000); //object(roofstuff14) (3)
    CreateDynamicObject(1695,1550.8398438,-1621.0361328,18.2000008,0.0000000,0.0000000,0.0000000); //object(roofstuff14) (4)
    CreateDynamicObject(1695,1552.2099609,-1634.3520508,18.2000008,0.0000000,0.0000000,0.0000000); //object(roofstuff14) (5)
    CreateDynamicObject(1695,1551.5000000,-1619.7998047,18.7999992,0.0000000,0.0000000,0.0000000); //object(roofstuff14) (6)
    CreateDynamicObject(1695,1550.8398438,-1636.0000000,18.2000008,0.0000000,0.0000000,0.0000000); //object(roofstuff14) (7)
    CreateDynamicObject(1695,1550.8398438,-1634.3515625,18.2000008,0.0000000,0.0000000,0.0000000); //object(roofstuff14) (8)
    CreateDynamicObject(1695,1552.2099609,-1636.5000000,18.2000008,0.0000000,0.0000000,0.0000000); //object(roofstuff14) (9)
    CreateDynamicObject(1695,1551.5000000,-1635.0999756,18.7999992,0.0000000,0.0000000,0.0000000); //object(roofstuff14) (10)
//==============================[prefeitura nova]================================================
    CreateObject(2942, 1467.35, -1783.45, 13.20,   0.00, 0.00, 179.00);
    CreateObject(987, 1490.75, -1818.61, 12.55,   0.00, 0.00, 268.69);
    CreateObject(987, 1539.28, -1824.30, 11.75,   0.00, 0.00, 448.69);
    CreateObject(10377, 1484.24, -1796.76, 30.77,   0.00, 0.00, 89.88);
    CreateObject(4003, 1484.37, -1775.96, 23.66,   0.00, 0.00, 0.00);
    CreateObject(3934, 1534.93, -1764.21, 12.58,   0.00, 0.00, 0.00);
    CreateObject(1251, 1501.83, -1781.77, 12.55,   0.00, 0.00, 0.00);
    CreateObject(3934, 1427.85, -1763.45, 12.58,   0.00, 0.00, 0.00);
//=== rampa de acesso shuashahsu
    CreateObject(974, 1484.4260, -1778.6449, 14.2690,   90.00, 0.00, 0.00);
 //==================================Botões
    CreateDynamicObject(2922,324.60000610,-1491.09997559,25.19999962,0.00000000,0.00000000,148.00000000); //object(kmb_keypad) (1)
    CreateDynamicObject(2922,318.60000610,-1485.50000000,25.10000000,0.00000000,0.00000000,240.00000000); //object(kmb_keypad) (2)
    CreateDynamicObject(2922,279.89999390,-1540.09997559,25.10000076,0.00000000,0.00000000,324.00000000); //object(kmb_keypad) (3)
    CreateDynamicObject(2922,285.79998779,-1545.69995117,25.10000038,0.00000000,0.00000000,62.00000000); //object(kmb_keypad) (4)
    CreateDynamicObject(2922,244.89999390,72.09999847,1004.00000000,0.00000000,0.00000000,180.00000000); //object(kmb_keypad) (5)
    CreateDynamicObject(2922,247.80000305,77.50000000,1004.20001221,0.00000000,0.00000000,90.00000000); //object(kmb_keypad) (6)
    CreateDynamicObject(2922,248.39999390,74.19999695,1003.79998779,0.00000000,0.00000000,268.00000000); //object(kmb_keypad) (7)
    CreateDynamicObject(2922,250.39999390,64.90000153,1004.29998779,0.00000000,0.00000000,90.00000000); //object(kmb_keypad) (8)
    CreateDynamicObject(2922,250.89999390,64.80000305,1004.09997559,0.00000000,0.00000000,270.00000000); //object(kmb_keypad) (9)
    CreateDynamicObject(2922,942.29272461,-1013.35662842,32.84934464,0.00000000,0.00000000,88.00000000); //object(kmb_keypad) (1)
    CreateDynamicObject(2922,924.93914795,-1211.26379395,17.23597092,0.00000000,0.00000000,276.00000000); //object(kmb_keypad) (2)
/*//NOVA DP + PRAÇA =============[by NuT_ShoT]==================================
    CreateDynamicObject(978,1537.86474609,-1668.43005371,13.38709545,0.00000000,0.00000000,90.00000000); //object(sub_roadright) (1)
    CreateDynamicObject(978,1537.86425781,-1668.42968750,13.38709545,0.00000000,0.00000000,90.00000000); //object(sub_roadright) (2)
    CreateDynamicObject(978,1537.84692383,-1677.07800293,13.38709545,0.00000000,0.00000000,90.00000000); //object(sub_roadright) (3)
    CreateDynamicObject(978,1534.87292480,-1658.77319336,13.38709545,0.00000000,0.00000000,90.00000000); //object(sub_roadright) (5)
    CreateDynamicObject(978,1534.84985352,-1649.39184570,13.38709545,0.00000000,0.00000000,90.00000000); //object(sub_roadright) (6)
    CreateDynamicObject(978,1534.93457031,-1686.44079590,13.38709545,0.00000000,0.00000000,90.00000000); //object(sub_roadright) (7)
    CreateDynamicObject(978,1535.04614258,-1695.81567383,13.38709545,0.00000000,0.00000000,90.00000000); //object(sub_roadright) (8)
    CreateDynamicObject(16362,1519.45837402,-1657.60937500,15.65931129,0.00000000,0.00000000,0.00000000); //object(desn2_tscanopy) (1)
    CreateDynamicObject(11547,1520.54345703,-1685.71643066,15.49153137,0.00000000,0.00000000,0.00000000); //object(desn_tscanopy) (1)
    CreateDynamicObject(1251,1520.70776367,-1700.12597656,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (1)
    CreateDynamicObject(1251,1520.79150391,-1705.72192383,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (2)
    CreateDynamicObject(1251,1520.85705566,-1711.12634277,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (3)
    CreateDynamicObject(1251,1520.78137207,-1716.14538574,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (4)

    CreateDynamicObject(8650,1544.61584473,-1632.42687988,17.64937592,0.00000000,0.00000000,180.00000000); //object(shbbyhswall06_lvs) (1)
    CreateDynamicObject(974,1544.61022949,-1620.42492676,15.33230209,0.00000000,0.00000000,270.00000000); //object(tall_fence) (1)
    CreateDynamicObject(974,1544.37927246,-1635.85388184,15.16055298,0.00000000,0.00000000,270.00000000); //object(tall_fence) (2)*/
// dp2
    CreateDynamicObject(983,1546.30004883,-1617.69995117,16.60000038,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (1)
    CreateDynamicObject(983,1543.00000000,-1617.69995117,16.60000038,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (2)
    CreateDynamicObject(983,1539.69995117,-1614.50000000,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (3)
    CreateDynamicObject(983,1539.69995117,-1608.00000000,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (4)
    CreateDynamicObject(983,1542.90002441,-1602.40002441,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (5)
    CreateDynamicObject(983,1539.80004883,-1605.69995117,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (6)
    CreateDynamicObject(983,1549.40002441,-1602.30004883,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (7)
    CreateDynamicObject(983,1555.90002441,-1602.40002441,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (8)
    CreateDynamicObject(983,1562.40002441,-1602.40002441,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (9)
    CreateDynamicObject(983,1568.90002441,-1602.40002441,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (10)
    CreateDynamicObject(983,1575.40002441,-1602.40002441,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (11)
    CreateDynamicObject(983,1581.59997559,-1602.50000000,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (12)
    CreateDynamicObject(983,1588.09997559,-1602.50000000,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (13)
    CreateDynamicObject(983,1594.59997559,-1602.50000000,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (14)
    CreateDynamicObject(983,1601.09997559,-1602.40002441,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (15)
    CreateDynamicObject(983,1604.80004883,-1602.40002441,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (16)
    CreateDynamicObject(983,1608.00000000,-1605.69995117,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (17)
    CreateDynamicObject(983,1608.00000000,-1612.09997559,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (18)
    CreateDynamicObject(983,1608.00000000,-1618.59997559,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (19)
    CreateDynamicObject(983,1608.00000000,-1625.09997559,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (20)
    CreateDynamicObject(983,1608.00000000,-1631.59997559,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (21)
    CreateDynamicObject(983,1608.00000000,-1634.90002441,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (22)
    CreateDynamicObject(983,1604.69995117,-1638.09997559,16.60000038,0.00000000,0.00000000,268.00000000); //object(fenceshit3) (23)
    CreateDynamicObject(3934,1568.69995117,-1646.40002441,27.39999962,0.00000000,0.00000000,270.00000000); //object(helipad01) (2)
    CreateDynamicObject(3934,1555.80004883,-1641.90002441,27.39999962,0.00000000,0.00000000,270.00000000); //object(helipad01) (3)
//=====================================[HQ Dark Gods]=========================================================================
    //CreateDynamicObject(971,708.7999900,-1416.0000000,16.1000000,0.0000000,0.0000000,0.0000000); //object(subwaygate) (2)
    //CreateDynamicObject(971,767.5999800,-1415.9000200,16.1000000,0.0000000,0.0000000,0.0000000); //object(subwaygate) (3)
    //CreateDynamicObject(7657,724.7999900,-1595.3000500,1.5000000,0.0000000,0.0000000,180.0000000); //object(plasticsgate1) (1)

    CreateDynamicObject(3934,717.5999800,-1473.6999500,20.4000000,0.0000000,0.0000000,0.0000000); //object(helipad01) (1)
    CreateDynamicObject(3934,718.2000100,-1455.5999800,21.2000000,0.0000000,0.0000000,0.0000000); //object(helipad01) (2)
    CreateDynamicObject(3934,732.7999900,-1467.0000000,21.2000000,0.0000000,0.0000000,0.0000000); //object(helipad01) (3)
    CreateDynamicObject(8556,724.9000200,-1586.6999500,4.3000000,0.0000000,0.0000000,0.0000000); //object(vgshsegate04) (1)
    CreateDynamicObject(8673,726.9000200,-1595.3000500,-11.1000000,0.0000000,0.0000000,0.0000000); //object(csrsfence03_lvs) (1)
    CreateDynamicObject(8673,726.9000200,-1595.3000500,-8.2000000,0.0000000,0.0000000,0.0000000); //object(csrsfence03_lvs) (3)
    CreateDynamicObject(8673,726.9000200,-1595.3000500,-5.3000000,0.0000000,0.0000000,0.0000000); //object(csrsfence03_lvs) (2)
    CreateDynamicObject(8673,726.9000200,-1595.3000500,-2.4000000,0.0000000,0.0000000,0.0000000); //object(csrsfence03_lvs) (4)
    CreateDynamicObject(8673,723.2000100,-1595.3000500,-2.4000000,0.0000000,0.0000000,0.0000000); //object(csrsfence03_lvs) (5)
    CreateDynamicObject(8673,723.2000100,-1595.3000500,-5.3000000,0.0000000,0.0000000,0.0000000); //object(csrsfence03_lvs) (6)
    CreateDynamicObject(8673,723.2000100,-1595.3000500,-8.2000000,0.0000000,0.0000000,0.0000000); //object(csrsfence03_lvs) (7)
    CreateDynamicObject(8673,730.5999800,-1595.3000500,-2.4000000,0.0000000,0.0000000,0.0000000); //object(csrsfence03_lvs) (8)
    CreateDynamicObject(8673,730.5999800,-1595.3000500,-5.3000000,0.0000000,0.0000000,0.0000000); //object(csrsfence03_lvs) (10)
    CreateDynamicObject(8673,730.5999800,-1595.3000500,-7.3000000,0.0000000,0.0000000,0.0000000); //object(csrsfence03_lvs) (11)
    CreateDynamicObject(8673,730.5999800,-1595.3000500,-1.7000000,0.0000000,0.0000000,0.0000000); //object(csrsfence03_lvs) (12)
    CreateDynamicObject(8673,721.2999900,-1595.1999500,-1.7000000,0.0000000,0.0000000,0.0000000); //object(csrsfence03_lvs) (13)
    CreateDynamicObject(8673,745.2999900,-1595.1999500,1.3000000,0.0000000,0.0000000,0.0000000); //object(csrsfence03_lvs) (14)
    CreateDynamicObject(8673,704.7999900,-1595.3000500,1.1000000,0.0000000,0.0000000,0.0000000); //object(csrsfence03_lvs) (16)
    CreateDynamicObject(2990,709.7998000,-1576.8994100,16.8000000,0.0000000,0.0000000,0.0000000); //object(wongs_gate) (1)
    CreateDynamicObject(2990,719.7999900,-1577.0999800,16.8000000,0.0000000,0.0000000,0.0000000); //object(wongs_gate) (2)
    CreateDynamicObject(2990,729.7999900,-1576.9000200,16.8000000,0.0000000,0.0000000,0.0000000); //object(wongs_gate) (3)
    CreateDynamicObject(2990,739.7999900,-1577.0000000,16.8000000,0.0000000,0.0000000,0.0000000); //object(wongs_gate) (4)
    CreateDynamicObject(2990,744.7000100,-1572.0000000,16.5000000,0.0000000,0.0000000,90.0000000); //object(wongs_gate) (5)
    CreateDynamicObject(2990,744.7000100,-1562.0000000,16.5000000,0.0000000,0.0000000,90.0000000); //object(wongs_gate) (6)
    CreateDynamicObject(2990,744.7000100,-1552.0000000,16.5000000,0.0000000,0.0000000,90.0000000); //object(wongs_gate) (7)
    CreateDynamicObject(2990,745.2000100,-1542.1999500,16.5000000,0.0000000,0.0000000,84.0000000); //object(wongs_gate) (9)
    CreateDynamicObject(2990,746.4000200,-1532.5000000,16.5000000,0.0000000,0.0000000,79.9960000); //object(wongs_gate) (10)
    CreateDynamicObject(2990,748.5999800,-1523.0000000,16.5000000,0.0000000,0.0000000,73.9910000); //object(wongs_gate) (11)
    CreateDynamicObject(2990,751.1992200,-1513.5996100,16.5000000,0.0000000,0.0000000,73.9820000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,754.2999900,-1504.0999800,16.5000000,0.0000000,0.0000000,69.9820000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,757.5999800,-1494.8000500,16.5000000,0.0000000,0.0000000,69.9770000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,761.2000100,-1485.5000000,16.5000000,0.0000000,0.0000000,67.9770000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,765.0999800,-1476.3000500,16.5000000,0.0000000,0.0000000,67.9720000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,767.4000200,-1466.8000500,16.5000000,0.0000000,0.0000000,83.9670000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,768.5000000,-1456.9000200,16.5000000,0.0000000,0.0000000,83.9630000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,770.0999800,-1446.8000500,16.5000000,0.0000000,0.0000000,77.9630000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,771.7000100,-1436.8000500,16.5000000,0.0000000,0.0000000,85.9630000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,772.0000000,-1427.0000000,16.5000000,0.0000000,0.0000000,89.9630000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,772.0000000,-1420.8000500,16.5000000,0.0000000,0.0000000,89.9620000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,758.2000100,-1416.0000000,16.5000000,0.0000000,0.0000000,179.9590000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,748.2000100,-1416.0000000,16.5000000,0.0000000,0.0000000,179.9560000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,738.2000100,-1416.0000000,16.5000000,0.0000000,0.0000000,179.9560000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,728.2000100,-1416.0000000,16.5000000,0.0000000,0.0000000,179.9560000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,718.2000100,-1416.0000000,16.5000000,0.0000000,0.0000000,179.9560000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,699.4000200,-1416.0000000,16.5000000,0.0000000,0.0000000,179.9560000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,694.7000100,-1421.0000000,16.5000000,0.0000000,0.0000000,271.9560000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,694.5000000,-1431.0000000,16.5000000,0.0000000,0.0000000,265.9560000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,693.7999900,-1441.0000000,16.5000000,0.0000000,0.0000000,265.9520000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,693.0999800,-1451.0000000,16.5000000,0.0000000,0.0000000,265.9520000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,691.9000200,-1461.0000000,16.5000000,0.0000000,0.0000000,259.9520000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,690.2999900,-1470.8000500,16.5000000,0.0000000,0.0000000,261.9480000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,689.4000200,-1480.6999500,16.5000000,0.0000000,0.0000000,267.9470000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,689.0000000,-1490.6999500,16.5000000,0.0000000,0.0000000,267.9460000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,688.7999900,-1500.6999500,16.5000000,0.0000000,0.0000000,269.9460000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,688.7000100,-1510.6999500,16.5000000,0.0000000,0.0000000,269.9450000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,689.0999800,-1520.5000000,16.5000000,0.0000000,0.0000000,275.9450000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,689.7000100,-1530.5000000,16.5000000,0.0000000,0.0000000,269.9440000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,704.7000100,-1571.5999800,16.8000000,0.0000000,0.0000000,270.0000000); //object(wongs_gate) (1)
    CreateDynamicObject(2990,704.7000100,-1561.5000000,21.0000000,0.0000000,0.0000000,270.0000000); //object(wongs_gate) (1)
    CreateDynamicObject(2990,699.5000000,-1556.8000500,21.3000000,0.0000000,0.0000000,0.0000000); //object(wongs_gate) (1)
    CreateDynamicObject(2990,689.7000100,-1540.5000000,16.5000000,0.0000000,0.0000000,269.9400000); //object(wongs_gate) (12)
    CreateDynamicObject(2990,692.7000100,-1549.5999800,16.5000000,0.0000000,0.0000000,305.6900000); //object(wongs_gate) (12)
    CreateDynamicObject(8167,737.0996100,-1533.3867200,-2.6814900,0.0000000,0.0000000,0.0000000); //object(apgate1_vegs01) (1)
    CreateDynamicObject(1553,695.7000100,-1555.0999800,15.1000000,0.0000000,0.0000000,270.0000000); //object(vegasmashfnce_gate) (1)
    CreateDynamicObject(1553,695.7000100,-1555.0999800,17.4000000,0.0000000,0.0000000,270.0000000); //object(vegasmashfnce_gate) (2)
    CreateDynamicObject(1553,695.7000100,-1555.0999800,19.7000000,0.0000000,0.0000000,270.0000000); //object(vegasmashfnce_gate) (3)
    CreateDynamicObject(1553,695.7000100,-1555.0999800,22.0000000,0.0000000,0.0000000,270.0000000); //object(vegasmashfnce_gate) (4)
    CreateDynamicObject(8615,711.2000100,-1460.8000500,19.7000000,0.0000000,0.0000000,268.0000000); //object(vgssstairs04_lvs) (1)
    CreateDynamicObject(13562,722.0000000,-1421.8000500,20.7000000,0.0000000,0.0000000,0.0000000); //object(bigsprunkpole) (1)
    CreateDynamicObject(1946,757.7041000,-1445.9541000,12.0048200,0.0000000,0.0000000,0.0000000); //object(baskt_ball_hi) (1)
    CreateDynamicObject(16151,734.2000100,-1450.4000200,16.7000000,0.0000000,0.0000000,270.0000000); //object(ufo_bar) (1)
    CreateDynamicObject(3524,713.7000100,-1415.8000500,15.4000000,0.0000000,0.0000000,186.0000000); //object(skullpillar01_lvs) (1)
    CreateDynamicObject(3524,703.9000200,-1415.6999500,15.4000000,0.0000000,0.0000000,179.9990000); //object(skullpillar01_lvs) (2)
    CreateDynamicObject(3524,762.9000200,-1415.8000500,15.4000000,0.0000000,0.0000000,179.9990000); //object(skullpillar01_lvs) (3)
    CreateDynamicObject(3524,772.4000200,-1415.5999800,15.4000000,0.0000000,0.0000000,179.9950000); //object(skullpillar01_lvs) (4)
    CreateDynamicObject(956,728.9000200,-1450.9000200,17.2000000,0.0000000,0.0000000,182.0000000); //object(cj_ext_candy) (1)
    CreateDynamicObject(17068,731.2999900,-1440.3000500,20.9000000,0.0000000,0.0000000,174.0000000); //object(xjetty01) (1)
    CreateDynamicObject(3524,17.20000076,-2648.50000000,42.40000153,0.00000000,0.00000000,272.00000000); //object(skullpillar01_lvs) (5)    */

//===================================================[ HQ Onibus ]===============================
    PortaoOnibus = CreateDynamicObject(971,2424.3000500,-2089.6001000,14.6000000,0.0000000,0.0000000,270.0000000); //object(subwaygate) (1)
    CreateDynamicObject(3440,2424.0000000,-2094.3000000,21.5000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (1)
    CreateDynamicObject(3440,2424.1010000,-2084.9000000,17.2100000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (2)
    //CreateDynamicObject(971,2424.3000000,-2089.6000000,14.6000000,0.0000000,0.0000000,270.0000000); //object(subwaygate) (1)
    CreateDynamicObject(3440,2424.1000000,-2094.3000000,15.0000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (3)
    CreateDynamicObject(3440,2424.1000000,-2084.9000000,21.5000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (4)
    CreateDynamicObject(974,2424.1000000,-2097.7000000,20.8000000,0.0000000,0.0000000,270.0000000); //object(tall_fence) (3)
    CreateDynamicObject(996,2425.1000000,-2094.4000000,13.3000000,0.0000000,0.0000000,0.0000000); //object(lhouse_barrier1) (1)
    CreateDynamicObject(996,2425.0000000,-2084.7000000,13.3000000,0.0000000,0.0000000,0.0000000); //object(lhouse_barrier1) (2)
    CreateDynamicObject(3627,2448.3000500,-2113.1999500,16.4000000,0.0000000,0.0000000,90.0000000); //object(dckcanpy) (1)
    CreateDynamicObject(996,2432.9000000,-2095.3000000,13.3000000,0.0000000,0.0000000,270.0000000); //object(lhouse_barrier1) (3)
    CreateDynamicObject(1237,2432.8000000,-2103.1000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(strtbarrier01) (1)
    CreateDynamicObject(996,2432.8000000,-2104.1000000,13.3000000,0.0000000,0.0000000,270.0000000); //object(lhouse_barrier1) (4)
    CreateDynamicObject(1237,2432.7000000,-2084.9000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(strtbarrier01) (2)
    CreateDynamicObject(3475,2444.8000000,-2144.8000000,20.7000000,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (3)
    CreateDynamicObject(3475,2424.2000000,-2069.0000000,20.7000000,0.0000000,0.0000000,0.0000000); //object(vgsn_fncelec_pst) (4)
    CreateDynamicObject(2774,2424.2000000,-2078.7000000,11.0000000,0.0000000,0.0000000,0.0000000); //object(cj_airp_pillars) (2)
    CreateDynamicObject(3475,2424.1999500,-2074.8989300,20.7000000,0.0000000,0.0000000,0.0000000); //object(vgsn_fncelec_pst) (5)
    CreateDynamicObject(3475,2424.4000000,-2104.1000000,20.7000000,0.0000000,0.0000000,0.0000000); //object(vgsn_fncelec_pst) (6)
    CreateDynamicObject(3475,2424.4000000,-2110.0000000,20.7000000,0.0000000,0.0000000,0.0000000); //object(vgsn_fncelec_pst) (7)
    CreateDynamicObject(3475,2424.4000000,-2115.8990000,20.7000000,0.0000000,0.0000000,0.0000000); //object(vgsn_fncelec_pst) (8)
    CreateDynamicObject(3475,2424.4000000,-2121.8000000,20.7000000,0.0000000,0.0000000,0.0000000); //object(vgsn_fncelec_pst) (9)
    CreateDynamicObject(2774,2424.4000000,-2100.2000000,11.0000000,0.0000000,0.0000000,0.0000000); //object(cj_airp_pillars) (3)
    CreateDynamicObject(974,2424.1010000,-2081.8000000,15.3000000,0.0000000,0.0000000,270.0000000); //object(tall_fence) (4)
    CreateDynamicObject(3440,2424.1010000,-2084.8990000,15.0000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (5)
    CreateDynamicObject(974,2424.1010000,-2097.8990000,15.3000000,0.0000000,0.0000000,270.0000000); //object(tall_fence) (5)
    CreateDynamicObject(3440,2424.1010000,-2094.3000000,18.0000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (6)
    CreateDynamicObject(3440,2424.3000000,-2087.5000000,23.6000000,90.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (7)
    CreateDynamicObject(3440,2424.1000000,-2082.3000000,23.6000000,90.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (8)
    CreateDynamicObject(974,2424.3020000,-2088.3000000,20.9999900,0.0000000,0.0000000,270.0000000); //object(tall_fence) (6)
    CreateDynamicObject(3475,2424.4000000,-2127.7000000,20.7000000,0.0000000,0.0000000,0.0000000); //object(vgsn_fncelec_pst) (10)
    CreateDynamicObject(3475,2424.4000000,-2133.6000000,20.7000000,0.0000000,0.0000000,0.0000000); //object(vgsn_fncelec_pst) (11)
    CreateDynamicObject(3440,2424.0990000,-2081.0000000,23.6000000,90.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (9)
    CreateDynamicObject(3475,2424.4000000,-2139.3990000,20.7000000,0.0000000,0.0000000,0.0000000); //object(vgsn_fncelec_pst) (12)
    CreateDynamicObject(3475,2424.4000000,-2142.3990000,20.7000000,0.0000000,0.0000000,0.0000000); //object(vgsn_fncelec_pst) (13)
    CreateDynamicObject(3475,2427.4000000,-2144.8000000,20.7000000,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (14)
    CreateDynamicObject(3440,2424.1010000,-2096.8000000,23.6000000,90.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (10)
    CreateDynamicObject(974,2424.1030000,-2081.8000000,20.8000000,0.0000000,0.0000000,270.0000000); //object(tall_fence) (8)
    CreateDynamicObject(974,2424.3020000,-2090.7000000,21.0000000,0.0000000,0.0000000,270.0000000); //object(tall_fence) (9)
    CreateDynamicObject(3440,2424.1020000,-2097.3000000,23.6000000,90.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (11)
    CreateDynamicObject(3440,2424.3000000,-2091.7000000,23.6000000,90.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (12)
    CreateDynamicObject(3475,2433.0000000,-2144.8000000,20.7000000,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (15)
    CreateDynamicObject(3475,2438.8000000,-2144.8000000,20.7000000,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (16)
    CreateDynamicObject(3475,2468.4000000,-2144.8000000,20.7000000,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (17)
    CreateDynamicObject(3475,2450.7000000,-2144.8000000,20.7000000,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (18)
    CreateDynamicObject(3475,2456.6010000,-2144.8000000,20.7000000,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (19)
    CreateDynamicObject(3475,2462.6010000,-2144.8000000,20.7000000,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (20)
    CreateDynamicObject(3475,2492.0000000,-2144.8000000,20.7000000,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (21)
    CreateDynamicObject(3475,2474.3000000,-2144.8000000,20.7000000,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (22)
    CreateDynamicObject(3475,2480.2000000,-2144.8000000,20.7000000,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (23)
    CreateDynamicObject(3475,2486.0000000,-2144.8000000,20.7000000,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (24)
    CreateDynamicObject(3627,2478.0000000,-2088.4100000,16.4000000,0.0000000,0.0000000,180.0000000); //object(dckcanpy) (2)
    CreateDynamicObject(996,2463.6000000,-2111.1000000,13.3000000,0.0000000,0.0000000,94.0000000); //object(lhouse_barrier1) (5)
    CreateDynamicObject(996,2464.2000000,-2103.6000000,13.3000000,0.0000000,0.0000000,0.0000000); //object(lhouse_barrier1) (6)
    CreateDynamicObject(1237,2463.3000000,-2103.6000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(strtbarrier01) (3)
    CreateDynamicObject(1237,2476.2000000,-2103.8000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(strtbarrier01) (4)
    CreateDynamicObject(996,2468.2000000,-2103.6000000,13.3000000,0.0000000,0.0000000,0.0000000); //object(lhouse_barrier1) (9)
    CreateDynamicObject(994,2477.5000000,-2104.0000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(lhouse_barrier2) (1)
    CreateDynamicObject(3475,2494.3000000,-2140.6000000,14.9000000,0.0000000,0.0000000,180.0000000); //object(vgsn_fncelec_pst) (25)
    CreateDynamicObject(2774,2494.1000000,-2066.2000000,11.0000000,0.0000000,0.0000000,0.0000000); //object(cj_airp_pillars) (4)
    CreateDynamicObject(3475,2494.3000000,-2134.6000000,14.9000000,0.0000000,0.0000000,179.9950000); //object(vgsn_fncelec_pst) (26)
    CreateDynamicObject(3475,2494.3000000,-2122.8000000,14.9000000,0.0000000,0.0000000,179.9950000); //object(vgsn_fncelec_pst) (27)
    CreateDynamicObject(3475,2494.3000000,-2128.7000000,14.9000000,0.0000000,0.0000000,179.9950000); //object(vgsn_fncelec_pst) (28)
    CreateDynamicObject(3475,2494.3000000,-2069.6000000,14.9000000,0.0000000,0.0000000,179.9950000); //object(vgsn_fncelec_pst) (29)
    CreateDynamicObject(3475,2494.3000000,-2116.8000000,14.9000000,0.0000000,0.0000000,179.9950000); //object(vgsn_fncelec_pst) (30)
    CreateDynamicObject(3475,2494.3000000,-2110.8990000,14.9000000,0.0000000,0.0000000,179.9950000); //object(vgsn_fncelec_pst) (31)
    CreateDynamicObject(3475,2494.3000000,-2104.8990000,14.9000000,0.0000000,0.0000000,179.9950000); //object(vgsn_fncelec_pst) (32)
    CreateDynamicObject(3475,2494.3000000,-2099.0000000,14.9000000,0.0000000,0.0000000,179.9950000); //object(vgsn_fncelec_pst) (33)
    CreateDynamicObject(3475,2494.3000500,-2093.1001000,14.9000000,0.0000000,0.0000000,179.9950000); //object(vgsn_fncelec_pst) (34)
    CreateDynamicObject(3475,2494.3000000,-2087.3990000,14.9000000,0.0000000,0.0000000,179.9950000); //object(vgsn_fncelec_pst) (35)
    CreateDynamicObject(3475,2494.3000000,-2081.6000000,14.9000000,0.0000000,0.0000000,179.9950000); //object(vgsn_fncelec_pst) (36)
    CreateDynamicObject(3475,2494.3000000,-2075.7000000,14.9000000,0.0000000,0.0000000,179.9950000); //object(vgsn_fncelec_pst) (37)
    CreateDynamicObject(2774,2494.3000000,-2144.5000000,11.0000000,0.0000000,0.0000000,0.0000000); //object(cj_airp_pillars) (5)
    CreateDynamicObject(3475,2426.8000000,-2066.1000000,20.7000000,0.0000000,0.0000000,270.0000000); //object(vgsn_fncelec_pst) (39)
    CreateDynamicObject(3475,2432.7000000,-2066.1000000,20.7000000,0.0000000,0.0000000,270.0000000); //object(vgsn_fncelec_pst) (38)
    CreateDynamicObject(3475,2444.2000000,-2066.1000000,20.7000000,0.0000000,0.0000000,270.0000000); //object(vgsn_fncelec_pst) (41)
    CreateDynamicObject(3475,2438.7000000,-2066.1000000,20.7000000,0.0000000,0.0000000,269.9950000); //object(vgsn_fncelec_pst) (43)
    CreateDynamicObject(3475,2491.2000000,-2066.1000000,20.7000000,0.0000000,0.0000000,269.9950000); //object(vgsn_fncelec_pst) (44)
    CreateDynamicObject(3475,2450.1010000,-2066.1000000,20.7000000,0.0000000,0.0000000,269.9950000); //object(vgsn_fncelec_pst) (45)
    CreateDynamicObject(3475,2456.2000000,-2066.1000000,20.7000000,0.0000000,0.0000000,269.9950000); //object(vgsn_fncelec_pst) (46)
    CreateDynamicObject(3475,2461.9000000,-2066.1000000,20.7000000,0.0000000,0.0000000,269.9950000); //object(vgsn_fncelec_pst) (47)
    CreateDynamicObject(3475,2467.9000000,-2066.1000000,20.7000000,0.0000000,0.0000000,269.9950000); //object(vgsn_fncelec_pst) (48)
    CreateDynamicObject(3475,2473.9000000,-2066.1000000,20.7000000,0.0000000,0.0000000,269.9950000); //object(vgsn_fncelec_pst) (49)
    CreateDynamicObject(3475,2479.8000000,-2066.1000000,20.7000000,0.0000000,0.0000000,269.9950000); //object(vgsn_fncelec_pst) (50)
    CreateDynamicObject(3475,2485.5000000,-2066.1000000,20.7000000,0.0000000,0.0000000,269.9950000); //object(vgsn_fncelec_pst) (51)
    CreateDynamicObject(1237,2432.8000000,-2094.5000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(strtbarrier01) (5)
    CreateDynamicObject(994,2477.5000000,-2104.0000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(lhouse_barrier2) (1)
    CreateDynamicObject(16151,2448.3000000,-2067.5000000,12.5000000,0.0000000,0.0000000,90.0000000); //object(ufo_bar) (1)
    CreateDynamicObject(1432,2449.7000000,-2072.7000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(dyn_table_2) (1)
    CreateDynamicObject(1432,2444.6000000,-2073.0000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(dyn_table_2) (2)
    CreateDynamicObject(637,2454.1000000,-2067.7000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(kb_planterbox) (1)
    CreateDynamicObject(637,2454.1000000,-2070.2000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(kb_planterbox) (2)
    CreateDynamicObject(637,2454.1000000,-2072.8000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(kb_planterbox) (3)
    CreateDynamicObject(637,2454.1000000,-2077.9000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(kb_planterbox) (4)
    CreateDynamicObject(1649,2454.2000000,-2068.8000000,14.7000000,0.0000000,0.0000000,90.0000000); //object(wglasssmash) (1)
    CreateDynamicObject(637,2454.1000000,-2079.9200000,15.4000000,90.0000000,0.0000000,0.0000000); //object(kb_planterbox) (5)
    CreateDynamicObject(637,2454.1010000,-2066.6000000,14.3000000,90.0000000,0.0000000,0.0000000); //object(kb_planterbox) (6)
    CreateDynamicObject(1649,2441.0000000,-2068.9000000,14.7000000,0.0000000,0.0000000,270.0000000); //object(wglasssmash) (2)
    CreateDynamicObject(637,2454.1010000,-2075.3000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(kb_planterbox) (7)
    CreateDynamicObject(1649,2454.2000000,-2073.3000000,14.7000000,0.0000000,0.0000000,270.0000000); //object(wglasssmash) (3)
    CreateDynamicObject(637,2444.5400000,-2079.7800000,12.8000000,0.0000000,0.0000000,270.0000000); //object(kb_planterbox) (8)
    CreateDynamicObject(637,2454.1010000,-2066.6000000,15.3800000,90.0000000,0.0000000,0.0000000); //object(kb_planterbox) (9)
    CreateDynamicObject(637,2454.1010000,-2079.9300000,14.0000000,90.0000000,0.0000000,0.0000000); //object(kb_planterbox) (10)
    CreateDynamicObject(1649,2443.6999500,-2079.8999000,14.7000000,0.0000000,0.0000000,0.0000000); //object(wglasssmash) (4)
    CreateDynamicObject(1649,2454.2000000,-2073.2000000,14.7000000,0.0000000,0.0000000,90.0000000); //object(wglasssmash) (5)
    CreateDynamicObject(1649,2454.2000000,-2077.6000000,14.7000000,0.0000000,0.0000000,90.0000000); //object(wglasssmash) (6)
    CreateDynamicObject(637,2454.1000000,-2068.1500000,16.5300000,0.0000000,0.0000000,0.0000000); //object(kb_planterbox) (13)
    CreateDynamicObject(637,2454.1000000,-2070.8000000,16.5300000,0.0000000,0.0000000,0.0000000); //object(kb_planterbox) (15)
    CreateDynamicObject(637,2454.1000000,-2073.4800000,16.5300000,0.0000000,0.0000000,0.0000000); //object(kb_planterbox) (16)
    CreateDynamicObject(637,2454.1000000,-2076.1000000,16.5300000,0.0000000,0.0000000,0.0000000); //object(kb_planterbox) (17)
    CreateDynamicObject(637,2454.1000000,-2078.4000000,16.5300000,0.0000000,0.0000000,0.0000000); //object(kb_planterbox) (18)
    CreateDynamicObject(637,2454.1010000,-2078.8000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(kb_planterbox) (19)
    CreateDynamicObject(637,2452.5000000,-2079.7800000,12.8000000,0.0000000,0.0000000,270.0000000); //object(kb_planterbox) (20)
    CreateDynamicObject(637,2450.9000000,-2079.7800000,12.8000000,0.0000000,0.0000000,270.0000000); //object(kb_planterbox) (21)
    CreateDynamicObject(637,2442.7000000,-2079.7800000,12.8000000,0.0000000,0.0000000,270.0000000); //object(kb_planterbox) (22)
    CreateDynamicObject(1491,2449.2000000,-2079.7800000,12.5000000,0.0000000,0.0000000,180.0000000); //object(gen_doorint01) (1)
    CreateDynamicObject(1491,2446.2000000,-2079.7800000,12.5000000,0.0000000,0.0000000,0.0000000); //object(gen_doorint01) (2)
    CreateDynamicObject(1649,2454.2000000,-2077.6000000,14.7000000,0.0000000,0.0000000,270.0000000); //object(wglasssmash) (7)
    CreateDynamicObject(637,2449.4000000,-2079.8000000,13.9500000,90.0000000,0.0000000,267.9950000); //object(kb_planterbox) (24)
    CreateDynamicObject(637,2452.5000000,-2079.7800000,16.5300000,0.0000000,0.0000000,270.0000000); //object(kb_planterbox) (25)
    CreateDynamicObject(637,2446.1000000,-2079.7800000,13.9500000,90.0000000,0.0000000,267.9950000); //object(kb_planterbox) (26)
    CreateDynamicObject(637,2450.8000000,-2079.7800000,16.5300000,0.0000000,0.0000000,270.0000000); //object(kb_planterbox) (27)
    CreateDynamicObject(637,2449.4000000,-2079.8000000,15.4000000,90.0000000,0.0000000,267.9950000); //object(kb_planterbox) (28)
    CreateDynamicObject(637,2446.1000000,-2079.8000000,15.4000000,90.0000000,0.0000000,268.0000000); //object(kb_planterbox) (29)
    CreateDynamicObject(637,2441.0910000,-2071.0000000,12.8000000,0.0000000,0.0000000,180.0000000); //object(kb_planterbox) (30)
    CreateDynamicObject(637,2441.0910000,-2078.5000000,12.8000000,0.0000000,0.0000000,179.9950000); //object(kb_planterbox) (31)
    CreateDynamicObject(637,2441.0910000,-2076.2000000,12.8000000,0.0000000,0.0000000,179.9950000); //object(kb_planterbox) (32)
    CreateDynamicObject(637,2441.0910000,-2073.6000000,12.8000000,0.0000000,0.0000000,179.9950000); //object(kb_planterbox) (33)
    CreateDynamicObject(637,2441.0910000,-2067.1950000,16.5300000,0.0000000,0.0000000,180.0000000); //object(kb_planterbox) (34)
    CreateDynamicObject(637,2441.0910000,-2067.1950000,12.8000000,0.0000000,0.0000000,179.9950000); //object(kb_planterbox) (36)
    CreateDynamicObject(637,2441.0910000,-2066.6000000,14.0000000,90.0000000,0.0000000,357.9900000); //object(kb_planterbox) (37)
    CreateDynamicObject(1649,2454.2000000,-2069.0000000,14.7000000,0.0000000,0.0000000,270.0000000); //object(wglasssmash) (8)
    CreateDynamicObject(1649,2441.0000000,-2073.3000000,14.7000000,0.0000000,0.0000000,270.0000000); //object(wglasssmash) (9)
    CreateDynamicObject(1649,2441.0000000,-2077.6000000,14.7000000,0.0000000,0.0000000,270.0000000); //object(wglasssmash) (10)
    CreateDynamicObject(637,2441.0910000,-2066.6000000,15.3000000,90.0000000,0.0000000,357.9900000); //object(kb_planterbox) (38)
    CreateDynamicObject(637,2441.0910000,-2068.3990000,12.8000000,0.0000000,0.0000000,179.9950000); //object(kb_planterbox) (40)
    CreateDynamicObject(637,2441.0910000,-2072.2000000,16.5300000,0.0000000,0.0000000,179.9950000); //object(kb_planterbox) (41)
    CreateDynamicObject(637,2441.0910000,-2069.6000000,16.5300000,0.0000000,0.0000000,179.9950000); //object(kb_planterbox) (42)
    CreateDynamicObject(637,2441.0910000,-2077.3000000,16.5300000,0.0000000,0.0000000,179.9950000); //object(kb_planterbox) (43)
    CreateDynamicObject(637,2441.0910000,-2074.8000000,16.5300000,0.0000000,0.0000000,179.9950000); //object(kb_planterbox) (44)
    CreateDynamicObject(637,2441.0910000,-2078.8400000,16.5300000,0.0000000,0.0000000,179.9950000); //object(kb_planterbox) (45)
    CreateDynamicObject(1649,2451.8000000,-2079.8990000,14.7000000,0.0000000,0.0000000,0.0000000); //object(wglasssmash) (11)
    CreateDynamicObject(637,2441.0910000,-2079.9400000,15.3000000,90.0000000,0.0000000,357.9900000); //object(kb_planterbox) (46)
    CreateDynamicObject(637,2441.0910000,-2079.9400000,13.9430000,90.0000000,0.0000000,359.9890000); //object(kb_planterbox) (47)
    CreateDynamicObject(637,2444.6000000,-2079.7800000,16.5300000,0.0000000,0.0000000,270.0000000); //object(kb_planterbox) (49)
    CreateDynamicObject(637,2442.5000000,-2079.7800000,16.5300000,0.0000000,0.0000000,270.0000000); //object(kb_planterbox) (50)
    CreateDynamicObject(1649,2441.0000000,-2077.8000000,14.7000000,0.0000000,0.0000000,90.0000000); //object(wglasssmash) (12)
    CreateDynamicObject(1649,2441.0000000,-2069.0000000,14.7000000,0.0000000,0.0000000,90.0000000); //object(wglasssmash) (13)
    CreateDynamicObject(1649,2441.0000000,-2073.3990000,14.7000000,0.0000000,0.0000000,90.0000000); //object(wglasssmash) (14)
    CreateDynamicObject(1649,2451.7000000,-2079.9000000,14.7000000,0.0000000,0.0000000,180.0000000); //object(wglasssmash) (15)
    CreateDynamicObject(1649,2443.7000000,-2079.7000000,14.7000000,0.0000000,0.0000000,179.9950000); //object(wglasssmash) (16)
    CreateDynamicObject(637,2447.8300000,-2079.8000000,15.2000000,0.0000000,0.0000000,270.0000000); //object(kb_planterbox) (51)
    CreateDynamicObject(637,2447.6000000,-2079.8000000,15.2000000,0.0000000,0.0000000,270.0000000); //object(kb_planterbox) (52)
    CreateDynamicObject(637,2447.8400000,-2079.8000000,16.5300000,0.0000000,0.0000000,270.0000000); //object(kb_planterbox) (53)
    CreateDynamicObject(637,2447.6010000,-2079.8000000,16.5300000,0.0000000,0.0000000,270.0000000); //object(kb_planterbox) (54)
    CreateDynamicObject(1824,2451.1000000,-2076.5000000,13.1000000,0.0000000,0.0000000,270.0000000); //object(craps_table) (2)
    CreateDynamicObject(1432,2445.2000000,-2077.3000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(dyn_table_2) (3)
    CreateDynamicObject(1775,2442.3000000,-2067.1000000,13.6000000,0.0000000,0.0000000,0.0000000); //object(cj_sprunk1) (1)
    CreateDynamicObject(1302,2443.8000000,-2066.7000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(vendmachfd) (1)
//=================================[HQ Mongols by Biel]========================================
    CreateDynamicObject(3524,945.70001221,-1099.59997559,26.20000076,0.00000000,0.00000000,96.00000000); //object(skullpillar01_lvs) (1)
    CreateDynamicObject(3524,945.90002441,-1107.30004883,26.10000038,0.00000000,0.00000000,96.00000000); //object(skullpillar01_lvs) (2)
    CreateDynamicObject(3524,936.20001221,-1107.09997559,26.10000038,0.00000000,0.00000000,96.00000000); //object(skullpillar01_lvs) (3)
    CreateDynamicObject(3524,936.09997559,-1099.90002441,26.20000076,0.00000000,0.00000000,92.00000000); //object(skullpillar01_lvs) (4)
    CreateDynamicObject(3525,822.50000000,-1102.90002441,29.70000076,0.00000000,0.00000000,0.00000000); //object(exbrtorch01) (1)
    CreateDynamicObject(6865,932.09997559,-1071.40002441,30.00000000,0.00000000,0.00000000,316.00000000); //object(steerskull) (1)
    CreateDynamicObject(3594,8.60000038,-2663.50000000,39.90000153,0.00000000,0.00000000,268.00000000); //object(la_fuckcar1) (1)
    CreateDynamicObject(3594,6.50000000,-2632.39990234,39.70000076,0.00000000,0.00000000,274.00000000); //object(la_fuckcar1) (2)
    CreateDynamicObject(3524,17.20000076,-2648.50000000,42.40000153,0.00000000,0.00000000,272.00000000); //object(skullpillar01_lvs) (5)
//HQ PRF by vinny
    CreateDynamicObject(3934,849.29998779,-1216.80004883,16.00000000,0.00000000,0.00000000,270.00000000); //object(helipad01) (1)
    CreateDynamicObject(3934,832.79998779,-1216.69995117,16.00000000,0.00000000,0.00000000,270.00000000); //object(helipad01) (2)
    CreateDynamicObject(974,923.79998779,-1212.09997559,18.79999924,0.00000000,0.00000000,270.00000000); //object(tall_fence) (1)
    CreateDynamicObject(974,923.89941406,-1230.59960938,18.79999924,0.00000000,0.00000000,270.00000000); //object(tall_fence) (2)
// >> Apreenção de carros
    CreateDynamicObject(8313,807.9000200,-1172.0999800,26.8000000,0.0000000,0.0000000,198.0000000); //object(vgsselecfence16) (3)
    CreateDynamicObject(8210,836.0000000,-1158.5999800,28.4000000,0.0000000,0.0000000,180.0000000); //object(vgsselecfence12) (1)
    CreateDynamicObject(8210,891.2999900,-1160.3000500,28.4000000,0.0000000,0.0000000,177.9950000); //object(vgsselecfence12) (2)
    CreateDynamicObject(987,925.0000000,-1160.7998000,26.8000000,0.0000000,0.0000000,177.9950000); //object(elecfence_bar) (1)
    CreateDynamicObject(987,931.2999900,-1170.0000000,26.8000000,0.0000000,0.0000000,125.9950000); //object(elecfence_bar) (2)
    CreateDynamicObject(987,931.0999800,-1177.5999800,26.8000000,0.0000000,0.0000000,95.9910000); //object(elecfence_bar) (3)
    CreateDynamicObject(987,930.9000200,-1189.5999800,22.5000000,0.0000000,0.0000000,89.9880000); //object(elecfence_bar) (4)
    CreateDynamicObject(987,930.5996100,-1198.6992200,20.3000000,0.0000000,0.0000000,87.9790000); //object(elecfence_bar) (5)
    CreateDynamicObject(974,926.9000200,-1198.8000500,23.2000000,0.0000000,0.0000000,0.0000000); //object(tall_fence) (1)
    CreateDynamicObject(974,925.0999800,-1198.8000500,23.2000000,0.0000000,0.0000000,0.0000000); //object(tall_fence) (2)
    CreateDynamicObject(974,918.4000200,-1198.8000500,23.2000000,0.0000000,0.0000000,0.0000000); //object(tall_fence) (3)
    CreateDynamicObject(974,811.7999900,-1184.6999500,24.0000000,0.0000000,0.0000000,357.7500000); //object(tall_fence) (4)
    CreateDynamicObject(3475,816.2000100,-1185.0999800,18.4000000,0.0000000,0.0000000,268.0000000); //object(vgsn_fncelec_pst) (1)
    CreateDynamicObject(3475,812.0999800,-1184.5000000,18.4000000,0.0000000,0.0000000,87.9950000); //object(vgsn_fncelec_pst) (2)
    CreateDynamicObject(974,911.7000100,-1198.8000500,23.2000000,0.0000000,0.0000000,0.0000000); //object(tall_fence) (5)
    CreateDynamicObject(974,818.4000200,-1185.0000000,24.0000000,0.0000000,0.0000000,356.9980000); //object(tall_fence) (6)
    CreateDynamicObject(3475,846.0999800,-1192.9000200,18.4000000,0.0000000,0.0000000,87.9950000); //object(vgsn_fncelec_pst) (3)
    CreateDynamicObject(3475,851.7999900,-1193.5999800,18.4000000,0.0000000,0.0000000,267.9900000); //object(vgsn_fncelec_pst) (4)
    CreateDynamicObject(3475,887.0996100,-1192.5996100,18.4000000,0.0000000,0.0000000,267.9840000); //object(vgsn_fncelec_pst) (5)
    CreateDynamicObject(3475,881.4000200,-1191.8000500,18.4000000,0.0000000,0.0000000,85.9840000); //object(vgsn_fncelec_pst) (6)
    portaoadmin = CreateDynamicObject(980,1535.0999756,-1451.4000244,15.1999998,0.0000000,0.0000000,0.0000000); //object(airportgate) (2)
   // PortaoPRFCarros = CreateDynamicObject(971,917.4000200,-1198.8000500,19.6000000,0.0000000,0.0000000,0.0000000); //fechadooo Yiakin FEZ!! comentei as linhas
//Policia Militar
    PDDOORa = CreateDynamicObject( 985 , 247.005905 , 72.448440 , 1003.640625 , 0.000000 , 0.000000 , 1260.000000 );
    PDDOORb = CreateDynamicObject( 985 , 250.774871 , 60.822799 , 1003.640625 , 0.000000 , 0.000000 , 5130.000000 );
    PDDOORc = CreateDynamicObject( 986 , 248.142105 , 78.125961 , 1003.640625 , 0.000000 , 0.000000 , 12690.000000 );
    PDGATE = CreateDynamicObject(988,1549.5300292969, -1625.1999511719, 13.420000076294,0.0,0.0,-91.100);
    PDGATE2 = CreateDynamicObject(988,1549.5300292969, -1630.6999511719, 13.420000076294,0.0,0.0,-91.100);
    PINT = CreateDynamicObject(980, 1409.10132, 420.92920, 21.58000,   0.00000, 0.00000, 336.00000);
    gt3gate = CreateDynamicObject(971, 283.095062, -1542.899170, 25.510294, 0.0000, 0.0000, 326.2500);
    gt3gate3 = CreateDynamicObject(971, 321.832672, -1488.615112, 25.527353, 0.0000, 0.0000, 323.6717);
    //PDGARAGE = CreateDynamicObject(971, 1588.555786, -1637.811157, 15.911808, 0.0000, 0.0000, 0.0000);
    PDGARAGE = CreateDynamicObject(980,1588.195,-1637.969,15.193,0.0,0.0,0.0);
//G.T.3
    gatepf2 = CreateDynamicObject(971, 2334.757568, 2443.675537, 8.250650, 0.0000, 0.0000, 236.2500);
    gatepf3 = CreateDynamicObject(971, 2293.928467, 2499.322021, 5.825822, 0.0000, 0.0000, 90.0000);
//    portaotriads = CreateDynamicObject(980,-379.4000, -1409.4000, 27.5000,0.0000,0.0000,0.0000);
//Polícia Rodoviária Federal
    PortaoPf = CreateDynamicObject(987,923.567382,-1227.334716,15.976562,0.000000,0.000000,90.000000);
//Drifters
    PortaoDrifters = CreateDynamicObject(980,836.2000100,-1899.0799600,14.6000000,0.0000000,0.0000000,0.0000000); //object(airportgate) (1)
//Exército
    PDEx = CreateDynamicObject(980, -1531.3978271484, 482.25979614258, 8.9530792236328, 0, 0, 359.99975585938);
// PORTAO GOVERNO
    PortaoGov = CreateDynamicObject(980, 1539.2235107422, -1838.2176513672, 15.320266723633, 0, 0, 91.309509277344);
    PortaoPre = CreateDynamicObject(2990, 369.15893554688, 162.35037231445, 1028.6030273438, 0, 0, 270.67565917969);
// PORTOES REPÓRTER
    PortaoReporter = CreateDynamicObject(971, 777.80017089844, -1330.2664794922, 14.200000762939, 0, 0, 0);
    PortaoReporterr = CreateDynamicObject(971, 777.97308349609, -1384.7303466797, 14.299999237061, 0, 0, 0);
// Portao Rally
    PortaoRally = CreateDynamicObject(971, -2368.4670410156, -2192.6381835938, 36.037666320801, 0, 0, 292.51049804688);
// Porta X1 Monte Chiliad
    //PortaoX1 = CreateDynamicObject(7891, -2321.5114746094, -1619.4454345703, 484.98388671875, 90, 0, 274.64562988281);// yiakin FEZ!! comentei a linha
// Portao Taxistas
    PortaoTaxi = CreateDynamicObject(980,958.840,-1415.794,15.151,0.0,0.0,0.0);//22 objetos de portão
//Portao Policia Civil
 //   pfdoor = CreateDynamicObject(980,-2433.97338867,496.39559937,31.70938301,0.00000000,0.00000000,24.00000000); //object(airportgate) (1)
   // pfdoor2 = CreateDynamicObject(971,-2424.72973633,500.50247192,30.89804077,0.00000000,0.00000000,24.00000000); //object(subwaygate) (1)
// Portao Fuzion
    PortaoFD = CreateDynamicObject(980,-75.8000000,-353.2999900,3.2000000,0.0000000,0.0000000,90.0000000);
//Portal Jn
    PortaoJn = CreateDynamicObject(971,708.7999900,-1416.0000000,16.1000000,0.0,0.0,0.0);//22 objetos de portão
    PortaoJn3 = CreateDynamicObject(971,767.5999800,-1415.9000200,16.1000000,0.0,0.0,0.0);//22 objetos de portão
    PortaoJn4 = CreateDynamicObject(7657,724.7999900,-1595.3000500,1.5000000,0.0,0.0,0.0);//22 objetos de portão
// Portao Yiakin
    CreateDynamicObject(5066,1385.7793000,-1643.3994100,13.9700000,0.0000000,0.0000000,0.0000000); //object(mondoshave_las) (2)
    PYiakin[ 0 ] = CreateDynamicObject(976,1385.7900400,-1646.5699500,12.7000000,0.0000000,0.0000000,270.0000000); //object(phils_compnd_gate) (6)
    PYiakin[ 1 ] = CreateDynamicObject(976,1366.5999800,-1610.3000500,12.7000000,0.0000000,0.0000000,347.8000000); //object(phils_compnd_gate) (7)
    PYiakin[ 2 ] = CreateDynamicObject(971,1368.5996100,-1699.0000000,11.6000000,0.0000000,0.0000000,297.9880000); //object(subwaygate) (4)
//Portao PCC
    PortaoPcc = CreateDynamicObject(971,1338.0000000,-876.3994100,42.0000000,0.0000000,0.0000000,0.0000000); //object(subwaygate) (9)
//Portao PF
    PortaoPF1 = CreateDynamicObject(988,927.2998000,-1717.8000500,13.6000000,359.7970000,0.0000000,270.0000000); //object(ws_apgate) (1)
    PortaoPF2 = CreateDynamicObject(988,927.2998000,-1723.3000500,13.6000000,359.7970000,0.0000000,270.0000000); //object(ws_apgate) (2)
    PortaoPF4 = CreateDynamicObject(2930,217.7000000,124.3000000,1009.0399800,0.0000000,0.0000000,0.0000000); //object(chinatgate) (3)
    PortaoPF5 = CreateDynamicObject(2930,227.3994100,126.7998000,1004.8499800,0.0000000,0.0000000,0.2420000); //object(chinatgate) (6)
// Portao Triads
    PortaoTriads1 = CreateDynamicObject(971,2720.5300300,-2503.8000500,16.1000000,0.0000000,0.0000000,90.0000000); //object(subwaygate) (2)
    PortaoTriads2 = CreateDynamicObject(971,2720.5293000,-2405.6001000,16.0400000,0.0000000,0.0000000,270.0000000); //object(columbiangate) (3)
// Portao BOPE
    PortaoBope = CreateDynamicObject(988,939.4500100,-1013.0999800,32.6000000,0.0000000,0.0000000,180.0000000); //object(ws_apgate) (4)
//HQ Mafia Japonesa
    pyakuza1 = CreateDynamicObject(980,2516.7102, 1822.7935, 12.5000,0.0,0.0,270.0000000);
    CreateDynamicObject(987,2627.3999000,1727.1999500,10.0000000,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (1)
    CreateDynamicObject(987,2616.0000000,1726.6999500,9.8000000,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (2)
    CreateDynamicObject(987,2604.1999500,1726.6999500,9.8000000,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (3)
    CreateDynamicObject(987,2592.1001000,1726.5999800,9.8000000,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (4)
    CreateDynamicObject(987,2587.6001000,1726.4000200,10.0000000,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (5)
    CreateDynamicObject(987,2587.8999000,1735.1999500,10.1000000,0.0000000,0.0000000,270.0000000); //object(elecfence_bar) (6)
    CreateDynamicObject(987,2575.8000500,1726.1999500,10.0000000,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (7)
    CreateDynamicObject(987,2564.6999500,1726.0999800,10.0000000,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (8)
    CreateDynamicObject(987,2554.6001000,1726.4000200,10.0000000,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (9)
    CreateDynamicObject(987,2542.6001000,1726.4000200,10.0000000,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (10)
    CreateDynamicObject(987,2535.3000500,1726.5000000,9.8000000,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (11)
    CreateDynamicObject(987,2535.1001000,1738.0000000,9.8000000,0.0000000,0.0000000,270.0000000); //object(elecfence_bar) (12)
    CreateDynamicObject(987,2535.1999500,1749.4000200,9.8000000,0.0000000,0.0000000,270.0000000); //object(elecfence_bar) (13)
    CreateDynamicObject(987,2535.1001000,1761.0000000,9.8000000,0.0000000,0.0000000,270.0000000); //object(elecfence_bar) (14)
    CreateDynamicObject(987,2535.0000000,1772.6999500,9.8000000,0.0000000,0.0000000,270.0000000); //object(elecfence_bar) (15)
    CreateDynamicObject(987,2535.1001000,1784.0999800,9.8000000,0.0000000,0.0000000,270.0000000); //object(elecfence_bar) (16)
    CreateDynamicObject(987,2535.3999000,1794.6999500,9.8000000,0.0000000,0.0000000,270.0000000); //object(elecfence_bar) (17)
    CreateDynamicObject(987,2535.6001000,1805.8000500,9.8000000,0.0000000,0.0000000,270.0000000); //object(elecfence_bar) (18)
    CreateDynamicObject(987,2535.6001000,1805.9000200,9.8000000,0.0000000,0.0000000,182.0000000); //object(elecfence_bar) (19)
    CreateDynamicObject(987,2527.8999000,1805.8000500,10.0000000,0.0000000,0.0000000,182.0000000); //object(elecfence_bar) (20)
    CreateDynamicObject(987,2516.6001000,1817.0999800,9.8000000,0.0000000,0.0000000,268.0000000); //object(elecfence_bar) (22)

    CreateDynamicObject(987,2516.6999500,1828.8000500,9.8000000,0.0000000,0.0000000,4.0000000); //object(elecfence_bar) (24)
    CreateDynamicObject(987,2527.8999000,1841.5000000,10.0000000,0.0000000,0.0000000,91.9990000); //object(elecfence_bar) (25)
    CreateDynamicObject(987,2528.3994100,1829.5996100,9.8000000,0.0000000,0.0000000,91.9940000); //object(elecfence_bar) (26)
    CreateDynamicObject(987,2527.3000500,1853.3000500,9.8000000,0.0000000,0.0000000,91.9940000); //object(elecfence_bar) (27)
    CreateDynamicObject(987,2526.8999000,1864.4000200,9.8000000,0.0000000,0.0000000,91.9940000); //object(elecfence_bar) (28)
    CreateDynamicObject(987,2526.6001000,1876.0000000,9.8000000,0.0000000,0.0000000,1.9940000); //object(elecfence_bar) (29)
    CreateDynamicObject(9241,2578.6001000,1765.0000000,11.9000000,0.0000000,0.0000000,270.0000000); //object(copbits_sfn) (1)
//HQ Russa
    acn = CreateDynamicObject(980, 1645.19995, 1669.30005, 12.60000,   0.00000, 0.25000, 269.00000);
    CreateDynamicObject(8210, 1590.19995, 1675.69995, 12.90000,   0.00000, 0.00000, 272.00000);
    CreateDynamicObject(8210, 1618.40002, 1648.09998, 12.50000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(987, 1646.09998, 1647.80005, 9.80000,   0.00000, 0.00000, 88.50000);
    CreateDynamicObject(3749, 1646.40002, 1669.30005, 15.70000,   0.00000, 0.00000, 269.50000);
    CreateDynamicObject(987, 1646.59998, 1690.69995, 9.80000,   0.00000, 0.00000, 269.00000);
    CreateDynamicObject(987, 1646.69995, 1702.69995, 9.80000,   0.00000, 0.00000, 268.99500);
    //CreateDynamicObject(980, 1645.19995, 1669.30005, 12.60000,   0.00000, 0.25000, 269.00000);
    CreateDynamicObject(3511, 1649.00000, 1676.30005, 9.80000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3511, 1676.09998, 1659.69995, 9.80000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1597, 1656.90002, 1660.40002, 12.50000,   0.00000, 0.00000, 268.00000);
    CreateDynamicObject(1597, 1657.30005, 1676.30005, 12.50000,   0.00000, 0.00000, 267.99500);
    CreateDynamicObject(1597, 1668.19995, 1660.09998, 12.50000,   0.00000, 0.00000, 267.99500);
    CreateDynamicObject(1597, 1669.30005, 1676.09998, 12.50000,   0.00000, 0.00000, 267.99500);
    CreateDynamicObject(1597, 1669.29980, 1676.09961, 12.50000,   0.00000, 0.00000, 267.99500);
    CreateDynamicObject(634, 1665.40002, 1676.00000, 9.90000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(634, 1664.19922, 1659.79980, 9.80000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(680, 1651.80005, 1675.80005, 9.80000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(680, 1650.90002, 1660.40002, 9.80000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3605, 1606.19995, 1678.69995, 15.50000,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(3437, 1662.50000, 1659.40002, 15.70000,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(3437, 1663.40002, 1676.19995, 15.70000,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(3437, 1651.09998, 1660.40002, 15.70000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3437, 1651.80005, 1675.59998, 16.10000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3437, 1674.40002, 1659.80005, 15.70000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3437, 1675.40002, 1675.69995, 15.70000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3511, 1648.59961, 1660.50000, 9.80000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3511, 1678.40002, 1676.09998, 9.80000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3578, 1643.30005, 1662.90002, 10.60000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3578, 1643.30005, 1675.59998, 10.60000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(10245, 1600.30005, 1658.19995, 13.40000,   0.00000, 0.00000, 136.00000);
    CreateDynamicObject(1703, 1632.30005, 1701.69995, 9.80000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1703, 1635.19995, 1701.80005, 9.80000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2236, 1634.19995, 1698.19995, 9.80000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2236, 1634.19995, 1697.59998, 9.80000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1703, 1629.90002, 1697.90002, 9.80000,   0.00000, 0.00000, 92.00000);
    CreateDynamicObject(1703, 1630.00000, 1694.90002, 9.80000,   0.00000, 0.00000, 92.00000);
    CreateDynamicObject(1703, 1634.09998, 1694.30005, 9.80000,   0.00000, 0.00000, 182.00000);
    CreateDynamicObject(1703, 1637.00000, 1694.50000, 9.80000,   0.00000, 0.00000, 182.00000);
    CreateDynamicObject(1664, 1634.59998, 1698.09998, 10.50000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1664, 1634.80005, 1698.09998, 10.50000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1664, 1635.00000, 1697.90002, 10.50000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1665, 1634.19995, 1698.80005, 10.30000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1665, 1634.50000, 1698.90002, 10.30000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1668, 1635.09998, 1698.90002, 10.50000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1512, 1635.00000, 1698.30005, 10.50000,   0.00000, 0.00000, 0.00000);

    CreateDynamicObject(17324, 1909.405396, -1086.097656, 23.266682, 0.0000, 0.0000, 90.0000);//Ballas
    CreateDynamicObject(974, 1921.312988, -1083.677612, 26.157940, 0.0000, 0.0000, 90.0000);//Ballas
    CreateDynamicObject(993, 1921.616089, -1086.758789, 27.863852, 0.0000, 0.0000, 90.0000);//Ballas
//===========================[ HQ Exército  ] ================================================
    CreateDynamicObject(2780,835.5999756,-2067.5000000,11.0000000,0.0000000,0.0000000,0.0000000); //object(cj_smoke_mach) (2)
    CreateDynamicObject(3934,-1266.6999512,494.5000000,17.2999992,0.0000000,0.0000000,0.0000000); //object(helipad01) (1)
    CreateDynamicObject(3934,-1289.0999756,494.2000122,17.2999992,0.0000000,0.0000000,0.0000000); //object(helipad01) (2)
    CreateDynamicObject(3934,-1437.0000000,494.2999878,17.2999992,0.0000000,0.0000000,0.0000000); //object(helipad01) (3)
    CreateDynamicObject(3934,-1275.5999756,475.3999939,6.1999998,0.0000000,0.0000000,89.2419434); //object(helipad01) (5)
    CreateDynamicObject(10244,-1448.5999756,421.7999878,2.5999999,0.0000000,0.0000000,179.0000000); //object(vicjump_sfe) (1)
    CreateDynamicObject(3114,-1445.4000244,420.8999939,-0.5000000,0.0000000,0.0000000,0.0000000); //object(carrier_lift2_sfse) (1)
    CreateDynamicObject(3279,-1539.0000000,478.2000122,6.1999998,0.0000000,0.0000000,0.0000000); //object(a51_spottower) (1)
    CreateDynamicObject(16782,-1338.0999756,493.7999878,34.9000015,0.0000000,0.0000000,179.9945068); //object(a51_radar_scan) (9)
    CreateDynamicObject(3877,-1256.0000000,501.3999939,16.7999992,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (2)
    CreateDynamicObject(3877,-1256.4000244,513.9000244,16.8999996,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (5)
    CreateDynamicObject(3397,-1338.6999512,493.6000061,32.2000008,0.0000000,0.0000000,0.0000000); //object(a51_sdsk_1_) (1)
    CreateDynamicObject(2921,-1525.5999756,482.1000061,9.5000000,20.7500000,0.0000000,0.0000000); //object(kmb_cam) (1)
    CreateDynamicObject(970,-1523.8000488,491.6000061,10.3000002,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (1)
    CreateDynamicObject(970,-1518.5000000,489.5000000,10.1999998,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (3)
    CreateDynamicObject(970,-1518.5000000,485.8999939,10.1999998,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (4)
    CreateDynamicObject(970,-1518.5000000,483.8999939,10.1999998,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (5)
    CreateDynamicObject(970,-1525.8000488,489.6000061,10.3999996,0.0000000,0.0000000,270.2500000); //object(fencesmallb) (6)
    CreateDynamicObject(970,-1525.8000488,485.5000000,10.3999996,0.0000000,0.0000000,270.2471924); //object(fencesmallb) (7)
    CreateDynamicObject(970,-1525.8000488,484.0000000,10.3999996,0.0000000,0.0000000,270.2471924); //object(fencesmallb) (8)
    CreateDynamicObject(970,-1520.5000000,491.6000061,10.3000002,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (9)
    CreateDynamicObject(10244,-1369.0000000,493.2999878,25.6000004,0.0000000,0.0000000,359.7500000); //object(vicjump_sfe) (2)
    CreateDynamicObject(3268,-1239.1999512,461.0000000,6.1999998,0.0000000,0.0000000,359.5000000); //object(mil_hangar1_) (2)
    CreateDynamicObject(976, -1318.929932, 485.502075, 2.495463, 0.0000, 0.0000, 0.0000);//Exército
    CreateDynamicObject(975, -1310.243286, 483.695221, 1.255584, 0.0000, 90.2408, 90.0000);//Exército
    CreateDynamicObject(976, -1456.115601, 485.440247, 2.572548, 0.0000, 0.0000, 0.0000);//Exército
    CreateDynamicObject(975, -1456.180420, 483.701660, 1.334991, 0.0000, 90.2408, 90.0000);//Exército
    CreateDynamicObject(975, -1635.722046, 258.053223, 1.358051, 0.0000, 90.2408, 90.0000);//Exército
    CreateDynamicObject(975, -1631.299805, 256.540588, 4.100387, 0.0000, 0.0000, 0.0000);//Exército
    CreateDynamicObject(975, -1437.401978, 288.470612, 3.908910, 0.0000, 1.7189, 180.0000);//Exército
    CreateDynamicObject(969, -1433.067993, 291.634735, -2.983646, 0.0000, 269.7592, 91.7962);//Exército
    CreateDynamicObject(971, -1421.895752, 493.653046, 5.583976, 0.0000, 0.0000, 90.0000);//Exército
    CreateDynamicObject(971, -1421.889771, 502.442719, 5.583976, 0.0000, 0.0000, 90.0000);//Exército
    CreateDynamicObject(987, -1494.882935, 481.541107, 6.155916, 0.0000, 0.0000, 180.0000);//Exército
    CreateDynamicObject(987, -1482.924683, 481.518555, 6.187500, 0.0000, 0.0000, 180.0000);//Exército
    CreateDynamicObject(987, -1470.973511, 481.511017, 6.187500, 0.0000, 0.0000, 180.0000);//Exército
    CreateDynamicObject(987, -1459.033325, 481.521851, 6.187500, 0.0000, 0.0000, 180.0000);//Exército
    CreateDynamicObject(987, -1447.090210, 481.533997, 6.171634, 0.0000, 0.0000, 180.0000);//Exército
    CreateDynamicObject(8209, -1657.5897216797, 309.62448120117, 6.6885266304016, 0, 0, 9.9249267578125);//Exército
    CreateDynamicObject(5822, -1311.8383789063, 484.17300415039, 12.087057113647, 0, 0, 92.85986328125);//Exército  Escada//151 objetos

    CreateDynamicObject(1215, 1546.012329, -1678.610352, 13.106312, 0.0000, 0.0000, 0.0000);//Luzes DP
    CreateDynamicObject(1215, 1546.057739, -1672.688843, 13.100897, 0.0000, 0.0000, 0.0000);//Luzes DP
    CreateDynamicObject(1216, 1535.088379, -1637.508545, 13.238877, 0.0000, 0.0000, 78.7500);//Orelhao DP//3 objetos
// Caixas Eletronicos
    CreateDynamicObject(2942, 1928.771484, -1785.187012, 13.139766, 0.0000, 0.0000, 90.0000);
    CreateDynamicObject(2942, 2233.052490, -1162.624023, 25.483516, 0.0000, 0.0000, 270.0000);
    CreateDynamicObject(2942, 1551.242798, -1669.691528, 13.154342, 0.0000, 0.0000, 270.0000);
    CreateDynamicObject(2942, 1467.3470, -1783.4492, 13.1987, 0.0000, 0.0000, 179.0000);// caixa ^^
//Caixas Máfias
    CreateDynamicObject(1271, 1324.886841, -635.915161, 108.484901, 0.0000, 0.0000, 17.1887);
    CreateDynamicObject(1271, 1325.540649, -635.743835, 108.484901, 0.0000, 0.0000, 17.1887);
    CreateDynamicObject(1271, 1325.286255, -635.804565, 109.175873, 0.0000, 0.0000, 17.1887);
//OBJETOS ESPALHADOS NA CIDADE
    CreateDynamicObject(4100, 1942.1629638672, -1772.4167480469, 14.342294692993, 0, 0, 49.624786376953);//grades posto sul
    CreateDynamicObject(4100, 1941.0621337891, -1772.3591308594, 14.342294692993, 0, 0, 49.624694824219);//grades posto sul
// Bate-Bate
    CreateDynamicObject(7921, 2737.6628417969, -1759.4056396484, 44.521724700928, 0, 0, 0);
    CreateDynamicObject(7921, 2737.7473144531, -1760.2904052734, 44.549240112305, 0, 0, 179.36633300781);
    CreateDynamicObject(7921, 2735.8483886719, -1759.4578857422, 44.495727539063, 0, 0, 0);
    CreateDynamicObject(7921, 2735.9426269531, -1760.1951904297, 44.500312805176, 0, 0, 178.6494140625);//4 objetos
// TANQUES POSTO NORTE
    CreateDynamicObject(1676, 1000.5368041992, -937.51239013672, 42.908992767334, 0, 0, 9.9249267578125);
    CreateDynamicObject(1676, 1007.5074462891, -936.49285888672, 42.908992767334, 0, 0, 7.939208984375);//2 objetos
// PORTOES GOVERNO
    CreateDynamicObject(987, 1490.6391601563, -1824.5861816406, 12.546875, 0, 0, 268.69067382813);
    CreateDynamicObject(987, 1490.3248291016, -1836.5666503906, 12.546875, 0, 0, 268.68713378906);
    CreateDynamicObject(986, 1539.1845703125, -1828.4642333984, 12.546875, 0, 0, 268.69067382813);
    CreateDynamicObject(971, 1499.8586425781, -1860.7644042969, 16.116792678833, 0, 0, 0);//4 objetos
// ORELHOES
    CreateDynamicObject(1216, 1124.8205566406, -1472.7642822266, 15.472403526306, 0, 0, 178.6494140625);
    CreateDynamicObject(1216, 1804.5754394531, -1167.1788330078, 23.520128250122, 0, 0, 344.1201171875);
    CreateDynamicObject(1216, 1363.7294921875, -1749.3428955078, 13.222763061523, 0, 0, 264.720703125);
    CreateDynamicObject(1216, 1363.7303466797, -1752.9660644531, 13.214802742004, 0, 0, 264.71557617188);
// Passarela e Bar
    CreateDynamicObject(16151, 1551.0268554688, -1715.4868164063, 12.546875, 0, 0, 89.324493408203);
// Cela Exército
    CreateDynamicObject(2930, -1297.6999511719, 491.39999389648, 12.89999961853, 0, 0, 0);
//Pista de Rally
    CreateDynamicObject(8251, -2393.5866699219, -2206.2165527344, 36.216876983643, 0, 0, 30.6298828125);
    CreateDynamicObject(987, -2376.7141113281, -2210.048828125, 32.44575881958, 0, 0, 80.404846191406);
    CreateDynamicObject(987, -2377.7255859375, -2192.9619140625, 32.2890625, 0, 0, 162.41345214844);
    CreateDynamicObject(987, -2376.8635253906, -2193.6000976563, 32.563995361328, 0, 0, 25.095886230469);
    CreateDynamicObject(987, -2363.47265625, -2193.3618164063, 32.327827453613, 0, 0, 204.55285644531);
//Pista de Skate
    CreateDynamicObject(11292, 1920.9520263672, -1414.4202880859, 14.034344673157, 0, 0, 178.6494140625);//Telhadinho Drogas
    CreateDynamicObject(13641, 1823.1400146484, -1414.4495849609, 24.1171875, 0, 0, 0);//Rosquinha no Alto
//PARQUE GLEEN
    CreateDynamicObject(1637, 1991.6693115234, -1184.0124511719, 19.441257476807, 0, 0, 342.13513183594);
    CreateDynamicObject(1637, 1948.6083984375, -1214.7890625, 19.431552886963, 0, 0, 162.75695800781);
//HQ REPORTER
    CreateDynamicObject(7657, 787.4609375, -1340.359375, 18.264627456665, 0, 0, 89.324493408203);
    CreateDynamicObject(7657, 787.25671386719, -1360.3143310547, 18.263717651367, 0, 0, 89.324340820313);
    CreateDynamicObject(7657, 787.26574707031, -1375.0749511719, 18.329557418823, 0, 0, 89.324340820313);
    CreateDynamicObject(7657, 777.21832275391, -1385.0466308594, 18.436908721924, 0, 0, 359.99975585938);
    CreateDynamicObject(7657, 760.88116455078, -1384.9207763672, 18.439277648926, 0, 0, 359.99450683594);
    CreateDynamicObject(7657, 777.40789794922, -1330.0454101563, 18.26703453064, 0, 0, 178.64379882813);
    CreateDynamicObject(7657, 757.46813964844, -1329.6379394531, 18.265003204346, 0, 0, 178.64318847656);
    CreateDynamicObject(7657, 740.240234375, -1329.53125, 18.268165588379, 0, 0, 180.62817382813);
//HQ TAXISTAS
    CreateDynamicObject(980,1041.181,-1460.063,15.419,0.0,0.0,-92.742);
    CreateDynamicObject(987,953.222,-1473.284,12.536,0.0,0.0,-0.859);
    CreateDynamicObject(983,949.976,-1473.470,16.832,0.0,0.0,-90.241);
    CreateDynamicObject(983,950.004,-1473.339,18.154,0.0,0.0,-90.241);
    CreateDynamicObject(987,952.874,-1415.724,12.635,0.0,0.0,-89.381);
    CreateDynamicObject(983,952.715,-1430.705,16.519,0.0,0.0,-2.578);
    CreateDynamicObject(983,952.724,-1430.727,17.820,0.0,0.0,-1.719);
    CreateDynamicObject(978,948.092,-1427.209,16.919,0.0,0.0,0.0);
//Cofre(ROUBO) Prefeitura
    CreateDynamicObject(1829,354.28314208984,171.98362731934,1007.8456420898,0.0,0.0,91.0);
    CreateDynamicObject(1550,353.82382202148,172.66203308105,1007.7756347656,0.0,0.0,315.0);
//Cofre(ROUBO) Lotérica e Banco
    CreateDynamicObject(1829, 820.33020019531, 8.3643178939819, 1003.6611938477, 0, 0, 91.309509277344);
    CreateDynamicObject(1829, 2305.9875488281, -6.1657295227051, 26.206716537476, 0, 0, 91.309387207031);
    CreateDynamicObject(1829,382.17828369,-188.69221497,1000.10467529,0.00000000,0.00000000,196.00000000); //cofre posto
//Roubo Loja de Armas 1 e 2(Cofre e Armas)
    CreateDynamicObject(2035, 2169.0065917969, 1589.9106445313, 998.99560546875, 0, 0, 320.30029296875);
    CreateDynamicObject(2036, 2169.0502929688, 1589.8255615234, 999.00512695313, 0, 0, 0);
    CreateDynamicObject(1829, 2168.7346191406, 1589.8250732422, 999.43542480469, 0, 0, 93.294494628906);
    CreateDynamicObject(1550, 2168.5485839844, 1590.4002685547, 999.36407470703, 0, 0, 7.9400024414063);
    CreateDynamicObject(1829, 451.28546142578, -79.360252380371, 999.11920166016, 0, 0, 0.000244140625);
    CreateDynamicObject(1550, 451.82040405273, -79.421600341797, 998.94805908203, 0, 0, 71.459594726563);
    CreateDynamicObject(2035, 451.41320800781, -79.704383850098, 998.5791015625, 0, 0, 0);
    CreateDynamicObject(2036, 451.53814697266, -79.866546630859, 998.58862304688, 0, 0, 318.31530761719);
    CreateDynamicObject(2057, 451.29110717773, -79.280700683594, 999.31091308594, 0, 0, 0);
//caixa e orelhao spawn civil
    CreateDynamicObject(1216, 2233.3046875, -1165.7521972656, 25.589185714722, 0, 0, 266.7041015625);
    CreateDynamicObject(1216, 2219.9748535156, -1155.2331542969, 1025.4888916016, 0, 0, 179.36633300781);
    CreateDynamicObject(2942, 2224.169921875, -1141.1091308594, 1025.396875, 0, 0, 0);
// Arena de X1 Monte Chiliad
    CreateDynamicObject(972, -2317.9733886719, -1607.8778076172, 481.92987060547, 0, 0, 5.95263671875);
    CreateDynamicObject(972, -2333.5573730469, -1582.4885253906, 481.92987060547, 0, 0, 97.262329101563);
    CreateDynamicObject(972, -2342.1125488281, -1607.5842285156, 481.92987060547, 0, 0, 186.58666992188);
    CreateDynamicObject(972, -2322.4345703125, -1589.484375, 481.92987060547, 0, 0, 29.772521972656);//300 objetos
    CreateDynamicObject(972, -2315.3129882813, -1634.2191162109, 481.92987060547, 0, 0, 5.95263671875);
    CreateDynamicObject(972, -2339.2004394531, -1632.3326416016, 481.92987060547, 0, 0, 186.58703613281);
    CreateDynamicObject(8650, -2316.6611328125, -1618.7884521484, 474.04272460938, 90, 90, 7.93994140625);
    CreateDynamicObject(8650, -2328.5708007813, -1620.1850585938, 488.14788818359, 180, 180, 97.262329101563);
    CreateDynamicObject(8650, -2328.5256347656, -1620.2603759766, 486.49984741211, 179.99450683594, 179.99450683594, 97.261962890625);
    CreateDynamicObject(972, -2315.8947753906, -1624.5148925781, 481.92987060547, 0, 0, 5.9490966796875);
    CreateDynamicObject(8650, -2314.5227050781, -1618.5999755859, 474.04272460938, 90, 90, 7.9376220703125);
    CreateDynamicObject(8650, -2318.1958007813, -1618.8737792969, 474.04272460938, 90, 90, 5.9549560546875);
    CreateDynamicObject(972, -2344.6188964844, -1584.1512451172, 481.92987060547, 0, 0, 186.58630371094);
    CreateDynamicObject(972, -2330.990234375, -1642.7630615234, 481.92987060547, 0, 0, 275.91064453125);
    CreateDynamicObject(972, -2325.4072265625, -1642.2864990234, 481.92987060547, 0, 0, 275.90515136719);
    CreateDynamicObject(7657, -2333.6726074219, -1620.9918212891, 484.42767333984, 0, 0, 7.93994140625);
//GRADES CELAS PM,PFII
    CreateDynamicObject(988, 266.3486328125, 82.4482421875, 1000.0884399414, 0, 0, 89.324340820313);
    CreateDynamicObject(988, 266.34918212891, 86.14559173584, 1000.0390625, 0, 0, 89.324340820313);
    CreateDynamicObject(988, 320.89068603516, 315.35446166992, 998.1484375, 0, 0, 89.324493408203);
    CreateDynamicObject(988, 320.89068603516, 312.80841064453, 998.29431152344, 0, 0, 89.324340820313);
//CAIXAS ELETRONICOS PC,ROTA,PFII,EXE
    CreateDynamicObject(2942, 228.90814208984, 153.8551940918, 1002.6234375, 0, 0, 87.339508056641);
    CreateDynamicObject(2942, 320.70361328125, 305.59274291992, 998.7484375, 0, 0, 91.309509277344);
    CreateDynamicObject(2942, -1347.6359863281, 500.72186279297, 10.7953125, 0, 0, 0);
//=========================[HQ Sons]===============================================
    CreateDynamicObject(987,-1524.38159180,-2766.61328125,47.53347397,0.00000000,0.00000000,237.00964355); //object(elecfence_bar) (1)
    CreateDynamicObject(987,-1517.87121582,-2756.57812500,47.53906250,0.00000000,0.00000000,237.00805664); //object(elecfence_bar) (2)
    CreateDynamicObject(987,-1520.94018555,-2744.95727539,47.53906250,0.00000000,0.00000000,284.82788086); //object(elecfence_bar) (3)
    CreateDynamicObject(987,-1530.32104492,-2737.44628906,47.53906250,0.00000000,0.00000000,321.39587402); //object(elecfence_bar) (4)
    CreateDynamicObject(987,-1539.65539551,-2729.98535156,47.53906250,0.00000000,0.00000000,321.39404297); //object(elecfence_bar) (5)
    CreateDynamicObject(987,-1549.01086426,-2722.52685547,47.53633881,0.00000000,0.00000000,321.39404297); //object(elecfence_bar) (6)
    CreateDynamicObject(987,-1558.62292480,-2715.39819336,47.53906250,0.00000000,0.00000000,323.39404297); //object(elecfence_bar) (7)
    CreateDynamicObject(987,-1570.12756348,-2712.10131836,47.53906250,0.00000000,0.00000000,344.00842285); //object(elecfence_bar) (8)
    CreateDynamicObject(987,-1582.09912109,-2712.10546875,47.53906250,0.00000000,0.00000000,0.00000000); //object(elecfence_bar) (9)
    CreateDynamicObject(987,-1588.74157715,-2722.09912109,47.53906250,0.00000000,0.00000000,56.57971191); //object(elecfence_bar) (10)
    CreateDynamicObject(987,-1595.33972168,-2732.07910156,47.53906250,0.00000000,0.00000000,56.57958984); //object(elecfence_bar) (11)
    CreateDynamicObject(987,-1590.04895020,-2742.87695312,47.53906250,0.00000000,0.00000000,116.29992676); //object(elecfence_bar) (12)
    CreateDynamicObject(987,-1580.36059570,-2749.95361328,47.53378677,0.00000000,0.00000000,143.96002197); //object(elecfence_bar) (13)
    CreateDynamicObject(14608,-1580.61108398,-2715.02539062,49.13503647,0.00000000,0.00000000,153.47497559); //object(triad_buddha01) (1)
    CreateDynamicObject(3524,-1550.35498047,-2776.93676758,49.49789047,0.00000000,0.00000000,327.22521973); //object(skullpillar01_lvs) (1)
    CreateDynamicObject(3524,-1537.77551270,-2785.63574219,49.17059708,0.00000000,0.00000000,327.22229004); //object(skullpillar01_lvs) (2)
    CreateDynamicObject(987,-1570.56823730,-2756.82226562,47.53802490,0.00000000,0.00000000,144.95935059); //object(elecfence_bar) (17)
    CreateDynamicObject(987,-1560.62402344,-2763.48828125,47.52734375,0.00000000,0.00000000,146.20910645); //object(elecfence_bar) (18)
    CreateDynamicObject(987,-1550.67810059,-2770.15112305,47.52088928,0.00000000,0.00000000,146.20605469); //object(elecfence_bar) (19)
//PORTA BURGER SHOT 2
    CreateDynamicObject(2957, 681.56121826172, -446.03887939453, -24.989976882935, 0, 90, 0);
    CreateDynamicObject(2957, 680.94635009766, -449.14892578125, -26.681901931763, 90, 0, 0);
    CreateDynamicObject(2957, 680.94635009766, -447.4892578125, -26.681901931763, 90, 0, 0);
    CreateDynamicObject(987,647.14453125,-476.23309326,15.33593750,0.00000000,0.00000000,0.00000000); //object(elecfence_bar) (1)
    CreateDynamicObject(987,648.08032227,-464.37973022,15.18750000,0.00000000,0.00000000,266.00000000); //object(elecfence_bar) (2)
    CreateDynamicObject(987,648.94219971,-452.44314575,15.33868408,0.00000000,0.00000000,265.99548340); //object(elecfence_bar) (3)
    CreateDynamicObject(987,649.25543213,-441.11883545,15.33593750,0.00000000,0.00000000,267.99548340); //object(elecfence_bar) (4)
    CreateDynamicObject(987,649.36743164,-438.12048340,15.33593750,0.00000000,0.00000000,268.00000000); //object(elecfence_bar) (5)
    CreateDynamicObject(987,661.13348389,-438.11563110,15.33593655,0.00000000,0.00000000,180.00000000); //object(elecfence_bar) (6)
    CreateDynamicObject(987,672.86029053,-438.05474854,15.33593750,0.00000000,0.00000000,179.99450684); //object(elecfence_bar) (7)
    CreateDynamicObject(987,684.47039795,-438.26669312,15.33593750,0.00000000,0.00000000,179.99450684); //object(elecfence_bar) (8)
    CreateDynamicObject(987,695.93316650,-438.16339111,15.34370422,0.00000000,0.00000000,179.99450684); //object(elecfence_bar) (9)
    CreateDynamicObject(987,707.67553711,-438.22988892,15.33593750,0.00000000,0.00000000,179.99450684); //object(elecfence_bar) (10)
    CreateDynamicObject(987,710.72045898,-438.22494507,15.33593750,0.00000000,0.00000000,179.99450684); //object(elecfence_bar) (11)
    CreateDynamicObject(987,710.47344971,-450.08477783,15.33593750,0.00000000,0.00000000,90.00000000); //object(elecfence_bar) (12)
    CreateDynamicObject(987,710.41876221,-462.21542358,15.33593750,0.00000000,0.00000000,90.00000000); //object(elecfence_bar) (13)
    CreateDynamicObject(987,710.54754639,-473.91302490,15.33593750,0.00000000,0.00000000,90.00000000); //object(elecfence_bar) (14)
    CreateDynamicObject(3524,690.82714844,-478.36477661,18.22127724,0.00000000,0.00000000,0.00000000); //object(skullpillar01_lvs) (1)
    CreateDynamicObject(6865,681.51855469,-473.25054932,21.63970757,0.00000000,0.00000000,44.00000000); //object(steerskull) (1)
//======================================== Objetos HQ PCC ==========================================================================
    CreateDynamicObject(8150,1341.9000200,-855.5999800,42.6000000,0.0000000,0.0000000,270.7640000); //object(vgsselecfence04) (1)
    CreateDynamicObject(8150,1303.7998000,-847.5000000,45.0000000,0.0000000,0.0000000,89.9840000); //object(vgsselecfence04) (2)
    CreateDynamicObject(987,1322.0999800,-897.2000100,38.6000000,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (4)
    CreateDynamicObject(987,1333.8000500,-897.2999900,38.6000000,0.0000000,0.0000000,90.0130000); //object(elecfence_bar) (5)
    CreateDynamicObject(987,1333.8000500,-888.2999900,38.6000000,0.0000000,0.0000000,90.0110000); //object(elecfence_bar) (6)
    CreateDynamicObject(1522,1325.8000500,-876.9400000,38.6000000,0.0000000,0.0000000,180.0000000); //object(gen_doorshop3) (1)
//======================================== Objetos HQ Triads =======================================================================
    CreateDynamicObject(4100,2720.1001000,-2394.6001000,17.0000000,0.0000000,0.0000000,229.9990000); //object(meshfence1_lan) (1)
    CreateDynamicObject(4100,2718.6001000,-2337.3300800,14.3000000,0.0000000,0.0000000,229.9990000); //object(meshfence1_lan) (2)
    CreateDynamicObject(4100,2720.1001000,-2416.6999500,17.0000000,0.0000000,0.0000000,229.9990000); //object(meshfence1_lan) (3)
    CreateDynamicObject(4100,2720.3999000,-2493.1999500,17.0000000,0.0000000,0.0000000,229.9990000); //object(meshfence1_lan) (5)
    CreateDynamicObject(4100,2720.3994100,-2515.3999000,17.0000000,0.0000000,0.0000000,229.9990000); //object(meshfence1_lan) (6)
    CreateDynamicObject(4100,2720.1001000,-2380.8701200,19.8000000,0.0000000,0.0000000,229.9990000); //object(meshfence1_lan) (9)
    CreateDynamicObject(4100,2718.6001000,-2351.0500500,14.3000000,0.0000000,0.0000000,229.9990000); //object(meshfence1_lan) (11)
    CreateDynamicObject(4100,2718.5996100,-2337.3300800,17.1700000,0.0000000,0.0000000,229.9990000); //object(meshfence1_lan) (12)
    CreateDynamicObject(4100,2718.5996100,-2351.0500500,20.0000000,0.0000000,0.0000000,229.9990000); //object(meshfence1_lan) (13)
    CreateDynamicObject(4100,2718.5996100,-2351.0498000,17.2000000,0.0000000,0.0000000,229.9990000); //object(meshfence1_lan) (14)
    CreateDynamicObject(4100,2718.5996100,-2337.3300800,20.0000000,0.0000000,0.0000000,229.9990000); //object(meshfence1_lan) (15)
    CreateDynamicObject(4100,2727.1989700,-2545.5900900,19.5000000,0.0000000,0.0000000,229.9990000); //object(meshfence1_lan) (16)
    CreateDynamicObject(4100,2727.1992200,-2559.3193400,13.9000000,0.0000000,0.0000000,229.9990000); //object(meshfence1_lan) (17)
    CreateDynamicObject(4100,2727.1982400,-2559.3193400,16.7200000,0.0000000,0.0000000,229.9990000); //object(meshfence1_lan) (18)
    CreateDynamicObject(4100,2727.1982400,-2545.5898400,16.7200000,0.0000000,0.0000000,229.9990000); //object(meshfence1_lan) (19)
    CreateDynamicObject(4100,2727.1982400,-2559.3300800,19.5000000,0.0000000,0.0000000,229.9990000); //object(meshfence1_lan) (20)
    CreateDynamicObject(3934,2792.8999000,-2533.5000000,12.7000000,0.0000000,0.0000000,180.0000000); //object(helipad01) (6)
    CreateDynamicObject(3934,2792.8994100,-2548.0000000,12.7000000,0.0000000,0.0000000,179.9950000); //object(helipad01) (5)
    CreateDynamicObject(3465,2754.0000000,-2384.0000000,13.9000000,0.0000000,0.0000000,90.0000000); //object(vegspetrolpump) (3)
    CreateDynamicObject(3287,2748.3000500,-2385.6999500,17.4000000,0.0000000,0.0000000,90.1040000); //object(cxrf_oiltank) (2)
    CreateDynamicObject(4100,2720.1001000,-2380.8701200,17.0000000,0.0000000,0.0000000,229.9990000); //object(meshfence1_lan) (1)
    CreateDynamicObject(4100,2720.3994100,-2515.3994100,19.8200000,0.0000000,0.0000000,229.9990000); //object(meshfence1_lan) (6)
    CreateDynamicObject(4100,2720.3999000,-2493.1992200,19.8200000,0.0000000,0.0000000,229.9990000); //object(meshfence1_lan) (5)
    CreateDynamicObject(4100,2720.0996100,-2394.5996100,19.8000000,0.0000000,0.0000000,229.9990000); //object(meshfence1_lan) (1)
    CreateDynamicObject(4100,2720.0996100,-2416.6992200,19.8000000,0.0000000,0.0000000,229.9990000); //object(meshfence1_lan) (3)
    CreateDynamicObject(1226,2713.3000500,-2499.6999500,16.3000000,0.0000000,0.0000000,90.0000000); //object(lamppost3) (1)
    CreateDynamicObject(1226,2717.1001000,-2401.1001000,16.3000000,0.0000000,0.0000000,90.0000000); //object(lamppost3) (2)
    CreateDynamicObject(1226,2717.0996100,-2409.6999500,16.3000000,0.0000000,0.0000000,270.0000000); //object(lamppost3) (4)
    CreateDynamicObject(1226,2765.8000500,-2436.8000500,16.5000000,0.0000000,0.0000000,0.0000000); //object(lamppost3) (5)
    CreateDynamicObject(1226,2765.5000000,-2474.6001000,16.4000000,0.0000000,0.0000000,0.0000000); //object(lamppost3) (6)
    CreateDynamicObject(1226,2752.0000000,-2438.0000000,16.5000000,0.0000000,0.0000000,180.0000000); //object(lamppost3) (8)
    CreateDynamicObject(1226,2751.8000500,-2474.3999000,16.5000000,0.0000000,0.0000000,179.9950000); //object(lamppost3) (9)
//======================================= Objetos HQ PF  =========================================================================
    CreateDynamicObject(3749, 929.50000, -1720.50000, 12.10000,   0.00000, 179.99500, 269.82999);
    CreateDynamicObject(3475, 930.50000, -1763.90002, 14.90000,   359.50000, 0.00000, 79.55000);
    CreateDynamicObject(3475, 936.39941, -1764.94922, 15.00000,   358.99500, 0.00000, 79.77200);
    CreateDynamicObject(3475, 942.19922, -1766.00000, 15.14000,   358.49500, 0.00000, 79.77200);
    CreateDynamicObject(3475, 948.09961, -1767.06934, 15.30000,   358.49500, 0.00000, 79.99700);
    CreateDynamicObject(3475, 954.00000, -1768.12988, 15.40000,   359.49500, 0.00000, 79.27200);
    CreateDynamicObject(3475, 959.85938, -1769.27930, 15.40000,   0.00000, 0.00000, 77.80000);
    CreateDynamicObject(3475, 965.70001, -1770.69995, 15.40000,   0.00000, 0.00000, 76.07800);
    CreateDynamicObject(3475, 971.50000, -1772.09961, 15.40000,   0.29700, 0.00000, 76.56400);
    CreateDynamicObject(3475, 976.39941, -1770.89941, 15.40000,   0.00000, 0.00000, 131.57800);
    CreateDynamicObject(3475, 978.50000, -1766.09961, 15.20000,   2.99900, 0.00000, 178.95599);
    CreateDynamicObject(3475, 978.59961, -1760.19922, 14.94000,   2.00000, 0.00000, 179.68700);
    CreateDynamicObject(3475, 978.59961, -1754.29980, 14.90000,   358.99500, 0.00000, 179.92900);
    CreateDynamicObject(3475, 978.59961, -1760.19922, 14.94000,   2.00000, 0.00000, 179.68700);
    CreateDynamicObject(3475, 978.59961, -1760.19922, 14.94000,   2.00000, 0.00000, 179.68700);
    CreateDynamicObject(3475, 980.50000, -1749.09961, 15.00000,   0.98900, 0.00000, 329.26599);
    CreateDynamicObject(3475, 977.19922, -1662.79980, 14.82000,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(17070, 956.09998, -1686.69995, 12.60000,   0.00000, 180.11000, 87.74800);
    CreateDynamicObject(3475, 971.19922, -1662.79980, 14.80000,   0.00000, 0.00000, 269.99500);
    CreateDynamicObject(3475, 965.20001, -1662.80005, 14.80000,   0.00000, 0.00000, 269.99500);
    CreateDynamicObject(3475, 959.20001, -1662.80005, 14.80000,   0.00000, 0.00000, 269.99500);
    CreateDynamicObject(3475, 953.19922, -1662.79980, 14.80000,   0.00000, 0.00000, 269.99500);
    CreateDynamicObject(3475, 947.20001, -1662.80005, 14.80000,   0.00000, 0.00000, 269.99500);
    CreateDynamicObject(3475, 941.20001, -1662.80005, 14.80000,   0.00000, 0.00000, 269.99500);
    CreateDynamicObject(3475, 935.19922, -1662.79980, 14.80000,   0.00000, 0.00000, 269.99500);
    CreateDynamicObject(3475, 930.00000, -1664.59961, 14.80000,   0.00000, 0.00000, 308.50201);
    CreateDynamicObject(3475, 927.79980, -1669.19922, 14.80000,   0.00000, 0.00000, 359.97299);
    CreateDynamicObject(3475, 927.79980, -1675.19922, 14.80000,   0.00000, 0.00000, 359.97299);
    CreateDynamicObject(3475, 927.79980, -1681.19922, 14.80000,   0.00000, 0.00000, 359.97299);
    CreateDynamicObject(3475, 927.79999, -1687.19995, 14.80000,   0.00000, 0.00000, 359.97299);
    CreateDynamicObject(3475, 927.79980, -1693.19922, 14.80000,   0.00000, 0.00000, 359.97299);
    CreateDynamicObject(3475, 927.79980, -1699.19922, 14.80000,   0.00000, 0.00000, 359.97299);
    CreateDynamicObject(3475, 927.79980, -1705.19922, 14.80000,   0.00000, 0.00000, 359.97299);
    CreateDynamicObject(2921, 938.39941, -1737.09961, 23.30000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2921, 938.39941, -1737.09961, 23.30000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2921, 941.20001, -1698.59998, 24.10000,   0.00000, 0.00000, 276.35599);
    CreateDynamicObject(3475, 927.79980, -1705.19922, 14.80000,   0.00000, 0.00000, 359.97299);
    CreateDynamicObject(3475, 927.79999, -1760.50000, 14.80000,   0.00000, 0.00000, 358.98901);
    CreateDynamicObject(3475, 927.84998, -1754.50000, 14.80000,   0.00000, 0.00000, 0.25100);
    CreateDynamicObject(3475, 927.81934, -1748.50000, 14.80000,   0.00000, 0.00000, 0.24700);
    CreateDynamicObject(3475, 927.77002, -1742.50000, 14.80000,   0.00000, 0.00000, 0.24700);
    CreateDynamicObject(3475, 927.73999, -1736.50000, 14.80000,   0.00000, 0.00000, 0.24700);
    CreateDynamicObject(3475, 983.20001, -1662.80005, 14.80000,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(3881, -1542.46094, -443.39844, 6.85156,   0.00000, 0.00000, 314.99500);
    CreateDynamicObject(3475, 927.79980, -1730.50000, 14.80000,   0.00000, 0.00000, 358.76999);
    CreateDynamicObject(3475, 927.79999, -1711.19995, 14.80000,   0.00000, 0.00000, 0.10000);
    CreateDynamicObject(1280, 941.70001, -1760.90002, 12.90000,   0.00000, 0.00000, 259.61301);
    CreateDynamicObject(1280, 961.29999, -1762.40002, 12.90000,   0.00000, 0.00000, 340.66299);
    CreateDynamicObject(1280, 937.89941, -1760.19922, 12.90000,   0.00000, 0.00000, 260.09601);
    CreateDynamicObject(1280, 957.90002, -1764.09998, 13.00000,   0.00000, 0.00000, 258.65701);
    CreateDynamicObject(1280, 929.40002, -1687.50000, 12.90000,   0.00000, 0.00000, 180.29700);
    CreateDynamicObject(7595, 958.79980, -1665.59961, 14.20000,   0.00000, 0.00000, 268.59399);
    CreateDynamicObject(2921, 969.70001, -1749.80005, 24.90000,   0.00000, 0.00000, 92.81200);
    CreateDynamicObject(1280, 929.39941, -1681.09961, 12.90000,   0.00000, 0.00000, 181.06599);
    CreateDynamicObject(669, 929.39941, -1684.19922, 12.50000,   0.00000, 0.00000, 32.69000);
    CreateDynamicObject(1695, 928.59998, -1729.09998, 18.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1695, 928.59998, -1727.09998, 18.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1695, 930.00000, -1729.09998, 18.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1695, 930.00000, -1727.09998, 18.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1695, 929.29980, -1728.09961, 19.10000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1695, 928.59998, -1713.50000, 18.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1695, 928.59998, -1711.40002, 18.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1695, 930.09998, -1713.50000, 18.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1695, 930.09998, -1711.40002, 18.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1695, 929.39941, -1712.39941, 19.10000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3660, 937.59998, -1764.00000, 15.00000,   0.00000, 0.00000, 169.86099);
    CreateDynamicObject(3660, 956.90002, -1767.50000, 15.00000,   0.00000, 0.00000, 169.61400);
    CreateDynamicObject(748, 973.29999, -1769.00000, 13.00000,   0.00000, 0.00000, 291.04700);
    CreateDynamicObject(1215, 973.00000, -1752.40002, 13.10000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1215, 929.39941, -1689.39941, 13.10000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1215, 965.00000, -1757.40002, 13.10000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(3934, 954.09961, -1718.89941, 22.50000,   0.00000, 0.00000, 270.22000);
    CreateDynamicObject(1215, 950.20001, -1723.00000, 22.60000,   0.00000, 0.00000, 284.01901);
    CreateDynamicObject(1215, 950.20001, -1714.59998, 22.60000,   0.00000, 0.00000, 315.83600);
    CreateDynamicObject(1215, 957.79999, -1723.00000, 22.60000,   0.00000, 0.00000, 313.86801);
    CreateDynamicObject(1215, 957.70001, -1714.59998, 22.60000,   0.00000, 0.00000, 235.31700);
    CreateDynamicObject(1215, 949.79999, -1762.90002, 13.10000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1215, 932.50000, -1740.90002, 13.10000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1215, 932.00000, -1759.50000, 13.10000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1215, 929.50000, -1679.19922, 13.10000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(3749, 929.50000, -1720.09961, 12.10000,   0.00000, 179.99500, 269.83499);
    CreateDynamicObject(3749, 929.50000, -1720.89941, 12.10000,   0.00000, 179.99500, 269.82999);
    CreateDynamicObject(1215, 929.50000, -1725.69995, 13.10000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1215, 929.50000, -1715.30005, 13.10000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1280, 979.59998, -1677.00000, 12.90000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1215, 979.59998, -1684.19995, 13.10000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1280, 979.59961, -1682.50000, 12.90000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1280, 979.59961, -1671.50000, 12.90000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1215, 979.59998, -1669.80005, 13.10000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1231, 962.39941, -1671.59961, 15.26000,   0.00000, 0.00000, 302.81100);
    CreateDynamicObject(17070, 974.50000, -1717.00000, 12.60000,   0.00000, 0.00000, 2.03800);
    CreateDynamicObject(1231, 974.39941, -1729.19922, 15.26000,   0.00000, 0.00000, 180.98300);
    CreateDynamicObject(615, 965.19922, -1670.89941, 12.00000,   0.00000, 0.00000, 244.99001);
    CreateDynamicObject(729, 930.20001, -1704.80005, 12.50000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(748, 929.70001, -1703.59998, 12.50000,   0.00000, 0.00000, 355.82001);
    CreateDynamicObject(748, 929.69922, -1703.59961, 12.50000,   0.00000, 0.00000, 355.82001);
    CreateDynamicObject(748, 930.09998, -1706.40002, 12.50000,   0.00000, 0.00000, 235.82201);
    CreateDynamicObject(726, 743.24219, -1151.47656, 20.87500,   0.00000, 0.00000, 109.00000);
    CreateDynamicObject(615, 930.59998, -1669.30005, 12.60000,   0.00000, 0.00000, 269.85001);
    CreateDynamicObject(825, 931.09998, -1669.19995, 13.00000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(8615, 954.19922, -1727.59961, 24.99000,   0.00000, 0.00000, 179.81900);
    CreateDynamicObject(996, 938.50000, -1733.59998, 27.40000,   0.00000, 0.00000, 270.11899);
    CreateDynamicObject(996, 940.00000, -1742.09998, 27.40000,   0.00000, 0.00000, 0.10800);
    CreateDynamicObject(996, 946.29999, -1727.59998, 23.10000,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(996, 946.29999, -1719.30005, 23.10000,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(996, 961.79980, -1727.59961, 23.10000,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(994, 965.20001, -1704.09998, 20.60000,   0.00000, 12.60000, 65.43400);
    CreateDynamicObject(994, 960.79999, -1691.40002, 19.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(996, 962.19922, -1710.69922, 22.90000,   0.00000, 12.60000, 65.43400);
    CreateDynamicObject(1215, 938.70001, -1741.80005, 27.30000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(994, 939.29999, -1731.80005, 26.70000,   0.00000, 0.00000, 24.54300);
    CreateDynamicObject(1215, 938.69922, -1732.29980, 27.30000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1215, 958.00000, -1732.29980, 26.80000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1215, 960.00000, -1739.40002, 26.80000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1215, 960.00000, -1732.29980, 26.80000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1215, 958.00000, -1739.39941, 26.80000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1215, 964.00000, -1732.29980, 26.80000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1215, 962.00000, -1739.39941, 26.80000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1215, 962.00000, -1732.29980, 26.80000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1215, 964.00000, -1739.39941, 26.80000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1215, 966.00000, -1732.29980, 26.80000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1215, 966.00000, -1739.39941, 26.80000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1215, 968.00000, -1732.29980, 26.80000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1215, 968.00000, -1739.39941, 26.80000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1215, 970.00000, -1732.29980, 26.80000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1215, 970.00000, -1739.39941, 26.80000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1215, 948.50000, -1742.00000, 27.30000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(996, 961.79980, -1719.29980, 23.10000,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(996, 953.70001, -1695.90002, 20.10000,   0.00000, 0.00000, 34.24200);
    CreateDynamicObject(994, 967.69922, -1698.00000, 19.30000,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1215, 967.40002, -1691.50000, 19.90000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1215, 960.29999, -1691.40002, 19.90000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1215, 945.90002, -1728.80005, 27.30000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(1215, 952.70001, -1697.50000, 19.90000,   0.00000, 0.00000, 314.85199);
    CreateDynamicObject(997, 946.90002, -1728.59998, 26.70000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3051, 960.70001, -1728.48328, 23.85200,   0.00000, 0.00000, 136.62199);
    CreateDynamicObject(3051, 959.48199, -1728.48328, 23.85200,   0.00000, 0.00000, 316.08801);
    CreateDynamicObject(3051, 256.96973, 126.39941, 1010.58002,   0.00000, 0.00000, 226.34000);
    CreateDynamicObject(3051, 256.96973, 125.28000, 1010.58002,   0.00000, 0.00000, 46.57700);
    CreateDynamicObject(2204, 256.89941, 126.49900, 1013.71997,   0.00000, 179.99500, 89.99500);
    CreateDynamicObject(2204, 256.89999, 127.47800, 1011.93500,   0.00000, 0.00000, 89.99500);
    CreateDynamicObject(2930, 217.70000, 126.02400, 1009.03998,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2930, 217.63100, 124.30000, 1009.04602,   0.00000, 180.00000, 0.00000);
    CreateDynamicObject(14638, 252.97656, 118.96289, 1002.30432,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2204, 239.39999, 124.20000, 1002.20001,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(2204, 239.39941, 124.19922, 1003.97998,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(2204, 239.50000, 112.00000, 1003.29999,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1791, 227.50000, 128.80000, 1010.29999,   0.00000, 0.00000, 359.46201);
    CreateDynamicObject(1791, 226.88300, 128.80000, 1010.29999,   0.00000, 0.00000, 359.46701);
    CreateDynamicObject(1791, 237.77800, 106.75000, 1010.14001,   0.00000, 0.00000, 179.99500);
    CreateDynamicObject(1791, 238.39000, 106.75000, 1010.70001,   0.00000, 0.00000, 179.99500);
    CreateDynamicObject(1791, 237.77800, 106.75000, 1011.26001,   0.00000, 0.00000, 179.99500);
    CreateDynamicObject(1791, 238.39000, 106.75000, 1010.14001,   0.00000, 0.00000, 179.99500);
    CreateDynamicObject(3659, 214.00000, 125.73900, 1003.20001,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3659, 217.10001, 125.80000, 1003.20001,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(1808, 218.60001, 124.60000, 998.00000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2596, 229.50000, 119.96973, 1011.90002,   0.00000, 0.00000, 179.99500);
    CreateDynamicObject(2596, 233.39999, 112.80000, 1012.29999,   0.00000, 0.00000, 50.00000);
    CreateDynamicObject(2596, 223.89999, 116.38000, 1005.00000,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(1704, 232.19922, 123.39941, 1009.20001,   0.00000, 0.00000, 270.34100);
    CreateDynamicObject(1704, 232.19922, 122.09961, 1009.20001,   0.00000, 0.00000, 270.34100);
    CreateDynamicObject(1808, 228.59961, 112.39844, 1009.20001,   0.00000, 0.00000, 133.61600);
    CreateDynamicObject(1808, 229.30000, 116.30000, 1002.20001,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(2596, 226.29980, 113.69238, 1012.09998,   0.00000, 0.00000, 179.99500);
    CreateDynamicObject(2126, 223.50000, 116.10000, 1002.20001,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2200, 239.29980, 125.69922, 1002.20001,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(2185, 217.89999, 120.30000, 1002.20001,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(2356, 217.10001, 121.30000, 1002.20001,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(2852, 224.00000, 116.59961, 1002.70001,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2196, 237.20000, 110.69922, 1010.06000,   0.00000, 0.00000, 308.03500);
    CreateDynamicObject(2196, 228.69922, 125.59961, 1010.13000,   0.00000, 0.00000, 31.67400);
    CreateDynamicObject(2085, 225.79980, 113.89844, 1009.20001,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2852, 226.59961, 114.00000, 1010.00000,   0.00000, 0.00000, 229.99899);
    CreateDynamicObject(2855, 225.79980, 113.89941, 1010.00000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1778, 215.00000, 116.60000, 1002.50000,   0.00000, 0.00000, 90.13900);
    CreateDynamicObject(1789, 214.70000, 116.50000, 1002.79999,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(1738, 229.20000, 114.70000, 998.70001,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(1738, 213.79980, 114.59961, 998.70001,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(1738, 227.39999, 117.50000, 998.70001,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(1659, 229.00000, 124.70000, 1012.16998,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1661, 229.00000, 124.69922, 1012.18701,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1659, 220.70000, 109.80000, 1012.66998,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1659, 224.70000, 109.90000, 1012.66998,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1661, 224.70000, 109.90000, 1012.67999,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1661, 220.70000, 109.80000, 1012.67999,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2190, 230.00000, 124.89941, 1010.09998,   0.00000, 0.00000, 198.29800);
    CreateDynamicObject(3051, 239.60001, 117.00000, 1003.59998,   0.00000, 0.00000, 46.47600);
    CreateDynamicObject(3051, 239.60001, 118.20000, 1003.59998,   0.00000, 0.00000, 225.49200);
    CreateDynamicObject(2162, 239.31000, 125.24500, 1004.09998,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(3089, 236.83000, 119.30000, 1003.50000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1776, 217.69922, 114.89941, 1010.29999,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1235, 217.80000, 116.00000, 1009.70001,   0.00000, 0.00000, 340.53500);
    CreateDynamicObject(1235, 222.20000, 121.80000, 1002.70001,   0.00000, 0.00000, 35.33600);
    CreateDynamicObject(2509, 239.30000, 112.30000, 1004.20001,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(2509, 239.30000, 113.60000, 1004.20001,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(2930, 217.63086, 126.02344, 1009.04602,   0.00000, 179.99500, 0.00000);
    CreateDynamicObject(2930, 227.33000, 128.52000, 1004.84998,   0.00000, 180.00000, 0.24600);
    CreateDynamicObject(2930, 227.33000, 126.79980, 1004.84998,   0.00000, 180.00000, 0.24200);
    CreateDynamicObject(2930, 227.39941, 128.51953, 1004.84998,   0.00000, 0.00000, 0.24200);
    CreateDynamicObject(2429, 227.70000, 112.70000, 1010.29999,   0.00000, 0.00000, 137.28300);
    CreateDynamicObject(2429, 228.50000, 115.90000, 1003.70001,   0.00000, 0.00000, 170.00000);
    CreateDynamicObject(2429, 218.30000, 125.00000, 999.20001,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(987, 930.29999, -1054.80005, 30.60000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(987, 918.29999, -1054.80005, 30.60000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(987, 906.29999, -1054.80005, 30.60000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(987, 894.29999, -1054.80005, 30.60000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(987, 882.50000, -1054.80005, 30.60000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(987, 876.70001, -1054.80005, 30.60000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(987, 876.79999, -1042.80005, 30.60000,   0.00000, 0.00000, 269.75400);
    CreateDynamicObject(987, 876.79999, -1018.79999, 30.60000,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(987, 888.50000, -1014.90002, 38.10000,   0.00000, 0.00000, 180.24600);
    CreateDynamicObject(987, 900.50000, -1014.90002, 38.10000,   0.00000, 0.00000, 180.24200);
    CreateDynamicObject(4726, 915.20001, -1021.50000, 110.00000,   0.00000, 0.00000, 91.07000);
    CreateDynamicObject(4727, 915.20001, -1021.50000, 110.50000,   0.00000, 0.00000, 90.76500);
    CreateDynamicObject(8402, 910.00000, -1032.69922, 30.59500,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(727, 900.29980, -1060.89941, 23.80000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(732, 931.20001, -1059.80005, 23.50000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(987, 876.79980, -1018.79980, 30.60000,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(1297, 940.90002, -988.00000, 40.60000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1297, 941.40002, -996.79999, 38.80000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1297, 941.40002, -1005.59998, 37.00000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1297, 941.29999, -1015.50000, 34.30000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1297, 941.09961, -1024.29980, 34.30000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1297, 941.09961, -1033.39941, 34.30000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(987, 876.90002, -1030.80005, 30.60000,   0.00000, 0.00000, 269.75299);
    CreateDynamicObject(1232, 897.79980, -1035.79980, 33.50000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1232, 929.59998, -1036.19995, 33.50000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(640, 925.79980, -1004.09961, 37.70000,   0.00000, 0.00000, 90.80200);
    CreateDynamicObject(640, 903.20001, -1003.40002, 37.60000,   0.00000, 0.00000, 90.80200);
    CreateDynamicObject(644, 921.39941, -1001.89941, 37.35000,   0.00000, 0.00000, 91.26300);
    CreateDynamicObject(644, 906.70001, -1002.40002, 37.16000,   0.00000, 0.00000, 91.26300);
    CreateDynamicObject(792, 917.70001, -993.00000, 37.58000,   0.00000, 0.00000, 15.72000);
    CreateDynamicObject(792, 922.29999, -991.70001, 37.60000,   0.00000, 0.00000, 15.71600);
    CreateDynamicObject(792, 926.90002, -990.59998, 37.60000,   0.00000, 0.00000, 11.53400);
    CreateDynamicObject(792, 933.89941, -991.79980, 37.60000,   0.00000, 0.00000, 1.32900);
    CreateDynamicObject(792, 931.50000, -989.59961, 37.60000,   0.00000, 0.00000, 9.52300);
    CreateDynamicObject(792, 934.00000, -996.50000, 37.60000,   0.00000, 0.00000, 1.32900);
    CreateDynamicObject(792, 934.00000, -1001.90002, 37.50000,   0.00000, 0.00000, 1.32900);
    CreateDynamicObject(792, 934.00000, -1007.00000, 37.40000,   0.00000, 0.00000, 0.06200);
    CreateDynamicObject(792, 907.29999, -997.00000, 37.10000,   0.00000, 0.00000, 19.40600);
    CreateDynamicObject(792, 902.40002, -998.59998, 37.10000,   0.00000, 0.00000, 19.89400);
    CreateDynamicObject(792, 897.40002, -1000.79999, 37.00000,   0.00000, 0.00000, 30.08900);
    CreateDynamicObject(792, 892.59961, -1003.19922, 37.00000,   0.00000, 0.00000, 29.34400);
    CreateDynamicObject(792, 888.29999, -1005.79999, 36.90000,   0.00000, 0.00000, 32.79200);
    CreateDynamicObject(792, 884.20001, -1008.50000, 37.10000,   0.00000, 0.00000, 32.78900);
    CreateDynamicObject(792, 880.00000, -1011.40002, 37.10000,   0.00000, 0.00000, 32.78900);
    CreateDynamicObject(948, 920.50000, -1039.00000, 30.90000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(948, 907.69922, -1039.09961, 30.90000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(948, 922.70001, -1039.00000, 30.90000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(948, 905.50000, -1039.00000, 30.90000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3388, 214.20000, 123.00000, 1002.20001,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3387, 216.89999, 123.00000, 1002.20001,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(1791, 237.16992, 106.75000, 1011.26001,   0.00000, 0.00000, 179.99500);
    CreateDynamicObject(1791, 237.17000, 106.75000, 1010.14001,   0.00000, 0.00000, 179.99500);
    CreateDynamicObject(1791, 237.16992, 106.75000, 1010.70001,   0.00000, 0.00000, 179.99500);
    CreateDynamicObject(1791, 237.77734, 106.75000, 1010.70001,   0.00000, 0.00000, 179.99500);
    CreateDynamicObject(1791, 238.38965, 106.75000, 1011.26001,   0.00000, 0.00000, 179.99500);
    CreateDynamicObject(985, 932.90002, -1013.20001, 32.43000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1723, 235.59961, 107.59961, 1009.20001,   0.00000, 0.00000, 180.50000);
    CreateDynamicObject(1736, 239.00977, 109.89844, 1011.59998,   0.00000, 0.00000, 271.13199);
    CreateDynamicObject(2204, 256.89999, 128.77930, 1009.48102,   0.00000, 270.00000, 90.00000);
    CreateDynamicObject(2233, 239.66701, 112.87000, 1009.21997,   0.00000, 0.00000, 310.00000);
    CreateDynamicObject(2332, 239.59961, 111.89941, 1010.00000,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(2344, 237.10001, 110.50000, 1010.09998,   0.00000, 0.00000, 319.99899);
    CreateDynamicObject(2271, 232.24100, 121.00000, 1011.20001,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(2233, 239.26953, 106.73926, 1009.21997,   0.00000, 0.00000, 237.99699);
    CreateDynamicObject(2270, 232.24100, 120.20000, 1010.79999,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(2200, 225.19336, 126.69922, 1009.20001,   0.00000, 0.00000, 89.38500);
    CreateDynamicObject(2200, 225.16992, 124.46973, 1009.20001,   0.00000, 0.00000, 89.38500);
    CreateDynamicObject(3017, 237.10001, 111.00100, 1010.06000,   0.00000, 0.00000, 157.00000);
    CreateDynamicObject(2200, 233.53999, 112.97000, 1009.20001,   0.00000, 0.00000, 359.88501);
    CreateDynamicObject(2200, 225.14648, 122.24023, 1009.20001,   0.00000, 0.00000, 89.38500);
    CreateDynamicObject(2200, 235.75977, 112.96973, 1009.20001,   0.00000, 0.00000, 359.88501);
    CreateDynamicObject(2108, 237.79980, 112.69922, 1009.20001,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2167, 231.29980, 128.50000, 1009.21002,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2200, 229.44922, 119.89941, 1009.20001,   0.00000, 0.00000, 179.99500);
    CreateDynamicObject(951, 236.39941, 107.29883, 1009.96002,   0.00000, 0.00000, 335.99500);
    CreateDynamicObject(2200, 229.45000, 119.60000, 1009.20001,   0.00000, 0.00000, 179.99500);
    CreateDynamicObject(1962, 225.04401, 127.35000, 1011.70001,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(1961, 225.04401, 125.10000, 1011.70001,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(2828, 237.00000, 112.80000, 1011.09998,   0.00000, 0.00000, 182.00000);
    CreateDynamicObject(1960, 225.04401, 122.86000, 1011.70001,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(2813, 234.10001, 112.80000, 1011.09998,   0.00000, 0.00000, 22.00000);
    CreateDynamicObject(2916, 233.17300, 112.96600, 1011.28998,   0.00000, 70.00000, 358.00000);
    CreateDynamicObject(2614, 235.50000, 113.05000, 1011.90002,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2252, 235.55000, 112.78000, 1011.40002,   0.00000, 0.00000, 259.48599);
    CreateDynamicObject(2011, 232.50000, 120.00000, 1009.20001,   0.00000, 0.00000, 149.12000);
    CreateDynamicObject(353, 236.80000, 109.80000, 1010.04999,   95.99900, 90.00000, 49.99900);
    CreateDynamicObject(2922, 227.80957, 124.84961, 1003.59998,   0.00000, 0.00000, 270.16501);
    CreateDynamicObject(2252, 225.39941, 126.29980, 1011.40002,   0.00000, 0.00000, 259.48099);
    CreateDynamicObject(2922, 226.50000, 125.07000, 1003.29999,   0.00000, 0.00000, 359.68701);
    CreateDynamicObject(2842, 231.70000, 109.60000, 1009.20001,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(2344, 227.80000, 125.40000, 1010.15002,   0.00000, 0.00000, 319.99899);
    CreateDynamicObject(2836, 230.61914, 118.19922, 1009.21002,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2421, 232.39999, 128.50000, 1010.29999,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2864, 232.19922, 128.19922, 1010.72998,   0.00000, 0.00000, 339.96600);
    CreateDynamicObject(2227, 227.89941, 128.59961, 1009.20001,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2229, 227.19922, 119.79980, 1009.20001,   0.00000, 0.00000, 179.99500);
    CreateDynamicObject(2229, 230.89941, 128.50000, 1009.20001,   0.00000, 0.00000, 359.46201);
    CreateDynamicObject(1704, 232.20000, 126.70000, 1009.20001,   0.00000, 0.00000, 270.34100);
    CreateDynamicObject(2855, 232.20000, 124.00000, 1010.00000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2085, 232.20000, 124.10000, 1009.20001,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(2249, 232.19922, 124.59961, 1010.70001,   0.00000, 0.00000, 269.89600);
    CreateDynamicObject(2894, 229.10001, 125.30000, 1010.13000,   0.00000, 0.00000, 179.49001);
    CreateDynamicObject(3965, 226.59961, 130.69922, 1010.09998,   0.00000, 0.00000, 179.63200);
    CreateDynamicObject(362, 225.29980, 124.19922, 1011.42999,   0.00000, 36.20000, 272.36801);
    CreateDynamicObject(2922, 217.33501, 122.29000, 1008.09998,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(2922, 218.10001, 122.55800, 1007.70001,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2835, 238.39999, 114.30000, 1009.21198,   0.00000, 0.00000, 89.17800);
    CreateDynamicObject(1886, 256.10001, 128.20000, 1013.40002,   22.00000, 0.00000, 285.93900);
    CreateDynamicObject(2613, 228.20000, 126.40000, 1009.20001,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2236, 238.39941, 108.69922, 1009.20001,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(2613, 237.70000, 111.80000, 1009.20001,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2922, 931.56934, -1726.50000, 14.00000,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(16780, 236.00000, 110.00000, 1012.84998,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2754, 251.39999, 119.90000, 1010.09998,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(3965, 241.29980, 108.59961, 1009.96997,   0.00000, 0.00000, 57.09600);
    CreateDynamicObject(2864, 238.89999, 108.60000, 1009.29999,   0.00000, 0.00000, 151.17500);
    CreateDynamicObject(2074, 236.00000, 110.00600, 1012.14001,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1731, 232.56934, 110.64941, 1011.20001,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2066, 233.60001, 111.50000, 1009.20001,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(2066, 233.59961, 110.90000, 1009.20001,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(2894, 237.20000, 109.20000, 1010.06000,   0.00000, 0.00000, 320.00000);
    CreateDynamicObject(1502, 232.87000, 110.10000, 1009.20001,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(1649, 247.80000, 129.10001, 1012.20001,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1502, 232.15918, 119.52930, 1009.20001,   0.00000, 0.00000, 179.39000);
    CreateDynamicObject(1649, 228.50400, 119.50000, 1010.79999,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1649, 232.89999, 126.60000, 1011.50000,   180.00000, 180.00000, 270.00000);
    CreateDynamicObject(1791, 226.26801, 128.80000, 1010.29999,   0.00000, 0.00000, 359.46201);
    CreateDynamicObject(1791, 227.50000, 128.79980, 1010.87000,   0.00000, 0.00000, 359.46201);
    CreateDynamicObject(1791, 226.88300, 128.80000, 1010.87000,   0.00000, 0.00000, 359.46201);
    CreateDynamicObject(1791, 226.26801, 128.80000, 1010.87000,   0.00000, 0.00000, 359.46201);
    CreateDynamicObject(1731, 229.57001, 119.23000, 1011.21002,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1569, 942.21997, -1741.90002, 12.80000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1649, 232.86914, 106.46000, 1010.59998,   179.99500, 0.00000, 270.00000);
    CreateDynamicObject(1569, 239.37000, 114.20000, 1009.20001,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(2204, 256.89941, 122.89844, 1011.44299,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(1649, 232.86914, 106.45996, 1010.59998,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(1649, 219.20000, 112.85000, 1011.70001,   0.00000, 0.00000, 359.99701);
    CreateDynamicObject(1649, 219.19922, 112.85000, 1011.70001,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(1649, 223.59961, 112.84961, 1011.70001,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(1649, 232.89941, 122.19922, 1011.50000,   0.00000, 179.99500, 270.00000);
    CreateDynamicObject(1649, 223.59961, 112.84961, 1011.70001,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1649, 232.89941, 126.59961, 1011.50000,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(1649, 232.89941, 122.19922, 1011.50000,   180.00000, 0.00000, 270.00000);
    CreateDynamicObject(1649, 228.50391, 119.50000, 1010.79999,   180.00000, 0.00000, 0.00000);
    CreateDynamicObject(348, 228.60001, 125.47000, 1010.17902,   268.00000, 270.00000, 120.00000);
    CreateDynamicObject(351, 231.00000, 128.41299, 1011.42999,   0.00000, 0.00000, 5.00000);
    CreateDynamicObject(349, 231.00000, 128.41299, 1011.15002,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(2204, 240.00000, 126.17000, 1003.97998,   0.00000, 0.00000, 266.97699);
    CreateDynamicObject(2204, 260.39999, 125.90000, 1009.67999,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(2204, 240.00000, 126.16992, 1002.20001,   0.00000, 0.00000, 266.97299);
    CreateDynamicObject(2204, 240.09961, 113.96973, 1003.29999,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(2204, 260.39941, 125.89941, 1008.00000,   0.00000, 0.00000, 270.00000);
//======================================[HQ Reporteres]=========================================================
    CreateDynamicObject(3089,367.79998779,161.89999390,1020.29998779,0.00000000,0.00000000,270.00000000); //object(ab_casdorlok) (2)
    CreateDynamicObject(3089,367.79998779,163.30000305,1020.29998779,0.00000000,0.00000000,270.00000000); //object(ab_casdorlok) (3)
    CreateDynamicObject(2904,367.79998779,162.50000000,1023.00000000,0.00000000,0.00000000,90.00000000); //object(warehouse_door1) (1)
//=====================================[HQ Triads]=======================================================================
/*    CreateDynamicObject(987,-361.60000610,-1408.40002441,24.70000076,358.00000000,0.00000000,184.00000000); //object(elecfence_bar) (2)
    CreateDynamicObject(987,-388.50000000,-1450.90002441,24.70000076,0.00000000,0.00000000,0.00000000); //object(elecfence_bar) (7)
    CreateDynamicObject(987,-376.50000000,-1450.90002441,24.70000076,0.00000000,0.00000000,0.00000000); //object(elecfence_bar) (8)
    CreateDynamicObject(987,-364.60000610,-1451.19995117,25.10000038,0.00000000,0.00000000,84.00000000); //object(elecfence_bar) (9)
    CreateDynamicObject(987,-363.39999390,-1439.19995117,24.70000076,0.00000000,0.00000000,83.99694824); //object(elecfence_bar) (10)
    CreateDynamicObject(987,-362.10000610,-1420.19995117,24.70000076,0.00000000,0.00000000,87.99597168); //object(elecfence_bar) (11)
    CreateDynamicObject(3749,-379.39999390,-1409.40002441,30.60000038,0.00000000,0.00000000,0.00000000); //object(clubgate01_lax) (1)
    CreateDynamicObject(987,-388.79998779,-1410.90002441,24.60000038,0.00000000,0.00000000,248.00000000); //object(elecfence_bar) (13)
    CreateDynamicObject(9241,-411.10000610,-1377.50000000,23.89999962,0.00000000,0.00000000,81.99993896); //object(copbits_sfn) (1)
    CreateDynamicObject(1434,-383.70001221,-1438.90002441,25.39999962,0.00000000,0.00000000,92.00000000); //object(dyn_roadbarrier_5a) (1)*/
//===================================[Objetos HQ Drifters]===========================================================
    CreateDynamicObject(3749,836.2000100,-1901.1999500,17.7000000,0.0000000,0.0000000,180.0000000); //object(clubgate01_lax) (1)
    CreateDynamicObject(971,848.9000200,-1901.0999800,15.4000000,0.0000000,0.0000000,0.0000000); //object(subwaygate) (1)
    CreateDynamicObject(971,824.0000000,-1901.3000500,15.4000000,0.0000000,0.0000000,179.9950000); //object(subwaygate) (2)
    CreateDynamicObject(8210,852.9000200,-2040.0000000,15.0000000,0.0000000,0.0000000,90.1300000); //object(vgsselecfence12) (1)
    CreateDynamicObject(8210,852.9000200,-1929.0000000,15.0000000,0.0000000,0.0000000,90.0000000); //object(vgsselecfence12) (2)
    CreateDynamicObject(8210,852.8994100,-1984.5000000,15.0000000,0.0000000,0.0000000,90.0000000); //object(vgsselecfence12) (3)
    CreateDynamicObject(8210,819.9000200,-1929.0000000,15.0000000,0.0000000,0.0000000,270.0000000); //object(vgsselecfence12) (6)
    CreateDynamicObject(8210,819.9000200,-1984.5000000,15.0000000,0.0000000,0.0000000,270.0000000); //object(vgsselecfence12) (7)
    CreateDynamicObject(8210,819.9000200,-2040.0000000,15.0000000,0.0000000,0.0000000,270.0000000); //object(vgsselecfence12) (8)
    CreateDynamicObject(986,849.2999900,-2067.6999500,13.7000000,0.0000000,0.0000000,0.0000000); //object(gate_autol) (2)
    CreateDynamicObject(986,841.2999900,-2067.6999500,13.7000000,0.0000000,0.0000000,0.0000000); //object(gate_autol) (3)
    CreateDynamicObject(986,833.2999900,-2067.6999500,13.7000000,0.0000000,0.0000000,0.0000000); //object(gate_autol) (4)
    CreateDynamicObject(986,825.2999900,-2067.6999500,13.7000000,0.0000000,0.0000000,180.0000000); //object(gate_autol) (5)
    CreateDynamicObject(986,823.5999800,-2067.6999500,13.7000000,0.0000000,0.0000000,0.0000000); //object(gate_autol) (6)
    CreateDynamicObject(3293,828.79998779,-2056.50000000,15.10000038,0.00000000,0.00000000,0.00000000); //object(des_payspint) (1)
    CreateDynamicObject(3292,824.09997559,-2059.19995117,11.89999962,0.00000000,0.00000000,0.00000000); //object(cxf_payspray_) (1)
    CreateDynamicObject(5191,909.09997559,-2172.00000000,6.40000010,0.00000000,0.00000000,104.00000000); //object(nwdkbridd_las2) (1)
    CreateDynamicObject(3749,951.00000000,-2161.10009766,18.00000000,0.00000000,0.00000000,284.00000000); //object(clubgate01_lax) (1)
    CreateObject(6300,821.59997559,-2203.89990234,4.30000019,0.00000000,0.00000000,284.00000000); //object(pier04_law2) (1)
    CreateDynamicObject(987,936.50000000,-2155.50000000,14.30000019,0.00000000,0.00000000,14.00000000); //object(elecfence_bar) (1)
    CreateDynamicObject(987,924.90002441,-2158.39990234,14.30000019,0.00000000,0.00000000,13.99658203); //object(elecfence_bar) (2)
    CreateDynamicObject(987,913.29998779,-2161.30004883,14.30000019,0.00000000,0.00000000,13.99658203); //object(elecfence_bar) (3)
    CreateDynamicObject(987,901.70001221,-2164.19995117,14.30000019,0.00000000,0.00000000,13.99658203); //object(elecfence_bar) (4)
    CreateDynamicObject(987,890.20001221,-2167.00000000,14.30000019,0.00000000,0.00000000,13.99658203); //object(elecfence_bar) (5)
    CreateDynamicObject(987,878.59997559,-2169.89990234,14.30000019,0.00000000,0.00000000,13.99658203); //object(elecfence_bar) (6)
    CreateDynamicObject(987,867.00000000,-2172.80004883,14.30000019,0.00000000,0.00000000,13.99658203); //object(elecfence_bar) (7)
    CreateDynamicObject(987,855.40002441,-2175.69995117,14.30000019,0.00000000,0.00000000,13.99658203); //object(elecfence_bar) (8)
    CreateDynamicObject(987,846.50000000,-2177.89990234,14.30000019,0.00000000,0.00000000,13.99658203); //object(elecfence_bar) (9)
    CreateDynamicObject(987,952.09997559,-2170.80004883,14.30000019,0.00000000,0.00000000,193.99664307); //object(elecfence_bar) (10)
    CreateDynamicObject(987,940.50000000,-2173.69995117,14.30000019,0.00000000,0.00000000,193.99658203); //object(elecfence_bar) (11)
    CreateDynamicObject(987,928.90002441,-2176.60009766,14.30000019,0.00000000,0.00000000,193.99658203); //object(elecfence_bar) (12)
    CreateDynamicObject(987,917.29998779,-2179.50000000,14.30000019,0.00000000,0.00000000,193.99658203); //object(elecfence_bar) (13)
    CreateDynamicObject(987,905.70001221,-2182.39990234,14.30000019,0.00000000,0.00000000,193.99658203); //object(elecfence_bar) (14)
    CreateDynamicObject(987,894.09997559,-2185.19995117,14.30000019,0.00000000,0.00000000,193.99658203); //object(elecfence_bar) (15)
    CreateDynamicObject(987,882.50000000,-2188.10009766,14.30000019,0.00000000,0.00000000,193.99658203); //object(elecfence_bar) (16)
    CreateDynamicObject(987,870.90002441,-2191.00000000,14.30000019,0.00000000,0.00000000,193.99658203); //object(elecfence_bar) (17)
    CreateDynamicObject(987,863.40002441,-2193.00000000,14.30000019,0.00000000,0.00000000,193.99658203); //object(elecfence_bar) (18)
    CreateDynamicObject(3749,851.90002441,-2186.10009766,18.00000000,0.00000000,0.00000000,283.99658203); //object(clubgate01_lax) (2)
    CreateDynamicObject(974,859.90002441,-2197.89990234,15.10000038,0.00000000,0.00000000,284.00000000); //object(tall_fence) (2)
    CreateDynamicObject(974,861.50000000,-2204.30004883,15.10000038,0.00000000,0.00000000,283.99658203); //object(tall_fence) (3)
    CreateDynamicObject(974,863.09997559,-2210.69995117,15.10000038,0.00000000,0.00000000,283.99658203); //object(tall_fence) (4)
    CreateDynamicObject(974,860.59997559,-2214.69995117,15.10000038,0.00000000,0.00000000,193.99658203); //object(tall_fence) (5)
    CreateDynamicObject(974,854.09997559,-2216.30004883,15.10000038,0.00000000,0.00000000,193.99108887); //object(tall_fence) (6)
    CreateDynamicObject(974,847.59997559,-2217.89990234,15.10000038,0.00000000,0.00000000,193.99108887); //object(tall_fence) (7)
    CreateDynamicObject(974,841.09997559,-2219.50000000,15.10000038,0.00000000,0.00000000,193.99108887); //object(tall_fence) (8)
    CreateDynamicObject(974,834.70001221,-2221.10009766,15.10000038,0.00000000,0.00000000,193.99108887); //object(tall_fence) (9)
    CreateDynamicObject(974,833.40002441,-2221.39990234,15.10000038,0.00000000,0.00000000,193.99108887); //object(tall_fence) (10)
    CreateDynamicObject(974,830.90002441,-2225.50000000,15.10000038,0.00000000,0.00000000,283.99658203); //object(tall_fence) (11)
    CreateDynamicObject(974,831.79998779,-2229.19995117,15.10000038,0.00000000,0.00000000,283.99658203); //object(tall_fence) (12)
    CreateDynamicObject(974,829.40002441,-2233.19995117,15.10000038,0.00000000,0.00000000,193.99108887); //object(tall_fence) (13)
    CreateDynamicObject(974,822.90002441,-2234.80004883,15.10000038,0.00000000,0.00000000,193.99108887); //object(tall_fence) (14)
    CreateDynamicObject(974,816.40002441,-2236.39990234,15.10000038,0.00000000,0.00000000,193.99108887); //object(tall_fence) (15)
    CreateDynamicObject(974,809.90002441,-2238.00000000,15.10000038,0.00000000,0.00000000,193.99108887); //object(tall_fence) (16)
    CreateDynamicObject(974,803.40002441,-2239.60009766,15.10000038,0.00000000,0.00000000,193.99108887); //object(tall_fence) (17)
    CreateDynamicObject(974,796.90002441,-2241.19995117,15.10000038,0.00000000,0.00000000,193.99108887); //object(tall_fence) (18)
    CreateDynamicObject(974,794.59997559,-2241.80004883,15.10000038,0.00000000,0.00000000,193.99108887); //object(tall_fence) (19)
    CreateDynamicObject(974,790.59997559,-2239.39990234,15.10000038,0.00000000,0.00000000,283.99658203); //object(tall_fence) (20)
    CreateDynamicObject(974,789.00000000,-2232.89990234,15.10000038,0.00000000,0.00000000,283.99658203); //object(tall_fence) (21)
    CreateDynamicObject(974,787.40002441,-2226.39990234,15.10000038,0.00000000,0.00000000,283.99658203); //object(tall_fence) (22)
    CreateDynamicObject(974,785.79998779,-2219.89990234,15.10000038,0.00000000,0.00000000,283.99658203); //object(tall_fence) (23)
    CreateDynamicObject(974,784.20001221,-2213.50000000,15.10000038,0.00000000,0.00000000,283.99658203); //object(tall_fence) (24)
    CreateDynamicObject(974,782.59997559,-2207.00000000,15.10000038,0.00000000,0.00000000,283.99658203); //object(tall_fence) (25)
    CreateDynamicObject(974,781.00000000,-2200.60009766,15.10000038,0.00000000,0.00000000,283.99658203); //object(tall_fence) (26)
    CreateDynamicObject(974,779.40002441,-2194.10009766,15.10000038,0.00000000,0.00000000,283.99658203); //object(tall_fence) (27)
    CreateDynamicObject(974,777.79998779,-2187.60009766,15.10000038,0.00000000,0.00000000,283.99658203); //object(tall_fence) (28)
    CreateDynamicObject(974,780.00000000,-2183.00000000,15.10000038,0.00000000,0.00000000,193.99108887); //object(tall_fence) (29)
    CreateDynamicObject(974,786.50000000,-2181.39990234,15.10000038,0.00000000,0.00000000,193.99108887); //object(tall_fence) (30)
    CreateDynamicObject(974,793.00000000,-2179.80004883,15.10000038,0.00000000,0.00000000,193.99108887); //object(tall_fence) (31)
    CreateDynamicObject(974,799.50000000,-2178.19995117,15.10000038,0.00000000,0.00000000,193.99108887); //object(tall_fence) (32)
    CreateDynamicObject(974,806.00000000,-2176.60009766,15.10000038,0.00000000,0.00000000,193.99108887); //object(tall_fence) (33)
    CreateDynamicObject(974,812.50000000,-2175.00000000,15.10000038,0.00000000,0.00000000,193.99108887); //object(tall_fence) (34)
    CreateDynamicObject(974,814.79998779,-2174.39990234,15.10000038,0.00000000,0.00000000,193.99108887); //object(tall_fence) (35)
    CreateDynamicObject(974,818.79998779,-2176.80004883,15.10000038,0.00000000,0.00000000,283.99658203); //object(tall_fence) (36)
    CreateDynamicObject(974,819.70001221,-2180.80004883,15.10000038,0.00000000,0.00000000,283.99658203); //object(tall_fence) (37)
    CreateDynamicObject(974,823.79998779,-2183.30004883,15.10000038,0.00000000,0.00000000,193.99108887); //object(tall_fence) (38)
    CreateDynamicObject(974,826.09997559,-2182.69995117,15.10000038,0.00000000,0.00000000,193.99108887); //object(tall_fence) (39)
    CreateDynamicObject(974,828.40002441,-2178.69995117,15.10000038,0.00000000,0.00000000,283.99658203); //object(tall_fence) (40)
    CreateDynamicObject(974,828.09997559,-2177.50000000,15.10000038,0.00000000,0.00000000,283.99658203); //object(tall_fence) (41)
    CreateDynamicObject(974,830.50000000,-2173.50000000,15.10000038,0.00000000,0.00000000,193.99108887); //object(tall_fence) (42)
    CreateDynamicObject(974,837.00000000,-2171.89990234,15.10000038,0.00000000,0.00000000,193.99108887); //object(tall_fence) (43)
    CreateDynamicObject(974,841.09997559,-2174.30004883,15.10000038,0.00000000,0.00000000,283.99658203); //object(tall_fence) (44)
    CreateDynamicObject(974,845.50000000,-2178.00000000,15.10000038,0.00000000,0.00000000,193.99108887); //object(tall_fence) (45)
    CreateDynamicObject(974,841.40002441,-2175.60009766,15.10000038,0.00000000,0.00000000,283.99658203); //object(tall_fence) (46)
    CreateDynamicObject(1985,791.09997559,-2215.69995117,16.79999924,0.00000000,0.00000000,0.00000000); //object(punchbagnu) (1)
    CreateDynamicObject(3472,856.00000000,-2178.29980469,12.30000019,0.00000000,0.00000000,0.00000000); //object(circuslampost03) (1)
    CreateDynamicObject(3472,859.29998779,-2190.89990234,12.30000019,0.00000000,0.00000000,0.00000000); //object(circuslampost03) (2)
    CreateDynamicObject(3524,973.90002441,-2163.50000000,15.30000019,0.00000000,0.00000000,102.00000000); //object(skullpillar01_lvs) (1)
    CreateDynamicObject(3524,970.09997559,-2149.19995117,15.30000019,0.00000000,0.00000000,105.99514771); //object(skullpillar01_lvs) (2)
    CreateDynamicObject(3528,954.90002441,-2160.19995117,22.50000000,0.00000000,0.00000000,12.00000000); //object(vgsedragon) (1)
    CreateObject(11490,792.00000000,-2211.60009766,12.39999962,0.00000000,0.00000000,104.00000000); //object(des_ranch) (1)
    CreateObject(11491,802.59997559,-2208.89990234,13.89999962,0.00000000,0.00000000,103.99996948); //object(des_ranchbits1) (1)
    CreateDynamicObject(1985,790.00000000,-2215.39990234,16.50000000,0.00000000,0.00000000,0.00000000); //object(punchbagnu) (2)
    CreateDynamicObject(2290,787.29998779,-2208.60009766,13.89999962,0.00000000,0.00000000,14.00000000); //object(swk_couch_1) (1)
    CreateDynamicObject(2290,790.20001221,-2207.89990234,13.89999962,0.00000000,0.00000000,13.99658203); //object(swk_couch_1) (2)
    CreateDynamicObject(2290,793.09997559,-2207.19995117,13.89999962,0.00000000,0.00000000,13.99658203); //object(swk_couch_1) (3)
    CreateDynamicObject(2117,792.59997559,-2211.50000000,13.89999962,0.00000000,0.00000000,14.00000000); //object(swank_dinning_5) (1)
    CreateDynamicObject(2239,788.00000000,-2211.00000000,13.89999962,0.00000000,0.00000000,0.00000000); //object(cj_mlight16) (1)
    CreateDynamicObject(2238,793.00000000,-2211.39990234,15.10000038,0.00000000,0.00000000,0.00000000); //object(cj_lava_lamp) (1)
    CreateDynamicObject(2108,799.29998779,-2214.10009766,13.89999962,0.00000000,0.00000000,0.00000000); //object(cj_mlight13) (1)
    CreateDynamicObject(970,806.09997559,-2214.60009766,12.89999962,0.00000000,0.00000000,14.00000000); //object(fencesmallb) (1)
    PortaoTwOPaCk2 = CreateDynamicObject(980,851.70001221,-2186.10009766,15.00000000,0.00000000,0.00000000,284.00000000); //object(airportgate) (2)
    CreateDynamicObject(3472,810.50000000,-2231.10009766,12.39999962,0.00000000,0.00000000,0.00000000); //object(circuslampost03) (1)
    CreateDynamicObject(3472,801.79998779,-2188.19995117,12.39999962,0.00000000,0.00000000,0.00000000); //object(circuslampost03) (1)
    CreateDynamicObject(1714,793.40002441,-2212.89990234,13.89999962,0.00000000,0.00000000,192.00000000); //object(kb_swivelchair1) (1)

//===============================[HQ Família HunTerS] ===================================================================================
    PortaoTwOPaCk1 = CreateDynamicObject(971,2092.5000000,-1579.3000000,15.8000000,0.0000000,0.0000000,0.0000000); //object(airportgate) (1)
    CreateDynamicObject(3055,2055.1000000,-1590.5000000,17.3000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (1)
    CreateDynamicObject(3055,2055.1000000,-1598.3000000,12.3000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (3)
    CreateDynamicObject(3055,2055.1000000,-1582.7000000,17.3000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (4)
    CreateDynamicObject(3055,2055.1000000,-1574.9000000,17.3000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (5)
    CreateDynamicObject(3055,2055.1000000,-1567.1000000,17.3000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (6)
    CreateDynamicObject(3055,2055.1000000,-1559.3000000,17.3000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (7)
    CreateDynamicObject(3055,2055.1000000,-1551.5000000,17.3000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (8)
    CreateDynamicObject(3055,2055.1000000,-1543.7000000,17.3000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (9)
    CreateDynamicObject(3055,2059.0000000,-1602.2000000,17.3000000,0.0000000,0.0000000,179.9950000); //object(kmb_shutter) (10)
    CreateDynamicObject(3055,2066.8000000,-1602.2000000,17.3000000,0.0000000,0.0000000,179.9950000); //object(kmb_shutter) (11)
    CreateDynamicObject(3055,2074.6000000,-1602.2000000,17.3000000,0.0000000,0.0000000,179.9950000); //object(kmb_shutter) (12)
    CreateDynamicObject(3055,2082.4000000,-1602.2000000,17.3000000,0.0000000,0.0000000,179.9950000); //object(kmb_shutter) (13)
    CreateDynamicObject(3055,2059.0000000,-1539.9000000,17.3000000,0.0000000,0.0000000,179.9950000); //object(kmb_shutter) (14)
    CreateDynamicObject(3055,2066.7000000,-1540.5000000,17.3000000,0.0000000,0.0000000,171.2440000); //object(kmb_shutter) (15)
    CreateDynamicObject(3055,2074.0000000,-1542.4000000,17.3000000,0.0000000,0.0000000,159.4890000); //object(kmb_shutter) (16)
    CreateDynamicObject(3055,2081.4000000,-1544.8000000,17.3000000,0.0000000,0.0000000,164.2400000); //object(kmb_shutter) (17)
    CreateDynamicObject(3055,2088.9000000,-1546.9000000,17.3000000,0.0000000,0.0000000,164.2350000); //object(kmb_shutter) (19)
    CreateDynamicObject(3055,2096.4000000,-1549.0000000,17.3000000,0.0000000,0.0000000,164.2350000); //object(kmb_shutter) (20)
    CreateDynamicObject(3055,2104.0000000,-1550.4000000,17.3000000,0.0000000,0.0000000,174.9820000); //object(kmb_shutter) (20)
    CreateDynamicObject(3055,2123.2000000,-1588.7000000,17.2000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (3)
    CreateDynamicObject(3055,2123.2000000,-1580.9000000,17.2000000,0.0000000,0.0000000,268.0000000); //object(kmb_shutter) (3)
    CreateDynamicObject(3055,2123.2000000,-1573.1000000,17.2000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (3)
    CreateDynamicObject(3055,2123.2000000,-1565.3000000,12.2000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (3)
    CreateDynamicObject(3055,2123.2000000,-1557.5000000,17.2000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (3)
    CreateDynamicObject(3055,2102.6000000,-1603.0000000,17.4000000,0.0000000,0.0000000,174.4950000); //object(kmb_shutter) (13)
    CreateDynamicObject(3055,2109.1000000,-1603.6000000,12.4000000,0.0000000,0.0000000,174.7410000); //object(kmb_shutter) (13)
    CreateDynamicObject(3055,2116.6000000,-1605.3000000,17.4000000,0.0000000,0.0000000,161.7410000); //object(kmb_shutter) (13)
    CreateDynamicObject(3055,2121.3000000,-1603.2000000,17.2000000,0.0000000,0.0000000,73.9880000); //object(kmb_shutter) (13)
    CreateDynamicObject(3055,2122.7000000,-1595.6000000,17.2000000,0.0000000,0.0000000,85.2370000); //object(kmb_shutter) (13)
    CreateDynamicObject(3055,2086.3000000,-1598.2000000,12.3000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (1)
    CreateDynamicObject(3055,2086.3000000,-1590.4000000,12.3000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (1)
    CreateDynamicObject(3055,2086.3000000,-1583.0000000,12.3000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (1)
    CreateDynamicObject(3055,2098.8000000,-1598.6000000,17.4000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (1)
    CreateDynamicObject(3055,2098.8000000,-1590.8000000,17.4000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (1)
    CreateDynamicObject(3055,2098.8000000,-1583.0000000,17.4000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (1)
    CreateDynamicObject(9131,2097.6000000,-1579.4000000,13.5000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (1)
    CreateDynamicObject(9131,2097.6000000,-1579.4000000,15.7000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (2)
    CreateDynamicObject(9131,2097.6000000,-1579.4000000,20.1000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (4)
    CreateDynamicObject(9131,2087.4000000,-1579.4000000,20.1000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (8)
    CreateDynamicObject(9131,2086.7000000,-1579.4000000,13.5000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (9)
    CreateDynamicObject(9131,2086.7000000,-1579.4000000,15.7000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (10)
    CreateDynamicObject(9131,2086.7000000,-1579.4000000,17.9000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (12)
    CreateDynamicObject(9131,2086.7000000,-1579.4000000,20.1000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (13)
    CreateDynamicObject(9131,2098.3000000,-1579.4000000,13.5000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (14)
    CreateDynamicObject(9131,2098.3000000,-1579.4000000,15.7000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (15)
    CreateDynamicObject(9131,2098.3000000,-1579.4000000,17.9000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (16)
    CreateDynamicObject(9131,2098.3000000,-1579.4000000,20.1000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (17)
    CreateDynamicObject(9131,2096.1000000,-1579.4000000,20.9000000,0.0000000,90.0000000,0.0000000); //object(shbbyhswall13_lvs) (18)
    CreateDynamicObject(9131,2093.9000000,-1579.4000000,20.9000000,0.0000000,90.0000000,0.0000000); //object(shbbyhswall13_lvs) (20)
    CreateDynamicObject(9131,2091.7000000,-1579.4000000,20.9000000,0.0000000,90.0000000,0.0000000); //object(shbbyhswall13_lvs) (21)
    CreateDynamicObject(9131,2089.6000000,-1579.4000000,20.9000000,0.0000000,90.0000000,0.0000000); //object(shbbyhswall13_lvs) (22)
    CreateDynamicObject(9131,2087.5000000,-1579.4000000,20.9000000,0.0000000,90.0000000,0.0000000); //object(shbbyhswall13_lvs) (23)
    CreateDynamicObject(9131,2096.1000000,-1579.4000000,20.2000000,0.0000000,90.0000000,0.0000000); //object(shbbyhswall13_lvs) (24)
    CreateDynamicObject(9131,2096.1000000,-1579.4000000,19.5000000,0.0000000,90.0000000,0.0000000); //object(shbbyhswall13_lvs) (25)
    CreateDynamicObject(9131,2093.9000000,-1579.4000000,20.2000000,0.0000000,90.0000000,0.0000000); //object(shbbyhswall13_lvs) (26)
    CreateDynamicObject(9131,2091.7000000,-1579.4000000,20.2000000,0.0000000,90.0000000,0.0000000); //object(shbbyhswall13_lvs) (28)
    CreateDynamicObject(9131,2091.7000000,-1579.4000000,19.5000000,0.0000000,90.0000000,0.0000000); //object(shbbyhswall13_lvs) (27)
    CreateDynamicObject(9131,2093.9000000,-1579.4000000,19.5000000,0.0000000,90.0000000,0.0000000); //object(shbbyhswall13_lvs) (29)
    CreateDynamicObject(9131,2089.6000000,-1579.4000000,19.5000000,0.0000000,90.0000000,0.0000000); //object(shbbyhswall13_lvs) (30)
    CreateDynamicObject(9131,2089.6000000,-1579.4000000,20.2000000,0.0000000,90.0000000,0.0000000); //object(shbbyhswall13_lvs) (31)
    CreateDynamicObject(9131,2087.5000000,-1579.4000000,20.2000000,0.0000000,90.0000000,0.0000000); //object(shbbyhswall13_lvs) (32)
    CreateDynamicObject(9131,2087.5000000,-1579.4000000,19.5000000,0.0000000,90.0000000,0.0000000); //object(shbbyhswall13_lvs) (33)
    CreateDynamicObject(3055,2086.3000000,-1583.0000000,17.3000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (1)
    CreateDynamicObject(3055,2086.3000000,-1590.4000000,17.3000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (1)
    CreateDynamicObject(3055,2086.3000000,-1598.2000000,17.3000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (1)
    CreateDynamicObject(3055,2082.4000000,-1602.2000000,12.3000000,0.0000000,0.0000000,179.9950000); //object(kmb_shutter) (13)
    CreateDynamicObject(3055,2074.6000000,-1602.2000000,12.3000000,0.0000000,0.0000000,179.9950000); //object(kmb_shutter) (12)
    CreateDynamicObject(3055,2066.8000000,-1602.2000000,12.3000000,0.0000000,0.0000000,179.9950000); //object(kmb_shutter) (11)
    CreateDynamicObject(3055,2059.0000000,-1602.2000000,12.3000000,0.0000000,0.0000000,179.9950000); //object(kmb_shutter) (10)
    CreateDynamicObject(3055,2055.1000000,-1598.3000000,17.3000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (3)
    CreateDynamicObject(3055,2055.1000000,-1590.5000000,12.3000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (1)
    CreateDynamicObject(3055,2055.1000000,-1582.7000000,12.3000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (4)
    CreateDynamicObject(3055,2055.1000000,-1574.9000000,12.3000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (5)
    CreateDynamicObject(3055,2055.1000000,-1567.1000000,12.2000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (6)
    CreateDynamicObject(3055,2055.1000000,-1559.3000000,12.2000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (7)
    CreateDynamicObject(3055,2055.1000000,-1551.5000000,12.2000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (8)
    CreateDynamicObject(3055,2055.1000000,-1543.7000000,12.2000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (9)
    CreateDynamicObject(3055,2059.0000000,-1539.9000000,12.3000000,0.0000000,0.0000000,179.9950000); //object(kmb_shutter) (14)
    CreateDynamicObject(3055,2066.7000000,-1540.5000000,12.3000000,0.0000000,0.0000000,171.2440000); //object(kmb_shutter) (15)
    CreateDynamicObject(3055,2074.0000000,-1542.4000000,12.3000000,0.0000000,0.0000000,159.4890000); //object(kmb_shutter) (16)
    CreateDynamicObject(3055,2081.4000000,-1544.8000000,12.3000000,0.0000000,0.0000000,164.2400000); //object(kmb_shutter) (17)
    CreateDynamicObject(3055,2088.9000000,-1546.9000000,12.3000000,0.0000000,0.0000000,164.2350000); //object(kmb_shutter) (19)
    CreateDynamicObject(3055,2096.4000000,-1549.0000000,12.3000000,0.0000000,0.0000000,164.2350000); //object(kmb_shutter) (20)
    CreateDynamicObject(3055,2104.0000000,-1550.4000000,12.3000000,0.0000000,0.0000000,174.9790000); //object(kmb_shutter) (20)
    CreateDynamicObject(3055,2123.2000000,-1557.5000000,12.2000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (3)
    CreateDynamicObject(3055,2123.2000000,-1565.3000000,17.2000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (3)
    CreateDynamicObject(3055,2123.2000000,-1573.1000000,12.2000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (3)
    CreateDynamicObject(3055,2123.2000000,-1580.9000000,12.2000000,0.0000000,0.0000000,267.9950000); //object(kmb_shutter) (3)
    CreateDynamicObject(3055,2123.2000000,-1588.7000000,12.2000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (3)
    CreateDynamicObject(3055,2122.7000000,-1595.6000000,12.2000000,0.0000000,0.0000000,85.2320000); //object(kmb_shutter) (13)
    CreateDynamicObject(3055,2121.3000000,-1603.2000000,12.2000000,0.0000000,0.0000000,73.9870000); //object(kmb_shutter) (13)
    CreateDynamicObject(3055,2116.6000000,-1605.3000000,12.4000000,0.0000000,0.0000000,161.7350000); //object(kmb_shutter) (13)
    CreateDynamicObject(3055,2109.1000000,-1603.6000000,17.4000000,0.0000000,0.0000000,174.7380000); //object(kmb_shutter) (13)
    CreateDynamicObject(3055,2102.6000000,-1603.0000000,12.4000000,0.0000000,0.0000000,174.4900000); //object(kmb_shutter) (13)
    CreateDynamicObject(3055,2098.8000000,-1598.6000000,12.4000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (1)
    CreateDynamicObject(3055,2098.8000000,-1590.8000000,12.4000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (1)
    CreateDynamicObject(3055,2098.8000000,-1583.0000000,12.4000000,0.0000000,0.0000000,270.0000000); //object(kmb_shutter) (1)
    CreateDynamicObject(16090,2092.3000000,-1604.4000000,12.4000000,0.0000000,0.0000000,268.0000000); //object(des_pipestrut03) (1)
    CreateDynamicObject(1597,2086.9000000,-1597.6000000,15.0000000,0.0000000,0.0000000,0.0000000); //object(cntrlrsac1) (1)
    //CreateDynamicObject(971,2092.5000000,-1579.3000000,15.8000000,0.0000000,0.0000000,0.0000000); //object(subwaygate) (1)
    CreateDynamicObject(3877,2085.5000000,-1605.4000000,14.2000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (1)
    CreateDynamicObject(3877,2099.1000000,-1605.9000000,14.2000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (2)
    CreateDynamicObject(3472,2099.1000000,-1604.5000000,12.8000000,0.0000000,0.0000000,56.0000000); //object(circuslampost03) (1)
    CreateDynamicObject(3472,2085.7000000,-1604.1000000,12.9000000,0.0000000,0.0000000,55.9970000); //object(circuslampost03) (2)
    CreateDynamicObject(1597,2087.0000000,-1584.7000000,15.0000000,0.0000000,0.0000000,0.0000000); //object(cntrlrsac1) (2)
    CreateDynamicObject(3437,2087.4000000,-1591.1000000,18.4000000,0.0000000,0.0000000,272.0000000); //object(ballypllr01_lvs) (1)
    CreateDynamicObject(1597,2097.5000000,-1584.7000000,15.0000000,0.0000000,0.0000000,0.0000000); //object(cntrlrsac1) (3)
    CreateDynamicObject(1597,2097.5000000,-1597.7000000,15.0000000,0.0000000,0.0000000,0.0000000); //object(cntrlrsac1) (4)
    CreateDynamicObject(3437,2097.5000000,-1591.2000000,18.4000000,0.0000000,0.0000000,272.0000000); //object(ballypllr01_lvs) (3)
    CreateDynamicObject(9131,2090.9000000,-1604.8000000,23.1000000,0.0000000,90.0000000,0.0000000); //object(shbbyhswall13_lvs) (34)
    CreateDynamicObject(9131,2089.6000000,-1604.8000000,20.1000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (35)
    CreateDynamicObject(9131,2089.6010000,-1604.8000000,20.1000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (36)
    CreateDynamicObject(9131,2089.6000000,-1604.8000000,22.3000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (37)
    CreateDynamicObject(9131,2091.7000000,-1604.8000000,22.3000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (38)
    CreateDynamicObject(9131,2090.9000000,-1604.8000000,21.5000000,0.0000000,90.0000000,0.0000000); //object(shbbyhswall13_lvs) (39)
    CreateDynamicObject(9131,2093.1000000,-1604.9000000,20.1000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (40)
    CreateDynamicObject(9131,2093.1000000,-1604.9000000,22.3000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (41)
    CreateDynamicObject(9131,2094.0000000,-1604.8000000,22.2000000,0.0000000,44.0000000,0.0000000); //object(shbbyhswall13_lvs) (42)
    CreateDynamicObject(9131,2093.8000000,-1605.0000000,21.3000000,0.0000000,137.9950000,0.0000000); //object(shbbyhswall13_lvs) (44)
    CreateDynamicObject(14467,2080.4000000,-1575.4000000,16.6000000,0.0000000,0.0000000,138.0000000); //object(carter_statue) (1)
    CreateDynamicObject(10281,2092.2000000,-1580.6000000,20.0000000,0.0000000,0.0000000,0.0000000); //object(michsign_sfe) (1)
    CreateDynamicObject(9131,2087.4000000,-1579.4000000,13.5000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (45)
    CreateDynamicObject(9131,2087.4000000,-1579.4000000,15.7000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (46)
    CreateDynamicObject(9131,2087.4000000,-1579.4000000,17.9000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (47)
    CreateDynamicObject(9131,2097.6000000,-1579.4000000,17.9000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (50)
    CreateDynamicObject(3499,2088.0000000,-1579.4000000,17.5000000,0.0000000,0.0000000,0.0000000); //object(wdpillar02_lvs) (1)
    CreateDynamicObject(3499,2096.8000000,-1579.4000000,17.5000000,0.0000000,0.0000000,0.0000000); //object(wdpillar02_lvs) (2)
    CreateDynamicObject(9131,2095.2000000,-1605.0000000,19.9000000,0.0000000,137.9940000,0.0000000); //object(shbbyhswall13_lvs) (51)
    CreateDynamicObject(11490,2069.5000000,-1571.5000000,12.4000000,0.0000000,0.0000000,90.0000000); //object(des_ranch) (1)
    CreateDynamicObject(11491,2080.5000000,-1571.5000000,13.9000000,0.0000000,0.0000000,90.0000000); //object(des_ranchbits1) (1)
    CreateDynamicObject(1701,2066.2000000,-1570.5000000,13.9000000,0.0000000,0.0000000,0.0000000); //object(kb_bed_test2) (1)
    CreateDynamicObject(1828,2068.1000000,-1571.0000000,13.9000000,0.0000000,0.0000000,0.0000000); //object(man_sdr_rug) (1)
    CreateDynamicObject(1829,2068.2000000,-1567.6000000,14.4000000,0.0000000,0.0000000,0.0000000); //object(man_safenew) (1)
    CreateDynamicObject(2099,2069.9000000,-1567.0000000,13.9000000,0.0000000,0.0000000,0.0000000); //object(med_hi_fi_1) (1)
    CreateDynamicObject(1723,2072.3000000,-1567.5000000,13.9000000,0.0000000,0.0000000,0.0000000); //object(mrk_seating1) (1)
    CreateDynamicObject(1723,2076.4000000,-1575.5000000,13.9000000,0.0000000,0.0000000,180.0000000); //object(mrk_seating1) (2)
    CreateDynamicObject(1723,2073.5000000,-1575.5000000,13.9000000,0.0000000,0.0000000,179.9950000); //object(mrk_seating1) (3)
    CreateDynamicObject(1723,2070.6000000,-1575.5000000,13.9000000,0.0000000,0.0000000,179.9950000); //object(mrk_seating1) (4)
    CreateDynamicObject(1723,2067.7000000,-1575.5000000,13.9000000,0.0000000,0.0000000,179.9950000); //object(mrk_seating1) (5)
    CreateDynamicObject(14791,2105.9000000,-1568.0000000,14.3000000,0.0000000,0.0000000,0.0000000); //object(a_vgsgymboxa) (1)


  //==================================[Objetos HQ FaTal DangeR]===================================================
    CreateObject(6300,-57.0000000,-1737.5996100,1.8000000,0.0000000,0.0000000,289.9900000); //maisimportantgoxotos
    CreateDynamicObject(1430,720.7000100,281.8999900,19.7000000,0.0000000,0.0000000,0.0000000); //object(cj_dump1_low01)(1)
    CreateDynamicObject(1430,2405.6999500,-1383.5999800,23.6000000,0.0000000,0.0000000,0.0000000); //object(cj_dump1_low01)(2)
    CreateDynamicObject(5191,31.2998000,-1695.2998000,4.0000000,0.0000000,0.0000000,109.9950000); //object(nwdkbridd_las2)(1)
    CreateDynamicObject(987,-14.0000000,-1701.6999500,11.9000000,0.0000000,0.0000000,200.0000000); //object(elecfence_bar)(1)
    CreateDynamicObject(987,-2.8000000,-1697.5999800,11.9000000,0.0000000,0.0000000,200.0000000); //object(elecfence_bar)(2)
    CreateDynamicObject(987,8.4000000,-1693.5000000,11.9000000,0.0000000,0.0000000,200.0000000); //object(elecfence_bar)(3)
    CreateDynamicObject(987,19.7000000,-1689.4000200,11.9000000,0.0000000,0.0000000,200.0000000); //object(elecfence_bar)(4)
    CreateDynamicObject(987,30.9000000,-1685.3000500,11.9000000,0.0000000,0.0000000,200.0000000); //object(elecfence_bar)(5)
    CreateDynamicObject(987,42.1000000,-1681.1999500,11.9000000,0.0000000,0.0000000,200.0000000); //object(elecfence_bar)(6)
    CreateDynamicObject(987,53.3000000,-1677.0999800,11.9000000,0.0000000,0.0000000,200.0000000); //object(elecfence_bar)(7)
    CreateDynamicObject(987,64.5000000,-1673.0000000,11.9000000,0.0000000,0.0000000,200.0000000); //object(elecfence_bar)(8)
    CreateDynamicObject(987,67.3000000,-1672.0000000,11.9000000,0.0000000,0.0000000,200.0000000); //object(elecfence_bar)(9)
    CreateDynamicObject(987,61.5000000,-1694.1999500,11.9000000,0.0000000,0.0000000,20.0000000); //object(elecfence_bar)(10)
    CreateDynamicObject(987,50.3000000,-1698.3000500,11.9000000,0.0000000,0.0000000,20.0000000); //object(elecfence_bar)(11)
    CreateDynamicObject(987,39.1000000,-1702.4000200,11.9000000,0.0000000,0.0000000,20.0000000); //object(elecfence_bar)(12)
    CreateDynamicObject(987,27.8000000,-1706.4000200,11.9000000,0.0000000,0.0000000,20.0000000); //object(elecfence_bar)(13)
    CreateDynamicObject(987,16.6000000,-1710.5000000,11.9000000,0.0000000,0.0000000,20.0000000); //object(elecfence_bar)(14)
    CreateDynamicObject(987,5.4000000,-1714.5999800,11.9000000,0.0000000,0.0000000,20.0000000); //object(elecfence_bar)(15)
    CreateDynamicObject(987,-5.8000000,-1718.6999500,11.9000000,0.0000000,0.0000000,20.0000000); //object(elecfence_bar)(16)
    CreateDynamicObject(987,-17.0000000,-1722.8000500,11.9000000,0.0000000,0.0000000,20.0000000); //object(elecfence_bar)(17)
    CreateDynamicObject(987,-22.6000000,-1724.9000200,11.9000000,0.0000000,0.0000000,20.0000000); //object(elecfence_bar)(18)
    CreateDynamicObject(3749,79.1000000,-1677.6999500,15.6000000,0.0000000,0.0000000,290.0000000); //object(clubgate01_lax)(1)
    CreateDynamicObject(3749,-29.0996100,-1717.0996100,15.5000000,0.0000000,0.0000000,289.9900000); //object(clubgate01_lax)(2)
    CreateDynamicObject(974,-35.8000000,-1709.1999500,12.6000000,0.0000000,0.0000000,20.0000000); //object(tall_fence)(1)
    CreateDynamicObject(974,-40.1000000,-1707.1999500,12.6000000,0.0000000,0.0000000,290.0000000); //object(tall_fence)(2)
    CreateDynamicObject(974,-40.4000000,-1706.3000500,12.6000000,0.0000000,0.0000000,290.0000000); //object(tall_fence)(3)
    CreateDynamicObject(974,-44.7000000,-1704.3000500,12.6000000,0.0000000,0.0000000,20.0000000); //object(tall_fence)(4)
    CreateDynamicObject(974,-51.0000000,-1706.5999800,12.6000000,0.0000000,0.0000000,20.0000000); //object(tall_fence)(5)
    CreateDynamicObject(974,-53.0000000,-1710.9000200,12.6000000,0.0000000,0.0000000,290.0000000); //object(tall_fence)(6)
    CreateDynamicObject(974,-52.6000000,-1712.0000000,12.6000000,0.0000000,0.0000000,290.0000000); //object(tall_fence)(7)
    CreateDynamicObject(974,-54.6000000,-1716.3000500,12.6000000,0.0000000,0.0000000,20.0000000); //object(tall_fence)(8)
    CreateDynamicObject(974,-57.1000000,-1717.1999500,12.6000000,0.0000000,0.0000000,20.0000000); //object(tall_fence)(9)
    CreateDynamicObject(974,-61.3000000,-1715.1999500,12.6000000,0.0000000,0.0000000,290.0000000); //object(tall_fence)(10)
    CreateDynamicObject(974,-62.8000000,-1711.1999500,12.6000000,0.0000000,0.0000000,290.0000000); //object(tall_fence)(11)
    CreateDynamicObject(974,-67.1000000,-1709.3000500,12.6000000,0.0000000,0.0000000,20.0000000); //object(tall_fence)(12)
    CreateDynamicObject(974,-73.3000000,-1711.5999800,12.6000000,0.0000000,0.0000000,20.0000000); //object(tall_fence)(13)
    CreateDynamicObject(974,-79.5000000,-1713.9000200,12.6000000,0.0000000,0.0000000,20.0000000); //object(tall_fence)(14)
    CreateDynamicObject(974,-85.7000000,-1716.0999800,12.6000000,0.0000000,0.0000000,20.0000000); //object(tall_fence)(15)
    CreateDynamicObject(974,-91.9000000,-1718.4000200,12.6000000,0.0000000,0.0000000,20.0000000); //object(tall_fence)(16)
    CreateDynamicObject(974,-98.1000000,-1720.5999800,12.6000000,0.0000000,0.0000000,20.0000000); //object(tall_fence)(17)
    CreateDynamicObject(974,-100.4000000,-1721.4000200,12.6000000,0.0000000,0.0000000,20.0000000); //object(tall_fence)(18)
    CreateDynamicObject(974,-46.4000000,-1766.0000000,12.6000000,0.0000000,0.0000000,20.0000000); //object(tall_fence)(19)
    CreateDynamicObject(974,-52.6000000,-1768.3000500,12.6000000,0.0000000,0.0000000,20.0000000); //object(tall_fence)(20)
    CreateDynamicObject(974,-58.9000000,-1770.5999800,12.6000000,0.0000000,0.0000000,20.0000000); //object(tall_fence)(21)
    CreateDynamicObject(974,-65.0000000,-1772.8000500,12.6000000,0.0000000,0.0000000,20.0000000); //object(tall_fence)(22)
    CreateDynamicObject(974,-71.2000000,-1775.0999800,12.6000000,0.0000000,0.0000000,19.9950000); //object(tall_fence)(23)
    CreateDynamicObject(974,-77.4000000,-1777.4000200,12.6000000,0.0000000,0.0000000,19.9900000); //object(tall_fence)(24)
    CreateDynamicObject(974,-79.7000000,-1778.1999500,12.6000000,0.0000000,0.0000000,20.0000000); //object(tall_fence)(25)
    CreateDynamicObject(974,-83.9000000,-1776.1999500,12.6000000,0.0000000,0.0000000,290.0000000); //object(tall_fence)(26)
    CreateDynamicObject(974,-86.1000000,-1770.0000000,12.6000000,0.0000000,0.0000000,290.0000000); //object(tall_fence)(27)
    CreateDynamicObject(974,-88.3000000,-1763.8000500,12.6000000,0.0000000,0.0000000,290.0000000); //object(tall_fence)(28)
    CreateDynamicObject(974,-90.6000000,-1757.5000000,12.6000000,0.0000000,0.0000000,290.0000000); //object(tall_fence)(29)
    CreateDynamicObject(974,-92.9000000,-1751.1999500,12.6000000,0.0000000,0.0000000,290.0000000); //object(tall_fence)(30)
    CreateDynamicObject(974,-95.2000000,-1745.0000000,12.6000000,0.0000000,0.0000000,290.0000000); //object(tall_fence)(31)
    CreateDynamicObject(974,-97.5000000,-1738.8000500,12.6000000,0.0000000,0.0000000,290.0000000); //object(tall_fence)(32)
    CreateDynamicObject(974,-99.8000000,-1732.5999800,12.6000000,0.0000000,0.0000000,290.0000000); //object(tall_fence)(33)
    CreateDynamicObject(974,-102.1000000,-1726.4000200,12.6000000,0.0000000,0.0000000,290.0000000); //object(tall_fence)(34)
    CreateDynamicObject(974,-102.4000000,-1725.5000000,12.6000000,0.0000000,0.0000000,290.0000000); //object(tall_fence)(35)
    CreateDynamicObject(974,-19.9000000,-1727.4000200,12.6000000,0.0000000,0.0000000,290.0000000); //object(tall_fence)(36)
    CreateDynamicObject(974,-15.3000000,-1739.9000200,12.6000000,0.0000000,0.0000000,290.0000000); //object(tall_fence)(37)
    CreateDynamicObject(974,-17.6000000,-1733.6999500,12.6000000,0.0000000,0.0000000,290.0000000); //object(tall_fence)(38)
    CreateDynamicObject(974,-44.3000000,-1761.8000500,12.6000000,0.0000000,0.0000000,289.9950000); //object(tall_fence)(39)
    CreateDynamicObject(974,-45.7000000,-1758.0000000,12.6000000,0.0000000,0.0000000,289.9950000); //object(tall_fence)(40)
    CreateDynamicObject(974,-43.7000000,-1753.6999500,12.6000000,0.0000000,0.0000000,19.9950000); //object(tall_fence)(41)
    CreateDynamicObject(974,-37.4000000,-1751.4000200,12.6000000,0.0000000,0.0000000,19.9950000); //object(tall_fence)(42)
    CreateDynamicObject(974,-31.1000000,-1749.0999800,12.6000000,0.0000000,0.0000000,19.9950000); //object(tall_fence)(43)
    CreateDynamicObject(974,-24.8000000,-1746.8000500,12.6000000,0.0000000,0.0000000,19.9950000); //object(tall_fence)(44)
    CreateDynamicObject(974,-18.5000000,-1744.5000000,12.6000000,0.0000000,0.0000000,19.9950000); //object(tall_fence)(45)
    CreateDynamicObject(974,-17.3000000,-1744.0999800,12.6000000,0.0000000,0.0000000,19.9950000); //object(tall_fence)(46)
    CreateDynamicObject(640,96.0000000,-1679.6999500,10.5000000,0.0000000,0.0000000,22.0000000); //object(kb_planter_bush2)(1)
    CreateDynamicObject(640,90.0000000,-1665.6999500,10.6000000,0.0000000,0.0000000,26.0000000); //object(kb_planter_bush2)(2)
    CreateDynamicObject(8503,-80.3000000,-1745.9000200,13.9000000,0.0000000,0.0000000,290.0000000); //object(shop08_lvs)(1)
    CreateDynamicObject(1300,-22.5000000,-1720.0000000,10.0000000,0.0000000,0.0000000,20.0000000); //object(bin1)(1)
    CreateDynamicObject(1227,-25.9000000,-1710.5000000,10.5000000,0.0000000,0.0000000,18.0000000); //object(dump1)(1)
    CreateDynamicObject(974,73.8000000,-1669.3000500,13.7000000,0.0000000,0.0000000,20.0000000); //object(tall_fence)(47)
    CreateDynamicObject(974,78.6000000,-1688.1999500,13.6000000,0.0000000,0.0000000,19.9950000); //object(tall_fence)(48)
    //PortaoFaTal DangeR2 = CreateDynamicObject(980,-28.8994100,-1717.0000000,12.5000000,0.0000000,0.0000000,289.9950000); //object(airportgate)(1)  portao 2 fechado
    PortaoFaTaL_ImperiuM1 = CreateDynamicObject(980,79.0996100,-1677.6992200,12.5000000,0.0000000,0.0000000,289.9900000); //object(airportgate)(4)




//==================================[Hospital BPG]=============================================================
    CreateDynamicObject(19379, 1716.53003, 1183.26001, 33.74000,   0.00000, -90.00000, 0.51000);
    CreateDynamicObject(19379, 1717.43994, 1173.72998, 37.23000,   0.00000, -90.00000, 359.97000);
    CreateDynamicObject(19379, 1706.17004, 1183.18994, 33.74000,   0.00000, -90.00000, 0.27000);
    CreateDynamicObject(19450, 1721.77002, 1173.71997, 35.55000,   0.00000, 0.00000, 0.51000);
    CreateDynamicObject(19388, 1710.28003, 1173.82996, 35.55000,   0.00000, 0.00000, 359.79001);
    CreateDynamicObject(19450, 1721.68005, 1183.05005, 35.55000,   0.00000, 0.00000, 0.51000);
    CreateDynamicObject(19450, 1717.06006, 1168.97998, 35.55000,   0.00000, 0.00000, 89.39000);
    CreateDynamicObject(19450, 1707.43994, 1169.07996, 35.55000,   0.00000, 0.00000, 89.49000);
    CreateDynamicObject(19358, 1710.29004, 1170.68005, 35.55000,   0.00000, 0.00000, 359.79001);
    CreateDynamicObject(19450, 1710.27002, 1180.18994, 35.55000,   0.00000, 0.00000, 0.21000);
    CreateDynamicObject(19450, 1713.76001, 1178.76001, 35.55000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(19388, 1720.06995, 1178.72998, 35.55000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(19450, 1705.47998, 1178.81006, 35.55000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(19450, 1702.75000, 1173.97998, 35.55000,   0.00000, 0.00000, 0.21000);
    CreateDynamicObject(1536, 1714.73999, 1169.06006, 33.83000,   0.00000, 0.00000, 359.29001);
    CreateDynamicObject(1536, 1717.73999, 1169.06006, 33.83000,   0.00000, 0.00000, 179.55000);
    CreateDynamicObject(1502, 1719.28003, 1178.69995, 33.83000,   0.00000, 0.00000, 359.79999);
    CreateDynamicObject(1502, 1710.28003, 1174.64001, 33.83000,   0.00000, 0.00000, 269.97000);
    CreateDynamicObject(1722, 1721.56995, 1170.17004, 33.73000,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(1722, 1721.54004, 1171.25000, 33.73000,   0.00000, 0.00000, 90.19000);
    CreateDynamicObject(1722, 1721.53003, 1172.41003, 33.73000,   0.00000, 0.00000, 90.19000);
    CreateDynamicObject(1722, 1721.50000, 1173.65002, 33.73000,   0.00000, 0.00000, 90.19000);
    CreateDynamicObject(1722, 1721.48999, 1174.89001, 33.73000,   0.00000, 0.00000, 90.19000);
    CreateDynamicObject(2029, 1710.93005, 1175.13000, 33.83000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2029, 1712.89001, 1175.13000, 33.83000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2029, 1714.84998, 1175.12000, 33.83000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2029, 1716.82996, 1175.10999, 33.83000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2204, 1710.89001, 1178.53003, 33.83000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2204, 1713.82996, 1178.56006, 33.83000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1715, 1711.47998, 1176.51001, 33.83000,   0.00000, 0.00000, 359.59000);
    CreateDynamicObject(1715, 1713.48999, 1176.46997, 33.83000,   0.00000, 0.00000, 359.59000);
    CreateDynamicObject(1715, 1715.37000, 1176.48999, 33.83000,   0.00000, 0.00000, 359.59000);
    CreateDynamicObject(1715, 1717.40002, 1176.40002, 33.83000,   0.00000, 0.00000, 359.59000);
    CreateDynamicObject(2184, 1709.56995, 1170.04004, 33.83000,   0.00000, 0.00000, 94.00000);
    CreateDynamicObject(2184, 1706.12000, 1169.96997, 33.83000,   0.00000, 0.00000, 94.00000);
    CreateDynamicObject(1715, 1707.43005, 1170.92004, 33.83000,   0.00000, 0.00000, 89.01000);
    CreateDynamicObject(1715, 1704.06006, 1170.92004, 33.83000,   0.00000, 0.00000, 89.01000);
    CreateDynamicObject(2184, 1709.18994, 1175.81995, 33.83000,   0.00000, 0.00000, 94.00000);
    CreateDynamicObject(1715, 1707.28003, 1176.81006, 33.83000,   0.00000, 0.00000, 89.01000);
    CreateDynamicObject(2184, 1706.00000, 1175.85999, 33.83000,   0.00000, 0.00000, 94.00000);
    CreateDynamicObject(1715, 1703.93994, 1176.94995, 33.83000,   0.00000, 0.00000, 89.01000);
    CreateDynamicObject(19450, 1710.23999, 1189.75000, 35.55000,   0.00000, 0.00000, 0.21000);
    CreateDynamicObject(19379, 1716.39001, 1192.81995, 37.23000,   0.00000, -90.00000, 0.10000);
    CreateDynamicObject(19379, 1706.31006, 1192.69995, 33.74000,   0.00000, -90.00000, 0.51000);
    CreateDynamicObject(19450, 1713.71997, 1194.54004, 35.55000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(19388, 1720.12000, 1194.52002, 35.55000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(19450, 1721.59998, 1192.59998, 35.55000,   0.00000, 0.00000, 0.51000);
    CreateDynamicObject(19404, 1719.21997, 1180.39001, 35.55000,   0.00000, 0.00000, 359.79999);
    CreateDynamicObject(19404, 1719.22998, 1183.54004, 35.55000,   0.00000, 0.00000, 359.79999);
    CreateDynamicObject(19404, 1719.23999, 1186.73999, 35.55000,   0.00000, 0.00000, 359.79999);
    CreateDynamicObject(19404, 1719.29456, 1193.13550, 35.55000,   0.00000, 0.00000, 359.79999);
    CreateDynamicObject(19325, 1719.31006, 1182.45996, 35.15000,   0.00000, 0.00000, 359.79999);
    CreateDynamicObject(1723, 1718.68005, 1191.00000, 33.83000,   0.00000, 0.00000, 269.29999);
    CreateDynamicObject(1723, 1718.66003, 1187.02002, 33.83000,   0.00000, 0.00000, 269.29999);
    CreateDynamicObject(1723, 1718.58997, 1182.71997, 33.83000,   0.00000, 0.00000, 269.29999);
    CreateDynamicObject(19379, 1716.41003, 1202.51001, 33.74000,   0.00000, -90.00000, 0.51000);
    CreateDynamicObject(19450, 1721.52002, 1202.20996, 35.55000,   0.00000, 0.00000, 0.51000);
    CreateDynamicObject(19450, 1713.59998, 1197.35999, 35.55000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(19388, 1719.98999, 1197.33997, 35.55000,   0.00000, 0.00000, 90.01000);
    CreateDynamicObject(19379, 1705.92004, 1202.16003, 33.74000,   0.00000, -90.00000, 0.51000);
    CreateDynamicObject(19450, 1708.84998, 1202.14001, 35.55000,   0.00000, 0.00000, 0.31000);
    CreateDynamicObject(19450, 1713.58997, 1206.90002, 35.55000,   0.00000, 0.00000, 90.71000);
    CreateDynamicObject(19450, 1716.68994, 1206.93994, 35.55000,   0.00000, 0.00000, 90.71000);
    CreateDynamicObject(19388, 1707.30005, 1194.56995, 35.55000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(1723, 1720.90002, 1201.09998, 33.83000,   0.00000, 0.00000, 270.12000);
    CreateDynamicObject(1723, 1720.89001, 1204.90002, 33.83000,   0.00000, 0.00000, 270.12000);
    CreateDynamicObject(1723, 1709.56006, 1199.29004, 33.83000,   0.00000, 0.00000, 90.51000);
    CreateDynamicObject(1723, 1709.53003, 1203.28003, 33.83000,   0.00000, 0.00000, 90.51000);
    CreateDynamicObject(1723, 1713.17004, 1198.09998, 33.83000,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(1723, 1717.62000, 1198.09998, 33.83000,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(1723, 1710.97998, 1206.22998, 33.83000,   0.00000, 0.00000, 1.03000);
    CreateDynamicObject(1723, 1714.85999, 1206.25000, 33.83000,   0.00000, 0.00000, 1.03000);
    CreateDynamicObject(1723, 1718.71997, 1206.33997, 33.83000,   0.00000, 0.00000, 1.03000);
    CreateDynamicObject(19450, 1701.41003, 1194.60999, 35.55000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(19450, 1700.90002, 1189.78003, 35.55000,   0.00000, 0.00000, 0.21000);
    CreateDynamicObject(19450, 1700.92004, 1183.64001, 35.55000,   0.00000, 0.00000, 0.21000);
    CreateDynamicObject(1502, 1719.33997, 1194.53003, 33.83000,   0.00000, 0.00000, 359.79999);
    CreateDynamicObject(1502, 1719.18994, 1197.31006, 33.83000,   0.00000, 0.00000, 359.79999);
    CreateDynamicObject(1502, 1706.53003, 1194.52002, 33.83000,   0.00000, 0.00000, 359.79999);
    CreateDynamicObject(19388, 1707.21997, 1197.39001, 35.55000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(19450, 1701.45996, 1197.43005, 35.55000,   0.00000, 0.00000, 89.63000);
    CreateDynamicObject(19450, 1700.78003, 1202.21997, 35.55000,   0.00000, 0.00000, 0.31000);
    CreateDynamicObject(19450, 1704.28003, 1206.83997, 35.55000,   0.00000, 0.00000, 90.13000);
    CreateDynamicObject(1502, 1706.42004, 1197.38000, 33.83000,   0.00000, 0.00000, 359.79999);
    CreateDynamicObject(2206, 1702.00000, 1205.19995, 33.83000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2206, 1705.81006, 1205.21997, 33.83000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2206, 1705.78003, 1202.56006, 33.83000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2206, 1705.73999, 1200.18005, 33.83000,   0.00000, 0.00000, -0.12000);
    CreateDynamicObject(2206, 1701.98999, 1202.56006, 33.83000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2206, 1701.91003, 1200.18005, 33.83000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1714, 1702.90002, 1203.93005, 33.83000,   0.00000, 0.00000, 181.11000);
    CreateDynamicObject(1714, 1702.93994, 1201.55005, 33.83000,   0.00000, 0.00000, 181.11000);
    CreateDynamicObject(1714, 1702.79004, 1199.13000, 33.83000,   0.00000, 0.00000, 181.11000);
    CreateDynamicObject(1714, 1706.56006, 1199.06006, 33.83000,   0.00000, 0.00000, 181.11000);
    CreateDynamicObject(1714, 1706.66003, 1201.43994, 33.83000,   0.00000, 0.00000, 181.11000);
    CreateDynamicObject(1714, 1706.79004, 1204.06006, 33.83000,   0.00000, 0.00000, 181.11000);
    CreateDynamicObject(2204, 1706.06995, 1197.68005, 33.83000,   0.00000, 0.00000, 178.94000);
    CreateDynamicObject(2204, 1703.31006, 1197.69995, 33.83000,   0.00000, 0.00000, 178.94000);
    CreateDynamicObject(2241, 1709.66003, 1198.08997, 34.23000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2241, 1714.37000, 1198.08997, 34.23000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2241, 1709.51001, 1202.30005, 34.23000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2241, 1709.53003, 1206.28003, 34.23000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2241, 1713.87000, 1206.25000, 34.23000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2241, 1717.83997, 1206.30005, 34.23000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2241, 1720.96997, 1198.09998, 34.23000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2241, 1720.91003, 1202.02002, 34.23000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2256, 1718.35999, 1206.78003, 36.09000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2256, 1712.35999, 1206.67004, 36.09000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2258, 1706.77002, 1206.73999, 36.09000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2258, 1703.41003, 1206.68005, 36.09000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2146, 1702.38000, 1193.22998, 34.23000,   0.00000, 0.00000, 90.29000);
    CreateDynamicObject(2146, 1702.33997, 1190.98999, 34.23000,   0.00000, 0.00000, 90.29000);
    CreateDynamicObject(2146, 1702.31995, 1188.57996, 34.23000,   0.00000, 0.00000, 90.29000);
    CreateDynamicObject(2146, 1702.32996, 1186.27002, 34.23000,   0.00000, 0.00000, 90.29000);
    CreateDynamicObject(2146, 1702.34998, 1184.06995, 34.23000,   0.00000, 0.00000, 90.29000);
    CreateDynamicObject(2146, 1702.32996, 1182.02002, 34.23000,   0.00000, 0.00000, 90.29000);
    CreateDynamicObject(2146, 1702.39001, 1179.97998, 34.23000,   0.00000, 0.00000, 90.29000);
    CreateDynamicObject(2204, 1716.81995, 1178.55005, 33.83000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19388, 1696.67004, 1196.17004, 35.55000,   0.00000, 0.00000, 359.79001);
    CreateDynamicObject(19379, 1696.03003, 1193.01001, 33.74000,   0.00000, -90.00000, 0.51000);
    CreateDynamicObject(19450, 1692.13000, 1194.66003, 35.55000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(19388, 1685.78003, 1194.68994, 35.55000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(19379, 1685.83997, 1192.79004, 33.74000,   0.00000, -90.00000, 0.51000);
    CreateDynamicObject(19450, 1684.29004, 1189.85999, 35.55000,   0.00000, 0.00000, 0.21000);
    CreateDynamicObject(19379, 1685.38000, 1183.20996, 33.74000,   0.00000, -90.00000, 0.51000);
    CreateDynamicObject(19379, 1695.93994, 1183.54004, 33.74000,   0.00000, -90.00000, 0.51000);
    CreateDynamicObject(19450, 1695.94995, 1178.87000, 35.55000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(19450, 1686.77002, 1178.91003, 35.55000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(19450, 1684.30005, 1182.27002, 35.55000,   0.00000, 0.00000, 0.21000);
    CreateDynamicObject(2455, 1687.21997, 1194.15002, 33.83000,   0.00000, 0.00000, 271.10001);
    CreateDynamicObject(2454, 1687.28003, 1190.50000, 33.83000,   0.00000, 0.00000, 270.26001);
    CreateDynamicObject(2455, 1687.22998, 1193.23999, 33.83000,   0.00000, 0.00000, 271.10001);
    CreateDynamicObject(2455, 1687.23999, 1192.31995, 33.83000,   0.00000, 0.00000, 271.10001);
    CreateDynamicObject(2455, 1688.37000, 1190.34998, 33.83000,   0.00000, 0.00000, 359.50000);
    CreateDynamicObject(2455, 1689.30005, 1190.34998, 33.83000,   0.00000, 0.00000, 359.89999);
    CreateDynamicObject(2455, 1690.20996, 1190.34998, 33.83000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2455, 1691.13000, 1190.34998, 33.83000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2455, 1692.04004, 1190.34998, 33.83000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2455, 1692.93994, 1190.34998, 33.83000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2416, 1688.95996, 1192.00000, 33.83000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2416, 1691.81006, 1191.94995, 33.83000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2455, 1687.26001, 1191.42004, 33.83000,   0.00000, 0.00000, 271.10001);
    CreateDynamicObject(2455, 1693.85999, 1190.34998, 33.83000,   0.00000, 0.00000, -0.24000);
    CreateDynamicObject(2416, 1694.64001, 1191.93994, 33.83000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2416, 1697.46997, 1191.93005, 33.83000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2455, 1694.78003, 1190.34998, 33.83000,   0.00000, 0.00000, -0.24000);
    CreateDynamicObject(2455, 1695.69995, 1190.34998, 33.83000,   0.00000, 0.00000, -0.24000);
    CreateDynamicObject(2455, 1696.62000, 1190.34998, 33.83000,   0.00000, 0.00000, -0.24000);
    CreateDynamicObject(2455, 1697.54004, 1190.34998, 33.83000,   0.00000, 0.00000, -0.24000);
    CreateDynamicObject(2455, 1698.45996, 1190.34998, 33.83000,   0.00000, 0.00000, -0.24000);
    CreateDynamicObject(2455, 1699.28003, 1190.33997, 33.83000,   0.00000, 0.00000, -0.24000);
    CreateDynamicObject(1502, 1699.39001, 1190.16003, 32.29000,   0.00000, 0.00000, 0.31000);
    CreateDynamicObject(2764, 1698.85999, 1187.56995, 34.14000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2788, 1700.06995, 1187.59998, 34.23000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2448, 1689.98999, 1194.32996, 33.83000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1775, 1700.20996, 1194.04004, 34.82000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1776, 1692.64001, 1194.26001, 34.82000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1775, 1688.72998, 1194.13000, 34.82000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2738, 1680.89001, 1198.87000, 34.43000,   0.00000, 0.00000, 89.70000);
    CreateDynamicObject(2419, 1693.81006, 1193.87000, 33.83000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2451, 1695.79004, 1193.91003, 33.83000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2415, 1697.87000, 1193.62000, 33.83000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2415, 1698.98999, 1193.65002, 33.83000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2764, 1698.78003, 1184.34998, 34.14000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2764, 1698.93005, 1180.98999, 34.14000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2764, 1694.23999, 1187.43994, 34.14000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2764, 1694.23999, 1184.33997, 34.14000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2764, 1694.26001, 1181.05005, 34.14000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2764, 1690.43005, 1187.55005, 34.14000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2764, 1686.59998, 1181.00000, 34.14000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2764, 1690.34998, 1184.34998, 34.14000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2764, 1690.27002, 1181.14001, 34.14000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2764, 1686.52002, 1184.33997, 34.14000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2764, 1686.70996, 1187.68005, 34.14000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2788, 1700.16003, 1184.23999, 34.23000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2788, 1700.16003, 1180.83997, 34.23000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2788, 1695.33997, 1181.01001, 34.23000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2788, 1695.21997, 1184.37000, 34.23000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2788, 1695.16003, 1187.56995, 34.23000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2788, 1691.50000, 1187.67004, 34.23000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2788, 1691.42004, 1184.32996, 34.23000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2788, 1691.51001, 1180.98999, 34.23000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2788, 1687.80005, 1181.01001, 34.23000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2788, 1687.72998, 1184.39001, 34.23000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2788, 1687.87000, 1187.81006, 34.23000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2788, 1697.92004, 1187.65002, 34.23000,   0.00000, 0.00000, 180.42999);
    CreateDynamicObject(2788, 1697.79004, 1184.30005, 34.23000,   0.00000, 0.00000, 180.42999);
    CreateDynamicObject(2788, 1697.81995, 1180.88000, 34.23000,   0.00000, 0.00000, 180.42999);
    CreateDynamicObject(2788, 1693.32996, 1180.96997, 34.23000,   0.00000, 0.00000, 180.42999);
    CreateDynamicObject(2788, 1693.12000, 1184.41003, 34.23000,   0.00000, 0.00000, 180.42999);
    CreateDynamicObject(2788, 1693.07996, 1187.56995, 34.23000,   0.00000, 0.00000, 180.42999);
    CreateDynamicObject(2788, 1689.50000, 1187.57996, 34.23000,   0.00000, 0.00000, 180.42999);
    CreateDynamicObject(2788, 1689.35999, 1184.38000, 34.23000,   0.00000, 0.00000, 180.42999);
    CreateDynamicObject(2788, 1689.27002, 1180.93005, 34.23000,   0.00000, 0.00000, 180.42999);
    CreateDynamicObject(2788, 1685.69995, 1180.98999, 34.23000,   0.00000, 0.00000, 180.42999);
    CreateDynamicObject(2788, 1685.71997, 1184.43994, 34.23000,   0.00000, 0.00000, 180.42999);
    CreateDynamicObject(2788, 1685.79004, 1187.60999, 34.23000,   0.00000, 0.00000, 180.42999);
    CreateDynamicObject(19450, 1695.97998, 1197.70996, 35.55000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(19450, 1683.25000, 1197.79004, 35.55000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(19388, 1689.64001, 1197.75000, 35.55000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(19379, 1695.62000, 1202.44995, 37.23000,   0.00000, -90.00000, 0.51000);
    CreateDynamicObject(19379, 1685.17004, 1202.45996, 33.74000,   0.00000, -90.00000, 0.21000);
    CreateDynamicObject(19450, 1684.28003, 1193.03003, 35.55000,   0.00000, 0.00000, 0.21000);
    CreateDynamicObject(19450, 1691.54004, 1205.65002, 35.55000,   0.00000, 0.00000, 359.60001);
    CreateDynamicObject(19388, 1691.50000, 1199.39001, 35.55000,   0.00000, 0.00000, 359.79001);
    CreateDynamicObject(19388, 1688.31006, 1199.43994, 35.55000,   0.00000, 0.00000, 359.79001);
    CreateDynamicObject(19450, 1688.32996, 1205.58997, 35.55000,   0.00000, 0.00000, 359.91000);
    CreateDynamicObject(19450, 1694.65002, 1206.85999, 35.55000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(19450, 1685.13000, 1206.92004, 35.55000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(19450, 1680.35999, 1202.18994, 35.55000,   0.00000, 0.00000, 0.11000);
    CreateDynamicObject(19435, 1681.33997, 1199.53003, 34.53000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(1523, 1682.12000, 1198.01001, 33.73000,   0.00000, 0.00000, 89.59000);
    CreateDynamicObject(19435, 1681.32996, 1198.06995, 34.54000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(2738, 1680.87000, 1200.39001, 34.43000,   0.00000, 0.00000, 89.70000);
    CreateDynamicObject(19435, 1681.31006, 1201.15002, 34.51000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(1523, 1682.14001, 1199.60999, 33.73000,   0.00000, 0.00000, 89.59000);
    CreateDynamicObject(2738, 1680.78003, 1202.00000, 34.43000,   0.00000, 0.00000, 89.70000);
    CreateDynamicObject(19435, 1681.31006, 1202.70996, 34.53000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(1523, 1682.13000, 1201.17004, 33.73000,   0.00000, 0.00000, 89.59000);
    CreateDynamicObject(2738, 1680.78003, 1203.62000, 34.43000,   0.00000, 0.00000, 89.70000);
    CreateDynamicObject(19435, 1681.27002, 1204.27002, 34.54000,   0.00000, 0.00000, 89.63000);
    CreateDynamicObject(1523, 1682.12000, 1202.68994, 33.73000,   0.00000, 0.00000, 89.59000);
    CreateDynamicObject(19435, 1681.29004, 1205.79004, 34.54000,   0.00000, 0.00000, 89.63000);
    CreateDynamicObject(1523, 1682.13000, 1204.22998, 33.73000,   0.00000, 0.00000, 89.35000);
    CreateDynamicObject(2738, 1680.75000, 1205.04004, 34.43000,   0.00000, 0.00000, 89.70000);
    CreateDynamicObject(19435, 1687.48999, 1200.29004, 33.09000,   0.00000, 0.00000, 89.80000);
    CreateDynamicObject(19435, 1686.76001, 1205.48999, 34.08000,   90.00000, 0.00000, 180.00000);
    CreateDynamicObject(19435, 1686.75000, 1202.00000, 34.08000,   90.00000, 0.00000, 180.00000);
    CreateDynamicObject(19435, 1687.50000, 1202.03003, 34.85000,   0.00000, -91.00000, 89.87000);
    CreateDynamicObject(19435, 1687.47998, 1205.51001, 34.85000,   0.00000, -89.00000, 90.30000);
    CreateDynamicObject(2515, 1687.96997, 1205.54004, 35.15000,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(2515, 1687.93005, 1203.34998, 35.15000,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(2515, 1687.92004, 1201.04004, 35.15000,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(2741, 1688.17004, 1205.46997, 36.39000,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(2741, 1688.13000, 1203.20996, 36.39000,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(2741, 1688.15002, 1200.96997, 36.39000,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(19435, 1700.02002, 1197.89001, 34.53000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(1523, 1699.25000, 1197.87000, 33.73000,   0.00000, 0.00000, 89.59000);
    CreateDynamicObject(19435, 1700.06006, 1199.45996, 34.53000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(1523, 1699.28003, 1199.40002, 33.73000,   0.00000, 0.00000, 89.59000);
    CreateDynamicObject(19435, 1700.01001, 1200.90002, 34.53000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(1523, 1699.27002, 1200.92004, 33.73000,   0.00000, 0.00000, 89.59000);
    CreateDynamicObject(19435, 1700.02002, 1202.44995, 34.53000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(1523, 1699.25000, 1202.42004, 33.73000,   0.00000, 0.00000, 89.59000);
    CreateDynamicObject(19435, 1700.01001, 1203.89001, 34.53000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(19435, 1699.97998, 1205.39001, 34.53000,   0.00000, 0.00000, 89.69000);
    CreateDynamicObject(1523, 1699.22998, 1203.89001, 33.73000,   0.00000, 0.00000, 89.59000);
    CreateDynamicObject(2738, 1700.26001, 1198.68005, 34.43000,   0.00000, 0.00000, 269.00000);
    CreateDynamicObject(2738, 1700.28003, 1200.34998, 34.43000,   0.00000, 0.00000, 271.54001);
    CreateDynamicObject(2738, 1700.29004, 1201.73999, 34.43000,   0.00000, 0.00000, 271.54001);
    CreateDynamicObject(2738, 1700.31006, 1203.20996, 34.43000,   0.00000, 0.00000, 271.54001);
    CreateDynamicObject(2738, 1700.22998, 1204.72998, 34.43000,   0.00000, 0.00000, 271.54001);
    CreateDynamicObject(19435, 1692.37000, 1200.28003, 33.09000,   0.00000, 0.00000, 89.80000);
    CreateDynamicObject(19435, 1693.13000, 1201.96997, 34.08000,   90.00000, 0.00000, 180.00000);
    CreateDynamicObject(19435, 1693.13000, 1205.35999, 34.08000,   90.00000, 0.00000, 179.89000);
    CreateDynamicObject(19435, 1692.37000, 1205.42004, 34.85000,   0.00000, -90.00000, 90.00000);
    CreateDynamicObject(19435, 1692.37000, 1201.93994, 34.85000,   0.00000, -90.00000, 90.00000);
    CreateDynamicObject(2515, 1691.81995, 1201.46997, 35.15000,   0.00000, 0.00000, 89.00000);
    CreateDynamicObject(2515, 1691.81006, 1203.50000, 35.15000,   0.00000, 0.00000, 89.00000);
    CreateDynamicObject(2515, 1691.90002, 1205.85999, 35.15000,   0.00000, 0.00000, 89.00000);
    CreateDynamicObject(2741, 1691.67004, 1201.56006, 36.39000,   0.00000, 0.00000, 89.00000);
    CreateDynamicObject(2741, 1691.70996, 1203.52002, 36.39000,   0.00000, 0.00000, 89.00000);
    CreateDynamicObject(2741, 1691.68994, 1205.85999, 36.39000,   0.00000, 0.00000, 89.00000);
    CreateDynamicObject(1523, 1691.50000, 1198.58997, 33.73000,   0.00000, 0.00000, 89.59000);
    CreateDynamicObject(1523, 1688.40002, 1198.65002, 33.73000,   0.00000, 0.00000, 89.59000);
    CreateDynamicObject(1502, 1696.66003, 1196.95996, 33.83000,   0.00000, 0.00000, 269.97000);
    CreateDynamicObject(1502, 1685.00000, 1194.67004, 33.83000,   0.00000, 0.00000, 359.79999);
    CreateDynamicObject(1502, 1688.85999, 1197.71997, 33.83000,   0.00000, 0.00000, 360.04001);
    CreateDynamicObject(19379, 1706.18005, 1173.66003, 33.74000,   0.00000, -90.00000, 0.27000);
    CreateDynamicObject(19379, 1716.65002, 1173.68005, 33.74000,   0.00000, -90.00000, 0.27000);
    CreateDynamicObject(19379, 1706.96997, 1173.75000, 37.23000,   0.00000, -90.00000, 359.76999);
    CreateDynamicObject(19379, 1716.32996, 1202.38000, 37.23000,   0.00000, -90.00000, -0.05000);
    CreateDynamicObject(19379, 1705.91003, 1202.33997, 37.23000,   0.00000, -90.00000, -0.05000);
    CreateDynamicObject(19379, 1685.64001, 1183.53003, 37.23000,   0.00000, -90.00000, 0.02000);
    CreateDynamicObject(19379, 1685.31006, 1202.38000, 37.23000,   0.00000, -90.00000, 0.02000);
    CreateDynamicObject(2146, 1708.78003, 1179.80005, 34.23000,   0.00000, 0.00000, 90.29000);
    CreateDynamicObject(2146, 1708.78003, 1181.66003, 34.23000,   0.00000, 0.00000, 90.29000);
    CreateDynamicObject(2146, 1708.77002, 1183.58997, 34.23000,   0.00000, 0.00000, 90.29000);
    CreateDynamicObject(2146, 1708.90002, 1185.46997, 34.23000,   0.00000, 0.00000, 90.29000);
    CreateDynamicObject(2146, 1708.82996, 1187.35999, 34.23000,   0.00000, 0.00000, 90.29000);
    CreateDynamicObject(2146, 1708.76001, 1189.27002, 34.23000,   0.00000, 0.00000, 90.23000);
    CreateDynamicObject(2146, 1708.77002, 1190.93005, 34.23000,   0.00000, 0.00000, 90.23000);
    CreateDynamicObject(2146, 1708.78003, 1193.07996, 34.23000,   0.00000, 0.00000, 90.35000);
    CreateDynamicObject(19379, 1716.48999, 1192.89001, 33.74000,   0.00000, -90.00000, 0.51000);
    CreateDynamicObject(19379, 1716.44995, 1183.19995, 37.23000,   0.00000, -90.00000, 0.21000);
    CreateDynamicObject(19379, 1695.64001, 1202.58997, 33.74000,   0.00000, -90.00000, 0.51000);
    CreateDynamicObject(19379, 1706.02002, 1192.87000, 37.23000,   0.00000, -90.00000, 0.51000);
    CreateDynamicObject(19379, 1706.10999, 1183.38000, 37.23000,   0.00000, -90.00000, 0.51000);
    CreateDynamicObject(19379, 1695.96997, 1183.29004, 37.23000,   0.00000, -90.00000, 0.51000);
    CreateDynamicObject(19379, 1695.78003, 1192.83997, 37.23000,   0.00000, -90.00000, 0.51000);
    CreateDynamicObject(19379, 1685.44995, 1192.89001, 37.23000,   0.00000, -90.00000, 0.51000);
    CreateDynamicObject(19325, 1719.24609, 1191.25781, 35.15000,   0.00000, 0.00000, 359.70001);
    CreateDynamicObject(19404, 1719.25000, 1189.92004, 35.55000,   0.00000, 0.00000, 359.79999);
    CreateDynamicObject(19325, 1719.31995, 1188.42004, 35.15000,   0.00000, 0.00000, 359.70001);
                     /*macas*/
    CreateObject(2146, 1711.80, 1181.77, 34.23,   0.00, 0.00, 90.29);
    CreateObject(2146, 1711.77, 1183.67, 34.23,   0.00, 0.00, 90.29);
    CreateObject(2146, 1711.83, 1185.44, 34.23,   0.00, 0.00, 90.29);
    CreateObject(2146, 1711.74, 1187.38, 34.23,   0.00, 0.00, 90.29);
    CreateObject(2146, 1711.73, 1189.18, 34.23,   0.00, 0.00, 90.29);
    CreateObject(2146, 1711.73, 1191.04, 34.23,   0.00, 0.00, 90.29);
    CreateObject(2146, 1711.66, 1193.00, 34.23,   0.00, 0.00, 90.29);
    CreateObject(2146, 1711.79, 1179.88, 34.23,   0.00, 0.00, 90.29);


    //=====================================[Objetos Snake]===============================================================
    CreateDynamicObject(5191,2933.30004883,-1963.59997559,4.40000010,0.00000000,0.00000000,267.99499512); //object(nwdkbridd_las2) (1)
    CreateObject(6300,3030.89990234,-1957.50000000,2.09999990,0.00000000,0.00000000,87.98950195); //object(pier04_law2) (2)
    CreateDynamicObject(974,3065.30004883,-1989.09997559,12.89999962,0.00000000,0.00000000,357.99499512); //object(tall_fence) (1)
    CreateDynamicObject(974,3058.69995117,-1988.90002441,12.89999962,0.00000000,0.00000000,357.99499512); //object(tall_fence) (2)
    CreateDynamicObject(974,3052.10009766,-1988.59997559,12.89999962,0.00000000,0.00000000,357.99499512); //object(tall_fence) (3)
    CreateDynamicObject(974,3045.39990234,-1988.40002441,12.89999962,0.00000000,0.00000000,357.99499512); //object(tall_fence) (4)
    CreateDynamicObject(974,3038.69995117,-1988.19995117,12.89999962,0.00000000,0.00000000,357.99499512); //object(tall_fence) (5)
    CreateDynamicObject(974,3029.60009766,-1987.80004883,12.89999962,0.00000000,0.00000000,357.99499512); //object(tall_fence) (6)
    CreateDynamicObject(974,3035.39990234,-1988.00000000,12.89999962,0.00000000,0.00000000,357.99499512); //object(tall_fence) (7)
    CreateDynamicObject(974,3026.39990234,-1984.30004883,12.89999962,0.00000000,0.00000000,267.99499512); //object(tall_fence) (8)
    CreateDynamicObject(974,3026.50000000,-1980.19995117,12.89999962,0.00000000,0.00000000,87.99499512); //object(tall_fence) (9)
    CreateDynamicObject(974,2998.19995117,-1975.90002441,12.89999962,0.00000000,0.00000000,357.99499512); //object(tall_fence) (10)
    CreateDynamicObject(974,3000.80004883,-1976.00000000,12.89999962,0.00000000,0.00000000,357.99499512); //object(tall_fence) (11)
    CreateDynamicObject(974,3004.00000000,-1979.40002441,12.89999962,0.00000000,0.00000000,87.99499512); //object(tall_fence) (12)
    CreateDynamicObject(974,3004.00000000,-1980.50000000,12.89999962,0.00000000,0.00000000,87.99499512); //object(tall_fence) (13)
    CreateDynamicObject(974,3007.19995117,-1984.00000000,12.89999962,0.00000000,0.00000000,357.99499512); //object(tall_fence) (14)
    CreateDynamicObject(974,3013.89990234,-1984.19995117,12.89999962,0.00000000,0.00000000,357.99499512); //object(tall_fence) (15)
    CreateDynamicObject(974,3017.30004883,-1981.00000000,12.89999962,0.00000000,0.00000000,87.99499512); //object(tall_fence) (16)
    CreateDynamicObject(974,3017.30004883,-1979.80004883,12.89999962,0.00000000,0.00000000,87.99499512); //object(tall_fence) (17)
    CreateDynamicObject(974,3023.39990234,-1976.69995117,12.89999962,0.00000000,0.00000000,357.99499512); //object(tall_fence) (18)
    CreateDynamicObject(974,3020.69995117,-1976.59997559,12.89999962,0.00000000,0.00000000,357.99499512); //object(tall_fence) (19)
    CreateDynamicObject(974,3068.69995117,-1985.90002441,12.89999962,0.00000000,0.00000000,87.99499512); //object(tall_fence) (21)
    CreateDynamicObject(974,3068.89990234,-1979.30004883,12.89999962,0.00000000,0.00000000,87.99499512); //object(tall_fence) (22)
    CreateDynamicObject(974,3069.10009766,-1972.69995117,12.89999962,0.00000000,0.00000000,87.99499512); //object(tall_fence) (23)
    CreateDynamicObject(974,3069.30004883,-1966.00000000,12.89999962,0.00000000,0.00000000,87.99499512); //object(tall_fence) (25)
    CreateDynamicObject(974,3069.50000000,-1959.40002441,12.89999962,0.00000000,0.00000000,87.99499512); //object(tall_fence) (26)
    CreateDynamicObject(974,3069.69995117,-1952.69995117,12.89999962,0.00000000,0.00000000,87.99499512); //object(tall_fence) (27)
    CreateDynamicObject(974,3069.89990234,-1946.00000000,12.89999962,0.00000000,0.00000000,87.99499512); //object(tall_fence) (28)
    CreateDynamicObject(974,3070.10009766,-1939.30004883,12.89999962,0.00000000,0.00000000,87.99499512); //object(tall_fence) (29)
    CreateDynamicObject(974,3070.39990234,-1931.80004883,12.89999962,0.00000000,0.00000000,87.99499512); //object(tall_fence) (30)
    CreateDynamicObject(974,3070.30004883,-1936.00000000,12.89999962,0.00000000,0.00000000,87.99499512); //object(tall_fence) (31)
    CreateDynamicObject(974,3067.19995117,-1928.40002441,12.89999962,0.00000000,0.00000000,357.99499512); //object(tall_fence) (32)
    CreateDynamicObject(974,3060.50000000,-1928.19995117,12.89999962,0.00000000,0.00000000,357.99499512); //object(tall_fence) (33)
    CreateDynamicObject(974,3053.80004883,-1928.00000000,12.89999962,0.00000000,0.00000000,357.99499512); //object(tall_fence) (34)
    CreateDynamicObject(974,3047.10009766,-1927.69995117,12.89999962,0.00000000,0.00000000,357.99499512); //object(tall_fence) (35)
    CreateDynamicObject(974,3040.50000000,-1927.50000000,12.89999962,0.00000000,0.00000000,357.99499512); //object(tall_fence) (36)
    CreateDynamicObject(974,3033.80004883,-1927.30004883,12.89999962,0.00000000,0.00000000,357.99499512); //object(tall_fence) (37)
    CreateDynamicObject(974,3031.69995117,-1927.19995117,12.89999962,0.00000000,0.00000000,357.99499512); //object(tall_fence) (38)
    CreateDynamicObject(974,3028.19995117,-1930.40002441,12.89999962,0.00000000,0.00000000,87.99499512); //object(tall_fence) (39)
    CreateDynamicObject(974,3028.10009766,-1934.19995117,12.89999962,0.00000000,0.00000000,87.99499512); //object(tall_fence) (40)
    CreateDynamicObject(974,3024.60009766,-1937.40002441,12.89999962,0.00000000,0.00000000,357.98950195); //object(tall_fence) (41)
    CreateDynamicObject(974,3018.30004883,-1937.09997559,12.89999962,0.00000000,0.00000000,357.99499512); //object(tall_fence) (42)
    CreateDynamicObject(974,3011.80004883,-1936.90002441,12.89999962,0.00000000,0.00000000,357.99499512); //object(tall_fence) (43)
    CreateDynamicObject(974,3005.19995117,-1936.69995117,12.89999962,0.00000000,0.00000000,357.99499512); //object(tall_fence) (44)
    CreateDynamicObject(974,2998.50000000,-1936.50000000,12.89999962,0.00000000,0.00000000,357.99499512); //object(tall_fence) (45)
    CreateDynamicObject(974,2996.59960938,-1936.39941406,12.89999962,0.00000000,0.00000000,357.98950195); //object(tall_fence) (46)
    CreateDynamicObject(974,2993.19921875,-1939.50000000,12.89999962,0.00000000,0.00000000,87.98950195); //object(tall_fence) (47)
    CreateDynamicObject(974,2993.00000000,-1946.19995117,12.89999962,0.00000000,0.00000000,87.99499512); //object(tall_fence) (48)
    CreateDynamicObject(974,2992.69995117,-1952.69995117,12.89999962,0.00000000,0.00000000,87.99499512); //object(tall_fence) (49)
    CreateDynamicObject(3749,2877.09960938,-1961.79980469,16.20000076,0.00000000,0.00000000,87.99499512); //object(clubgate01_lax) (1)
    CreateDynamicObject(987,2888.89990234,-1953.09997559,10.30000019,0.00000000,0.00000000,178.00000000); //object(elecfence_bar) (1)
    CreateDynamicObject(987,2876.39990234,-1970.90002441,10.39999962,0.00000000,0.00000000,0.00000000); //object(elecfence_bar) (2)
    CreateDynamicObject(3749,2986.29980469,-1965.59960938,16.00000000,0.00000000,0.00000000,87.99499512); //object(clubgate01_lax) (2)
    CreateDynamicObject(987,2892.60009766,-1971.59997559,12.30000019,0.00000000,0.00000000,357.99499512); //object(elecfence_bar) (3)
    CreateDynamicObject(987,2904.60009766,-1972.00000000,12.30000019,0.00000000,0.00000000,357.99499512); //object(elecfence_bar) (4)
    CreateDynamicObject(987,2916.50000000,-1972.40002441,12.30000019,0.00000000,0.00000000,357.99499512); //object(elecfence_bar) (5)
    CreateDynamicObject(987,2928.50000000,-1972.80004883,12.30000019,0.00000000,0.00000000,357.99499512); //object(elecfence_bar) (6)
    CreateDynamicObject(987,2940.39990234,-1973.30004883,12.30000019,0.00000000,0.00000000,357.99499512); //object(elecfence_bar) (7)
    CreateDynamicObject(987,2952.30004883,-1973.69995117,12.30000019,0.00000000,0.00000000,357.99499512); //object(elecfence_bar) (8)
    CreateDynamicObject(987,2964.30004883,-1974.19995117,12.30000019,0.00000000,0.00000000,357.99499512); //object(elecfence_bar) (9)
    CreateDynamicObject(987,2976.00000000,-1974.69995117,12.30000019,0.00000000,0.00000000,357.99499512); //object(elecfence_bar) (10)
    CreateDynamicObject(987,2905.00000000,-1953.30004883,12.30000019,0.00000000,0.00000000,177.99499512); //object(elecfence_bar) (11)
    CreateDynamicObject(987,2917.00000000,-1953.69995117,12.30000019,0.00000000,0.00000000,177.99499512); //object(elecfence_bar) (12)
    CreateDynamicObject(987,2928.80004883,-1954.09997559,12.30000019,0.00000000,0.00000000,177.99499512); //object(elecfence_bar) (13)
    CreateDynamicObject(987,2940.89990234,-1954.50000000,12.30000019,0.00000000,0.00000000,177.99499512); //object(elecfence_bar) (14)
    CreateDynamicObject(987,2952.80004883,-1954.80004883,12.30000019,0.00000000,0.00000000,177.99499512); //object(elecfence_bar) (15)
    CreateDynamicObject(987,2964.80004883,-1955.19995117,12.30000019,0.00000000,0.00000000,177.99499512); //object(elecfence_bar) (16)
    CreateDynamicObject(987,2976.60009766,-1955.69995117,12.30000019,0.00000000,0.00000000,177.99499512); //object(elecfence_bar) (17)
    CreateDynamicObject(987,2988.50000000,-1956.59997559,12.30000019,0.00000000,0.00000000,175.99548340); //object(elecfence_bar) (18)
    CreateDynamicObject(8535,3054.69995117,-1956.50000000,16.50000000,0.00000000,0.00000000,357.99499512); //object(tikimotel02_lvs) (1)
    CreateDynamicObject(1302,3053.19995117,-1948.19995117,10.10000038,0.00000000,0.00000000,177.99499512); //object(vendmachfd) (1)
    CreateDynamicObject(1776,3050.60009766,-1948.00000000,11.39999962,0.00000000,0.00000000,175.99548340); //object(cj_candyvendor) (1)
    CreateDynamicObject(6865,2874.09960938,-1961.39941406,19.39999962,0.00000000,0.00000000,313.99475098); //object(steerskull) (1)
    CreateDynamicObject(3524,3043.50000000,-1950.40002441,12.69999981,0.00000000,0.00000000,265.99548340); //object(skullpillar01_lvs) (1)
    CreateDynamicObject(3524,3042.80004883,-1961.40002441,13.00000000,0.00000000,0.00000000,261.99645996); //object(skullpillar01_lvs) (2)
    CreateDynamicObject(3472,3044.10009766,-1963.09997559,10.10000038,0.00000000,0.00000000,93.99902344); //object(circuslampost03) (1)
    CreateDynamicObject(3472,3044.69995117,-1948.90002441,10.10000038,0.00000000,0.00000000,0.00000000); //object(circuslampost03) (2)
    CreateDynamicObject(1365,2990.69995117,-1973.00000000,11.10000038,0.00000000,0.00000000,177.99499512); //object(cj_big_skip1) (1)
    CreateDynamicObject(628,3045.39990234,-1959.19995117,12.10000038,0.00000000,0.00000000,0.00000000); //object(veg_palmkb4) (1)
    CreateDynamicObject(628,3045.60009766,-1953.00000000,12.10000038,0.00000000,0.00000000,0.00000000); //object(veg_palmkb4) (2)
    CreateDynamicObject(2985,3052.69995117,-1970.30004883,16.50000000,0.00000000,0.00000000,175.99548340); //object(minigun_base) (1)
    CreateDynamicObject(2985,3053.80004883,-1940.80004883,16.50000000,0.00000000,0.00000000,181.99951172); //object(minigun_base) (2)
    CreateDynamicObject(3279,3062.10009766,-1984.59997559,9.80000019,0.00000000,0.00000000,178.00000000); //object(a51_spottower) (1)
    CreateDynamicObject(2985,3062.10009766,-1983.40002441,26.20000076,0.00000000,357.99499512,137.99926758); //object(minigun_base) (3)
    CreateDynamicObject(1236,2889.50000000,-1954.19995117,11.00000000,0.00000000,0.00000000,0.00000000); //object(rcyclbank01) (1)
    CreateDynamicObject(638,2867.39990234,-1952.40002441,10.80000019,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush) (2)
    CreateDynamicObject(638,2867.39990234,-1955.09997559,10.80000019,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush) (3)
    CreateDynamicObject(638,2867.30004883,-1967.80004883,10.80000019,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush) (4)
    CreateDynamicObject(638,2867.30004883,-1970.50000000,10.80000019,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush) (5)
    CreateDynamicObject(2922,3046.50000000,-1957.69995117,11.80000019,358.00000000,0.00000000,90.00000000); //object(kmb_keypad) (1)
    CreateDynamicObject(3524,2868.50000000,-1969.19995117,13.30000019,0.00000000,0.00000000,264.00000000); //object(skullpillar01_lvs) (3)
    CreateDynamicObject(3524,2868.39990234,-1953.80004883,13.30000019,0.00000000,0.00000000,268.00000000); //object(skullpillar01_lvs) (4)
    CreateDynamicObject(3408,2873.10009766,-1954.50000000,10.39999962,0.00000000,0.00000000,352.00000000); //object(ce_mailbox2) (1)
    CreateDynamicObject(2600,3068.39990234,-1957.90002441,17.29999924,0.00000000,0.00000000,88.00000000); //object(cj_view_tele) (1)

    PortaoFakers1 = CreateDynamicObject(980,2877.00000000,-1961.80004883,12.89999962,0.00000000,0.00000000,90.00000000); //object(airportgate) (1) >>>>>>>>>>>>>>> PORTAO 1 FECHADO

//====================[Objetos Família Psyco]==================================/
    CreateDynamicObject(5191,2922.3999000,-309.0000000,1.2000000,0.0000000,0.0000000,266.0000000); //object(nwdkbridd_las2) (1)
    CreateObject(6300,3020.3000500,-306.2000100,-1.0000000,0.0000000,0.0000000,86.0000000); //object(pier04_law2) (1)
    CreateDynamicObject(974,3057.5000000,-278.3999900,9.8000000,0.0000000,0.0000000,356.0000000); //object(tall_fence) (1)
    CreateDynamicObject(974,3051.0000000,-278.0000000,9.8000000,0.0000000,0.0000000,356.0000000); //object(tall_fence) (2)
    CreateDynamicObject(974,3044.5000000,-277.6000100,9.8000000,0.0000000,0.0000000,355.9950000); //object(tall_fence) (3)
    CreateDynamicObject(974,3037.8999000,-277.1000100,9.8000000,0.0000000,0.0000000,355.9950000); //object(tall_fence) (4)
    CreateDynamicObject(974,3031.5000000,-276.6000100,9.8000000,0.0000000,0.0000000,355.9950000); //object(tall_fence) (5)
    CreateDynamicObject(974,3025.3999000,-276.2000100,9.8000000,0.0000000,0.0000000,355.9950000); //object(tall_fence) (6)
    CreateDynamicObject(974,3022.1999500,-276.0000000,9.8000000,0.0000000,0.0000000,355.9950000); //object(tall_fence) (7)
    CreateDynamicObject(974,3018.6999500,-279.1000100,9.8000000,0.0000000,0.0000000,85.9950000); //object(tall_fence) (8)
    CreateDynamicObject(974,3018.3999000,-283.1000100,9.8000000,0.0000000,0.0000000,85.9950000); //object(tall_fence) (9)
    CreateDynamicObject(974,3014.8000500,-286.2000100,9.8000000,0.0000000,0.0000000,355.9950000); //object(tall_fence) (10)
    CreateDynamicObject(974,3008.3999000,-285.7999900,9.8000000,0.0000000,0.0000000,355.9950000); //object(tall_fence) (11)
    CreateDynamicObject(974,3001.6999500,-285.2999900,9.8000000,0.0000000,0.0000000,355.9950000); //object(tall_fence) (12)
    CreateDynamicObject(974,2995.1001000,-284.7999900,9.8000000,0.0000000,0.0000000,355.9950000); //object(tall_fence) (13)
    CreateDynamicObject(974,2988.6001000,-284.2999900,9.8000000,0.0000000,0.0000000,355.9950000); //object(tall_fence) (14)
    CreateDynamicObject(974,2986.6001000,-284.2000100,9.8000000,0.0000000,0.0000000,355.9950000); //object(tall_fence) (15)
    CreateDynamicObject(974,2983.1999500,-287.2999900,9.8000000,0.0000000,0.0000000,85.9950000); //object(tall_fence) (16)
    CreateDynamicObject(974,2982.8000500,-293.7000100,9.8000000,0.0000000,0.0000000,85.9950000); //object(tall_fence) (17)
    CreateDynamicObject(974,2982.3999000,-299.2000100,9.8000000,0.0000000,0.0000000,85.9950000); //object(tall_fence) (18)
    CreateDynamicObject(974,3060.5000000,-281.8999900,9.8000000,0.0000000,0.0000000,85.9950000); //object(tall_fence) (19)
    CreateDynamicObject(974,3060.1001000,-287.5000000,9.8000000,0.0000000,0.0000000,85.9950000); //object(tall_fence) (20)
    CreateDynamicObject(974,3059.6999500,-292.2000100,9.8000000,0.0000000,0.0000000,85.9950000); //object(tall_fence) (21)
    CreateDynamicObject(974,3059.3999000,-297.2999900,9.8000000,0.0000000,0.0000000,85.9950000); //object(tall_fence) (22)
    CreateDynamicObject(974,3059.0000000,-302.6000100,9.8000000,0.0000000,0.0000000,85.9950000); //object(tall_fence) (23)
    CreateDynamicObject(974,3058.6001000,-308.2999900,9.8000000,0.0000000,0.0000000,85.9950000); //object(tall_fence) (24)
    CreateDynamicObject(974,3058.1999500,-314.0000000,9.8000000,0.0000000,0.0000000,85.9950000); //object(tall_fence) (25)
    CreateDynamicObject(974,3057.8000500,-319.7000100,9.8000000,0.0000000,0.0000000,85.9950000); //object(tall_fence) (26)
    CreateDynamicObject(974,3057.3999000,-324.8999900,9.8000000,0.0000000,0.0000000,85.9950000); //object(tall_fence) (27)
    CreateDynamicObject(974,3057.3999000,-324.8999900,9.8000000,0.0000000,0.0000000,85.9950000); //object(tall_fence) (28)
    CreateDynamicObject(974,3057.0000000,-330.7999900,9.8000000,0.0000000,0.0000000,85.9950000); //object(tall_fence) (29)
    CreateDynamicObject(974,3056.6999500,-335.6000100,9.8000000,0.0000000,0.0000000,85.9950000); //object(tall_fence) (30)
    CreateDynamicObject(974,3015.1999500,-328.0000000,9.8000000,0.0000000,0.0000000,85.9950000); //object(tall_fence) (31)
    CreateDynamicObject(974,3014.8999000,-332.7000100,9.8000000,0.0000000,0.0000000,85.9950000); //object(tall_fence) (32)
    CreateDynamicObject(974,3005.6999500,-328.7999900,9.8000000,0.0000000,0.0000000,85.9950000); //object(tall_fence) (33)
    CreateDynamicObject(974,3005.8000500,-327.2999900,9.8000000,0.0000000,0.0000000,85.9950000); //object(tall_fence) (34)
    CreateDynamicObject(974,2993.1001000,-328.0000000,9.8000000,0.0000000,0.0000000,85.9950000); //object(tall_fence) (35)
    CreateDynamicObject(974,2993.1999500,-326.6000100,9.8000000,0.0000000,0.0000000,85.9950000); //object(tall_fence) (36)
    CreateDynamicObject(974,2990.1001000,-323.1000100,9.8000000,0.0000000,0.0000000,355.9950000); //object(tall_fence) (37)
    CreateDynamicObject(974,2987.3999000,-322.8999900,9.8000000,0.0000000,0.0000000,355.9950000); //object(tall_fence) (38)
    CreateDynamicObject(974,3002.1001000,-331.8999900,9.8000000,0.0000000,0.0000000,355.9950000); //object(tall_fence) (39)
    CreateDynamicObject(974,2996.1999500,-331.5000000,9.8000000,0.0000000,0.0000000,355.9950000); //object(tall_fence) (40)
    CreateDynamicObject(974,3009.3000500,-324.2000100,9.8000000,0.0000000,0.0000000,355.9950000); //object(tall_fence) (41)
    CreateDynamicObject(974,3012.1001000,-324.3999900,9.8000000,0.0000000,0.0000000,355.9950000); //object(tall_fence) (42)
    CreateDynamicObject(974,3018.0000000,-336.2000100,9.8000000,0.0000000,0.0000000,355.9950000); //object(tall_fence) (43)
    CreateDynamicObject(974,3024.5000000,-336.7000100,9.8000000,0.0000000,0.0000000,355.9950000); //object(tall_fence) (44)
    CreateDynamicObject(974,3031.0000000,-337.2000100,9.8000000,0.0000000,0.0000000,355.9950000); //object(tall_fence) (45)
    CreateDynamicObject(974,3037.6001000,-337.6000100,9.8000000,0.0000000,0.0000000,355.9950000); //object(tall_fence) (46)
    CreateDynamicObject(974,3044.1999500,-338.1000100,9.8000000,0.0000000,0.0000000,355.9950000); //object(tall_fence) (47)
    CreateDynamicObject(974,3050.8000500,-338.6000100,9.8000000,0.0000000,0.0000000,355.9950000); //object(tall_fence) (48)
    CreateDynamicObject(974,3053.1999500,-338.7000100,9.8000000,0.0000000,0.0000000,355.9950000); //object(tall_fence) (49)
    CreateDynamicObject(8209,2929.8000500,-319.1000100,12.2000000,0.0000000,0.0000000,356.0000000); //object(vgsselecfence11) (1)
    CreateDynamicObject(8209,2932.3000500,-300.5000000,12.2000000,0.0000000,0.0000000,176.0000000); //object(vgsselecfence11) (2)
    CreateDynamicObject(3749,2981.6001000,-313.2000100,12.8000000,0.0000000,0.0000000,84.0000000); //object(clubgate01_lax) (1)
    CreateDynamicObject(3749,2879.1001000,-306.1000100,12.7000000,0.0000000,0.0000000,85.9950000); //object(clubgate01_lax) (2)
    CreateDynamicObject(3524,3034.8999000,-315.2000100,10.5000000,0.0000000,0.0000000,264.0000000); //object(skullpillar01_lvs) (1)
    CreateDynamicObject(640,2856.6999512,-312.2000122,7.5000000,0.0000000,0.0000000,356.0000000); //object(kb_planter_bush2) (1)
    CreateDynamicObject(640,2857.6000977,-297.0000000,7.5999999,0.0000000,4.0000000,354.0000000); //object(kb_planter_bush2) (2)
    CreateObject(3603,3042.6000977,-318.7000122,12.8999996,0.0000000,0.0000000,86.0000000); //object(bevman_law2) (1)
    PortaoKillers2 = CreateDynamicObject(980,2879.5000,-306.1000,9.7000,0.0000000,0.0000000,85.9950000); //object(airportgate) (2) // portao 2 fechado
    //PortaoKillers1 = CreateDynamicObject(980,2981.1001,-313.2000,9.6000,0.0000000,359.5000000,85.9950000); //object(airportgate) (4) //portao 1 fechado

//==============================================[Família Justiceiros]=============================================================
    CreateObject(17864, 269.00000, -2155.69995, 0.79000,   0.00000, 0.00000, 1.00000);
    CreateObject(18449, 245.00000, -2077.00000, 0.70000,   0.00000, 0.00000, 270.09900);
    CreateObject(18449, 245.00000, -2003.89941, 0.70000,   0.00000, 0.00000, 269.89600);
    CreateObject(11490, 277.39941, -2167.60010, 0.29000,   0.00000, 0.00000, 0.00000);
    CreateObject(11491, 277.39941, -2178.59961, 1.80000,   0.00000, 0.00000, 0.00000);
    CreateObject(11666, 277.29999, -2172.00000, 3.50000,   0.00000, 0.00000, 0.00000);
    CreateObject(9362, 275.20001, -2172.60010, 2.40000,   0.00000, 0.00000, 182.00000);
    CreateObject(2737, 280.70001, -2163.39990, 3.40000,   0.00000, 0.00000, 0.00000);
    CreateObject(2608, 273.89001, -2163.80005, 2.50000,   0.00000, 0.00000, 0.00000);
    CreateObject(2234, 279.60001, -2164.80005, 1.80000,   0.00000, 0.00000, 0.00000);
    CreateObject(18450, 245.20000, -2144.30005, 0.70000,   0.00000, 0.00000, 270.39600);
    CreateObject(17864, 259.09961, -2166.79980, 0.79000,   0.00000, 0.00000, 0.00000);
    CreateObject(17864, 299.09961, -2159.00000, 1.20000,   0.00000, 0.00000, 271.89001);
    CreateObject(17864, 295.00000, -2165.00000, 0.79000,   0.00000, 0.00000, 1.00000);
    CreateObject(3279, 309.00000, -2144.30005, 0.50000,   0.00000, 0.00000, 272.00000);
    CreateObject(3749, 245.80000, -2142.30005, 6.90000,   0.00000, 0.00000, 0.00000);
    CreateObject(8529, 267.00000, -2220.50000, 1.50000,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(987, 237.79980, -2141.00000, 0.89000,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(987, 237.79980, -2153.00000, 0.89000,   0.00000, 0.00000, 269.59900);
    CreateDynamicObject(987, 237.69922, -2164.00000, 0.89000,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(987, 237.69922, -2170.50000, 0.89000,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(987, 237.59961, -2182.29980, 0.89000,   0.00000, 0.00000, 179.99500);
    CreateDynamicObject(987, 227.89999, -2182.39990, 0.90000,   0.00000, 0.00000, 181.00000);
    CreateDynamicObject(987, 215.89941, -2182.59961, 0.89000,   0.00000, 0.00000, 272.00000);
    CreateDynamicObject(987, 216.39941, -2194.59961, 0.89000,   0.00000, 0.00000, 272.00000);
    CreateDynamicObject(987, 216.79980, -2206.59961, 0.89000,   0.00000, 0.00000, 272.00000);
    CreateDynamicObject(987, 217.35938, -2218.00000, 0.89000,   0.00000, 0.00000, 272.00000);
    CreateDynamicObject(987, 217.69922, -2227.09961, 0.89000,   0.00000, 0.00000, 272.00000);
    CreateDynamicObject(987, 218.00000, -2238.00000, 0.90000,   0.00000, 0.00000, 272.00000);
    CreateDynamicObject(987, 218.50000, -2250.10010, 0.90000,   0.00000, 0.00000, 272.00000);
    CreateDynamicObject(3506, 238.80000, -2139.60010, 0.80000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3506, 251.70000, -2139.60010, 0.80000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(5154, 298.70001, -2225.00000, 3.00000,   0.00000, 0.00000, 1.00000);
    CreateDynamicObject(7096, 309.00000, -2220.62988, 6.00000,   0.00000, 0.00000, 182.00000);
    CreateDynamicObject(987, 267.00000, -2140.50000, 0.90000,   0.00000, 0.00000, 180.89000);
    CreateDynamicObject(987, 291.00000, -2139.89941, 0.90000,   0.00000, 0.00000, 181.00000);
    CreateDynamicObject(987, 279.00000, -2140.09961, 0.90000,   0.00000, 0.00000, 181.59900);
    CreateDynamicObject(987, 302.50000, -2139.29980, 1.00000,   0.00000, 0.00000, 182.00000);
    CreateDynamicObject(987, 314.00000, -2139.00000, 0.99000,   0.00000, 0.00000, 182.00000);
    CreateDynamicObject(987, 218.89999, -2261.89990, 0.90000,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(987, 230.79980, -2261.50000, 0.89000,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(987, 301.29999, -2259.00000, 0.90000,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(987, 292.10001, -2259.30005, 0.90000,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(987, 306.00000, -2258.89941, 0.90000,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(987, 317.89999, -2258.50000, 0.90000,   0.00000, 0.00000, 91.50000);
    CreateDynamicObject(987, 317.60001, -2246.89941, 0.90000,   0.00000, 0.00000, 92.29600);
    CreateDynamicObject(987, 316.69922, -2223.79980, 0.90000,   0.00000, 0.00000, 92.00000);
    CreateDynamicObject(987, 314.31000, -2150.80005, 0.90000,   0.00000, 0.00000, 92.00000);
    CreateDynamicObject(987, 314.89941, -2162.59961, 0.90000,   0.00000, 0.00000, 92.39500);
    CreateDynamicObject(987, 316.29980, -2211.89941, 0.90000,   0.00000, 0.00000, 92.00000);
    CreateDynamicObject(987, 315.89999, -2199.89990, 0.90000,   0.00000, 0.00000, 92.00000);
    CreateDynamicObject(987, 315.39941, -2188.29980, 0.90000,   0.00000, 0.00000, 92.00000);
    CreateDynamicObject(987, 315.29980, -2174.50000, 0.90000,   0.00000, 0.00000, 92.00000);
    CreateDynamicObject(987, 315.39941, -2182.00000, 0.90000,   0.00000, 0.00000, 92.00000);
    CreateDynamicObject(18229, 323.89212, -1923.43982, -8.99081,   0.00000, 0.00000, 87.99000);
    CreateDynamicObject(17627, 294.00000, -1956.50000, 0.90000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(17627, 270.89941, -1956.59961, 0.90000,   0.00000, 0.00000, 179.99500);
    CreateDynamicObject(3749, 317.60001, -1947.50000, 6.30000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(5005, 238.00000, -2060.00000, 4.10000,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(5005, 253.39941, -2061.00000, 4.30000,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(5005, 253.50000, -2049.00000, 4.40000,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(5005, 238.10001, -2030.00000, 4.00000,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(10402, 271.00000, -1947.00000, 2.50000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(10402, 286.00000, -1966.00000, 2.60000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(8674, 322.29980, -1966.00000, 2.50000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(8674, 327.29980, -1960.89941, 2.40000,   0.00000, 0.00000, 272.00000);
    CreateDynamicObject(8674, 327.09961, -1952.89941, 2.40000,   0.00000, 0.00000, 272.00000);
    CreateDynamicObject(8674, 305.00000, -1947.09961, 2.50000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3749, 247.10001, -1965.50000, 6.40000,   0.00000, 0.00000, 179.99500);
    CreateDynamicObject(3279, 220.70000, -2187.10010, 0.60000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(643, 232.50000, -2229.89941, 1.70000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(11631, 273.50000, -2166.80005, 3.00000,   0.00000, 0.00000, 88.00000);
    CreateDynamicObject(14537, 232.09961, -2242.00000, 3.10000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(922, 233.10001, -2257.69995, 1.90000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1597, 244.79980, -2232.69922, 3.70000,   0.00000, 0.00000, 182.00000);
    CreateDynamicObject(3660, 229.19922, -2224.39941, 3.60000,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(1597, 245.00000, -2250.00000, 3.70000,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(942, 227.30000, -2257.69995, 3.50000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(9241, 299.00000, -2192.80005, 1.00000,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(688, 267.20001, -2144.69995, 1.00000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(688, 307.39999, -2152.89990, 0.50000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(889, 309.79980, -2164.89941, 1.00000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(848, 288.39999, -2145.00000, 2.00000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(650, 296.79999, -2149.00000, 0.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(8660, 278.00000, -2153.10010, 1.30000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(8836, 278.29999, -2148.60010, 2.60000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3524, 254.70000, -1962.90002, 3.50000,   0.00000, 0.00000, 158.00000);
    CreateDynamicObject(3524, 240.10001, -1962.50000, 3.40000,   0.00000, 0.00000, 146.00000);
    CreateDynamicObject(3528, 246.89999, -1962.59998, 11.00000,   0.00000, 0.00000, 88.00000);
    CreateDynamicObject(13562, 256.29999, -2150.10010, 0.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(987, 317.00000, -2235.19995, 0.90000,   0.00000, 0.00000, 92.00000);
    CreateDynamicObject(1332, 221.20000, -2227.60010, 2.10000,   0.00000, 0.00000, 274.00000);
    CreateDynamicObject(987, 242.70000, -2261.00000, 0.90000,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(987, 254.20000, -2260.60010, 0.86000,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(987, 280.20001, -2259.69995, 0.90000,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(987, 270.79999, -2260.10010, 0.90000,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(987, 262.89999, -2260.31299, 0.90000,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(7939, 268.39999, -2260.00000, 2.50000,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(7096, 306.60001, -2252.80005, 6.50000,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(1669, 232.89999, -2257.60010, 2.10000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1669, 231.70000, -2257.39990, 3.00000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1669, 234.39999, -2257.39990, 3.00000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1669, 226.60001, -2257.39990, 5.00000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1669, 227.30000, -2257.30005, 5.00000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1669, 233.39999, -2257.80005, 2.10000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1669, 227.00000, -2257.69995, 5.00000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1668, 227.89999, -2257.39990, 5.00000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1664, 227.39999, -2257.10010, 3.30000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1664, 232.39999, -2257.50000, 2.10000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1551, 233.70000, -2257.60010, 2.20000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3524, 244.80000, -2237.30005, 4.10000,   0.00000, 0.00000, 88.00000);
    CreateDynamicObject(3524, 244.89999, -2245.69995, 4.10000,   0.00000, 0.00000, 96.00000);
    CreateDynamicObject(1679, 229.50000, -2252.50000, 1.60000,   0.00000, 0.00000, 0.00000);
    PortaoStrikerS1 = CreateDynamicObject(980,247.0000000,-1965.3000500,3.8000000,0.0000000,0.0000000,2.0000000); //object(airportgate) (1)
    //PortaoStrikerS2 = CreateDynamicObject(980,245.8000000,-2142.3000500,3.8000000,0.0000000,0.0000000,2.0000000); //object(airportgate) (2)
//==================[Objetos HQ Polícia Federall]=====================================================//
    //CreateDynamicObject(8240, -1239.90002, 173.60001, 26.80000,   0.00000, 0.00000, 46.00000);
    /*//>------------------------------------ INTERIOR BOPE --------------------------------------
    CreateDynamicObject(14855, 1872.04, 1189.20, 21.61,   0.00, 0.00, 179.85);
    CreateDynamicObject(1536, 1864.53, 1183.44, 17.08,   0.00, 0.00, 359.70);
    CreateDynamicObject(19377, 1868.29, 1197.75, 20.44,   0.00, 90.00, 359.94);
    CreateDynamicObject(19379, 1868.33, 1197.82, 17.08,   0.00, 90.00, 359.90);
    CreateDynamicObject(19446, 1867.85, 1183.36, 18.81,   0.00, 0.00, 89.51);
    CreateDynamicObject(1536, 1867.52, 1183.45, 17.08,   0.00, 0.00, 179.14);
    CreateDynamicObject(1649, 1863.05, 1185.47, 18.69,   0.00, 0.00, 90.00);
    CreateDynamicObject(1649, 1863.05, 1189.79, 18.69,   0.00, 0.00, 90.00);
    CreateDynamicObject(1649, 1863.05, 1198.45, 18.69,   0.00, 0.00, 90.00);
    CreateDynamicObject(1649, 1863.05, 1194.11, 18.69,   0.00, 0.00, 90.00);
    CreateDynamicObject(19379, 1878.76, 1188.17, 17.08,   0.00, 90.00, 359.94);
    CreateDynamicObject(19379, 1878.74, 1197.76, 17.08,   0.00, 90.00, 359.94);
    CreateDynamicObject(19446, 1875.15, 1192.51, 18.83,   0.00, 0.00, 359.67);
    CreateDynamicObject(19384, 1875.19, 1198.91, 18.83,   0.00, 0.00, 359.60);
    CreateDynamicObject(19446, 1875.12, 1188.03, 18.83,   0.00, 0.00, 359.47);
    CreateDynamicObject(2208, 1871.86, 1189.02, 17.06,   0.00, 0.00, 269.74);
    CreateDynamicObject(2186, 1874.56, 1184.72, 17.08,   0.00, 0.00, 269.80);
    CreateDynamicObject(2186, 1874.63, 1190.19, 17.08,   0.00, 0.00, 269.40);
    CreateDynamicObject(1806, 1873.18, 1186.86, 17.17,   0.00, 0.00, 88.00);
    CreateDynamicObject(1806, 1873.13, 1188.52, 17.17,   0.00, 0.00, 88.00);
    CreateDynamicObject(1722, 1864.06, 1200.15, 17.16,   0.00, 0.00, 179.42);
    CreateDynamicObject(1722, 1865.51, 1200.13, 17.16,   0.00, 0.00, 179.42);
    CreateDynamicObject(1722, 1866.69, 1200.11, 17.16,   0.00, 0.00, 179.42);
    CreateDynamicObject(1722, 1867.89, 1200.11, 17.16,   0.00, 0.00, 178.40);
    CreateDynamicObject(1722, 1869.10, 1200.13, 17.16,   0.00, 0.00, 178.40);
    CreateDynamicObject(19446, 1879.91, 1197.40, 18.81,   0.00, 0.00, 90.26);
    CreateDynamicObject(2412, 1865.06, 1184.32, 17.06,   0.00, 0.00, 0.00);
    CreateDynamicObject(2412, 1867.71, 1184.26, 17.06,   0.00, 0.00, 0.00);
    CreateDynamicObject(19446, 1867.84, 1200.51, 18.81,   0.00, 0.00, 90.26);
    CreateDynamicObject(19446, 1877.46, 1200.58, 18.81,   0.00, 0.00, 90.26);
    CreateDynamicObject(19379, 1889.20, 1197.73, 17.08,   0.00, 90.00, 359.94);
    CreateDynamicObject(19379, 1889.25, 1188.19, 17.08,   0.00, 90.00, 359.94);
    CreateDynamicObject(19446, 1877.48, 1183.34, 18.81,   0.00, 0.00, 90.26);
    CreateDynamicObject(19446, 1887.09, 1183.39, 18.81,   0.00, 0.00, 90.26);
    CreateDynamicObject(19384, 1886.31, 1197.43, 18.81,   0.00, 0.00, 89.96);
    CreateDynamicObject(19446, 1887.91, 1192.69, 18.83,   0.00, 0.00, 0.80);
    CreateDynamicObject(19446, 1887.99, 1188.08, 18.83,   0.00, 0.00, 0.80);
    CreateDynamicObject(19446, 1883.14, 1192.97, 16.53,   0.00, 0.00, 90.78);
    CreateDynamicObject(19454, 1886.29, 1189.44, 18.85,   0.00, 0.00, 0.80);
    CreateDynamicObject(19454, 1884.22, 1189.51, 18.83,   0.00, 0.00, 0.09);
    CreateDynamicObject(19454, 1882.36, 1189.44, 18.83,   0.00, 0.00, 0.80);
    CreateDynamicObject(19454, 1880.52, 1189.40, 18.83,   0.00, 0.00, 0.39);
    CreateDynamicObject(19454, 1878.58, 1189.32, 18.83,   0.00, 0.00, 359.77);
    CreateDynamicObject(19454, 1876.76, 1189.37, 18.83,   0.00, 0.00, 359.58);
    CreateDynamicObject(19446, 1879.86, 1184.68, 18.81,   0.00, 0.00, 90.26);
    CreateDynamicObject(19446, 1883.32, 1184.71, 18.81,   0.00, 0.00, 90.26);
    CreateDynamicObject(19384, 1889.49, 1197.43, 18.81,   0.00, 0.00, 89.96);
    CreateDynamicObject(19446, 1895.82, 1197.45, 18.81,   0.00, 0.00, 90.26);
    CreateDynamicObject(19446, 1895.47, 1192.70, 18.83,   0.00, 0.00, 0.80);
    CreateDynamicObject(19446, 1892.79, 1187.92, 18.81,   0.00, 0.00, 90.26);
    CreateDynamicObject(19379, 1899.62, 1197.71, 17.08,   0.00, 90.00, 359.94);
    CreateDynamicObject(19379, 1899.64, 1188.17, 17.08,   0.00, 90.00, 359.94);
    CreateDynamicObject(1722, 1889.63, 1195.54, 17.16,   0.00, 0.00, 179.55);
    CreateDynamicObject(1722, 1891.81, 1195.59, 17.16,   0.00, 0.00, 179.55);
    CreateDynamicObject(1722, 1893.97, 1195.61, 17.16,   0.00, 0.00, 179.55);
    CreateDynamicObject(1722, 1889.54, 1193.74, 17.16,   0.00, 0.00, 179.55);
    CreateDynamicObject(1722, 1891.80, 1193.76, 17.16,   0.00, 0.00, 179.55);
    CreateDynamicObject(1722, 1893.92, 1193.83, 17.16,   0.00, 0.00, 179.55);
    CreateDynamicObject(1722, 1889.50, 1192.08, 17.16,   0.00, 0.00, 179.55);
    CreateDynamicObject(1722, 1889.47, 1190.44, 17.16,   0.00, 0.00, 179.55);
    CreateDynamicObject(1722, 1891.76, 1192.10, 17.16,   0.00, 0.00, 179.55);
    CreateDynamicObject(1722, 1891.73, 1190.46, 17.16,   0.00, 0.00, 179.55);
    CreateDynamicObject(1722, 1893.90, 1192.15, 17.16,   0.00, 0.00, 179.55);
    CreateDynamicObject(1722, 1893.89, 1190.59, 17.16,   0.00, 0.00, 179.55);
    CreateDynamicObject(19454, 1891.87, 1187.93, 15.10,   -90.00, -1.00, 89.00);
    CreateDynamicObject(19446, 1882.46, 1205.34, 18.83,   0.00, 0.00, 359.58);
    CreateDynamicObject(19446, 1890.23, 1200.57, 18.81,   0.00, 0.00, 89.76);
    CreateDynamicObject(19384, 1883.84, 1200.58, 18.81,   0.00, 0.00, 89.96);
    CreateDynamicObject(19379, 1868.31, 1207.37, 17.08,   0.00, 90.00, 0.11);
    CreateDynamicObject(19379, 1878.65, 1207.37, 17.08,   0.00, 90.00, 359.90);
    CreateDynamicObject(19379, 1889.13, 1207.34, 17.08,   0.00, 90.00, 359.90);
    CreateDynamicObject(1584, 1887.13, 1185.58, 17.17,   0.00, 0.00, 177.57);
    CreateDynamicObject(1584, 1885.24, 1186.76, 17.17,   0.00, 0.00, 177.57);
    CreateDynamicObject(1584, 1883.26, 1188.22, 17.17,   0.00, 0.00, 177.57);
    CreateDynamicObject(1584, 1881.44, 1185.99, 17.17,   0.00, 0.00, 177.57);
    CreateDynamicObject(1584, 1879.57, 1187.78, 17.17,   0.00, 0.00, 177.57);
    CreateDynamicObject(1584, 1877.61, 1186.03, 17.17,   0.00, 0.00, 177.57);
    CreateDynamicObject(1584, 1875.78, 1187.32, 17.17,   0.00, 0.00, 177.57);
    CreateDynamicObject(19384, 1902.20, 1197.46, 18.81,   0.00, 0.00, 90.16);
    CreateDynamicObject(19446, 1903.70, 1192.71, 18.83,   0.00, 0.00, 359.79);
    CreateDynamicObject(19446, 1902.34, 1187.94, 18.81,   0.00, 0.00, 90.26);
    CreateDynamicObject(2206, 1900.64, 1194.43, 17.16,   0.00, 0.00, 0.00);
    CreateDynamicObject(2206, 1896.54, 1194.43, 17.16,   0.00, 0.00, 0.00);
    CreateDynamicObject(2206, 1896.62, 1190.75, 17.16,   0.00, 0.00, 0.00);
    CreateDynamicObject(2206, 1900.63, 1190.78, 17.16,   0.00, 0.00, 0.00);
    CreateDynamicObject(1714, 1901.62, 1193.10, 17.26,   0.00, 0.00, 178.00);
    CreateDynamicObject(1714, 1897.48, 1193.11, 17.26,   0.00, 0.00, 178.00);
    CreateDynamicObject(1714, 1897.58, 1189.54, 17.26,   0.00, 0.00, 178.00);
    CreateDynamicObject(1714, 1901.54, 1189.56, 17.26,   0.00, 0.00, 178.00);
    CreateDynamicObject(2204, 1896.03, 1197.34, 17.16,   0.00, 0.00, 0.00);
    CreateDynamicObject(2204, 1898.89, 1197.34, 17.16,   0.00, 0.00, -0.06);
    CreateDynamicObject(2199, 1899.67, 1188.07, 17.17,   0.00, 0.00, 179.52);
    CreateDynamicObject(19446, 1899.10, 1200.52, 18.81,   0.00, 0.00, 89.76);
    CreateDynamicObject(19446, 1903.73, 1195.68, 18.83,   0.00, 0.00, 359.79);
    CreateDynamicObject(19446, 1885.20, 1205.40, 18.83,   0.00, 0.00, 359.58);
    CreateDynamicObject(19384, 1882.52, 1211.01, 18.83,   0.00, 0.00, 359.09);
    CreateDynamicObject(19446, 1877.72, 1212.51, 18.81,   0.00, 0.00, 89.96);
    CreateDynamicObject(19446, 1875.34, 1209.28, 18.81,   0.00, 0.00, 89.64);
    CreateDynamicObject(19384, 1880.93, 1209.22, 18.81,   0.00, 0.00, 89.65);
    CreateDynamicObject(19446, 1867.89, 1209.31, 18.81,   0.00, 0.00, 89.64);
    CreateDynamicObject(1649, 1863.05, 1202.81, 18.69,   0.00, 0.00, 90.00);
    CreateDynamicObject(1649, 1863.06, 1207.16, 18.69,   0.00, 0.00, 89.59);
    CreateDynamicObject(19379, 1868.28, 1216.93, 17.08,   0.00, 90.00, 359.40);
    CreateDynamicObject(19379, 1878.76, 1216.97, 17.08,   0.00, 90.00, 359.90);
    CreateDynamicObject(19379, 1889.22, 1216.92, 17.08,   0.00, 90.00, 359.90);
    CreateDynamicObject(2206, 1867.30, 1204.82, 17.16,   0.00, 0.00, 0.12);
    CreateDynamicObject(2206, 1870.11, 1204.83, 17.16,   0.00, 0.00, 0.12);
    CreateDynamicObject(2206, 1872.95, 1204.83, 17.16,   0.00, 0.00, 359.92);
    CreateDynamicObject(2206, 1875.79, 1204.82, 17.16,   0.00, 0.00, 0.12);
    CreateDynamicObject(2206, 1878.60, 1204.82, 17.16,   0.00, 0.00, 0.18);
    CreateDynamicObject(2206, 1880.46, 1205.80, 17.16,   0.00, 0.00, 179.55);
    CreateDynamicObject(2206, 1877.62, 1205.82, 17.16,   0.00, 0.00, 179.55);
    CreateDynamicObject(2206, 1874.78, 1205.84, 17.16,   0.00, 0.00, 179.75);
    CreateDynamicObject(2206, 1871.93, 1205.84, 17.16,   0.00, 0.00, 180.18);
    CreateDynamicObject(2206, 1869.18, 1205.82, 17.16,   0.00, 0.00, 180.18);
    CreateDynamicObject(1714, 1879.41, 1203.57, 17.26,   0.00, 0.00, 178.00);
    CreateDynamicObject(1714, 1876.70, 1203.46, 17.26,   0.00, 0.00, 178.00);
    CreateDynamicObject(1714, 1873.90, 1203.59, 17.26,   0.00, 0.00, 178.00);
    CreateDynamicObject(1714, 1870.96, 1203.53, 17.26,   0.00, 0.00, 178.00);
    CreateDynamicObject(1714, 1868.26, 1203.61, 17.26,   0.00, 0.00, 178.00);
    CreateDynamicObject(1714, 1868.26, 1207.07, 17.26,   0.00, 0.00, 360.00);
    CreateDynamicObject(1714, 1871.05, 1207.09, 17.26,   0.00, 0.00, 360.00);
    CreateDynamicObject(1714, 1873.87, 1207.10, 17.26,   0.00, 0.00, 360.00);
    CreateDynamicObject(1714, 1876.69, 1207.01, 17.26,   0.00, 0.00, 360.00);
    CreateDynamicObject(1714, 1879.48, 1206.98, 17.26,   0.00, 0.00, 360.00);
    CreateDynamicObject(2204, 1877.68, 1209.09, 17.16,   0.00, 0.00, 359.70);
    CreateDynamicObject(2204, 1874.74, 1209.09, 17.16,   0.00, 0.00, 359.70);
    CreateDynamicObject(2204, 1871.78, 1209.11, 17.16,   0.00, 0.00, 359.70);
    CreateDynamicObject(2204, 1868.85, 1209.12, 17.16,   0.00, 0.00, 359.70);
    CreateDynamicObject(2204, 1865.90, 1209.15, 17.16,   0.00, 0.00, 359.70);
    CreateDynamicObject(2204, 1867.07, 1200.59, 17.16,   0.00, 0.00, 180.30);
    CreateDynamicObject(2204, 1870.01, 1200.60, 17.16,   0.00, 0.00, 180.30);
    CreateDynamicObject(2204, 1872.94, 1200.64, 17.16,   0.00, 0.00, 180.42);
    CreateDynamicObject(2204, 1875.89, 1200.66, 17.16,   0.00, 0.00, 180.12);
    CreateDynamicObject(2204, 1878.84, 1200.66, 17.16,   0.00, 0.00, 180.12);
    CreateDynamicObject(2204, 1881.78, 1200.68, 17.16,   0.00, 0.00, 180.12);
    CreateDynamicObject(19384, 1864.66, 1212.52, 18.81,   0.00, 0.00, 89.65);
    CreateDynamicObject(19446, 1870.45, 1212.51, 18.81,   0.00, 0.00, 89.96);
    CreateDynamicObject(1649, 1863.07, 1211.39, 18.69,   0.00, 0.00, 89.59);
    CreateDynamicObject(1649, 1863.09, 1215.71, 18.69,   0.00, 0.00, 89.59);
    CreateDynamicObject(1649, 1863.13, 1220.07, 18.69,   0.00, 0.00, 89.59);
    CreateDynamicObject(19446, 1867.99, 1221.77, 18.81,   0.00, 0.00, 89.96);
    CreateDynamicObject(19446, 1868.12, 1240.80, 18.81,   0.00, 0.00, 89.78);
    CreateDynamicObject(19379, 1868.40, 1226.52, 17.08,   0.00, 90.00, 359.40);
    CreateDynamicObject(19379, 1868.58, 1236.14, 17.08,   0.00, 90.00, 359.40);
    CreateDynamicObject(19446, 1863.19, 1226.57, 18.83,   0.00, 0.00, 359.37);
    CreateDynamicObject(19446, 1863.29, 1236.08, 18.83,   0.00, 0.00, 359.37);
    CreateDynamicObject(19379, 1870.62, 1226.65, 17.08,   0.00, 90.00, 359.40);
    CreateDynamicObject(19446, 1880.62, 1221.74, 18.81,   0.00, 0.00, 89.78);
    CreateDynamicObject(19446, 1882.63, 1216.95, 18.83,   0.00, 0.00, 358.70);
    CreateDynamicObject(19384, 1874.34, 1221.77, 18.81,   0.00, 0.00, 90.15);
    CreateDynamicObject(2206, 1865.45, 1217.48, 17.16,   0.00, 0.00, 179.67);
    CreateDynamicObject(2206, 1868.29, 1217.46, 17.16,   0.00, 0.00, 179.67);
    CreateDynamicObject(2206, 1871.13, 1217.44, 17.16,   0.00, 0.00, 179.67);
    CreateDynamicObject(2206, 1873.97, 1217.42, 17.16,   0.00, 0.00, 179.67);
    CreateDynamicObject(2206, 1876.77, 1217.40, 17.16,   0.00, 0.00, 179.67);
    CreateDynamicObject(2206, 1879.07, 1217.40, 17.16,   0.00, 0.00, 179.67);
    CreateDynamicObject(19371, 1865.89, 1217.63, 18.81,   0.00, 0.00, 359.32);
    CreateDynamicObject(19371, 1868.77, 1217.45, 18.81,   0.00, 0.00, 359.32);
    CreateDynamicObject(19371, 1871.61, 1217.41, 18.81,   0.00, 0.00, 0.18);
    CreateDynamicObject(19371, 1874.49, 1217.45, 18.81,   0.00, 0.00, 0.71);
    CreateDynamicObject(19371, 1877.27, 1217.31, 18.81,   0.00, 0.00, 359.39);
    CreateDynamicObject(19371, 1879.51, 1217.34, 18.81,   0.00, 0.00, 357.78);
    CreateDynamicObject(1649, 1865.31, 1217.53, 19.71,   0.00, 0.00, 0.00);
    CreateDynamicObject(1649, 1869.69, 1217.50, 19.71,   0.00, 0.00, 359.59);
    CreateDynamicObject(1649, 1874.05, 1217.48, 19.71,   0.00, 0.00, 359.59);
    CreateDynamicObject(1649, 1877.25, 1217.44, 19.71,   0.00, 0.00, 359.71);
    CreateDynamicObject(19446, 1879.99, 1192.94, 16.53,   0.00, 0.00, 90.68);
    CreateDynamicObject(19446, 1885.31, 1216.83, 18.83,   0.00, 0.00, 359.40);
    CreateDynamicObject(19446, 1875.90, 1226.56, 18.83,   0.00, 0.00, 359.30);
    CreateDynamicObject(19446, 1876.03, 1236.10, 18.83,   0.00, 0.00, 359.20);
    CreateDynamicObject(19446, 1867.97, 1224.92, 18.81,   0.00, 0.00, 89.56);
    CreateDynamicObject(19384, 1885.26, 1210.97, 18.83,   0.00, 0.00, 359.09);
    CreateDynamicObject(19384, 1872.71, 1223.33, 18.83,   0.00, 0.00, 359.00);
    CreateDynamicObject(19384, 1872.77, 1226.54, 18.83,   0.00, 0.00, 358.79);
    CreateDynamicObject(19446, 1868.05, 1228.13, 18.81,   0.00, 0.00, 88.74);
    CreateDynamicObject(19384, 1872.83, 1229.74, 18.83,   0.00, 0.00, 358.79);
    CreateDynamicObject(19446, 1868.10, 1231.48, 18.81,   0.00, 0.00, 88.74);
    CreateDynamicObject(19384, 1872.89, 1232.92, 18.83,   0.00, 0.00, 358.79);
    CreateDynamicObject(19446, 1868.18, 1234.63, 18.81,   0.00, 0.00, 88.74);
    CreateDynamicObject(19384, 1872.95, 1236.08, 18.83,   0.00, 0.00, 358.79);
    CreateDynamicObject(19384, 1873.02, 1239.27, 18.83,   0.00, 0.00, 358.79);
    CreateDynamicObject(19446, 1868.21, 1237.79, 18.81,   0.00, 0.00, 88.74);
    CreateDynamicObject(19379, 1870.80, 1236.14, 17.08,   0.00, 90.00, 359.40);
    CreateDynamicObject(19446, 1871.36, 1240.85, 18.81,   0.00, 0.00, 89.78);
    CreateDynamicObject(19446, 1894.26, 1205.40, 18.83,   0.00, 0.00, 359.58);
    CreateDynamicObject(19446, 1894.35, 1215.01, 18.83,   0.00, 0.00, 359.58);
    CreateDynamicObject(19446, 1890.23, 1219.75, 18.81,   0.00, 0.00, 89.76);
    CreateDynamicObject(1771, 1864.57, 1222.54, 17.67,   0.00, 0.00, 88.97);
    CreateDynamicObject(1771, 1864.58, 1225.66, 17.77,   0.00, 0.00, 88.97);
    CreateDynamicObject(1771, 1864.62, 1228.95, 17.77,   0.00, 0.00, 88.97);
    CreateDynamicObject(1771, 1864.72, 1232.28, 17.77,   0.00, 0.00, 88.97);
    CreateDynamicObject(1771, 1864.74, 1235.52, 17.77,   0.00, 0.00, 88.97);
    CreateDynamicObject(1771, 1864.69, 1238.70, 17.67,   0.00, 0.00, 88.97);
    CreateDynamicObject(640, 1863.50, 1187.21, 17.88,   0.00, 0.00, 0.31);
    CreateDynamicObject(640, 1863.42, 1195.11, 17.88,   0.00, 0.00, 0.00);
    CreateDynamicObject(640, 1863.43, 1204.91, 17.88,   0.00, 0.00, 359.80);
    CreateDynamicObject(644, 1863.47, 1190.82, 17.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(644, 1863.40, 1199.00, 17.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(644, 1863.53, 1201.28, 17.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(644, 1863.48, 1208.56, 17.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(644, 1863.49, 1183.86, 17.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(644, 1868.09, 1183.88, 17.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(644, 1863.36, 1210.08, 17.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(644, 1863.43, 1211.52, 17.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(1502, 1875.18, 1199.70, 17.06,   0.00, 0.00, 269.47);
    CreateDynamicObject(1502, 1882.52, 1211.78, 17.06,   0.00, 0.00, 269.47);
    CreateDynamicObject(1502, 1885.25, 1211.78, 17.06,   0.00, 0.00, 269.35);
    CreateDynamicObject(1502, 1884.57, 1200.60, 17.06,   0.00, 0.00, 179.99);
    CreateDynamicObject(1502, 1887.06, 1197.44, 17.06,   0.00, 0.00, 179.99);
    CreateDynamicObject(1502, 1890.23, 1197.43, 17.06,   0.00, 0.00, 179.99);
    CreateDynamicObject(1502, 1881.69, 1209.25, 17.06,   0.00, 0.00, 179.99);
    CreateDynamicObject(1502, 1865.41, 1212.53, 17.06,   0.00, 0.00, 179.99);
    CreateDynamicObject(1502, 1875.08, 1221.82, 17.06,   0.00, 0.00, 179.99);
    CreateDynamicObject(1502, 1890.23, 1197.43, 17.06,   0.00, 0.00, 179.99);
    CreateDynamicObject(1502, 1902.96, 1197.49, 17.06,   0.00, 0.00, 179.87);
    CreateDynamicObject(640, 1882.91, 1204.85, 17.88,   0.00, 0.00, 0.00);
    CreateDynamicObject(640, 1883.00, 1216.26, 17.88,   0.00, 0.00, 0.00);
    CreateDynamicObject(1495, 1872.70, 1222.58, 17.17,   0.00, 0.00, 88.30);
    CreateDynamicObject(1495, 1872.79, 1225.81, 17.17,   0.00, 0.00, 89.11);
    CreateDynamicObject(1495, 1872.86, 1229.02, 17.17,   0.00, 0.00, 89.11);
    CreateDynamicObject(1495, 1872.92, 1232.18, 17.17,   0.00, 0.00, 89.11);
    CreateDynamicObject(1495, 1872.99, 1235.34, 17.17,   0.00, 0.00, 89.11);
    CreateDynamicObject(1495, 1873.03, 1238.53, 17.17,   0.00, 0.00, 89.11);
    CreateDynamicObject(19384, 1881.08, 1217.25, 18.81,   0.00, 0.00, 88.84);
    CreateDynamicObject(1502, 1881.83, 1217.28, 17.06,   0.00, 0.00, 179.99);
    CreateDynamicObject(1714, 1878.28, 1216.01, 17.26,   0.00, 0.00, 178.00);
    CreateDynamicObject(1714, 1875.94, 1215.87, 17.26,   0.00, 0.00, 178.00);
    CreateDynamicObject(1714, 1873.18, 1215.97, 17.26,   0.00, 0.00, 178.00);
    CreateDynamicObject(1714, 1870.30, 1216.00, 17.26,   0.00, 0.00, 178.00);
    CreateDynamicObject(1714, 1864.82, 1216.15, 17.26,   0.00, 0.00, 178.00);
    CreateDynamicObject(1714, 1867.32, 1216.04, 17.26,   0.00, 0.00, 178.00);
    CreateDynamicObject(1714, 1878.28, 1218.79, 17.26,   0.00, 0.00, 360.00);
    CreateDynamicObject(1714, 1875.90, 1218.72, 17.26,   0.00, 0.00, 360.00);
    CreateDynamicObject(1714, 1873.21, 1218.81, 17.26,   0.00, 0.00, 360.00);
    CreateDynamicObject(1714, 1870.27, 1218.78, 17.26,   0.00, 0.00, 360.00);
    CreateDynamicObject(1714, 1867.43, 1218.86, 17.26,   0.00, 0.00, 360.00);
    CreateDynamicObject(1714, 1864.59, 1218.75, 17.26,   0.00, 0.00, 360.00);
    CreateDynamicObject(19371, 1863.14, 1217.56, 18.81,   0.00, 0.00, 359.32);
    CreateDynamicObject(2193, 1886.24, 1218.19, 17.17,   0.00, 0.00, 0.00);
    CreateDynamicObject(2193, 1889.27, 1218.15, 17.17,   0.00, 0.00, 0.00);
    CreateDynamicObject(2193, 1892.21, 1218.15, 17.17,   0.00, 0.00, 0.00);
    CreateDynamicObject(2193, 1885.95, 1214.04, 17.17,   0.00, 0.00, 0.00);
    CreateDynamicObject(2193, 1889.23, 1214.13, 17.17,   0.00, 0.00, 0.00);
    CreateDynamicObject(2193, 1892.23, 1214.21, 17.17,   0.00, 0.00, 0.00);
    CreateDynamicObject(2193, 1885.97, 1207.97, 17.17,   0.00, 0.00, 0.00);
    CreateDynamicObject(2193, 1885.97, 1203.07, 17.17,   0.00, 0.00, 0.00);
    CreateDynamicObject(2193, 1889.17, 1207.96, 17.17,   0.00, 0.00, 0.00);
    CreateDynamicObject(2193, 1892.07, 1207.98, 17.17,   0.00, 0.00, 0.00);
    CreateDynamicObject(2193, 1889.14, 1203.00, 17.17,   0.00, 0.00, 0.00);
    CreateDynamicObject(2193, 1892.06, 1203.11, 17.17,   0.00, 0.00, 0.00);
    CreateDynamicObject(2356, 1887.10, 1217.92, 17.17,   0.00, 0.00, 0.00);
    CreateDynamicObject(2356, 1890.14, 1218.01, 17.17,   0.00, 0.00, 0.00);
    CreateDynamicObject(2356, 1893.14, 1217.98, 17.17,   0.00, 0.00, 0.00);
    CreateDynamicObject(2356, 1893.05, 1214.06, 17.17,   0.00, 0.00, 0.00);
    CreateDynamicObject(2356, 1890.07, 1214.03, 17.17,   0.00, 0.00, 0.00);
    CreateDynamicObject(2356, 1886.77, 1214.07, 17.17,   0.00, 0.00, 0.00);
    CreateDynamicObject(2356, 1886.78, 1207.79, 17.17,   0.00, 0.00, 0.00);
    CreateDynamicObject(2356, 1890.05, 1207.81, 17.17,   0.00, 0.00, 0.00);
    CreateDynamicObject(2356, 1893.00, 1207.84, 17.17,   0.00, 0.00, 0.00);
    CreateDynamicObject(2356, 1893.06, 1202.70, 17.17,   0.00, 0.00, 0.00);
    CreateDynamicObject(2356, 1890.07, 1202.57, 17.17,   0.00, 0.00, 0.00);
    CreateDynamicObject(2356, 1886.76, 1202.82, 17.17,   0.00, 0.00, 0.00);
    CreateDynamicObject(19379, 1868.31, 1188.18, 17.08,   0.00, 90.00, 359.94);
    CreateDynamicObject(19377, 1868.29, 1188.18, 20.44,   0.00, 90.00, 359.94);
    CreateDynamicObject(19377, 1878.70, 1188.09, 20.44,   0.00, 90.00, 359.94);
    CreateDynamicObject(19377, 1878.72, 1197.67, 20.44,   0.00, 90.00, 359.94);
    CreateDynamicObject(19377, 1889.14, 1188.18, 20.44,   0.00, 90.00, 359.94);
    CreateDynamicObject(19377, 1889.20, 1197.74, 20.44,   0.00, 90.00, 359.94);
    CreateDynamicObject(19377, 1899.38, 1192.70, 20.44,   0.00, 90.00, 359.94);
    CreateDynamicObject(19377, 1899.41, 1197.77, 20.44,   0.00, 90.00, 359.94);
    CreateDynamicObject(19377, 1889.01, 1207.26, 20.44,   0.00, 90.00, 359.94);
    CreateDynamicObject(19377, 1889.02, 1216.86, 20.44,   0.00, 90.00, 359.94);
    CreateDynamicObject(19377, 1878.55, 1216.90, 20.44,   0.00, 90.00, 359.94);
    CreateDynamicObject(19377, 1878.54, 1207.29, 20.44,   0.00, 90.00, 359.94);
    CreateDynamicObject(19377, 1868.31, 1207.35, 20.44,   0.00, 90.00, 359.94);
    CreateDynamicObject(19377, 1868.31, 1216.83, 20.44,   0.00, 90.00, 359.94);
    CreateDynamicObject(19377, 1868.33, 1226.47, 20.44,   0.00, 90.00, 359.83);
    CreateDynamicObject(19377, 1868.33, 1236.14, 20.44,   0.00, 90.00, 360.01);
    CreateDynamicObject(19377, 1870.79, 1236.01, 20.44,   0.00, 90.00, 360.01);
    CreateDynamicObject(19377, 1870.68, 1226.47, 20.44,   0.00, 90.00, 360.01);*/
    //HQ Mecanicos
    portaomec2 = CreateDynamicObject(980,952.79998779297,-1559.8000488281,15.300000190735,0.0,0.0,0.0);
    portaomec = CreateDynamicObject(980,952.9434800,-1501.3525400,15.4121800,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(19448,1013.4442100,-1540.8234900,18.1963000,0.0000000,90.0000000,12.1977300); //
    CreateDynamicObject(19448,998.4401200,-1542.3095700,18.1963000,0.0000000,90.0000000,358.6936600); //
    CreateDynamicObject(19448,1010.0200200,-1541.1837200,18.1963000,0.0000000,90.0000000,12.1977300); //
    CreateDynamicObject(19448,1006.6973300,-1541.9434800,18.1963000,0.0000000,90.0000000,12.1977000); //
    CreateDynamicObject(19448,1003.1588100,-1542.2407200,18.1963000,0.0000000,90.0000000,12.1977000); //
    CreateDynamicObject(19448,999.5836200,-1542.2796600,18.1963000,0.0000000,90.0000000,12.1977000); //
    CreateDynamicObject(10401,985.7457300,-1522.7235100,14.6247700,0.0000000,0.0000000,45.0958100); //
    CreateDynamicObject(978,980.7175300,-1538.9660600,13.4377000,0.0000000,0.0000000,180.7740900); //
    CreateDynamicObject(978,992.2317500,-1538.7929700,13.4377000,0.0000000,0.0000000,180.7741100); //
    CreateDynamicObject(978,982.8488200,-1538.9412800,13.4377000,0.0000000,0.0000000,180.7740900); //
    CreateDynamicObject(987,1015.8983800,-1545.1449000,17.5390900,0.0000000,0.0000000,100.7354400); //
    CreateDynamicObject(987,1015.8983800,-1545.1449000,12.5265300,0.0000000,0.0000000,100.7354400); //
   // CreateDynamicObject(980,952.9434800,-1501.3525400,15.4121800,0.0000000,0.0000000,0.0000000); //  2

    CreateDynamicObject(1649,984.9779100,-1546.4293200,22.6703300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(1649,980.5999800,-1546.4293200,22.6703000,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(1649,976.2000100,-1546.4293200,22.6703000,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(1649,971.7999900,-1546.4293200,22.6703000,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(1649,967.5000000,-1546.4293200,22.6703000,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(1523,959.8203100,-1546.3774400,21.1588000,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(1649,963.7789900,-1546.4105200,22.6703000,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(1649,971.7999900,-1546.4293200,22.6703000,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(1649,976.2000100,-1546.4293200,22.6703000,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(1649,980.5999800,-1546.4293200,22.6703000,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(1649,984.9779100,-1546.4293200,22.6703300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(1649,963.7928500,-1546.3961200,22.6703000,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(1649,967.5000000,-1546.4293200,22.6703000,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(19370,985.5177000,-1559.2209500,20.5270000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,985.5177000,-1556.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,985.5177000,-1553.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,985.4732100,-1549.9957300,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,985.5177000,-1547.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,982.0000000,-1559.2169200,20.5270000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,979.0000000,-1559.2169200,20.5270000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,976.0000000,-1559.2169200,20.5270000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,973.0000000,-1559.2169200,20.5270000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,970.0000000,-1559.2169200,20.5270000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,967.0000000,-1559.2169200,20.5270000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,964.0000000,-1559.2169200,20.5270000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,961.0000000,-1559.2169200,20.5270000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,959.0000000,-1559.2169200,20.5270000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,982.0000000,-1553.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,979.0000000,-1553.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,976.0000000,-1553.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,973.4000200,-1553.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,970.0000000,-1553.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,967.0000000,-1553.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,964.0000000,-1553.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,961.0000000,-1553.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,973.4000200,-1553.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,983.0000000,-1556.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,980.0000000,-1556.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,976.9994500,-1556.2838100,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,974.0000000,-1556.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,971.0000000,-1556.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,969.0000000,-1556.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,966.0000000,-1556.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,963.0000000,-1556.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,985.5177000,-1556.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,960.0000000,-1556.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,982.9618500,-1549.9199200,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,981.0000000,-1549.9957300,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,979.0000000,-1549.9957300,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,976.0000000,-1549.9957300,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,973.0000000,-1549.9957300,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,970.0000000,-1549.9957300,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,967.0000000,-1549.9957300,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,96.0000000,-1549.9957300,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,964.0000000,-1549.9957300,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,961.0000000,-1549.9957300,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,983.0000000,-1547.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,981.0000000,-1547.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,979.0000000,-1547.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,976.0000000,-1547.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,973.0000000,-1547.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,970.0000000,-1547.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,967.0000000,-1547.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,964.0000000,-1547.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,961.0000000,-1547.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(19370,985.5177000,-1547.0000000,20.5470000,0.0000000,90.0000000,0.0000000); //
    CreateDynamicObject(1649,984.3504600,-1546.4241900,23.1467600,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(3475,962.6358000,-1561.5091600,22.2311000,0.0000000,0.0000000,89.6235000); //
    CreateDynamicObject(3475,971.0000000,-1561.5091600,21.2281000,0.0000000,0.0000000,90.2350000); //
    CreateDynamicObject(3475,977.0000000,-1561.5091600,21.2081000,0.0000000,0.0000000,90.2350000); //
    CreateDynamicObject(3475,983.0000000,-1561.5091600,21.2081000,0.0000000,0.0000000,90.2350000); //
    CreateDynamicObject(3475,986.0000000,-1561.5091600,21.1881000,0.0000000,0.0000000,90.2350000); //
    CreateDynamicObject(3475,966.0000000,-1561.5091600,22.2311000,0.0000000,0.0000000,89.6235000); //
    CreateDynamicObject(2290,983.6030900,-1547.1236600,20.6285400,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2357,984.7576900,-1549.2248500,20.6318900,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2290,985.4749100,-1550.9460400,20.7606900,0.0000000,0.0000000,178.5733300); //
    CreateDynamicObject(2282,986.6820100,-1548.8918500,22.1637800,0.0000000,0.0000000,267.3780500); //
    CreateDynamicObject(2108,982.4194900,-1550.6344000,21.0399400,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2108,982.2631200,-1547.6383100,21.0399400,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(1703,981.7468300,-1550.0249000,20.6318300,0.0000000,0.0000000,90.3368500); //
    CreateDynamicObject(1737,986.2021500,-1555.7181400,21.0399400,0.0000000,0.0000000,90.8023600); //
    CreateDynamicObject(14820,986.1696200,-1555.2509800,21.8853200,0.0000000,0.0000000,271.1153300); //
    CreateDynamicObject(1416,960.2601900,-1559.2452400,21.0399400,0.0000000,0.0000000,271.5480000); //
    CreateDynamicObject(1429,1389.4565400,-1391.7301000,21.0399400,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(1429,960.6178000,-1559.2663600,22.0129000,0.0000000,0.0000000,90.2198000); //
    CreateDynamicObject(1762,964.4796800,-1556.9775400,20.6337600,0.0000000,0.0000000,271.7127400); //
    CreateDynamicObject(1762,964.4530600,-1558.9539800,20.6337600,0.0000000,0.0000000,271.7127400); //
    CreateDynamicObject(2164,959.9224200,-1555.5937500,20.6956000,0.0000000,0.0000000,91.1535900); //
    CreateDynamicObject(1829,986.3219000,-1560.2868700,21.0331500,0.0000000,0.0000000,271.7243700); //
    CreateDynamicObject(2847,972.8049300,-1548.5028100,20.3470100,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2847,976.3051100,-1553.7552500,20.6330300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2847,976.3236100,-1555.6890900,20.6330300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2847,978.2640400,-1555.7003200,20.6330300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2847,978.2774700,-1554.7258300,20.6330300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2847,978.2382200,-1553.7779500,20.6330300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2847,976.3327600,-1556.6278100,20.6330300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2847,978.2738600,-1556.6124300,20.6330300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2847,978.2892500,-1557.5876500,20.6330300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2847,976.3448500,-1557.5466300,20.6330300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(1824,979.0332600,-1555.1447800,20.6429100,0.0000000,0.0000000,270.3701200); //
    CreateDynamicObject(1896,973.9237700,-1555.3753700,21.6667800,0.0000000,0.0000000,270.8891300); //
    CreateDynamicObject(11665,985.0242300,-1558.1718800,21.6746800,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2847,976.3054200,-1554.7227800,20.6330300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2847,974.3723800,-1553.7734400,20.6330300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2847,974.3714000,-1554.7388900,20.6330300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2847,974.3883100,-1555.7263200,20.6330300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2847,974.4068600,-1556.6948200,20.6330300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2847,974.3941000,-1557.5573700,20.6330300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2847,972.4674100,-1557.5689700,20.6330300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2847,972.4793100,-1556.6275600,20.6330300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2847,972.4715600,-1555.6844500,20.6330300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2847,972.4585000,-1553.7592800,20.6330300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2847,972.5064700,-1554.7049600,20.6330300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2723,976.8707300,-1556.0578600,21.1726100,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2723,976.8906300,-1553.8514400,21.1706000,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2010,973.2885700,-1552.0098900,20.6416300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2010,978.2496900,-1552.1827400,20.6416300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(3439,987.2965700,-1552.6474600,20.6416300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(3439,959.8823900,-1549.6904300,20.6416300,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(14834,972.3939800,-1560.2945600,20.6423000,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(14834,979.7868700,-1559.9504400,20.6423000,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(5820,963.8138400,-1543.7600100,17.5297300,0.0000000,0.0000000,178.4279500); //
    //HQ HITMANS
    CreateDynamicObject(8675,1103.6000000,-313.1000100,82.0000000,0.0000000,0.0000000,88.8790000); //object(wddngchpl02_lvs) (1)
    CreateDynamicObject(672,1116.9000000,-314.2000100,73.0000000,0.0000000,0.0000000,337.5000000); //object(sm_veg_tree5) (1)
    CreateDynamicObject(13206,1097.5000000,-305.2999900,72.9000000,0.0000000,0.0000000,88.7290000); //object(cetruth_barn02) (1)
    CreateDynamicObject(13206,1086.5000000,-293.1000100,72.9000000,0.0000000,0.0000000,179.9950000); //object(cetruth_barn02) (2)
    CreateDynamicObject(3475,1124.1000000,-365.6000100,74.9000000,0.0000000,0.0000000,180.0000000); //object(vgsn_fncelec_pst) (1)
    CreateDynamicObject(3475,1124.2000000,-359.6000100,74.9000000,0.0000000,0.0000000,179.0000000); //object(vgsn_fncelec_pst) (2)
    CreateDynamicObject(3475,1124.2000000,-353.6000100,74.9000000,0.0000000,0.0000000,180.0000000); //object(vgsn_fncelec_pst) (5)
    CreateDynamicObject(3475,1124.2000000,-347.6000100,74.9000000,0.0000000,0.0000000,179.9950000); //object(vgsn_fncelec_pst) (6)
    CreateDynamicObject(3475,1124.3000000,-341.6000100,74.9000000,0.0000000,0.0000000,179.9950000); //object(vgsn_fncelec_pst) (7)
    CreateDynamicObject(3475,1124.4000000,-335.6000100,74.9000000,0.0000000,0.0000000,179.9950000); //object(vgsn_fncelec_pst) (16)
    CreateDynamicObject(3475,1124.4000000,-329.7000100,74.9000000,0.0000000,0.0000000,179.9950000); //object(vgsn_fncelec_pst) (17)
    CreateDynamicObject(3475,1124.6000000,-323.7999900,74.9000000,0.0000000,0.0000000,176.5340000); //object(vgsn_fncelec_pst) (18)
    CreateDynamicObject(3475,1124.9000000,-317.8999900,74.9000000,0.0000000,0.0000000,178.0870000); //object(vgsn_fncelec_pst) (23)
    CreateDynamicObject(3475,1125.1000000,-311.8999900,74.9000000,0.0000000,0.0000000,178.0830000); //object(vgsn_fncelec_pst) (24)
    CreateDynamicObject(3475,1125.3000000,-305.8999900,74.9000000,0.0000000,0.0000000,178.3230000); //object(vgsn_fncelec_pst) (27)
    CreateDynamicObject(3475,1125.5000000,-299.8999900,74.9000000,0.0000000,0.0000000,178.1750000); //object(vgsn_fncelec_pst) (28)
    CreateDynamicObject(3475,1124.0000000,-294.5000000,74.9000000,0.0000000,0.0000000,211.8140000); //object(vgsn_fncelec_pst) (29)
    CreateDynamicObject(3475,1119.8000000,-291.1000100,74.9000000,0.0000000,0.0000000,249.6520000); //object(vgsn_fncelec_pst) (30)
    CreateDynamicObject(3475,1114.2000000,-289.0000000,74.9000000,0.0000000,0.0000000,250.2890000); //object(vgsn_fncelec_pst) (31)
    CreateDynamicObject(3475,1108.6000000,-287.2000100,74.9000000,0.0000000,0.0000000,253.6830000); //object(vgsn_fncelec_pst) (32)
    CreateDynamicObject(3475,1102.9000000,-285.7999900,74.9000000,0.0000000,0.0000000,257.6390000); //object(vgsn_fncelec_pst) (33)
    CreateDynamicObject(3475,1097.1000000,-284.5000000,74.9000000,0.0000000,0.0000000,257.4920000); //object(vgsn_fncelec_pst) (34)
    CreateDynamicObject(3475,1091.3000000,-283.5000000,74.9000000,0.0000000,0.0000000,264.2210000); //object(vgsn_fncelec_pst) (35)
    CreateDynamicObject(3475,1085.4000000,-282.8999900,74.9000000,0.0000000,0.0000000,264.2160000); //object(vgsn_fncelec_pst) (36)
    CreateDynamicObject(3475,1079.5000000,-282.5000000,74.9000000,0.0000000,0.0000000,268.0120000); //object(vgsn_fncelec_pst) (37)
    CreateDynamicObject(3475,1073.5000000,-282.1000100,74.9000000,0.0000000,0.0000000,265.2890000); //object(vgsn_fncelec_pst) (38)
    CreateDynamicObject(3475,1067.6000000,-281.6000100,74.9000000,0.0000000,0.0000000,266.4080000); //object(vgsn_fncelec_pst) (39)
    CreateDynamicObject(3475,1061.7000000,-281.2000100,74.9000000,0.0000000,0.0000000,266.4560000); //object(vgsn_fncelec_pst) (40)
    CreateDynamicObject(3475,1055.7000000,-280.8999900,74.9000000,0.0000000,0.0000000,267.6690000); //object(vgsn_fncelec_pst) (41)
    CreateDynamicObject(3475,1049.8000000,-280.7000100,74.9000000,0.0000000,0.0000000,270.0000000); //object(vgsn_fncelec_pst) (42)
    CreateDynamicObject(3475,1043.8000000,-280.7000100,74.9000000,0.0000000,0.0000000,270.0000000); //object(vgsn_fncelec_pst) (43)
    CreateDynamicObject(3475,1037.8000000,-280.7000100,74.9000000,0.0000000,0.0000000,270.0000000); //object(vgsn_fncelec_pst) (44)
    CreateDynamicObject(3475,1031.8000000,-280.6000100,74.9000000,0.0000000,0.0000000,268.8790000); //object(vgsn_fncelec_pst) (45)
    CreateDynamicObject(3475,1025.8000000,-280.3999900,74.9000000,0.0000000,0.0000000,268.7780000); //object(vgsn_fncelec_pst) (46)
    CreateDynamicObject(3475,1019.8000000,-280.2000100,74.9000000,0.0000000,0.0000000,268.7750000); //object(vgsn_fncelec_pst) (47)
    CreateDynamicObject(3475,1013.8000000,-280.0000000,74.9000000,0.0000000,0.0000000,268.7750000); //object(vgsn_fncelec_pst) (48)
    CreateDynamicObject(3475,1008.4000000,-281.5000000,74.9000000,0.0000000,0.0000000,302.4180000); //object(vgsn_fncelec_pst) (49)
    CreateDynamicObject(3475,1006.0000000,-285.8999900,74.9000000,0.0000000,0.0000000,359.0000000); //object(vgsn_fncelec_pst) (50)
    CreateDynamicObject(3475,1006.1000000,-291.8999900,74.9000000,0.0000000,0.0000000,2.5990000); //object(vgsn_fncelec_pst) (51)
    CreateDynamicObject(3475,1006.3000000,-297.8999900,74.9000000,0.0000000,0.0000000,2.5500000); //object(vgsn_fncelec_pst) (52)
    CreateDynamicObject(3475,1006.5000000,-303.8999900,74.9000000,0.0000000,0.0000000,2.5490000); //object(vgsn_fncelec_pst) (53)
    CreateDynamicObject(3475,1006.8000000,-309.8999900,74.9000000,0.0000000,0.0000000,2.5490000); //object(vgsn_fncelec_pst) (54)
    CreateDynamicObject(3475,1007.0000000,-315.7999900,74.9000000,0.0000000,0.0000000,2.3570000); //object(vgsn_fncelec_pst) (55)
    CreateDynamicObject(3475,1007.3000000,-321.7999900,74.9000000,0.0000000,0.0000000,3.4300000); //object(vgsn_fncelec_pst) (56)
    CreateDynamicObject(3475,1007.6000000,-327.7999900,74.9000000,0.0000000,0.0000000,3.4280000); //object(vgsn_fncelec_pst) (57)
    CreateDynamicObject(3475,1007.8000000,-333.7999900,74.9000000,0.0000000,0.0000000,1.1850000); //object(vgsn_fncelec_pst) (58)
    CreateDynamicObject(3475,1007.8000000,-339.7999900,74.9000000,0.0000000,0.0000000,0.1080000); //object(vgsn_fncelec_pst) (59)
    CreateDynamicObject(3475,1007.9000000,-345.7999900,74.9000000,0.0000000,0.0000000,2.3470000); //object(vgsn_fncelec_pst) (60)
    CreateDynamicObject(3475,1007.9000000,-351.7999900,74.9000000,0.0000000,0.0000000,358.9810000); //object(vgsn_fncelec_pst) (61)
    CreateDynamicObject(3475,1007.9000000,-357.7999900,74.9000000,0.0000000,0.0000000,1.2210000); //object(vgsn_fncelec_pst) (62)
    CreateDynamicObject(3475,1008.2000000,-363.6000100,74.9000000,0.0000000,0.0000000,4.5850000); //object(vgsn_fncelec_pst) (64)
    CreateDynamicObject(3475,1122.2000000,-370.5000000,74.9000000,0.0000000,0.0000000,135.1370000); //object(vgsn_fncelec_pst) (65)
    CreateDynamicObject(3475,1117.3000000,-372.8999900,74.9000000,0.0000000,0.0000000,95.8240000); //object(vgsn_fncelec_pst) (66)
    CreateDynamicObject(3475,1111.4000000,-373.2000100,74.9000000,0.0000000,0.0000000,89.3820000); //object(vgsn_fncelec_pst) (67)
    CreateDynamicObject(3475,1105.5000000,-373.1000100,74.9000000,0.0000000,0.0000000,89.3790000); //object(vgsn_fncelec_pst) (68)
    CreateDynamicObject(3475,1099.5000000,-373.0000000,74.9000000,0.0000000,0.0000000,89.3790000); //object(vgsn_fncelec_pst) (69)
    CreateDynamicObject(3475,1093.6000000,-372.5000000,74.9000000,0.0000000,0.0000000,81.5290000); //object(vgsn_fncelec_pst) (70)
    CreateDynamicObject(3475,1087.8000000,-371.2999900,74.9000000,0.0000000,0.0000000,75.0350000); //object(vgsn_fncelec_pst) (71)
    CreateDynamicObject(3475,1082.1000000,-369.7000100,74.9000000,0.0000000,0.0000000,73.9100000); //object(vgsn_fncelec_pst) (72)
    CreateDynamicObject(3475,1076.4000000,-368.7999900,74.9000000,0.0000000,0.0000000,89.6050000); //object(vgsn_fncelec_pst) (73)
    CreateDynamicObject(3475,1070.4000000,-368.7000100,74.9000000,0.0000000,0.0000000,88.3870000); //object(vgsn_fncelec_pst) (74)
    CreateDynamicObject(3475,1064.4000000,-368.5000000,74.9000000,0.0000000,0.0000000,88.3850000); //object(vgsn_fncelec_pst) (75)
    CreateDynamicObject(3475,1058.4000000,-368.3999900,74.9000000,0.0000000,0.0000000,89.5060000); //object(vgsn_fncelec_pst) (76)
    CreateDynamicObject(3475,1052.5000000,-368.3999900,74.9000000,0.0000000,0.0000000,90.6270000); //object(vgsn_fncelec_pst) (77)
    CreateDynamicObject(3475,1046.5000000,-368.5000000,74.9000000,0.0000000,0.0000000,90.6740000); //object(vgsn_fncelec_pst) (78)
    CreateDynamicObject(3475,1011.2000000,-366.2000100,74.9000000,0.0000000,0.0000000,91.6930000); //object(vgsn_fncelec_pst) (81)
    CreateDynamicObject(13002,1549.0000000,-31.2000000,32.0000000,0.0000000,0.0000000,99.4980000); //object(cuntebigbarn) (2)
    CreateDynamicObject(3475,1013.6000000,-366.1000100,74.9000000,0.0000000,0.0000000,91.6920000); //object(vgsn_fncelec_pst) (82)
    CreateDynamicObject(3475,1040.5000000,-368.5000000,74.9000000,0.0000000,0.0000000,89.1650000); //object(vgsn_fncelec_pst) (83)
    CreateDynamicObject(3475,1034.7000000,-367.7999900,74.9000000,0.0000000,0.0000000,76.8240000); //object(vgsn_fncelec_pst) (84)
    CreateDynamicObject(3475,1031.6000000,-367.1000100,74.9000000,0.0000000,0.0000000,77.3500000); //object(vgsn_fncelec_pst) (85)
    CreateDynamicObject(791,1032.2000000,-348.6000100,72.0000000,0.0000000,0.0000000,112.6470000); //object(vbg_fir_copse) (1)
    CreateDynamicObject(1482,1112.9000000,-323.2000100,74.3000000,0.0000000,0.0000000,178.8790000); //object(dyn_garrage1) (1)
    CreateDynamicObject(705,1117.0000000,-366.1000100,73.0000000,0.0000000,0.0000000,218.1060000); //object(sm_veg_tree7vbig) (1)
    CreateDynamicObject(17039,1022.4004000,-362.5000000,72.8000000,0.0000000,0.0000000,0.0000000); //object(cuntw_weebarn1_) (1)

//FIM OBJETOS - BRASIL PlayGamer OWNAAAA

//====================================[CARROS CASAS '-']================================================
    for(new h = 0; h < sizeof(HouseInfo); h++)
    {
        if(HouseInfo[h][hAtiva] == 1)
        {
          HouseInfo[h][hVeiculo] = CreateVehicle(HouseInfo[h][hVec], HouseInfo[h][hSpawnX], HouseInfo[h][hSpawnY], HouseInfo[h][hSpawnZ], HouseInfo[h][hSpawnA], HouseInfo[h][hVcol1], HouseInfo[h][hVcol2], 6000000);
          VTrancado[HouseInfo[h][hVeiculo]] = 1;
          LockCar(HouseInfo[h][hVeiculo]);
          SetVehicleToRespawn(HouseInfo[h][hVeiculo]);
        }
    }//100
    getdate(AnoGMX, MesGMX, DiaGMX);
    gettime(HoraGMX, MinutoGMX, SegundoGMX);
//CARROS AQUI

//|========================================[CARROS Exército ]==================================|
    CopCarros[0] = AddStaticVehicleEx(596,-1330.4000244,439.3999939,7.3000002,0.0000000,86,86,1200); //Police Car (LSPD)
    CopCarros[1] = AddStaticVehicleEx(596,-1325.0000000,439.5000000,7.3000002,0.0000000,86,86,1200); //Police Car (LSPD)
    CopCarros[2] = AddStaticVehicleEx(596,-1319.5999756,439.7000122,7.3000002,0.0000000,86,86,1200); //Police Car (LSPD)
    CopCarros[3] = AddStaticVehicleEx(596,-1314.0000000,439.7000122,7.3000002,0.0000000,86,86,1200); //Police Car (LSPD)
    CopCarros[4] = AddStaticVehicleEx(470,-1306.0999756,439.7999878,7.1999998,0.0000000,-1,-1,1200); //Patriot
    CopCarros[5] = AddStaticVehicleEx(470,-1299.8000488,439.7999878,7.1999998,0.0000000,-1,-1,1200); //Patriot
    CopCarros[6] = AddStaticVehicleEx(470,-1293.0999756,439.8999939,7.1999998,0.0000000,-1,-1,1200); //Patriot
    CopCarros[7] = AddStaticVehicleEx(427,-1286.0000000,441.1000061,7.4000001,0.0000000,86,86,1200); //Enforcer
    CopCarros[8] = AddStaticVehicleEx(427,-1279.0999756,441.1000061,7.4000001,0.0000000,86,86,1200); //Enforcer
    CopCarros[9] = AddStaticVehicleEx(433,-1272.5000000,442.2000122,7.8000002,0.0000000,-1,-1,1200); //Barracks
    CopCarros[10] = AddStaticVehicleEx(601,-1265.3000488,441.5000000,7.0999999,0.0000000,-1,-1,1200); //S.W.A.T. Van
    CopCarros[11] = AddStaticVehicleEx(525,-1284.3000488,476.3999939,7.1999998,180.0000000,16,16,1200); //Tow Truck
    CopCarros[12] = AddStaticVehicleEx(437,-1243.0999756,441.8999939,7.4000001,89.4946289,16,16,1200); //Coach
    CopCarros[13] = AddStaticVehicleEx(520,-1443.8000488,506.7999878,18.8999996,270.2500000,-1,-1,1200); //Hydra
    CopCarros[14] = AddStaticVehicleEx(520,-1425.5000000,507.0000000,18.8999996,270.2471924,-1,-1,1200); //Hydra
    CopCarros[15] = AddStaticVehicleEx(497,-1437.8000488,494.2999878,18.3999996,269.4946289,16,16,1200); //Police Maverick
    CopCarros[16] = AddStaticVehicleEx(425,-1267.3000488,494.5000000,19.1000004,271.0000000,-1,-1,1200); //Hunter
    CopCarros[17] = AddStaticVehicleEx(425,-1289.3000488,494.2999878,19.1000004,268.9947510,-1,-1,1200); //Hunter
    CopCarros[18] = AddStaticVehicleEx(476,-1415.0000000,494.8999939,19.3999996,270.0000000,86,6,1200); //Rustler
    CopCarros[19] = AddStaticVehicleEx(430,-1446.5999756,429.8999939,0.0000000,271.0000000,86,86,1200); //Predator
    CopCarros[20] = AddStaticVehicleEx(430,-1431.5999756,430.1000061,0.0000000,270.4995117,86,86,1200); //Predator
    CopCarros[21] = AddStaticVehicleEx(595,-1428.8000488,422.7999878,0.0000000,270.2500000,1,86,1200); //Launch
    CopCarros[22] = AddStaticVehicleEx(432,-1239.5000000,456.2000122,7.4000001,88.5000000,-1,-1,1200); //Rhino
    CopCarros[23] = AddStaticVehicleEx(432,-1239.4000244,464.8999939,7.4000001,87.9949951,-1,-1,1200); //Rhino
    //=======================================[ CARROS PRF ] ====================================
    CopCarros[28] = AddStaticVehicleEx(427,864.79998779,-1249.69995117,15.10000038,274.00000000,0,231,1200); //Enforcer
    CopCarros[29] = AddStaticVehicleEx(427,864.79998779,-1244.30004883,15.10000038,270.00000000,0,231,1200); //Enforcer
    CopCarros[30] = AddStaticVehicleEx(490,864.20001221,-1238.19995117,15.19999981,272.00000000,0,231,1200); //FBI Rancher
    CopCarros[31] = AddStaticVehicleEx(528,881.00000000,-1199.09997559,17.20000076,176.00000000,0,231,1200); //FBI Truck
    CopCarros[32] = AddStaticVehicleEx(596,860.79998779,-1206.30004883,16.79999924,180.00000000,0,231,1200); //Police Car (LSPD)
    CopCarros[33] = AddStaticVehicleEx(596,866.20001221,-1206.19995117,16.79999924,180.00000000,0,231,1200); //Police Car (LSPD)
    CopCarros[34] = AddStaticVehicleEx(596,871.29998779,-1206.40002441,16.79999924,176.00000000,0,231,1200); //Police Car (LSPD)
    CopCarros[35] = AddStaticVehicleEx(490,864.50000000,-1259.09997559,15.10000038,274.00000000,0,231,1200); //Police Ranger
    CopCarros[36] = AddStaticVehicleEx(490,864.59997559,-1254.19995117,15.30000019,274.00000000,0,231,1200); //Police Ranger
    CopCarros[37] = AddStaticVehicleEx(497,833.09997559,-1217.19995117,17.20000076,0.00000000,0,231,1200); //Police Maverick
    CopCarros[38] = AddStaticVehicleEx(497,849.09997559,-1217.30004883,17.20000076,0.00000000,0,231,1200); //Police Maverick
    CopCarros[39] = AddStaticVehicleEx(470,886.90002441,-1199.50000000,17.10000038,178.00000000,0,231,1200); //Patriot
    CopCarros[40] = AddStaticVehicleEx(437,868.79998779,-1279.19995117,14.89999962,0.00000000,0,231,1200); //Coach
    CopCarros[41] = AddStaticVehicleEx(523,899.09997559,-1271.09997559,14.39999962,0.00000000,0,231,1200); //HPV1000
    CopCarros[42] = AddStaticVehicleEx(523,897.00000000,-1270.90002441,14.39999962,0.00000000,0,231,1200); //HPV1000
    CopCarros[43] = AddStaticVehicleEx(523,894.59997559,-1270.80004883,14.39999962,0.00000000,0,231,1200); //HPV1000
    CopCarros[44] = AddStaticVehicleEx(523,901.20001221,-1271.80004883,14.30000019,0.00000000,0,231,1200); //NRG-500
    CopCarros[45] = AddStaticVehicleEx(525,874.20001221,-1269.00000000,14.80000019,0.00000000,0,231,1200); //Tow Truck
    CopCarros[46] = AddStaticVehicleEx(525,883.90002441,-1268.69995117,14.69999981,0.00000000,0,231,1200); //Tow Truck
    CopCarros[47] = AddStaticVehicleEx(525,889.29998779,-1269.19995117,14.69999981,0.00000000,0,231,1200); //Tow Truck
    CopCarros[48] = AddStaticVehicleEx(525,879.09997559,-1268.00000000,14.69999981,0.00000000,0,231,1200); //Tow Truck
    CopCarros[49] = AddStaticVehicleEx(411,893.79998779,-1207.80004883,16.79999924,176.00000000,0,231,1200); //Infernus
    CopCarros[50] = AddStaticVehicleEx(560,898.70001221,-1207.90002441,16.79999924,172.00000000,0,231,1200); //Sultan
//============================================[Carros HQ PM]==========================================================//
    CopCarros[79] = AddStaticVehicleEx(427,1538.50000000,-1648.00000000,6.09999990,180.00000000,1,79,1200); //Enforcer
    CopCarros[80] = AddStaticVehicleEx(596,1544.69921875,-1667.69921875,5.69999981,90.00000000,1,79,1200); //Police Car (LSPD)
    CopCarros[81] = AddStaticVehicleEx(596,1544.89941406,-1659.29980469,5.69999981,90.00000000,1,79,1200); //Police Car (LSPD)
    CopCarros[82] = AddStaticVehicleEx(596,1544.89941406,-1676.29980469,5.69999981,90.00000000,1,79,1200); //Police Car (LSPD)
    CopCarros[83] = AddStaticVehicleEx(523,1545.09960938,-1684.69921875,5.59999990,85.99548340,1,79,1200); //HPV1000
    CopCarros[84] = AddStaticVehicleEx(528,1558.69921875,-1710.79980469,6.09999990,0.00000000,1,79,1200); //FBI Truck
    CopCarros[85] = AddStaticVehicleEx(599,1574.39941406,-1710.09960938,6.30000019,0.00000000,1,79,1200); //Police Ranger
    CopCarros[86] = AddStaticVehicleEx(599,1578.69921875,-1709.79980469,6.30000019,0.00000000,1,79,1200); //Police Ranger
    CopCarros[87] = AddStaticVehicleEx(490,1587.30004883,-1710.30004883,6.19999981,0.00000000,1,79,1200); //FBI Rancher
    CopCarros[88] = AddStaticVehicleEx(490,1601.59960938,-1699.69921875,6.19999981,90.00000000,1,79,1200); //FBI Rancher
    CopCarros[89] = AddStaticVehicleEx(596,1601.40002441,-1692.09997559,5.69999981,90.00000000,1,79,1200); //Police Car (LSPD)
    CopCarros[90] = AddStaticVehicleEx(596,1601.50000000,-1687.80004883,5.69999981,90.00000000,1,79,1200); //Police Car (LSPD)
    CopCarros[91] = AddStaticVehicleEx(596,1601.59997559,-1683.90002441,5.69999981,90.00000000,1,79,1200); //Police Car (LSPD)
    CopCarros[92] = AddStaticVehicleEx(523,1604.69995117,-1624.09997559,13.19999981,88.00000000,1,79,1200); //HPV1000
    CopCarros[93] = AddStaticVehicleEx(523,1604.59960938,-1620.89941406,13.19999981,87.99499512,1,79,1200); //HPV1000
    CopCarros[94] = AddStaticVehicleEx(523,1604.80004883,-1617.40002441,13.19999981,87.99499512,1,79,1200); //HPV1000
    CopCarros[95] = AddStaticVehicleEx(523,1604.59997559,-1614.19995117,13.19999981,87.99499512,1,79,1200); //HPV1000
    CopCarros[96] = AddStaticVehicleEx(523,1604.69995117,-1610.80004883,13.19999981,87.99499512,1,79,1200); //HPV1000
    CopCarros[97] = AddStaticVehicleEx(523,1604.59960938,-1627.29980469,13.19999981,85.99548340,1,79,1200); //NRG-500
    CopCarros[98] = AddStaticVehicleEx(523,1604.19995117,-1630.30004883,13.19999981,85.99645996,1,79,1200); //NRG-500
    CopCarros[99] = AddStaticVehicleEx(431,1600.29980469,-1605.69921875,13.69999981,90.00000000,1,79,1200); //Bus
    CopCarros[100] = AddStaticVehicleEx(596,1569.09997559,-1607.09997559,13.19999981,180.00000000,1,79,1200); //Police Car (LSPD)
    CopCarros[101] = AddStaticVehicleEx(596,1580.89941406,-1606.59960938,13.19999981,180.00000000,1,79,1200); //Police Car (LSPD)
    CopCarros[102] = AddStaticVehicleEx(596,1575.19995117,-1606.69995117,13.19999981,180.00000000,1,79,1200); //Police Car (LSPD)
    CopCarros[103] = AddStaticVehicleEx(599,1563.19995117,-1607.30004883,13.80000019,180.00000000,1,79,1200); //Police Ranger
    CopCarros[104] = AddStaticVehicleEx(599,1557.69995117,-1606.80004883,13.80000019,180.00000000,1,79,1200); //Police Ranger
    CopCarros[105] = AddStaticVehicleEx(596,1565.19995117,-1710.09997559,5.69999981,358.00000000,1,79,1200); //Police Car (LSPD)
    CopCarros[106] = AddStaticVehicleEx(497,1568.69995117,-1647.00000000,28.70000076,0.00000000,1,79,1200); //Police Maverick
    CopCarros[107] = AddStaticVehicleEx(497,1555.69995117,-1643.09997559,28.70000076,0.00000000,1,79,1200); //Police Maverick
    CopCarros[108] = AddStaticVehicle(427,1530.2258,-1647.0956,6.0299,181.7247,1,79);
    //================================[Carros HQ ROTA]==============================================//
    CopCarros[109] = AddStaticVehicleEx(427,304.00000000,-1487.40002441,24.79999924,235.99731445,1,255,1200); //Enforcer
    CopCarros[110] = AddStaticVehicleEx(528,299.79998779,-1490.50000000,24.79999924,234.00000000,1,255,1200); //FBI Truck
    CopCarros[111] = AddStaticVehicleEx(490,300.70001221,-1504.30004883,24.89999962,236.00000000,1,255,1200); //FBI Rancher
    CopCarros[112] = AddStaticVehicleEx(490,297.70001221,-1509.00000000,24.89999962,235.99731445,1,255,1200); //FBI Rancher
    CopCarros[113] = AddStaticVehicleEx(490,295.00000000,-1513.59997559,25.00000000,236.00000000,1,255,1200); //Police Ranger
    CopCarros[114] = AddStaticVehicleEx(490,292.00000000,-1518.69995117,25.00000000,235.99731445,1,255,1200); //Police Ranger
    CopCarros[115] = AddStaticVehicleEx(596,286.20001221,-1527.69995117,24.39999962,236.00000000,1,255,1200); //Police Car (LSPD)
    CopCarros[116] = AddStaticVehicleEx(596,289.10000610,-1523.30004883,24.39999962,235.99731445,1,255,1200); //Police Car (LSPD)
    CopCarros[117] = AddStaticVehicleEx(596,283.00000000,-1532.30004883,24.39999962,235.99731445,1,255,1200); //Police Car (LSPD)
    CopCarros[118] = AddStaticVehicleEx(596,279.70001221,-1536.90002441,24.39999962,235.99731445,1,255,1200); //Police Car (LSPD)
    CopCarros[119] = AddStaticVehicleEx(411,291.60000610,-1544.09997559,24.39999962,56.00000000,1,255,1200); //Infernus
    CopCarros[120] = AddStaticVehicleEx(596,297.10000610,-1535.50000000,24.39999962,56.00000000,1,255,1200); //Police Car (LSPD)
    CopCarros[121] = AddStaticVehicleEx(596,294.10000610,-1539.69995117,24.39999962,55.99731445,1,255,1200); //Police Car (LSPD)
    CopCarros[122] = AddStaticVehicleEx(523,324.89999390,-1495.00000000,24.60000038,52.00000000,1,255,1200); //NRG-500
    CopCarros[123] = AddStaticVehicleEx(523,323.60000610,-1496.59997559,24.60000038,52.00000000,1,255,1200); //NRG-500
    CopCarros[124] = AddStaticVehicleEx(523,322.39999390,-1499.19995117,24.60000038,51.99829102,1,255,1200); //NRG-500
    CopCarros[125] = AddStaticVehicleEx(523,316.89999390,-1506.19995117,24.60000038,58.00000000,1,255,1200); //HPV1000
    CopCarros[126] = AddStaticVehicleEx(523,315.50000000,-1508.19995117,24.60000038,57.99682617,1,255,1200); //HPV1000
    CopCarros[127] = AddStaticVehicleEx(523,314.00000000,-1510.50000000,24.60000038,57.99682617,1,255,1200); //HPV1000
    CopCarros[128] = AddStaticVehicleEx(523,312.39999390,-1512.69995117,24.60000038,57.99682617,1,255,1200); //HPV1000
    CopCarros[129] = AddStaticVehicleEx(523,310.50000000,-1515.09997559,24.60000038,57.99682617,1,255,1200); //HPV1000
    CopCarros[130] = AddStaticVehicleEx(523,308.50000000,-1517.90002441,24.60000038,57.99682617,1,255,1200); //HPV1000
    CopCarros[131] = AddStaticVehicleEx(497,349.10000610,-1478.80004883,76.80000305,30.00000000,1,255,1200); //Police Maverick
    CopCarros[132] = AddStaticVehicleEx(497,335.60000610,-1487.09997559,76.80000305,33.99816895,1,255,1200); //Police Maverick
    CopCarros[133] = AddStaticVehicleEx(427,307.39999390,-1482.80004883,24.79999924,236.00000000,1,255,1200); //Enforcer
    //================================[Carros HQ PC]==============================================//
    CopCarros[134] = AddStaticVehicleEx(528,611.2999900,-591.5999800,17.4000000,270.0000000,58,58,1200); //FBI Truck
    CopCarros[135] = AddStaticVehicleEx(528,611.2999900,-588.0000000,17.4000000,270.0000000,58,58,1200); //FBI Truck
    CopCarros[136] = AddStaticVehicleEx(490,638.2000100,-609.0000000,16.7000000,2.0000000,58,58,1200); //FBI Rancher
    CopCarros[137] = AddStaticVehicleEx(490,634.5000000,-609.2999900,16.7000000,2.0000000,58,58,1200); //FBI Rancher
    CopCarros[138] = AddStaticVehicleEx(490,631.2000100,-609.5000000,16.7000000,2.0000000,58,58,1200); //FBI Rancher
    CopCarros[139] = AddStaticVehicleEx(427,615.4000200,-597.0000000,17.5000000,270.0000000,58,58,1200); //Enforcer
    CopCarros[140] = AddStaticVehicleEx(427,615.4000200,-601.4000200,17.5000000,270.0000000,58,58,1200); //Enforcer
    CopCarros[141] = AddStaticVehicleEx(598,620.2999900,-610.0999800,17.1000000,0.0000000,58,58,1200); //Police Car (LVPD)
    CopCarros[142] = AddStaticVehicleEx(598,624.0000000,-610.0000000,16.9000000,0.0000000,58,58,1200); //Police Car (LVPD)
    CopCarros[143] = AddStaticVehicleEx(599,667.0000000,-580.5000000,16.7000000,90.0000000,58,58,1200); //Police Ranger
    CopCarros[144] = AddStaticVehicleEx(599,667.4000200,-585.9000200,16.7000000,90.0000000,58,58,1200); //Police Ranger
    CopCarros[145] = AddStaticVehicleEx(523,618.2999900,-585.0999800,16.9000000,194.0000000,58,58,1200); //HPV1000
    CopCarros[146] = AddStaticVehicleEx(523,619.5999800,-585.0999800,16.9000000,193.9970000,58,58,1200); //HPV1000
    CopCarros[147] = AddStaticVehicleEx(523,620.7000100,-585.0999800,16.9000000,193.9970000,58,58,1200); //HPV1000
    CopCarros[148] = AddStaticVehicleEx(523,643.4000200,-611.5999800,16.0000000,0.0000000,58,58,1200); //NRG-500
    CopCarros[149] = AddStaticVehicleEx(523,642.4000200,-611.5999800,16.0000000,0.0000000,58,58,1200); //NRG-500
    CopCarros[150] = AddStaticVehicleEx(497,664.9000200,-614.4000200,16.6000000,2.0000000,58,58,1200); //Police Maverick

    //=====================================[ carros BPM ]========================================================
	CopCarros[151] = AddStaticVehicleEx(490,1362.1000000,-1635.4000000,13.7000000,270.0000000,0,0,1200); //FBI Rancher
	CopCarros[152] = AddStaticVehicleEx(490,1362.1000000,-1639.6000000,13.7000000,269.9950000,0,0,1200); //FBI Rancher
	CopCarros[153] = AddStaticVehicleEx(490,1362.1000000,-1644.0000000,13.7000000,269.9950000,0,0,1200); //FBI Rancher
	CopCarros[154] = AddStaticVehicleEx(596,1361.5000000,-1647.7000000,13.2000000,270.0000000,0,0,1200); //Police Car (LSPD)
	CopCarros[155] = AddStaticVehicleEx(596,1361.5000000,-1651.3000000,13.2000000,270.0000000,0,0,1200); //Police Car (LSPD)
	CopCarros[156] = AddStaticVehicleEx(596,1361.5000000,-1655.1000000,13.2000000,270.0000000,0,0,1200); //Police Car (LSPD)
	CopCarros[157] = AddStaticVehicleEx(596,1361.5000000,-1658.8000000,13.2000000,270.0000000,0,0,1200); //Police Car (LSPD)
	CopCarros[158] = AddStaticVehicleEx(427,1388.0000000,-1618.1000000,13.8000000,75.6070000,0,0,1200); //Enforcer
	CopCarros[159] = AddStaticVehicleEx(427,1387.4000000,-1628.6000000,13.8000000,90.0000000,0,0,1200); //Enforcer
	CopCarros[160] = AddStaticVehicleEx(468,1354.4000000,-1666.6000000,13.4000000,270.0000000,0,0,1200); //Sanchez
	CopCarros[161] = AddStaticVehicleEx(468,1354.4000000,-1668.2000000,13.4000000,270.0000000,0,0,1200); //Sanchez
	CopCarros[162] = AddStaticVehicleEx(468,1354.4000000,-1669.8000000,13.4000000,270.0000000,0,0,1200); //Sanchez
	CopCarros[163] = AddStaticVehicleEx(468,1354.4000000,-1671.4000000,13.4000000,270.0000000,0,0,1200); //Sanchez
	CopCarros[164] = AddStaticVehicleEx(468,1354.3000000,-1672.9000000,13.4000000,270.0000000,0,0,1200); //Sanchez
    CopCarros[198] = AddStaticVehicleEx(497,1397.0996100,-1669.0996100,39.8000000,0.0000000,0,0,1200); //Police Maverick
    CopCarros[199] = AddStaticVehicleEx(497,1397.9000200,-1686.5999800,39.8000000,0.0000000,0,0,1200); //Police Maverick
//============================================= CARROS BOPE ===========================================================//
    CopCarros[200] = AddStaticVehicleEx(515,880.7316,-1021.7848,32.9183,179.4761,35,35,1200); //RoadTrainCopCarros[227] = AddStaticVehicleEx(427,934.5226,-1672.1676,13.6804,183.0149,231,231,1200); //FCR-900
    CopCarros[201] = AddStaticVehicleEx(427,885.0073,-1020.6960,32.0424,180.1949,35,35,1200); //Enforcer
    CopCarros[202] = AddStaticVehicleEx(528,888.6790,-1019.4478,31.9179,179.2106,35,35,1200); //FBI Truck
    CopCarros[203] = AddStaticVehicleEx(523,903.5828,-1038.1525,31.4662,156.8792,35,35,1200); //Police Bike
    CopCarros[204] = AddStaticVehicleEx(523,902.0659,-1038.1042,31.4680,160.3043,35,35,1200); //Police Bike
    CopCarros[205] = AddStaticVehicleEx(523,900.7343,-1038.1716,31.4642,160.0102,35,35,1200); //Police Bike
    CopCarros[206] = AddStaticVehicleEx(523,899.6212,-1038.1289,31.4679,160.6812,35,35,1200); //Police Bike
    CopCarros[207] = AddStaticVehicleEx(523,898.2197,-1038.1678,31.4753,162.6606,35,35,1200); //Police Bike
    CopCarros[208] = AddStaticVehicleEx(596,896.9946,-1051.1121,31.2961,0.0213,35,35,1200); //Police Car
    CopCarros[209] = AddStaticVehicleEx(596,892.7548,-1051.1250,31.2933,359.2698,35,35,1200); //Police Car
    CopCarros[210] = AddStaticVehicleEx(596,888.5630,-1051.1337,31.2927,359.9499,35,35,1200); //Police Car
    CopCarros[211] = AddStaticVehicleEx(596,884.3653,-1051.0752,31.3248,359.2575,35,35,1200); //Police Car
    CopCarros[212] = AddStaticVehicleEx(596,880.4496,-1050.9545,31.3227,359.3887,35,35,1200); //Police Car
    CopCarros[213] = AddStaticVehicleEx(596,915.8993,-1050.6915,31.2907,0.0000,35,35,1200); //Police Car
    CopCarros[214] = AddStaticVehicleEx(596,919.4147,-1050.9875,31.3198,359.7173,35,35,1200); //Police Car
    CopCarros[215] = AddStaticVehicleEx(490,939.2421,-1050.3506,31.6952,0.1340,35,35,1200); //FBI BOPE
    CopCarros[216] = AddStaticVehicleEx(490,935.2997,-1050.2898,31.7340,0.0007,35,35,1200); //FBI BOPE
    CopCarros[217] = AddStaticVehicleEx(490,931.3002,-1050.2910,31.7339,0.0000,35,35,1200); //FBI BOPE
    CopCarros[218] = AddStaticVehicleEx(497,917.7999900,-1022.7000100,112.5000000,1.0240000,35,35,1200); //Police Maverick
    CopCarros[219] = AddStaticVehicleEx(599,923.1937,-1050.3071,31.7380,359.9955,35,35,1200); //JEEP POLICE
    CopCarros[220] = AddStaticVehicleEx(599,927.2985,-1050.3141,31.7371,359.9996,35,35,1200); //JEEP POLICE
//================================================== CARROS PF ===============================================//
    CopCarros[221] = AddStaticVehicleEx(490,963.5000000,-1675.8994100,13.8000000,89.4950000,231,231,1200); //FBI Rancher
    CopCarros[222] = AddStaticVehicleEx(599,963.5999800,-1686.1000000,13.7000000,90.0000000,231,231,1200); //Police Ranger
    CopCarros[223] = AddStaticVehicleEx(599,963.5999800,-1689.5000000,13.7000000,90.0000000,231,231,1200); //Police Ranger
    CopCarros[224] = AddStaticVehicleEx(490,957.5999800,-1670.9000000,13.9000000,181.4670000,231,231,1200); //FBI Rancher
    CopCarros[225] = AddStaticVehicleEx(490,963.5996100,-1679.2998000,13.8894400,89.8190000,231,231,1200); //FBI Rancher
    CopCarros[226] = AddStaticVehicleEx(490,963.5996100,-1682.6992000,13.8894400,89.8190000,231,231,1200); //FBI Rancher
    CopCarros[227] = AddStaticVehicleEx(476,944.5996100,-1736.0996100,28.9000000,270.6540000,231,231,1200); //Rustler
    CopCarros[228] = AddStaticVehicleEx(497,954.1992200,-1718.0000000,23.8013100,180.0000000,231,231,1200); //Police Maverick
    CopCarros[229] = AddStaticVehicleEx(415,954.2999900,-1670.9000000,13.6081600,181.4670000,231,231,1200); //Cheetah
    CopCarros[230] = AddStaticVehicleEx(598,950.9000200,-1670.9000000,13.5014300,181.4670000,231,231,1200); //Police LV
    CopCarros[231] = AddStaticVehicleEx(598,947.5000000,-1670.9000000,13.5014300,181.4670000,231,231,1200); //Police LV
    CopCarros[232] = AddStaticVehicleEx(522,977.2000100,-1724.3000000,13.2000000,0.0000000,231,231,1200); //NRG-500
    CopCarros[233] = AddStaticVehicleEx(522,973.9000200,-1724.3000000,13.2000000,0.0000000,231,231,1200); //NRG-500
    CopCarros[234] = AddStaticVehicleEx(522,970.5000000,-1724.3000000,13.2000000,0.0000000,231,231,1200); //NRG-500
    CopCarros[235] = AddStaticVehicleEx(522,967.0999800,-1724.3000000,13.2000000,0.0000000,231,231,1200); //NRG-500
    CopCarros[236] = AddStaticVehicleEx(522,963.7000100,-1724.3000000,13.2000000,0.0000000,231,231,1200); //NRG-500
//=============================================[CARROS BALLAS]===========================================================================
    BallasCarros[0] = AddStaticVehicleEx(475,1092.80004883,-1249.80004883,15.69999981,0.00000000,179,179,1200); //Sabre
    BallasCarros[1] = AddStaticVehicleEx(565,1102.50000000,-1250.09997559,15.50000000,0.00000000,179,179,1200); //Flash
    BallasCarros[2] = AddStaticVehicleEx(567,1108.40002441,-1226.30004883,15.80000019,180.00000000,179,179,1200); //Savanna
    BallasCarros[3] = AddStaticVehicleEx(560,1103.00000000,-1225.80004883,15.60000038,180.00000000,179,179,1200); //Sultan
    BallasCarros[4] = AddStaticVehicleEx(482,1086.09997559,-1226.50000000,16.10000038,180.00000000,179,179,1200); //Burrito
    BallasCarros[5] = AddStaticVehicleEx(510,1084.09997559,-1191.69995117,17.89999962,178.00000000,179,179,1200); //Mountain Bike
    BallasCarros[6] = AddStaticVehicleEx(522,1098.90002441,-1224.80004883,15.50000000,180.00000000,179,179,1200); //NRG-500
    BallasCarros[7] = AddStaticVehicleEx(461,1095.69995117,-1224.69995117,15.50000000,182.00000000,179,179,1200); //PCJ-600
    BallasCarros[8] = AddStaticVehicleEx(510,1086.69995117,-1191.80004883,17.89999962,177.99499512,179,179,1200); //Mountain Bike
    BallasCarros[9] = AddStaticVehicleEx(468,1092.90002441,-1224.59997559,15.60000038,182.00000000,179,179,1200); //Sanchez
    BallasCarros[10] = AddStaticVehicleEx(480,1097.50000000,-1249.90002441,15.69999981,0.00000000,179,179,1200); //Comet
    BallasCarros[11] = AddStaticVehicleEx(402,1088.09997559,-1249.30004883,15.80000019,0.00000000,179,179,1200); //Buffalo
    BallasCarros[12] = AddStaticVehicleEx(559,1107.00000000,-1249.90002441,15.60000038,0.00000000,179,179,1200); //Jester
    BallasCarros[13] = AddStaticVehicleEx(426,1112.69995117,-1249.30004883,15.60000038,0.00000000,179,179,1200); //Premier
    BallasCarros[14] = AddStaticVehicleEx(487,1129.80004883,-1167.40002441,32.29999924,0.00000000,179,179,1200); //Maverick
//=============================================[Carros Dark Gods]======================================================================//
    ReggaeCar[0] = AddStaticVehicleEx(487,726.8523,-1461.4679,22.3871,87.9509,205,205,1200); //Maverick
    //ReggaeCar[1] = AddStaticVehicleEx(487,717.3994100,-1455.0996100,22.5000000,267.9950000,205,205,1200); //Maverick
    //ReggaeCar[2] = AddStaticVehicleEx(539,727.2999900,-1493.1999500,0.3000000,180.0000000,205,205,1200); //Vortex
    ReggaeCar[3] = AddStaticVehicleEx(493,731.9000200,-1494.8000500,0.0000000,180.0000000,205,205,1200); //Jetmax
    ReggaeCar[4] = AddStaticVehicleEx(493,717.9000200,-1494.3000500,0.0000000,180.0000000,205,205,1200); //Jetmax
    ReggaeCar[5] = AddStaticVehicleEx(560,723.0000000,-1433.1999500,13.3000000,90.0000000,205,205,1200); //Sultan
    ReggaeCar[6] = AddStaticVehicleEx(560,769.4000200,-1434.3000500,14.3000000,0.0000000,205,205,1200); //Sultan
    ReggaeCar[7] = AddStaticVehicleEx(560,731.0999800,-1433.3000500,13.3000000,90.0000000,205,205,1200); //Sultan
    ReggaeCar[8] = AddStaticVehicleEx(567,766.0000000,-1435.0999800,13.3000000,0.0000000,205,205,1200); //savana
    ReggaeCar[9] = AddStaticVehicleEx(567,763.4000200,-1434.8000500,13.6000000,0.0000000,205,205,1200); //savana
    ReggaeCar[10] = AddStaticVehicleEx(581,762.7000100,-1425.0000000,13.2000000,274.0000000,205,205,1200); //NRG-500
    ReggaeCar[11] = AddStaticVehicleEx(581,763.0000000,-1426.5000000,13.2000000,273.9990000,205,205,1200); //NRG-500
    ReggaeCar[12] = AddStaticVehicleEx(581,762.9000200,-1428.0000000,13.2000000,273.9990000,205,205,1200); //NRG-500
    ReggaeCar[13] = AddStaticVehicleEx(581,744.5000000,-1441.3000500,13.2000000,273.9990000,205,205,1200); //NRG-500
    ReggaeCar[14] = AddStaticVehicleEx(581,744.5999800,-1442.8000500,13.2000000,273.9990000,205,205,1200); //NRG-500
    //ReggaeCar[15] = AddStaticVehicleEx(522,744.7000100,-1444.5999800,13.2000000,273.9990000,205,205,1200); //NRG-500
    ReggaeCar[16] = AddStaticVehicleEx(535,721.2000100,-1439.4000200,13.3000000,90.0000000,205,205,1200); //salnvam
    ReggaeCar[17] = AddStaticVehicleEx(535,729.5000000,-1439.5000000,13.3000000,90.0000000,205,205,1200); //salnvam
    ReggaeCar[18] = AddStaticVehicleEx(559,705.2999900,-1438.8000500,13.3000000,0.0000000,205,205,1200); //Jester
    ReggaeCar[19] = AddStaticVehicleEx(560,701.7999900,-1438.8000500,13.3000000,0.0000000,205,205,1200); //Sultan
    ReggaeCar[20] = AddStaticVehicleEx(482,739.4000200,-1433.4000200,13.5000000,90.0000000,205,205,1200); //Borito
    ReggaeCar[21] = AddStaticVehicleEx(479,738.5000000,-1439.1999500,13.5000000,90.0000000,205,205,1200); //regina
    //ReggaeCar[22] = AddStaticVehicleEx(545,709.2000100,-1438.1999500,13.5000000,0.0000000,205,205,1200); //Hustler
    //ReggaeCar[23] = AddStaticVehicleEx(423,712.4000200,-1437.5999800,13.7000000,0.0000000,205,205,1200); //Mr Whoopee
//=============================================[CARROS GROOVE STREET]==============================================================--
    GrooveCar[0] = AddStaticVehicleEx(560,2507.19995117,-1678.00000000,13.39999962,344.00000000,226,226,1200); //Sultan
    GrooveCar[1] = AddStaticVehicleEx(559,2509.30004883,-1666.30004883,13.19999981,12.00000000,226,226,1200); //Jester
    GrooveCar[2] = AddStaticVehicleEx(475,2500.39990234,-1655.50000000,13.30000019,78.00769043,226,226,1200); //Sabre
    GrooveCar[3] = AddStaticVehicleEx(565,2482.69995117,-1687.69995117,13.19999981,354.00000000,226,226,1200); //Flash
    GrooveCar[4] = AddStaticVehicleEx(482,2473.89990234,-1685.59997559,13.80000019,0.00000000,226,226,1200); //Burrito
    GrooveCar[5] = AddStaticVehicleEx(567,2483.69995117,-1653.90002441,13.30000019,90.01049805,226,226,1200); //Savanna
    GrooveCar[6] = AddStaticVehicleEx(426,2469.10009766,-1671.09997559,13.10000038,14.01220703,226,226,1200); //Premier
    GrooveCar[7] = AddStaticVehicleEx(510,2480.10009766,-1683.50000000,13.19999981,0.00000000,226,226,1200); //Mountain Bike
    GrooveCar[8] = AddStaticVehicleEx(510,2478.00000000,-1682.69995117,13.00000000,0.00000000,226,226,1200); //Mountain Bike
    GrooveCar[9] = AddStaticVehicleEx(468,2499.50000000,-1683.19995117,13.10000038,0.00000000,226,226,1200); //Sanchez
    GrooveCar[10] = AddStaticVehicleEx(461,2492.10009766,-1684.19995117,13.00000000,358.00000000,226,226,1200); //PCJ-600
    GrooveCar[11] = AddStaticVehicleEx(522,2490.10009766,-1684.09997559,13.19999981,0.00000000,226,226,1200); //NRG-500
    GrooveCar[12] = AddStaticVehicleEx(487,2528.19995117,-1676.09997559,20.20000076,90.00000000,226,226,1200); //Maverick
//==========================================[ CARRROS AZTECAS ]=============================================================
    AztecasCar[0] = AddStaticVehicleEx(560,1672.80004883,-2115.50000000,13.39999962,270.00000000,246,246,1200); //Sultan
    AztecasCar[1] = AddStaticVehicleEx(567,1672.90002441,-2111.10009766,13.50000000,270.00000000,246,246,1200); //Savanna
    AztecasCar[2] = AddStaticVehicleEx(482,1705.09997559,-2123.69995117,13.80000019,0.00000000,246,246,1200); //Burrito
    AztecasCar[3] = AddStaticVehicleEx(565,1705.30004883,-2107.39990234,13.19999981,270.00000000,246,246,1200); //Flash
    AztecasCar[4] = AddStaticVehicleEx(426,1700.30004883,-2097.30004883,13.39999962,182.00000000,246,246,1200); //Premier
    AztecasCar[5] = AddStaticVehicleEx(475,1687.40002441,-2107.69995117,13.39999962,270.00000000,246,246,1200); //Sabre
    AztecasCar[6] = AddStaticVehicleEx(559,1691.80004883,-2117.60009766,13.10000038,270.00000000,246,246,1200); //Jester
    AztecasCar[7] = AddStaticVehicleEx(510,1687.09997559,-2120.10009766,13.19999981,0.00000000,246,246,1200); //Mountain Bike
    AztecasCar[8] = AddStaticVehicleEx(510,1685.30004883,-2120.00000000,13.19999981,0.00000000,246,246,1200); //Mountain Bike
    AztecasCar[9] = AddStaticVehicleEx(468,1693.59997559,-2107.69995117,13.30000019,176.00000000,246,246,1200); //Sanchez
    AztecasCar[10] = AddStaticVehicleEx(522,1701.09997559,-2117.30004883,13.00000000,0.00000000,246,246,1200); //NRG-500
    AztecasCar[11] = AddStaticVehicleEx(461,1698.80004883,-2117.30004883,13.10000038,0.00000000,246,246,1200); //PCJ-600
    AztecasCar[12] = AddStaticVehicleEx(402,1696.80004883,-2102.00000000,13.50000000,180.00000000,246,246,1200); //Buffalo
    AztecasCar[13] = AddStaticVehicleEx(487,1668.80004883,-2145.00000000,13.80000019,0.00000000,246,246,1200); //Maverick
//========================================[carros Vagos]============================================
    VagosCar[0] = AddStaticVehicleEx(560,2829.50000000,-1194.30004883,24.60000038,4.00000000,228,228,1200); //Sultan
    VagosCar[1] = AddStaticVehicleEx(559,2834.10009766,-1163.50000000,24.70000076,184.00000000,228,228,1200); //Jester
    VagosCar[2] = AddStaticVehicleEx(510,2814.39990234,-1187.80004883,24.89999962,0.00000000,228,228,1200); //Mountain Bike
    VagosCar[3] = AddStaticVehicleEx(567,2805.50000000,-1187.40002441,25.39999962,270.00000000,228,228,1200); //Savanna
    VagosCar[4] = AddStaticVehicleEx(475,2836.69995117,-1192.50000000,24.39999962,5.99914551,228,228,1200); //Sabre
    VagosCar[5] = AddStaticVehicleEx(522,2818.9468,-1179.0214,24.8215,182.2969,228,228,1200); //NRG-500
    VagosCar[6] = AddStaticVehicleEx(461,2822.80004883,-1178.80004883,24.89999962,180.00000000,228,228,1200); //PCJ-600
    VagosCar[7] = AddStaticVehicleEx(468,2820.7004,-1187.6853,24.8881,0.6519,228,228,1200); //Sanchez
    VagosCar[8] = AddStaticVehicleEx(480,2828.39990234,-1167.90002441,24.79999924,272.00000000,228,228,1200); //Comet
    VagosCar[9] = AddStaticVehicleEx(510,2817.10009766,-1187.80004883,24.89999962,0.00000000,228,228,1200); //Mountain Bike
    VagosCar[10] = AddStaticVehicleEx(562,2828.69995117,-1172.59997559,24.70000076,274.00000000,228,228,1200); //Elegy
    VagosCar[11] = AddStaticVehicleEx(565,2804.89990234,-1183.80004883,25.10000038,268.00000000,228,228,1200); //Flash
    VagosCar[12] = AddStaticVehicleEx(482,2826.89990234,-1198.09997559,25.20000076,2.00000000,228,228,1200); //Burrito
    VagosCar[13] = AddStaticVehicleEx(426,2806.10009766,-1180.59997559,25.20000076,268.00000000,228,228,1200); //Premier
    VagosCar[14] = AddStaticVehicleEx(487,2821.10009766,-1167.90002441,32.90000153,270.00000000,228,228,1200); //Maverick
//======================================= [ CARROS Storm ] ======================================================
    FDCar[0] = AddStaticVehicleEx(581,2466.1999500,-1542.8000500,23.9000000,180.0000000,2,2,1200);    //moto
    FDCar[1] = AddStaticVehicleEx(581,2467.5000000,-1542.8000500,23.9000000,179.9950000,2,2,1200);    //moto
    FDCar[2] = AddStaticVehicleEx(581,2468.8999000,-1542.8000500,23.8000000,179.9950000,2,2,1200);    //moto
    FDCar[3] = AddStaticVehicleEx(581,2470.3000500,-1542.8000500,23.8000000,179.9950000,2,2,1200);    //moto
    FDCar[4] = AddStaticVehicleEx(487,2458.0000000,-1530.5000000,32.8000000,0.0000000,2,2,1200);  //sultan
    FDCar[5] = AddStaticVehicleEx(560,2475.3120,-1556.6254,23.6754,0.0009,2,2,1200); //           /sultan
    FDCar[6] = AddStaticVehicleEx(560,2471.6316,-1556.3414,23.6711,358.0117,2,2,1200); //         /sultan
    FDCar[7] = AddStaticVehicleEx(567,2468.1636,-1556.1252,23.8064,0.3357,2,2,1200); //     savana
    FDCar[8] = AddStaticVehicleEx(567,2464.4546,-1556.5718,23.6251,356.8907,2,2,1200); //    savana
    FDCar[9] = AddStaticVehicleEx(535,2460.9277,-1556.0221,23.7615,358.7577,2,2,1200); //  Slamvan
    FDCar[10] = AddStaticVehicleEx(535,2479.4216,-1556.7848,23.7139,359.6642,2,2,1200); //    Slamvan
    FDCar[11] = AddStaticVehicleEx(559,2483.5984,-1556.9448,23.7268,0.2476,2,2,1200); //   Jester
    FDCar[12] = AddStaticVehicleEx(482,2487.3892,-1556.6525,23.7425,0.0173,2,2,1200); //   Burito
    FDCar[13] = AddStaticVehicleEx(479,2490.7285,-1556.4589,23.7618,358.6603,2,2,1200); // Regina
    FDCar[14] = AddStaticVehicleEx(581,2472.1416,-1542.9956,23.7347,179.3545,2,2,1200); //    //moto
    FDCar[15] = AddStaticVehicleEx(411,2456.5142,-1556.1709,23.6784,0.0031,2,2,1200); // siltan
 //===================================[CARROS HITMANS]==========================================================
    CarrosHit[0] = AddStaticVehicleEx(411,1098.5000000,-309.7000100,73.8000000,87.7570000,24,24,1200); //Infernus
    CarrosHit[1] = AddStaticVehicleEx(411,1098.6000000,-306.3999900,73.8000000,87.7530000,24,24,1200); //Infernus
    CarrosHit[2] = AddStaticVehicleEx(560,1098.7000000,-303.1000100,73.8000000,90.0000000,24,24,1200); //Sultan
    CarrosHit[3] = AddStaticVehicleEx(560,1098.7000000,-299.5000000,73.8000000,90.0000000,24,24,1200); //Sultan
    CarrosHit[4] = AddStaticVehicleEx(461,1090.9000000,-291.8999900,73.7000000,180.0000000,24,24,1200); //PCJ-600
    CarrosHit[5] = AddStaticVehicleEx(461,1087.7000000,-291.8999900,73.7000000,180.0000000,24,24,1200); //PCJ-600
    CarrosHit[6] = AddStaticVehicleEx(461,1084.4000000,-291.7999900,73.7000000,180.0000000,24,24,1200); //PCJ-600
    CarrosHit[7] = AddStaticVehicleEx(461,1080.9000000,-291.7999900,73.7000000,180.0000000,24,24,1200); //PCJ-600
    CarrosHit[8] = AddStaticVehicleEx(487,1065.4000000,-295.7999900,74.3000000,180.0000000,24,24,1200); //Maverick
    CarrosHit[9] = AddStaticVehicleEx(541,1112.3000000,-322.6000100,73.7000000,180.0000000,24,36,1200); //Bullet
//===========================================[CARROS MEDICOS]========================================================================
    MedicosCar[0] = AddStaticVehicleEx(416,1185.4093,-1336.1479,13.7229,269.2588,1,1,1200); // carro SAMU 1       [ 119 ]
    MedicosCar[1] = AddStaticVehicleEx(416,1177.5361,-1340.1204,14.0647,269.7826,1,1,1200); // carro SAMU 2       [ 120 ]
    MedicosCar[2] = AddStaticVehicleEx(416,1184.7588,-1311.7882,13.7154,270.0790,1,1,1200); // carro SAMU 3       [ 121 ]
    MedicosCar[3] = AddStaticVehicleEx(416,1177.3369,-1307.6559,14.0466,268.5302,1,1,1200); // carro SAMU 4       [ 122 ]
    MedicosCar[4] = AddStaticVehicleEx(487,1161.2926,-1321.7860,31.6694,359.7393,1,1,1200); // heli SAMU 5        [ 123 ]
    MedicosCar[5] = AddStaticVehicleEx(407,1184.5123,-1317.4987,13.8132,269.2199,1,1,1200); // bomb SAMU 6        [ 124 ]
    MedicosCar[6] = AddStaticVehicleEx(407,1184.5476,-1330.4323,13.8088,266.8372,1,1,1200); // bomb SAMU 7        [ 125 ]
    MedicosCar[7] = AddStaticVehicleEx(586,1187.4664,-1304.3861,13.0719,269.8548,1,1,1200); // moto SAMU 8        [ 126 ]
    MedicosCar[8] = AddStaticVehicleEx(586,1187.6246,-1302.4747,13.0700,270.8045,1,1,1200); // moto SAMU 1        [ 127 ]
    MedicosCar[9] = AddStaticVehicleEx(586,1187.7906,-1300.5535,13.0690,268.0529,1,1,1200); // moto SAMU 2        [ 128 ]
    MedicosCar[10] = AddStaticVehicleEx(563,1162.2268,-1309.1311,31.6690,180.6752,1,1,1200); // heli grande SAMU   [ 129 ]
//=============== MEDICOS NOVOS
    MedicosCar[11] = AddStaticVehicleEx(416,2036.0000000,-1428.5000000,17.3000000,180.0000000,1,1,1200); //Ambulance
    MedicosCar[12] = AddStaticVehicleEx(416,2036.0000000,-1438.5000000,17.5000000,180.0000000,1,1,1200); //Ambulance
    MedicosCar[13] = AddStaticVehicleEx(586,2015.8000000,-1409.7000000,16.6000000,180.7640000,1,1,1200); //Wayfarer
    MedicosCar[14] = AddStaticVehicleEx(586,2013.7000000,-1409.8000000,16.6000000,180.7640000,1,1,1200); //Wayfarer
    MedicosCar[15] = AddStaticVehicleEx(586,2011.5000000,-1409.9000000,16.6000000,180.7640000,1,1,1200); //Wayfarer
    MedicosCar[16] = AddStaticVehicleEx(586,2009.3000000,-1410.0000000,16.6000000,180.7640000,1,1,1200); //Wayfarer
    MedicosCar[17] = AddStaticVehicleEx(563,2028.9000000,-1381.2000000,49.2000000,90.0000000,1,1,1200); //Raindance
//============================================[CARROS REPORTERES]=====================================================
    NewsCar[0] = AddStaticVehicleEx(582,738.3984,-1334.7648,13.6000,181.2554,1,6,1200); // van reporter 1     [ 130 ]
    NewsCar[1] = AddStaticVehicleEx(582,741.8419,-1334.8721,13.5963,178.8535,1,6,1200); // van reporter 2     [ 131 ]
    NewsCar[2] = AddStaticVehicleEx(582,745.6342,-1334.8610,13.5953,179.1888,1,6,1200); // van reporter 3    [ 132 ]
    NewsCar[3] = AddStaticVehicleEx(582,749.2769,-1334.8060,13.5979,180.0729,1,6,1200); // van reporter 4   [ 133 ]
    NewsCar[4] = AddStaticVehicleEx(582,752.7092,-1334.7919,13.5958,181.4010,1,6,1200); // van reporter 5   [ 134 ]
    NewsCar[5] = AddStaticVehicleEx(586,782.6538,-1352.6757,13.5996,88.8960,1,6,1200); // moto reporter 6    [ 135 ]
    NewsCar[6] = AddStaticVehicleEx(586,782.7337,-1357.2595,13.5933,91.4296,1,6,1200); // moto reporter 7    [ 136 ]
    NewsCar[7] = AddStaticVehicleEx(586,782.6810,-1361.0303,13.5949,88.9797,1,6,1200); // moto reporter 8      [ 137 ]
    NewsCar[8] = AddStaticVehicleEx(488,741.9368,-1369.3556,25.8697,174.2482,1,6,1200); // heli reporter       [ 138 ]
    NewsCar[9] = AddStaticVehicleEx(586,782.6296,-1348.3770,13.5955,91.3518,1,6,1200); // moto reporter 7    [ 139 ]
    NewsCar[10] = AddStaticVehicleEx(586,782.5760,-1344.5055,13.5968,93.0199,1,6,1200); // moto reporter 8    [ 140 ]
//=============================================[Carros Taxistas]================================================================
    TaxiCar[0] = AddStaticVehicleEx(420,1028.6188,-1433.2297,13.3313,90.2572,6,6,1200); // Carro Taxistas 1     [ 166 ]
    TaxiCar[1] = AddStaticVehicleEx(420,1028.6086,-1437.5942,13.3342,89.0894,6,6,1200); // Carro Taxistas 2     [ 167 ]
    TaxiCar[2] = AddStaticVehicleEx(420,1028.8123,-1441.9640,13.3341,91.0990,6,6,1200); // Carro Taxistas 3     [ 168 ]
    TaxiCar[3] = AddStaticVehicleEx(420,1028.8928,-1446.4242,13.3343,89.0750,6,6,1200); // Carro Taxistas 4     [ 169 ]
    TaxiCar[4] = AddStaticVehicleEx(487,982.3621,-1467.4258,21.4407,359.7532,6,6,1200); // Heli Taxistas 5      [ 170 ]
    TaxiCar[5] = AddStaticVehicleEx(420,989.4200,-1433.9922,13.3264,181.5125,6,6,1200); // Carro Taxistas 6     [ 171 ]
    TaxiCar[6] = AddStaticVehicleEx(420,993.7621,-1433.9944,13.3264,181.9905,6,6,1200); // Carro Taxistas 7     [ 172 ]
    TaxiCar[7] = AddStaticVehicleEx(420,985.0569,-1434.1802,13.3271,177.5252,6,6,1200); // Carro Taxistas 8     [ 173 ]
    TaxiCar[8] = AddStaticVehicleEx(420,980.8220,-1433.9143,13.3262,178.8028,6,6,1200); // Carro Taxistas 9     [ 174 ]
    TaxiCar[9] = AddStaticVehicleEx(586,1029.6152,-1449.4296,13.1238,90.8806,6,6,1200); // moto taxista 1       [ 175 ]
    TaxiCar[10] = AddStaticVehicleEx(586,1029.5411,-1452.2153,13.1245,89.9486,6,6,1200); // moto taxista 2      [ 176 ]
    TaxiCar[11] = AddStaticVehicleEx(586,1029.5632,-1455.0842,13.1249,92.3829,6,6,1200); // moto taxista 3      [ 177 ]
    TaxiCar[12] = AddStaticVehicleEx(586,998.8055,-1432.9639,13.0671,179.1122,6,6,1200); // moto taxista 5      [ 178 ]
    TaxiCar[13] = AddStaticVehicleEx(586,1001.3549,-1433.1467,13.0670,184.8488,6,6,1200); // moto taxista 6       [ 179 ]
    TaxiCar[14] = AddStaticVehicleEx(586,1003.8781,-1433.1641,13.0668,182.8953,6,6,1200); // moto taxista 7       [ 180 ]
//=====================================[CARROS ALUGUEL]=======================================================
    CarAlug[0] = AddStaticVehicleEx(560,-1993.1045,241.7397,34.8769,268.3880,0,0,1200); // wang [ 194 ]
    CarAlug[1] = AddStaticVehicleEx(506,-1992.5270,246.2024,34.8764,265.1727,0,0,1200); // wang [ 195 ]
    CarAlug[2] = AddStaticVehicleEx(458,-1992.5665,250.8353,35.0905,265.6510,0,0,1200); // wang [ 196 ]
    CarAlug[3] = AddStaticVehicleEx(400,-1991.6487,255.4123,35.2642,264.4245,0,0,1200); // wang [ 197 ]
    CarAlug[4] = AddStaticVehicleEx(405,-1991.1527,259.6069,35.0708,265.0295,0,0,1200); // wang [ 198 ]
    CarAlug[5] = AddStaticVehicleEx(411,-1991.0232,264.3011,34.8981,264.4915,0,0,1200); // wang [ 199 ]
    CarAlug[6] = AddStaticVehicleEx(415,-1990.5845,268.7502,34.9469,265.1599,0,0,1200); // wang [ 200 ]
    CarAlug[7] = AddStaticVehicleEx(451,-1989.9050,273.2557,34.8807,265.2162,0,0,1200); // wang [ 201 ]
    CarAlug[8] = AddStaticVehicleEx(560,-1988.3324,307.4832,34.8841,267.5136,0,0,1200); // wang [ 202 ]
    CarAlug[9] = AddStaticVehicleEx(560,558.3553,-1289.7278,16.9551,0.8050,-1,-1,1200); // carro aluguel 1      [ 332 ]
    CarAlug[10] = AddStaticVehicleEx(560,554.5654,-1289.6489,16.9552,2.4649,-1,-1,1200); // carro aluguel 2      [ 333 ]
    CarAlug[11] = AddStaticVehicleEx(560,550.9343,-1289.6908,16.9546,3.3999,-1,-1,1200); // carro aluguel 3      [ 334 ]
    CarAlug[12] = AddStaticVehicleEx(506,546.8458,-1289.9054,16.9545,4.1478,-1,-1,1200); // carro aluguel 4      [ 335 ]
    CarAlug[13] = AddStaticVehicleEx(506,542.8229,-1290.2216,16.9480,3.6802,-1,-1,1200); // carro aluguel 5      [ 336 ]
    CarAlug[14] = AddStaticVehicleEx(506,538.1052,-1290.2968,16.9493,1.1534,-1,-1,1200); // carro aluguel 6      [ 337 ]
    CarAlug[15] = AddStaticVehicleEx(559,533.5905,-1290.3926,16.9486,2.4711,-1,-1,1200); // carro aluguel 7      [ 338 ]
    CarAlug[16] = AddStaticVehicleEx(559,528.9374,-1290.5078,16.9491,2.5434,-1,-1,1200); // carro aluguel 8      [ 339 ]
    CarAlug[17] = AddStaticVehicleEx(559,524.9777,-1290.4878,16.9490,4.3869,-1,-1,1200); // carro aluguel 9      [ 340 ]
    CarAlug[18] = AddStaticVehicleEx(480,520.7125,-1291.0891,16.9489,5.2022,-1,-1,1200); // carro aluguel 10     [ 341 ]
    CarAlug[19] = AddStaticVehicleEx(480,552.0004,-1263.1455,16.9484,209.2874,-1,-1,1200); // carro aluguel 11   [ 342 ]
    CarAlug[20] = AddStaticVehicleEx(480,548.2775,-1265.9437,16.9494,207.4516,-1,-1,1200); // carro aluguel 12   [ 343 ]
    CarAlug[21] = AddStaticVehicleEx(451,544.0808,-1268.7469,16.9525,209.3285,-1,-1,1200); // carro aluguel 13   [ 344 ]
    CarAlug[22] = AddStaticVehicleEx(451,540.1223,-1271.9517,16.9491,211.3782,-1,-1,1200); // carro aluguel 14   [ 345 ]
    CarAlug[23] = AddStaticVehicleEx(522,567.0040,-1280.6033,16.8134,101.3406,-1,-1,1200); // moto aluguel 1     [ 346 ]
    CarAlug[24] = AddStaticVehicleEx(522,567.1725,-1282.8904,16.8150,98.1773,7,79,1200); // moto aluguel 2     [ 347 ]
    CarAlug[25] = AddStaticVehicleEx(522,567.9107,-1285.1788,16.8099,104.7714,8,82,1200); // moto aluguel 3     [ 348 ]
    CarAlug[26] = AddStaticVehicleEx(522,568.4707,-1286.9088,16.8207,106.0463,-1,-1,1200); // moto aluguel 4     [ 349 ]
    CarAlug[27] = AddStaticVehicleEx(521,569.0721,-1289.0919,16.8163,109.3813,-1,-1,1200); // moto aluguel 5     [ 350 ]
    CarAlug[28] = AddStaticVehicleEx(521,569.4713,-1291.3688,16.8175,94.5475,-1,-1,1200); // moto aluguel 6      [ 351 ]
    CarAlug[29] = AddStaticVehicleEx(411,-1987.8965,302.2708,34.9027,266.4140,0,0,1200); // wang [ 225 ]
    CarAlug[30] = AddStaticVehicleEx(562,-2714.5452,189.9252,3.9881,271.4840,0,1,1200); // wheel [ 226 ]
    CarAlug[31] = AddStaticVehicleEx(562,-2714.7419,194.1241,3.9928,272.9267,0,0,1200); // wheel [ 227 ]
    CarAlug[32] = AddStaticVehicleEx(562,-2714.5957,198.7781,3.9896,273.1364,0,0,1200); // wheel [ 228 ]
    CarAlug[33] = AddStaticVehicleEx(560,-2714.3113,206.0082,4.0333,270.7872,0,0,1200); // wheel [ 229 ]
    CarAlug[34] = AddStaticVehicleEx(560,-2714.6912,202.4119,4.0370,272.3214,0,0,1200); // wheel [ 230 ]
    CarAlug[35] = AddStaticVehicleEx(411,1091.3000500,-934.9000200,42.9000000,6.0000000,1,1,1200); //Infernus // carro 1 [ 182 ]
    CarAlug[36] = AddStaticVehicleEx(411,1094.5999800,-934.7000100,42.9000000,5.9990000,1,1,1200); //Infernus // carro 2 [ 183 ]
    CarAlug[37] = AddStaticVehicleEx(560,1085.1999500,-935.2000100,42.7000000,4.0000000,1,1,1200); //Sultan // carro 3 [ 184 ]
    CarAlug[38] = AddStaticVehicleEx(560,1088.0000000,-935.0999800,42.8000000,3.9990000,1,1,1200); //Sultan // carro 4 [ 185 ]
    CarAlug[39] = AddStaticVehicleEx(496,1097.9000200,-934.5000000,42.9000000,6.0000000,1,1,1200); //Blista Compact [ 186 ]
    CarAlug[40] = AddStaticVehicleEx(496,1101.1999500,-934.2999900,42.9000000,5.9990000,1,1,1200); //Blista Compact // carro 5 [ 187 ]
    CarAlug[41] = AddStaticVehicleEx(522,1107.0000000,-935.0999800,42.9000000,0.0000000,1,1,1200); // carro 6 [ 188 ]
    CarAlug[42] = AddStaticVehicleEx(522,1108.5999800,-935.0000000,42.9000000,0.0000000,1,1,1200); //NRG-500 // moto 1 [ 189 ]
    CarAlug[43] = AddStaticVehicleEx(581,1110.3000500,-934.9000200,42.9000000,0.0000000,1,1,1200); //BF-400 // moto 2 [ 190 ]
    CarAlug[44] = AddStaticVehicleEx(581,1111.6999500,-934.7999900,42.9000000,0.0000000,1,1,1200); //BF-400 // moto 3 [ 191 ]
    CarAlug[45] = AddStaticVehicleEx(521,1113.1999500,-934.5999800,42.8000000,0.0000000,1,1,1200); //FCR-900 // moto [ 192 ]
    CarAlug[46] = AddStaticVehicleEx(521,1114.5000000,-934.5000000,42.8000000,0.0000000,1,1,1200); // moto 5 [ 193 ]
    CarAlug[47] = AddStaticVehicleEx(522,7631.9043,8462.9482,-632.1159,268.8856,-1,-1,1200); // val [509]
    CarAlug[48] = AddStaticVehicleEx(522,7954.9088,132.9675,-187.1100,266.9431,-1,-1,1200); // val [510]
    CarAlug[49] = AddStaticVehicleEx(560,1282.6999500,-1295.0999800,13.2000000,90.0000000,1,1,1200); //Sultan
    CarAlug[50] = AddStaticVehicleEx(560,1282.6999500,-1299.5999800,13.2000000,90.0000000,1,1,1200); //Sultan
    CarAlug[51] = AddStaticVehicleEx(560,1282.6999500,-1304.4000200,13.2000000,90.0000000,1,1,1200); //Sultan
    CarAlug[52] = AddStaticVehicleEx(451,1282.6999500,-1309.1999500,13.1000000,90.0000000,1,1,1200); //Turismo
    CarAlug[53] = AddStaticVehicleEx(451,1282.5999800,-1314.5999800,13.1000000,90.0000000,1,1,1200); //Turismo
    CarAlug[54] = AddStaticVehicleEx(565,1282.5999800,-1318.9000200,13.1000000,90.0000000,1,1,1200); //Flash
    CarAlug[55] = AddStaticVehicleEx(565,1282.6999500,-1323.3000500,13.1000000,90.0000000,1,1,1200); //Flash
    CarAlug[56] = AddStaticVehicleEx(506,1282.3000500,-1335.0000000,13.2000000,90.0000000,1,1,1200); //Super GT
    CarAlug[57] = AddStaticVehicleEx(506,1282.4000200,-1339.8000500,13.2000000,90.0000000,1,1,1200); //Super GT
    CarAlug[58] = AddStaticVehicleEx(541,1282.9000200,-1344.5000000,13.1000000,90.0000000,1,1,1200); //Bullet
    CarAlug[59] = AddStaticVehicleEx(541,1282.8000500,-1348.4000200,13.1000000,90.0000000,1,1,1200); //Bullet
    CarAlug[60] = AddStaticVehicleEx(480,1282.9000200,-1353.0999800,13.2000000,90.0000000,1,1,1200); //Comet
    CarAlug[61] = AddStaticVehicleEx(480,1282.6999500,-1357.6999500,13.2000000,89.9950000,1,1,1200); //Comet
    CarAlug[62] = AddStaticVehicleEx(411,1282.8000500,-1362.3000500,13.2000000,90.0000000,1,1,1200); //Infernus
    CarAlug[63] = AddStaticVehicleEx(463,1272.6999500,-1293.1999500,13.1000000,270.0000000,1,1,1200); //Freeway
    CarAlug[64] = AddStaticVehicleEx(463,1272.6999500,-1298.1999500,13.1000000,270.0000000,1,1,1200); //Freeway
    CarAlug[65] = AddStaticVehicleEx(463,1272.9000200,-1302.5000000,13.1000000,270.0000000,1,1,1200); //Freeway
    CarAlug[66] = AddStaticVehicleEx(522,1272.8000500,-1308.5999800,13.2000000,272.0000000,1,1,1200); //NRG-500
    CarAlug[67] = AddStaticVehicleEx(522,1272.9000200,-1314.8000500,13.2000000,271.9990000,1,1,1200); //NRG-500
    CarAlug[68] = AddStaticVehicleEx(522,1272.6999500,-1320.3000500,13.2000000,271.9990000,1,1,1200); //NRG-500
    CarAlug[69] = AddStaticVehicleEx(510,1267.8000500,-1352.9000200,13.2000000,92.0000000,1,1,1200); //Mountain Bike
    CarAlug[70] = AddStaticVehicleEx(510,1267.8000500,-1356.4000200,13.2000000,92.0000000,1,1,1200); //Mountain Bike
    CarAlug[71] = AddStaticVehicleEx(510,1267.9000200,-1360.4000200,13.2000000,92.0000000,1,1,1200); //Mountain Bike
    CarAlug[72] = AddStaticVehicleEx(510,1268.0000000,-1364.9000200,13.2000000,92.0000000,1,1,1200); //Mountain Bike
    CarAlug[73] = AddStaticVehicleEx(510,1268.1999500,-1370.0000000,13.1000000,92.0000000,1,1,1200); //Mountain Bike
    //os da dp daki pra baixo
   /* CarAlug[119] = AddStaticVehicleEx(560,1522.18225098,-1685.77038574,13.35185051,270.00000000,0,0,1200); //Sultan
    CarAlug[120] = AddStaticVehicleEx(451,1521.46960449,-1672.65258789,13.31124687,270.00000000,0,0,1200); //Turismo
    CarAlug[121] = AddStaticVehicleEx(451,1521.76245117,-1660.69995117,13.30354691,270.00000000,0,0,1200); //Turismo
    CarAlug[122] = AddStaticVehicleEx(522,1521.96972656,-1697.52197266,13.20725250,274.00000000,0,0,1200); //NRG-500
    CarAlug[123] = AddStaticVehicleEx(522,1522.01281738,-1703.42285156,13.20725250,273.99902344,0,0,1200); //NRG-500
    CarAlug[124] = AddStaticVehicleEx(522,1522.27307129,-1648.83459473,13.19955254,273.99902344,0,0,1200); //NRG-500*/
//======================================[Carros Máfia Russa]==========================================
    CarCosa[0] = AddStaticVehicleEx(579,1614.9000200,1665.1999500,11.3000000,0.0000000,200,200,1200); //Huntley
    CarCosa[1] = AddStaticVehicleEx(579,1618.5000000,1665.4000200,11.3000000,0.0000000,200,200,1200); //Huntley
    CarCosa[2] = AddStaticVehicleEx(411,1617.5999800,1695.3000500,11.0000000,182.2500000,200,200,1200); //Infernus
    CarCosa[3] = AddStaticVehicleEx(411,1614.0999800,1695.3000500,11.0000000,182.0000000,200,200,1200); //Infernus
    CarCosa[4] = AddStaticVehicleEx(415,1624.4000200,1662.5000000,10.7000000,271.7500000,200,200,1200); //Cheetah
    CarCosa[5] = AddStaticVehicleEx(415,1624.5000000,1665.6999500,10.7000000,270.5000000,200,200,1200); //Cheetah
    CarCosa[6] = AddStaticVehicleEx(560,1623.0000000,1693.8000500,10.6000000,273.0000000,200,200,1200); //Sultan
    CarCosa[7] = AddStaticVehicleEx(562,1643.1999500,1701.4000200,10.6000000,91.2500000,200,200,1200); //Elegy
    CarCosa[8] = AddStaticVehicleEx(549,1594.0000000,1701.0999800,10.7000000,269.7500000,200,200,1200); //Tampa
    CarCosa[9] = AddStaticVehicleEx(482,1641.6999500,1651.8000500,11.1000000,0.0000000,200,200,1200); //Burrito
    CarCosa[10] = AddStaticVehicleEx(522,1624.1999500,1668.5999800,10.5000000,270.0000000,200,200,1200); //NRG-500
    CarCosa[11] = AddStaticVehicleEx(522,1624.0999800,1670.4000200,10.5000000,274.0000000,200,200,1200); //NRG-500
    CarCosa[12] = AddStaticVehicleEx(522,1623.4000200,1691.8000500,10.5000000,270.0000000,200,200,1200); //NRG-500
    CarCosa[13] = AddStaticVehicleEx(522,1623.4000200,1690.3000500,10.5000000,270.0000000,200,200,1200); //NRG-500
    CarCosa[14] = AddStaticVehicleEx(560,1622.9000200,1696.8000500,10.6000000,274.4960000,200,200,1200); //Sultan
    CarCosa[15] = AddStaticVehicleEx(562,1643.1999500,1697.8000500,10.6000000,91.2470000,200,200,1200); //Elegy
    CarCosa[16] = AddStaticVehicleEx(498,1638.0999800,1651.6999500,11.1000000,0.0000000,200,200,1200); //Burrito
    CarCosa[17] = AddStaticVehicleEx(487,1602.5000000,1672.6999500,21.2000000,270.0000000,200,200,1200); //Maverick
    CarCosa[18] = AddStaticVehicleEx(487,1605.3000500,1688.9000200,22.9000000,270.0000000,200,200,1200); //Maverick
//=========================================[Carros Máfia Japonesa]================================================================
    YakuzaCar[0] = AddStaticVehicleEx(562,2631.3999000,1778.8000500,10.6000000,92.0000000,205,205,1200); //Vehicle number 0
    YakuzaCar[1] = AddStaticVehicleEx(562,2631.0000000,1887.0000000,10.6000000,92.0000000,205,205,1200); //Vehicle number 1
    YakuzaCar[2] = AddStaticVehicleEx(562,2631.1999500,1871.5000000,10.6000000,92.0000000,205,205,1200); //Vehicle number 2
    YakuzaCar[3] = AddStaticVehicleEx(411,2631.3999000,1791.6999500,10.6000000,90.0000000,205,205,1200); //Vehicle number 3
    YakuzaCar[4] = AddStaticVehicleEx(411,2631.3000500,1858.6999500,10.6000000,90.0000000,205,205,1200); //Vehicle number 4
    YakuzaCar[5] = AddStaticVehicleEx(415,2630.1001000,1804.3000500,10.7000000,90.0000000,205,205,1200); //Vehicle number 5
    YakuzaCar[6] = AddStaticVehicleEx(480,2631.0000000,1769.5000000,10.7000000,92.0000000,205,205,1200); //Vehicle number 6
    YakuzaCar[7] = AddStaticVehicleEx(480,2631.1001000,1756.5000000,10.7000000,92.0000000,205,205,1200); //Vehicle number 7
    YakuzaCar[8] = AddStaticVehicleEx(498,2631.3999000,1743.8000500,10.5000000,90.0000000,205,205,1200); //Vehicle number 8
    YakuzaCar[9] = AddStaticVehicleEx(541,2630.8000500,1731.1999500,10.5000000,90.0000000,205,205,1200); //Vehicle number 9
    YakuzaCar[10] = AddStaticVehicleEx(560,2631.3000500,1838.6999500,10.6000000,90.0000000,205,205,1200); //Vehicle number 10
    YakuzaCar[11] = AddStaticVehicleEx(560,2591.8999000,1859.5999800,10.6000000,90.0000000,205,205,1200); //Vehicle number 11
    YakuzaCar[12] = AddStaticVehicleEx(400,2591.3999000,1849.6999500,11.0000000,90.0000000,205,205,1200); //Vehicle number 12
    YakuzaCar[13] = AddStaticVehicleEx(400,2592.0000000,1840.3000500,11.0000000,90.0000000,205,205,1200); //Vehicle number 13
    YakuzaCar[14] = AddStaticVehicleEx(495,2592.0000000,1811.9000200,11.4000000,90.0000000,205,205,1200); //Vehicle number 14
    YakuzaCar[15] = AddStaticVehicleEx(579,2591.5000000,1802.4000200,10.9000000,92.0000000,205,205,1200); //Vehicle number 15
    YakuzaCar[16] = AddStaticVehicleEx(522,2591.8000500,1795.3000500,10.5000000,90.0000000,205,205,1200); //Vehicle number 16
    YakuzaCar[17] = AddStaticVehicleEx(522,2591.8000500,1792.4000200,10.5000000,90.0000000,205,205,1200); //Vehicle number 17
    YakuzaCar[18] = AddStaticVehicleEx(587,2591.3000500,1786.3000500,10.6000000,90.0000000,205,205,1200); //Vehicle number 18
    YakuzaCar[19] = AddStaticVehicleEx(487,2586.5000000,1767.0999800,14.0000000,0.0000000,205,205,1200); //Vehicle number 19
    YakuzaCar[20] = AddStaticVehicleEx(487,2572.5000000,1767.0000000,14.0000000,0.0000000,205,205,1200); //Vehicle number 20
//========================================[Carros FARC]==========================================================
    AlCar[0] = AddStaticVehicleEx(520,423.1044,2514.9546,17.2053,86.1345,36,36,1200); // hydra al´qaeda 1      [ 282 ]
    AlCar[1] = AddStaticVehicleEx(425,347.2726,2546.7432,17.3042,271.3058,36,36,1200); // hunter al´qaeda 2      [ 283 ]
    AlCar[2] = AddStaticVehicleEx(563,366.0395,2537.8293,16.8276,161.9232,36,36,1200); // heli al´qaeda       [ 284 ]
    AlCar[3] = AddStaticVehicleEx(432,388.8900,2541.7622,16.5498,178.9302,36,36,1200); // tanque al´qaeda 1     [ 285 ]
    AlCar[4] = AddStaticVehicleEx(432,379.6943,2541.6494,16.5481,179.4154,36,36,1200); // tanque al´qaeda 2     [ 286 ]
    AlCar[5] = AddStaticVehicleEx(470,413.2605,2452.6563,16.2054,357.5121,36,36,1200); // carro al´qaeda 1    [ 287 ]
    AlCar[6] = AddStaticVehicleEx(470,401.1563,2453.1179,16.2052,359.3275,36,36,1200); // carro al´qaeda 2    [ 288 ]
    AlCar[7] = AddStaticVehicleEx(500,407.3538,2460.2817,16.2057,357.3129,36,36,1200); // carro al´qaeda 3    [ 289 ]
    AlCar[8] = AddStaticVehicleEx(500,418.2018,2437.5090,16.2049,359.6690,36,36,1200); // carro al´qaeda 4     [ 290 ]
    AlCar[9] = AddStaticVehicleEx(579,413.4090,2437.3838,16.2049,1.4261,36,36,1200); // carro al´qaeda 5       [ 291 ]
    AlCar[10] = AddStaticVehicleEx(579,408.0492,2437.2141,16.2053,358.9307,36,36,1200); // carro al´qaeda 6     [ 292 ]
    AlCar[11] = AddStaticVehicleEx(468,400.6902,2437.0471,16.2054,1.0032,36,36,1200); // carro al´qaeda 7       [ 293 ]
    AlCar[12] = AddStaticVehicleEx(468,397.4241,2437.1575,16.2052,359.4397,36,36,1200); // carro al´qaeda 8     [ 294 ]
    AlCar[13] = AddStaticVehicleEx(468,392.1531,2436.7544,16.0708,359.2458,36,36,1200); // moto al´qaeda 1       [ 295 ]
    AlCar[14] = AddStaticVehicleEx(468,390.8281,2436.8748,16.0638,358.4109,36,36,1200); // moto al´qaeda 2      [ 296 ]
    AlCar[15] = AddStaticVehicleEx(520,425.1984,2491.6760,17.2095,86.7458,36,36,1200); // Hydra al´qaeda 2      [ 296 ]
    AlCar[16] = AddStaticVehicleEx(425,347.5608,2530.9353,17.3203,267.6544,36,36,1200); // Hunter´qaeda 2      [ 296 ]
    AlCar[17] = AddStaticVehicleEx(468,387.4357,2436.7109,16.0713,359.5106,36,36,1200); // Hunter´qaeda 2      [ 296

//========================================[Carros GuerrilheirosIsraelitas]================================================================
    GICar[0] = AddStaticVehicleEx(520,-2236.3113,2295.5757,6.0832,356.0278,0,0,1200); //Hydra
    GICar[1] = AddStaticVehicleEx(520,-2216.8945,2304.1338,6.1660,358.5735,0,0,1200); //Hydra
    GICar[2] = AddStaticVehicleEx(425,-2220.39990234,2331.89990234,8.39999962,0.00000000,-1,-1,1200); //Hunter
    GICar[3] = AddStaticVehicleEx(425,-2236.39990234,2332.10009766,8.39999962,0.00000000,-1,-1,1200); //Hunter
    GICar[4] = AddStaticVehicleEx(563,-2259.00000000,2359.89990234,5.90000010,110.00000000,93,93,1200); //Raindance
    GICar[5] = AddStaticVehicleEx(468,-2289.89941406,2272.19921875,4.59999990,0.00000000,93,93,1200); //NRG-500
    GICar[6] = AddStaticVehicleEx(468,-2290.89990234,2272.39990234,4.59999990,0.00000000,93,93,1200); //NRG-500
    GICar[7] = AddStaticVehicleEx(468,-2296.59960938,2273.00000000,4.59999990,0.00000000,93,93,1200); //NRG-500
    GICar[8] = AddStaticVehicleEx(468,-2295.50000000,2273.10009766,4.59999990,0.00000000,93,93,1200); //NRG-500
    GICar[9] = AddStaticVehicleEx(470,-2252.6975,2317.9551,4.8043,89.8667,-1,-1,1200); //Patriot
    GICar[10] = AddStaticVehicleEx(470,-2252.7268,2323.9290,4.8044,90.5538,-1,-1,1200); //Patriot
    GICar[11] = AddStaticVehicleEx(400,-2252.00000000,2311.50000000,5.19999981,90.00000000,93,1,1200); //Landstalker
    GICar[12] = AddStaticVehicleEx(500,-2251.80004883,2305.80004883,5.06744814,90.00000000,93,1,1200); //Mesa
    GICar[13] = AddStaticVehicleEx(500,-2272.10009766,2303.60009766,4.59999990,270.00000000,93,93,1200); //
    GICar[14] = AddStaticVehicleEx(579,-2272.10009766,2309.60009766,4.68757772,270.00000000,93,93,1200); //Euros
    GICar[15] = AddStaticVehicleEx(432,-2256.2463,2290.2056,4.7888,0.1104,0,0,1200); //tanque
    GICar[16] = AddStaticVehicleEx(432,-2268.1311,2290.0303,4.8291,0.3133,0,0,1200); //tanque
    //GICar[17] = AddStaticVehicleEx(400,-2272.9734,2316.7869,4.9470,270.5387,93,1,1200); //Windsor
    //GICar[18] = AddStaticVehicleEx(68,-2293.4087,2272.5581,4.6472,359.9995,93,1,1200); //Windsor
    GICar[19] = AddStaticVehicleEx(468,-2293.2498,2272.5364,4.6504,359.9997,93,93,1200); //NRG-500
//=======================================[Carros Prefeitura]============================================================
    GovCar[0] = AddStaticVehicleEx(409,1532.1926,-1845.8784,13.3430,180.0010,154,154,1200); // limosine governo 1 [ 384 ]
    GovCar[1] = AddStaticVehicleEx(560,1535.7477,-1846.8677,13.2390,181.4477,154,154,1200); // sultan governo 2 [ 385 ]
    GovCar[2] = AddStaticVehicleEx(560,1528.0491,-1846.4027,13.2592,182.8282,154,154,1200); // sultan governo 3 [ 386 ]
    GovCar[3] = AddStaticVehicleEx(522,1520.3971,-1848.8979,13.1106,182.5410,154,154,1200); // moto governo 1 [ 387 ]
    GovCar[4] = AddStaticVehicleEx(522,1521.8660,-1848.7748,13.1123,178.7587,154,154,1200); // moto governo 2 [ 388 ]
    GovCar[5] = AddStaticVehicleEx(522,1523.3265,-1848.7078,13.1173,180.0277,154,154,1200); // moto governo [ 389 ]
    GovCar[6] = AddStaticVehicleEx(560,1526.6672,-1826.5502,13.3839,91.1082,154,154,1200) ; // Sultan Governo 1 [427]
    GovCar[7] = AddStaticVehicleEx(560,1533.7704,-1826.7501,13.3901,90.4799,154,154,1200) ; // Sultan Governo 2 [428]
    GovCar[8] = AddStaticVehicleEx(487,1505.1627,-1840.7588,13.7243,88.2486,154,154,1200); // Heli Governo    [516]
//===================================[Carros RC]==========================================================
    CivilCar[0] = AddStaticVehicleEx(462,1730.2000000,-1611.1000000,13.2000000,69.9963400,-1,-1,30); //Faggio
    CivilCar[1] = AddStaticVehicleEx(462,1724.7000000,-1612.8000000,13.2000000,0.0000000,-1,-1,30); //Faggio
    CivilCar[2] = AddStaticVehicleEx(462,1721.7000000,-1612.7000000,13.2000000,0.0000000,-1,-1,30); //Faggio
    CivilCar[3] = AddStaticVehicleEx(462,1723.7000000,-1612.7000000,13.2000000,0.0000000,-1,-1,30); //Faggio
    CivilCar[4] = AddStaticVehicleEx(462,1722.7000000,-1612.7000000,13.2000000,0.0000000,-1,-1,30); //Faggio
    CivilCar[5] = AddStaticVehicleEx(462,1720.7000000,-1612.7000000,13.2000000,0.0000000,-1,-1,30); //Faggio
    CivilCar[6] = AddStaticVehicleEx(462,1719.7000000,-1612.7000000,13.2000000,0.0000000,-1,-1,30); //Faggio
    CivilCar[7] = AddStaticVehicleEx(462,1713.6000000,-1608.5000000,13.2000000,290.0000000,-1,-1,30); //Faggio
    CivilCar[8] = AddStaticVehicleEx(462,1713.6000000,-1606.1000000,13.2000000,290.0000000,-1,-1,30); //Faggio
    CivilCar[9] = AddStaticVehicleEx(462,1713.7000000,-1609.7000000,13.2000000,289.9951000,-1,-1,30); //Faggio
    CivilCar[10] = AddStaticVehicleEx(462,1713.6000000,-1607.3000000,13.2000000,289.9896000,-1,-1,30); //Faggio
    CivilCar[11] = AddStaticVehicleEx(462,1730.2000000,-1609.0000000,13.2000000,69.9939000,-1,-1,30); //Faggio
    CivilCar[12] = AddStaticVehicleEx(462,1730.2000000,-1610.0000000,13.2000000,69.9939000,-1,-1,30); //Faggio
    CivilCar[13] = AddStaticVehicleEx(462,1730.2000000,-1607.9000000,13.2000000,69.9939000,-1,-1,30); //Faggio
//=====================================[ônibus de Ls]==============================================================
    BusCar[0] = AddStaticVehicleEx(431,2458.3000000,-2113.7000000,13.8000000,0.0000000,6,16,1200); //Bus
    BusCar[1] = AddStaticVehicleEx(431,2437.9000000,-2113.7000000,13.8000000,0.0000000,6,16,1200); //Bus
    BusCar[2] = AddStaticVehicleEx(431,2478.7000000,-2077.5000000,13.8000000,88.0000000,6,16,1200); //Bus
    BusCar[3] = AddStaticVehicleEx(431,2448.5000000,-2113.7000000,13.8000000,0.0000000,16,16,1200); //Bus
    BusCar[4] = AddStaticVehicleEx(431,2478.4000000,-2099.2000000,13.8000000,87.9950000,6,16,1200); //Bus
    BusCar[5] = AddStaticVehicleEx(431,2478.4000000,-2088.5000000,13.8000000,87.9950000,6,16,1200); //Bus
    BusCar[6] = AddStaticVehicleEx(431,2392.9954,-2075.5449,13.6132,267.3669,6,16,1200); // onibus 1
    BusCar[7] = AddStaticVehicleEx(431,2392.9675,-2085.3313,13.6368,269.8271,6,16,1200); // onibus 2
    BusCar[8] = AddStaticVehicleEx(431,2393.0012,-2095.9343,13.6588,269.4155,6,16,1200); // onibus 3
    BusCar[9] = AddStaticVehicleEx(431,2393.0122,-2105.9478,13.5902,265.8529,6,16,1200); // onibus 4
    BusCar[10] = AddStaticVehicleEx(431,2393.2078,-2116.3938,13.5897,269.0886,6,16,1200); // onibus 5
    BusCar[11] = AddStaticVehicleEx(431,2393.4734,-2127.0410,13.5889,271.6356,6,16,1200); // onibus 6
    BusCar[12] = AddStaticVehicleEx(431,2393.9375,-2137.0083,13.5876,272.1252,6,16,1200); // onibus 7
//======================================[Carros Mecanicos]====================================================
    MecCar[0] = AddStaticVehicleEx(525,992.0837000,-1523.4203000,13.3698000,152.7177000,1,0,1200); //Vehicle number 0
    MecCar[1] = AddStaticVehicleEx(525,991.7411000,-1533.4031000,13.3698000,29.9159000,1,0,1200); //Vehicle number 1
    MecCar[2] = AddStaticVehicleEx(525,981.9993000,-1523.0516000,13.3698000,152.7177000,1,0,1200); //Vehicle number 2
    MecCar[3] = AddStaticVehicleEx(525,987.0898000,-1522.8522000,13.3698000,152.7177000,1,0,1200); //Vehicle number 3
    MecCar[4] = AddStaticVehicleEx(525,966.8726000,-1524.0048000,13.3698000,178.4022000,1,0,1200); //Vehicle number 4
    MecCar[5] = AddStaticVehicleEx(525,977.4532000,-1534.1584000,13.3698000,30.7198000,1,0,1200); //Vehicle number 5
    MecCar[6] = AddStaticVehicleEx(525,982.1377000,-1533.8955000,13.3698000,29.9159000,1,0,1200); //Vehicle number 6
    MecCar[7] = AddStaticVehicleEx(525,986.9843000,-1533.6946000,13.3698000,29.9159000,1,0,1200); //Vehicle number 7
    MecCar[8] = AddStaticVehicleEx(525,976.9749000,-1523.0148000,13.3698000,152.7177000,1,0,1200); //Vehicle number 8
    MecCar[9] = AddStaticVehicleEx(525,963.1321000,-1523.9153000,13.3698000,179.0062000,1,0,1200); //Vehicle number 9
//=========================================[Carros Hells Angels]=====================================================================
    HellsCar[0] = AddStaticVehicleEx(463,695.34197998,-472.95684814,15.95293713,272.00000000,43,43,1200); //Freeway
    HellsCar[1] = AddStaticVehicleEx(463,695.40704346,-470.02896118,15.95293713,271.99951172,43,43,1200); //Freeway
    HellsCar[2] = AddStaticVehicleEx(463,695.40960693,-466.66549683,15.95293713,271.99951172,43,43,1200); //Freeway
    HellsCar[3] = AddStaticVehicleEx(463,695.50073242,-463.71218872,15.95293713,271.99951172,43,43,1200); //Freeway
    HellsCar[4] = AddStaticVehicleEx(463,695.41894531,-460.55017090,15.95293713,271.99951172,43,43,1200); //Freeway
    HellsCar[5] = AddStaticVehicleEx(586,708.18511963,-458.20602417,15.93293762,90.00000000,43,43,1200); //Wayfarer
    HellsCar[6] = AddStaticVehicleEx(586,708.21551514,-461.35186768,15.93293762,90.00000000,43,43,1200); //Wayfarer
    HellsCar[7] = AddStaticVehicleEx(586,708.52087402,-464.43896484,15.93293762,90.00000000,43,43,1200); //Wayfarer
    HellsCar[8] = AddStaticVehicleEx(586,707.89678955,-467.59048462,15.93293762,90.00000000,43,43,1200); //Wayfarer
    HellsCar[9] = AddStaticVehicleEx(586,707.71630859,-470.38833618,15.93293762,90.00000000,43,43,1200); //Wayfarer
    HellsCar[10] = AddStaticVehicleEx(586,667.52319336,-470.78186035,15.93293762,88.00000000,43,43,1200); //Wayfarer
    HellsCar[11] = AddStaticVehicleEx(586,667.50921631,-467.69863892,15.93293762,87.99499512,43,43,1200); //Wayfarer
    HellsCar[12] = AddStaticVehicleEx(463,667.85925293,-464.75799561,15.95293713,88.00000000,43,43,1200); //Freeway
    HellsCar[13] = AddStaticVehicleEx(463,667.72943115,-461.75531006,15.95293713,87.99499512,43,43,1200); //Freeway
    HellsCar[14] = AddStaticVehicleEx(463,667.92706299,-458.54699707,15.95293713,87.99499512,43,43,1200); //Freeway
    HellsCar[15] = AddStaticVehicleEx(487,682.69464111,-461.62292480,22.83546448,0.00000000,43,43,1200); //Maverick
    HellsCar[16] = AddStaticVehicleEx(459,655.31939697,-452.84576416,16.47593689,182.00000000,43,43,1200); //Berkley's RC Van
    HellsCar[17] = AddStaticVehicleEx(482,663.18701172,-452.89550781,16.58593750,180.00000000,43,43,1200); //Burrito
    HellsCar[18] = AddStaticVehicleEx(567,659.60797119,-463.33432007,16.31427956,180.00000000,43,43,1200); //Savanna
    HellsCar[19] = AddStaticVehicleEx(463,672.97216797,-477.66326904,15.95293713,182.00000000,43,43,1200); //Freeway
    HellsCar[20] = AddStaticVehicleEx(463,675.46148682,-477.78826904,15.95293713,181.99951172,43,43,1200); //Freeway [673]
//==========================================[Carros Mongols]====================================================================
    MongolsCar[0] = AddStaticVehicleEx(487,28.50000000,-2654.50000000,43.70000076,92.00000000,114,114,1200); //Maverick    [788]
    MongolsCar[1] = AddStaticVehicleEx(463,22.00000000,-2653.80004883,40.09999847,96.00000000,114,114,1200); //Freeway
    MongolsCar[2] = AddStaticVehicleEx(463,22.29999924,-2655.80004883,40.09999847,92.00000000,114,114,1200); //Freeway
    MongolsCar[3] = AddStaticVehicleEx(543,38.00000000,-2644.89990234,40.40000153,0.00000000,114,114,1200); //Sadler
    MongolsCar[4] = AddStaticVehicleEx(463,34.20000076,-2644.89990234,40.40000153,0.00000000,114,114,1200); //Freeway
    MongolsCar[5] = AddStaticVehicleEx(463,23.10000038,-2662.89990234,40.20000076,0.00000000,114,114,1200); //Freeway
    MongolsCar[6] = AddStaticVehicleEx(463,21.50000000,-2663.00000000,40.20000076,0.00000000,114,114,1200); //Freeway
    MongolsCar[7] = AddStaticVehicleEx(463,20.29999924,-2662.89990234,40.20000076,0.00000000,114,114,1200); //Freeway
    MongolsCar[8] = AddStaticVehicleEx(463,19.00000000,-2662.80004883,40.20000076,0.00000000,114,114,1200); //Freeway
    MongolsCar[9] = AddStaticVehicleEx(463,17.70000076,-2662.69995117,40.20000076,0.00000000,114,114,1200); //Freeway
    MongolsCar[10] = AddStaticVehicleEx(463,24.50000000,-2662.89990234,40.20000076,0.00000000,114,114,1200); //Freeway
    MongolsCar[11] = AddStaticVehicleEx(463,26.20000076,-2663.00000000,40.20000076,0.00000000,114,114,1200); //Freeway
    MongolsCar[12] = AddStaticVehicleEx(459,29.50000000,-2659.00000000,40.70000076,92.00000000,114,114,1200); //Berkley's RC Van
    MongolsCar[13] = AddStaticVehicleEx(463,27.60000038,-2663.00000000,40.20000076,0.00000000,114,114,1200); //Freeway
    MongolsCar[14] = AddStaticVehicleEx(567,28.10000038,-2640.69995117,40.40000153,92.00000000,114,114,1200); //Savanna
    MongolsCar[15] = AddStaticVehicleEx(586,18.00000000,-2633.00000000,40.00000000,182.00000000,114,114,1200); //Wayfarer
    MongolsCar[16] = AddStaticVehicleEx(586,19.79999924,-2633.10009766,40.00000000,184.00000000,114,114,1200); //Wayfarer
    MongolsCar[17] = AddStaticVehicleEx(586,21.70000076,-2632.80004883,40.00000000,184.00000000,114,114,1200); //Wayfarer
    MongolsCar[18] = AddStaticVehicleEx(586,23.39999962,-2633.00000000,40.00000000,182.00000000,114,114,1200); //Wayfarer
    MongolsCar[19] = AddStaticVehicleEx(586,25.00000000,-2632.89990234,40.00000000,184.00000000,114,114,1200); //Wayfarer
    MongolsCar[20] = AddStaticVehicleEx(586,26.70000076,-2633.00000000,40.00000000,178.00000000,114,114,1200); //Wayfarer
    MongolsCar[21] = AddStaticVehicleEx(515,33.59999847,-2635.69995117,41.59999847,92.00000000,114,114,1200); //Roadtrain   [809]
//=================================================[Carros Sons]========================================================================
    SonsCar[0] = AddStaticVehicleEx(463,-1554.53796387,-2741.75292969,48.06079102,143.09436035,206,206,1200); //Freeway
    SonsCar[1] = AddStaticVehicleEx(463,-1556.61413574,-2740.26074219,48.16174698,143.09143066,206,206,1200); //Freeway
    SonsCar[2] = AddStaticVehicleEx(463,-1558.92724609,-2738.68554688,48.16173553,143.09143066,206,206,1200); //Freeway
    SonsCar[3] = AddStaticVehicleEx(463,-1561.40808105,-2736.98950195,48.16136551,143.09143066,206,206,1200); //Freeway
    SonsCar[4] = AddStaticVehicleEx(463,-1563.61242676,-2735.55029297,48.16143417,143.09143066,206,206,1200); //Freeway
    SonsCar[5] = AddStaticVehicleEx(463,-1566.05737305,-2733.91748047,48.16166306,143.09143066,206,206,1200); //Freeway
    SonsCar[6] = AddStaticVehicleEx(463,-1568.29138184,-2732.32714844,48.16141891,143.09143066,206,206,1200); //Freeway
    SonsCar[7] = AddStaticVehicleEx(463,-1570.61303711,-2730.65625000,48.16173172,143.09143066,206,206,1200); //Freeway
    SonsCar[8] = AddStaticVehicleEx(463,-1572.76281738,-2729.18676758,48.16156387,143.09143066,206,206,1200); //Freeway
    SonsCar[9] = AddStaticVehicleEx(463,-1575.09570312,-2727.56835938,48.16159439,143.09143066,206,206,1200); //Freeway
    SonsCar[10] = AddStaticVehicleEx(586,-1526.50744629,-2756.32495117,48.13606262,169.44458008,206,206,1200); //Wayfarer
    SonsCar[11] = AddStaticVehicleEx(586,-1531.18579102,-2755.10009766,48.13606262,169.44213867,206,206,1200); //Wayfarer
    SonsCar[12] = AddStaticVehicleEx(586,-1535.68298340,-2753.96215820,48.13606262,169.44213867,206,206,1200); //Wayfarer
    SonsCar[13] = AddStaticVehicleEx(586,-1540.55761719,-2752.43115234,48.13109589,169.44213867,206,206,1200); //Wayfarer
    SonsCar[14] = AddStaticVehicleEx(586,-1545.92077637,-2751.05444336,48.13307953,169.44213867,206,206,1200); //Wayfarer
    SonsCar[15] = AddStaticVehicleEx(482,-1565.66601562,-2756.15307617,48.78906250,0.00000000,206,206,1200); //Burrito
    SonsCar[16] = AddStaticVehicleEx(567,-1573.61962891,-2750.53906250,48.51740265,0.00000000,206,206,1200); //Savanna
    SonsCar[17] = AddStaticVehicleEx(487,-1584.45007324,-2730.57788086,48.66180801,325.839904206,206,79,1200); //Maverick
//=======================================[Carros Caminhoneiros]=========================================================
    CaminhaoCar[ 0 ] = AddStaticVehicleEx(435,2208.2998000,-2202.0996100,14.2900000,225.0000000,245,245,1200); //Trailer 1
    CaminhaoCar[ 1 ] = AddStaticVehicleEx(435,2134.8000500,-2091.0000000,14.2000000,134.5000000,245,245,1200); //Trailer 1
    CaminhaoCar[ 2 ] = AddStaticVehicleEx(450,2194.2998000,-2216.0996100,14.2900000,225.0000000,245,245,1200); //Trailer 2
    CaminhaoCar[ 3 ] = AddStaticVehicleEx(591,2187.0000000,-2223.3994100,14.2433300,225.0000000,245,245,1200); //Trailer 3
    CaminhaoCar[ 4 ] = AddStaticVehicleEx(591,2180.3999000,-2230.1999500,14.2433300,225.0000000,245,245,1200); //Trailer 3
    CaminhaoCar[ 5 ] = AddStaticVehicleEx(403,2234.8999000,-2245.3000500,14.3000000,45.0000000,71,53,1200); //Linerunner
    CaminhaoCar[ 6 ] = AddStaticVehicleEx(414,2196.5000000,-2289.3000500,13.7000000,45.0000000,63,62,1200); //Mule
    CaminhaoCar[ 7 ] = AddStaticVehicleEx(514,2227.0000000,-2252.5996100,14.3000000,46.0000000,37,37,1200); //Tanker
    CaminhaoCar[ 8 ] = AddStaticVehicleEx(514,2219.6999500,-2260.1999500,14.3000000,46.0000000,32,32,1200); //Tanker
    CaminhaoCar[ 9 ] = AddStaticVehicleEx(514,2212.6001000,-2267.5000000,14.3000000,46.0000000,34,25,1200); //Tanker
    CaminhaoCar[ 10 ] = AddStaticVehicleEx(456,2118.5000000,-2078.0000000,13.8000000,135.5000000,127,105,1200); //Yankee
    CaminhaoCar[ 11 ] = AddStaticVehicleEx(514,2205.1999500,-2275.0000000,14.3000000,43.2500000,39,47,1200); //Tanker
    CaminhaoCar[ 12 ] = AddStaticVehicleEx(456,2160.1001000,-2282.1001000,13.8000000,225.0000000,150,145,1200); //Yankee
    CaminhaoCar[ 13 ] = AddStaticVehicleEx(456,2154.1999500,-2290.3000500,13.8000000,225.0000000,150,145,1200); //Yankee
    CaminhaoCar[ 14 ] = AddStaticVehicleEx(456,2167.3994100,-2274.8994100,13.8000000,225.0000000,98,11,1200); //Yankee
    CaminhaoCar[ 15 ] = AddStaticVehicleEx(414,2181.6992200,-2304.0000000,13.7000000,45.0000000,63,62,1200); //Mule
    CaminhaoCar[ 16 ] = AddStaticVehicleEx(414,2175.6999500,-2310.3000500,13.7000000,45.0000000,63,62,1200); //Mule
    CaminhaoCar[ 17 ] = AddStaticVehicleEx(435,2201.5996100,-2208.7998000,14.2900000,225.0000000,245,245,1200); //Trailer 1
    CaminhaoCar[ 18 ] = AddStaticVehicleEx(514,2126.5000000,-2084.6999500,14.2000000,135.2500000,34,25,1200); //Tanker
    CaminhaoCar[ 19 ] = AddStaticVehicleEx(414,2189.0996100,-2296.5000000,13.7000000,45.0000000,63,62,1200); //Mule
    CaminhaoCar[ 20 ] = AddStaticVehicleEx(456,2174.1992200,-2267.0000000,13.8000000,225.0000000,127,105,1200); //Yankee
//============================================[CArros PCC]===================================================================
    PccCar[0] = AddStaticVehicleEx(426,1310.6999500,-873.7999900,39.3154300,0.0000000,65,65,1200); //Premier
    PccCar[1] = AddStaticVehicleEx(558,1314.6999500,-873.7999900,39.1777600,0.0000000,65,65,1200); //Uranus
    PccCar[2] = AddStaticVehicleEx(492,1318.6999500,-873.7999900,39.3387500,0.0000000,65,65,1200); //Greenwood
    PccCar[3] = AddStaticVehicleEx(412,1306.9000200,-873.7999900,39.5634300,0.0000000,65,65,1200); //Voodoo
    PccCar[4] = AddStaticVehicleEx(560,1311.1999500,-854.4000200,39.4000000,174.0320000,65,65,1200); //Sultan
    PccCar[5] = AddStaticVehicleEx(609,1330.1999500,-881.9000200,39.8000000,0.0000000,65,65,1200); //Boxville
    PccCar[6] = AddStaticVehicleEx(609,1330.1999500,-891.0000000,39.8000000,0.0000000,65,65,1200); //Boxville
    PccCar[7] = AddStaticVehicleEx(560,1307.3000500,-854.0999800,39.4000000,174.0280000,65,65,1200); //Sultan
    PccCar[8] = AddStaticVehicleEx(451,1316.1999500,-855.2999900,39.3000000,173.3310000,65,65,1200); //Turismo
    PccCar[9] = AddStaticVehicleEx(461,1340.1999500,-856.2000100,39.1000000,85.2940000,65,65,1200); //PCJ-600
    PccCar[10] = AddStaticVehicleEx(487,1321.8000500,-887.9000200,45.5000000,180.1320000,65,65,1200); //Maverick
    PccCar[11] = AddStaticVehicleEx(487,1309.5000000,-887.9000200,45.5000000,180.1320000,65,65,1200); //Maverick
    PccCar[12] = AddStaticVehicleEx(559,1321.1999500,-855.5000000,39.3000000,174.7510000,65,65,1200); //Jester
    PccCar[13] = AddStaticVehicleEx(559,1325.0000000,-855.9000200,39.3000000,174.7490000,65,65,1200); //Jester
    PccCar[14] = AddStaticVehicleEx(525,1331.0000000,-857.2000100,39.6000000,174.3350000,65,65,1200); //Tow Truck
    PccCar[15] = AddStaticVehicleEx(461,1340.1992200,-860.0000000,39.1000000,85.2920000,65,65,1200); //PCJ-600
    PccCar[16] = AddStaticVehicleEx(461,1340.1992200,-858.0000000,39.1000000,85.2920000,65,65,1200); //PCJ-600
    PccCar[17] = AddStaticVehicleEx(461,1340.1992200,-862.0000000,39.1000000,85.2920000,65,65,1200); //PCJ-600
    PccCar[18] = AddStaticVehicleEx(461,1340.1992200,-864.0000000,39.1000000,85.2920000,65,65,1200); //PCJ-600
//============================================[Carros Comando vermelho]====================================================
    CvCarros[0] = AddStaticVehicleEx(567,2166.9192,-1808.8960,13.2744,1.8027,3,3,1200); // carro CV 6               [603]
    CvCarros[1] = AddStaticVehicleEx(480,2162.8418,-1808.9608,13.1587,355.8469,3,3,1200); // carro CV 7             [604]
    CvCarros[2] = AddStaticVehicleEx(533,2170.3511,-1808.2281,13.0954,356.7516,3,3,1200); // carro CV 8             [605]
    CvCarros[3] = AddStaticVehicleEx(487,2140.4653,-1811.3521,18.8720,359.0771,3,3,1200); // heli CV                [606]
    CvCarros[4] = AddStaticVehicleEx(522,2153.0305,-1797.7424,13.1315,95.4350,3,3,1200); // moto CV 1               [607]
    CvCarros[5] = AddStaticVehicleEx(522,2152.9424,-1795.8729,13.1157,89.3051,3,3,1200); // moto CV 2               [608]
    CvCarros[6] = AddStaticVehicleEx(560,2170.0002,-1793.9656,13.1749,178.4637,3,3,1200); // carro CV 2             [609]
    CvCarros[7] = AddStaticVehicleEx(560,2159.1633,-1808.6270,13.0691,359.6226,3,3,1200); // carro CV 3             [610]
    CvCarros[8] = AddStaticVehicleEx(559,2161.1936,-1793.8085,13.0271,178.9899,3,3,1200); // carro CV 4             [611]
    CvCarros[9] = AddStaticVehicleEx(562,2165.2068,-1793.7007,13.0222,177.9311,3,3,1200); // carro CV 5             [612]
    CvCarros[10] = AddStaticVehicleEx(424,2173.9265,-1808.1708,13.1515,0.4743,3,3,1200); // carro CV 1              [613]
//============================================[Motos Rally]===========================================================
    RallyCar[0] = AddStaticVehicleEx(468,-2396.6487,-2194.7942,32.9527,244.9457,14,14,1200); // rally1 [556]
    RallyCar[1] = AddStaticVehicleEx(468,-2397.9363,-2196.0374,32.9525,251.1160,10,0,1200); // rally2 [557]
    RallyCar[2] = AddStaticVehicleEx(468,-2399.1172,-2196.9358,32.9529,253.3459,8,8,1200); // rally3 [558]
    RallyCar[3] = AddStaticVehicleEx(468,-2400.7209,-2198.4172,32.9483,263.7230,1,1,1200); // rally4 [559]
    RallyCar[4] = AddStaticVehicleEx(468,-2396.6289,-2194.7290,32.9359,237.7247,14,14,1200); // rally1 [560]
    RallyCar[5] = AddStaticVehicleEx(468,-2397.8621,-2195.9563,32.9209,240.0725,10,0,1200); // rally2 [561]
    RallyCar[6] = AddStaticVehicleEx(468,-2399.1553,-2197.2615,32.9516,268.3748,8,8,1200); // rally3 [562]
    RallyCar[7] = AddStaticVehicleEx(468,-2400.7368,-2198.5469,32.9272,258.2426,1,1,1200); // rally4 [563]
    RallyCar[8] = AddStaticVehicleEx(468,-2401.6670,-2199.7456,32.9394,242.1490,11,11,1200); // rally5 [564]
    RallyCar[9] = AddStaticVehicleEx(468,-2402.8044,-2200.7349,32.9736,258.3496,2,2,1200); // rally6 [565]
    RallyCar[10] = AddStaticVehicleEx(468,-2403.2639,-2202.2148,32.9559,287.4485,20,20,1200); // rally7 [566]
    RallyCar[11] = AddStaticVehicleEx(468,-2403.2646,-2203.6196,32.9454,278.7190,18,18,1200); // rally8 [567]
    RallyCar[12] = AddStaticVehicleEx(468,-2403.2813,-2205.2979,32.9544,270.3040,19,19,1200); // rally9 [568]
    RallyCar[13] = AddStaticVehicleEx(468,-2402.6687,-2206.1614,32.9588,293.0764,5,5,1200); // rally10 [569]
    RallyCar[14] = AddStaticVehicleEx(468,-2402.5225,-2207.9175,32.9407,283.6688,9,9,1200); // rally11 [570]
    RallyCar[15] = AddStaticVehicleEx(468,-2402.4133,-2209.6116,32.9523,284.1946,17,17,1200); // rally12 [571]
    RallyCar[16] = AddStaticVehicleEx(468,-2401.7029,-2210.8396,32.9555,273.4699,6,6,1200); // rally13 [572]
    RallyCar[17] = AddStaticVehicleEx(468,-2400.9187,-2212.2036,32.9469,293.0626,0,0,1200); // rally14 [573]
    RallyCar[18] = AddStaticVehicleEx(468,-2400.0249,-2213.6221,32.9497,310.2712,3,3,1200); // rally15 [574]
    RallyCar[19] = AddStaticVehicleEx(468,-2398.7419,-2215.3887,32.9686,325.4236,4,4,1200); // rally16 [575]
    RallyCar[20] = AddStaticVehicleEx(468,-2397.2495,-2216.1824,32.9741,321.5857,16,16,1200); // rally17 [576]
    RallyCar[21] = AddStaticVehicleEx(468,-2395.8289,-2216.4360,32.9561,345.0271,13,13,1200); // rally18 [577]
    RallyCar[22] = AddStaticVehicleEx(468,-2393.3403,-2216.3254,32.9401,344.7386,7,7,1200); // rally19 [578]
    RallyCar[23] = AddStaticVehicleEx(468,-2391.2278,-2216.4109,32.9444,332.2098,15,15,1200); // rally20 [579]
    RallyCar[24] = AddStaticVehicleEx(468,-2389.5447,-2215.9106,32.9606,355.1463,21,21,1200); // rally21 [580]
    RallyCar[25] = AddStaticVehicleEx(468,-2387.7131,-2216.2065,32.9582,3.4455,12,12,1200); // rally22 [581]
//=============================================[Carros Vips]================================================================
/*    VipCar[0] = AddStaticVehicleEx(487,349.1804,-1830.5696,3.9809,178.7809,0,0,1200); // heli vip 1 [487]
    VipCar[1] = AddStaticVehicleEx(487,324.8780,-1828.9980,4.0119,183.8850,0,0,1200); // heli vip 2 [488]
    VipCar[2] = AddStaticVehicleEx(560,311.5820,-1809.5995,4.1686,359.9641,0,0,1200); // carro praia 1 [489]
    VipCar[3] = AddStaticVehicleEx(560,317.9657,-1809.2924,4.1840,359.9130,0,0,1200); // carro praia 2 [490]
    VipCar[4] = AddStaticVehicleEx(560,324.5570,-1809.4357,4.1836,359.9243,0,0,1200); // carro praia 3 [491]
    VipCar[5] = AddStaticVehicleEx(560,331.0591,-1809.2834,4.1908,359.7497,0,0,1200); // carro praia 4 [492]
    VipCar[6] = AddStaticVehicleEx(560,340.6517,-1809.6073,4.2141,359.7410,0,0,1200); // carro praia 5 [493]
    VipCar[7] = AddStaticVehicleEx(560,347.1095,-1809.3694,4.2270,359.6306,0,0,1200); // carro praia 6 [494]
    VipCar[8] = AddStaticVehicleEx(560,353.4774,-1809.4420,4.2314,1.3118,0,0,1200); // carro praia 7 [495]
    VipCar[9] = AddStaticVehicleEx(452,166.6003,-1898.6937,-0.4749,178.4558,1,22,1200); // lancha praia 1 [496]
    VipCar[10] = AddStaticVehicleEx(452,175.4223,-1896.5074,-0.2244,177.1550,1,16,1200); // lancha praia 2 [497]
    VipCar[11] = AddStaticVehicleEx(452,166.3409,-1914.8420,-0.5107,178.3757,1,57,1200); // lancha praia 3 [498]
    VipCar[12] = AddStaticVehicleEx(452,173.7822,-1914.0876,-0.4673,175.7722,1,35,1200); // lancha praia 4 [499]
    VipCar[13] = AddStaticVehicleEx(452,185.2851,-1898.3643,-0.2911,174.2977,1,5,1200); // lancha praia 5 [500]
    VipCar[14] = AddStaticVehicleEx(452,183.2590,-1915.6124,-0.4429,174.8717,1,53,1200); // lancha praia 6 [501]
    VipCar[15] = AddStaticVehicleEx(471,311.6365,-1788.7190,4.0551,180.0642,0,0,1200); // quad praia 1 [502]
    VipCar[16] = AddStaticVehicleEx(471,315.3439,-1788.6288,4.1146,179.8893,0,0,1200); // quad praia 2 [398]*/
//====================================[Helicópteros de alug]=====================================================================
    AlugarHeli[0] = AddStaticVehicleEx(487,2069.4409,-2637.0068,13.5469,8.9195,-1,-1,1200) ; // Heli 1(LS) [407]
    AlugarHeli[1] = AddStaticVehicleEx(487,2059.1113,-2638.4084,13.5469,10.1728,-1,-1,1200) ; // Heli 2(LS) [408]
    AlugarHeli[2] = AddStaticVehicleEx(513,2044.4976,-2639.1333,13.5469,8.9195,-1,-1,1200) ; // A.Manobras 1(LS) [409]
    AlugarHeli[3] = AddStaticVehicleEx(513,2029.3884,-2639.7593,13.5469,354.7468,-1,-1,1200) ; // A.Manobras 2(LS) [410]
    AlugarHeli[4] = AddStaticVehicleEx(519,2005.5210,-2641.6875,13.5469,7.3528,-1,-1,1200) ; // A.Jatinho 1(LS) [411]
    AlugarHeli[5] = AddStaticVehicleEx(592,1475.8405,-2634.4702,13.5469,286.2323,-1,-1,1200) ; // A.Andromeda (LS) [412]
    AlugarHeli[6] = AddStaticVehicleEx(513,-1363.9288,-486.9547,14.1719,204.7414,-1,-1,1200) ; // A.Manobras 1 (SF) [413]
    AlugarHeli[7] = AddStaticVehicleEx(513,-1436.6971,-529.5022,14.1719,202.5247,-1,-1,1200) ; // A.Manobras 2 (SF) [414]
    AlugarHeli[8] = AddStaticVehicleEx(592,-1637.8472,-145.2139,14.1484,315.9523,-1,-1,1200) ; // A.Andromeda (SF) [415]
    AlugarHeli[9] = AddStaticVehicleEx(519,-1531.3790,-85.7326,14.1484,340.1258,-1,-1,1200) ; // A.Jatinho 1 (SF) [416]
    AlugarHeli[10] = AddStaticVehicleEx(519,-1435.5215,11.6454,14.1484,351.7193,-1,-1,1200) ; // A.Jatinho 2 (SF) [417]
    AlugarHeli[11] = AddStaticVehicleEx(487,1475.2814,-2404.2607,13.5547,172.5246,-1,-1,1200) ; // Heli Boia (LS) [418]
    AlugarHeli[12] = AddStaticVehicleEx(487,1488.2610,-2405.7734,13.5547,166.8612,-1,-1,1200) ; // Heli Boia (LS) [419]
    AlugarHeli[13] = AddStaticVehicleEx(487,2081.3425,-2635.8618,13.7662,13.9935,0,0,1200); // heli [485]
    AlugarHeli[14] = AddStaticVehicleEx(487,2093.8066,-2632.9290,13.7230,21.3379,0,0,1200); // heli [486]
    AlugarHeli[15] = AddStaticVehicleEx(519,1981.6908,-2644.9192,14.4686,0.8321,-1,-1,1200); // heli [503]
    AlugarHeli[16] = AddStaticVehicleEx(519,1956.8619,-2646.7402,14.4686,10.5305,-1,-1,1200); // heli [504]
//===================================[Carros HQ Triads]===========================================================================
    TriadsCar[0] = AddStaticVehicleEx(411,2777.1001000,-2432.6999500,13.4000000,88.2390000,100,100,1200); //Infernus
    TriadsCar[1] = AddStaticVehicleEx(411,2777.1001000,-2441.0000000,13.4000000,88.2370000,100,100,1200); //Infernus
    TriadsCar[2] = AddStaticVehicleEx(541,2776.6999500,-2403.1999500,13.3000000,90.6300000,100,100,1200); //Bullet
    TriadsCar[3] = AddStaticVehicleEx(560,2776.8999000,-2470.6001000,13.4000000,89.2430000,100,100,1200); //Sultan
    TriadsCar[4] = AddStaticVehicleEx(560,2777.1999500,-2479.1001000,13.4000000,89.2420000,100,100,1200); //Sultan
    TriadsCar[5] = AddStaticVehicleEx(487,2793.8999000,-2533.3999000,13.9000000,89.3140000,100,100,1200); //Maverick
    TriadsCar[6] = AddStaticVehicleEx(487,2793.6001000,-2548.0000000,13.9000000,89.3130000,100,100,1200); //Maverick
    TriadsCar[7] = AddStaticVehicleEx(559,2747.8000500,-2459.6001000,13.6000000,269.7530000,100,100,1200); //Jester
    TriadsCar[8] = AddStaticVehicleEx(461,2749.0000000,-2484.3999000,13.3000000,271.5920000,100,100,1200); //PCJ-600
    TriadsCar[9] = AddStaticVehicleEx(461,2749.0000000,-2476.0000000,13.3000000,271.5880000,100,100,1200); //PCJ-600
    TriadsCar[10] = AddStaticVehicleEx(461,2749.0000000,-2482.3000500,13.3000000,271.5880000,100,100,1200); //PCJ-600
    TriadsCar[11] = AddStaticVehicleEx(461,2749.0000000,-2480.1999500,13.3000000,271.5880000,100,100,1200); //PCJ-600
    TriadsCar[12] = AddStaticVehicleEx(461,2749.0000000,-2478.1001000,13.3000000,271.5880000,100,100,1200); //PCJ-600
    TriadsCar[13] = AddStaticVehicleEx(559,2747.8000500,-2463.3999000,13.6000000,269.7530000,100,100,1200); //Jester
    TriadsCar[14] = AddStaticVehicleEx(587,2748.1999500,-2471.3000500,13.5000000,270.9000000,100,100,1200); //Euros
    TriadsCar[15] = AddStaticVehicleEx(587,2748.1999500,-2467.3999000,13.5000000,270.8950000,100,100,1200); //Euros
    TriadsCar[16] = AddStaticVehicleEx(579,2748.1999500,-2443.3999000,13.7000000,270.6860000,100,100,1200); //Huntley
    TriadsCar[17] = AddStaticVehicleEx(579,2748.1999500,-2447.5000000,13.7000000,270.6810000,100,100,1200); //Huntley
    TriadsCar[18] = AddStaticVehicleEx(565,2748.5000000,-2430.1001000,13.3000000,270.0320000,100,100,1200); //Flash
    TriadsCar[19] = AddStaticVehicleEx(565,2748.5000000,-2433.5000000,13.3000000,270.0270000,100,100,1200); //Flash
//====================================[Carros Drifters]================================================================================
    DriftersCar[0] = AddStaticVehicleEx(560,839.59997559,-2061.69995117,12.69999981,0.00000000,167,167,1200); //Sultan
    DriftersCar[1] = AddStaticVehicleEx(560,835.90002441,-2061.89990234,12.69999981,0.00000000,167,167,1200); //Sultan
    DriftersCar[2] = AddStaticVehicleEx(562,843.70001221,-2061.69995117,12.60000038,0.00000000,167,167,1200); //Elegy
    DriftersCar[3] = AddStaticVehicleEx(562,848.79998779,-2061.69995117,12.60000038,0.00000000,167,167,1200); //Elegy
    DriftersCar[4] = AddStaticVehicleEx(565,849.70001221,-2042.50000000,12.60000038,90.00000000,167,167,1200); //Flash
    DriftersCar[5] = AddStaticVehicleEx(565,849.70001221,-2045.50000000,12.60000038,90.00000000,167,167,1200); //Flash
    DriftersCar[6] = AddStaticVehicleEx(522,821.90002441,-2047.50000000,12.50000000,270.00000000,167,167,1200); //NRG-500
    DriftersCar[7] = AddStaticVehicleEx(522,821.90002441,-2046.59997559,12.50000000,270.00000000,167,167,1200); //NRG-500
    DriftersCar[8] = AddStaticVehicleEx(522,821.89941406,-2045.79980469,12.50000000,270.00000000,167,167,1200); //NRG-500
    DriftersCar[9] = AddStaticVehicleEx(522,821.90002441,-2045.00000000,12.50000000,270.00000000,167,167,1200); //NRG-500
    DriftersCar[10] = AddStaticVehicleEx(541,847.50000000,-2049.00000000,12.60000038,88.00000000,167,167,1200); //Bullet
    DriftersCar[11] = AddStaticVehicleEx(541,848.79998779,-2052.60009766,12.60000038,87.99499512,167,167,1200); //Bullet
    DriftersCar[12] = AddStaticVehicleEx(451,825.79998779,-2039.59997559,12.60000038,270.00000000,167,167,1200); //Turismo
//================================[Family SiLLenTz]===================================================================
    PsykOCar[0] = AddStaticVehicleEx(581,805.50000000,-2207.89990234,13.00000000,284.00000000,17,17,1200); //NRG-500
    PsykOCar[1] = AddStaticVehicleEx(581,805.79998779,-2209.00000000,13.00000000,283.99658203,17,17,1200); //NRG-500
    PsykOCar[2] = AddStaticVehicleEx(581,806.00000000,-2210.00000000,13.00000000,283.99658203,17,17,1200); //NRG-500
    PsykOCar[3] = AddStaticVehicleEx(581,806.20001221,-2211.00000000,13.00000000,283.99658203,17,17,1200); //NRG-500
    PsykOCar[4] = AddStaticVehicleEx(581,806.40002441,-2212.00000000,13.00000000,283.99658203,17,17,1200); //NRG-500
    PsykOCar[5] = AddStaticVehicleEx(560,794.40002441,-2197.50000000,13.50000000,282.00000000,17,17,1200); //Sultan
    PsykOCar[6] = AddStaticVehicleEx(560,793.59997559,-2194.30004883,13.50000000,281.99707031,17,17,1200); //Sultan
    PsykOCar[7] = AddStaticVehicleEx(560,800.70001221,-2222.69995117,13.19999981,284.00000000,17,17,1200); //Sultan
    PsykOCar[8] = AddStaticVehicleEx(560,801.40002441,-2225.80004883,13.19999981,283.99658203,17,17,1200); //Sultan
    PsykOCar[9] = AddStaticVehicleEx(487,833.29998779,-2209.60009766,13.60000038,12.00000000,17,17,1200); //Maverick
    //PsykOCar[10] = AddStaticVehicleEx(487,847.90002441,-2205.39990234,13.60000038,11.99707031,17,17,1200); //Maverick
    PsykOCar[11] = AddStaticVehicleEx(567,816.79998779,-2178.80004883,13.10000038,193.99993896,17,17,1200); //Savana
    PsykOCar[12] = AddStaticVehicleEx(567,813.50000000,-2179.50000000,13.10000038,193.99658203,17,17,1200); //Savana
    PsykOCar[13] = AddStaticVehicleEx(535,810.09997559,-2180.10009766,13.10000038,193.99993896,17,17,1200); //Slanvam
    PsykOCar[14] = AddStaticVehicleEx(535,806.79998779,-2180.80004883,13.10000038,193.99658203,17,17,1200); //salvam
    PsykOCar[15] = AddStaticVehicleEx(559,828.79998779,-2227.30004883,13.30000019,14.00000000,17,17,1200); //Jester
    PsykOCar[16] = AddStaticVehicleEx(482,825.79998779,-2228.00000000,13.30000019,14.00000000,17,17,1200); //Burito
    PsykOCar[17] = AddStaticVehicleEx(479,822.09997559,-2228.69995117,13.39999962,14.00000000,17,17,1200); //Regina
    //PsykOCar[18] = AddStaticVehicleEx(405,819.09997559,-2229.50000000,13.39999962,15.99658203,17,17,1200); //Sentinel
    //PsykOCar[19] = AddStaticVehicleEx(411,832.00000000,-2177.60009766,13.19999981,194.00000000,17,17,1200); //Infernus
    //PsykOCar[20] = AddStaticVehicleEx(411,837.70001221,-2176.10009766,13.19999981,193.99658203,17,17,1200); //Infernus
//===================================[Carros FaTal DangeR]====================================================================
    //FaTal DangeRCar[0] = AddStaticVehicleEx(405,-93.4000015,-1727.4000244,10.8999996,290.0000000,145,145,1200); //Sentinel
    //FaTal DangeRCar[1] = AddStaticVehicleEx(405,-95.4000015,-1721.9000244,10.8999996,290.0000000,145,145,1200); //Sentinel
    FaTaL_ImperiuMCar[2] = AddStaticVehicleEx(487,-26.1000004,-1737.5999756,11.1000004,20.0000000,145,145,1200); //Maverick
    FaTaL_ImperiuMCar[3] = AddStaticVehicleEx(479,-36.7000008,-1741.5000000,11.1000004,19.9951172,145,145,1200); //Regina
    FaTaL_ImperiuMCar[4] = AddStaticVehicleEx(560,-48.9000015,-1711.0999756,10.6000004,200.0000000,145,145,1200); //sultan
    FaTaL_ImperiuMCar[5] = AddStaticVehicleEx(560,-43.7000008,-1709.4000244,10.6000004,199.9951172,145,145,1200); //sultan
    FaTaL_ImperiuMCar[6] = AddStaticVehicleEx(560,-64.8000031,-1714.5999756,10.6999998,200.0000000,145,145,1200); //Sultan
    FaTaL_ImperiuMCar[7] = AddStaticVehicleEx(567,-68.8000031,-1716.0000000,10.6999998,199.9951172,145,145,1200); //savana
    FaTaL_ImperiuMCar[8] = AddStaticVehicleEx(567,-76.6999969,-1771.8000488,11.6000004,290.0000000,145,145,1200); //savana
    FaTaL_ImperiuMCar[9] = AddStaticVehicleEx(535,-47.7000008,-1760.8000488,10.6999998,19.9951172,145,145,1200); //slamvan
    FaTaL_ImperiuMCar[10] = AddStaticVehicleEx(535,-52.0000000,-1762.3000488,10.6999998,20.0000000,145,145,1200); //salamvan
    FaTaL_ImperiuMCar[11] = AddStaticVehicleEx(559,-44.9000015,-1750.1999512,10.6999998,19.9951172,145,145,1200); //Jester
    FaTaL_ImperiuMCar[12] = AddStaticVehicleEx(482,-40.9000015,-1748.8000488,10.8000002,20.0000000,145,145,1200); //borrito
    FaTaL_ImperiuMCar[13] = AddStaticVehicleEx(581,-58.0000000,-1720.3000488,10.5000000,200.0000000,145,145,1200); //BF400
    FaTaL_ImperiuMCar[14] = AddStaticVehicleEx(581,-56.7000008,-1719.8000488,10.5000000,199.9951172,145,145,1200); //BF400
    FaTaL_ImperiuMCar[15] = AddStaticVehicleEx(581,-55.2999992,-1719.4000244,10.5000000,199.9951172,145,145,1200); //BF400
    FaTaL_ImperiuMCar[16] = AddStaticVehicleEx(581,-53.9000015,-1718.9000244,10.5000000,199.9951172,145,145,1200); //BF400
    FaTaL_ImperiuMCar[17] = AddStaticVehicleEx(581,-52.5999985,-1718.1999512,10.6000004,200.0000000,145,145,1200); //BF400

//===========================[Hq Pyscp]========================================================================
    PsycoCars[0] = AddStaticVehicleEx(560,2987.1999500,-287.7000100,7.9000000,176.0000000,194,194,1200); //Sultan
    PsycoCars[1] = AddStaticVehicleEx(487,3051.3999000,-284.2999900,8.3000000,88.0000000,194,194,1200); //Maverick
    PsycoCars[2] = AddStaticVehicleEx(560,3036.1001000,-280.5000000,7.8000000,178.0000000,194,194,1200); //Sultan
    PsycoCars[4] = AddStaticVehicleEx(560,3007.5000000,-289.1000100,7.9000000,176.0000000,194,194,1200); //Sultan
    PsycoCars[5] = AddStaticVehicleEx(567,3031.1001000,-280.2999900,8.3000000,175.9420000,194,194,1200); //Savana
    PsycoCars[6] = AddStaticVehicleEx(567,2997.8999000,-288.3999900,7.8000000,176.0000000,194,194,1200); //Savana
    PsycoCars[7] = AddStaticVehicleEx(535,2999.3999000,-327.0000000,8.9000000,356.0000000,194,194,1200); //Salnvam
    PsycoCars[8] = AddStaticVehicleEx(535,3022.5000000,-282.8999900,8.3000000,176.0000000,194,194,1200); //Slavan
    PsycoCars[9] = AddStaticVehicleEx(581,3028.3000500,-302.6000100,7.7000000,86.0000000,194,194,1200); //FRC
    PsycoCars[10] = AddStaticVehicleEx(581,3027.8999000,-309.0000000,7.7000000,88.0000000,194,194,1200); //FRC
    PsycoCars[11] = AddStaticVehicleEx(559,2991.6999500,-287.8999900,7.9000000,175.9960000,194,194,1200); //Jester
    PsycoCars[12] = AddStaticVehicleEx(581,3028.1001000,-307.1000100,7.7000000,87.9950000,194,194,1200); //Freeway
    PsycoCars[13] = AddStaticVehicleEx(581,3028.1999500,-304.8999900,7.7000000,87.9950000,194,194,1200); //Freeway
    PsycoCars[14] = AddStaticVehicleEx(581,3028.3999000,-301.0000000,7.7000000,85.9950000,194,194,1200); //NRG-500
    //PsycoCars[15] = AddStaticVehicleEx(581,3028.5000000,-299.2999900,7.7000000,85.9950000,194,194,1200); //NRG-500
    //PsycoCars[16] = AddStaticVehicleEx(487,3050.6001000,-296.2000100,8.3000000,87.9960000,194,194,1200); //Maverick
    //PsycoCars[17] = AddStaticVehicleEx(541,3002.3000500,-288.6000100,7.8000000,175.9950000,194,194,1200); //Borrito
    PsycoCars[18] = AddStaticVehicleEx(479,3012.0000000,-289.6000100,7.9000000,175.9950000,194,194,1200); //Regina
    //PsycoCars[19] = AddStaticVehicleEx(560,3040.1152,-280.7808,7.7621,173.9619,194,194,1200); //Dumper
//=====================================[ CARROS HunTerS ]===================================================
    SmiCar[0] = AddStaticVehicleEx(581,2083.5000000,-1570.6000000,13.0000000,272.0000000,159,159,1200); //NRG-500
    SmiCar[1] = AddStaticVehicleEx(581,2083.5000000,-1571.5000000,13.1000000,272.0000000,159,159,1200); //NRG-500
    SmiCar[2] = AddStaticVehicleEx(581,2083.5000000,-1572.4000000,13.1000000,272.0000000,159,159,1200); //NRG-500
    SmiCar[3] = AddStaticVehicleEx(581,2083.4000000,-1573.3000000,13.1000000,272.0000000,159,159,1200); //NRG-500
    SmiCar[4] = AddStaticVehicleEx(581,2083.3000000,-1574.2000000,13.1000000,272.0000000,159,159,1200); //NRG-500
    SmiCar[5] = AddStaticVehicleEx(560,2120.2000000,-1558.4000000,13.1000000,94.0000000,159,159,1200); //Sultan
    SmiCar[6] = AddStaticVehicleEx(560,2120.1000000,-1561.7000000,13.1000000,93.9990000,159,159,1200); //Sultan
    SmiCar[7] = AddStaticVehicleEx(560,2120.2000000,-1565.3000000,13.2000000,93.9990000,159,159,1200); //Sultan
    SmiCar[8] = AddStaticVehicleEx(567,2118.9000000,-1568.6000000,13.3000000,88.0000000,159,159,1200); //savana
    SmiCar[9] = AddStaticVehicleEx(567,2109.2000000,-1553.8000000,14.1000000,72.0000000,159,159,1200); //savana
    SmiCar[10] = AddStaticVehicleEx(535,2120.0000000,-1571.8000000,13.2000000,86.0000000,159,159,1200); //Slamvan
    SmiCar[11] = AddStaticVehicleEx(535,2120.1000000,-1574.9000000,13.2000000,86.0000000,159,159,1200); //Slamvan
    SmiCar[12] = AddStaticVehicleEx(487,2077.9000000,-1592.2000000,13.8000000,0.0000000,159,159,1200); //Maverick
    SmiCar[13] = AddStaticVehicleEx(559,2119.1010000,-1578.4000000,13.7000000,80.0000000,159,159,1200); //Jester
    SmiCar[14] = AddStaticVehicleEx(482,2118.6000000,-1582.1000000,13.9000000,78.0000000,159,159,1200); //Burito
    SmiCar[15] = AddStaticVehicleEx(479,2119.0000000,-1586.4000000,13.5000000,74.0000000,159,159,1200); //Regina
//---------------------------------- HELPER CAR --------------------------------------------//
    HelperCar[0] = AddStaticVehicleEx(560,782.1907,-1626.7108,13.0879,269.75000000,144,144,1200);
    HelperCar[1] = AddStaticVehicleEx(560,782.00000000,-1601.69921875,13.19999981,269.49462891,144,144,1200);
    HelperCar[2] = AddStaticVehicleEx(560,782.09960938,-1605.39941406,13.19999981,270.24462891,144,144,1200);
    HelperCar[3] = AddStaticVehicleEx(560,782.09960938,-1608.79980469,13.19999981,269.74731445,144,144,1200);
    HelperCar[4] = AddStaticVehicleEx(560,782.09960938,-1612.50000000,13.19999981,269.74731445,144,144,1200);
    HelperCar[5] = AddStaticVehicleEx(560,782.09960938,-1616.09960938,13.19999981,269.74731445,144,144,1200);
    HelperCar[6] = AddStaticVehicleEx(560,782.09960938,-1619.59960938,13.19999981,269.74731445,144,144,1200);
    HelperCar[7] = AddStaticVehicleEx(560,782.09960938,-1623.19921875,13.19999981,269.74731445,144,144,1200);
    HelperCar[8] = AddStaticVehicleEx(522,791.50000000,-1636.50000000,13.00000000,0.00000000,144,144,1200);
    HelperCar[9] = AddStaticVehicleEx(522,790.00000000,-1636.50000000,13.00000000,0.00000000,144,144,1200);
    HelperCar[10] = AddStaticVehicleEx(522,788.40002441,-1636.50000000,13.00000000,0.00000000,144,144,1200);
    HelperCar[11] = AddStaticVehicleEx(522,782.90002441,-1637.40002441,13.00000000,270.00000000,144,144,1200);
    HelperCar[12] = AddStaticVehicleEx(522,782.90002441,-1633.69995117,13.00000000,270.00000000,144,144,1200);
    HelperCar[13] = AddStaticVehicleEx(522,782.90002441,-1630.19995117,13.00000000,270.00000000,144,144,1200);
    HelperCar[14] = AddStaticVehicleEx(522,806.79998779,-1599.09997559,13.19999981,338.00000000,144,144,1200);
    HelperCar[15] = AddStaticVehicleEx(522,805.59997559,-1598.59997559,13.19999981,337.99987793,144,144,1200);
    HelperCar[16] = AddStaticVehicleEx(522,804.00000000,-1597.90002441,13.19999981,337.99987793,144,144,1200);
    HelperCar[17] = AddStaticVehicleEx(522,802.89941406,-1597.50000000,13.19999981,337.99987793,144,144,1200);

    AdminCar[0] = AddStaticVehicleEx(560,1512.0000000,-1459.6992188,9.3000002,180.0000000,126,-1,1200); //Sultan
    AdminCar[1] = AddStaticVehicleEx(560,1516.1992188,-1459.6992188,9.3000002,180.0000000,126,-1,1200); //Sultan
    AdminCar[2] = AddStaticVehicleEx(522,1511.5000000,-1477.7998047,9.1999998,270.0000000,126,126,1200); //NRG-500
    AdminCar[3] = AddStaticVehicleEx(522,1511.3994141,-1476.1992188,9.1999998,270.0000000,126,126,1200); //NRG-500
    AdminCar[4] = AddStaticVehicleEx(495,1521.2998047,-1459.8994141,10.1000004,180.0000000,126,126,1200); //Sandking
    AdminCar[5] = AddStaticVehicleEx(510,1511.2998047,-1474.7998047,9.1999998,259.9969482,126,126,1200); //Mountain Bike
    AdminCar[6] = AddStaticVehicleEx(510,1511.4000244,-1473.6999512,9.1999998,259.9969482,126,126,1200); //Mountain Bike
    AdminCar[7] = AddStaticVehicleEx(541,1512.3994141,-1469.8994141,9.1999998,271.9995117,126,-1,1200); //Bullet
    AdminCar[8] = AddStaticVehicleEx(522,1511.5000000,-1479.6992188,9.1999998,270.0000000,126,126,1200); //NRG-500
    AdminCar[9] = AddStaticVehicleEx(487,1534.0996094,-1465.8994141,64.0999985,0.0000000,126,126,1200); //Maverick
    AdminCar[10] = AddStaticVehicleEx(487,1512.0000000,-1465.5996094,64.0999985,0.0000000,126,126,1200); //Maverick
    AdminCar[11] = AddStaticVehicleEx(424,1519.6992188,-1479.5000000,9.3000002,0.0000000,126,126,1200); //BF Injection
    AdminCar[12] = AddStaticVehicleEx(424,1523.8994141,-1479.6992188,9.3000002,0.0000000,126,126,1200); //BF Injection
    AdminCar[13] = AddStaticVehicleEx(510,1511.1999512,-1472.1999512,9.1999998,259.9969482,126,5,1200); //Mountain Bike
    AdminCar[14] = AddStaticVehicleEx(541,1528.0999756,-1479.5000000,9.1999998,0.0000000,126,-1,1200); //Bullet
    AdminCar[15] = AddStaticVehicleEx(495,1525.5000000,-1460.3000488,10.1000004,180.0000000,126,126,1200); //Sandking
//=======================================[Carros HQ Justiceiros]===========================================================
    StrikerSCar[0] = AddStaticVehicleEx(581,265.3522,-2205.7744,1.6566,0.4524,123,123,1200); //
    StrikerSCar[1] = AddStaticVehicleEx(581,263.0627,-2205.8254,1.6566,2.6999,123,123,1200); //
    StrikerSCar[2] = AddStaticVehicleEx(581,260.8700,-2205.8652,1.6566,4.8057,123,123,1200); //
    StrikerSCar[3] = AddStaticVehicleEx(581,258.8771,-2205.9692,1.6554,1.7397,123,123,1200); //
    StrikerSCar[4] = AddStaticVehicleEx(581,257.0495,-2206.1313,1.6512,3.4092,123,123,1200); //
    StrikerSCar[5] = AddStaticVehicleEx(559,254.0808,-2206.2175,1.7190,1.8082,123,123,1200); //
    StrikerSCar[6] = AddStaticVehicleEx(567,249.8096,-2206.5688,1.9320,2.1755,123,123,1200); //
    StrikerSCar[7] = AddStaticVehicleEx(567,245.4537,-2206.7844,1.9278,2.2633,123,123,1200); //
    StrikerSCar[8] = AddStaticVehicleEx(535,241.2965,-2206.4568,1.8263,4.0969,123,123,1200); //
    StrikerSCar[9] = AddStaticVehicleEx(535,236.6064,-2206.6975,1.8263,2.4762,123,123,1200); //
    StrikerSCar[10] = AddStaticVehicleEx(560,232.2553,-2206.7341,1.7674,2.5641,123,123,1200); //
    StrikerSCar[1] = AddStaticVehicleEx(560,227.8574,-2206.8428,1.7695,6.0901,123,123,1200); //
    StrikerSCar[12] = AddStaticVehicleEx(560,223.0957,-2207.2861,1.7672,5.1605,123,123,1200); //
    StrikerSCar[13] = AddStaticVehicleEx(482,229.7141,-2187.4800,2.1846,272.0135,123,123,1200); //
    StrikerSCar[14] = AddStaticVehicleEx(479,259.0822,-2186.5193,1.8567,91.1301,123,123,1200); //
    StrikerSCar[15] = AddStaticVehicleEx(487,297.8216,-2192.6416,3.0052,92.7376,123,123,1200); //

//=============================================[Carros Snake]==================================================================
    CarFakers[0] = AddStaticVehicleEx(487,2999.89941406,-1945.79980469,14.72999954,179.99450684,186,186,1200); //Maverick
    //CarFakers[1] = AddStaticVehicleEx(487,3007.59960938,-1946.09960938,14.69999981,180.00000000,186,186,1200); //Maverick
    //CarFakers[2] = AddStaticVehicleEx(482,3034.09960938,-1981.50000000,13.39999962,357.99499512,186,186,1200); //Burrito
    CarFakers[3] = AddStaticVehicleEx(581,3050.39941406,-1965.29980469,11.30000019,93.99902344,186,186,1200); //NRG-500
    CarFakers[4] = AddStaticVehicleEx(581,3050.19921875,-1967.00000000,11.30000019,99.99755859,186,186,1200); //NRG-500
    CarFakers[5] = AddStaticVehicleEx(581,3050.00000000,-1968.59960938,11.30000019,97.99804688,186,186,1200); //NRG-500
    CarFakers[6] = AddStaticVehicleEx(581,3049.79980469,-1970.19921875,11.30000019,91.99951172,186,186,1200); //NRG-500
    CarFakers[7] = AddStaticVehicleEx(581,3049.79980469,-1972.00000000,11.30000019,90.00000000,186,186,1200); //Freeway
    //arFakers[8] = AddStaticVehicleEx(463,3049.69921875,-1973.59960938,11.30000019,90.00000000,186,186,1200); //Freeway
    //CarFakers[9] = AddStaticVehicleEx(463,3049.69921875,-1975.50000000,11.30000019,87.99499512,186,186,1200); //Freeway
    CarFakers[10] = AddStaticVehicleEx(560,3034.59960938,-1934.59960938,12.50000000,177.99499512,186,186,1200); //Sultan
    CarFakers[11] = AddStaticVehicleEx(560,3038.79980469,-1934.79980469,12.50000000,175.99548340,186,186,1200); //Sultan
    CarFakers[12] = AddStaticVehicleEx(560,3049.39990234,-1939.50000000,12.19999981,85.99548340,186,186,1200); //Sultan
    CarFakers[13] = AddStaticVehicleEx(567,3024.29980469,-1940.69921875,11.89999962,177.99499512,186,186,1200); //savana
    CarFakers[14] = AddStaticVehicleEx(567,3020.00000000,-1940.89941406,12.00000000,177.99499512,186,186,1200); //savana
    CarFakers[15] = AddStaticVehicleEx(535,3033.5530,-1983.5007,10.9184,355.8155,186,186,1200); //slamvan
    CarFakers[16] = AddStaticVehicleEx(535,3049.1106,-1944.4324,10.9183,87.2612,186,186,1200); //slavam
    CarFakers[17] = AddStaticVehicleEx(559,3039.00000000,-1982.69995117,12.89999962,358.00000000,186,186,1200); //jester
    CarFakers[18] = AddStaticVehicleEx(482,3028.80004883,-1983.19995117,13.19999981,358.00000000,186,186,1200); //Burito
    CarFakers[19] = AddStaticVehicleEx(479,3030.50000000,-1933.80004883,11.89999962,177.99993896,186,186,1200); //Regina
   // CarFakers[20] = AddStaticVehicleEx(603,3008.00000000,-1977.59997559,12.00000000,37.99963379,186,186,1200); //Phoenix

    //BARCOS PRAIA
    AddStaticVehicleEx(452,720.1,-1694.0,-0.4,179.4,-1,-1,1200); // Barco Praia 1 [445]
    AddStaticVehicleEx(452,721.2,-1629.4,-0.4,180.9,-1,-1,1200); // Barco Praia 2 [446]
    AddStaticVehicleEx(452,739.5,-1670.5,-0.6,177.5,-1,-1,1200); // Barco Praia 3 [447]
    AddStaticVehicleEx(452,584.3558,-1932.9105,-0.4759,90.2416,-1,-1,1200) ;  // Barco Praia 4 [448]
    AddStaticVehicleEx(452,584.8385,-1927.7087,-0.4675,87.1082,-1,-1,1200) ;  // Barco Praia 5 [449]
    AddStaticVehicleEx(452,585.6655,-1922.4731,-0.4039,95.5683,-1,-1,1200) ; // Barco Praia 6 [450]
    //Bikes pista
    AddStaticVehicleEx(481,1864.0769,-1394.3240,12.9985,276.3050,0,0,1200) ; // Bicicleta 1 [420]
    AddStaticVehicleEx(481,1864.0367,-1395.9921,12.9973,269.3524,0,0,1200) ; // Bicicleta 2 [421]


    for(new i = 0; i < sizeof(Carro); i++)
    {
        if(Carro[i][CarroON] == 1)
        {
            Carro[i][CarroID] = CreateVehicle(Carro[i][Modelo],Carro[i][cSpawnX],Carro[i][cSpawnY],Carro[i][cSpawnZ],Carro[i][cAngulo],Carro[i][CorUm],Carro[i][CorDois], RESPAWN_TIME);
        }
    }
    for(new i = 0; i < sizeof(Carro); i++)
    {
        if(Carro[i][CarroON] == 1)
        {
            CarregarTunning(i);
            format(gstring, sizeof(gstring), "BPG %d", Carro[i][CarroID]);
            SetVehicleNumberPlate(Carro[i][CarroID], gstring);
            if(Carro[i][Trancado] == 1)
            {
                VTrancado[Carro[i][CarroID]] = 1;
                LockCar(Carro[i][CarroID]);
            }
        }
        else
        {
            strmid(Carro[i][Dono], "Ninguem", 0, strlen("Ninguem"), 64);
        }
    }
//=========================== Guerra Terror ==================================
    GTitulo = TextDrawCreate(519.500000, 156.187500, "P O N T O S");
    TextDrawLetterSize(GTitulo, 0.511499, 2.081248);
    TextDrawAlignment(GTitulo, 1);
    TextDrawColor(GTitulo, -1);
    TextDrawSetShadow(GTitulo, 0);
    TextDrawSetOutline(GTitulo, 1);
    TextDrawBackgroundColor(GTitulo, 255);
    TextDrawFont(GTitulo, 3);
    TextDrawSetProportional(GTitulo, 1);

    GExer = TextDrawCreate(634.000000, 181.125000, "Exército : 9999");
    TextDrawLetterSize(GExer, 0.449999, 1.600000);
    TextDrawAlignment(GExer, 3);
    TextDrawColor(GExer, 78843306);
    TextDrawSetShadow(GExer, 0);
    TextDrawSetOutline(GExer, 1);
    TextDrawBackgroundColor(GExer, 255);
    TextDrawFont(GExer, 1);
    TextDrawSetProportional(GExer, 1);

    GFarc = TextDrawCreate(633.500000, 203.500000, "FARC: 9999");
    TextDrawLetterSize(GFarc, 0.449999, 1.600000);
    TextDrawAlignment(GFarc, 3);
    TextDrawColor(GFarc, 255);
    TextDrawSetShadow(GFarc, 0);
    TextDrawSetOutline(GFarc, -1);
    TextDrawBackgroundColor(GFarc, -1);
    TextDrawFont(GFarc, 1);
    TextDrawSetProportional(GFarc, 1);

    GGi = TextDrawCreate(634.000000, 229.437500, "G. Israelitas: 9999");
    TextDrawLetterSize(GGi, 0.449999, 1.600000);
    TextDrawAlignment(GGi, 3);
    TextDrawColor(GGi, 16777215);
    TextDrawSetShadow(GGi, 0);
    TextDrawSetOutline(GGi, -1);
    TextDrawBackgroundColor(GGi, 255);
    TextDrawFont(GGi, 1);
    TextDrawSetProportional(GGi, 1);

    //======================================= ant betao ============================
    TDxiter1 = TextDrawCreate(125.000000, 105.437500, "");
    TextDrawLetterSize(TDxiter1, 0.000000, 0.000000);
    TextDrawTextSize(TDxiter1, 390.500000, 242.812500);
    TextDrawAlignment(TDxiter1, 1);
    TextDrawColor(TDxiter1, 255);
    TextDrawSetShadow(TDxiter1, 0);
    TextDrawSetOutline(TDxiter1, 0);
    TextDrawFont(TDxiter1, 4);

    TDxiter2 = TextDrawCreate(131.500000, 111.562500, "");
    TextDrawLetterSize(TDxiter2, 0.000000, 0.000000);
    TextDrawTextSize(TDxiter2, 377.000000, 231.000000);
    TextDrawAlignment(TDxiter2, 1);
    TextDrawColor(TDxiter2, -1378294017);
    TextDrawSetShadow(TDxiter2, 0);
    TextDrawSetOutline(TDxiter2, 0);
    TextDrawBackgroundColor(TDxiter2, -1378294017);
    TextDrawFont(TDxiter2, 4);

    TDxiter3 = TextDrawCreate(289.000000, 130.812500, "");
    TextDrawLetterSize(TDxiter3, 2.366500, 7.895622);
    TextDrawAlignment(TDxiter3, 1);
    TextDrawColor(TDxiter3, -16776961);
    TextDrawUseBox(TDxiter3, true);
    TextDrawBoxColor(TDxiter3, 0);
    TextDrawSetShadow(TDxiter3, 0);
    TextDrawSetOutline(TDxiter3, 1);
    TextDrawBackgroundColor(TDxiter3, 255);
    TextDrawFont(TDxiter3, 2);
    TextDrawSetProportional(TDxiter3, 1);

//======================[RELOGIO]==========================//
    SetTimer("Clock", 1000, 1);
    TempoCheckHack = SetTimer("CheckHack", 3000, 1);
    SetTimer("TextPropertys", 5000, 1);
    for(new i = 0; i < sizeof(CreatedCars); i++)
    {
        CreatedCars[i] = 0;
    }
    //CreatePickup(1272, 23, 2780.4939,-1812.2635,11.8438);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Concessionária\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,2780.4939,-1812.2635,11.8438,15.0,0);
//----------------------------TextDraw------------------------------------------
    TextLogin = TextDrawCreate(323.000000, 348.000000, "~g~~h~~h~Brasil Play Gamer RPG ~r~~r~~r~~r~v1.0 ~d~");
    TextDrawAlignment(TextLogin, 2);
    TextDrawBackgroundColor(TextLogin, 255);
    TextDrawFont(TextLogin, 1);
    TextDrawLetterSize(TextLogin, 0.810000, 2.799999);
    TextDrawColor(TextLogin, -1);
    TextDrawSetOutline(TextLogin, 1);
    TextDrawSetProportional(TextLogin, 1);

    TextLogin1 = TextDrawCreate(320.000000, 59.000000, "~r~~r~~r~~r~RAPIDOS E MORTAIS");
    TextDrawAlignment(TextLogin1, 2);
    TextDrawBackgroundColor(TextLogin1, 255);
    TextDrawFont(TextLogin1, 1);
    TextDrawLetterSize(TextLogin1, 0.819998, 3.299998);
    TextDrawColor(TextLogin1, -1);
    TextDrawSetOutline(TextLogin1, 1);
    TextDrawSetProportional(TextLogin1, 1);

    NovaVersao = TextDrawCreate(323.000000, 433.000000, "~r~~r~~r~~r~bpg-rapidosemortais.forumeiros.com");
    TextDrawBackgroundColor(NovaVersao, 255);
    TextDrawFont(NovaVersao, 1);
    TextDrawLetterSize(NovaVersao, 0.460000, 1.199998);
    TextDrawColor(NovaVersao, -1);
    TextDrawSetOutline(NovaVersao, 1);
    TextDrawSetProportional(NovaVersao, 1);

    TextPlayersOn = TextDrawCreate(504.000000, 214.000000, "~r~~r~~r~~r~Players: ~g~~h~~h~80");
    TextDrawBackgroundColor(TextPlayersOn, 255);
    TextDrawFont(TextPlayersOn, 1);
    TextDrawLetterSize(TextPlayersOn, 0.419999, 1.999999);
    TextDrawColor(TextPlayersOn, -1);
    TextDrawSetOutline(TextPlayersOn, 1);
    TextDrawSetProportional(TextPlayersOn, 1);

    //forum = TextDrawCreate(301.000000, 436.000000, "~g~~h~~h~Visite: ~b~~h~~h~bpg-rapidosemortais.forumeiros.com ~<~~<~            ~g~~h~~h~Versao: ~y~~h~1.0 ~<~~<~");
    forum = TextDrawCreate(301.000000, 435.000000,"~b~~h~~h~Visite:bpg-rapidosemortais.forumeiros.com ~>~~>~~b~~h~~h~Versao: ~y~~h~1.0~<~~<~");
    TextDrawAlignment(forum, 2);
    TextDrawBackgroundColor(forum, 255);
    TextDrawFont(forum, 3);
    TextDrawLetterSize(forum, 0.490000, 1.100000);
    TextDrawColor(forum, -1);
    TextDrawSetOutline(forum, 1);
    TextDrawSetProportional(forum, 1);
    TextDrawUseBox(forum, 1);
    TextDrawBoxColor(forum, 102);
    TextDrawTextSize(forum, 71.000000, 673.000000);

    TextData = TextDrawCreate(496.000000,4.000000, "--");
    TextHora = TextDrawCreate(550.000000,23.000000,"--");
    TextDrawAlignment(TextData,0);
    TextDrawAlignment(TextHora,0);
    TextDrawBackgroundColor(TextData,255);
    TextDrawBackgroundColor(TextHora,255);
    TextDrawFont(TextData,3);
    TextDrawLetterSize(TextData, 0.500000,2.000000);
    TextDrawFont(TextHora,3);
    TextDrawLetterSize(TextHora,0.399999,2.000000);
    TextDrawColor(TextData,0x00C7FFFF);
    TextDrawColor(TextHora,0x00C7FFFF);
    TextDrawSetOutline(TextData,1);
    TextDrawSetOutline(TextHora,1);
    TextDrawSetProportional(TextData,1);
    TextDrawSetProportional(TextHora,1);
    TextDrawSetShadow(TextData,1);
    TextDrawSetShadow(TextHora,1);

    TextMorro1 = TextDrawCreate(510.000000, 115.000000, "~b~~h~ROTA~n~ ~y~3000");
    TextDrawBackgroundColor(TextMorro1, 255);
    TextDrawFont(TextMorro1, 1);
    TextDrawLetterSize(TextMorro1, 0.399999, 1.400000);
    TextDrawColor(TextMorro1, -1);
    TextDrawSetOutline(TextMorro1, 0);
    TextDrawSetProportional(TextMorro1, 1);
    TextDrawSetShadow(TextMorro1, 1);

    /*TextMorro2 = TextDrawCreate(502.000000, 101.000000, "~>~ ~p~~h~Placar PlayGamer ~<~");
    TextDrawBackgroundColor(TextMorro2, 255);
    TextDrawFont(TextMorro2, 1);
    TextDrawLetterSize(TextMorro2, 0.330000, 1.399999);
    TextDrawColor(TextMorro2, -1);
    TextDrawSetOutline(TextMorro2, 0);
    TextDrawSetProportional(TextMorro2, 1);
    TextDrawSetShadow(TextMorro2, 1);*/

    TextMorro3 = TextDrawCreate(510.000000, 130.000000, "~g~~h~Groove~n~ ~y~3000");
    TextDrawBackgroundColor(TextMorro3, 255);
    TextDrawFont(TextMorro3, 1);
    TextDrawLetterSize(TextMorro3, 0.389999, 1.400000);
    TextDrawColor(TextMorro3, -1);
    TextDrawSetOutline(TextMorro3, 0);
    TextDrawSetProportional(TextMorro3, 1);
    TextDrawSetShadow(TextMorro3, 1);

    TextMorro4 = TextDrawCreate(510.000000, 145.000000, "~y~Vagos~n~ ~y~3000");
    TextDrawBackgroundColor(TextMorro4, 255);
    TextDrawFont(TextMorro4, 1);
    TextDrawLetterSize(TextMorro4, 0.389999, 1.400000);
    TextDrawColor(TextMorro4, -1);
    TextDrawSetOutline(TextMorro4, 0);
    TextDrawSetProportional(TextMorro4, 1);
    TextDrawSetShadow(TextMorro4, 1);

    TextMorro5 = TextDrawCreate(511.000000, 160.000000, "~r~~h~~h~CV~n~ ~y~3000");
    TextDrawBackgroundColor(TextMorro5, 255);
    TextDrawFont(TextMorro5, 1);
    TextDrawLetterSize(TextMorro5, 0.369999, 1.400000);
    TextDrawColor(TextMorro5, -1);
    TextDrawSetOutline(TextMorro5, 0);
    TextDrawSetProportional(TextMorro5, 1);
    TextDrawSetShadow(TextMorro5, 1);

    TextMorro6 = TextDrawCreate(512.000000, 175.000000, "~b~~h~~h~Aztecas~n~ ~y~3000");
    TextDrawBackgroundColor(TextMorro6, 255);
    TextDrawFont(TextMorro6, 1);
    TextDrawLetterSize(TextMorro6, 0.370000, 1.300000);
    TextDrawColor(TextMorro6, -1);
    TextDrawSetOutline(TextMorro6, 0);
    TextDrawSetProportional(TextMorro6, 1);
    TextDrawSetShadow(TextMorro6, 1);

    /*TextMorro7 = TextDrawCreate(518.000000, 295.000000, "~r~Hells Angels~n~~w~Pontos: ~y~3000");
    TextDrawBackgroundColor(TextMorro7, 255);
    TextDrawFont(TextMorro7, 1);
    TextDrawLetterSize(TextMorro7, 0.389999, 1.000000);
    TextDrawColor(TextMorro7, -1);
    TextDrawSetOutline(TextMorro7, 0);
    TextDrawSetProportional(TextMorro7, 1);
    TextDrawSetShadow(TextMorro7, 1);

    TextMorro8 = TextDrawCreate(518.000000, 322.000000, "Mongols M.C.~n~~w~Pontos: ~y~3000");
    TextDrawBackgroundColor(TextMorro8, 255);
    TextDrawFont(TextMorro8, 1);
    TextDrawLetterSize(TextMorro8, 0.389999, 1.000000);
    TextDrawColor(TextMorro8, 547325610);
    TextDrawSetOutline(TextMorro8, 0);
    TextDrawSetProportional(TextMorro8, 1);
    TextDrawSetShadow(TextMorro8, 1);

    TextMorro9 = TextDrawCreate(518.000000, 348.000000, "Sons Of Anarchy~n~~w~Pontos: ~y~3000");
    TextDrawBackgroundColor(TextMorro9, 255);
    TextDrawFont(TextMorro9, 1);
    TextDrawLetterSize(TextMorro9, 0.389999, 1.000000);
    TextDrawColor(TextMorro9, 6538922);
    TextDrawSetOutline(TextMorro9, 0);
    TextDrawSetProportional(TextMorro9, 1);
    TextDrawSetShadow(TextMorro9, 1);*/

    TextMorro10 = TextDrawCreate(511.000000, 190.000000, "~p~Ballas~n~ ~y~3000");
    TextDrawBackgroundColor(TextMorro10, 255);
    TextDrawFont(TextMorro10, 1);
    TextDrawLetterSize(TextMorro10, 0.419999, 1.400000);
    TextDrawColor(TextMorro10, -1);
    TextDrawSetOutline(TextMorro10, 0);
    TextDrawSetProportional(TextMorro10, 1);
    TextDrawSetShadow(TextMorro10, 1);

    TextMorro11 = TextDrawCreate(512.000000, 205.000000, "~g~~h~~h~PCC~n~ ~y~3000");
    TextDrawBackgroundColor(TextMorro11, 255);
    TextDrawFont(TextMorro11, 1);
    TextDrawLetterSize(TextMorro11, 0.399999, 1.400000);
    TextDrawColor(TextMorro11, -1);
    TextDrawSetOutline(TextMorro11, 0);
    TextDrawSetProportional(TextMorro11, 1);
    TextDrawSetShadow(TextMorro11, 1);

    TextMorro12 = TextDrawCreate(512.000000, 355.000000, "~g~~h~~h~Snake~n~ ~y~3000");
    TextDrawBackgroundColor(TextMorro12, 255);
    TextDrawFont(TextMorro12, 1);
    TextDrawLetterSize(TextMorro12, 0.399999, 1.400000);
    TextDrawColor(TextMorro12, -1);
    TextDrawSetOutline(TextMorro12, 0);
    TextDrawSetProportional(TextMorro12, 1);
    TextDrawSetShadow(TextMorro12, 1);

    TextMorro13 = TextDrawCreate(512.000000, 235.000000, "~g~~h~~h~Killers~n~ ~y~3000");
    TextDrawBackgroundColor(TextMorro13, 255);
    TextDrawFont(TextMorro13, 1);
    TextDrawLetterSize(TextMorro13, 0.399999, 1.400000);
    TextDrawColor(TextMorro13, -1);
    TextDrawSetOutline(TextMorro13, 0);
    TextDrawSetProportional(TextMorro13, 1);
    TextDrawSetShadow(TextMorro13, 1);

    TextMorro14 = TextDrawCreate(512.000000, 250.000000, "~g~~h~~h~AtivistaS~n~ ~y~3000");
    TextDrawBackgroundColor(TextMorro14, 255);
    TextDrawFont(TextMorro14, 1);
    TextDrawLetterSize(TextMorro14, 0.399999, 1.400000);
    TextDrawColor(TextMorro14, -1);
    TextDrawSetOutline(TextMorro14, 0);
    TextDrawSetProportional(TextMorro14, 1);
    TextDrawSetShadow(TextMorro14, 1);

    TextMorro15 = TextDrawCreate(512.000000, 265.000000, "~g~~h~~h~KiLLeRs~n~ ~y~3000");
    TextDrawBackgroundColor(TextMorro15, 255);
    TextDrawFont(TextMorro15, 1);
    TextDrawLetterSize(TextMorro15, 0.399999, 1.400000);
    TextDrawColor(TextMorro15, -1);
    TextDrawSetOutline(TextMorro15, 0);
    TextDrawSetProportional(TextMorro15, 1);
    TextDrawSetShadow(TextMorro15, 1);

    TextMorro16 = TextDrawCreate(512.000000, 280.000000, "~g~~h~~h~HunTerS~n~ ~y~3000");
    TextDrawBackgroundColor(TextMorro16, 255);
    TextDrawFont(TextMorro16, 1);
    TextDrawLetterSize(TextMorro16, 0.399999, 1.400000);
    TextDrawColor(TextMorro16, -1);
    TextDrawSetOutline(TextMorro16, 0);
    TextDrawSetProportional(TextMorro16, 1);
    TextDrawSetShadow(TextMorro16, 1);

    TextMorro17 = TextDrawCreate(512.000000, 295.000000, "~b~~h~~h~B.O.P.E~n~ ~y~3000");
    TextDrawBackgroundColor(TextMorro17, 255);
    TextDrawFont(TextMorro17, 1);
    TextDrawLetterSize(TextMorro17, 0.399999, 1.400000);
    TextDrawColor(TextMorro17, -1);
    TextDrawSetOutline(TextMorro17, 0);
    TextDrawSetProportional(TextMorro17, 1);
    TextDrawSetShadow(TextMorro17, 1);

    TextMorro18 = TextDrawCreate(512.000000, 310.000000, "~b~~h~~h~BPM~n~ ~y~3000");
    TextDrawBackgroundColor(TextMorro18, 255);
    TextDrawFont(TextMorro18, 1);
    TextDrawLetterSize(TextMorro18, 0.399999, 1.400000);
    TextDrawColor(TextMorro18, -1);
    TextDrawSetOutline(TextMorro18, 0);
    TextDrawSetProportional(TextMorro18, 1);
    TextDrawSetShadow(TextMorro18, 1);

    TextMorro19 = TextDrawCreate(512.000000, 325.000000, "~g~~h~~h~Storm~n~ ~y~3000");
    TextDrawBackgroundColor(TextMorro19, 255);
    TextDrawFont(TextMorro19, 1);
    TextDrawLetterSize(TextMorro19, 0.399999, 1.400000);
    TextDrawColor(TextMorro19, -1);
    TextDrawSetOutline(TextMorro19, 0);
    TextDrawSetProportional(TextMorro19, 1);
    TextDrawSetShadow(TextMorro19, 1);

    TextMorro20 = TextDrawCreate(512.000000, 340.000000, "~g~~h~~h~Jhonsons~n~ ~y~3000");
    TextDrawBackgroundColor(TextMorro20, 255);
    TextDrawFont(TextMorro20, 1);
    TextDrawLetterSize(TextMorro20, 0.399999, 1.400000);
    TextDrawColor(TextMorro20, -1);
    TextDrawSetOutline(TextMorro20, 0);
    TextDrawSetProportional(TextMorro20, 1);
    TextDrawSetShadow(TextMorro20, 1);

    TextMorro22 = TextDrawCreate(512.000000, 355.000000, "~g~~h~~h~Jhonsons~n~ ~y~3000");
    TextDrawBackgroundColor(TextMorro22, 255);
    TextDrawFont(TextMorro22, 1);
    TextDrawLetterSize(TextMorro22, 0.399999, 1.400000);
    TextDrawColor(TextMorro22, -1);
    TextDrawSetOutline(TextMorro22, 0);
    TextDrawSetProportional(TextMorro22, 1);
    TextDrawSetShadow(TextMorro22, 1);

    TextMorro21 = TextDrawCreate(512.000000, 220.000000, "~g~~h~~h~Jhonsons~n~ ~y~3000");
    TextDrawBackgroundColor(TextMorro21, 255);
    TextDrawFont(TextMorro21, 1);
    TextDrawLetterSize(TextMorro21, 0.399999, 1.400000);
    TextDrawColor(TextMorro21, -1);
    TextDrawSetOutline(TextMorro21, 0);
    TextDrawSetProportional(TextMorro21, 1);
    TextDrawSetShadow(TextMorro21, 1);

    //============================[Tutorial]==============================================================
    BoasVindas = TextDrawCreate(301.000000, 138.000000, "~>~~>~ ~y~~h~Bem Vindo ao ~p~~h~PlayGamer ~r~~h~RPG ~<~~<~");
    TextDrawAlignment(BoasVindas, 2);
    TextDrawBackgroundColor(BoasVindas, 255);
    TextDrawFont(BoasVindas, 1);
    TextDrawLetterSize(BoasVindas, 0.529999, 1.900000);
    TextDrawColor(BoasVindas, -1);
    TextDrawSetOutline(BoasVindas, 0);
    TextDrawSetProportional(BoasVindas, 1);
    TextDrawSetShadow(BoasVindas, 1);

    InfoBasicas = TextDrawCreate(301.000000, 138.000000, "~>~~>~ ~p~~h~ Informacoes Basicas ~<~~<~");
    TextDrawAlignment(InfoBasicas, 2);
    TextDrawBackgroundColor(InfoBasicas, 255);
    TextDrawFont(InfoBasicas, 1);
    TextDrawLetterSize(InfoBasicas, 0.529999, 1.900000);
    TextDrawColor(InfoBasicas, -1);
    TextDrawSetOutline(InfoBasicas, 0);
    TextDrawSetProportional(InfoBasicas, 1);
    TextDrawSetShadow(InfoBasicas, 1);

    RegBasicas = TextDrawCreate(301.000000, 138.000000, "~>~~>~ ~b~~h~Regras Basicas ~<~~<~");
    TextDrawAlignment(RegBasicas, 2);
    TextDrawBackgroundColor(RegBasicas, 255);
    TextDrawFont(RegBasicas, 1);
    TextDrawLetterSize(RegBasicas, 0.529999, 1.900000);
    TextDrawColor(RegBasicas, -1);
    TextDrawSetOutline(RegBasicas, 0);
    TextDrawSetProportional(RegBasicas, 1);
    TextDrawSetShadow(RegBasicas, 1);

    CmdUteis = TextDrawCreate(301.000000, 138.000000, "~>~~>~ ~g~~h~Comando Uteis ~<~~<~");
    TextDrawAlignment(CmdUteis, 2);
    TextDrawBackgroundColor(CmdUteis, 255);
    TextDrawFont(CmdUteis, 1);
    TextDrawLetterSize(CmdUteis, 0.529999, 1.900000);
    TextDrawColor(CmdUteis, -1);
    TextDrawSetOutline(CmdUteis, 0);
    TextDrawSetProportional(CmdUteis, 1);
    TextDrawSetShadow(CmdUteis, 1);

    LocaisUteis = TextDrawCreate(301.000000, 138.000000, "~>~~>~ ~r~~h~Locais Importantes ~<~~<~");
    TextDrawAlignment(LocaisUteis, 2);
    TextDrawBackgroundColor(LocaisUteis, 255);
    TextDrawFont(LocaisUteis, 1);
    TextDrawLetterSize(LocaisUteis, 0.529999, 1.900000);
    TextDrawColor(LocaisUteis, -1);
    TextDrawSetOutline(LocaisUteis, 0);
    TextDrawSetProportional(LocaisUteis, 1);
    TextDrawSetShadow(LocaisUteis, 1);

    BoxTuto1 = TextDrawCreate(650.000000, 3.000000, "_");
    TextDrawBackgroundColor(BoxTuto1, 255);
    TextDrawFont(BoxTuto1, 1);
    TextDrawLetterSize(BoxTuto1, 0.340000, 13.600002);
    TextDrawColor(BoxTuto1, -1);
    TextDrawSetOutline(BoxTuto1, 0);
    TextDrawSetProportional(BoxTuto1, 1);
    TextDrawSetShadow(BoxTuto1, 1);
    TextDrawUseBox(BoxTuto1, 1);
    TextDrawBoxColor(BoxTuto1, 102);
    TextDrawTextSize(BoxTuto1, -4.000000, 5.000000);

    BoxTuto2 = TextDrawCreate(650.000000, 323.000000, "_");
    TextDrawBackgroundColor(BoxTuto2, 255);
    TextDrawFont(BoxTuto2, 1);
    TextDrawLetterSize(BoxTuto2, 0.340000, 13.600002);
    TextDrawColor(BoxTuto2, -1);
    TextDrawSetOutline(BoxTuto2, 0);
    TextDrawSetProportional(BoxTuto2, 1);
    TextDrawSetShadow(BoxTuto2, 1);
    TextDrawUseBox(BoxTuto2, 1);
    TextDrawBoxColor(BoxTuto2, 102);
    TextDrawTextSize(BoxTuto2, -4.000000, 5.000000);

    //===========================>>>>>> Velocimetro
    box = TextDrawCreate(341.000000, 394.000000, "_");
    TextDrawAlignment(box, 2);
    TextDrawBackgroundColor(box, 65535);
    TextDrawFont(box, 1);
    TextDrawLetterSize(box, 1.819999, 5.699999);
    TextDrawColor(box, -1);
    TextDrawSetOutline(box, 0);
    TextDrawSetProportional(box, 0);
    TextDrawSetShadow(box, 0);
    TextDrawUseBox(box, 1);
    TextDrawBoxColor(box, 102);
    TextDrawTextSize(box, 204.000000, -316.000000);

    SpedUrl = TextDrawCreate(203.000000, 437.000000, "~>~~>~ ~g~~h~~h~~w~www.~b~~h~~h~~h~bpg-rapidosemortais~w~.forumeiros.com~g~~h~~h~~<~~<~");
    TextDrawBackgroundColor(SpedUrl, 255);
    TextDrawFont(SpedUrl, 1);
    TextDrawLetterSize(SpedUrl, 0.399998, 0.999998);
    TextDrawColor(SpedUrl, 16711935);
    TextDrawSetOutline(SpedUrl, 1);
    TextDrawSetProportional(SpedUrl, 1);

    for(new i=0; i<MaiorID; i++)
    {
        TextPosto[i] = TextDrawCreate(450.000000, 180.000000, "_");
        TextDrawBackgroundColor(TextPosto[i], 255);
        TextDrawFont(TextPosto[i], 1);
        TextDrawLetterSize(TextPosto[i], 0.409999, 1.600000);
        TextDrawColor(TextPosto[i], -1);
        TextDrawSetOutline(TextPosto[i], 1);
        TextDrawSetProportional(TextPosto[i], 1);

        VeInfo[i] = TextDrawCreate(190.000000, 394.000000, "~w~Veiculo: ~g~~h~~h~Turismo");
        TextDrawBackgroundColor(VeInfo[i], 255);
        TextDrawFont(VeInfo[i], 1);
        TextDrawLetterSize(VeInfo[i], 0.400000, 1.299999);
        TextDrawColor(VeInfo[i], 16711935);
        TextDrawSetOutline(VeInfo[i], 1);
        TextDrawSetProportional(VeInfo[i], 1);

        kmhor[i] = TextDrawCreate(332.000000, 395.000000, "~w~Velocidade:~p~~h~ 350 Km/h");
        TextDrawBackgroundColor(kmhor[i], 255);
        TextDrawFont(kmhor[i], 1);
        TextDrawLetterSize(kmhor[i], 0.380000, 1.299999);
        TextDrawColor(kmhor[i], 16711935);
        TextDrawSetOutline(kmhor[i], 1);
        TextDrawSetProportional(kmhor[i], 1);

        LataInfo[i] = TextDrawCreate(192.000000, 408.000000, "~w~Lataria:~p~~h~ 100%");
        TextDrawBackgroundColor(LataInfo[i], 255);
        TextDrawFont(LataInfo[i], 1);
        TextDrawLetterSize(LataInfo[i], 0.390000, 1.199999);
        TextDrawColor(LataInfo[i], 16711935);
        TextDrawSetOutline(LataInfo[i], 1);
        TextDrawSetProportional(LataInfo[i], 1);

        TempoGasInfo[i] = TextDrawCreate(191.000000, 421.000000, "~w~Gas Tempo: ~p~~h~100 Min");
        TextDrawBackgroundColor(TempoGasInfo[i], 255);
        TextDrawFont(TempoGasInfo[i], 1);
        TextDrawLetterSize(TempoGasInfo[i], 0.330000, 1.299999);
        TextDrawColor(TempoGasInfo[i], 16711935);
        TextDrawSetOutline(TempoGasInfo[i], 1);
        TextDrawSetProportional(TempoGasInfo[i], 1);

        GazoInfo[i] = TextDrawCreate(332.000000, 408.000000, "~w~Combustivel:~p~~h~ 100");
        TextDrawBackgroundColor(GazoInfo[i], 255);
        TextDrawFont(GazoInfo[i], 1);
        TextDrawLetterSize(GazoInfo[i], 0.380000, 1.299999);
        TextDrawColor(GazoInfo[i], 16711935);
        TextDrawSetOutline(GazoInfo[i], 1);
        TextDrawSetProportional(GazoInfo[i], 1);

        LocalInf[i] = TextDrawCreate(334.000000, 422.000000, "~w~Local: ~b~~h~~h~Commerce");
        TextDrawBackgroundColor(LocalInf[i], 255);
        TextDrawFont(LocalInf[i], 1);
        TextDrawLetterSize(LocalInf[i], 0.379999, 1.199999);
        TextDrawColor(LocalInf[i], 16711935);
        TextDrawSetOutline(LocalInf[i], 1);
        TextDrawSetProportional(LocalInf[i], 1);

        TextRec[i] = TextDrawCreate(460.000000, 345.000000,"     REC.");
        TextDrawTextSize(TextRec[i],633.000000, -19.000000);
        TextDrawAlignment(TextRec[i],5);
        TextDrawBackgroundColor(TextRec[i],0x000000FF);
        TextDrawFont(TextRec[i],1);
        TextDrawLetterSize(TextRec[i],1.090000, 1.650000);
        TextDrawColor(TextRec[i],TEAM_GROVE_COLOR);
        TextDrawSetOutline(TextRec[i],1);
        TextDrawSetProportional(TextRec[i],1);
        TextDrawSetShadow(TextRec[i],1);

        Hidealto2[i] = TextDrawCreate(1.000000,-45.000000,"__");
        Hidebaixo2[i] = TextDrawCreate(-2.000000,371.000000,"__");
        TextDrawUseBox(Hidealto2[i],1);
        TextDrawBoxColor(Hidealto2[i],0x000000ff);
        TextDrawTextSize(Hidealto2[i],655.000000,80.000000);
        TextDrawUseBox(Hidebaixo2[i],1);
        TextDrawBoxColor(Hidebaixo2[i],0x000000ff);
        TextDrawTextSize(Hidebaixo2[i],840.000000,240.000000);
        TextDrawAlignment(Hidealto2[i],0);
        TextDrawAlignment(Hidebaixo2[i],0);
        TextDrawBackgroundColor(Hidealto2[i],0x000000ff);
        TextDrawBackgroundColor(Hidebaixo2[i],0x000000ff);
        TextDrawFont(Hidealto2[i],3);
        TextDrawLetterSize(Hidealto2[i],1.000000,14.000000);
        TextDrawFont(Hidebaixo2[i],3);
        TextDrawLetterSize(Hidebaixo2[i],1.000000,24.000000);
        TextDrawColor(Hidealto2[i],0xffffffff);
        TextDrawColor(Hidebaixo2[i],0xffffffff);
        TextDrawSetOutline(Hidealto2[i],1);
        TextDrawSetOutline(Hidebaixo2[i],1);
        TextDrawSetProportional(Hidealto2[i],1);
        TextDrawSetProportional(Hidebaixo2[i],1);
        TextDrawSetShadow(Hidealto2[i],1);
        TextDrawSetShadow(Hidebaixo2[i],1);
    }
    unjailtimer = SetTimer("SetPlayerUnjail", 1000, 1);
    othtimer = SetTimer("OtherTimer", 3000, 1);
    cartimer = SetTimer("CarCheck", 40000, 1);
    pickuptimer = SetTimer("CustomPickups", 1000, 1);
    productiontimer = SetTimer("Production", 300000, 1); //5 mins (300000)
    checkgastimer = SetTimer("CheckGas", 18000, 1);
    SetTimer("SalvarContas", TEMPO_SALVAMENTO, true);
    //SetTimer("ProcuradoPlayer", TEMPO_PROCTEXT, 1);
    GZPark = GangZoneCreate(1866.346, -1259.454, 2052.685, -1137.074);
    GZCemiterio = GangZoneCreate(791.5826, -1141.6468, 967.5826, -1061.6468);
    GZPosto = GangZoneCreate(-146.9439, -1249.0484, -2.9439, -1081.0484);
    GZShop = GangZoneCreate(1056.1223, -1575.7773, 1192.1223, -1415.7773);
    GZSkate = GangZoneCreate(1861.9410,-1450.6462,1976.5867,-1351.4069);
    GZEstacao = GangZoneCreate(1687.613, -1958.204, 1813.106, -1859.51);
    GZCasarao = GangZoneCreate(1098.173, -2084.531, 1299.723, -2005.577);
    /*for(new x = 1; x <= MAX_VEHICLES; x++)
    {
        if(IsACivilCar(x))
        {
            new Text3D:VeiculoCivilTexto3D;
            VeiculoCivilTexto3D = Create3DTextLabel("\n\n\n\n\n\n\n{FFFF00}Brasil {0000FF}Play {00FF00}Gamer\n{FFFFFF}Veículo Civil", 0x00FF00FF, 0.0, 0.0, 0.0, 4.0, 0, 1 );
            Attach3DTextLabelToVehicle(VeiculoCivilTexto3D, x, 0.0, 0.0, 2.0);
        }
    }*/
    EleicoesOnLoad();
    AbrirEleicoes();
    LoadAdm();
    LoadHelp();
    LoadCofreOrg();
    LoadBoxer();
    LoadStuff();
    LoadVip();
    GranaBanco = 10000 + random(8000);
    GranaLot = 3000 + random(9000);
    GranaPosto = 2000 + random(8000);
    GranaLoja1 = 2000 + random(7000);
    GranaLoja2 = 1500 + random(7000);
    GranaPref = 3000 + random(8000);

    for(new h = 0; h < sizeof(BizzInfo); h++)
    {
        if(BizzInfo[h][bOwned] == 0)
        {
            BizzPickup[h] = CreatePickup(1272, 23, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],-1);
            format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}%s\nEsta empresa esta a venda\nValor: R$%d Nivel: %d\nProdutos: %d|%d\n{FFFFFF}Para comprar digite /compraremp",BizzInfo[h][bMessage],BizzInfo[h][bBuyPrice],BizzInfo[h][bLevelNeeded],BizzInfo[h][bProd],BizzInfo[h][bMaxProd]);
            BizzLabel[h] = Create3DTextLabel(strlabel,COR_3DLABEL,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]+0.5,30.0,0);
        }
        if(BizzInfo[h][bOwned] == 1)
        {
            BizzPickup[h] = CreatePickup(1318, 23, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],-1);
            format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}%s\nDono: %s\nExtorcao: %s\nEntrada: R$%d\nNivel: %d\nProdutos: %d|%d",BizzInfo[h][bMessage],BizzInfo[h][bOwner],BizzInfo[h][bExtortion],BizzInfo[h][bEntranceCost],BizzInfo[h][bLevelNeeded],BizzInfo[h][bProd],BizzInfo[h][bMaxProd]);
            BizzLabel[h] = Create3DTextLabel(strlabel,COR_3DLABEL,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]+0.5,30.0,0);
        }
    }

    if(donoPosto >= 0)
    {
        if(donoPosto == 0)
        {
            DonodoPosto = Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{80FFFF}Posto Abandonado\nNinguem no controle\n/do para Tomar",COR_3DLABEL, -91.4212, -1169.1992, 2.4298, 40.0, 0);
        }
        if(donoPosto == 21)
        {
            DonodoPosto = Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{A80000}Posto Abandonado\nHells Angels no Comando\nMembros Terão Gasolina Grátis.",COR_3DLABEL, -91.4212, -1169.1992, 2.4298, 40.0, 0);
        }
        if(donoPosto == 22)
        {
            DonodoPosto = Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{009B9B}Posto Abandonado\nMongols no Comando\nMembros Terão Gasolina Grátis.",COR_3DLABEL, -91.4212, -1169.1992, 2.4298, 40.0, 0);
        }
        if(donoPosto == 1 || donoPosto == 2 || donoPosto == 28)
        {
            DonodoPosto = Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{6F6FFF}Posto Abandonado\nGoverno no Comando\nPoliciais Terão Gasolina Grátis.",COR_3DLABEL, -91.4212, -1169.1992, 2.4298, 40.0, 0);
        }
        if(donoPosto == 23)
        {
            DonodoPosto = Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{0063C6}Posto Abandonado\nSons Of Anarchy no Comando\nMembros Terão Gasolina Grátis.",COR_3DLABEL, -91.4212, -1169.1992, 2.4298, 40.0, 0);
        }
        if(donoPosto == 25)
        {
            DonodoPosto = Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{6B56C2}Posto Abandonado\nDrifters no Comando\nMembros Terão Gasolina Grátis.",COR_3DLABEL, -91.4212, -1169.1992, 2.4298, 40.0, 0);
        }
    }
    //BPM
    format(strlabel,sizeof strlabel,"{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}DP do BPM \n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[28][Lider]);
    LabelOrg28 = Create3DTextLabel(strlabel,COR_3DLABEL,1384.4771,-1671.6896,13.4901,30.0,0);
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}DP Policia Militar\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[1][Lider]);
    LabelOrg1 = Create3DTextLabel(strlabel, COR_3DLABEL, 1554.9537,-1675.6584,16.1953,30.0,0);

    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Fundos da Prefeitura \n{FDF000}R$ %d",CofreOrg[7][Dinheiro]);
    CofrePrefeitura = Create3DTextLabel(strlabel, COR_3DLABEL, 355.4539,159.9982,1008.4802,30.0,0);
    //ROTA
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}DP  ROTA\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[2][Lider]);
    LabelOrg2 = Create3DTextLabel(strlabel, COR_3DLABEL, 327.8898,-1511.8446,36.0325,30.0,0);
    //los aztecas
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HQ Los Aztecas\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[5][Lider]);
    LabelOrg4 = Create3DTextLabel(strlabel, COR_3DLABEL, 1673.9886,-2122.1403,14.6014,30.0,0);
    //Polícia Rodoviária Federal
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}DP B.O.P.E\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[11][Lider]);
    LabelOrg5 = Create3DTextLabel(strlabel, COR_3DLABEL, 913.68,-1004.56,37.98,30.0,0);
    //mafia Russa
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HQ Mafia Russa\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[12][Lider]);
    LabelOrg6 = Create3DTextLabel(strlabel, COR_3DLABEL, 1614.2990,1679.7318,11.2184,30.0,0);
    //Mafia Japonesa
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HQ Mafia Japonesa\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[13][Lider]);
    LabelOrg7 = Create3DTextLabel(strlabel, COR_3DLABEL, 2634.0874,1824.3887,11.0234,30.0,0);
    //groove
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HQ Groove Street\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[14][Lider]);
    LabelOrg8 = Create3DTextLabel(strlabel, COR_3DLABEL, 2495.3481,-1691.1355,14.7656,30.0,0);
    //Polícia Rodoviária Federal
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}DP Polícia Rodoviária Federal\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[16][Lider]);
    LabelOrg9 = Create3DTextLabel(strlabel, COR_3DLABEL, 918.8992,-1252.3286,16.2109,30.0,0);
    //ballas
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HQ Ballas\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[17][Lider]);
    LabelOrg10 = Create3DTextLabel(strlabel, COR_3DLABEL, 1150.5472,-1180.6296,32.0275,30.0,0);
    //vagos
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HQ Los Vagos\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[18][Lider]);
    LabelOrg11 = Create3DTextLabel(strlabel, COR_3DLABEL, 2808.1106,-1189.6528,25.3436,30.0,0);
    //Comando v
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HQ Comando Vermelho\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[19][Lider]);
    LabelOrg12 = Create3DTextLabel(strlabel, COR_3DLABEL, 2140.9382,-1801.9813,16.1475,30.0,0);
    //ploko
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HQ Hells Angels\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[21][Lider]);
    LabelOrg14 = Create3DTextLabel(strlabel, COR_3DLABEL, 681.621521,-474.528533,16.185522,30.0,0);
    //mongols
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HQ Mongols\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[22][Lider]);
    LabelOrg15 = Create3DTextLabel(strlabel, COR_3DLABEL, 23.8872,-2646.5869,40.4640,30.0,0);
    //sons
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HQ Sons Of Anarchy\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[23][Lider]);
    LabelOrg16 = Create3DTextLabel(strlabel, COR_3DLABEL, -1566.5295,-2730.2783,48.7435,30.0,0);
    //rep
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}San News\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[9][Lider]);
    LabelOrg17 = Create3DTextLabel(strlabel, COR_3DLABEL, 732.61,-1344.33,13.52,30.0,0);
    //med
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Hospital BPG\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[4][Lider]);
    LabelOrg18 = Create3DTextLabel(strlabel, COR_3DLABEL, 2025.1075,-1402.5234,17.2085,30.0,0);
//sk
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HunTerS\n{FFEE22}Lider: {00ECEC}%s",InfoOrg[26][Lider]);
    LabelOrg19 = Create3DTextLabel(strlabel, COR_3DLABEL, 2097.6445,-1602.3252,13.5541,30.0,0);
    //Snake.
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Snake.\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[27][Lider]);
    LabelOrg20 = Create3DTextLabel(strlabel, COR_3DLABEL, 1228.2998,511.7998,19.6000,30.0,0);
    if(temporoubobanco == 1)
    {
        format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre do Banco\n{FFEE22}Dinheiro: {FFA8A8}Roubado\n{FFFFFF}Digite /roubar Para Roubar");
        LabelBanco = Create3DTextLabel(strlabel, COR_3DLABEL, 2306.5127,-6.1166,26.7422,11.0,0);
    }
    else
    {
        format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre do Banco\n{FFEE22}Dinheiro: {00ECEC}R$ %d\n{FFFFFF}Digite /roubar Para Roubar",GranaBanco);
        LabelBanco = Create3DTextLabel(strlabel, COR_3DLABEL, 2306.5127,-6.1166,26.7422,11.0,0);
    }
    if(temporoubolot == 1)
    {
        format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre da Lotérica\n{FFEE22}Dinheiro: {FFA8A8}Roubado\n{FFFFFF}Digite /roubar Para Roubar",GranaLot);
        LabelLot = Create3DTextLabel(strlabel, COR_3DLABEL, 820.6042,8.3990,1004.1962,11.0,0);
    }
    else
    {
        format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre da Lotérica\n{FFEE22}Dinheiro: {00ECEC}R$ %d\n{FFFFFF}Digite /roubar Para Roubar",GranaLot);
        LabelLot = Create3DTextLabel(strlabel, COR_3DLABEL, 820.6042,8.3990,1004.1962,11.0,0);
    }
    if(temporouboposto == 1)
    {
        format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre do Posto\n{FFEE22}Dinheiro: {FFA8A8}Roubado\n{FFFFFF}Digite /roubar Para Roubar",GranaPosto);
        LabelPosto = Create3DTextLabel(strlabel, COR_3DLABEL, 381.5648,-188.1646,1000.6328,11.0,0);
    }
    else
    {
        format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre do Posto\n{FFEE22}Dinheiro: {00ECEC}R$ %d\n{FFFFFF}Digite /roubar Para Roubar",GranaPosto);
        LabelPosto = Create3DTextLabel(strlabel, COR_3DLABEL, 381.5648,-188.1646,1000.6328,11.0,0);
    }
    if(temporouboloja1 == 1)
    {
        format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre da Loja de Armas\n{FFEE22}Dinheiro: {FFA8A8}Roubado\n{FFFFFF}Digite /roubar Para Roubar",GranaLoja1);
        LabelLoja1 = Create3DTextLabel(strlabel, COR_3DLABEL, 2169.1516,1589.9265,999.9713,11.0,0);
    }
    else
    {
        format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre da Loja de Armas\n{FFEE22}Dinheiro: {00ECEC}R$ %d\n{FFFFFF}Digite /roubar Para Roubar",GranaLoja1);
        LabelLoja1 = Create3DTextLabel(strlabel, COR_3DLABEL, 2169.1516,1589.9265,999.9713,11.0,0);
    }
    if(temporouboloja2 == 1)
    {
        format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre da Loja de Armas\n{FFEE22}Dinheiro: {FFA8A8}Roubado\n{FFFFFF}Digite /roubar Para Roubar",GranaLoja2);
        LabelLoja2 = Create3DTextLabel(strlabel, COR_3DLABEL, 451.3090,-79.8603,999.5547,11.0,0);
    }
    else
    {
        format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre da Loja de Armas\n{FFEE22}Dinheiro: {00ECEC}R$ %d\n{FFFFFF}Digite /roubar Para Roubar",GranaLoja2);
        LabelLoja2 = Create3DTextLabel(strlabel, COR_3DLABEL, 451.3090,-79.8603,999.5547,11.0,0);
    }
    ObjetosAtivos();
    printf("[PlayGamer] %d Objetos Carregados!", ObjetosPlayGamer-1);
    CheckVip();
    LoadPassword();
    SetTimer("LiberarGMX", 300000, 0);
    return 1;
}
//=============================================================================//
public SyncTime()
{
    new string[64];
    new tmphour;
    new tmpminute;
    new tmpsecond;
    gettime(tmphour, tmpminute, tmpsecond);
    Fixhour(tmphour);
    tmphour = shifthour;
    if ((tmphour > ghour) || (tmphour == 0 && ghour == 23))
    {
        format(string, sizeof(string), "[BPG]: Agora são %d:00 horas",shifthour);
        BroadCast(0x1583F0AA,string);
        ghour = tmphour;
        PayDay();
        SetHora();
    }
}
public GetClosestPlayer(p1)
{
    new x,Float:dis,Float:dis2,player;
    player = -1;
    dis = 99999.99;
    for (x=0;x<MaiorID;x++)
    {
        if(IsPlayerConnected(x))
        {
            if(x != p1)
            {
                dis2 = GetDistanceBetweenPlayers(x,p1);
                if(dis2 < dis && dis2 != -1.00)
                {
                    dis = dis2;
                    player = x;
                }
            }
        }
    }
    return player;
}
public Production()
{
    for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(PlayerInfo[i][pFishes] >= 5) { if(FishCornt[i] >= 3) { PlayerInfo[i][pFishes] = 0; } else { FishCornt[i] += 1; } }
            if(PlayerDrunk[i] > 0) { PlayerDrunk[i] = 0; PlayerDrunkTime[i] = 0; SetPlayerDrunkLevel (i, 0); GameTextForPlayer(i, "~w~O efeito da bebida~n~~b~acabou", 3500, 1); }
            if(PlayerInfo[i][pPayDay] < 6) { PlayerInfo[i][pPayDay] += 1; } //+ 5 min to PayDay anti-abuse
            if(WantedPoints[i] > 0)
            {
               /* WantedPoints[i] -= 1;
                SetPlayerWantedLevel(i, WantedPoints[i]);     */
                format(gstring, sizeof(gstring), "Nível de procurado:{00EAEA} %d", WantedPoints[i]);
                SendClientMessage(i, 0xFEBF01FF, gstring);
            }
        }
    }
}
public PayDay()
{
    new Conta,interest;
    new rent = 0;
    new string[128];
    for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i) && !IsPlayerNPC(i))
        {
            if(PlayerInfo[i][pLevel] > 0)
            {
                if(MoneyMessage[i]==1)
                {
                    SendClientMessage(i, COLOR_LIGHTRED, "Você não pagou a sua dívida e foi preso.");
                    GameTextForPlayer(i, "~r~Preso!", 2000, 1);
                    SetPlayerInterior(i, 6);
                    SetPlayerPos(i, 264.6288,77.5742,1001.0391);
                    PlayerInfo[i][pJailed] = 1;
                    ResetPlayerWeapons(i);
                    WantedPoints[i] = 0;
                    PlayerInfo[i][pAjustado] = 0;
                    SetPlayerWantedLevel(i, 0);
                    PlayerInfo[i][pJailTime] = 600;
                    format(string, sizeof(string), "Você foi preso por %d segundos.", PlayerInfo[i][pJailTime]);
                    SendClientMessage(i, COLOR_LIGHTBLUE, string);
                    //ProcuradoPlayer(i);
                }
                new playername2[MAX_PLAYER_NAME];
                GetPlayerName(i, playername2, sizeof(playername2));
                Conta = PlayerInfo[i][pConta];
                new key = PlayerInfo[i][pPHousekey];
                if(key != 9999)
                {
                    rent = HouseInfo[key][hRent];
                    if(strcmp(playername2, HouseInfo[key][hOwner], true) == 0)
                    {
                        rent = 0;
                    }
                    else if(rent > GetPlayerMoneyEx(i))
                    {
                        PlayerInfo[i][pPHousekey] = 9999;
                        SendClientMessage(i, COLOR_WHITE, "Você foi expulso(a).");
                        rent = 0;
                    }
                    HouseInfo[key][hTakings] = HouseInfo[key][hTakings]+rent;
                }
                new tmpintrate;
                if(PlayerInfo[i][pVip] == 1) { tmpintrate = 3; }
                else if(PlayerInfo[i][pVip] == 2) { tmpintrate = 4; }
                else { tmpintrate = 1; }
                if(PlayerInfo[i][pPayDay] >= 3)
                {
                    Tax += TaxValue;
                    PlayerInfo[i][pConta] -= TaxValue;
                    new checks = PlayerInfo[i][pSalario];

                    if(PlayerInfo[i][pVip] == 1){checks = PlayerInfo[i][pSalario]*2;}
                    if(PlayerInfo[i][pVip] == 2) { checks = PlayerInfo[i][pSalario]*3; }
                    new ebill = (PlayerInfo[i][pConta]/10000);
                    new ebill2 = (PlayerInfo[i][pConta]/10000);
                    ConsumingMoney[i] = 1;
                    GivePlayerMoney(i, checks);
                    if(PlayerInfo[i][pConta] > 0)
                    {
                        PlayerInfo[i][pConta] -= ebill;
                        SBizzInfo[4][sbTill] += ebill;
                        PlayerInfo[i][pConta] -= ebill2;
                        SBizzInfo[8][sbTill] += ebill2;
                        GastarProdutos(2, 4, 3);
                        GastarProdutos(2, 8, 3);
                    }
                    else
                    {
                        ebill = 0;
                        ebill2 = 0;
                    }
                    interest = (PlayerInfo[i][pConta]/1000)*(tmpintrate);
                    if(PlayerInfo[i][pVip] == 2) { checks = PlayerInfo[i][pExp]+=1; }
                    //PlayerPlayMusic(i);
                    PlayerInfo[i][pExp] ++;
                    PlayerInfo[i][pConta] = Conta+interest;
                    SendClientMessage(i, 0x0080FFFF, "~.~.~.~.~.~.~.~ Pagamento ~.~.~.~.~.~.~.~");
                    format(string, sizeof(string), "  Organização: %s   Cargo: %s", NomeORG(i), OrgCargo(i));
                    SendClientMessage(i, -1, string);
                    format(string, sizeof(string), "  Salário: R$%d   Imposto: -R$%d", checks, TaxValue);
                    SendClientMessage(i, -1, string);
                    SendClientMessage(i, 0xC0C0C0FF, "  Médico: R$300");
                    if(PlayerInfo[i][pPHousekey] != 9999 || PlayerInfo[i][pPbiskey] != 9999)
                    {
                        format(string, sizeof(string), "  Energia: -R$%d", ebill);
                        SendClientMessage(i, 0xC0C0C0FF, string);
                        format(string, sizeof(string), "  Água e Esgoto: -R$%d", ebill2);
                        SendClientMessage(i, 0xC0C0C0FF, string);
                    }
                    format(string, sizeof(string), "  Banco: R$%d", Conta);
                    SendClientMessage(i, 0xC0C0C0FF, string);
                    format(string, sizeof(string), "  Juros: 0.%d  por cento",tmpintrate);
                    SendClientMessage(i, 0xC0C0C0FF, string);
                    SendClientMessage(i, 0x0080FFFF, "~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~");
                    format(string, sizeof(string), "  Novo extrato: R$%d", PlayerInfo[i][pConta]);
                    SendClientMessage(i, -1, string);
                    format(string, sizeof(string), "  Aluguel: -R$%d", rent);
                    SendClientMessage(i, -1, string);
                    //SendClientMessage(i, CORS, "===========================================");
                    PlayerPlaySound(i, 1052, 0.0, 0.0, 0.0);
                    format(string, sizeof(string), "~w~-==- ~b~~h~~h~ Play~r~~h~Gamer ~g~~h~~h~Salario ~w~ -==-");
                    GameTextForPlayer(i, string, 5000, 1);
                    GivePlayerMoney(i,- 300);
                    rent = 0;
                    PlayerInfo[i][pPayDay] = 0;
                    PlayerInfo[i][pSalario] = 0;
                    PlayerInfo[i][pConnectTime] += 1;
                    if(PlayerInfo[i][pEmprego] > 0)
                    {
                        if(PlayerInfo[i][pContractTime] < 25)
                        {
                            PlayerInfo[i][pContractTime] ++;
                        }
                    }
                }
                else
                {
                    SendClientMessage(i, COLOR_LIGHTRED, "* Você não jogou tempo suficiente para receber salário!.");
                }
            }
        }
        new lolbagui;
        lolbagui = PlayerInfo[i][pExp];
        new nxtlevel = PlayerInfo[i][pLevel]+1;
        if(lolbagui >= nxtlevel*levelexp)
        {
            GameTextForPlayer(i, "~g~~h~Respeito Adquirido!~n~~r~~h~Digite /comprarnivel!", 5000, 1);
        }
    }
    OOCNews(COLOR_WHITE, "Loteria: Ja comecou a loteria.");
    new rand = random(80);
    if(rand < 77) { rand += 3; }
    Lotto(rand);
    LucroMiniEMPS();
    print("Payday Efetuado com Sucesso!");
    SetTimer("CheckPlayGamer",4000,0);
    //return 1;
}
stock GetNumberOfPlayersOnThisIP(test_ip[])
{
    new against_ip[32+1];
    new x = 0;
    new ip_count = 0;
    for(x=0; x<MaiorID; x++)
    {
        if(IsPlayerConnected(x))
        {
            GetPlayerIp(x,against_ip,32);
            if(!strcmp(against_ip,test_ip)) ip_count++;
        }
    }
    return ip_count;
}

/*strtok(const string[], &index)
{
    new length = strlen(string);
    while ((index < length) && (string[index] <= ' '))
    {
        index++;
    }
    new offset = index;
    new result[20];
    while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
    {
        result[index - offset] = string[index];
        index++;
    }
    result[index - offset] = EOS;
    return result;
}*/
public split(const strsrc[], strdest[][], delimiter)
{
    new i, li;
    new aNum;
    new len;
    while(i <= strlen(strsrc)){
        if(strsrc[i]==delimiter || i==strlen(strsrc)){
            len = strmid(strdest[aNum], strsrc, li, i, 128);
            strdest[aNum][len] = 0;
            li = i+1;
            aNum++;
        }
        i++;
    }
    return 1;
}
public OnPlayerRegister(playerid)
{
    if(IsPlayerConnected(playerid))
    {
            new file[128];
            GetPlayerName(playerid,loginname,sizeof(loginname));
            format(file, sizeof(file), OpenAccPlayer, PlayerName(playerid));
            if(!dini_Exists(file)){dini_Create(file);}
            dini_Set(file, "Key", StrPasswrd[playerid]);
            ClearMarriage(playerid);
            format(PlayerInfo[playerid][Rufflesey],128, "%s", dini_Get(file, "Key"));
            SalvarPlayer(playerid);
            SetTimerEx("OnPlayerLogin", 1800, false, "i", playerid);
            /*SendClientMessage(playerid, 0x33FF00FF, "[BPG]: Você agora pode digitar /logar <senha>");
            format(loginstring,sizeof(loginstring),"{FFB973}Seja Bem Vindo  {FFFF00}Brasil {0000FF}Play {00FF00}Gamer v1.0\n\n\n{FFFFFF}          Status da Conta: {80FF80}Registrada\n\n\n{FFFFFF}Nome:{1E90FF} %s\n\n{72FCB0}Você já Está Registrado!\n\n{77D3EE}Digite sua Senha para Logar.\n\n{FFC184}   ** Caso erre 5 Vezes Será Banido!!\n\n{FFFFFF}Visite: bpg-rapidosemortais.forumeiros.com  <~",loginname);
            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_INPUT,"{FFFF00}Brasil {0000FF}Play {00FF00}Gamer v1.0",loginstring,"Logar","Cancelar");*/
    }
    return 1;
}
public OnPlayerLogin(playerid)
{
       StopMusic(playerid);
       TextDrawHideForPlayer( playerid, ImagemEntrada );
       new tmp2[128],file[128];
       format(file, sizeof(file), OpenAccPlayer, PlayerName(playerid));
       format(PlayerInfo[playerid][Rufflesey],128, "%s", dini_Get(file, "Key"));
       if(strcmp(PlayerInfo[playerid][Rufflesey],StrPasswrd[playerid], true ) == 0 )
       {
            CarregarPlayer(playerid);
            logouagora[playerid] = 1;
            CheckOwnerb(playerid);
            CheckOwnerh(playerid);
            StopMusic(playerid);
        }
        else
        {
            GetPlayerName(playerid,loginname,sizeof(loginname));
            SendClientMessage(playerid, COLOR_YELLOW, "[AVISO]: SENHA INCORRETA! - VOCÊ POSSUI MAIS [5] TENTATIVAS PARA NÃO SER DESCONECTADO!");
            TogglePlayerControllable(playerid, 0);
            /*SetPlayerPos(playerid,1415.4329,-806.9493,85.0470);
            InterpolateCameraPos(playerid, 1442.4664, -866.5638, 89.6085, 1416.4031,-870.2377,91.1348, 6000, CAMERA_CUT);
            InterpolateCameraPos(playerid, 1416.4031,-870.2377,91.1348, 1342.3231, -847.4993, 91.1653, 6000, CAMERA_CUT);
            InterpolateCameraLookAt(playerid, 1415.4329,-806.9493,85.0470, 1342.7404, -848.4073, 90.7405, 10000, CAMERA_MOVE);                */
            format(loginstring,sizeof(loginstring),"  {FFFFFF}Seja bem-vindo ao {1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer v1.0\n{FFFFFF}            bpg-rapidosemortais.forumeiros.com\n\n{FFFFFF}                   Conta: {31611b}Registrada!\n{FFFFFF}                   Nick:{2657a9} %s\n\n{FFFFFF}                     Digite sua senha.\n{a09f2c}    ATENÇÃO! LIMITE DE TENTATIVAS [6]",loginname);
            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_INPUT,"            {1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer v1.0",loginstring,"Entrar","Sair");
            gPlayerLogTries[playerid] += 1;
            if(gPlayerLogTries[playerid] == 6)
            {
                SendClientMessage(playerid, COLOR_RED, "[AVISO]: SENHA INCORRETA! - VOCÊ ATINGIU O LIMITE DE TENTATIVAS PARA LOGIN E SERÁ DESCONECTADO!");
                Kick(playerid);
            }
            return 1;
        }
        ClearChatbox(playerid, 30);
        gPlayerLogged[playerid] = 1;
        TogglePlayerControllable(playerid, 1);
        StatusPlayer(5, playerid);
        SetPlayerWantedLevel(playerid, WantedPoints[playerid]);
        if(PlayerInfo[playerid][pReg] == 0)
        {
            PlayerInfo[playerid][pLevel] = 3;
            PlayerInfo[playerid][pSHealth] = 0.0;
            PlayerInfo[playerid][pInt] = 0;
            PlayerInfo[playerid][pLocal] = 9999;
            PlayerInfo[playerid][pTeam] = 3;
            if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
            new randphone = 1000 + random(8999);//
            PlayerInfo[playerid][pPnumber] = randphone;
            PlayerInfo[playerid][pPHousekey] = 9999;
            PlayerInfo[playerid][pPbiskey] = 9999;
            PlayerInfo[playerid][pConta] = 100;
            PlayerInfo[playerid][pReg] = 1;
            PlayerInfo[playerid][pEmprego] = 0;
            PlayerInfo[playerid][Rufflesills] = 0;
            PlayerInfo[playerid][pDeaths] = 0;
            ResetPlayerMoney(playerid);
        }
        if(PlayerInfo[playerid][pWarns] == 1) //1 aviso
        {
            SendClientMessage(playerid, COLOR_YELLOW, "Sua conta possui {c31616}1 aviso!");
            SendClientMessage(playerid, COLOR_YELLOW, "Cuidado, ao atingir 3 avisos você será banido automaticamente!");
        }
        if(PlayerInfo[playerid][pWarns] == 2) //2 avisos
        {
            SendClientMessage(playerid, COLOR_YELLOW, "Sua conta possui {c31616}2 avisos!");
            SendClientMessage(playerid, COLOR_YELLOW, "Cuidado, ao atingir 3 avisos você será banido automaticamente!");
        }
        if(PlayerInfo[playerid][pWarns] >= 3) //3 avisos
        {
            PlayerInfo[playerid][pWarns] = 0;
        }
        printf("%s Logou no Servidor.",PlayerName(playerid));
        //SendClientMessage(playerid, COLOR_GREEN, "Bem Vindo ao {FFFF00}Brasil {0000FF}Play {00FF00}Gamer v1.0");
//          format(string2, sizeof(string2), "Seu último login foi no dia %d/%d/%d horário %d:%d:%d",strval(Info[0]),strval(Info[1]),strval(Info[2]),strval(Info[3]),strval(Info[4]),strval(Info[5]));
        new dia,mes,ano,hora,mins,seg;
        getdate(ano,mes,dia);
        gettime(hora,mins,seg);
        /*format(string3, sizeof(string3),"%d/%d/%d/%d/%d/%d",dia,mes,ano,hora,mins,seg);
        strmid(PlayerInfo[playerid][pLastLogin],string3,0,strlen(string3),255);*/
        AdmCheck(playerid);
        StatusPlayer(3, playerid);
        HelpCheck(playerid);
        StatusPlayer(4, playerid);
        SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pSkin], 1726.9946,-1635.9073,20.2168, 1.0, -1, -1, -1, -1, -1, -1);
        if(gTeam[playerid] == 0)
        {
            gTeam[playerid] = 3;
        }
        else
        {
            gTeam[playerid] = PlayerInfo[playerid][pTeam];
        }
        Hospital[playerid] = 1;
        gPlayerLogged[playerid] = 1;
        format(tmp2, sizeof(tmp2), "~n~ ~w~Bem Vindo ~n~~p~~h~%s", PlayerName(playerid));
        GameTextForPlayer(playerid, tmp2, 5000, 1);
        SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 999);
        SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 999);
        SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 999);
        SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 999);
        SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 999);
        SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 999);
        SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 999);
        SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 999);
        SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 999);
        SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 999);
        SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 999);
        ScoreLevel(playerid);
        if(PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] < 3000)
        {

            new AdminName[MAX_PLAYER_NAME];
            GetPlayerName(playerid, AdminName, sizeof(AdminName));
            format(gstring, sizeof(gstring), "~p~%s: ~g~~h~~h~ON", AdminName);
            for(new i=0; i<MaiorID; i++)
            {
                if(IsPlayerConnected(i)) GameTextForPlayer(i, gstring , 5000, 1);
            }
        }
        atividadeOnline[ playerid ] = gettime();
        CarregarAtividade( playerid );
        if(PlayerInfo[playerid][pEmprego] == 2)
        {
            Advogado += 1;
        }
        TempoLogin = SetTimerEx("LoginAgora", 10000, 0, "i", playerid);
        new arquivo[64],RankVip[34];
        SendClientMessage(playerid, 0xFFFFFFFF, " ");
        SendClientMessage(playerid, 0xFFFFFFFF, " ");
        SendClientMessage(playerid, 0xFFFFFFFF, "- {1E90FF}INFORMAÇÕES DO JOGADOR{FFFFFF}");
        new nxtlevel = PlayerInfo[playerid][pLevel]+1;
        new expquantidade = nxtlevel*levelexp;
        format(arquivo, sizeof(arquivo), OpenAccPlayer,PlayerName(playerid));
        format(strvinny,sizeof(strvinny),"- Último Login: {1E90FF}%d/%d/%d {FFFFFF}  Horário:{1E90FF} %d:%d:%d",dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
        SendClientMessage(playerid,0xFFFFFFFF,strvinny);

        if(PlayerInfo[playerid][pVip] == 0) { RankVip = "Gratis"; }
        else if(PlayerInfo[playerid][pVip] == 1) { RankVip = "VIP"; }
        else if(PlayerInfo[playerid][pVip] == 2) { RankVip = "Super VIP"; }
        format(gstring,sizeof(gstring),"- Conta: {1E90FF}%s",RankVip);
        SendClientMessage(playerid,0xFFFFFFFF,gstring);
        format(strvinny,sizeof(strvinny),"- Nivel: {1E90FF}%d{FFFFFF}  Respeito: {1E90FF}%d/%d{FFFFFF}  Horas Jogadas{1E90FF} %d",PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pExp],expquantidade,PlayerInfo[playerid][pConnectTime]);
        SendClientMessage(playerid,0xFFFFFFFF,strvinny);
        format(gstring,sizeof(gstring),"- Organização: {1E90FF}%s",NomeORG(playerid));
        SendClientMessage(playerid,0xFFFFFFFF,gstring);
        format(gstring,sizeof(gstring),"- Seja bem-vindo %s, na dúvida utilize /duvida! {1E90FF}Tenha um bom jogo.",PlayerName(playerid));
        SendClientMessage(playerid,0xFFFFFFFF,gstring);
        SendClientMessage(playerid, 0xFFFFFFFF, "-");
        SendClientMessage(playerid, 0xFFFFFFFF, " ");
        TextDrawHideForPlayer(playerid, TextPlayersOn);
        TextDrawHideForPlayer(playerid, NovaVersao);
        TextDrawHideForPlayer(playerid, TextLogin);
        TextDrawHideForPlayer(playerid, TextLogin1);
        Hospital[playerid] = 1;
        if( PlayerInfo[ playerid ][ pTimeBlock ] > gettime() ){
            BlockAccount[ playerid ] = true;
            new time, str[ 128 ];
            time = ( PlayerInfo[ playerid ][ pTimeBlock ] - gettime() )/60;
            format( str, sizeof str, "{EE0000}Sua conta esta bloqueado por %d minutos.", time );
            SendClientMessage( playerid, -1, str );
        }
        SpawnPlayer(playerid);
        StatusPlayer(1, playerid);
        ShowGz(playerid);
        if(EleicoesOn == 0) { PlayerInfo[playerid][pVotou] = 0; }
        /*new CrashLolz = GetPlayerMoneyEx(playerid);
        new CrashLolz2 = GetPlayerMoneyEx(playerid);
        if(CrashLolz < 0) { new CashTotal = CrashLolz+CrashLolz2; GivePlayerMoney(playerid,CashTotal); }*/
        PlayerInfo[playerid][pOnline] = 1;
        StopMusic(playerid);
        if(strfind(PlayerInfo[playerid][pMarriedTo], "Luta", true) != -1){ClearMarriage(playerid);}
        CheckDonoCarro(playerid);
        if(PlayerInfo[playerid][pAdmin] >= 3000){HideAdm[playerid] = 1;}
        PlayerInfo[playerid][pLastDia] = dia;
        PlayerInfo[playerid][pLastMes] = mes;
        PlayerInfo[playerid][pLastAno] = ano;
        PlayerInfo[playerid][pLastHora] = hora;
        PlayerInfo[playerid][pLastMinuto] = mins;
        PlayerInfo[playerid][pLastSegundo] = seg;
        VehPreso(playerid);
        new TantoGB[MAX_PLAYERS];
        if(PlayerInfo[playerid][pConta] >= 999999999)
        {
            TantoGB[playerid] = 0;
            for(new i = 0; i < 10000; i++)
            {
                if(PlayerInfo[playerid][pConta] > 999999991)
                {
                    TantoGB[playerid] += 1;
                    PlayerInfo[playerid][pConta] -= 100000;
                    PlayerInfo[playerid][pGold] += 1;
                }
            }
            format(gstring, sizeof(gstring), "Você relogou com mais de 1kkk no banco e foi convertido o resto para %d GB.", TantoGB[playerid]);
            SendClientMessage(playerid, COLOR_YELLOW, gstring);
        }
        if(GetPlayerFamy(playerid) == FamilyBloqueada)
        {
            SendClientMessage(playerid, COLOR_LIGHTRED, "* A sua Família Cancelada, Você foi Expulso Automaticamente.");
            PlayerInfo[playerid][pFamyLider] = 0;
            PlayerInfo[playerid][pFamyMember] = 0;
        }
        new curdate = getdate();
        if(PlayerInfo[playerid][pPHousekey] != 9999)
        {
            HouseInfo[PlayerInfo[playerid][pPHousekey]][hDate] = curdate;
        }
        for(new h = 0; h < sizeof(Carro); h++)
        {
            if (PlayerInfo[playerid][pChave] == Carro[h][CarroID])
            {
                Carro[h][cDate] = curdate;
                break;
            }
        }
        SetarCameraParaJogador(playerid);
        TextDrawShowForPlayer(playerid, forum);
        TextDrawShowForPlayer(playerid, TextData);
        TextDrawShowForPlayer(playerid, TextHora);

        SetTimerEx("VipCheck", 20000, false, "i", playerid);
        SetTimerEx("ShowDialogVIP", 2500, false, "i",playerid);
        StopAudioStreamForPlayer(playerid);
        if( PlayerInfo[ playerid ][ pAdmin ] ^ 3000 ){
            SetTimerEx("HackChecker", FZ_SCDS * 1000, 0, "i", playerid);
            TogglePlayerControllable(playerid, 0);
        }
        return 1;
}
forward SalvarPlayer(playerid);
public SalvarPlayer(playerid)
{
    if(gPlayerLogged[playerid])
    {
        new file[128];
        format(file, sizeof(file), OpenAccPlayer, PlayerName(playerid));
            if(!dini_Exists(file))
            {
                dini_Create(file);
            }
            new File: hFile = fopen(file, io_write);
            if (hFile)
            {
                new var[64];
                PlayerInfo[playerid][pCash] = GetPlayerMoneyEx(playerid);
                //dini_Set(file, "Key", PlayerInfo[playerid][Rufflesey]);
                format(var, 64, "Key=%s\n",PlayerInfo[playerid][Rufflesey]);fwrite(hFile, var);
                format(var, 64, "Level=%d\n",PlayerInfo[playerid][pLevel]);fwrite(hFile, var);
                format(var, 64, "AdminLevel=%d\n",PlayerInfo[playerid][pAdmin]);fwrite(hFile, var);
                format(var, 64, "HelpLevel=%d\n",PlayerInfo[playerid][pHelper]);fwrite(hFile, var);
                format(var, 64, "DonateRank=%d\n",PlayerInfo[playerid][pVip]);fwrite(hFile, var);
                format(var, 64, "UpgradePoints=%d\n",PlayerInfo[playerid][gPupgrade]);fwrite(hFile, var);
                format(var, 64, "ConnectedTime=%d\n",PlayerInfo[playerid][pConnectTime]);fwrite(hFile, var);
                format(var, 64, "Registrado=%d\n",PlayerInfo[playerid][pReg]);fwrite(hFile, var);
                format(var, 64, "Sex=%d\n",PlayerInfo[playerid][pSex]);fwrite(hFile, var);
                format(var, 64, "Respeito=%d\n",PlayerInfo[playerid][pExp]);fwrite(hFile, var);
                format(var, 64, "Money=%d\n",PlayerInfo[playerid][pCash]);fwrite(hFile, var);
                format(var, 64, "Bank=%d\n",PlayerInfo[playerid][pConta]);fwrite(hFile, var);
                format(var, 64, "Crimes=%d\n",PlayerInfo[playerid][pCrimes]);fwrite(hFile, var);
                format(var, 64, "Kills=%d\n",PlayerInfo[playerid][Rufflesills]);fwrite(hFile, var);
                format(var, 64, "Deaths=%d\n",PlayerInfo[playerid][pDeaths]);fwrite(hFile, var);
                format(var, 64, "Phonebook=%d\n",PlayerInfo[playerid][pPhoneBook]);fwrite(hFile, var);
                format(var, 64, "LottoNr=%d\n",PlayerInfo[playerid][pLottoNr]);fwrite(hFile, var);
                format(var, 64, "Fishes=%d\n",PlayerInfo[playerid][pFishes]);fwrite(hFile, var);
                format(var, 64, "BiggestFish=%d\n",PlayerInfo[playerid][pBiggestFish]);fwrite(hFile, var);
                format(var, 64, "Emprego=%d\n",PlayerInfo[playerid][pEmprego]);fwrite(hFile, var);
                format(var, 64, "Paycheck=%d\n",PlayerInfo[playerid][pSalario]);fwrite(hFile, var);
                format(var, 64, "HeadValue=%d\n",PlayerInfo[playerid][pHeadValue]);fwrite(hFile, var);
                format(var, 64, "Jailed=%d\n",PlayerInfo[playerid][pJailed]);fwrite(hFile, var);
                format(var, 64, "JailTime=%d\n",PlayerInfo[playerid][pJailTime]);fwrite(hFile, var);
                format(var, 64, "Materiais=%d\n",PlayerInfo[playerid][pMats]);fwrite(hFile, var);
                format(var, 64, "Maconha=%d\n",PlayerInfo[playerid][pDrogas]);fwrite(hFile, var);
                format(var, 64, "Cocaina=%d\n",PlayerInfo[playerid][pDrogas2]);fwrite(hFile, var);
                format(var, 64, "Crack=%d\n",PlayerInfo[playerid][pDrogas3]);fwrite(hFile, var);
                format(var, 64, "Lider=%d\n",PlayerInfo[playerid][pLider]);fwrite(hFile, var);
                format(var, 64, "FamyLider=%d\n",PlayerInfo[playerid][pFamyLider]);fwrite(hFile, var);
                format(var, 64, "Member=%d\n",PlayerInfo[playerid][pMembro]);fwrite(hFile, var);
                format(var, 64, "Ajustado=%d\n",PlayerInfo[playerid][pAjustado]);fwrite(hFile, var);
                format(var, 64, "MemberF=%d\n",PlayerInfo[playerid][pFamyMember]);fwrite(hFile, var);
                format(var, 64, "Rank=%d\n",PlayerInfo[playerid][pCargo]);fwrite(hFile, var);
                format(var, 64, "Char=%d\n",PlayerInfo[playerid][pSkin]);fwrite(hFile, var);
                format(var, 64, "MV=%d\n",PlayerInfo[playerid][pMV]);fwrite(hFile, var);
                format(var, 64, "Gold=%d\n",PlayerInfo[playerid][pGold]);fwrite(hFile, var);
                format(var, 64, "ContractTime=%d\n",PlayerInfo[playerid][pContractTime]);fwrite(hFile, var);
                format(var, 64, "DetSkill=%d\n",PlayerInfo[playerid][pDetSkill]);fwrite(hFile, var);
                format(var, 64, "SexSkill=%d\n",PlayerInfo[playerid][pSexSkill]);fwrite(hFile, var);
                format(var, 64, "BoxSkill=%d\n",PlayerInfo[playerid][pBoxSkill]);fwrite(hFile, var);
                format(var, 64, "LawSkill=%d\n",PlayerInfo[playerid][pLawSkill]);fwrite(hFile, var);
                format(var, 64, "MechSkill=%d\n",PlayerInfo[playerid][pMechSkill]);fwrite(hFile, var);
                format(var, 64, "NewsSkill=%d\n",PlayerInfo[playerid][pNewsSkill]);fwrite(hFile, var);
                format(var, 64, "DrogasSkill=%d\n",PlayerInfo[playerid][pDrogasSkill]);fwrite(hFile, var);
                format(var, 64, "CookSkill=%d\n",PlayerInfo[playerid][pCookSkill]);fwrite(hFile, var);
                format(var, 64, "FishSkill=%d\n",PlayerInfo[playerid][pFishSkill]);fwrite(hFile, var);
                format(var, 64, "pSHealth=%.1f\n",PlayerInfo[playerid][pSHealth]);fwrite(hFile, var);
                format(var, 64, "Team=%d\n",PlayerInfo[playerid][pTeam]);fwrite(hFile, var);
                format(var, 64, "PhoneNr=%d\n",PlayerInfo[playerid][pPnumber]);fwrite(hFile, var);
                format(var, 64, "House=%d\n",PlayerInfo[playerid][pPHousekey]);fwrite(hFile, var);
                format(var, 64, "Bizz=%d\n",PlayerInfo[playerid][pPbiskey]);fwrite(hFile, var);
                format(var, 64, "Spawn=%d\n",PlayerInfo[playerid][pSpawn]);fwrite(hFile, var);
                format(var, 64, "SafeMaconha=%d\n",PlayerInfo[playerid][pSafeDrogas]);fwrite(hFile, var);
                format(var, 64, "SafeCocaina=%d\n",PlayerInfo[playerid][pSafeDrogas2]);fwrite(hFile, var);
                format(var, 64, "SafeCrack=%d\n",PlayerInfo[playerid][pSafeDrogas3]);fwrite(hFile, var);
                format(var, 64, "NivelProcurado=%d\n",WantedPoints[playerid]);fwrite(hFile, var);
                format(var, 64, "SafeMateriais=%d\n",PlayerInfo[playerid][psMats]);fwrite(hFile, var);
                format(var, 64, "CarLic=%d\n",PlayerInfo[playerid][pCarLic]);fwrite(hFile, var);
                format(var, 64, "FlyLic=%d\n",PlayerInfo[playerid][pFlyLic]);fwrite(hFile, var);
                format(var, 64, "BoatLic=%d\n",PlayerInfo[playerid][pBoatLic]);fwrite(hFile, var);
                format(var, 64, "Ajustado=%d\n",PlayerInfo[playerid][pAjustado]);fwrite(hFile, var);
                format(var, 64, "FishLic=%d\n",PlayerInfo[playerid][pFishLic]);fwrite(hFile, var);
                format(var, 64, "GunLic=%d\n",PlayerInfo[playerid][pGunLic]);fwrite(hFile, var);
                format(var, 64, "PayDay=%d\n",PlayerInfo[playerid][pPayDay]);fwrite(hFile, var);
                format(var, 64, "CDPlayer=%d\n",PlayerInfo[playerid][pCDPlayer]);fwrite(hFile, var);
                format(var, 64, "Wins=%d\n",PlayerInfo[playerid][pWins]);fwrite(hFile, var);
                format(var, 64, "Loses=%d\n",PlayerInfo[playerid][pLoses]);fwrite(hFile, var);
                format(var, 64, "AlcoholPerk=%d\n",PlayerInfo[playerid][pAlcoholPerk]);fwrite(hFile, var);
                format(var, 64, "DrugPerk=%d\n",PlayerInfo[playerid][pDrugPerk]);fwrite(hFile, var);
                format(var, 64, "MiserPerk=%d\n",PlayerInfo[playerid][pMiserPerk]);fwrite(hFile, var);
                format(var, 64, "PainPerk=%d\n",PlayerInfo[playerid][pPainPerk]);fwrite(hFile, var);
                format(var, 64, "TraderPerk=%d\n",PlayerInfo[playerid][pTraderPerk]);fwrite(hFile, var);
                format(var, 64, "Tutorial=%d\n",PlayerInfo[playerid][pTut]);fwrite(hFile, var);
                format(var, 64, "Avisos=%d\n",PlayerInfo[playerid][pWarns]);fwrite(hFile, var);
                format(var, 64, "Married=%d\n",PlayerInfo[playerid][pMarried]);fwrite(hFile, var);
                format(var, 64, "Luta=%d\n",PlayerInfo[playerid][pLuta]);fwrite(hFile, var);
                format(var, 64, "Dorgado=%d\n",PlayerInfo[playerid][pDorgado]);fwrite(hFile, var);
                format(var, 64, "Dorgado2=%d\n",PlayerInfo[playerid][pDorgado]);fwrite(hFile, var);
                format(var, 64, "Doenca=%d\n",PlayerInfo[playerid][pDoenca]);fwrite(hFile, var);
                format(var, 64, "DiaLogin=%d\n",PlayerInfo[playerid][pLastDia]);fwrite(hFile, var);
                format(var, 64, "MesLogin=%d\n",PlayerInfo[playerid][pLastMes]);fwrite(hFile, var);
                format(var, 64, "AnoLogin=%d\n",PlayerInfo[playerid][pLastAno]);fwrite(hFile, var);
                format(var, 64, "HoraLogin=%d\n",PlayerInfo[playerid][pLastHora]);fwrite(hFile, var);
                format(var, 64, "MinutoLogin=%d\n",PlayerInfo[playerid][pLastMinuto]);fwrite(hFile, var);
                format(var, 64, "SegundoLogin=%d\n",PlayerInfo[playerid][pLastSegundo]);fwrite(hFile, var);
                format(var, 64, "Online=%d\n",PlayerInfo[playerid][pOnline]);fwrite(hFile, var);
                format(var, 64, "Votei=%d\n",PlayerInfo[playerid][pVotou]);fwrite(hFile, var);
                format(var, 64, "BlockTime=%d\n",PlayerInfo[playerid][pTimeBlock]);fwrite(hFile, var);
                format(var, 64, "Hospital=%d\n",PlayerInfo[playerid][pHosp]);fwrite(hFile, var);
                format(var, 64, "HospitalTime=%d\n",PlayerInfo[playerid][pHospTime]);fwrite(hFile, var);
                format(var, 64, "MarriedTo=%s\n",PlayerInfo[playerid][pMarriedTo]);fwrite(hFile, var);
                format(var, 64, "Work=%d\n",PlayerInfo[playerid][pWorkFree]);fwrite(hFile, var);
                format(var, 64, "BlockLider=%d\n",PlayerInfo[playerid][pLiderBlock]);fwrite(hFile, var);
                format(var, 64, "BlockNome=%d\n",PlayerInfo[playerid][pNomeBlock]);fwrite(hFile, var);
                fclose(hFile);
            }

            //dini_Set(file, "Key", PlayerInfo[playerid][Rufflesey]);
            //dini_Set(file, "MarriedTo", PlayerInfo[playerid][pMarriedTo]);
            if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
            {
                for(new i = 0; i < sizeof(SpikeInfo); i++)
                {
                    if(IsPlayerInRangeOfPoint(playerid, 3.0, SpikeInfo[i][sX], SpikeInfo[i][sY], SpikeInfo[i][sZ]))
                    {
                        if(SpikeInfo[i][sCreated] == 1)
                        {
                            new panels, doors, luzes, tires;
                            new carid = GetPlayerVehicleID(playerid);
                            GetVehicleDamageStatus(carid, panels, doors, luzes, tires);
                            tires = encode_tires(1, 1, 1, 1);
                            UpdateVehicleDamageStatus(carid, panels, doors, luzes, tires);
                        }
                    }
                }
            }
            if(PlayerInfo[playerid][pVip] != 0) SavePlayerVip(playerid);
    }
    return 1;
}
public OnPlayerUpdate(playerid)
{
    new drunk2 = GetPlayerDrunkLevel(playerid);
    if(drunk2 < 100)
    {
        SetPlayerDrunkLevel(playerid,2000);
    }
    else
    {
        if(DLlast[playerid] != drunk2)
        {
            new fps = DLlast[playerid] - drunk2;
            if((fps > 0) && (fps < 200))
            FPS2[playerid] = fps;
            DLlast[playerid] = drunk2;
        }
    }
    if(IsPlayerConnected(playerid) && gPlayerLogged[playerid])
    {
        //if(GetPlayerInterior(playerid) >= 1) SetPlayerArmedWeapon(playerid,0);
        if(AntCarSpam == 1)
        {
            new vehicleID = GetPlayerVehicleID(playerid);
            if(lastVehicle[playerid] != vehicleID)
            {
                lastVehicle[playerid] = vehicleID;
                if(GetVehicleModel(vehicleID))
                {
                    CallRemoteFunction("OnPlayerChangeVehicle","ii", playerid, vehicleID);
                }
            }
        }
    }
    return 1;
}
/*public OnPropUpdate()
{
    new idx;
    new File: file2;
    while (idx < sizeof(HouseInfo))
    {
        new coordsstring[256];
        format(coordsstring, sizeof(coordsstring), "%f,%f,%f,%f,%f,%f,%d,%d,%d,%d,%d,%d,%s,%s,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d\n",
        HouseInfo[idx][hEntrancex],
        HouseInfo[idx][hEntrancey],
        HouseInfo[idx][hEntrancez],
        HouseInfo[idx][hExitx],
        HouseInfo[idx][hExity],
        HouseInfo[idx][hExitz],
        HouseInfo[idx][hHealthx],
        HouseInfo[idx][hHealthy],
        HouseInfo[idx][hHealthz],
        HouseInfo[idx][hArmorrx],
        HouseInfo[idx][hArmorry],
        HouseInfo[idx][hArmorrz],
        HouseInfo[idx][hOwner],
        HouseInfo[idx][hDiscription],
        HouseInfo[idx][hValue],
        HouseInfo[idx][hHel],
        HouseInfo[idx][hArm],
        HouseInfo[idx][hInt],
        HouseInfo[idx][hLock],
        HouseInfo[idx][hOwned],
        HouseInfo[idx][hRooms],
        HouseInfo[idx][hRent],
        HouseInfo[idx][hRentabil],
        HouseInfo[idx][hTakings],
        HouseInfo[idx][hVec],
        HouseInfo[idx][hVcol1],
        HouseInfo[idx][hVcol2],
        HouseInfo[idx][hDate],
        HouseInfo[idx][hLevel],
        HouseInfo[idx][hWorld]);

        HouseInfo[idx][hWorld] = idx;
        if(idx == 0)
        {
            file2 = fopen("PlayGamer/property.cfg", io_write);
        }
        else
        {
            file2 = fopen("PlayGamer/property.cfg", io_append);
        }
        fwrite(file2, coordsstring);
        idx++;
        fclose(file2);
    }
    idx = 0;
    while (idx < sizeof(BizzInfo))
    {
        new coordsstring[256];
        format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%f|%f|%f|%f|%f|%f|%d|%d|%d|%d|%d|%d\n",
        BizzInfo[idx][bOwned],
        BizzInfo[idx][bOwner],
        BizzInfo[idx][bMessage],
        BizzInfo[idx][bExtortion],
        BizzInfo[idx][bEntranceX],
        BizzInfo[idx][bEntranceY],
        BizzInfo[idx][bEntranceZ],
        BizzInfo[idx][bExitX],
        BizzInfo[idx][bExitY],
        BizzInfo[idx][bExitZ],
        BizzInfo[idx][bLevelNeeded],
        BizzInfo[idx][bBuyPrice],
        BizzInfo[idx][bEntranceCost],
        BizzInfo[idx][bTill],
        BizzInfo[idx][bLocked],
        BizzInfo[idx][bInterior]);
        //BizzInfo[idx][VirtualWorld]);
        if(idx == 0)
        {
            file2 = fopen("PlayGamer/bizz.cfg", io_write);
        }
        else
        {
            file2 = fopen("PlayGamer/bizz.cfg", io_append);
        }
        fwrite(file2, coordsstring);
        idx++;
        fclose(file2);
    }
    idx = 0;
    while (idx < sizeof(SBizzInfo))
    {
        new coordsstring[256];
        format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%f|%f|%f|%d|%d|%d|%d|%d\n",
        SBizzInfo[idx][sbOwned],
        SBizzInfo[idx][sbOwner],
        SBizzInfo[idx][sbMessage],
        SBizzInfo[idx][sbExtortion],
        SBizzInfo[idx][sbEntranceX],
        SBizzInfo[idx][sbEntranceY],
        SBizzInfo[idx][sbEntranceZ],
        SBizzInfo[idx][sbLevel],
        SBizzInfo[idx][sbBuyPrice],
        SBizzInfo[idx][sbEntranceCost],
        SBizzInfo[idx][sbTill],
        SBizzInfo[idx][sbLocked]);
        if(idx == 0)
        {
            file2 = fopen("PlayGamer/sbizz.cfg", io_write);
        }
        else
        {
            file2 = fopen("PlayGamer/sbizz.cfg", io_append);
        }
        fwrite(file2, coordsstring);
        idx++;
        fclose(file2);
    }
 return 1;
}          */

public BroadCast(COLOR,const string[])
{
    SendClientMessageToAll(COLOR, string);
    return 1;
}

public ABroadCast(COLOR,const string[],level)
{
 for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if (PlayerInfo[i][pAdmin] >= level)
            {
                SendClientMessage(i, COLOR, string);
                printf("%s", string);
            }
        }
    }
    return 1;
}

public OOCNews(COLOR,const string[])
{
 for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            SendClientMessage(i, COLOR, string);
        }
    }
}

public SendEmpregoMessage(Emprego, COLOR, string[])
{
 for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(PlayerInfo[i][pEmprego] == Emprego)
            {
                SendClientMessage(i, COLOR, string);
            }
        }
    }
}

public SendFamilyMessage(family, COLOR, string[])
{
 for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(PlayerInfo[i][pMembro] == family || PlayerInfo[i][pLider] == family)
            {
                if(!gFam[i] && admtrampando[i] == 0)
                {
                    SendClientMessage(i, COLOR, string);
                }
            }
        }
    }
}
public ABroadCasth(COLOR,const string[],level)
{
 for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if (PlayerInfo[i][pHelper] >= level)
            {
                SendClientMessage(i, COLOR, string);
                printf("%s", string);
            }
        }
    }
    return 1;
}
public ABroadCastah(COLOR,const string[],level)
{
 for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if (PlayerInfo[i][pHelper] >= level || PlayerInfo[i][pAdmin] >= level)
            {
                SendClientMessage(i, COLOR, string);
                printf("%s", string);
            }
        }
    }
    return 1;
}
public FamyMsg(COLOR,const string[],level)
{
 for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if (PlayerInfo[i][pFamyLider] == level || PlayerInfo[i][pFamyMember] == level)
            {
                SendClientMessage(i, COLOR, string);
                printf("%s", string);
            }
        }
    }
    return 1;
}
public SoEuVejoMsm(COLOR,const string[])
{
    for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(ServerOwner[i] == 1)
            {
                SendClientMessage(i, COLOR, string);
                printf("%s", string);
            }
        }
    }
    return 1;
}

public PlayerPlayMusic(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        SetTimerEx("StopMusic", 7000,false,"i",playerid);
        PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
    }
}

public StopMusic(playerid)
{
        if(IsPlayerConnected(playerid))
        {
            PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
        }
}

public PlayerFixRadio(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        SetTimer("PlayerFixRadio2", 1000, 0);
        PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
        Fixr[playerid] = 1;
    }
}

public PlayerFixRadio2()
{
 for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(Fixr[i])
            {
                PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
                Fixr[i] = 0;
            }
        }
    }
}

//---------------------------<[ OnPlayerCommandText ]>--------------------------------------------------------
public OnPlayerCommandText(playerid, cmdtext[])
{
    new string[150];
    new cmd[200];
    new tmp[150];
    new playerdinheiro;
    new giveplayer[MAX_PLAYER_NAME];
    new playername[MAX_PLAYER_NAME];
    new plname[MAX_PLAYER_NAME];
    new giveplayerid, moneys, idx;
    cmd = strtok(cmdtext, idx);
    if( PlayerInfo[ playerid ][ pTimeBlock ] > gettime() ){
        new time, str[ 128 ];
        time = ( PlayerInfo[ playerid ][ pTimeBlock ] - gettime() )/60;
        format( str, sizeof str, "{EE0000}Sua conta esta bloqueado por %d minutos.", time );
        SendClientMessage( playerid, -1, str );
        return true;
    }
    if(fexist("Logs/Comandos.log")){//Yiakin FEZ!!
        new data[20],hora[20],h,m,s,dia,mes,ano, str[ 150 ];

        getdate(ano,mes,dia);
        format(data,sizeof data,"%02d/%02d/%04d",dia,mes,ano);
        gettime(h,m,s);
        format(hora,sizeof hora,"%02d:%02d:%02d",h,m,s);
        format(str,sizeof str,"** [%s][%s] %s digitou o comando: %s **\r\n",data,hora,PlayerName(playerid),cmd );
        new File:file = fopen("Logs/Comandos.log",io_append);
        fwrite(file, str);
        fclose(file);
    }
    //-------------------------------[Login]--------------------------------------------------------------------------
    if (strcmp(cmd, "/logar", true) ==0 )
    {
        if(IsPlayerConnected(playerid) && !IsPlayerNPC(playerid))
        {
            if(gPlayerLogged[playerid] == 1)
            {
                SendClientMessage(playerid, COLOR_GREEN, " Você está conectado!");
                return 1;
            }
            format(loginstring,sizeof(loginstring),"  {FFFFFF}Seja bem-vindo ao {1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer v1.0\n{FFFFFF}            bpg-rapidosemortais.forumeiros.com\n\n{FFFFFF}                   Conta: {31611b}Registrada!\n{FFFFFF}                   Nick:{2657a9} %s\n\n{FFFFFF}                     Digite sua senha.\n{a09f2c}    ATENÇÃO! LIMITE DE TENTATIVAS [6]",loginname);
            ShowPlayerDialog(playerid, 1, DIALOG_STYLE_INPUT,"            {1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer v1.0",loginstring,"Entrar","Sair");
            TogglePlayerControllable(playerid, 0);
            LogandoPlayer[playerid] = 1;
        }
        return 1;
    }
    if(strcmp(cmd, "/tp", true) == 0)
    {
        ShowPlayerDialog( playerid, 5566, DIALOG_STYLE_LIST, "{FFFFFF}Lista de Punições", "{FFFFFF}Players\nAnúncioes e Relatórios\nInvasões\nModificações e Cheaters", "Continuar", "Sair" );
        return true;
    }
    if (strcmp(cmd, "/registrar", true) ==0 )
    {
        if(IsPlayerConnected(playerid))
        {
            if(gPlayerLogged[playerid] == 1)
            {
                SendClientMessage(playerid, COLOR_GREEN, " Você está conectado!");
                return 1;
            }
            format(loginstring,sizeof(loginstring),"  {FFFFFF}Seja bem-vindo ao {1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer v1.0\n{FFFFFF}            bpg-rapidosemortais.forumeiros.com\n\n{FFFFFF}                 Conta: {c31616}Não registrada!\n{FFFFFF}                 Nick:{2657a9} %s\n\n{FFFFFF}                   Escolha sua senha.\n{a09f2c}    *LEMBRE-SE DE ANOTAR SUA SENHA!*",loginname);
            ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT,"            {1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer v1.0",loginstring,"Registrar","Cancelar");
            TogglePlayerControllable(playerid, 0);

        }
        return 1;
    }
    if(gPlayerLogged[playerid] == 0 && LogandoPlayer[playerid] == 0) { return SendClientMessage(playerid, 0xFF8080FF, "[ERRO] VOCÊ PRECISA ESTAR CONECTADO PARA USAR COMANDOS!"); }
    if((strcmp(cmd, "/atualizar3dtext", true)==0 || strcmp(cmd, "/a3d", true) ==0) && PlayerInfo[playerid][pAdmin] == 3000)
    {
        a3d();
        return 1;
    }
    if((strcmp(cmd, "/deletarconta", true)==0 || strcmp(cmd, "/dc", true) ==0) && PlayerInfo[playerid][pAdmin] == 3000)
    {
        new file[64];
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))  return SendClientMessage(playerid, COLOR_GRAD2, "USE: /deletarconta [Nick]");
        if (PlayerInfo[playerid][pAdmin] != 3000)
        {
            SendClientMessage(playerid, COLOR_GREY,"Você não tem permissão para usar esse comando!");
            return 1;
        }
        format(file,sizeof(file),OpenAccPlayer,tmp);
        format(string, 128, "%s.bak", file);
        //DINI_fcopytextfile(file, string);
        fremove(file);
        return 1;
    }

    if(strcmp(cmd, "/vercontrato", true)==0 ||strcmp(cmd, "/vercont", true)==0 )// yiakin FEZ!!
    {
        if( PlayerInfo[ playerid ][ pAdmin ] < 1 ) return SendClientMessage( playerid, COLOR_GRAD2, "Sem autorização! " );
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))  return SendClientMessage( playerid, COLOR_GRAD2, "USE: /vercontrato [ playerid ] " );
        new id = ReturnUser( tmp );
        if( IsPlayerConnected( id ) ){
            if( GetPlayerOrg( id ) == 8 || GetPlayerOrg( id ) == 24 ){
                if( GoChase[ id ] ^ 999 ){
                    new
                        str[ 128 ]
                    ;
                    format( str, sizeof str, "{FFE4E1}Assassino: %s( %d ) | Alvo: %s ( %d )", PlayerName( id ), id, PlayerName( GoChase[ id ] ), GoChase[ id ]  );
                    SendClientMessage( playerid, -1, str );
                }
                else
                    SendClientMessage( playerid, COLOR_GRAD2, "Este player não possui um contrato ativo!" );
            }
            else
                SendClientMessage( playerid, COLOR_GRAD2, "Este player não é um hitman." );
        }
        else
            SendClientMessage( playerid, COLOR_GRAD2, "Este player não esta conectado." );
        return true;
    }
    if(strcmp(cmd, "/trabalharinfo", true)==0 ||strcmp(cmd, "/trabinfo", true)==0 )// yiakin FEZ!!
    {
        new
            linha[ 80 ],
            str[ 700 ],
            status[ 30 ]
        ;
        if( PlayerInfo[ playerid ][ pAdmin ] < 1339 ) return SendClientMessage( playerid, COLOR_GRAD2, "Sem autorização! " );
        for( new i; i < MAX_PLAYERS; i++ ){
            if( IsPlayerConnected( i ) ){
                if( PlayerInfo[ i ][ pAdmin ] > 0 && PlayerInfo[ i ][ pAdmin ] < 3000 ){
                    if( PlayerInfo[ i ][ pWorkFree ] == 0 )
                        status = "{EE0000}Bloqueado";
                    else
                        status = "{00EE00}Desbloqueado";
                    format( linha, sizeof(linha), "{FFFFFF}- %s: comando: %s\n", PlayerName( i ), status );
                    strcat( str, linha );
                }
            }
        }
        ShowPlayerDialog( playerid, 156, DIALOG_STYLE_MSGBOX, "{FFFFFF}Info Trabalhar", str, "Sair", "" );
        return true;
    }
    if(strcmp(cmd, "/trabalharid", true)==0 ||strcmp(cmd, "/trabid", true)==0 )// yiakin FEZ!!
    {
        if( PlayerInfo[ playerid ][ pAdmin ] < 1339 ) return SendClientMessage( playerid, COLOR_GRAD2, "Sem autorização! " );
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))  return SendClientMessage( playerid, COLOR_GRAD2, "USE: /trabalharid [ playerid ] " );
        new id = ReturnUser( tmp );
        if( IsPlayerConnected( id ) ){
            if( PlayerInfo[ id ][ pWorkFree ] == 0 ){
                PlayerInfo[ id ][ pWorkFree ] = 1;
                new
                    str[ 128 ]
                ;
                format( str, sizeof str, "O admin %s {00EE00}liberou {FFFFFF}você a usar o comando trabalhar.", PlayerName( playerid ) );
                SendClientMessage( id, -1, str );
                format( str, sizeof str, "Você {00EE00}liberou {FFFFFF}o admin %s a usar o comando trabalhar.", PlayerName( id ) );
                SendClientMessage( playerid, -1, str );
            }
            else{
                PlayerInfo[ id ][ pWorkFree ] = 0;
                new
                    str[ 128 ]
                ;
                format( str, sizeof str, "O admin %s {EE0000}bloqueou {FFFFFF}você a usar o comando trabalhar.", PlayerName( playerid ) );
                SendClientMessage( id, -1, str );
                format( str, sizeof str, "Você {EE0000}bloqueou {FFFFFF}o admin %s a usar o comando trabalhar.", PlayerName( id ) );
                SendClientMessage( playerid, -1, str );
            }
        }
        else
            SendClientMessage( playerid, COLOR_GRAD2, "Player não esta conectado." );
        return true;
    }
    if(strcmp(cmd, "/iro", true)==0)
    {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_GRAD2, "USE: /irobjeto [ id ]");
            return 1;
        }
        if(PlayerInfo[playerid][pAdmin] < 3000)
        {
            SendClientMessage(playerid, COLOR_GRAD2, "Não Autorizado!");
            return 1;
        }
        new obid;
        obid = strval(tmp);
        new Float:oX, Float:oY, Float:oZ;
        GetDynamicObjectPos(obid, oX, oY, oZ);
        SetPlayerPos(playerid, oX, oY, oZ+5);
        SendClientMessage(playerid, COLOR_GRAD2, "Você foi até o objeto");
        return 1;
    }
    /*if(strcmp(cmd, "/irr", true)==0)
    {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_GRAD2, "USE: /irr [ id da remoção ]");
            return 1;
        }
        if(PlayerInfo[playerid][pAdmin] < 3000)
        {
            SendClientMessage(playerid, COLOR_GRAD2, "Não Autorizado!");
            return 1;
        }
        new orid;
        orid = strval(tmp);
        new Float:oX, Float:oY, Float:oZ;
        GetPosRemoveObj(orid, oX, oY, oZ);
        SetPlayerPos(playerid, oX, oY, oZ);
        SendClientMessage(playerid, COLOR_GRAD2, "Você foi até o objeto removido");
        return 1;
    }*/
    if(strcmp(cmd,"/mudarnick",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(MudarNickAceito[playerid] == 0)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você precisa pedir permissão para um admin mudar seu nick, use /relatorio");
                return 1;
            }
            new x_Nick[64],strstr[100];
            x_Nick = strtok(cmdtext, idx);
            if(!strlen(x_Nick))
            {
                format(strvinny,sizeof(strvinny),"{33FF99}O Admin Autorizou a mudança de Nick!\n{FF0000}Agora digite seu nick.\n{FFA8FF}O Nick deverá Seguir o Padão RPG Abaixo.\n{33FF99}Ex:{80FFFF} Nome_SobreNome");
                ShowPlayerDialog(playerid, 1234, DIALOG_STYLE_INPUT,"Mudar Nick",strvinny,"Confirmar","");
                //SendClientMessage(playerid, COLOR_WHITE, "USE: /mudarnick [nome]");
                return 1;
            }
            if(strfind(x_Nick, "_", true) == -1 || strfind(x_Nick, "[", true) != -1 || strfind(x_Nick, "]", true) != -1 || strfind(x_Nick, "lixo", true) != -1 || strfind(x_Nick, "buceta", true) != -1 || strfind(x_Nick, "caralho", true) != -1 || strfind(x_Nick, "[", true) != -1 || strfind(x_Nick, "server", true) != -1
            || strfind(x_Nick, "servidor", true) != -1 || strfind(x_Nick, "crash", true) != -1 || strfind(x_Nick, "bpl", true) != -1 || strfind(x_Nick, "'", true) != -1 || strfind(x_Nick, "[", true) != -1 || strfind(x_Nick, "189", true) != -1 || strfind(x_Nick, "201", true) != -1 || strfind(x_Nick, "200", true) != -1 || strfind(x_Nick, ".", true) != -1
            || strfind(x_Nick, "*", true) != -1 || strfind(x_Nick, "(", true) != -1|| strfind(x_Nick, "/", true) != -1 || strfind(x_Nick, ")", true) != -1 || strfind(x_Nick, "@", true) != -1 || strfind(x_Nick, "amx", true) != -1 || strfind(x_Nick, "prn", true) != -1 || strfind(x_Nick, "__", true) != -1)
            {
                format(strvinny,sizeof(strvinny),"{33FF99}O Admin Autorizou a mudança de Nick!\n{FF0000}Agora digite seu nick.\n{FFA8FF}O Nick deverá Seguir o Padrão RPG Abaixo.\n{33FF99}Ex:{80FFFF} Nome_Sobrenome");
                ShowPlayerDialog(playerid, 1234, DIALOG_STYLE_INPUT,"Mudar Nick",strvinny,"Confirmar","");
                SendClientMessage(playerid, COLOR_WHITE, "ERRO: Não adicione Símbolos (Ex: ,.'[]{}/?><,)(*-+&$%!@#¬= )");
                SendClientMessage(playerid, COLOR_WHITE, "ERRO: O Nick Deverá Seguir o Padrão RPG (Ex: Nome_Sobrenome) e não Conter Palavrões!");
             return 1;
            }
            format(string, sizeof(string), OpenAccPlayer, x_Nick);
            if(dini_Exists(string))
            {
                SendClientMessage(playerid, COLOR_GREY,"Este nick ja está sendo usado!");
                return 1;
            }
            if(mudandonick[playerid] == 1)
            {
                SendClientMessage(playerid, COLOR_GREY,"Espere terminar de mudar seu nick!");
                return 1;
            }
            if(ConviteFamy[playerid] != 0)
            {
                if(ConviteFamy[playerid] == 1)
                {
                    if(strfind(x_Nick, "Snake", true) != -1) { }
                    else
                    {
                        SendClientMessage(playerid, 0xFF8080AA,"[BPG]{FFDFFF} Seu nick não pode ser trocado, pois escolheu um nome diferente de sua família!");
                        SendClientMessage(playerid, 0xFF8080AA,"[BPG]{FFDFFF} Seu convite foi Cancelado, se quiser entrar Novamente, Fale com o Líder.");
                        mudandonick[playerid] = 0;
                        MudarNickAceito[playerid] = 0;
                        PlayerInfo[playerid][pFamyMember] = 0;
                        PlayerInfo[playerid][pFamyLider] = 0;
                        ConviteFamy[playerid] = 0;
                        return 1;
                     }
                }
                if(ConviteFamy[playerid] == 2)
                {
                    if(strfind(x_Nick, "Snake", true) != -1) { }
                    else
                    {
                        SendClientMessage(playerid, 0xFF8080AA,"[BPG]{FFDFFF} Seu nick não pode ser trocado, pois escolheu um nome diferente de sua família!");
                        SendClientMessage(playerid, 0xFF8080AA,"[BPG]{FFDFFF} Seu convite foi Cancelado, se quiser entrar Novamente, Fale com o Líder.");
                        mudandonick[playerid] = 0;
                        MudarNickAceito[playerid] = 0;
                        PlayerInfo[playerid][pFamyMember] = 0;
                        PlayerInfo[playerid][pFamyLider] = 0;
                        ConviteFamy[playerid] = 0;
                        return 1;
                     }
                }
                if(ConviteFamy[playerid] == 3)
                {
                    if(strfind(x_Nick, "HunTerS", true) != -1) { }
                    else
                    {
                        SendClientMessage(playerid, 0xFF8080AA,"[BPG]{FFDFFF} Seu nick não pode ser trocado, pois escolheu um nome diferente de sua família!");
                        SendClientMessage(playerid, 0xFF8080AA,"[BPG]{FFDFFF} Seu convite foi Cancelado, se quiser entrar Novamente, Fale com o Líder.");
                        mudandonick[playerid] = 0;
                        MudarNickAceito[playerid] = 0;
                        PlayerInfo[playerid][pFamyMember] = 0;
                        PlayerInfo[playerid][pFamyLider] = 0;
                        ConviteFamy[playerid] = 0;
                        return 1;
                     }
                }
                if(ConviteFamy[playerid] == 4)
                {
                    if(strfind(x_Nick, "DaLesTe", true) != -1) { }
                    else
                    {
                        SendClientMessage(playerid, 0xFF8080AA,"[BPG]{FFDFFF} Seu nick não pode ser trocado, pois escolheu um nome diferente de sua família!");
                        SendClientMessage(playerid, 0xFF8080AA,"[BPG]{FFDFFF} Seu convite foi Cancelado, se quiser entrar Novamente, Fale com o Líder.");
                        mudandonick[playerid] = 0;
                        MudarNickAceito[playerid] = 0;
                        PlayerInfo[playerid][pFamyMember] = 0;
                        PlayerInfo[playerid][pFamyLider] = 0;
                        ConviteFamy[playerid] = 0;
                        return 1;
                     }
                }
                if(ConviteFamy[playerid] == 5)
                {
                    if(strfind(x_Nick, "Foasdasdrtes", true) != -1) { }
                    else
                    {
                        SendClientMessage(playerid, 0xFF8080AA,"[BPG]{FFDFFF} Seu nick não pode ser trocado, pois escolheu um nome diferente de sua família!");
                        SendClientMessage(playerid, 0xFF8080AA,"[BPG]{FFDFFF} Seu convite foi Cancelado, se quiser entrar Novamente, Fale com o Líder.");
                        mudandonick[playerid] = 0;
                        MudarNickAceito[playerid] = 0;
                        PlayerInfo[playerid][pFamyMember] = 0;
                        PlayerInfo[playerid][pFamyLider] = 0;
                        ConviteFamy[playerid] = 0;
                        return 1;
                     }
                }
                if(ConviteFamy[playerid] == 6)
                {
                    if(strfind(x_Nick, "asdas", true) != -1) { }
                    else
                    {
                        SendClientMessage(playerid, 0xFF8080AA,"[BPG]{FFDFFF} Seu nick não pode ser trocado, pois escolheu um nome diferente de sua família!");
                        SendClientMessage(playerid, 0xFF8080AA,"[BPG]{FFDFFF} Seu convite foi Cancelado, se quiser entrar Novamente, Fale com o Líder.");
                        mudandonick[playerid] = 0;
                        MudarNickAceito[playerid] = 0;
                        PlayerInfo[playerid][pFamyMember] = 0;
                        PlayerInfo[playerid][pFamyLider] = 0;
                        ConviteFamy[playerid] = 0;
                        return 1;
                     }
                }
            }
            mudandonick[playerid] = 1;
            GetPlayerName(playerid,playername,sizeof(playername));
            format(string, sizeof(string), OpenAccPlayer, playername);
            format(strstr, sizeof(strstr), OpenAccPlayer, x_Nick);
            frename(string, strstr);
            for(new i = 0; i < sizeof(Carro); i++)
            {
                if(strcmp(playername,Carro[i][Dono],true)==0)
                {
                    strmid(Carro[i][Dono], x_Nick, 0, strlen(x_Nick), 255);
                }
            }
            for(new i = 0; i < sizeof(BizzInfo); i++)
            {
                if(strcmp(playername,BizzInfo[i][bOwner],true)==0)
                {
                    strmid(BizzInfo[i][bOwner], x_Nick, 0, strlen(x_Nick), 255);
                }
            }
            for(new i = 0; i < sizeof(SBizzInfo); i++)
            {
                if(strcmp(playername,SBizzInfo[i][sbOwner],true)==0)
                {
                    strmid(SBizzInfo[i][sbOwner], x_Nick, 0, strlen(x_Nick), 255);
                }
            }
            for(new h = 0; h < sizeof(HouseInfo); h++)
            {
                if(strcmp(playername,HouseInfo[h][hOwner],true)==0)
                {
                    strmid(HouseInfo[h][hOwner], x_Nick, 0, strlen(x_Nick), 255);
                }
            }
            for(new i = 0; i < sizeof(AdmInfo); i++)
            {
                if(strcmp(playername,AdmInfo[i][gMembro],true)==0)
                {
                    strmid(AdmInfo[i][gMembro], x_Nick, 0, strlen(x_Nick), 255);
                }
            }
            for(new i = 0; i < sizeof(VipInfo); i++)
            {
                if(strcmp(PlayerName(playerid),VipInfo[i][vNick],true)==0)
                {
                    strmid(VipInfo[i][vNick], x_Nick, 0, strlen(x_Nick), 255);
                }
            }
            for(new i = 0; i < sizeof(HelpInfo); i++)
            {
                if(strcmp(playername,HelpInfo[i][gMembro],true)==0)
                {
                    strmid(HelpInfo[i][gMembro], x_Nick, 0, strlen(x_Nick), 255);
                }
            }
            for(new i = 0; i < sizeof(FazendaInfo); i++)
            {
                if(strcmp(playername,FazendaInfo[i][fDono],true)==0)
                {
                    strmid(FazendaInfo[i][fDono], x_Nick, 0, strlen(x_Nick), 255);
                }
            }
            if(GetPlayerOrg(playerid) != 0)
            {
                new arquivo[64];
                format(arquivo, sizeof(arquivo), "InfoOrg/Org%d.cfg",GetPlayerOrg(playerid));
                for(new i = 1; i < sizeof(InfoOrg); i++)
                {
                    if(PlayerInfo[playerid][pMembro] > 0 || PlayerInfo[playerid][pLider] > 0)
                    {
                        if(strcmp(playername,InfoOrg[i][Lider],true)==0)
                        {
                            strmid(InfoOrg[i][Lider], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Lider",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][SubLider],true)==0)
                        {
                            strmid(InfoOrg[i][SubLider], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"SubLider",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro1],true)==0)
                        {
                            strmid(InfoOrg[i][Membro1], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro1",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro2],true)==0)
                        {
                            strmid(InfoOrg[i][Membro2], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro2",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro3],true)==0)
                        {
                            strmid(InfoOrg[i][Membro3], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro3",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro4],true)==0)
                        {
                            strmid(InfoOrg[i][Membro4], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro4",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro5],true)==0)
                        {
                            strmid(InfoOrg[i][Membro5], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro5",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro6],true)==0)
                        {
                            strmid(InfoOrg[i][Membro6], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro6",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro7],true)==0)
                        {
                            strmid(InfoOrg[i][Membro7], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro7",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro8],true)==0)
                        {
                            strmid(InfoOrg[i][Membro8], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro8",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro9],true)==0)
                        {
                            strmid(InfoOrg[i][Membro9], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro9",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro10],true)==0)
                        {
                            strmid(InfoOrg[i][Membro10], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro10",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro11],true)==0)
                        {
                            strmid(InfoOrg[i][Membro11], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro11",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro12],true)==0)
                        {
                            strmid(InfoOrg[i][Membro12], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro12",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro13],true)==0)
                        {
                            strmid(InfoOrg[i][Membro13], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro13",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro14],true)==0)
                        {
                            strmid(InfoOrg[i][Membro14], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro14",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro15],true)==0)
                        {
                            strmid(InfoOrg[i][Membro15], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro15",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro16],true)==0)
                        {
                            strmid(InfoOrg[i][Membro16], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro16",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro17],true)==0)
                        {
                            strmid(InfoOrg[i][Membro17], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro17",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro18],true)==0)
                        {
                            strmid(InfoOrg[i][Membro18], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro18",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro19],true)==0)
                        {
                            strmid(InfoOrg[i][Membro19], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro19",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro20],true)==0)
                        {
                            strmid(InfoOrg[i][Membro20], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro20",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro21],true)==0)
                        {
                            strmid(InfoOrg[i][Membro21], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro21",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro22],true)==0)
                        {
                            strmid(InfoOrg[i][Membro22], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro22",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro23],true)==0)
                        {
                            strmid(InfoOrg[i][Membro23], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro23",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro24],true)==0)
                        {
                            strmid(InfoOrg[i][Membro24], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro24",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro25],true)==0)
                        {
                            strmid(InfoOrg[i][Membro25], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro25",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro26],true)==0)
                        {
                            strmid(InfoOrg[i][Membro26], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro26",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro27],true)==0)
                        {
                            strmid(InfoOrg[i][Membro27], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro27",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro28],true)==0)
                        {
                            strmid(InfoOrg[i][Membro28], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro28",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro29],true)==0)
                        {
                            strmid(InfoOrg[i][Membro29], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro29",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro30],true)==0)
                        {
                            strmid(InfoOrg[i][Membro30], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro30",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro31],true)==0)
                        {
                            strmid(InfoOrg[i][Membro31], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro31",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro32],true)==0)
                        {
                            strmid(InfoOrg[i][Membro32], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro32",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro33],true)==0)
                        {
                            strmid(InfoOrg[i][Membro33], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro33",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro34],true)==0)
                        {
                            strmid(InfoOrg[i][Membro34], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro34",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro35],true)==0)
                        {
                            strmid(InfoOrg[i][Membro35], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro35",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro36],true)==0)
                        {
                            strmid(InfoOrg[i][Membro36], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro36",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro37],true)==0)
                        {
                            strmid(InfoOrg[i][Membro37], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro37",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro38],true)==0)
                        {
                            strmid(InfoOrg[i][Membro38], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro38",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro39],true)==0)
                        {
                            strmid(InfoOrg[i][Membro39], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro39",x_Nick);
                        }
                        if(strcmp(playername,InfoOrg[i][Membro40],true)==0)
                        {
                            strmid(InfoOrg[i][Membro40], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                            dini_Set(arquivo,"Membro40",x_Nick);
                        }
                    }
                }
            }
            getdate(year, month, day);
            gettime(hour,minute);
            format(string, sizeof(string), "%s Mudou o Nick para %s ( %d/%d/%d - %d:%d)",playername,x_Nick, day, month, year,hour, minute);
            NicksLog(string);
            ABroadCast(COLOR_YELLOW,string,1);
            SetPlayerName(playerid,x_Nick);
            format(string, sizeof(string), "Você mudou seu nick para %s",x_Nick );
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Tire uma SS apertando F8 para não esquecer seu novo nick!");
            SendClientMessage(playerid, 0xFF00FFAA,"Tire uma SS apertando F8 para não esquecer seu novo nick!");
            SendClientMessage(playerid, 0xFF0000AA,"Tire uma SS apertando F8 para não esquecer seu novo nick!");
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            MudarNickAceito[playerid] = 0;
            SalvarTudo();
            ConviteFamy[playerid] = 0;
            mudandonick[playerid] = 0;
            SalvarPlayer(playerid);
            return 1;
        }
        return 1;
    }
    if( strcmp(cmd, "/pegaratividade", true) == 0 )
    {
        new file[64];
        new str1[ 500 ];
        new linha[ 120 ];
        new campo[ 2 ][ 30 ];
        tmp = strtok( cmdtext, idx );
        if( PlayerInfo[ playerid ][ pAdmin ] < 1337 ) return SendClientMessage( playerid, COLOR_GRAD2, "Sem autorização." );
        if( !strlen( tmp ) ) return SendClientMessage( playerid, COLOR_GRAD2, "USE:/pegaratividade [ Nome ]" );
        format( file, sizeof file, "PlayGamer/Atividade/%s.ini", tmp );
        if( DOF2_FileExists( file ) )
        {
            format( linha, sizeof linha, "\t{FFFFFF}Dados administrador {7FFF00}%s\n\n", tmp );
            strcat( str1, linha );
            format( file, sizeof file, "Players/%s.ini", tmp );
            format( linha, sizeof linha, "{FFFFFF}Administrador Level: {7FFF00}%d\n\n", DOF2_GetInt( file, "AdminLevel" ) );
            strcat( str1,  linha );
            format( file, sizeof file, "PlayGamer/Atividade/%s.ini",tmp );
            for( new i; i < 3; i ++ )
            {
                format( campo[ 0 ], 30, "Data%d", i );
                format( campo[ 1 ], 30, "Tempo%d", i );
                if( strcmp( DOF2_GetString( file, campo[ 0 ] ), "0" ) )
                {
                    format( linha, sizeof linha, "{FFFFFF}- Data: {7FFF00}%s  {FFFFFF}ficou logado por {7FFF00}%d {FFFFFF}minuto(s)\n", DOF2_GetString( file, campo[ 0 ] ), ( DOF2_GetInt( file, campo[ 1 ] ) / 60 )  );
                    strcat( str1, linha );
                }
            }
            ShowPlayerDialog( playerid, 156, DIALOG_STYLE_MSGBOX, "{FFFFFF}Atividade", str1, "sair", "" );
            return true;
        }
        else return SendClientMessage( playerid, COLOR_GRAD2, "Nome não encontrado." );
    }
    if(strcmp(cmd,"/amudarnick",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /amudarnick [ id ]");
                return 1;
            }
            new playa;
            playa = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 2)
            {
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        if( PlayerInfo[ playa ][ pNomeBlock ] > gettime() )
                            return SendClientMessage( playerid, -1, "Este player nao pode mudar de nick." );
                        MudarNickAceito[playa] = 1;
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "ADMIN CMD: %s autorizou %s a mudar o nick !",sendername,giveplayer);
                        ABroadCast(COLOR_LIGHTRED,string,1);
                        format(strvinny,sizeof(strvinny),"{33FF99}O Admin %s Autorizou a mudança de Nick!\nAgora digite seu nick abaixo.\n{FFA8FF}O Nick deverá Seguir o Padão RPG Abaixo.\n{33FF99}Ex:{80FFFF} Nome_SobreNome",sendername);
                        ShowPlayerDialog(playa, 1234, DIALOG_STYLE_INPUT,"Mudança de Nick",strvinny,"Confirmar","");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não está autorizado a usar este comando!");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd,"/amudarsenha",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /amudarsenha [ id ]");
                return 1;
            }
            new playa;
            playa = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 3000)
            {
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        MudarSenhaAceito[playa] = 1;
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "Admin %s: Autorizou você a mudar a senha, digite /mudarsenha [ senha ].", sendername);
                        SendClientMessage(playa, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "ADMIN CMD: %s autorizou %s a mudar a Senha !",sendername,giveplayer);
                        ABroadCast(COLOR_LIGHTRED,string,1);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não está autorizado a usar este comando!");
                return 1;
            }
        }
        return 1;
    }
    if(!strcmp(cmdtext, "/mercadorials", true))
    {
        if(PlayerInfo[playerid][pEmprego] != 11)
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não é um caminhoneiro");
            return 1;
        }
        if(var1[playerid] != 0)
        {
            SendClientMessage(playerid, COLOR_GREY, "Você deve esperar 5 minutos pra entregar mais mercadorias");
            return 1;
        }
        if(TruckMission[playerid] != 0)
        {
            SendClientMessage(playerid, COLOR_GREY, "Você deve entregar a mercadoria primeiro");
            return 1;
        }
        if(!PlayerToPoint(60.0 ,playerid, -71.5407,-1123.4725,1.6677))
        {
            SendClientMessage(playerid, COLOR_GREY, "Você precisa estar na HQ pra pegar mercadoria");
            return 1;
        }
        SetPlayerCheckpoint(playerid, 1756.1359,-2064.8230,13.2708, 8.0);
        TruckMission[playerid] = 1;
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Entregue a mercadoria no checkpoint marcado no mapa.");
        return 1;
    }
    if(!strcmp(cmdtext, "/mercadorialv", true))
    {
        if(PlayerInfo[playerid][pEmprego] != 11)
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não é um caminhoneiro");
            return 1;
        }
        if(var1[playerid] != 0)
        {
            SendClientMessage(playerid, COLOR_GREY, "Você deve esperar o tempo de recarga pra entregar mais mercadorias");
            return 1;
        }
        if(TruckMission[playerid] != 0)
        {
            SendClientMessage(playerid, COLOR_GREY, "Você deve entregar a mercadoria primeiro");
            return 1;
        }
        if(!PlayerToPoint(60.0 ,playerid, -71.5407,-1123.4725,1.6677))
        {
            SendClientMessage(playerid, COLOR_GREY, "Você precisa estar na HQ pra pegar mercadoria");
            return 1;
        }
        SetPlayerCheckpoint(playerid, 2054.3250,1919.5562,11.8507, 8.0);
        TruckMission[playerid] = 3;
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Entregue a mercadoria no checkpoint marcado no mapa.");
        return 1;
    }
    if(!strcmp(cmdtext, "/mercadoriasf", true))
    {
        if(PlayerInfo[playerid][pEmprego] != 11)
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não é um caminhoneiro");
            return 1;
        }
        if(var1[playerid] != 0)
        {
            SendClientMessage(playerid, COLOR_GREY, "Você deve esperar o tempo de recarga pra entregar mais mercadorias");
            return 1;
        }
        if(TruckMission[playerid] != 0)
        {
            SendClientMessage(playerid, COLOR_GREY, "Você deve entregar a mercadoria primeiro");
            return 1;
        }
        if(!PlayerToPoint(60.0 ,playerid, -71.5407,-1123.4725,1.6677))
        {
            SendClientMessage(playerid, COLOR_GREY, "Você precisa estar na HQ pra pegar mercadoria");
            return 1;
        }
        SetPlayerCheckpoint(playerid, -1729.3041,-123.8946,3.2335, 8.0);
        TruckMission[playerid] = 2;
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Entregue a mercadoria no checkpoint marcado no mapa.");
        return 1;
    }
    if(!strcmp(cmdtext, "/votacao", true, 8))
    {
        if(PlayerInfo[playerid][pAdmin] >= 3)
        {
            if(!votacao[iniciada])
            {
                if(!cmdtext[9])
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "Use: /votacao [pergunta]");
                    return 1;
                }
                format(string, sizeof string, "[BPG]{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer {C78FFF}Votação:{FFFFFF} %s ?", cmdtext[9]);
                SendClientMessageToAll(CORS, string);
                SendClientMessageToAll(0xFFF000AA, "{FFA1A1}[BPG] {FFB973}Se você concorda digite: {70EEFF}/sim");
                SendClientMessageToAll(0xFFF000AA, "{FFA1A1}[BPG] {FFB973}Se você discorda digite: {70EEFF}/nao");
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "~g~~h~~h~]]~b~~h~ Play~r~~h~Gamer ~y~Votacao Iniciada~g~~h~~h~]]");
                GameTextForAll(string, 5000, 3);
                votacao[iniciada] = true;
                votacao[sim] = 0;
                votacao[nao] = 0;
                for(new i; i < MaiorID; i++)
                {   votou[i] = false; }
            } else {
                SendClientMessage(playerid, COLOR_GREY,"Já existe uma votação em andamento!");
            }
        } else {
            SendClientMessage(playerid, COLOR_GREY,"Você não tem permissão para usar este comando!");
        }
        return 1;
    }
    if(!strcmp(cmdtext, "/sim", true))
    {
        if(votacao[iniciada] && !votou[playerid])
        {
            SendClientMessage(playerid, CORS, "Seu voto foi computado com sucesso!");
            votacao[sim]++;
            votou[playerid] = true;
            return 1;
        }
        return 0;
    }
    if(!strcmp(cmdtext, "/nao", true))
    {
        if(votacao[iniciada] && !votou[playerid])
        {
            SendClientMessage(playerid, CORS, "Seu voto foi computado com sucesso!");
            votacao[nao]++;
            votou[playerid] = true;
            return 1;
        }
        return 0;
    }
    if(!strcmp(cmdtext, "/encerrar", true))
    {
        if(PlayerInfo[playerid][pAdmin] >= 3)
        {
            if(votacao[iniciada])
            {
                SendClientMessageToAll(0xFF0000AA, "[BPG] {FF0000}Votação encerrada.");
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "~g~~h~~h~]]~b~~h~ Play~r~~h~Gamer ~y~Votacao Encerrada~g~~h~~h~]]");
                GameTextForAll(string, 5000, 3);
                format(string, sizeof string, "{FFA1A1}[BPG] {FFFFFF}%d pessoas responderam:{70EEFF} Sim.", votacao[sim]);
                SendClientMessageToAll(0xFFF000AA,string);
                format(string, sizeof string, "{FFA1A1}[BPG] {FFFFFF}%d pessoas responderam:{70EEFF} Não.", votacao[nao]);
                SendClientMessageToAll(0xFFF000FF, string);
                if(votacao[sim] == votacao[nao])
                {
                    SendClientMessageToAll(0xFF0000AA, "{FFA1A1}[BPG] {FFFFFF}Votação Empatada");
                } else if(votacao[sim] > votacao[nao])
                {
                    SendClientMessageToAll(0xFF0000AA, "{FFA1A1}[BPG] {80E3FF} A maioria CONCORDA com a  pergunta.");
                } else if(votacao[sim] < votacao[nao])
                {
                    SendClientMessageToAll(0xFF0000AA, "{FFA1A1}[BPG] {FFB973} A maioria DISCORDA da  pergunta.");
                }
                votacao[iniciada] = false;
                votacao[sim] = 0;
                votacao[nao] = 0;
                for(new i; i < MaiorID; i++)
                    votou[i] = false;
            } else {
                SendClientMessage(playerid, 0xFFFFFFAA, "Nenhuma votação criada!");
            }
        } else {
            SendClientMessage(playerid, 0xFFFFFFAA, "Você não tem permissão para usar este comando!");
        }
        return 1;
    }
    if(strcmp(cmd,"/terminais",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            new Veh = GetPlayerVehicleID(playerid);
            if(!IsAOniCar(Veh))
            {
                SendClientMessage(playerid, COLOR_GREY, "   Voce não está em um ônibus!");
                return 1;
            }
            if(PlayerInfo[playerid][pEmprego] == 9)
            {
                if(TransportDuty[playerid] > 0)
                {
                    if(TransportDuty[playerid] == 2)
                    {
                        BusDrivers -= 1;
                    }
                    TransportDuty[playerid] = 0;
                    format(string, sizeof(string), "* Voce está de folga e recebeu $%d.", TransportMoney[playerid]);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    GivePlayerMoney(playerid, TransportMoney[playerid]);
                    ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
                    return 1;
                }
                else
                {
                    BusDrivers += 1; TransportDuty[playerid] = 2; TransportValue[playerid] = 400;
                    format(string, sizeof(string), "Motorista de onibus %s está em serviço! [Valor: 999] - Use: /servico onibus", PlayerName(playerid));
                    OOCNews(TEAM_GROVE_COLOR,string);
                    SendClientMessage(playerid, COLOR_RED,"Você começou o circuito, siga os checkpoints até finalizar a viajem");
                    SendClientMessage(playerid, COLOR_RED,"Você receberá R$300 a cada checkpoint que passar.");
                    SendClientMessage(playerid, COLOR_RED,"USE: /terminais novamente para parar o serviço");
                    SetPlayerCheckpoint(playerid, 1369.0927,-1736.0730,13.4787,8.0);
                    gPlayerTerminal[playerid] = 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY,"Você não é um motorista de ônibus.");
            }
        }
        return 1;
    }
    if(strcmp(cmdtext, "/online", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] < 3)
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Você não tem permissão para usar esse comando.");
            return 1;
        }
        if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
        {
            SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
            return 1;
        }
        format(gstring, sizeof(gstring), "[BPG] {FFFFFF}Brasil PlayGamer Total de Players Online:{80E3FF} >> {80FF80}%d {80E3FF}<<", ContarJogadores());
        SendClientMessageToAll(0xFF8080FF, gstring);
        format(gstring,sizeof(gstring), "ADMAVISO: %s ID[%d] usou o comando /online", PlayerName(playerid), playerid);
        ABroadCast(COLOR_GRAD1, gstring, 1);
        return 1;
    }
    if(strcmp(cmd,"/stopani",true)==0 || strcmp(cmd,"/pararanim",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            ClearAnimations(playerid);
        }
        return 1;
    }
    if(strcmp(cmd, "/pontos", true) == 0)
    {
        if(TendoGuerra == 0)
        {
            SendClientMessage(playerid, COLOR_GREY, " Não está tendo guerra!");
            return 1;
        }
        if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6 || GetPlayerOrg(playerid) == 29
        || PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15 ||  PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)
        {
            if(Territorio[almortos] > Territorio[exemortos] && Territorio[gimortos] > Territorio[exemortos] && Territorio[aermortos] > Territorio[exemortos])//Exército  ownou
            {
                format(string, sizeof(string), "O Exército ganharam a guerra. Morreram %d membros do Guerrilheiros Israelitas e %d membros da FARC e %d membros do Exército  e %d membros da Aernáutica!",Territorio[gimortos], Territorio[almortos], Territorio[exemortos], Territorio[aermortos]);
                SendClientMessage(playerid, COR_EXE, string);
                return 1;
            }
            else if(Territorio[exemortos] > Territorio[almortos] && Territorio[gimortos] > Territorio[almortos] && Territorio[aermortos] > Territorio[almortos])//FARC ownou
            {
                format(string, sizeof(string), "A FARC ganharam a guerra. Morreram %d membros do Exército , %d membros do Guerrilheiros Israelitas e %d membros da FARC e %d membros da Aernáutica!!",Territorio[exemortos], Territorio[gimortos], Territorio[almortos], Territorio[aermortos]);
                SendClientMessage(playerid, COR_AL, string);
                return 1;
            }
            else if(Territorio[exemortos] > Territorio[gimortos] && Territorio[almortos] > Territorio[gimortos] && Territorio[aermortos] > Territorio[gimortos])//Guerrilheiros Israelitas ownou
            {
                format(string, sizeof(string), "O Guerrilheiros Israelitas ganharam a guerra. Morreram %d membros do Exército ,, %d membros da FARC e %d membros do Guerrilheiros Israelitas e %d membros da Aernáutica!!",Territorio[exemortos], Territorio[almortos], Territorio[gimortos], Territorio[aermortos]);
                SendClientMessage(playerid, COR_GI, string);
                return 1;
            }
            else
            {
                format(string, sizeof(string), "Houve um Empate na Guerra. Morreram %d membros do Exército , %d membros da FARC e %d membros do Guerrilheiros Israelitas e %d membros da Aernáutica!!",Territorio[exemortos], Territorio[almortos], Territorio[gimortos], Territorio[aermortos]);
                SendClientMessage(playerid, COLOR_EXE, string);
                return 1;
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "  Sua Organização não possui nenhuma guerra");
        }
        return 1;
    }
    if(strcmp(cmd, "/creditos", true) == 0)
     {
        SendClientMessage(playerid, COLOR_WHITE, "•••••••••••••••••••••••• Créditos ••••••••••••••••••••••••");
        SendClientMessage(playerid, COLOR_YELLOW, "Scripts Atuais: Caaw/MooP/William ");
        SendClientMessage(playerid, COLOR_YELLOW, "Todos direitos a Caaw/MooP/William Por Total Criação!");
        SendClientMessage(playerid, COLOR_WHITE, "•••••••••••••••••••••••• Créditos ••••••••••••••••••••••••");
        return 1;
    }
    if (strcmp(cmd, "/blacklist", true) ==0 )
    {
        if( PlayerInfo[ playerid ][ pAdmin ] > 1 ){
            tmp = strtok( cmdtext, idx );
            if( !strlen( tmp ) )
                return SendClientMessage( playerid, -1, "USE: /blacklist [ playerid ][ tempo - dias ] " );
            new id = ReturnUser( tmp );
            if( !IsPlayerConnected( id ) )
                return SendClientMessage( playerid, -1, "Player não encontrado." );
            tmp = strtok( cmdtext, idx );
            if( !strlen( tmp ) )
                return SendClientMessage( playerid, -1, "USE: /blacklist [ playerid ][ tempo - dias ] " );
            new dias;
            dias = strval(tmp)*(60*60*24);
            PlayerInfo[ id ][ pNomeBlock ] = gettime() + dias;
            new str[ 128 ];
            format( str, sizeof str, "{FF6347}Você bloqueou o player %s de mudar nome por %d dia(s)", PlayerName( id ), strval(tmp) );
            SendClientMessage( playerid, -1, str );
            format( str, sizeof str, "{FF6347}O admin %s bloqueou você de mudar nome por %d dia(s)", PlayerName( playerid ), strval(tmp) );
            SendClientMessage( id, -1, str );
        }
        else
            return SendClientMessage( playerid, -1, "Sem autorização." );
        return true;
    }
    if (strcmp(cmd, "/desblacklist", true) ==0 )
    {
        if( PlayerInfo[ playerid ][ pAdmin ] > 1335 ){
            tmp = strtok( cmdtext, idx );
            if( !strlen( tmp ) )
                return SendClientMessage( playerid, -1, "USE: /desblacklist [ playerid ] " );
            new id = ReturnUser( tmp );
            if( !IsPlayerConnected( id ) )
                return SendClientMessage( playerid, -1, "Player não encontrado." );
            PlayerInfo[ id ][ pNomeBlock ] = 0;
            new str[ 128 ];
            format( str, sizeof str, "{FF6347}Você desbloqueou o player %s de mudar nome.", PlayerName( id ) );
            SendClientMessage( playerid, -1, str );
            format( str, sizeof str, "{FF6347}O admin %s desbloqueou você de mudar nome.", PlayerName( playerid ));
            SendClientMessage( id, -1, str );
        }
        else
            return SendClientMessage( playerid, -1, "Sem autorização." );
        return true;
    }
    if (strcmp(cmd, "/bllider", true) ==0 )
    {
        if( PlayerInfo[ playerid ][ pAdmin ] > 1335 ){
            tmp = strtok( cmdtext, idx );
            if( !strlen( tmp ) )
                return SendClientMessage( playerid, -1, "USE: /bllider [ playerid ][ tempo - dias ] " );
            new id = ReturnUser( tmp );
            if( !IsPlayerConnected( id ) )
                return SendClientMessage( playerid, -1, "Player não encontrado." );
            tmp = strtok( cmdtext, idx );
            if( !strlen( tmp ) )
                return SendClientMessage( playerid, -1, "USE: /bllider [ playerid ][ tempo - dias ] " );
            new dias;
            dias = strval(tmp)*(60*60*24);
            PlayerInfo[ id ][ pLiderBlock ] = gettime() + dias;
            new str[ 128 ];
            format( str, sizeof str, "{FF6347}Você bloqueou o player %s de pegar lider por %d dia(s)", PlayerName( id ), strval(tmp) );
            SendClientMessage( playerid, -1, str );
            format( str, sizeof str, "{FF6347}O admin %s bloqueou você pegar lider por %d dia(s)", PlayerName( playerid ), strval(tmp) );
            SendClientMessage( id, -1, str );
        }
        else
            return SendClientMessage( playerid, -1, "Sem autorização." );
        return true;
    }
    if (strcmp(cmd, "/desbllider", true) ==0 )
    {
        if( PlayerInfo[ playerid ][ pAdmin ] > 1335 ){
            tmp = strtok( cmdtext, idx );
            if( !strlen( tmp ) )
                return SendClientMessage( playerid, -1, "USE: /desbllider [ playerid ] " );
            new id = ReturnUser( tmp );
            if( !IsPlayerConnected( id ) )
                return SendClientMessage( playerid, -1, "Player não encontrado." );
            PlayerInfo[ id ][ pLiderBlock ] = 0;
            new str[ 128 ];
            format( str, sizeof str, "{FF6347}Você desbloqueou o player %s de pegar lider.", PlayerName( id ) );
            SendClientMessage( playerid, -1, str );
            format( str, sizeof str, "{FF6347}O admin %s desbloqueou você pegar lider.", PlayerName( playerid ));
            SendClientMessage( id, -1, str );
        }
        else
            return SendClientMessage( playerid, -1, "Sem autorização." );
        return true;
    }
//=====================================[INFOORG]================================//
  if(strcmp(cmd, "/limparvaga", true) == 0 || strcmp(cmd, "/lvaga", true) == 0)
    {
        if(PlayerInfo[playerid][pLider] < 1)
        {
            SendClientMessage(playerid, COLOR_GRAD2, "Somente Líderes podem usar este comando!");
            return 1;
        }
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_GRAD2, "USE: /limparvaga [Vaga]");
            return 1;
        }
        new length = strlen(cmdtext);
        while ((idx < length) && (cmdtext[idx] <= ' '))
        {
          idx++;
        }
        new offset = idx;
        new result[100];
        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
        {
            result[idx - offset] = cmdtext[idx];
            idx++;
        }
        result[idx - offset] = EOS;
        if(!strlen(result))
        {
            SendClientMessage(playerid, COLOR_GRAD2, "USE: /limparvaga [ID da Vaga] [Motivo]");
            return 1;
        }
        new Vaga2 = strval(tmp);
        new org = GetPlayerOrg(playerid);
        new arquivo[128], id, str[64];
        format(arquivo, sizeof(arquivo), "InfoOrg/Org%d.cfg",org);
        if(strcmp(tmp,"sub",true)==0)
        {
            //if(PlayerInfo[playerid][pLider] < 1) return SendClientMessage(playerid, COLOR_GRAD2, "ERRO: Somente Líderes pode limpar a Vaga de Sub-Líderes");
            if(IsPlayerOnline(InfoOrg[org][SubLider]))
            {
                id=GetPlayerID(InfoOrg[org][SubLider]);
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][SubLider]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            strmid(InfoOrg[org][SubLider], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"SubLider","Ninguem");
            format(string, sizeof(string), "* Você Limpou a Vaga de Sub-Lider Motivo: %s",result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            return 1;
        }
        if(Vaga2 == 1)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro1]);
            if(IsPlayerOnline(InfoOrg[org][Membro1]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro1]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro1], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"Membro1","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 1");
            return 1;
        }
        if(Vaga2 == 2)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro2]);
            if(IsPlayerOnline(InfoOrg[org][Membro2]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro2]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro2], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"Membro2","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 2");
        }
        if(Vaga2 == 3)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro3]);
            if(IsPlayerOnline(InfoOrg[org][Membro3]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro3]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro3], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"Membro3","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 3");
        }
        if(Vaga2 == 4)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro4]);
            if(IsPlayerOnline(InfoOrg[org][Membro4]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro4]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro4], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"Membro4","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 4");
        }
        if(Vaga2 == 5)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro5]);
            if(IsPlayerOnline(InfoOrg[org][Membro5]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro5]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro5], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"Membro5","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 5");
        }
        if(Vaga2 == 6)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro6]);
            if(IsPlayerOnline(InfoOrg[org][Membro6]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro6]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro6], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"Membro6","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 6");
        }
        if(Vaga2 == 7)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro7]);
            if(IsPlayerOnline(InfoOrg[org][Membro7]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro7]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro7], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"Membro7","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 7");
        }
        if(Vaga2 == 8)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro8]);
            if(IsPlayerOnline(InfoOrg[org][Membro8]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro8]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro8], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"Membro8","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 8");
        }
        if(Vaga2 == 9)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro9]);
            if(IsPlayerOnline(InfoOrg[org][Membro9]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro9]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro9], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"Membro9","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 9");
        }
        if(Vaga2 == 10)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro10]);
            if(IsPlayerOnline(InfoOrg[org][Membro10]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro10]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro10], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"Membro10","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 10");
        }
        if(Vaga2 == 11)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro11]);
            if(IsPlayerOnline(InfoOrg[org][Membro11]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro11]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro11], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"Membro11","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 11");
        }
        if(Vaga2 == 12)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro12]);
            if(IsPlayerOnline(InfoOrg[org][Membro12]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro12]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro12], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"Membro12","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 12");
        }
        if(Vaga2 == 13)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro13]);
            if(IsPlayerOnline(InfoOrg[org][Membro13]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro13]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro13], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"Membro13","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 13");
        }
        if(Vaga2 == 14)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro14]);
            if(IsPlayerOnline(InfoOrg[org][Membro14]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro14]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro14], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"Membro14","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 14");
        }
        if(Vaga2 == 15)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro15]);
            if(IsPlayerOnline(InfoOrg[org][Membro15]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro15]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro15], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"Membro15","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 15");
        }
        if(Vaga2 == 16)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro16]);
            if(IsPlayerOnline(InfoOrg[org][Membro16]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro16]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro16], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"Membro16","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 16");
        }
        if(Vaga2 == 17)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro17]);
            if(IsPlayerOnline(InfoOrg[org][Membro17]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro17]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro17], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"Membro17","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 17");
        }
        if(Vaga2 == 18)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro18]);
            if(IsPlayerOnline(InfoOrg[org][Membro18]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro18]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro18], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"Membro18","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 18");
        }
        if(Vaga2 == 19)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro19]);
            if(IsPlayerOnline(InfoOrg[org][Membro19]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro19]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro19], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"Membro19","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 19");
        }
        if(Vaga2 == 20)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro20]);
            if(IsPlayerOnline(InfoOrg[org][Membro20]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro20]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro20], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"Membro20","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 20");
        }
        if(Vaga2 == 21)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro21]);
            if(IsPlayerOnline(InfoOrg[org][Membro21]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro21]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro21], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"Membro21","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 21");
        }
        if(Vaga2 == 22)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro22]);
            if(IsPlayerOnline(InfoOrg[org][Membro22]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro22]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro22], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"Membro22","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 22");
        }
        if(Vaga2 == 23)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro23]);
            if(IsPlayerOnline(InfoOrg[org][Membro23]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro23]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro23], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"Membro23","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 23");
        }
        if(Vaga2 == 24)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro24]);
            if(IsPlayerOnline(InfoOrg[org][Membro24]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro24]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro24], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"Membro24","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 24");
        }
        if(Vaga2 == 25)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro25]);
            if(IsPlayerOnline(InfoOrg[org][Membro25]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro25]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro25], "Ninguem", 0, strlen("Ninguem"), 255);
            dini_Set(arquivo,"Membro25","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 25");
        }
        if(Vaga2 == 26)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro26]);
            if(IsPlayerOnline(InfoOrg[org][Membro26]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro26]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro26], "Ninguem", 0, strlen("Ninguem"), 265);
            dini_Set(arquivo,"Membro26","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 26");
        }
        if(Vaga2 == 27)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro27]);
            if(IsPlayerOnline(InfoOrg[org][Membro27]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro27]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro27], "Ninguem", 0, strlen("Ninguem"), 275);
            dini_Set(arquivo,"Membro27","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 27");
        }
        if(Vaga2 == 28)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro28]);
            if(IsPlayerOnline(InfoOrg[org][Membro28]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro28]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro28], "Ninguem", 0, strlen("Ninguem"), 285);
            dini_Set(arquivo,"Membro28","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 28");
        }
        if(Vaga2 == 29)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro29]);
            if(IsPlayerOnline(InfoOrg[org][Membro29]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro29]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro29], "Ninguem", 0, strlen("Ninguem"), 295);
            dini_Set(arquivo,"Membro29","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 29");
        }
        if(Vaga2 == 30)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro30]);
            if(IsPlayerOnline(InfoOrg[org][Membro30]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro30]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro30], "Ninguem", 0, strlen("Ninguem"), 305);
            dini_Set(arquivo,"Membro30","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 30");
        }
        if(Vaga2 == 31)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro31]);
            if(IsPlayerOnline(InfoOrg[org][Membro31]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro31]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro31], "Ninguem", 0, strlen("Ninguem"), 305);
            dini_Set(arquivo,"Membro31","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 31");
        }
        if(Vaga2 == 32)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro32]);
            if(IsPlayerOnline(InfoOrg[org][Membro32]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro32]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro32], "Ninguem", 0, strlen("Ninguem"), 305);
            dini_Set(arquivo,"Membro32","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 32");
        }
        if(Vaga2 == 33)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro33]);
            if(IsPlayerOnline(InfoOrg[org][Membro33]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro33]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro33], "Ninguem", 0, strlen("Ninguem"), 305);
            dini_Set(arquivo,"Membro33","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 33");
        }
        if(Vaga2 == 34)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro34]);
            if(IsPlayerOnline(InfoOrg[org][Membro34]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro34]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro34], "Ninguem", 0, strlen("Ninguem"), 305);
            dini_Set(arquivo,"Membro34","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 34");
        }
        if(Vaga2 == 35)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro35]);
            if(IsPlayerOnline(InfoOrg[org][Membro35]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro35]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro35], "Ninguem", 0, strlen("Ninguem"), 305);
            dini_Set(arquivo,"Membro35","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 35");
        }
        if(Vaga2 == 36)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro36]);
            if(IsPlayerOnline(InfoOrg[org][Membro36]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro36]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro36], "Ninguem", 0, strlen("Ninguem"), 305);
            dini_Set(arquivo,"Membro36","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 36");
        }
        if(Vaga2 == 37)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro37]);
            if(IsPlayerOnline(InfoOrg[org][Membro37]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro37]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro37], "Ninguem", 0, strlen("Ninguem"), 305);
            dini_Set(arquivo,"Membro37","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 37");
        }
        if(Vaga2 == 38)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro38]);
            if(IsPlayerOnline(InfoOrg[org][Membro38]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro38]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro38], "Ninguem", 0, strlen("Ninguem"), 305);
            dini_Set(arquivo,"Membro38","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 38");
        }
        if(Vaga2 == 39)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro39]);
            if(IsPlayerOnline(InfoOrg[org][Membro39]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro39]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro39], "Ninguem", 0, strlen("Ninguem"), 305);
            dini_Set(arquivo,"Membro39","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 39");
        }
        if(Vaga2 == 40)// id da vaga
        {
            id=GetPlayerID(InfoOrg[org][Membro40]);
            if(IsPlayerOnline(InfoOrg[org][Membro40]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro40]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            strmid(InfoOrg[org][Membro40], "Ninguem", 0, strlen("Ninguem"), 305);
            dini_Set(arquivo,"Membro40","Ninguem");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 40");
        }
        //else{ SendClientMessage(playerid, COLOR_GRAD2," Vaga mínima 1, máxima 15"); }
        return 1;
    }
    /*if(strcmp(cmd, "/infoorg", true) ==0 || strcmp(cmd, "/infoorganizacao", true) ==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pMembro] > 0 || PlayerInfo[playerid][pLider] > 0)
            {
                new org = GetPlayerOrg(playerid);
                new arquivo[128];
                SendClientMessage(playerid, COLOR_WHITE, "|______________ Vagas da Organização ______________|");
                format(strvinny,sizeof(strvinny),"Líder:{FFFFFF} %s",InfoOrg[org][Lider]);
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][SubLider]);
                format(strvinny,sizeof(strvinny),"Sub-Líder:{FFFFFF}  %s {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][SubLider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro1]);
                format(strvinny,sizeof(strvinny),"Vaga 1:{FFFFFF} %s {1E90FF}- Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro1],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro2]);
                format(strvinny,sizeof(strvinny),"Vaga 2:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro2],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro3]);
                format(strvinny,sizeof(strvinny),"Vaga 3:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro3],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro4]);
                format(strvinny,sizeof(strvinny),"Vaga 4:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro4],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro5]);
                format(strvinny,sizeof(strvinny),"Vaga 5:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro5],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro6]);
                format(strvinny,sizeof(strvinny),"Vaga 6:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro6],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro7]);
                format(strvinny,sizeof(strvinny),"Vaga 7:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro7],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro8]);
                format(strvinny,sizeof(strvinny),"Vaga 8:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro8],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro9]);
                format(strvinny,sizeof(strvinny),"Vaga 9:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro9],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro10]);
                format(strvinny,sizeof(strvinny),"Vaga 10:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro10],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro11]);
                format(strvinny,sizeof(strvinny),"Vaga 11:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro11],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro12]);
                format(strvinny,sizeof(strvinny),"Vaga 12:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro12],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro13]);
                format(strvinny,sizeof(strvinny),"Vaga 13:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro13],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro14]);
                format(strvinny,sizeof(strvinny),"Vaga 14:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro14],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro15]);
                format(strvinny,sizeof(strvinny),"Vaga 15:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro15],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro16]);
                format(strvinny,sizeof(strvinny),"Vaga 16:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro16],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro17]);
                format(strvinny,sizeof(strvinny),"Vaga 17:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro17],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro18]);
                format(strvinny,sizeof(strvinny),"Vaga 18:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro18],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro19]);
                format(strvinny,sizeof(strvinny),"Vaga 19:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro19],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro20]);
                format(strvinny,sizeof(strvinny),"Vaga 20:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro20],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro21]);
                format(strvinny,sizeof(strvinny),"Vaga 21:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro21],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro22]);
                format(strvinny,sizeof(strvinny),"Vaga 22:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro22],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro23]);
                format(strvinny,sizeof(strvinny),"Vaga 23:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro23],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro24]);
                format(strvinny,sizeof(strvinny),"Vaga 24:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro24],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro25]);
                format(strvinny,sizeof(strvinny),"Vaga 25:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro25],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                SendClientMessage(playerid,0x1E90FFFF,strvinny);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY," Você não faz parte de uma organização!");
                return 1;
            }
        }
        return 1;
    }   */
    if(strcmp(cmd, "/infoorg", true) ==0 || strcmp(cmd, "/infoorganizacao", true) ==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pMembro] > 0 || PlayerInfo[playerid][pLider] > 0)
            {
                new org = GetPlayerOrg(playerid), arquivo[64], Dialogvinny[4000], strdialog[94];
                format(strdialog,sizeof(strdialog),"{69B4FF}Líder: %s\n",InfoOrg[org][Lider]);
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][SubLider]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Sub-Líder:  %s - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][SubLider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro1]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 1: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro1],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro2]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 2: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro2],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro3]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 3: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro3],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro4]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 4: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro4],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro5]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 5: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro5],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro6]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 6: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro6],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro7]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 7: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro7],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro8]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 8: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro8],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro9]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 9: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro9],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro10]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 10: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro10],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro11]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 11: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro11],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro12]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 12: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro12],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro13]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 13: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro13],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro14]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 14: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro14],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro15]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 15: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro15],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro16]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 16: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro16],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro17]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 17: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro17],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro18]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 18: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro18],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro19]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 19: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro19],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro20]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 20: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro20],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro21]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 21: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro21],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro22]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 22: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro22],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro23]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 23: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro23],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro24]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 24: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro24],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro25]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 25: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro25],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro26]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 26: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro26],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro27]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 27: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro27],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro28]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 28: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro28],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro29]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 29: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro29],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro30]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 30: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro30],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro31]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 31: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro31],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro32]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 32: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro32],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro33]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 33: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro33],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro34]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 34: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro34],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro35]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 35: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro35],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro36]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 36: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro36],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro37]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 37: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro37],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro38]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 38: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro38],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro39]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 39: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro39],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro40]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 40: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro40],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                if(PlayerInfo[playerid][pLider] != 0 || PlayerInfo[playerid][pLider] == 5) ShowPlayerDialog(playerid, 14697, DIALOG_STYLE_LIST, "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer {FFFFFF}- Informações da Organização", Dialogvinny, "Fechar", "Gerenciar");
                else ShowPlayerDialog(playerid, 14697, DIALOG_STYLE_LIST, "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer {FFFFFF}- Informações da Organização", Dialogvinny, "Fechar", "");
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY," Você não faz parte de uma organização!");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/gorg", true) ==0 || strcmp(cmd, "/gerenciarorg", true) ==0 || strcmp(cmd, "/gerenciarorganizacao", true) ==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pLider] > 0)
            {
                new org = GetPlayerOrg(playerid), arquivo[64], Dialogvinny[4000], strdialog[94];
                format(strdialog,sizeof(strdialog),"{69B4FF}Líder: %s\n",InfoOrg[org][Lider]);
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][SubLider]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Sub-Líder:  %s - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][SubLider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro1]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 1: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro1],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro2]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 2: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro2],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro3]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 3: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro3],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro4]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 4: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro4],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro5]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 5: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro5],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro6]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 6: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro6],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro7]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 7: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro7],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro8]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 8: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro8],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro9]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 9: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro9],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro10]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 10: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro10],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro11]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 11: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro11],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro12]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 12: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro12],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro13]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 13: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro13],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro14]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 14: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro14],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro15]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 15: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro15],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro16]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 16: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro16],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro17]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 17: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro17],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro18]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 18: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro18],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro19]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 19: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro19],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro20]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 20: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro20],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro21]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 21: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro21],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro22]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 22: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro22],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro23]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 23: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro23],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro24]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 24: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro24],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro25]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 25: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro25],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro26]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 26: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro26],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro27]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 27: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro27],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro28]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 28: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro28],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro29]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 29: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro29],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro30]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 30: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro30],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro31]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 31: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro31],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro32]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 32: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro32],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro33]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 33: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro33],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro34]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 34: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro34],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro35]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 35: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro35],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro36]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 36: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro36],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro37]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 37: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro37],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro38]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 38: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro38],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro39]);
                format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 39: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro39],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro40]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 40: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro40],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(Dialogvinny,strdialog);
                ShowPlayerDialog(playerid, 14657, DIALOG_STYLE_LIST, "{1E90FF}{FFFF00}Brasil {FFFFFF}Play {FF0000}Gamer {FFFFFF}- Clique na Vaga para Gerenciar", Dialogvinny, "Demitir", "Fechar");
                return 1;
            }
            /*else
            {
                SendClientMessage(playerid, COLOR_GREY," Comando Permitido Apenas para líderes!");
                return 1;
            }*/
        }
        return 1;
    }
//COMANDOS PARA ADMIN DONO RIARARIARAIRIARIAIRAIRIAIRAIRIARIA
    if(strcmp(cmd, "/coordenadas", true) == 0 && PlayerInfo[playerid][pAdmin] >= 1340)
    {
        new Float:X, Float:Y, Float:Z;
        GetPlayerPos(playerid, X, Y, Z);
        format(gstring,sizeof(gstring),"Coordenadas, X:%f Y:%f Z:%f",X,Y,Z);
        SendClientMessage(playerid,0xFFFFFFAA,gstring);
        return 1;
    }
    if(strcmp(cmd, "/ferrar", true) == 0 && PlayerInfo[playerid][pAdmin] >= 3000)
    {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_GRAD2, "USE: /ferrar [id]");
            return 1;
        }
        giveplayerid = ReturnUser(tmp);
        CrashPlayer(giveplayerid);
        format(gstring,sizeof(gstring),"Você fez o player %s ferrar",PlayerName(giveplayerid));
        return SendClientMessage(playerid, COLOR_YELLOW, gstring);
    }
    if(strcmp(cmd, "/np", true) == 0)
    {
        new arquivo[64];
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage(playerid, 0x14B5EBFF, "~~>{00FFFF} Brasil PlayGamer RPG Informações de Login Líderes {14B5EB}<~~");
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[1][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}1 - Policia Militar - LS:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[1][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[2][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}2 - ROTA - LS:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[2][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[3][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}3 - Exército :{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[3][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[4][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}4 - SAMU - LS:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[4][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[5][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}5 - Los Aztecas - LS:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[5][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[6][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}6 - Guerrilheiros Israelitas:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[6][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[7][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}7 - Prefeito - LS:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[7][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[8][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}8 - Hitmans:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[8][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[9][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}9 - Reporter - LS:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[9][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[10][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}10 - Taxista - LS:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[10][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[11][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}11 - B.O.P.E - LS:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[11][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[12][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}12 - Mafia Russa:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[12][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[13][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}13 - Mafia Japonesa:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[13][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[14][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}14 - Groove Street - LS:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[14][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[15][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}15 - FARC:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[15][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[16][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}16 - Polícia Rodoviária Federal:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[16][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[17][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}17 - Ballas - LS:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[17][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[18][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}18 - Los Vagos - LS:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[18][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[19][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}19 - Comando Vermelho - LS:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[19][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[20][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}20 - PCC - LS:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[20][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[21][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}21 - Hells Angels:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[21][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[22][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}22 - Mongols:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[22][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[23][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}23 - Sons Of Anarchy:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[23][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[24][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}24 - Triads:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[24][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[25][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}25 - Drifters:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[25][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[26][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}26 - HunTerS:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[26][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[27][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}27 - FaTal DangeR:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[27][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[28][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}28 - BPM :{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[28][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[29][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}29 - Exército:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[29][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[30][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}30 - DesTroyeR:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[30][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[31][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}31 - Justiceiros:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[31][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[32][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}32 - Polícia Federal:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[32][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[33][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}33 - EM BREVE:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[33][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[34][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}34 - Dark Gods:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[34][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[35][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}35 - KiLLeRs:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[35][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[36][Lider]);
            format(strvinny, sizeof(strvinny), " {00F0F0}36 - Storm:{FFFFFF} %s {00F0F0}<>{FFFFFF} Data: %d/%d/%d  {00F0F0}<>{FFFFFF} Hora: %d:%d:%d\n", InfoOrg[36][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFFFFFFFF , strvinny);
            //ShowPlayerDialog(playerid, 8724, DIALOG_STYLE_LIST,  "Lista de Datas de Login", DialogBPH, "OK","OK");
        }
      return 1;
    }
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    if(strcmp(cmd, "/orgs", true) == 0 || strcmp(cmd, "/profs", true) == 0)
    {
        new DialogBPH[2500];
        if(IsPlayerConnected(playerid))
        {
            format(string, 128, " {1d4b9b}1 - Policia Militar - LS:{FFFFFF} %s\n", InfoOrg[1][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {4a505a}2 - ROTA - LS:{FFFFFF} %s\n", InfoOrg[2][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {508430}3 - Exército :{FFFFFF} %s\n", InfoOrg[3][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {FF0080}4 - SAMU - LS:{FFFFFF} %s\n", InfoOrg[4][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {4875a3}5 - Los Aztecas - LS:{FFFFFF} %s\n", InfoOrg[5][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {38b7bd}6 - Guerrilheiros Israelitas:{FFFFFF} %s\n", InfoOrg[6][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {27AE60}7 - Prefeito - LS:{FFFFFF} %s\n", InfoOrg[7][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {A9A9A9}8 - Hitmans:{FFFFFF} %s\n", InfoOrg[8][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {f8a000}9 - Reporter - LS:{FFFFFF} %s\n", InfoOrg[9][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {e2ab22}10 - Taxista - LS:{FFFFFF} %s\n", InfoOrg[10][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {8b8272}11 - B.O.P.E:{FFFFFF} %s\n", InfoOrg[11][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {b0ad69}12 - Mafia Russa:{FFFFFF} %s\n", InfoOrg[12][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {1e2854}13 - Mafia Japonesa:{FFFFFF} %s\n", InfoOrg[13][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {33FF00}14 - Groove Street - LS:{FFFFFF} %s\n", InfoOrg[14][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {515151}15 - FARC:{FFFFFF} %s\n", InfoOrg[15][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {a59432}16 - Polícia Rodoviária Federal:{FFFFFF} %s\n", InfoOrg[16][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {5f3b63}17 - Ballas - LS:{FFFFFF} %s\n", InfoOrg[17][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {c5c73d}18 - Los Vagos - LS:{FFFFFF} %s\n", InfoOrg[18][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {b80d19}19 - Comando Vermelho - LS:{FFFFFF} %s\n", InfoOrg[19][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {CCFF99}20 - PCC - LS:{FFFFFF} %s\n", InfoOrg[20][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {9c1528}21 - Hells Angels:{FFFFFF} %s\n", InfoOrg[21][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {4a9974}22 - Mongols:{FFFFFF} %s\n", InfoOrg[22][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {043046}23 - Sons Of Anarchy:{FFFFFF} %s\n", InfoOrg[23][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {ADD8E6}24 - Triads:{FFFFFF} %s\n", InfoOrg[24][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {5f4baf}25 - Drifters:{FFFFFF} %s\n", InfoOrg[25][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {754d48}26 - HunTerS:{FFFFFF} %s\n", InfoOrg[26][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {96e1a9}27 - FaTal DangeR:{FFFFFF} %s\n", InfoOrg[27][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {FF4500}28 - BPM:{FFFFFF} %s\n", InfoOrg[28][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {FF0000}29 - Snake:{FFFFFF} %s\n", InfoOrg[29][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {b6c661}30 - DesTroyeR:{FFFFFF} %s\n", InfoOrg[30][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {77654a}31 - Justiceiros:{FFFFFF} %s\n", InfoOrg[31][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {a59432}32 - Polícia Civil:{FFFFFF} %s\n", InfoOrg[32][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {FFD700}33 - EM BREVE:{FFFFFF} %s\n", InfoOrg[33][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {375960}34 - Dark Gods:{FFFFFF} %s\n", InfoOrg[34][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {a52f35}35 - KiLLeRs:{FFFFFF} %s\n", InfoOrg[35][Lider]);
            strcat(DialogBPH,string);
            format(string, 128, " {4B94D6}36 - Storm:{FFFFFF} %s\n", InfoOrg[36][Lider]);
            strcat(DialogBPH,string);
            ShowPlayerDialog(playerid, 8724, DIALOG_STYLE_LIST, "Lista de Líderes das Organizações", DialogBPH, "OK","OK");
        }
      return 1;
    }
    if (strcmp("/limparlider", cmdtext, true, 10) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] < 1337)
        {
            SendClientMessage(playerid, COLOR_GRAD2, "Somente admins master ou dono podem usar este comando!");
            return 1;
        }
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_GRAD2, "USE: /limparlider [organização]");
            return 1;
        }
        new length = strlen(cmdtext);
        while ((idx < length) && (cmdtext[idx] <= ' '))
        {
          idx++;
        }
        new offset = idx;
        new result[100];
        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
        {
            result[idx - offset] = cmdtext[idx];
            idx++;
        }
        result[idx - offset] = EOS;
        if(!strlen(result))
        {
            SendClientMessage(playerid, COLOR_GRAD2, "USE: /limparvaga [ID da Vaga] [Motivo]");
            return 1;
        }
        new Vaga2 = strval(tmp);
        if(Vaga2 < 1 || Vaga2 > 50) { SendClientMessage(playerid, COLOR_GREY, "Vaga mínima 1 máximo 36!"); return 1; }
        new id=GetPlayerID(InfoOrg[Vaga2][Lider]), str[64];
        if(IsPlayerOnline(InfoOrg[Vaga2][Lider]))
        {
            DemitirLider(id);
            format(string, sizeof(string), "* Você Foi Tirado de Líder Motivo: %s",result);
            SendClientMessage(id, COLOR_LIGHTBLUE, string);
        }
        else
        {
            format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[Vaga2][Lider]);
            dini_Create(str);
            dini_Set(str,"Nome",PlayerName(playerid));
            dini_IntSet(str,"Org",Vaga2);
            dini_Set(str,"Motivo",result);
        }
        strmid(InfoOrg[Vaga2][Lider], "Ninguem", 0, strlen("Ninguem"), 255);
        format(gstring,sizeof(gstring), "InfoOrg/Org%d.cfg", Vaga2);
        dini_Set(gstring,"Lider","Ninguem");
        format(string, sizeof(string), "Você limpou o líder da organização Nº %d, Motivo: %s",Vaga2,result);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
        a3d();
        //LabelOrg();
        return 1;
    }
    if(strcmp(cmd, "/carid", true) == 0 && PlayerInfo[playerid][pAdmin] == 3000)
    {
        new vehicle;
        vehicle = GetPlayerVehicleID(playerid);
        format(string,sizeof(string), "Carro ID: %d", vehicle);
        SendClientMessage(playerid, COLOR_GREY, string);
        return 1;
    }
    if(strcmp(cmd,"/setpos",true)==0 && PlayerInfo[playerid][pAdmin] == 3000)
    {
        new plid,Float:setpos[3];
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp)) return SendClientMessage(playerid, COR_PM, "USE: /setpos [id] [X] [Y] [Z]");
        plid = strval(tmp);
        for(new x=0;x<3;x++)
        {
            tmp = strtok(cmdtext,idx);
            if(!strlen(tmp)) return SendClientMessage(playerid, COR_PM, "USE: /setpos [id] [X] [Y] [Z]");
            setpos[x] = floatstr(tmp);
        }
        SetPlayerPos(plid,setpos[0],setpos[1],setpos[2]);
        SendClientMessage(playerid, COR_PM, "Posição setada!");
        return 1;
    }
    if(strcmp(cmd,"/irxiter",true)==0 && PlayerInfo[playerid][pAdmin] == 3000)
    {
        if(IsPlayerConnected(playerid))
        {
            SetPlayerPos(playerid ,xpoz, ypoz, zpoz);
            SendClientMessage(playerid, COR_PM, "Você Foi puxado para o Local do Xiter");
            return 1;
        }
    }
    if(strcmp(cmd, "/daradmin", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 1339 && ServerOwner[playerid] != 1)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para usar esse comando.");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /daradmin [id] [Nivel]");
                return 1;
            }
            new para1;
            new level;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /daradmin [id] [Nivel]");
                return 1;
            }
            level = strval(tmp);
            GetPlayerName(para1, giveplayer, sizeof(giveplayer));
            GetPlayerName(playerid, sendername, sizeof(sendername));
            format(string, sizeof(string), "   Você foi promovido para level  %d de Admin - Por %s", level, sendername);
            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
            format(string, sizeof(string), "   Você promoveu o(a) %s Para o level %d de Admin.", giveplayer,level);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            if(IsPlayerConnected(para1))
            {
                if(para1 != INVALID_PLAYER_ID)
                {
                    if(PlayerInfo[playerid][pAdmin] < 3000 && ServerOwner[playerid] != 1)
                    {
                        if(level > PlayerInfo[playerid][pAdmin]) return SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização promover um admin para um nível acima do seu.");
                    }
                    if(ServerOwner[playerid] == 1)
                    {
                        strmid(AdmInfo[0][gMembro], PlayerName(para1), 0, strlen(PlayerName(para1)), 255);
                        PlayerInfo[para1][pAdmin] = level;
                        AdmInfo[0][AdminAtivo] = 1;
                        //SaveAdm();
                        return 1;
                    }
                    for(new i = 0; i < sizeof(AdmInfo); i++)
                    {
                        if(PlayerInfo[para1][pAdmin] > 0)
                        {
                            if(level == 0)
                            {
                                if(strcmp(AdmInfo[i][gMembro],PlayerName(para1),true) == 0)
                                {
                                    strmid(AdmInfo[i][gMembro], "Vazio", 0, strlen("Vazio"), 255);
                                    AdmInfo[i][AdminAtivo] = 0;
                                    admtrampando[para1] = 0;
                                    PlayerInfo[para1][pAdmin] = 0;
                                    ModoTrabalho(para1, 2);
                                    break;
                                }
                                else
                                {
                                    PlayerInfo[para1][pAdmin] = 0;
                                    ModoTrabalho(para1, 2);
                                    break;
                                }
                            }
                            else if(strcmp(AdmInfo[i][gMembro],PlayerName(playerid),true) == 0)
                            {
                                PlayerInfo[para1][pAdmin] = level;
                                break;
                            }
                        }
                        else if(PlayerInfo[para1][pAdmin] == 0)
                        {
                            AdmsVaga();
                            if(VagaSobrando == 0) { SendClientMessage(playerid, COLOR_GRAD1, "Não há mais vagas na lista use /limparadm primeiro."); return 1; }
                            if(strcmp(AdmInfo[i][gMembro],"Vazio",true) == 0)
                            {
                                PlayerInfo[para1][pAdmin] = level;
                                AdmInfo[i][gMembro] = giveplayer;
                                AdmInfo[i][AdminAtivo] = 1;
                                ModoTrabalho(para1, 1);
                                break;
                            }
                        }
                    }
                }
            }
        }
        //SaveAdm();
        return 1;
    }
    if(strcmp(cmd,"/daradmintemp",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /daradmintemp [id]");
                return 1;
            }
            new playa;
            //new Float:shealth;
            playa = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >=1337)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        for(new i = 0; i < sizeof(AdmInfo); i++)
                        {
                            if(PlayerInfo[playa][pAdmin] == 0)
                            {
                                AdmsVaga();
                                if(VagaSobrando == 0) { SendClientMessage(playerid, COLOR_GRAD1, "Não há mais vagas na lista use /limparadm primeiro."); return 1; }
                                if(strcmp(AdmInfo[i][gMembro],"Vazio",true) == 0)
                                {
                                    PlayerInfo[playa][pAdmin] = 1;
                                    AdmInfo[i][gMembro] = giveplayer;
                                    AdmInfo[i][AdminAtivo] = 1;
                                    ModoTrabalho(playa, 1);
                                    break;
                                }
                            }
                        }
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if (strcmp("/infoadm", cmdtext, true, 10) == 0 || strcmp("/infoadmin", cmdtext, true, 10) == 0 || strcmp("/infoadmins", cmdtext, true, 10) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] < 1339)
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para usar esse comando.");
            return 1;
        }
        new lol = 0;
        new arquivo[64];
        SendClientMessage(playerid, 0x0000FFAA, "~~>{00FFFF} Brasil PlayGamer Administração {0000FF}<~~");
        while (lol < sizeof(AdmInfo))
        {
            format(arquivo, sizeof(arquivo), OpenAccPlayer,AdmInfo[lol][gMembro]);
            format(string, sizeof(string), "Admin %d: %s, Nivel: %d - Data: %d/%d/%d - Hora: %d:%d:%d", lol, AdmInfo[lol][gMembro],dini_Int(arquivo,"AdminLevel"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, 0xFF80FFFF, string);
            lol++;
        }
        return 1;
    }
    if (strcmp(cmd, "/limpartodosadmins", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] < 3000)
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para usar esse comando.");
            return 1;
        }
        new lol = 0;
        SendClientMessage(playerid, 0x0000FFAA, "~~>{00FFFF} Brasil PlayGamer Administração {0000FF}<~~");
        while (lol < sizeof(AdmInfo))
        {
            strmid(AdmInfo[lol][gMembro], "Vazio", 0, strlen("Vazio"), 255);
            AdmInfo[lol][AdminAtivo] = 0;
            format(string, sizeof(string), "Vaga Admin ID: %d, Limpa com Sucesso!", lol);
            SendClientMessage(playerid, 0xFF80FFFF, string);
            lol++;
        }
        //SaveAdm();
        return 1;
    }
    if(strcmp(cmd, "/limparadmin", true) == 0 || strcmp(cmd, "/limparadm", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] < 1339)
        {
            SendClientMessage(playerid, COLOR_GRAD2, "Você não está autorizado a usar este comando!");
            return 1;
        }
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_GRAD2, "USE: /limparadm [ Vaga ]");
            return 1;
        }
        new length = strlen(cmdtext);
        while ((idx < length) && (cmdtext[idx] <= ' '))
        {
          idx++;
        }
        new offset = idx;
        new result[100];
        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
        {
            result[idx - offset] = cmdtext[idx];
            idx++;
        }
        result[idx - offset] = EOS;
        if(!strlen(result))
        {
            SendClientMessage(playerid, COLOR_GRAD2, "USE: /limparadmin [ID da Vaga] [Motivo]");
            return 1;
        }
        new Vagao = strval(tmp), idpl, str[64];
        if(Vagao < 0 || Vagao > 25) { SendClientMessage(playerid, COLOR_GREY, "Vaga mínima 0 máximo 25!"); return 1; }
        if(IsPlayerOnline(AdmInfo[Vagao][gMembro]))
        {
            idpl=GetPlayerID(AdmInfo[Vagao][gMembro]);
            ModoTrabalho(idpl, 2);
            PlayerInfo[idpl][pAdmin] = 0;
            format(string, sizeof(string), "[BPG SERVER]:{FF0000} Você Foi Retirado da Staff Motivo: %s",result);
            SendClientMessage(idpl, 0x0000FFAA, string);
        }
        else
        {
            format(str, sizeof(str), "Agendados/ADM%s.ini",AdmInfo[Vagao][gMembro]);
            dini_Create(str);
            dini_Set(str,"Nome",PlayerName(playerid));
            dini_Set(str,"Motivo",result);
        }
        strmid(AdmInfo[Vagao][gMembro], "Vazio", 0, strlen("Vazio"), 255);
        AdmInfo[Vagao][AdminAtivo] = 0;
        //SaveAdm();
        format(string, sizeof(string), "Você Limpou A Vaga Nº %d, Motivo: %s ",Vagao,result);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
        return 1;
    }
    if(strcmp(cmd, "/criarhelper", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 1338)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para usar esse comando.");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            new para1;
            new level;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /CriarHelper [id] [Nivel]");
                return 1;
            }
            level = strval(tmp);
            GetPlayerName(para1, giveplayer, sizeof(giveplayer));
            GetPlayerName(playerid, sendername, sizeof(sendername));
            format(string, sizeof(string), "   Você foi promovido para level  %d de Helper - Por %s", level, sendername);
            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
            format(string, sizeof(string), "   Você promoveu o(a) %s Para o level %d de Helper.", giveplayer,level);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            if(IsPlayerConnected(para1))
            {
                if(para1 != INVALID_PLAYER_ID)
                {
                    for(new i = 1; i <= sizeof(HelpInfo); i++)
                    {
                        if(PlayerInfo[para1][pHelper] > 0)
                        {
                            if(strcmp(HelpInfo[i][gMembro],PlayerName(para1),true) == 0)
                            {
                                PlayerInfo[para1][pHelper] = level;
                                break;
                            }
                            else if(level == 0)
                            {
                                if(strcmp(HelpInfo[i][gMembro],PlayerName(para1),true) == 0)
                                {
                                    strmid(HelpInfo[i][gMembro], "Vazio", 0, strlen("Vazio"), 255);
                                    PlayerInfo[para1][pHelper] = 0;
                                    HelpInfo[i][HelperAtivo] = 0;
                                    break;
                                }
                                PlayerInfo[para1][pHelper] = level;
                            }
                            //SaveHelp();
                            return 1;
                        }
                        else if(PlayerInfo[para1][pHelper] == 0)
                        {
                            HelpsVaga();
                            if(VagaSobrando == 0) { SendClientMessage(playerid, COLOR_GRAD1, "Não há mais vagas na lista use /limparhelper primeiro."); return 1; }
                            if(strcmp(HelpInfo[i][gMembro],"Vazio",true) == 0)
                            {
                                PlayerInfo[para1][pHelper] = level;
                                HelpInfo[i][HelperAtivo] = 1;
                                HelpInfo[i][gMembro] = giveplayer;
                                //SaveHelp();
                                break;
                            }
                        }
                    }
                }
            }
        }
        return 1;
    }
    if (strcmp("/infohelp", cmdtext, true, 10) == 0 || strcmp("/infoHelper", cmdtext, true, 10) == 0 || strcmp("/infoHelpers", cmdtext, true, 10) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] < 1337)
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para usar esse comando.");
            return 1;
        }
        new lol = 0;
        new arquivo[64];
        SendClientMessage(playerid, 0x0000FFAA, "~~>{00FFFF} Brasil PlayGamer Helpers {0000FF}<~~");
        while (lol < sizeof(HelpInfo))
        {
            format(arquivo, sizeof(arquivo), OpenAccPlayer,HelpInfo[lol][gMembro]);
            format(string, sizeof(string), "Helper %d: %s, Nivel: %d - Data: %d/%d/%d - Hora: %d:%d:%d", lol, HelpInfo[lol][gMembro],dini_Int(arquivo,"HelpLevel"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
            SendClientMessage(playerid, COR_HELPER, string);
            lol++;
        }
        return 1;
    }
    if (strcmp(cmd, "/limpartodoshelpers", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] < 3000)
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para usar esse comando.");
            return 1;
        }
        new lol = 0;
        SendClientMessage(playerid, 0x0000FFAA, "~~>{00FFFF} Brasil PlayGamer Helpers {0000FF}<~~");
        while (lol < sizeof(HelpInfo))
        {
            strmid(HelpInfo[lol][gMembro], "Vazio", 0, strlen("Vazio"), 255);
            format(string, sizeof(string), "Vaga Helper ID: %d, Limpa com Sucesso!", lol);
            SendClientMessage(playerid, 0xFF80FFFF, string);
            HelpInfo[lol][HelperAtivo] = 0;
            lol++;
        }
        //SaveHelp();
        return 1;
    }
    if(strcmp(cmd, "/limparHelper", true) == 0 || strcmp(cmd, "/limparhelp", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] < 1338)
        {
            SendClientMessage(playerid, COLOR_GRAD2, "Você não está autorizado a usar este comando!");
            return 1;
        }
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_GRAD2, "USE: /limparhelper [ Vaga ]");
            return 1;
        }
        new length = strlen(cmdtext);
        while ((idx < length) && (cmdtext[idx] <= ' '))
        {
          idx++;
        }
        new offset = idx;
        new result[100];
        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
        {
            result[idx - offset] = cmdtext[idx];
            idx++;
        }
        result[idx - offset] = EOS;
        if(!strlen(result))
        {
            SendClientMessage(playerid, COLOR_GRAD2, "USE: /limparhelper [ID da Vaga] [Motivo]");
            return 1;
        }
        new Vagao = strval(tmp), idpl, str[64];
        if(Vagao < 1 || Vagao > 25) { SendClientMessage(playerid, COLOR_GREY, "Vaga mínima 1 máximo 25!"); return 1; }
        if(IsPlayerOnline(HelpInfo[Vagao][gMembro]))
        {
            idpl=GetPlayerID(HelpInfo[Vagao][gMembro]);
            PlayerInfo[idpl][pHelper] = 0;
            format(string, sizeof(string), "[BPG SERVER]:{FF0000} Você Foi Retirado os Helpers Motivo: %s",result);
            SendClientMessage(idpl, 0x0000FFAA, string);
        }
        else
        {
            format(str, sizeof(str), "Agendados/HELP%s.ini",HelpInfo[Vagao][gMembro]);
            dini_Create(str);
            dini_Set(str,"Nome",PlayerName(playerid));
            dini_Set(str,"Motivo",result);
        }
        HelpInfo[Vagao][HelperAtivo] = 1;
        strmid(HelpInfo[Vagao][gMembro], "Vazio", 0, strlen("Vazio"), 255);
        //SaveHelp();
        format(string, sizeof(string), "Você Limpou A Vaga Nº %d de Helper, Motivo: %s",Vagao, result);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
        return 1;
    }
    if (strcmp("/infovip", cmdtext, true, 10) == 0 || strcmp("/infovips", cmdtext, true, 10) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] < 1)
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para usar esse comando.");
            return 1;
        }
        new arquivo[64],RankVip2[32];
        SendClientMessage(playerid, 0x14B5EBFF, "~~>{00FFFF} Brasil PlayGamer RPG Vips {14B5EB}<~~");
        for(new x=0; x<sizeof(VipInfo); x++)
        {
            if(strcmp(VipInfo[x][vNick],"Ninguem",true) != 0)
            {
                format(arquivo, sizeof(arquivo), OpenAccPlayer,VipInfo[x][vNick]);
                new NivelVip = dini_Int(arquivo,"DonateRank");
                if(NivelVip == 0) { RankVip2 = "Gratis"; }
                else if(NivelVip == 1) { RankVip2 = "Vip Normal"; }
                else if(NivelVip >= 2) { RankVip2 = "Super VIP"; }
                //else if(NivelVip == 3) { RankVip2 = "Vip Ouro"; }
                format(string, sizeof(string), "Vip Vaga ID:[%d] %s Tipo: %s, Vencimento: %s.",
                x, VipInfo[x][vNick], RankVip2, VipInfo[x][vVencimento]);
                SendClientMessage(playerid, -1, string);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/darvip", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 3000)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para usar esse comando.");
                return 1;
            }
            VipVaga();
            if(VagaSobrando == 0)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Não há mais vagas na lista use /limparvip primeiro.");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /darvip [id] [Nivel] [Quantidade de Meses]");
                return 1;
            }
            new para1;
            new level;
            new mesesvip;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /darvip [id] [Nivel] [Quantidade de Meses]");
                return 1;
            }
            level = strval(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /darvip [id] [Nivel] [Quantidade de Meses]");
                return 1;
            }
            mesesvip = strval(tmp);
            GetPlayerName(para1, giveplayer, sizeof(giveplayer));
            GetPlayerName(playerid, sendername, sizeof(sendername));
            if(IsPlayerConnected(para1))
            {
                if(para1 != INVALID_PLAYER_ID)
                {
                    if(level == 1)
                    {
                        SetarVip(para1, level, mesesvip,1);
                    }
                    else if(level == 2)
                    {
                        SetarVip(para1, level, mesesvip,1);
                    }
                    SalvarPlayer(para1);
                    SaveVip();
                }
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/dvip", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 3000)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para usar esse comando.");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
    SendClientMessage(playerid, COLOR_GRAD1, "USE: /dvip [id] [Nivel] [Meses]");
                return 1;
            }
            new para1;
            para1 = ReturnUser(tmp);
                                tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "USE: /dvip [id] [Nivel] [Meses]");
                        return 1;
                    }
                    new vaga;
                    vaga = strval(tmp);
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
      SendClientMessage(playerid, COLOR_GRAD1, "USE: /dvip [id] [Nivel] [Meses]");
                        return 1;
                    }
                    new level;
                    level = strval(tmp);
            GetPlayerName(para1, giveplayer, sizeof(giveplayer));
            if(IsPlayerConnected(para1))
            {
                if(para1 != INVALID_PLAYER_ID)
                {
                    format(string, sizeof string, "Você Desbugou o  VIP Nível %d para %s com %d Meses", vaga, giveplayer, level);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    if(level == 1)
                    {
                        SetarVip(para1, vaga, level,2);
                    }
                    else if(level == 2)
                    {
                        SetarVip(para1, vaga, level,2);
                    }
                    SalvarPlayer(para1);
                    SaveVip();
                }
            }
        }
        return 1;
    }
    if (strcmp("/limparvip", cmdtext, true, 10) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] < 3000)
        {
            SendClientMessage(playerid, COLOR_GRAD2, "Você não está autorizado a usar este comando!");
            return 1;
        }
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_GRAD2, "USE: /limparvip [Vaga]");
            return 1;
        }
        new Vagao = strval(tmp);
        if(Vagao < 0 || Vagao > 50) { SendClientMessage(playerid, COLOR_GREY, "Vaga mínima 0 máximo 50!"); return 1; }
        getdate(year, month, day);
        format(VipInfo[Vagao][vVencimento],32, "%d/%d/%d",day,month,year);
        format(string, sizeof(string), "Você Limpou A Vaga VIP Nº %d",Vagao);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
        CheckVip();
        //if(IsPlayerOnline(VipInfo[Vagao][vNick])) StatusPlayer(6,playerid);
        return 1;
    }
    if (strcmp("/mudarluta", cmdtext, true) == 0)
    {
        if(IsPlayerInRangeOfPoint(playerid, 2.0, 768.2192,-3.9873,1000.7203))
        {
            TogglePlayerControllable(playerid, 0);
            ShowPlayerDialog(playerid, DIALOGID2, DIALOG_STYLE_LIST, "BPG Estilos De Luta", "Cotoveladas\nBoxe\nRua\nKickBoxing\nKarate\nNormal", "Confirma", "Cancela");
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, " Voce não está no ginásio de luta de LS.");
        }
        return 1;
    }
    if(strcmp(cmd,"/assaltar",true)==0)
    {
        if(PlayerInfo[playerid][pJailed] != 0 || PlayerPaintballing[playerid] != 0)
        {
           SendClientMessage(playerid,COLOR_YELLOW," Você não assaltar agora!");
           return 1;
        }
        if(PlayerInfo[playerid][pMembro] != 5 && PlayerInfo[playerid][pLider] != 5 && PlayerInfo[playerid][pMembro] != 14 && PlayerInfo[playerid][pLider] != 14
        && PlayerInfo[playerid][pMembro] != 17 && PlayerInfo[playerid][pLider] != 17 && PlayerInfo[playerid][pMembro] != 18 && PlayerInfo[playerid][pLider] != 18
        && PlayerInfo[playerid][pMembro] != 19 && PlayerInfo[playerid][pLider] != 19 && PlayerInfo[playerid][pMembro] != 20 && PlayerInfo[playerid][pLider] != 20
        && PlayerInfo[playerid][pMembro] != 21 && PlayerInfo[playerid][pLider] != 21 && PlayerInfo[playerid][pMembro] == 22 && PlayerInfo[playerid][pLider] == 22
        && PlayerInfo[playerid][pMembro] == 23 && PlayerInfo[playerid][pLider] == 23 && PlayerInfo[playerid][pMembro] == 25 && PlayerInfo[playerid][pLider] == 25
        && PlayerInfo[playerid][pMembro] == 34 && PlayerInfo[playerid][pLider] == 34 && PlayerInfo[playerid][pMembro] == 36 && PlayerInfo[playerid][pLider] == 36 && PlayerInfo[playerid][pMembro] != 29 && PlayerInfo[playerid][pLider] != 29)
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não pode usar esse comando!" );
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            if(UsouComando[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Você já usou esse comando uma vez, espere mais 5 minutos!");
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /assaltar [id] [Quantia]");
                return 1;
            }
            //giveplayerid = strval(tmp);
            giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /assaltar [id] [Quantia]");
                return 1;
            }
            new money = strval(tmp);
            if(money < 1000 || money > 50000) { SendClientMessage(playerid, COLOR_GREY, " O Preço Tem que ser entre R$ 1000 e R$ 50000!"); return 1; }
            if (IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(PlayerInfo[giveplayerid][pLevel] == 2)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Você não pode assaltar novatos!");
                        return 1;
                    }
                    if (ProxDetectorS(5.0, playerid, giveplayerid))
                    {
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* Você está assaltando $%d de %s.", money, giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* %s: Isso é um assalto,pague $%d! não seja Ant-RPG.", sendername, money);
                        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "/aceitar assalto para aceitar");
                        format(string, sizeof(string), "*%s está assaltando %s!", sendername,giveplayer);
                        ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        OfAssalto[giveplayerid] = playerid;
                        precoassalto[giveplayerid] = money;
                        SetPlayerCriminal(playerid,255, "Tentativa de Assalto");
                        UsouComando[playerid] = 1;
                        SetTimerEx("UsarNovamente",300000,0,"d",playerid);
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Esse jogador não está perto de você!");
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   ID/Nome Invalido !");
                    return 1;
                }
            }
        }
        return 1;
    }
//=======================[NOVO ROUBAR]========================
    if(strcmp(cmd,"/roubar",true)==0)
    {
        if(PlayerInfo[playerid][pMembro] != 5 && PlayerInfo[playerid][pLider] != 5
        /*&& PlayerInfo[playerid][pMembro] != 8 && PlayerInfo[playerid][pLider] != 8*/
        /*&& PlayerInfo[playerid][pMembro] != 24 && PlayerInfo[playerid][pLider] != 24*/
        && PlayerInfo[playerid][pMembro] != 14 && PlayerInfo[playerid][pLider] != 14
        && PlayerInfo[playerid][pMembro] != 17 && PlayerInfo[playerid][pLider] != 17
        && PlayerInfo[playerid][pMembro] != 18 && PlayerInfo[playerid][pLider] != 18
        && PlayerInfo[playerid][pMembro] != 19 && PlayerInfo[playerid][pLider] != 19
        && PlayerInfo[playerid][pMembro] != 20 && PlayerInfo[playerid][pLider] != 20
        && PlayerInfo[playerid][pMembro] != 21 && PlayerInfo[playerid][pLider] != 21
        && PlayerInfo[playerid][pMembro] != 22 && PlayerInfo[playerid][pLider] != 22
        && PlayerInfo[playerid][pMembro] != 23 && PlayerInfo[playerid][pLider] != 23
        && PlayerInfo[playerid][pMembro] != 25 && PlayerInfo[playerid][pLider] != 25
        && PlayerInfo[playerid][pMembro] != 26 && PlayerInfo[playerid][pLider] != 26
        && PlayerInfo[playerid][pMembro] != 27 && PlayerInfo[playerid][pLider] != 27
        && PlayerInfo[playerid][pMembro] != 29 && PlayerInfo[playerid][pLider] != 29
        && PlayerInfo[playerid][pMembro] != 34 && PlayerInfo[playerid][pLider] != 34
        && PlayerInfo[playerid][pMembro] != 30 && PlayerInfo[playerid][pLider] != 30
        && PlayerInfo[playerid][pMembro] != 31 && PlayerInfo[playerid][pLider] != 31
        && PlayerInfo[playerid][pMembro] != 35 && PlayerInfo[playerid][pLider] != 35
        && PlayerInfo[playerid][pMembro] != 36 && PlayerInfo[playerid][pLider] != 36
        && PlayerInfo[playerid][pMembro] != 29 && PlayerInfo[playerid][pLider] != 29
        && GetPlayerOrg(playerid) != 6 && GetPlayerOrg(playerid) != 12
        && GetPlayerOrg(playerid) != 13 && GetPlayerOrg(playerid) != 15)
        {
            SendClientMessage(playerid,COLOR_GREY,"Você não pode assaltar um Banco/Loterica/Loja de Armas 1, 2");
            return 1;
        }
        if(roubando[playerid] == 1)
        {
            SendClientMessage(playerid, COLOR_GRAD5, "Você ja está roubando algum lugar.");
            return 1;
        }
        if(PlayerToPoint(1.0,playerid, 2306.5127,-6.1166,26.7422))
        {
            if(roubobanco == 1)
            {
                SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma tentativa de roubo nesse cofre.");
                return 1;
            }
            if(temporoubobanco == 1)
            {
                SendClientMessage(playerid,COLOR_GREY,"Já roubaram o cofre do banco espere 3 minutos para roubar de novo !");
                return 1;
            }
            //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayGamer Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
            GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            format(string, sizeof(string), "%s e os %s estão tentando roubar o cofre banco! ID:[%d]", playername, NomeORG(playerid) , playerid);
            SendClientMessageToAll(GetPlayerColor(playerid), string);
            SendClientMessage(playerid, COLOR_GRAD5, "Espere 40 segundos para terminar de roubar o banco.");
            SetPlayerCriminal(playerid,255, "Tentativa de Roubo ao Banco");
            roubando[playerid] = 1;
            ProvocoBanco[playerid] = 1;
            roubobanco = 1;
            temporoubobanco = 1;
            SetTimer("Aroubo", 220000, 0);
            tempobanco = SetTimerEx("RouboBanco", 40000, 0, "i", playerid);
            return 1;
        }
        else if(PlayerToPoint(1.0,playerid,820.6042,8.3990,1004.1962))
        {
            if(roubolot == 1)
            {
                SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma tentativa de roubo nesse cofre.");
                return 1;
            }
            if(temporoubolot == 1)
            {
                SendClientMessage(playerid,COLOR_GREY,"Já roubaram o cofre da Lotérica espere 3 minutos para roubar de novo !");
                return 1;
            }
            GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayGamer Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
            format(string, sizeof(string), "%s e os %s estão tentando roubar o cofre da Lotérica! ID:[%d]", playername, NomeORG(playerid) , playerid);
            SendClientMessageToAll(GetPlayerColor(playerid), string);
            SendClientMessage(playerid, COLOR_GRAD5, "Espere 40 segundos para terminar de roubar a Lotérica.");
            SetPlayerCriminal(playerid,255, "Tentativa de Roubo a Lotérica");
            roubando[playerid] = 1;
            ProvocoLot[playerid] = 1;
            roubolot = 1;
            temporoubolot = 1;
            SetTimer("Aroubo2", 220000, 0);
            tempolot = SetTimerEx("RouboLot", 40000, 0, "i", playerid);
            return 1;
        }
        else if(PlayerToPoint(3.0,playerid,381.5648,-188.1646,1000.6328))
        {
            if(rouboposto == 1)
            {
                SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma tentativa de roubo nesse cofre.");
                return 1;
            }
            if(temporouboposto == 1)
            {
                SendClientMessage(playerid,COLOR_GREY,"Já roubaram o cofre do Posto espere 3 minutos para roubar de novo !");
                return 1;
            }
            GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayGamer Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
            format(string, sizeof(string), "%s e os %s estão tentando roubar o cofre do Posto de Gasolina Abandonado! ID:[%d]", playername, NomeORG(playerid) , playerid);
            SendClientMessageToAll(GetPlayerColor(playerid), string);
            SendClientMessage(playerid, COLOR_GRAD5, "Espere 40 segundos para terminar de roubar o Posto de Gasolina.");
            SetPlayerCriminal(playerid,255, "Tentativa de Roubo ao Posto");
            roubando[playerid] = 1;
            ProvocoPostoGas[playerid] = 1;
            rouboposto = 1;
            temporouboposto = 1;
            SetTimer("Aroubo6", 220000, 0);
            tempoposto = SetTimerEx("RouboPosto", 40000, 0, "i", playerid);
            return 1;
        }
        else if(PlayerToPoint(1.0,playerid,2169.1516,1589.9265,999.9713))
        {
            if(rouboloja1 == 1)
            {
                SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma tentativa de roubo nessa loja.");
                return 1;
            }
            if(temporouboloja1 == 1)
            {
                SendClientMessage(playerid,COLOR_GREY,"Já roubaram a Loja de Armas 1 espere 3 minutos para roubar de novo !");
                return 1;
            }
            GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayGamer Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
            format(string, sizeof(string), "%s e os %s estão tentando roubar a Loja de Armas 1! ID:[%d]", playername, NomeORG(playerid) , playerid);
            SendClientMessageToAll(GetPlayerColor(playerid), string);
            SendClientMessage(playerid, COLOR_GRAD5, "Espere 40 segundos para terminar de roubar a Loja de Armas 1.");
            SetPlayerCriminal(playerid,255, "Tentativa de Roubo a Loja de Armas 1");
            roubando[playerid] = 1;
            ProvocoLoja1[playerid] = 1;
            rouboloja1 = 1;
            temporouboloja1 = 1;
            SetTimer("Aroubo3", 220000, 0);
            tempoloja1 = SetTimerEx("RouboLoja1", 40000, 0, "i", playerid);
            return 1;
        }
        else if(PlayerToPoint(1.0,playerid,451.3090,-79.8603,999.5547))
        {
            if(rouboloja2 == 1)
            {
                SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma tentativa de roubo nessa loja.");
                return 1;
            }
            if(temporouboloja2 == 1)
            {
                SendClientMessage(playerid,COLOR_GREY,"Já roubaram a Loja de Armas 2 espere 3 minutos para roubar de novo !");
                return 1;
            }
            GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayGamer Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
            format(string, sizeof(string), "%s e os %s estão tentando roubar a Loja de Armas 2! ID:[%d]", playername, NomeORG(playerid) , playerid);
            SendClientMessageToAll(GetPlayerColor(playerid), string);
            SendClientMessage(playerid, COLOR_GRAD5, "Espere 40 segundos para terminar de roubar a Loja de Armas 2.");
            SetPlayerCriminal(playerid,255, "Tentativa de Roubo a Loja de Armas 2");
            roubando[playerid] = 1;
            ProvocoLoja2[playerid] = 1;
            rouboloja2 = 1;
            temporouboloja2 = 1;
            SetTimer("Aroubo4", 220000, 0);
            tempoloja2 = SetTimerEx("RouboLoja2", 40000, 0, "i", playerid);
            return 1;
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não esta em um Banco/Loterica/Loja de Armas 1, 2 !");
            return 1;
        }
        //return 1;
    }
    //CREEEEEEEEEEEEEEEEEEEEEUUUUUUUUUUUUUUUUUU
    if(strcmp(cmd, "/creu", true) == 0 || strcmp(cmd, "/créu", true) == 0)
    {
        if( IsPlayerInAnyVehicle( playerid ) ) return true;
        GetPlayerName(playerid, sendername, sizeof(sendername));
        format(string, sizeof(string), "* %s está dançando o Créu BPG !.", sendername);
        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        ApplyAnimation(playerid,"CHOPPA","CHOPPA_back",4.1,1,1,1,1,1);
        SendClientMessage(playerid, COLOR_DBLUE, "ÉÉÉÉ Crééééééu BPG OWNA xD!");
        return 1;
    }
// praia
    if (strcmp("/praia", cmdtext, true, 10) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
                }
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, 229.359,-1807.635,4.141); LinkVehicleToInterior(tmpcar, 0);
                }
                else
                {
                    SetPlayerInterior(playerid,0);
                    SetPlayerVirtualWorld(playerid,0);
                    SetPlayerPos(playerid,229.359,-1807.635,4.141);
                    SetPlayerFacingAngle(playerid,226.0);
                }
                SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!!");
            }
        }
        return 1;
    }
    if (strcmp("/irtunning", cmdtext, true, 10) == 0 || strcmp("/tunning", cmdtext, true, 10) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 4)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
                }
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, -2692.8701,211.2929,4.3281); LinkVehicleToInterior(tmpcar, 0);
                }
                else
                {
                    SetPlayerInterior(playerid,0);
                    SetPlayerVirtualWorld(playerid,0);
                    SetPlayerPos(playerid,-2692.8701,211.2929,4.3281);
                    SetPlayerFacingAngle(playerid,226.0);
                }
                SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!!");
            }
        }
        return 1;
    }
    if (strcmp("/fim", cmdtext, true, 10) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
                }
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, -2415.3999,2219.0083,4.9844); LinkVehicleToInterior(tmpcar, 0);
                }
                else
                {
                    SetPlayerInterior(playerid,0);
                    SetPlayerVirtualWorld(playerid,0);
                    SetPlayerPos(playerid,-2415.3999,2219.0083,4.9844);
                    SetPlayerFacingAngle(playerid,226.0);
                }
                SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!!");
            }
        }
        return 1;
    }
    if (strcmp("/Morro", cmdtext, true, 10) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
                }
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, 2200.8242,-987.0011,67.3281); LinkVehicleToInterior(tmpcar, 0);
                }
                else
                {
                    SetPlayerInterior(playerid,0);
                    SetPlayerVirtualWorld(playerid,0);
                    SetPlayerPos(playerid,2200.8242,-987.0011,67.3281);
                    SetPlayerFacingAngle(playerid,226.0);
                }
                SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!!");
            }
        }
        return 1;
    }
    if (strcmp("/irposto", cmdtext, true, 10) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1338)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
                }
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, -91.4212,-1169.1992,2.4298); LinkVehicleToInterior(tmpcar, 0);
                }
                else
                {
                    SetPlayerInterior(playerid,0);
                    SetPlayerVirtualWorld(playerid,0);
                    SetPlayerPos(playerid,-91.4212,-1169.1992,2.4298);
                    SetPlayerFacingAngle(playerid,226.0);
                }
                SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!!");
            }
        }
        return 1;
    }
    if (strcmp("/prefeitura", cmdtext, true, 10) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 4)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, 370.1895,187.5482,1008.3893); LinkVehicleToInterior(tmpcar, 0);
                    LinkVehicleToInterior(tmpcar, 3);
                }
                else
                {
                    SetPlayerInterior(playerid,3);
                    SetPlayerVirtualWorld(playerid,0);
                    SetPlayerPos(playerid,370.1895,187.5482,1008.3893);
                    SetPlayerFacingAngle(playerid,2.2534);
                }
                SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!!");
            }
        }
        return 1;
    }
    if (strcmp("/spawn", cmdtext, true, 10) == 0 || strcmp("/nascimento", cmdtext, true, 10) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
            {
                if(admtrampando[playerid] < 1 && helptrampando[playerid] < 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "Você não está ajudando! (/helpajuda)");
                    return 1;
                }
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, 1726.9946,-1635.9073,20.2168); LinkVehicleToInterior(tmpcar, 0);
                    SetPlayerInterior(playerid,0);
                    SetPlayerVirtualWorld(playerid,0);
                }
                else
                {
                    SetPlayerInterior(playerid,0);
                    SetPlayerVirtualWorld(playerid,0);
                    SetPlayerPos(playerid,1726.9946,-1635.9073,20.2168);
                    SetPlayerFacingAngle(playerid,2.7415);
                }
                SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/descricao", true) == 0 && PlayerInfo[playerid][pAdmin] == 3000)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_WHITE, "|______________ Editar ______________|");
                SendClientMessage(playerid, COLOR_WHITE, "USE: /descricao [nome] (Use para casas e empresas)");
                return 1;
            }
            for(new i = 0; i < sizeof(HouseInfo); i++)
            {
                if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
                {
                    format(string, sizeof(string), "Descrição da Casa: %d mudada para %s", i, tmp);
                    SendClientMessage(playerid, COLOR_GRAD2, string);
                    strmid(HouseInfo[i][hDiscription], tmp, 0, strlen(tmp), 255);
                }
            }
            for(new i = 0; i < sizeof(BizzInfo); i++)
            {
                if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
                {
                    format(string, sizeof(string), "Descrição da Empresa(Empresa com interior): %d mudada para %s", i, tmp);
                    SendClientMessage(playerid, COLOR_GRAD2, string);
                    strmid(BizzInfo[i][bMessage], tmp, 0, strlen(tmp), 255);
                }
            }
            for(new i = 0; i < sizeof(SBizzInfo); i++)
            {
                if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
                {
                    format(string, sizeof(string), "Descrição da Empresa(Empresa sem interior): %d mudada para %s", i, tmp);
                    SendClientMessage(playerid, COLOR_GRAD2, string);
                    strmid(SBizzInfo[i][sbMessage], tmp, 0, strlen(tmp), 255);
                }
            }
            a3d();
            SalvarTudo();
        }
        return 1;
    }
    if(strcmp(cmd,"/trazersemp",true)==0  && PlayerInfo[playerid][pAdmin] == 3000)
    {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid,COLOR_GREY,"USE: /trazersemp [ID]");
         return 1;
        }
        new idsemp = strval(tmp);
        new Float:x, Float:y, Float:z;
        GetPlayerPos(playerid, x, y, z);
        SBizzInfo[idsemp][sbEntranceX] = x;
        SBizzInfo[idsemp][sbEntranceY] = y;
        SBizzInfo[idsemp][sbEntranceZ] = z;
  return 1;
    }
    if(strcmp(cmd,"/trazeremp",true)==0  && PlayerInfo[playerid][pAdmin] == 3000)
    {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid,COLOR_GREY,"USE: /trazeremp [ID]");
         return 1;
        }
        new idemp = strval(tmp);
        new Float:x, Float:y, Float:z;
        GetPlayerPos(playerid, x, y, z);
        BizzInfo[idemp][bEntranceX] = x;
        BizzInfo[idemp][bEntranceY] = y;
        BizzInfo[idemp][bEntranceZ] = z;
  return 1;
    }
    if(strcmp(cmd,"/trazercasa",true)==0  && PlayerInfo[playerid][pAdmin] == 3000)
    {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid,COLOR_GREY,"USE: /trazercasa [ID]");
         return 1;
        }
        new idcasa = strval(tmp);
        new Float:x, Float:y, Float:z;
        GetPlayerPos(playerid, x, y, z);
        HouseInfo[idcasa][hEntrancex] = x;
        HouseInfo[idcasa][hEntrancey] = y;
        HouseInfo[idcasa][hEntrancez] = z;
  return 1;
    }
    if(strcmp(cmd,"/mudarcasa",true)==0)
    {
        new House = PlayerInfo[playerid][pPHousekey];
        GetPlayerName(playerid, playername, sizeof(playername));
        if (House != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
        {
            tmp = strtok(cmdtext, idx);
            if(HouseEntered[playerid] != 9999)
            {
                SendClientMessage(playerid,COLOR_GREY,"Você não pode usar esse comando dentro de uma casa");
                return 1;
            }
            if(GetPlayerMoneyEx(playerid) < 10000)
            {
                SendClientMessage(playerid, COLOR_GRAD5, "Você não tem dinheiro suficiente R$10000");
                return 1;
            }
            if(!strlen(tmp))
            {
                SendClientMessage(playerid,COLOR_GREY,"USE: /mudarcasa [1 a 10]");
                return 1;
            }
            new idcasa = strval(tmp);
            switch (idcasa)
            {
                case 1:
                {
                    HouseInfo[House][hExitx] = 2467.4951;
                    HouseInfo[House][hExity] = -1698.4037;
                    HouseInfo[House][hExitz] = 1013.5078;
                    HouseInfo[House][hInt] = 2;
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 1.");
                }
                case 2:
                {
                    HouseInfo[House][hExitx] = 318.564971;
                    HouseInfo[House][hExity] = 1118.209960;
                    HouseInfo[House][hExitz] = 1083.882812;
                    HouseInfo[House][hInt] = 5;
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 2.");
                }
                case 3:
                {
                    HouseInfo[House][hExitx] = 2324.419921;
                    HouseInfo[House][hExity] = -1145.568359;
                    HouseInfo[House][hExitz] = 1050.710083;
                    HouseInfo[House][hInt] = 12;
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 3.");
                }
                case 4:
                {
                    HouseInfo[House][hExitx] = 235.508994;
                    HouseInfo[House][hExity] = 1189.169897;
                    HouseInfo[House][hExitz] = 1080.339966;
                    HouseInfo[House][hInt] = 3;
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 4.");
                }
                case 5:
                {
                    HouseInfo[House][hExitx] = 225.756989;
                    HouseInfo[House][hExity] = 1240.000000;
                    HouseInfo[House][hExitz] = 1082.149902;
                    HouseInfo[House][hInt] = 2;
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 5.");
                }
                case 6:
                {
                    HouseInfo[House][hExitx] = 223.043991;
                    HouseInfo[House][hExity] = 1289.259888;
                    HouseInfo[House][hExitz] = 1082.199951;
                    HouseInfo[House][hInt] = 1;
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 6.");
                }
                case 7:
                {
                    HouseInfo[House][hExitx] = 225.630997;
                    HouseInfo[House][hExity] = 1022.479980;
                    HouseInfo[House][hExitz] = 1084.069946;
                    HouseInfo[House][hInt] = 7;
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 7.");
                }
                case 8:
                {
                    HouseInfo[House][hExitx] = 328.493988;
                    HouseInfo[House][hExity] = 1480.589966;
                    HouseInfo[House][hExitz] = 1084.449951;
                    HouseInfo[House][hInt] = 15;
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 8.");
                }
                case 9:
                {
                    HouseInfo[House][hExitx] = 234.0843;
                    HouseInfo[House][hExity] = 1064.6896;
                    HouseInfo[House][hExitz] = 1084.2108;
                    HouseInfo[House][hInt] = 6;
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 9.");
                }
                case 10:
                {
                    HouseInfo[House][hExitx] = 260.4075;
                    HouseInfo[House][hExity] = 1238.6646;
                    HouseInfo[House][hExitz] = 1084.2578;
                    HouseInfo[House][hInt] = 9;
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 10.");
     SalvarCasa(House);
                }

            }
            GivePlayerMoney(playerid,-10000);
            SBizzInfo[13][sbTill] += 10000;
            ExtortionSBiz(13, 10000);
            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            GastarProdutos(2, 13, 3);
            return 1;
        }
        else
        {
            SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem uma casa");
            return 1;
        }
    }
//predio
    if (strcmp("/predio", cmdtext, true, 10) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, 1547.6465,-1355.1556,329.4779); LinkVehicleToInterior(tmpcar, 0);
                }
                else
                {
                    SetPlayerInterior(playerid,0);
                    SetPlayerVirtualWorld(playerid,0);
                    SetPlayerPos(playerid,1547.6465,-1355.1556,329.4779);
                    SetPlayerFacingAngle(playerid,226.0);
                }
                SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!!");
            }
        }
        return 1;
    }
 //===========================================[sequestro]==================================
    if(strcmp(cmd,"/refemsalvar",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(!IsACop(playerid))
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não pode usar este comando!");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /refemsalvar id");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if (IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if (ProxDetectorS(3.0, playerid, giveplayerid))
                    {
                        if(giveplayerid == playerid)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Você não se pode salvar a si mesmo!");
                            return 1;
                        }
                        if(Sequestrado[giveplayerid] == 0)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Este jogador não está sequestrado!");
                            return 1;
                        }
                        format(string, sizeof(string), "* Você salvou a vitima %s.",PlayerName(giveplayerid));
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* %s salvou você.",PlayerName(playerid));
                        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "[SEQUESTRO:] %s Salvou o Refem %s do sequestro, O Sequestro chega ao fim.",PlayerName(playerid),PlayerName(giveplayerid));
                        SendClientMessageToAll(COLOR_DBLUE, string);
                        Sequestrado[giveplayerid] = 0;
                        PlayerTied[giveplayerid] = 0;
                        PlayerInfo[giveplayerid][pMuted] = 0;
                        PlayerInfo[giveplayerid][pInt] = 0;
                        SetPlayerInterior(giveplayerid, 0);
                        TogglePlayerControllable(giveplayerid, 1);
                        //TempoSalvar = SetTimerEx("Salvando", 40000, 1, "i", playerid);
                        format(string, sizeof(string), "* %s Salvou %s.",PlayerName(playerid),PlayerName(giveplayerid));
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Esse jogador não perto de você!");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Esse não e um jogador ativo!");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd,"/refemliberar",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(!IsAMember(playerid) || IsAGang(playerid))
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não pode usar este comando!");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /refemliberar id");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if (IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(Sequestrado[giveplayerid] == 0)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Este jogador não está sequestrado!");
                        return 1;
                    }
                    if (ProxDetectorS(8.0, playerid, giveplayerid))
                    {
                        if(giveplayerid == playerid)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Você não se pode salvar a si mesmo!");
                            return 1;
                        }
                        format(string, sizeof(string), "* Você liberou %s.",PlayerName(giveplayerid));
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Você foi liberado pelo sequestrador %s.",PlayerName(playerid));
                        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "[SEQUESTRO:] A Vítima %s foi liberada pelo sequestrador %s, Sequestro Acabado.",PlayerName(giveplayerid),PlayerName(playerid));
                        SendClientMessageToAll(COLOR_DBLUE, string);
                        format(string, sizeof(string), "* %s Liberou %s.",PlayerName(playerid),PlayerName(giveplayerid));
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        Sequestrado[giveplayerid] = 0;
                        PlayerTied[giveplayerid] = 0;
                        PlayerInfo[giveplayerid][pMuted] = 0;
                        PlayerInfo[giveplayerid][pInt] = 0;
                        SetPlayerInterior(giveplayerid, 0);
                        TogglePlayerControllable(giveplayerid, 1);
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Esse jogador não perto de você!");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Esse não e um jogador ativo!");
                return 1;
            }
        }
        return 1;
    }
        if(strcmp(cmd, "/sequestrar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsAMember(playerid) || IsAGang(playerid))
            {
                if(PlayerInfo[playerid][pCargo] < 3)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Você precisa de cargo 3+ para amarrar!");
                    return 1;
                }
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp)) {
                    SendClientMessage(playerid, COLOR_GRAD1, "USE: /sequestrar [ID/Nome]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        if(Sequestrado[giveplayerid] == 1)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Este jogador já está sendo sequestrado!");
                            return 1;
                        }
                        if (ProxDetectorS(8.0, playerid, giveplayerid))
                        {
                            new ttext[20];
                            if(PlayerInfo[giveplayerid][pMembro] == 0) { ttext = "3000000"; }
                            if(PlayerInfo[giveplayerid][pMembro] >= 1) { ttext = "4000000"; }
                            if(PlayerInfo[giveplayerid][pLider] >= 1 && PlayerInfo[giveplayerid][pLider] != 7) { ttext = "5000000"; }
                            if(PlayerInfo[giveplayerid][pLider] == 7) { ttext = "6000000"; }
                            if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode amarrar a si mesmo!"); return 1; }
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "* Você foi sequestrado por %s.", PlayerName(playerid));
                            SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* Você está sequestrando %s.", PlayerName(giveplayerid));
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* %s está sequestrando %s.", PlayerName(playerid) ,PlayerName(giveplayerid));
                            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            GameTextForPlayer(giveplayerid, "~>~~r~SEQUESTRADO~<~", 2500, 3);
                            TogglePlayerControllable(giveplayerid, 0);
                            format(string, sizeof(string), "[SEQUESTRO:] O %s %s está Sequestrando %s, e pede resgate de R$%s.",NomeORG(playerid),PlayerName(playerid),PlayerName(giveplayerid),ttext);
                            SendClientMessageToAll(COLOR_LIGHTRED, string);
                            Sequestrado[giveplayerid] = 1;
                            PlayerTied[giveplayerid] = 0;
                            PlayerInfo[giveplayerid][pMuted] = 0;
                            PlayerInfo[giveplayerid][pInt] = 0;
                            SetPlayerInterior(giveplayerid, 0);
                            TogglePlayerControllable(giveplayerid, 1);
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Esse jogador esta longe de você!");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "Esse não é um jogador ativo!");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não é membro de uma familia!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/amarrar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsAMember(playerid) || IsAGang(playerid))
            {
                if(PlayerInfo[playerid][pCargo] < 3)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Você precisa de cargo 3+ para amarrar!");
                    return 1;
                }
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp)) {
                    SendClientMessage(playerid, COLOR_GRAD1, "USE: /amarrar [ID/Nome]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        if(PlayerTied[giveplayerid] > 0)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Jogador foi amarrado!");
                            return 1;
                        }
                        if(Sequestrado[giveplayerid] == 0)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Este jogador não está sequestrado!");
                            return 1;
                        }
                        if (ProxDetectorS(8.0, playerid, giveplayerid))
                        {
                            if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode amarrar a si mesmo!"); return 1; }
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "* Você foi amarrado por %s.", PlayerName(playerid));
                            SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* Você amarrou %s.", PlayerName(giveplayerid));
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* %s amarrou %s.", PlayerName(playerid) ,PlayerName(giveplayerid));
                            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            GameTextForPlayer(giveplayerid, "~r~Amarrado", 2500, 3);
                            TogglePlayerControllable(giveplayerid, 0);
                            PlayerTied[giveplayerid] = 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Esse jogador esta longe de você!");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "Esse não é um jogador ativo!");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não é membro de uma familia!");
            }
        }
        return 1;
            }
    if(strcmp(cmd, "/vendar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsAMember(playerid) || IsAGang(playerid))
            {
                if(PlayerInfo[playerid][pCargo] < 3)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Você precisa de cargo 3+ para amarrar!");
                    return 1;
                }
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp)) {
                    SendClientMessage(playerid, COLOR_GRAD1, "USE: /vendar [ID/Nome]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        if(PlayerTied[giveplayerid] == 0)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Este jogador não está sendo sequestrado!");
                            return 1;
                        }
                        if(Sequestrado[giveplayerid] == 0)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Este jogador não está sequestrado!");
                            return 1;
                        }
                        if (ProxDetectorS(8.0, playerid, giveplayerid))
                        {
                            if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode vendar a si mesmo!"); return 1; }
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "* Você foi vendado por %s.", PlayerName(playerid));
                            SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* Você vendou %s.", PlayerName(giveplayerid));
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* %s Vendou %s.", PlayerName(playerid) ,PlayerName(giveplayerid));
                            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            GameTextForPlayer(giveplayerid, "~r~Vendado", 2500, 3);
                            SetPlayerInterior(giveplayerid,555);
                            PlayerInfo[giveplayerid][pInt] = 555;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Esse jogador esta longe de você!");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "Esse não é um jogador ativo!");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não é membro de uma familia!");
            }
        }
        return 1;
        }
    if(strcmp(cmd, "/passarfita", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsAMember(playerid) || IsAGang(playerid))
            {
                if(PlayerInfo[playerid][pCargo] < 3)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Você precisa de cargo 3+ para amarrar!");
                    return 1;
                }
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp)) {
                    SendClientMessage(playerid, COLOR_GRAD1, "USE: /passarfita [ID/Nome]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        if(PlayerTied[giveplayerid] == 0)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Este jogador não está sendo sequestrado!");
                            return 1;
                        }
                        if(Sequestrado[giveplayerid] == 0)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Este jogador não está sequestrado!");
                            return 1;
                        }
                        if (ProxDetectorS(8.0, playerid, giveplayerid))
                        {
                            if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode vendar a si mesmo!"); return 1; }
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "* %s passou fita na sua boca.", PlayerName(playerid));
                            SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* Você passou fita na boca de %s.", PlayerName(giveplayerid));
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* %s Passou uma Fita na Boca de %s.", PlayerName(playerid) ,PlayerName(giveplayerid));
                            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            GameTextForPlayer(giveplayerid, "~>~~r~Fita Passada~<~", 2500, 3);
                            PlayerInfo[giveplayerid][pMuted] = 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Esse jogador esta longe de você!");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "Esse não é um jogador ativo!");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não é membro de uma familia!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/tirarfita", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsAMember(playerid) || IsACop(playerid) || IsAGang(playerid))
            {
                if(PlayerInfo[playerid][pCargo] < 3)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Você precisa de cargo 3+ para amarrar!");
                    return 1;
                }
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp)) {
                    SendClientMessage(playerid, COLOR_GRAD1, "USE: /tirarfita [ID/Nome]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        if(PlayerTied[giveplayerid] == 0)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Este jogador não está sendo sequestrado!");
                            return 1;
                        }
                        if(Sequestrado[giveplayerid] == 0)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Este jogador não está sequestrado!");
                            return 1;
                        }
                        if (ProxDetectorS(8.0, playerid, giveplayerid))
                        {
                            if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode vendar a si mesmo!"); return 1; }
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "* %s retirou a fita de sua boca.", PlayerName(playerid));
                            SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* Você retirou a fita da boca de %s.", PlayerName(giveplayerid));
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* %s Tirou a Fita da Boca de %s.", PlayerName(playerid) ,PlayerName(giveplayerid));
                            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            GameTextForPlayer(giveplayerid, "~>~~g~Fita Retirada~<~", 2500, 3);
                            PlayerInfo[giveplayerid][pMuted] = 0;

                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Esse jogador esta longe de você!");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "Esse não é um jogador ativo!");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não é membro de uma familia!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/desvendar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsAMember(playerid) || IsACop(playerid) || IsAGang(playerid))
            {
                if(PlayerInfo[playerid][pCargo] < 3)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Você precisa de cargo 3+ para amarrar!");
                    return 1;
                }
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp)) {
                    SendClientMessage(playerid, COLOR_GRAD1, "USE: /desvendar [ID/Nome]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        if (ProxDetectorS(8.0, playerid, giveplayerid))
                        {
                            new car = GetPlayerVehicleID(playerid);
                            if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode desvendar a si mesmo!"); return 1; }
                            if(IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(giveplayerid, car))
                            {
                                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                format(string, sizeof(string), "* Você foi desvendado por %s.", PlayerName(playerid));
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "* Você Desvendou %s.", PlayerName(giveplayerid));
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "* %s Desvendou %s.", PlayerName(playerid) ,PlayerName(giveplayerid));
                                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                GameTextForPlayer(giveplayerid, "~g~Desvendado", 2500, 3);
                                SetPlayerVirtualWorld(giveplayerid,GetPlayerVirtualWorld(playerid));
                                SetPlayerInterior(giveplayerid,GetPlayerInterior(playerid));
                                PlayerInfo[giveplayerid][pInt] = PlayerInfo[playerid][pInt];
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GREY, "Jogador não está no seu carro ou você não é o motorista!");
                                return 1;
                            }
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Esse jogador esta longe de você!");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "Esse não é um jogador ativo!");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não é membro de uma familia!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/desamarrar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsAMember(playerid) || IsACop(playerid) || IsAGang(playerid))
            {
                if(PlayerInfo[playerid][pCargo] < 3)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Você precisa de cargo 3+ para desamarar!");
                    return 1;
                }
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp)) {
                    SendClientMessage(playerid, COLOR_GRAD1, "USE: /desamarrar [ID/Nome]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        if (ProxDetectorS(8.0, playerid, giveplayerid))
                        {
                            if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode desamarrar a si mesmo!"); return 1; }
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "* Você foi desamarrado por %s.", PlayerName(playerid));
                            SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* Você desamarrou %s.", PlayerName(giveplayerid));
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* %s Desamarrou %s.", PlayerName(playerid) ,PlayerName(giveplayerid));
                            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            GameTextForPlayer(giveplayerid, "~g~Desamarrado", 2500, 3);
                            SetPlayerVirtualWorld(giveplayerid,GetPlayerVirtualWorld(playerid));
                            SetPlayerInterior(giveplayerid,GetPlayerInterior(playerid));
                            TogglePlayerControllable(giveplayerid, 1);
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Esse jogador esta longe de você!");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "Esse não é um jogador ativo!");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não é membro de uma familia!");
            }
        }
        return 1;
    }
//aeroporto los santos
    if (strcmp("/aerols", cmdtext, true, 10) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, 2038.5096,-2628.2659,13.5469); LinkVehicleToInterior(tmpcar, 0);
                }
                else
                {
                    SetPlayerInterior(playerid,0);
                    SetPlayerPos(playerid,2038.5096,-2628.2659,13.5469);
                    SetPlayerFacingAngle(playerid,226.0);
                }
                SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!!");
            }
        }
        return 1;
    }
    if (strcmp("/aerolv", cmdtext, true, 10) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, 1482.3693,1794.4214,10.8125); LinkVehicleToInterior(tmpcar, 0);
                }
                else
                {
                    SetPlayerInterior(playerid,0);
                    SetPlayerPos(playerid,1482.3693,1794.4214,10.8125);
                    SetPlayerFacingAngle(playerid,226.0);
                }
                SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!!");
            }
        }
        return 1;
    }
//||||||||||||||||||||||||||| fim dos teleportes ||||||||||||||||||||||||
    if (strcmp(cmd, "/autorizacao", true) == 0)
    {
        if(PlayerInfo[playerid][pEmprego] == 2)
        {
            new name[MAX_PLAYER_NAME];
            GetPlayerName(playerid, name, sizeof(name));
            if(PlayerToPoint(2.0, playerid, 256.0320,84.5082,1002.4453)|| PlayerToPoint(2.0, playerid, 269.4763,76.6585,1001.0391) || PlayerToPoint(2.0, playerid, 202.5491,179.1493,1003.0323) || PlayerToPoint(2.0, playerid, 323.7303,308.9208,999.1484) || PlayerToPoint(2.0, playerid, 214.9535,118.0954,999.0156) || PlayerToPoint(2.0, playerid, -1318.5383,489.2506,11.1953))
            {
                if(playerid != INVALID_PLAYER_ID)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você comprou uma licença para liberar um preso -R$5000.");
                    GivePlayerMoney(playerid, -5000);
                    DepositarGranaOrg(7,5000);
                    ApprovedAdvogado[playerid] = 1;
                }
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não é um Advogado");
        }
        return 1;
    }
// ||||||||||||||||||||||||||||||||||ELEVADORES ORGS/GANGS/MAFIAS||||||||||||||||||||||||||||||||||
    if (strcmp(cmd, "/eROTA", true) == 0)
    {
        if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
        {
            if(PlayerToPoint(2.0, playerid, 346.8519,-1494.9565,36.0391))
            {
                SetPlayerPos(playerid, 345.1602,-1482.8597,76.5391);
            }
            if(PlayerToPoint(2.0, playerid, 345.1602,-1482.8597,76.5391))
            {
                SetPlayerPos(playerid, 346.8519,-1494.9565,36.0391);
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/ebope", true) == 0)
    {
        if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
        {
            if(PlayerToPoint(2.0, playerid, 923.53,-1036.32,31.90))
            {
                SetPlayerPos(playerid, 922.81,-1017.19,109.09);
            }
            if(PlayerToPoint(2.0, playerid, 922.81,-1017.19,109.09))
            {
                SetPlayerPos(playerid, 923.53,-1036.32,31.90);
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/ebb", true) == 0)
    {
        if(PlayerInfo[playerid][pMembro] == 36 || PlayerInfo[playerid][pLider] == 36)
        {
            if(PlayerToPoint(2.0, playerid, 2473.5903,-1531.1597,24.1497))
            {
                SetPlayerPos(playerid, 2462.6775,-1518.4772,32.5703);
            }
            if(PlayerToPoint(2.0, playerid, 2462.6775,-1518.4772,32.5703))
            {
                SetPlayerPos(playerid, 2473.5903,-1531.1597,24.1497);
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/etaxi", true) == 0)
    {
        if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)
        {
            if(PlayerToPoint(2.0, playerid, 964.0209,-1465.8312,13.4589))
            {
                SetPlayerPos(playerid, 965.7349,-1465.6044,21.3783);
            }
            if(PlayerToPoint(2.0, playerid, 965.7349,-1465.6044,21.3783))
            {
                SetPlayerPos(playerid, 964.0209,-1465.8312,13.4589);
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/emc", false) == 0)
    {
        if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
        {
            if(PlayerToPoint(2.0, playerid, 374.3401,-2055.2114,8.0156))
            {
                SetPlayerPos(playerid, 368.7828,-2054.5476,15.4066);
            }
            if(PlayerToPoint(2.0, playerid, 368.7828,-2054.5476,15.4066))
            {
                SetPlayerPos(playerid, 374.3401,-2055.2114,8.0156);
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/hqpf", true) == 0)
    {
        if(PlayerToPoint(2.0, playerid, 1059.6041,-345.1531,73.9922))
        {
            SetPlayerInterior(playerid, 0);
            SetPlayerPos(playerid, 2122.5610,-2270.5774,20.6719);
            PlayerInfo[playerid][pInt] = 0;
        }
        if(PlayerToPoint(2.0, playerid, 2122.5610,-2270.5774,20.6719))
        {
            SetPlayerInterior(playerid, 0);
            SetPlayerPos(playerid, 1059.6041,-345.1531,73.9922);
            PlayerInfo[playerid][pInt] = 0;
        }
        return 1;
    }
    if (strcmp(cmd, "/epcc", true) == 0)
    {
        if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)
        {
            if(PlayerToPoint(2.0, playerid, 1327.1804,-884.2955,39.5781))
            {
                SetPlayerPos(playerid, 1324.3936,-890.1075,45.2266);
            }
            if(PlayerToPoint(2.0, playerid, 1324.3936,-890.1075,45.2266))
            {
                SetPlayerPos(playerid, 1327.1804,-884.2955,39.5781);
            }
        }
        return 1;
    }
// ||||||||||||||||||||||||||||||||||||||FIM ELEVADORES|||||||||||||||||||||||||||
    if (strcmp("/Track", cmdtext, true, 10) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 1337)
        {
            SetPlayerInterior(playerid, 7);
            SetPlayerPos(playerid,-1398.065307,-217.028900,1051.115844);
            PlayerInfo[playerid][pInt] = 7;
        }
        else
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Você não tem permissão para isto.");
            return 1;
        }
    }
    if (strcmp("/monte", cmdtext, true, 10) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, -2233.7336,-1736.8186,480.8216); LinkVehicleToInterior(tmpcar, 0);
                }
                else
                {
                    SetPlayerInterior(playerid,0);
                    SetPlayerVirtualWorld(playerid,0);
                    SetPlayerPos(playerid,-2233.7336,-1736.8186,480.8216);
                    SetPlayerFacingAngle(playerid,226.0);
                }
                SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!!");
            }
        }
        return 1;
    }
    if (strcmp("/arenax1", cmdtext, true, 10) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, -2326.8809,-1636.9822,483.7031); LinkVehicleToInterior(tmpcar, 0);
                }
                else
                {
                    SetPlayerInterior(playerid,0);
                    SetPlayerVirtualWorld(playerid,0);
                    SetPlayerPos(playerid,-2326.8809,-1636.9822,483.7031);
                    SetPlayerFacingAngle(playerid,226.0);
                }
                SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!!");
            }
        }
        return 1;
    }
    if (strcmp("/bate-bate", cmdtext, true, 10) == 0 || strcmp("/derby", cmdtext, true, 10) == 0)
    {
        if(admtrampando[playerid] == 1 || PlayerInfo[playerid][pAdmin] == 3000)
        {
            if(PlayerInfo[playerid][pAdmin] >= 1)
            {
                SetPlayerVirtualWorld(playerid,0);
                SetPlayerPos(playerid,2739.1577,-1745.2816,43.7656);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Me desculpe mais você não tem permissão para isto.");
                return 1;
            }
        }
    }
    if(strcmp(cmd, "/voff", true) == 0 || strcmp(cmd, "/chatvoff", true) == 0)
    {
        if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pVip] >= 1)
        {
            if(!Voff[playerid])
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Voce desativou o chatvip");
                Voff[playerid] = true;
                return 1;
            }
            if(Voff[playerid])
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Voce ativou o chatvip");
                Voff[playerid] = false;
                return 1;
            }
        }
    }
    if(strcmp(cmd, "/clideroff", true) == 0 || strcmp(cmd, "/loff", true) == 0)//yiakin FEZ!!
    {
        if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pLider] >= 1)
        {
            if( chatLider[ playerid ] == false ){
                SendClientMessage( playerid, 0xADFF2FAA, "Você ativou seu chat lider." );
                chatLider[ playerid ] = true;
            }
            else{
                SendClientMessage( playerid, 0xADFF2FAA, "Você desativou seu chat lider." );
                chatLider[ playerid ] = false;
            }
        }
        else
            SendClientMessage( playerid, COLOR_GRAD2, "Sem Autorização." );
        return true;
    }
    if(strcmp(cmd, "/clider", true) == 0 || strcmp(cmd, "/l", true) == 0)//yiakin FEZ!!
    {
        if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pLider] >= 1)
        {
            if( chatLider[ playerid ] == false )
                return SendClientMessage( playerid, COLOR_GRAD2, "Seu chat esta bloqueado. Use: /loff" );
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /l [Chat Lider]");
                return 1;
            }
            format(string, sizeof(string), "* %s %s: %s", NomeORG( playerid ),sendername, result);
            ChatLider(0xADFF2FAA,string);
            printf("LIDER %s: %s", sendername, result);
        }
        return 1;
    }
    if(strcmp(cmd, "/cvip", true) == 0 || strcmp(cmd, "/v", true) == 0)
    {
        if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pVip] >= 1)
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /v [Chat Vip]");
                return 1;
            }
            new NivelVip = PlayerInfo[playerid][pVip],RankVip2[32];
            if(NivelVip == 0) { RankVip2 = "Gratis"; }
            else if(NivelVip == 1) { RankVip2 = "Vip Normal"; }
            else if(NivelVip >= 2) { RankVip2 = "Super VIP"; }
            format(string, sizeof(string), "* %s %s: %s", RankVip2,sendername, result);
            SendVIPMessage(0xFFCCFFAA,string);
            printf("VIP %s: %s", sendername, result);
        }
        return 1;
    }
    //-------------------------------[Pay]--------------------------------------------------------------------------
    if(strcmp(cmd, "/pagar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /pagar [id] [quantidade]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /pagar [id] [quantidade]");
                return 1;
            }
            if(admtrampando[giveplayerid] != 0 && PlayerInfo[giveplayerid][pAdmin] >= 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não pode pagar para admins em trabalho!");
                return 1;
            }
            moneys = strval(tmp);
            if(moneys > 1000 && PlayerInfo[playerid][pLevel] < 3)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você precisa ser nível 3 ou mais para pagar mais que R$ 1000");
                return 1;
            }
            if(moneys < 1 || moneys > 100000)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Pagamento mínimo 1, máximo 100000 por vez");
                return 1;
            }
            if( GetPlayerMoneyEx( playerid ) < moneys ) return SendClientMessage( playerid, -1, "Você não possui a quantia informada." );
            if (IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(PlayerInfo[giveplayerid][pLocal] == 106)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Você não pode usar este comando neste local");
                        return 1;
                    }
                    if (ProxDetectorS(5.0, playerid, giveplayerid))
                    {
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        playerdinheiro = GetPlayerMoneyEx(playerid);
                        if (playerdinheiro >= moneys)
                        {
                            ConsumingMoney[giveplayerid] = 1;
                            GivePlayerMoney(playerid, - moneys);
                            GivePlayerMoney(giveplayerid, moneys);
                            format(string, sizeof(string), "   Você pagou %s(Para: %d), R$%d.", giveplayer,giveplayerid, moneys);
                            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                            SendClientMessage(playerid, COLOR_GRAD1, string);
                            format(string, sizeof(string), "   Você recebeu R$%d de %s(ID: %d).", moneys, sendername, playerid);
                            SendClientMessage(giveplayerid, COLOR_GRAD1, string);
                            if(moneys >= 1000000)
                            {
                                ABroadCast(COLOR_YELLOW,string,1);
                            }
                            PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
                            format(string, sizeof(string), "* %s deu alguma grana para %s.", sendername ,giveplayer);
                            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GRAD1, "   Você não está com essa grana no bolso.");
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "   Jogador está longe.");
                    }
                }//invalid id
            }
            else
            {
                format(string, sizeof(string), "   %d não é um jogador ativo.", giveplayerid);
                SendClientMessage(playerid, COLOR_GRAD1, string);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/caridade", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /caridade [quantidade]");
                return 1;
            }
            if(PlayerInfo[playerid][pLocal] == 106)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não pode usar este comando neste local");
                return 1;
            }
            moneys = strval(tmp);
            if(moneys < 1)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Mínimo R$ 1");
                return 1;
            }
            if(GetPlayerMoneyEx(playerid) < moneys)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não está com essa grana no bolso.");
                return 1;
            }
            GivePlayerMoney(playerid, -moneys);
            GetPlayerName(playerid, sendername, sizeof(sendername));
            format(string, sizeof(string), "%s obrigado pela sua doação de R$%d.",sendername, moneys);
            printf("%s", string);
            Tax += moneys;
            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            SendClientMessage(playerid, COLOR_GRAD1, string);
        }
        return 1;
    }
    if(strcmp(cmd, "/comprarprodutos", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Coloque a quantidade de produtos a ser comprada!");
                return 1;
            }
            if(PlayerInfo[playerid][pEmprego] != 11) return SendClientMessage(playerid,COLOR_YELLOW,"Você não é um Caminhoneiro!");
            new Produtoss = strval(tmp),minhaoid = GetVehicleModel(GetPlayerVehicleID(playerid));


            EncherCaminhao(playerid, minhaoid, Produtoss, GetPlayerVehicleID(playerid));
        }
        return 1;
    }
    if(strcmp(cmd, "/venderprodutos", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Coloque a quantidade de produtos a ser vendida!");
                return 1;
            }
            if(PlayerInfo[playerid][pEmprego] != 11) return SendClientMessage(playerid,COLOR_YELLOW,"Você não é um Caminhoneiro!");
            new Produtoss = strval(tmp),minhaoid = GetVehicleModel(GetPlayerVehicleID(playerid));


            VenderProdutos(playerid,Produtoss , GetPlayerVehicleID(playerid), minhaoid);
        }
        return 1;
    }
//-------------------------------[Stats]--------------------------------------------------------------------------
    if (strcmp(cmd, "/rg", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (gPlayerLogged[playerid] != 0)
            {
                ShowStats(playerid,playerid);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está logado !");
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/mostrarrg", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /mostrarrg [ID/Nome]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(admtrampando[giveplayerid] >= 1 || helptrampando[giveplayerid] >= 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "Você não pode mostrar o rg para um Admin ou Helper em modo de trabalho!");
                    return 1;
                }
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if (!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessage(playerid, 0xFFFFFFFF, "* O jogador está Longe!");
                    ShowStats(giveplayerid,playerid);
                    format(string, sizeof(string), "* %s Está mostrando o seu rg Para %s.",PlayerName(playerid),PlayerName(giveplayerid));
                    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                }
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/passararma", true) == 0 || strcmp(cmd, "/entregararma", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /passararma [ID/Nome]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(IsPlayerInMorro(playerid) || IsPlayerInShop(playerid) || IsPlayerInPark(playerid) || IsPlayerInCemiterio(playerid)
                    || IsPlayerInPosto(playerid) || IsPlayerInShop(playerid) || IsPlayerInEstacao(playerid) || IsPlayerInCasarao(playerid))
                    {
                        return SendClientMessage(playerid, COLOR_GRAD1, "Você não pode Passar arma neste Local.");
                    }
                    if(!ProxDetectorS(4.7, playerid, giveplayerid)) return SendClientMessage(playerid, 0xFFFFFFFF, "* O jogador está Longe!");
                    if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Você não passar uma arma para você mesmo.");
                    if(GetPlayerWeapon(playerid) == 0) return SendClientMessage(playerid, 0xFFFFFFFF, "ERRO: Selecione Alguma arma Para Passar!");
                    if(PlayerInfo[playerid][pJailed] >= 1) return SendClientMessage(playerid, 0xFFFFFFFF, "* Voce nao pode passar arma para quem esta preso");
                    new ArmaTeste[32];
                    GetWeaponName(GetPlayerWeapon(playerid),ArmaTeste,sizeof(ArmaTeste));
                    strmid(NomeArma[giveplayerid], ArmaTeste, 0, strlen(ArmaTeste), 255);
                    PassArmaID[giveplayerid] = GetPlayerWeapon(playerid);
                    QuantMun[giveplayerid] = GetPlayerAmmo(playerid);
                    format(strvinny,sizeof(strvinny),"{FF8000}Player:{00FFFF} %s {FF8000}Esta te Passando uma Arma.\nNome: {00FFFF}%s{FF8000}, Munições:{00FFFF} %d{FF8000}\nCaso queira Pegar a Arma, Aperte em '{00FFFF}Aceitar{FF8000}'!\nCaso contrário aperte em '{00FFFF}Recusar{FF8000}'!",PlayerName(playerid),NomeArma[giveplayerid],GetPlayerAmmo(playerid));
                    ShowPlayerDialog(giveplayerid,2245,DIALOG_STYLE_MSGBOX,"Sistema de Armas Brasil PlayGamer",strvinny,"Aceitar","Recusar");
                    format(string, sizeof(string), "* Você Esta tentando Passar uma: %s, com %d Munições, para: %s, Aguardando resposta do Player.", NomeArma[giveplayerid],GetPlayerAmmo(playerid),PlayerName(giveplayerid));
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    IDpassouArma[giveplayerid] = playerid;
                }
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/getemprego", true) == 0)
    {
        if(PlayerInfo[playerid][pEmprego] != 0)
        {
           SendClientMessage(playerid,COLOR_YELLOW," Você já tem emprego,digite /sairdoemprego !");
           return 1;
        }
        if (PlayerToPoint(2.0, playerid, 361.8300,173.5202,1008.3828))
        {
            TogglePlayerControllable(playerid, 0);
            ShowPlayerDialog(playerid,2569,DIALOG_STYLE_LIST,"Empregos","Detetive\nAdvogado\nVendedor de Drogas\nMecanico\nVendedor de Armas\nMotorista de Onibus\nCaminhoneiro","Aceitar","Cancelar");
        }
        return 1;
    }
    if (strcmp(cmd, "/licencas", true) == 0)
    {
        if (PlayerToPoint(2.0, playerid, 1490.2411,1307.2179,1093.2891))
        {
            TogglePlayerControllable(playerid, 0);
            ShowPlayerDialog(playerid,2571,DIALOG_STYLE_LIST,"Licencas","Motorista - 2000\nVoo - 2500\nNavegacao - 2000\nPesca Legal - 1000\nPorte Armas - 2500","Ok","Cancelar");
        }
        return 1;
    }
    if (strcmp(cmd, "/gps", true) == 0)
    {
        //TogglePlayerControllable(playerid, 0);
        ShowPlayerDialog(playerid,2568,DIALOG_STYLE_LIST,"GPS","Locais em Geral\nHQs Organizações\nTerritorios\nHQ Empregos\nDesligar GPS","Aceitar","Cancelar");
        return 1;
    }
    if (strcmp(cmd, "/deletararvore", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /deletararvore [ID]");
                return 1;
            }
            new arvoreid = strval(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(ServerOwner[playerid] != 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para usar este comando!");
                    return 1;
                }
                if (arvoreid < 0 || arvoreid > MAX_ARVORES) return SendClientMessage(playerid, -1, "Id Inválido!");
                DeletarArvore(arvoreid);
                SendClientMessage(playerid, -1, "Arvore Excluida!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/comandosnatal", true) == 0)
    {
        if(ServerOwner[playerid] != 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para usar este comando!");
                    return 1;
                }
        SendClientMessage(playerid,0xFF0000AA,"========== Comandos Natal ===========");
        SendClientMessage(playerid,0xFFFFFFAA,"/criararvore /gorro");
        SendClientMessage(playerid,0xFFFFFFAA,"/deletararvore");
        SendClientMessage(playerid,0xFFFFFFAA,"/mostrarids  -  /ocultarids");
        SendClientMessage(playerid,0xFF0000AA,"========== Comandos Natal ===========");
        return 1;
    }
    if(strcmp(cmd, "/criararvore", true) == 0)
    {
        if(ServerOwner[playerid] != 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para usar este comando!");
                    return 1;
                }
        new Float:X,Float:Y,Float:Z,arquivo[100];
        GetPlayerPos(playerid,X,Y,Z);
        for(new i=0;i<=MAX_ARVORES;i++){
            format(arquivo,sizeof(arquivo),PASTA_ARVORES,i);
            if(!DOF2_FileExists(arquivo)){
                DOF2_CreateFile(arquivo);
                DOF2_SetFloat(arquivo,"posX",X);
                DOF2_SetFloat(arquivo,"posX",X);
                DOF2_SetFloat(arquivo,"posY",Y);
                DOF2_SetFloat(arquivo,"posZ",Z);
                CriarArvore(X,Y,Z);
                SendClientMessage(playerid,-1,"Arvore Criada!");
                return 1;
            }
        }
        SendClientMessage(playerid,-1,"Limite de arvores atingido!");
        return 1;
    }
    if(strcmp(cmd, "/gorro", true) == 0)
    {
        if(gorro[playerid]==0){
        SetPlayerAttachedObject(playerid,1,19066,2,0.13,0.0,0.0,90,90.0,0.0);
        gorro[playerid] = 1;
        SendClientMessage(playerid,-1,"Gorro de Natal On");
        }else{
        RemovePlayerAttachedObject(playerid,1);
        SendClientMessage(playerid,-1,"Gorro de Natal Off");
        gorro[playerid] = 0;
    }
        return 1;
    }
    if(strcmp(cmd, "/ocultarids", true) == 0)
    {
        if(ServerOwner[playerid] != 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para usar este comando!");
                    return 1;
                }
          OcultarIds();
        SendClientMessage(playerid,-1,"Ids Ocultados!");
        return 1;
    }
    if(strcmp(cmd, "/mostrarids", true) == 0)
    {
        if(ServerOwner[playerid] != 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para usar este comando!");
                    return 1;
                }
          MostrarIds();
        SendClientMessage(playerid,-1,"Ids Exibidos!");
        return 1;
    }
//Subir e descer LV
    if (strcmp(cmd, "/evagos", true) == 0)
    {
        if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)
        {
            if(PlayerToPoint(2.0, playerid, 2808.0322,-1176.3846,25.3794))
            {
                SetPlayerPos(playerid, 2807.4321,-1174.6454,32.6688);
            }
            if(PlayerToPoint(2.0, playerid, 2807.4321,-1174.6454,32.6688))
            {
                SetPlayerPos(playerid, 2808.0322,-1176.3846,25.3794);
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/esamu", true) == 0)
    {
        if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
        {
            if(PlayerToPoint(2.0, playerid, 1173.4185,-1361.2090,13.9694))
            {
                SetPlayerPos(playerid, 1169.0085,-1329.3441,31.4640);
            }
            if(PlayerToPoint(2.0, playerid, 1169.0085,-1329.3441,31.4640))
            {
                SetPlayerPos(playerid, 1173.4185,-1361.2090,13.9694);
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/egroove", true) == 0)
    {
        if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
        {
            if(PlayerToPoint(2.0, playerid, 2522.9346,-1679.4137,15.4970))
            {
                SetPlayerPos(playerid, 2524.4297,-1681.8153,19.9302);
            }
            if(PlayerToPoint(2.0, playerid, 2524.4297,-1681.8153,19.9302))
            {
                SetPlayerPos(playerid, 2522.9346,-1679.4137,15.4970);
            }
        }
        return 1;
    }
//-----------------------------------------------------------------
    if(strcmp(cmd, "/dn", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(PlayerInfo[playerid][pJailed] != 0)
                {
                    SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar esse comando na cadeia!");
                    return 1;
                }
                new Float:slx, Float:sly, Float:slz;
                GetPlayerPos(playerid, slx, sly, slz);
                SetPlayerPos(playerid, slx, sly, slz-2);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não é admin !");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/up", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(PlayerInfo[playerid][pJailed] != 0)
                {
                    SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar esse comando na cadeia!");
                    return 1;
                }
                new Float:slx, Float:sly, Float:slz;
                GetPlayerPos(playerid, slx, sly, slz);
                SetPlayerPos(playerid, slx, sly, slz+2);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não é admin !");
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/voar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(PlayerInfo[playerid][pJailed] != 0)
                {
                    SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar esse comando na cadeia!");
                    return 1;
                }
                new Float:px, Float:py, Float:pz, Float:pa;
                GetPlayerFacingAngle(playerid,pa);
                if(pa >= 0.0 && pa <= 22.5) //n1
                {
                    GetPlayerPos(playerid, px, py, pz);
                    SetPlayerPos(playerid, px, py+30, pz+5);
                }
                else if(pa >= 332.5 && pa < 0.0) //n2
                {
                    GetPlayerPos(playerid, px, py, pz);
                    SetPlayerPos(playerid, px, py+30, pz+5);
                }
                else if(pa >= 22.5 && pa <= 67.5) //nw
                {
                    GetPlayerPos(playerid, px, py, pz);
                    SetPlayerPos(playerid, px-15, py+15, pz+5);
                }
                else if(pa >= 67.5 && pa <= 112.5) //w
                {
                    GetPlayerPos(playerid, px, py, pz);
                    SetPlayerPos(playerid, px-30, py, pz+5);
                }
                else if(pa >= 112.5 && pa <= 157.5) //sw
                {
                    GetPlayerPos(playerid, px, py, pz);
                    SetPlayerPos(playerid, px-15, py-15, pz+5);
                }
                else if(pa >= 157.5 && pa <= 202.5) //s
                {
                    GetPlayerPos(playerid, px, py, pz);
                    SetPlayerPos(playerid, px, py-30, pz+5);
                }
                else if(pa >= 202.5 && pa <= 247.5)//se
                {
                    GetPlayerPos(playerid, px, py, pz);
                    SetPlayerPos(playerid, px+15, py-15, pz+5);
                }
                else if(pa >= 247.5 && pa <= 292.5)//e
                {
                    GetPlayerPos(playerid, px, py, pz);
                    SetPlayerPos(playerid, px+30, py, pz+5);
                }
                else if(pa >= 292.5 && pa <= 332.5)//e
                {
                    GetPlayerPos(playerid, px, py, pz);
                    SetPlayerPos(playerid, px+15, py+15, pz+5);
                }
                else
                {
                    GetPlayerPos(playerid, px, py, pz);
                    SetPlayerPos(playerid, px+15, py+15, pz+5);
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não e admin !");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/lt", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(PlayerInfo[playerid][pJailed] != 0)
                {
                    SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar esse comando na cadeia!");
                    return 1;
                }
                new Float:slx, Float:sly, Float:slz;
                GetPlayerPos(playerid, slx, sly, slz);
                SetPlayerPos(playerid, slx, sly+2, slz);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não é admin !");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/rt", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(PlayerInfo[playerid][pJailed] != 0)
                {
                    SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar esse comando na cadeia!");
                    return 1;
                }
                new Float:slx, Float:sly, Float:slz;
                GetPlayerPos(playerid, slx, sly, slz);
                SetPlayerPos(playerid, slx, sly-2, slz-2);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não é admin !! !");
            }
        }
        return 1;
    }
//-------------------------------[Check]--------------------------------------------------------------------------
    if (strcmp(cmd, "/ver", true) == 0 || strcmp(cmd, "/verificar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "USE: /ver [id]");
                    return 1;
                }
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
                }
                //giveplayerid = strval(tmp);
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        ShowStats(playerid,giveplayerid);
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "   Este Jogador não está ativo!");
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não é admin !");
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/agenda", true) == 0 || strcmp(cmd, "/telefone", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pPhoneBook] == 1)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "USE: /agenda [id]");
                    return 1;
                }
                //giveplayerid = strval(tmp);
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
                        format(string,sizeof(string), "Nick: %s ~ Numero: %d",sendername,PlayerInfo[giveplayerid][pPnumber]);
                        SendClientMessage(playerid, COLOR_GRAD1, string);
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "   ID Inválido !");
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "   Você não tem uma agenda! digite /gps 24-7 !");
            }
        }
        return 1;
    }
//-------------------------------[BuyLevel]--------------------------------------------------------------------------
    if (strcmp(cmd, "/comprarnivel", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (gPlayerLogged[playerid] != 0)
            {
                PlayerInfo[playerid][pCash] = GetPlayerMoneyEx(playerid);
                if(PlayerInfo[playerid][pLevel] >= 0)
                {
                    new nxtlevel = PlayerInfo[playerid][pLevel]+1;
                    new costlevel = nxtlevel*levelcost;//10k for testing purposes
                    new expquantidade = nxtlevel*levelexp;
                    if(GetPlayerMoneyEx(playerid) < costlevel)
                    {
                        format(gstring,sizeof(gstring), "   Você não tem: (R$%d) !",costlevel);
                        SendClientMessage(playerid, COLOR_GRAD1, gstring);
                        return 1;
                    }
                    else if (PlayerInfo[playerid][pExp] < expquantidade)
                    {
                        format(gstring,sizeof(gstring), "   Você precisa de %d pontos de respeito, Você tem: [%d] !",expquantidade,PlayerInfo[playerid][pExp]);
                        SendClientMessage(playerid, COLOR_GRAD1, gstring);
                        return 1;
                    }
                    else
                    {
                        format(gstring, sizeof(gstring), "~g~Comprou Nivel~n~~w~Agora seu Nivel e %d", nxtlevel);
                        /*PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                        PlayerPlayMusic(playerid);*/
                        GivePlayerMoney(playerid, (-costlevel));
                        PlayerInfo[playerid][pLevel]++;
                        ScoreLevel(playerid);
                        PlayerInfo[playerid][pExp] = 0;
                        PlayerInfo[playerid][gPupgrade] = PlayerInfo[playerid][gPupgrade]+2;
                        GameTextForPlayer(playerid, gstring, 5000, 1);
                        format(gstring,sizeof(gstring), "   Você comprou o nivel %d por (R$%d) Digite /melhorar", nxtlevel, costlevel);
                        SendClientMessage(playerid, COLOR_GRAD1, gstring);
                        format(gstring,sizeof(gstring), "   Você tem %d pontos de melhora",PlayerInfo[playerid][gPupgrade]);
                        SendClientMessage(playerid, COLOR_GRAD2, gstring);
                    }
                }
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está logado !");
            }
        }
        return 1;
    }
//-------------------------------[UPGRADE]--------------------------------------------------------------------------
    if (strcmp(cmd, "/pintarcarro", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new House = PlayerInfo[playerid][pPHousekey];
            GetPlayerName(playerid, playername, sizeof(playername));
            if (House != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD3,"(R$5000) USE: /pintarcarro [COR 1 ou 2] [COR ID]");
                    return 1;
                }
                new COLORnum = strval(tmp);
                if(COLORnum > 2 || COLORnum < 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD3,"Cor 1(Principal) ou 2(Secundária)");
                    return 1;
                }
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD3,"(R$5000) USE: /pintarcarro [COR 1 ou 2] [COR ID]");
                }
                new COLOR = strval(tmp);
                if(COLOR > 126)
                {
                    SendClientMessage(playerid, COLOR_GRAD3,"Máximo é 126");
                    return 1;
                }
                if (GetPlayerMoneyEx(playerid) < 5000)
                {
                    SendClientMessage(playerid, COLOR_GRAD3,"Você não tem (R$5000)");
                }
                if(COLORnum == 1)
                {
                    HouseInfo[House][hVcol1] = COLOR;
                    format(string, sizeof(string), "Cor 1 Trocada Para %d -R$5000",COLOR);
                    SendClientMessage(playerid, COLOR_GRAD3,string);
                }
                else
                {
                    HouseInfo[House][hVcol2] = COLOR;
                    format(string, sizeof(string), "Cor 2 Trocada Para %d -R$5000",COLOR);
                    SendClientMessage(playerid, COLOR_GRAD3,string);
                }
                SalvarCasa(House);
                SendClientMessage(playerid, COLOR_GRAD6, "Espere 24hrs para que ela chegue -R$5000");
                GivePlayerMoney(playerid,-5000);
                SBizzInfo[5][sbTill] += 5000;
                ExtortionSBiz(5, 5000);
                GastarProdutos(2, 5, 2);
                PlayerPlaySound(giveplayerid, 1134, 0.0, 0.0, 0.0);

            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem uma casa");
                return 1;
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/comprarcarro", true) == 0 || strcmp(cmd, "/trocarcarro", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new House = PlayerInfo[playerid][pPHousekey];
            GetPlayerName(playerid, playername, sizeof(playername));
            if (House != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
            {
                new gunid[16];
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_WHITE, "|______________ Novos Carros,Preço R$100000 ______________|");
                    SendClientMessage(playerid, COLOR_GRAD2,"USE: /comprarcarro [nomedocarro]");
                    SendClientMessage(playerid, 0xff80c06F, "Carros: | blistac | clover | elegant | emperor | glendale | greenwood | stafford | mountainbike |");
                    SendClientMessage(playerid, 0xff80c06F, "Carros: | huntley | jester | landstalker | merit | nebula | sabre | stratum | hornet | bike |");
                    SendClientMessage(playerid, 0xff80c06F, "Carros: | sunrise | tahoma | uranus | blade | flash | buffalo | phoenix | sultan | bf-injection |");
                    SendClientMessage(playerid, 0x80a7ffFF, "Carros VIP's: | limozine | elegy | hotknife | bandito | nrg500 | zr350 | premier |");
                    SendClientMessage(playerid, 0x80a7ffFF, "Carros VIP's: | bullet | turismo | infernus | cheetah | savanna | comet |");
                    return 1;
                }
                strmid(gunid, tmp, 0, strlen(cmdtext), 255);
                if (GetPlayerMoneyEx(playerid) > 100000)
                {
                    new carid = HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo];
                    if(strcmp(gunid, "limozine", true, strlen(gunid)) == 0)
                    {
                        if(PlayerInfo[playerid][pVip] < 1)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
                            return 1;
                        }
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para Limozine");
                        HouseInfo[House][hVec] = 409;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    if(strcmp(gunid, "premier", true, strlen(gunid)) == 0)
                    {
                        if(PlayerInfo[playerid][pVip] < 1)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
                            return 1;
                        }
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para Premier");
                        HouseInfo[House][hVec] = 426;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "hotknife", true, strlen(gunid)) == 0)
                    {
                        if(PlayerInfo[playerid][pVip] < 1)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
                            return 1;
                        }
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para Hotknife");
                        HouseInfo[House][hVec] = 434;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "comet", true, strlen(gunid)) == 0)
                    {
                        if(PlayerInfo[playerid][pVip] < 1)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
                            return 1;
                        }
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para Comet");
                        HouseInfo[House][hVec] = 480;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "zr350", true, strlen(gunid)) == 0)
                    {
                        if(PlayerInfo[playerid][pVip] < 1)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
                            return 1;
                        }
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o ZR-350");
                        HouseInfo[House][hVec] = 477;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "nrg500", true, strlen(gunid)) == 0)
                    {
                        if(PlayerInfo[playerid][pVip] < 1)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
                            return 1;
                        }
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para a moto nrg500");
                        HouseInfo[House][hVec] = 522;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "bandito", true, strlen(gunid)) == 0)
                    {
                        if(PlayerInfo[playerid][pVip] < 1)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
                            return 1;
                        }
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Bandito");
                        HouseInfo[House][hVec] = 568;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "elegy", true, strlen(gunid)) == 0)
                    {
                        if(PlayerInfo[playerid][pVip] < 1)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
                            return 1;
                        }
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Elegy");
                        HouseInfo[House][hVec] = 562;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "bullet", true, strlen(gunid)) == 0)
                    {
                        if(PlayerInfo[playerid][pVip] < 1)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
                            return 1;
                        }
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Bullet");
                        HouseInfo[House][hVec] = 541;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "turismo", true, strlen(gunid)) == 0)
                    {
                        if(PlayerInfo[playerid][pVip] < 1)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
                            return 1;
                        }
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Turismo");
                        HouseInfo[House][hVec] = 451;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "infernus", true, strlen(gunid)) == 0)
                    {
                        if(PlayerInfo[playerid][pVip] < 1)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
                            return 1;
                        }
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Infernus");
                        HouseInfo[House][hVec] = 411;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "cheetah", true, strlen(gunid)) == 0)
                    {
                        if(PlayerInfo[playerid][pVip] < 1)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
                            return 1;
                        }
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Cheetah");
                        HouseInfo[House][hVec] = 415;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "savanna", true, strlen(gunid)) == 0)
                    {
                        if(PlayerInfo[playerid][pVip] < 1)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
                            return 1;
                        }
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Savanna");
                        HouseInfo[House][hVec] = 567;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "blistac", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Blista Compact");
                        HouseInfo[House][hVec] = 496;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "stafford", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Stafford");
                        HouseInfo[House][hVec] = 580;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "clover", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Clover");
                        HouseInfo[House][hVec] = 542;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "sultan", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Sultan");
                        HouseInfo[House][hVec] = 560;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "elegant", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Elegant");
                        HouseInfo[House][hVec] = 507;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "hornet", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Hornet");
                        HouseInfo[House][hVec] = 521;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "phoenix", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Phoenix");
                        HouseInfo[House][hVec] = 603;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "emperor", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Emperor");
                        HouseInfo[House][hVec] = 585;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "glendale", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Glendale");
                        HouseInfo[House][hVec] = 466;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "greenwood", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Greenwood");
                        HouseInfo[House][hVec] = 492;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "huntley", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Huntley");
                        HouseInfo[House][hVec] = 579;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "jester", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Jester");
                        HouseInfo[House][hVec] = 559;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "landstalker", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Landstalker");
                        HouseInfo[House][hVec] = 400;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "merit", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Merit");
                        HouseInfo[House][hVec] = 551;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "nebula", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Nebula");
                        HouseInfo[House][hVec] = 516;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "sabre", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Sabre");
                        HouseInfo[House][hVec] = 475;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "stratum", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Stratum");
                        HouseInfo[House][hVec] = 561;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "sunrise", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Sunrise");
                        HouseInfo[House][hVec] = 550;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "tahoma", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Tahoma");
                        HouseInfo[House][hVec] = 566;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "uranus", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Uranus");
                        HouseInfo[House][hVec] = 558;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "blade", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Blade");
                        HouseInfo[House][hVec] = 536;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "flash", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Flash");
                        HouseInfo[House][hVec] = 565;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "buffalo", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Buffalo");
                        HouseInfo[House][hVec] = 402;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "bf-injection", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o BF Injection");
                        HouseInfo[House][hVec] = 424;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "bike", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para uma Bike");
                        HouseInfo[House][hVec] = 509;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else if(strcmp(gunid, "montainbike", true, strlen(gunid)) == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para uma Montain Bike");
                        HouseInfo[House][hVec] = 510;
                        DestroyVehicle(carid);
                        HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo] = CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD2,"USE: /comprarcarro [nomedocarro]");
                        SendClientMessage(playerid, 0xff80c0F, "Carros: | blistac | clover | elegant | emperor | glendale | greenwood | stafford | mountainbike |");
                        SendClientMessage(playerid, 0xff80c0F, "Carros: | huntley | jester | landstalker | merit | nebula | sabre | stratum | hornet | bike |");
                        SendClientMessage(playerid, 0xff80c0F, "Carros: | sunrise | tahoma | uranus | blade | flash | buffalo | phoenix | sultan | bf-injection |");
                        SendClientMessage(playerid, 0x80a7ffFF, "Carros VIP's: | limozine | elegy | hotknife | bandito | nrg500 | zr350 | premier |");
                        SendClientMessage(playerid, 0x80a7ffFF, "Carros VIP's: | bullet | turismo | infernus | cheetah | savanna | comet |");
                        return 1;
                    }
                    SendClientMessage(playerid, COLOR_GRAD6, "Você pagou R$100000, ele já está na sua casa!");
                    SalvarCasa(House);
                    GivePlayerMoney(playerid,-100000);
                    SBizzInfo[5][sbTill] += 100000;
                    ExtortionSBiz(5, 100000);
                    GastarProdutos(2, 5, 1);
                    PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem (R$100000)");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem uma casa");
                return 1;
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/resetarmelhorias", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (gPlayerLogged[playerid] == 0)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está logado !");
                return 1;
            }
            if (GetPlayerMoneyEx(playerid) < 100000)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   O reset custa R$100000 !");
                return 1;
            }
            if (PlayerInfo[playerid][pLevel] < 2)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você deve ter no mínimo nível 2 !");
                return 1;
            }
            PlayerInfo[playerid][gPupgrade] = (PlayerInfo[playerid][pLevel]-1)*2;
            PlayerInfo[playerid][pSHealth] = 0.0;
            PlayerInfo[playerid][pAlcoholPerk] = 0;
            PlayerInfo[playerid][pDrugPerk] = 0;
            PlayerInfo[playerid][pMiserPerk] = 0;
            PlayerInfo[playerid][pPainPerk] = 0;
            PlayerInfo[playerid][pTraderPerk] = 0;
            GivePlayerMoney(playerid,-100000);
            PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
            format(string,sizeof(string), "   Você tem %d pontos de melhoria !",PlayerInfo[playerid][gPupgrade]);
            SendClientMessage(playerid, COLOR_GRAD2, string);
        }
        return 1;
    }
    if (strcmp(cmd, "/comprararma", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(GetPlayerMoneyEx(playerid) < 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não tem todo esse dinheiro!!");
                return 1;
            }
            new gun;
            new gunid[16];
            new guncharge;
            new ammocharge;
            new location = PlayerInfo[playerid][pLocal];
            if(location == 99 || location == 100 || location == 102 || (PlayerToPoint(10, playerid,316.3719,-133.6901,999.6016) || (PlayerToPoint(10, playerid,296.05,-38.08,1001.52))))
            {
                new mod = 100;
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_WHITE, "|______________ Armas ______________|");
                    SendClientMessage(playerid, COLOR_GRAD2,"USE: /comprararma [arma] [munição]");
                    format(gstring,sizeof(gstring), "Armas: parachute (R$%d) golfclub (R$%d) nightstick (R$%d) baseballbat (R$%d) shovel (R$%d) poolcue (R$%d)",
                    GunPrice[0][0]/100*mod,GunPrice[1][0]/100*mod,GunPrice[2][0]/100*mod,GunPrice[3][0]/100*mod,GunPrice[4][0]/100*mod,GunPrice[5][0]/100*mod,GunPrice[6][0]/100*mod);
                    SendClientMessage(playerid, COLOR_GRAD3, gstring);
                    format(gstring,sizeof(gstring), "Armas: purpledildo (R$%d) whitedildo (R$%d) longwhitedildo (R$%d) whitedildo2 (R$%d) flowers (R$%d) cane",
                    GunPrice[7][0]/100*mod,GunPrice[8][0]/100*mod,GunPrice[9][0]/100*mod,GunPrice[10][0]/100*mod,GunPrice[11][0]/100*mod,GunPrice[12][0]/100*mod);
                    SendClientMessage(playerid, COLOR_GRAD3, gstring);
                    format(gstring,sizeof(gstring), "Armas: eagle (R$%d) pistola (R$%d) mp5 (R$%d)",
                    GunPrice[13][0]/100*mod,GunPrice[14][0]/100*mod,GunPrice[15][0]/100*mod,GunPrice[16][0]/100*mod,GunPrice[17][0]/100*mod,GunPrice[18][0]/100*mod);
                    SendClientMessage(playerid, COLOR_GRAD3, gstring);
                    format(gstring,sizeof(gstring), "Armas: shotgun (R$%d) ak47 (R$%d) m4 (R$%d) rifle (R$%d)",
                    GunPrice[19][0]/100*mod,GunPrice[20][0]/100*mod,GunPrice[21][0]/100*mod,GunPrice[22][0]/100*mod,GunPrice[23][0]/100*mod,GunPrice[24][0]/100*mod);
                    SendClientMessage(playerid, COLOR_GRAD3, gstring);
                    format(gstring,sizeof(gstring), "Armas: pistolammo (R$%d) shotgunammo (R$%d) smgammo (R$%d) assaultammo (R$%d) rifleammo (R$%d)",
                    GunPrice[25][0],GunPrice[26][0],GunPrice[27][0],GunPrice[28][0],GunPrice[29][0]);
                    SendClientMessage(playerid, COLOR_GRAD3, gstring);
                    return 1;
                }
                strmid(gunid, tmp, 0, strlen(cmdtext), 255);
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: /comprararma [arma] [munição]");
                    return 1;
                }
                new ammo = strval(tmp);
                if(ammo < 1 || ammo > 999) { SendClientMessage(playerid, COLOR_GREY, "   Munição tem que ser entre 1 e 999 !"); return 1; }
                if (strcmp(gunid, "parachute", true, strlen(gunid)) == 0)
                {
                    gun = 46;
                    guncharge = GunPrice[0][0]/100*mod;
                    ammocharge = 0;
                }
                else if (strcmp(gunid, "golfclub", true, strlen(gunid)) == 0)
                {
                    gun = 2; guncharge = GunPrice[1][0]/100*mod; ammocharge = 0;
                }
                else if (strcmp(gunid, "nightstick", true, strlen(gunid)) == 0)
                {
                    gun = 3; guncharge = GunPrice[2][0]/100*mod; ammocharge = 0;
                }
                else if (strcmp(gunid, "baseballbat", true, strlen(gunid)) == 0)
                {
                    gun = 5; guncharge = GunPrice[4][0]/100*mod; ammocharge = 0;
                }
                else if (strcmp(gunid, "shovel", true, strlen(gunid)) == 0)
                {
                    gun = 6; guncharge = GunPrice[5][0]/100*mod; ammocharge = 0;
                }
                else if (strcmp(gunid, "poolcue", true, strlen(gunid)) == 0)
                {
                    gun = 7; guncharge = GunPrice[6][0]/100*mod; ammocharge = 0;
                }
                else if (strcmp(gunid, "purpledildo", true, strlen(gunid)) == 0)
                {
                    gun = 10; guncharge = GunPrice[7][0]/100*mod; ammocharge = 0;
                }
                else if (strcmp(gunid, "whitedildo", true, strlen(gunid)) == 0)
                {
                    gun = 11; guncharge = GunPrice[8][0]/100*mod; ammocharge = 0;
                }
                else if (strcmp(gunid, "longwhitedildo", true, strlen(gunid)) == 0)
                {
                    gun = 12; guncharge = GunPrice[9][0]/100*mod; ammocharge = 0;
                }
                else if (strcmp(gunid, "whitedildo2", true, strlen(gunid)) == 0)
                {
                    gun = 13; guncharge = GunPrice[10][0]/100*mod; ammocharge = 0;
                }
                else if (strcmp(gunid, "flowers", true, strlen(gunid)) == 0)
                {
                    gun = 14; guncharge = GunPrice[11][0]/100*mod; ammocharge = 0;
                }
                else if (strcmp(gunid, "cane", true, strlen(gunid)) == 0)
                {
                    gun = 15; guncharge = GunPrice[12][0]/100*mod; ammocharge = 0;
                }
                else if (strcmp(gunid, "eagle", true, strlen(gunid)) == 0)
                {
                    gun = 24; guncharge = GunPrice[15][0]/100*mod; ammocharge = GunPrice[25][0]*ammo;
                }
                else if (strcmp(gunid, "mp5", true, strlen(gunid)) == 0)
                {
                    gun = 29; guncharge = GunPrice[18][0]/100*mod; ammocharge = GunPrice[27][0]*ammo;
                }
                else if (strcmp(gunid, "shotgun", true, strlen(gunid)) == 0)
                {
                    gun = 25; guncharge = GunPrice[19][0]/100*mod; ammocharge = GunPrice[26][0]*ammo;
                }
                else if (strcmp(gunid, "ak47", true, strlen(gunid)) == 0)
                {
                    gun = 30; guncharge = GunPrice[22][0]/100*mod; ammocharge = GunPrice[28][0]*ammo;
                }
                else if (strcmp(gunid, "m4", true, strlen(gunid)) == 0)
                {
                    gun = 31; guncharge = GunPrice[23][0]/100*mod; ammocharge = GunPrice[28][0]*ammo;
                }
                else if (strcmp(gunid, "rifle", true, strlen(gunid)) == 0)
                {
                    gun = 33; guncharge = GunPrice[24][0]/100*mod; ammocharge = GunPrice[29][0]*ammo;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GRAD6, "Vendedor: Nunca ouvi falar dessa arma.");
                    return 1;
                }
                if((guncharge+ammocharge) > GetPlayerMoneyEx(playerid))
                {
                    format(gstring,sizeof(gstring), "   Você não tem R$%d para pagar !",guncharge+ammocharge);
                    SendClientMessage(playerid, COLOR_GRAD3, gstring);
                    return 1;
                }
                new payout = guncharge + ammocharge;
                format(gstring,sizeof(gstring), "Você comprou um(a) %s com %d bala(s) por R$%d",gunid,ammo,payout);
                SendClientMessage(playerid, COLOR_GRAD3, gstring);
                if(location == 102 && IsACop(playerid)) { }
                else { GivePlayerMoney(playerid, - payout); }
                BizzInfo[location-99][bTill] += payout;
                ExtortionBiz(location-99, payout);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                GivePlayerWeapon(playerid, gun, ammo);
                GetPlayerName(playerid, sendername, sizeof(sendername));
                format(gstring, sizeof(gstring), "%s comprou armas por R$%d na empresa %d", sendername, payout, location-99);
                printf("%s", gstring);
                //PayLog(gstring);
            }
            else
            {
                SendClientMessage(playerid, COLOR_WHITE,"Você não está em uma loja de armas.");
                return 1;
            }
        }
        return 1;
    }
 //MudarNomeSim?
    if (strcmp(cmd, "/melhorar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new gunid[16];
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                format(gstring, sizeof(gstring), "USE: /melhorar [pontos] (Você tem %d pontos de melhora)",PlayerInfo[playerid][gPupgrade]);
                SendClientMessage(playerid, COLOR_WHITE, "|______________ UPGRADES ______________|");
                SendClientMessage(playerid, COLOR_GRAD2,gstring);
                if(PlayerInfo[playerid][pLevel] == 2)
                {
                    SendClientMessage(playerid, COLOR_GRAD3, "Nível 2 Melhorias: Alcool, Drogas");
                }
                else if(PlayerInfo[playerid][pLevel] == 3)
                {
                    SendClientMessage(playerid, COLOR_GRAD3, "Nível 3 Melhorias: Alcool, Drogas, Comercio");
                }
                else if(PlayerInfo[playerid][pLevel] == 3)
                {
                    SendClientMessage(playerid, COLOR_GRAD3, "Nível 4 Melhorias: Alcool, Drogas, Avareza, Comercio");
                }
                else if(PlayerInfo[playerid][pLevel] >= 5)
                {
                    SendClientMessage(playerid, COLOR_GRAD3, "Nível 5 Melhorias: Alcool, Drogas, Avareza, Comercio, PainKillers");
                }
                SendClientMessage(playerid, COLOR_GRAD5, "Extra: Vida");
                return 1;
            }
            strmid(gunid, tmp, 0, strlen(cmdtext), 255);
            if (PlayerInfo[playerid][gPupgrade] >= 1)
            {
                if (PlayerInfo[playerid][pLevel] >= 1 && (strcmp(gunid, "Vida", true, strlen(gunid)) == 0))
                {
                    if (PlayerInfo[playerid][pSHealth] < 50)
                    {
                        PlayerInfo[playerid][pSHealth] = PlayerInfo[playerid][pSHealth]+5.0;
                        format(gstring,sizeof(gstring), "Atualização: você vai nascer com %.2f de vida (+5)",PlayerInfo[playerid][pSHealth]+50);
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "   Você já está no máximo de vida");
                        return 1;
                    }
                }
                else if (PlayerInfo[playerid][pLevel] >= 2 && (strcmp(gunid, "Alcool", true, strlen(gunid)) == 0))
                {
                    if (PlayerInfo[playerid][pAlcoholPerk] < 3)
                    {
                        PlayerInfo[playerid][pAlcoholPerk] += 1;
                        format(gstring,sizeof(gstring), "Nova Atualização: Agora seu nível de alcool é %d.",PlayerInfo[playerid][pAlcoholPerk]);
                        PlayerInfo[playerid][gPupgrade]--;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "   Seu nível de alcool já está no máximo !");
                        return 1;
                    }
                }
                else if (PlayerInfo[playerid][pLevel] >= 2 && (strcmp(gunid, "Drogas", true, strlen(gunid)) == 0))
                {
                    if (PlayerInfo[playerid][pDrugPerk] < 3)
                    {
                        PlayerInfo[playerid][pDrugPerk] += 1;
                        format(gstring,sizeof(gstring), "Nova Atualização: Agora seu nível de drogas é %d.",PlayerInfo[playerid][pDrugPerk]);
                        PlayerInfo[playerid][gPupgrade]--;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "   Seu nível de drogas já está no máximo !");
                        return 1;
                    }
                }
                else if (PlayerInfo[playerid][pLevel] >= 3 && (strcmp(gunid, "Avareza", true, strlen(gunid)) == 0))
                {
                    if (PlayerInfo[playerid][pMiserPerk] < 3)
                    {
                        PlayerInfo[playerid][pMiserPerk] += 1;
                        format(gstring,sizeof(gstring), "Nova Atualização: Agora sua avareza é nível %d.",PlayerInfo[playerid][pMiserPerk]);
                        PlayerInfo[playerid][gPupgrade]--;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "   Sua atualização de Avareza está no máximo !");
                        return 1;
                    }
                }
                else if (PlayerInfo[playerid][pLevel] >= 4 && (strcmp(gunid, "Comercio", true, strlen(gunid)) == 0))
                {
                    if (PlayerInfo[playerid][pTraderPerk] < 3)
                    {
                        PlayerInfo[playerid][pTraderPerk] += 1;
                        format(gstring,sizeof(gstring), "Nova Atualização: Agora seu Comércio é nível %d.",PlayerInfo[playerid][pTraderPerk]);
                        PlayerInfo[playerid][gPupgrade]--;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "   Sua atualização de comércio está no máximo !");
                        return 1;
                    }
                }
                else if (PlayerInfo[playerid][pLevel] >= 5 && (strcmp(gunid, "painkillers", true, strlen(gunid)) == 0))
                {
                    if (PlayerInfo[playerid][pPainPerk] < 3)
                    {
                        PlayerInfo[playerid][pPainPerk] += 1;
                        format(gstring,sizeof(gstring), "Nova Atualização: Seu nível de Pain Killers agora é %d.",PlayerInfo[playerid][pPainPerk]);
                        PlayerInfo[playerid][gPupgrade]--;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD6, "   Sua atualização de Pain Killers já está no máximo !");
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GRAD6, "   Atualização desconhecida");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD6, "   Você tem 0 Pontos de Melhoria");
                return 1;
            }
            SendClientMessage(playerid, COLOR_GRAD6, gstring);
            PlayerInfo[playerid][gPupgrade]--;
        }
        return 1;
    }
//MudeSenha
    if (strcmp(cmd,"/MudarSenha",true) ==0  || strcmp(cmd,"/changepassword",false) ==0 )
    {
        if(IsPlayerConnected(playerid))
        {
            if(MudarSenhaAceito[playerid] == 0)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você precisa pedir permissão para um admin mudar senha, use /relatorio");
                return 1;
            }
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid,CINZA1,"Use: /mudarsenha [Nova Senha]");
                SendClientMessage(playerid,CINZA1,"Guarde a senha ou tire SS da tela apertando F8 para não esquecer!");
                return 1;
            }
            strmid(PlayerInfo[playerid][Rufflesey], result, 0, strlen(result), 255);
            /*getdate(year, month, day);
            format(gstring, sizeof(gstring), "AdmAviso: %s Trocou Sua Senha (%d-%d-%d), Senha: %s", PlayerName(playerid),day,month,year,StrPasswrd[playerid]);
            RegistroLog(gstring);*/
            format(gstring, sizeof(gstring), "SERVER: Você trocou sua Senha para: %s, Salve uma PRINT para não esquecer!!!", PlayerInfo[playerid][Rufflesey]);
            SendClientMessage(playerid,CINZA1,gstring);
            SendClientMessage(playerid,CINZA1,gstring);
            SendClientMessage(playerid,CINZA1,gstring);
            Encrypt(PlayerInfo[playerid][Rufflesey]);
            SalvarPlayer(playerid);
            MudarSenhaAceito[playerid] = 0;
            return 1;
        }
    }
    if(strcmp(cmd,"/An",true) == 0 || strcmp(cmd,"/anuncio",true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Você não pode usar isso Preso");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {

            if(PlayerInfo[playerid][pConnectTime] < 4)
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Você precisa jogar pelo menos 4 horas para mandar anúncios!");
                return 1;
            }
            if(PlayerInfo[playerid][pMuted] == 1)
            {
                SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode enviar anuncios, pois foi calado");
                return 1;
            }
            GetPlayerName(playerid,sendername,sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid,COLOR_GRAD2,"USE: (/An)uncio [Texto do Anuncio]");
                return 1;
            }
            new praVoce = idx * 25;
            if(GetPlayerMoneyEx(playerid) < praVoce)
            {
                format(string,sizeof(string),"* Você usou %d caracteres que custam R$%d,Você não tem esse dinheiro.",offset,praVoce);
                SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
                return 1;
            }
            if(panuncio == 1)
            {
            SendClientMessage(playerid,COLOR_GRAD2,"Espere um minuto para poder anunciar novamente!");
            return 1;
            }
            GivePlayerMoney(playerid,- praVoce);
            SBizzInfo[7][sbTill] += 30;
            ExtortionSBiz(7,30);
            format(strvinny,sizeof(strvinny),"Anuncio: %s, Nome: %s - Celular: %d", result,sendername,PlayerInfo[playerid][pPnumber]);
            OOCNews(0x00FF00FF,strvinny);
            print(strvinny);
            format(string,sizeof(string),"~r~Pagou R$%d ~n~~w~Mensagem continha %d Caracteres",praVoce,idx);
            GameTextForPlayer(playerid,string,5000,5);
            panuncio = 1;
            GastarProdutos(2, 7, 1);
            TempoAn = SetTimer("Anuncio", 60000, 0);
        }
        return 1;
    }
//===============================[anuncios das orgs]===================================//
    if(strcmp(cmd, "/FARC", true) == 0 || strcmp(cmd, "/alq", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(GetPlayerOrg(playerid) == 15)
            {
                if(PlayerInfo[playerid][pCargo] < 4)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
                    return 1;
                }
                new length = strlen(cmdtext);
                while ((idx < length) && (cmdtext[idx] <= ' '))
                {
                    idx++;
                }
                new offset = idx;
                new result[100];
                while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                {
                    result[idx - offset] = cmdtext[idx];
                    idx++;
                }
                result[idx - offset] = EOS;
                if(!strlen(result))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: (/alq)aeda [texto]");
                    return 1;
                }
                if(panunciofarc == 1)
                {
                    SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
                    return 1;
                }
                GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
                //SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}N{95FFDF}| Anúncio Dos Terroristas |{00FF00}B{FFD700}.P.{1E90FF}C{95FFDF}|*~*~*~*~*~*~*~~**");
                format(string,sizeof(string),"[%s] %s, Nome: %s - ID [%d] - Telefone (%d)",NomeORG(playerid), result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
                SendClientMessageToAll(COR_AL, string);
                print(string);
                SBizzInfo[7][sbTill] += 30;
                ExtortionSBiz(7, 30);
                panunciofarc = 1;
                GastarProdutos(2, 7, 1);
                TempoAnFARC = SetTimer("AnuncioFarc", 60000, 0);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/GuerrilheirosIsraelitas", true) == 0 || strcmp(cmd, "/gi", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(GetPlayerOrg(playerid) == 6)
            {
                if(PlayerInfo[playerid][pCargo] < 4)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
                    return 1;
                }
                new length = strlen(cmdtext);
                while ((idx < length) && (cmdtext[idx] <= ' '))
                {
                    idx++;
                }
                new offset = idx;
                new result[100];
                while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                {
                    result[idx - offset] = cmdtext[idx];
                    idx++;
                }
                result[idx - offset] = EOS;
                if(!strlen(result))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: /gi [texto] (Anuncio G.I)");
                    return 1;
                }
                if(panuncioGuerrilheirosIsraelitas == 1)
                {
                    SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
                    return 1;
                }
                GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
                //SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}N{95FFDF}| Anúncio Dos Terroristas |{00FF00}B{FFD700}.P.{1E90FF}C{95FFDF}|*~*~*~*~*~*~*~~**");
                format(string,sizeof(string),"[%s] %s, Nome: %s - ID [%d] - Telefone (%d)",NomeORG(playerid), result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
                SendClientMessageToAll(COR_GI, string);
                print(string);
                SBizzInfo[7][sbTill] += 30;
                ExtortionSBiz(7, 30);
                GastarProdutos(2, 7, 1);
                panuncioGuerrilheirosIsraelitas = 1;
                SetTimer("AnuncioGuerrilheirosIsraelitas", 60000, 0);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/anunciogang", true) == 0 || strcmp(cmd, "/ang", true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Você não pode usar isso Preso");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            if(GetPlayerOrg(playerid) == 5 || GetPlayerOrg(playerid) == 14 || GetPlayerOrg(playerid) == 17 || GetPlayerOrg(playerid) == 18 || GetPlayerOrg(playerid) == 19 || GetPlayerOrg(playerid) == 20 || GetPlayerOrg(playerid) == 26 || GetPlayerOrg(playerid) == 30 || GetPlayerOrg(playerid) == 31 || GetPlayerOrg(playerid) == 27  || GetPlayerOrg(playerid) == 34 || GetPlayerOrg(playerid) == 36 || GetPlayerOrg(playerid) == 35  || GetPlayerOrg(playerid) == 29 )
            {
                if(PlayerInfo[playerid][pCargo] < 4)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
                    return 1;
                }
                new length = strlen(cmdtext);
                while ((idx < length) && (cmdtext[idx] <= ' '))
                {
                    idx++;
                }
                new offset = idx;
                new result[100];
                while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                {
                    result[idx - offset] = cmdtext[idx];
                    idx++;
                }
                result[idx - offset] = EOS;
                if(!strlen(result))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: (/ang) ou (/anunciogang) [texto]");
                    return 1;
                }
                if(panunciogang == 1)
                {
                    SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
                    return 1;
                }
                GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
                //SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}C{95FFDF}| Anúncio Dos Gangsters |{00FF00}B{FFD700}.P.{1E90FF}C{95FFDF}|*~*~*~*~*~*~*~~**");
                format(string,sizeof(string),"[%s] %s, Nome: %s - ID [%d] - Telefone (%d)",NomeORG(playerid), result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
                if(GetPlayerOrg(playerid) == 5) SendClientMessageToAll(COR_AZTECAS, string);
                else if(GetPlayerOrg(playerid) == 14) SendClientMessageToAll(COR_GRO, string);
                else if(GetPlayerOrg(playerid) == 17) SendClientMessageToAll(COR_BALLAS, string);
                else if(GetPlayerOrg(playerid) == 18) SendClientMessageToAll(COR_VAGOS, string);
                else if(GetPlayerOrg(playerid) == 19) SendClientMessageToAll(0xc2091600, string);
                else if(GetPlayerOrg(playerid) == 20) SendClientMessageToAll(0xCCFF99FF, string);
                else if(GetPlayerOrg(playerid) == 26) SendClientMessageToAll(COR_DESTRO, string);
                else if(GetPlayerOrg(playerid) == 27) SendClientMessageToAll(COR_FaTal_DangeR, string);
                else if(GetPlayerOrg(playerid) == 34) SendClientMessageToAll(COR_Reggae, string);
                else if(GetPlayerOrg(playerid) == 30) SendClientMessageToAll(COR_Killers, string);
                else if(GetPlayerOrg(playerid) == 29) SendClientMessageToAll(0x0F3C1FAA, string);
                else if(GetPlayerOrg(playerid) == 31) SendClientMessageToAll(COR_StrikerS, string);
                else if(GetPlayerOrg(playerid) == 35) SendClientMessageToAll(COR_PsykO, string);
                else if(GetPlayerOrg(playerid) == 36) SendClientMessageToAll(COR_FD, string);
                print(string);
                SBizzInfo[7][sbTill] += 30;
                ExtortionSBiz(7, 30);
                panunciogang = 1;
                GastarProdutos(2, 7, 1);
                TempoAnGang = SetTimer("AnuncioGang", 60000, 0);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/anunciomafia", true) == 0 || strcmp(cmd, "/anmafia", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(GetPlayerOrg(playerid) == 12 || GetPlayerOrg(playerid) == 13)
            {
                if(PlayerInfo[playerid][pCargo] < 4)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
                    return 1;
                }
                new length = strlen(cmdtext);
                while ((idx < length) && (cmdtext[idx] <= ' '))
                {
                    idx++;
                }
                new offset = idx;
                new result[100];
                while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                {
                    result[idx - offset] = cmdtext[idx];
                    idx++;
                }
                result[idx - offset] = EOS;
                if(!strlen(result))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: (/anmafia) ou (/anunciomafia) [texto]");
                    return 1;
                }
                if(panunciomafia == 1)
                {
                    SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
                    return 1;
                }
                GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
                //SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}C{95FFDF}| Anúncio Dos Mafiosos |{00FF00}B{FFD700}.P.{1E90FF}C{95FFDF}|*~*~*~*~*~*~*~~**");
                format(string,sizeof(string),"[%s] %s, Nome: %s - ID [%d] - Telefone (%d)",NomeORG(playerid), result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
                if(GetPlayerOrg(playerid) == 12) SendClientMessageToAll(COR_COSA, string);
                else if(GetPlayerOrg(playerid) == 13) SendClientMessageToAll(COR_YAK, string);
                print(string);
                SBizzInfo[7][sbTill] += 30;
                ExtortionSBiz(7, 30);
                panunciomafia = 1;
                GastarProdutos(2, 7, 1);
                TempoAnMafia = SetTimer("AnuncioMafia", 60000, 0);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/anuncioassassinos", true) == 0 || strcmp(cmd, "/anas", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(GetPlayerOrg(playerid) == 8 || GetPlayerOrg(playerid) == 24)
            {
                if(PlayerInfo[playerid][pCargo] < 4)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
                    return 1;
                }
                new length = strlen(cmdtext);
                while ((idx < length) && (cmdtext[idx] <= ' '))
                {
                    idx++;
                }
                new offset = idx;
                new result[100];
                while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                {
                    result[idx - offset] = cmdtext[idx];
                    idx++;
                }
                result[idx - offset] = EOS;
                if(!strlen(result))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: (/anas) ou (/anuncioassassinos) [texto]");
                    return 1;
                }
                if(panunciohitmans == 1)
                {
                    SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
                    return 1;
                }
                GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
                //SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}C{95FFDF}| Anúncio Dos Hitimans |{00FF00}B{FFD700}.P.{1E90FF}C{95FFDF}|*~*~*~*~*~*~*~~**");
                format(string,sizeof(string),"[%s] %s, Nome: %s - ID [%d] - Telefone (%d)",NomeORG(playerid), result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
                if(GetPlayerOrg(playerid) == 8) { SendClientMessageToAll(COR_HITMAN, string); } else { SendClientMessageToAll(COR_TRIAD, string); }
                print(string);
                SBizzInfo[7][sbTill] += 30;
                ExtortionSBiz(7, 30);
                panunciohitmans = 1;
                GastarProdutos(2, 7, 1);
                TempoAnHitmans = SetTimer("AnuncioHitmans", 60000, 0);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/anfamilia", true) == 0 || strcmp(cmd, "/anf", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(GetPlayerFamy(playerid) != 0)
            {
                new length = strlen(cmdtext);
                while ((idx < length) && (cmdtext[idx] <= ' '))
                {
                    idx++;
                }
                new offset = idx;
                new result[100];
                while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                {
                    result[idx - offset] = cmdtext[idx];
                    idx++;
                }
                result[idx - offset] = EOS;
                if(!strlen(result))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: (/anas) ou (/anuncioassassinos) [texto]");
                    return 1;
                }
                if(panunciofamilia == 1)
                {
                    SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
                    return 1;
                }
                GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
                //SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}C{95FFDF}| Anúncio Dos Hitimans |{00FF00}B{FFD700}.P.{1E90FF}C{95FFDF}|*~*~*~*~*~*~*~~**");
                format(string,sizeof(string),"[Família %s] %s, Nome: %s - ID [%d] - Telefone (%d)",NomeFamy(playerid), result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
                SendClientMessageToAll(0xFFDDFFFF, string);
                panunciofamilia = 1;
                SetTimer("AnuncioFamilia", 60000, 0);
                print(string);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/anhells", true) == 0 || strcmp(cmd, "/anhells angels", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(GetPlayerOrg(playerid) == 21)
            {
                if(PlayerInfo[playerid][pCargo] < 4)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
                    return 1;
                }
                new length = strlen(cmdtext);
                while ((idx < length) && (cmdtext[idx] <= ' '))
                {
                    idx++;
                }
                new offset = idx;
                new result[100];
                while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                {
                    result[idx - offset] = cmdtext[idx];
                    idx++;
                }
                result[idx - offset] = EOS;
                if(!strlen(result))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: (/anhells)");
                    return 1;
                }
                if(panuncioMc == 1)
                {
                    SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
                    return 1;
                }
                GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
                //SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}C{95FFDF}| Anúncio Dos Hells Angels |{00FF00}B{FFD700}.P.{1E90FF}C{95FFDF}|*~*~*~*~*~*~*~~**");
                format(string,sizeof(string),"[%s] %s, Nome: %s - ID [%d] - Telefone (%d)", NomeORG(playerid), result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
                SendClientMessageToAll(COR_HELLS, string);
                print(string);
                SBizzInfo[7][sbTill] += 30;
                ExtortionSBiz(7, 30);
                panuncioMc = 1;
                GastarProdutos(2, 7, 1);
                TempoAnmerce = SetTimer("AnuncioMc", 60000, 0);
            }
        }
        return 1;
    }

    if(strcmp(cmd, "/anmon", true) == 0 || strcmp(cmd, "/anmongols", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(GetPlayerOrg(playerid) == 22)
            {
                if(PlayerInfo[playerid][pCargo] < 4)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
                    return 1;
                }
                new length = strlen(cmdtext);
                while ((idx < length) && (cmdtext[idx] <= ' '))
                {
                    idx++;
                }
                new offset = idx;
                new result[100];
                while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                {
                    result[idx - offset] = cmdtext[idx];
                    idx++;
                }
                result[idx - offset] = EOS;
                if(!strlen(result))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: (/anmon)");
                    return 1;
                }
                if(panuncioMc == 1)
                {
                    SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
                    return 1;
                }
                GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
                //SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}C{95FFDF}| Anúncio Dos Mongols |{00FF00}B{FFD700}.P.{1E90FF}C{95FFDF}|*~*~*~*~*~*~*~~**");
                format(string,sizeof(string),"[%s] %s, Nome: %s - ID [%d] - Telefone (%d)", NomeORG(playerid), result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
                SendClientMessageToAll(COR_MONGOLS, string);
                print(string);
                SBizzInfo[7][sbTill] += 30;
                ExtortionSBiz(7, 30);
                panuncioMc = 1;
                GastarProdutos(2, 7, 1);
                TempoAnmerce = SetTimer("AnuncioMc", 60000, 0);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/ansons", true) == 0 || strcmp(cmd, "/sonsofanarchy", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(GetPlayerOrg(playerid) == 23)
            {
                if(PlayerInfo[playerid][pCargo] < 4)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
                    return 1;
                }
                new length = strlen(cmdtext);
                while ((idx < length) && (cmdtext[idx] <= ' '))
                {
                    idx++;
                }
                new offset = idx;
                new result[100];
                while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                {
                    result[idx - offset] = cmdtext[idx];
                    idx++;
                }
                result[idx - offset] = EOS;
                if(!strlen(result))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: (/ansons)");
                    return 1;
                }
                if(panuncioMc == 1)
                {
                    SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
                    return 1;
                }
                GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
                //SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}C{95FFDF}| Anúncio Dos Sons Of Anarchy |{00FF00}B{FFD700}.P.{1E90FF}C{95FFDF}|*~*~*~*~*~*~*~~**");
                format(string,sizeof(string),"[%s] %s, Nome: %s - ID [%d] - Telefone (%d)",NomeORG(playerid), result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
                SendClientMessageToAll(COR_SONS, string);
                print(string);
                SBizzInfo[7][sbTill] += 30;
                ExtortionSBiz(7, 30);
                panuncioMc = 1;
                GastarProdutos(2, 7, 1);
                TempoAnmerce = SetTimer("AnuncioMc", 60000, 0);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/andrifters", true) == 0 || strcmp(cmd, "/anunciodrifters", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(GetPlayerOrg(playerid) == 25)
            {
                if(PlayerInfo[playerid][pCargo] < 4)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
                    return 1;
                }
                new length = strlen(cmdtext);
                while ((idx < length) && (cmdtext[idx] <= ' '))
                {
                    idx++;
                }
                new offset = idx;
                new result[100];
                while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                {
                    result[idx - offset] = cmdtext[idx];
                    idx++;
                }
                result[idx - offset] = EOS;
                if(!strlen(result))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: (/andrifters)");
                    return 1;
                }
                if(panuncioMc == 1)
                {
                    SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
                    return 1;
                }
                GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
                //SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}C{95FFDF}| Anúncio Dos Sons Of Anarchy |{00FF00}B{FFD700}.P.{1E90FF}C{95FFDF}|*~*~*~*~*~*~*~~**");
                format(string,sizeof(string),"[%s] %s, Nome: %s - ID [%d] - Telefone (%d)",NomeORG(playerid), result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
                SendClientMessageToAll(COR_DRIFT, string);
                print(string);
                SBizzInfo[7][sbTill] += 30;
                ExtortionSBiz(7, 30);
                panuncioMc = 1;
                GastarProdutos(2, 7, 1);
                TempoAnmerce = SetTimer("AnuncioMc", 60000, 0);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/anunciotaxi", true) == 0 || strcmp(cmd, "/antaxi", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(GetPlayerOrg(playerid) == 10)
            {
                if(PlayerInfo[playerid][pCargo] < 4)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
                    return 1;
                }
                new length = strlen(cmdtext);
                while ((idx < length) && (cmdtext[idx] <= ' '))
                {
                    idx++;
                }
                new offset = idx;
                new result[100];
                while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                {
                    result[idx - offset] = cmdtext[idx];
                    idx++;
                }
                result[idx - offset] = EOS;
                if(!strlen(result))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: (/antaxi) ou (/anunciotaxi) [texto]");
                    return 1;
                }
                if(panunciotaxi == 1)
                {
                    SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
                    return 1;
                }
                GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
                //SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}C{95FFDF}| Anúncio Dos Taxistas |{00FF00}B{FFD700}.P.{1E90FF}C{95FFDF}|*~*~*~*~*~*~*~~**");
                format(string,sizeof(string),"[%s] %s, Nome: %s - ID [%d] - Telefone (%d)",NomeORG(playerid),result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
                SendClientMessageToAll(COR_TAXI, string);
                print(string);
                SBizzInfo[7][sbTill] += 30;
                ExtortionSBiz(7, 30);
                panunciotaxi = 1;
                GastarProdutos(2, 7, 1);
                TempoAnTaxi = SetTimer("AnuncioTaxi", 60000, 0);
            }
        }
        return 1;
    }
//----------------------------------[government]-----------------------------------------------
if(strcmp(cmd, "/governo", true) == 0 || strcmp(cmd, "/gov", true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Você não pode usar isso Preso");
            return 1;
        }
        if(PlayerInfo[playerid][pMuted] == 1)
        {
            SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            new org = GetPlayerOrg(playerid);
            if(gTeam[playerid] == 2  || IsACop(playerid) || org == 4)
            {
                if(PlayerInfo[playerid][pCargo] < 4)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelomenos cargo 4 para usar este comando!");
                    return 1;
                }
                new length = strlen(cmdtext);
                while ((idx < length) && (cmdtext[idx] <= ' '))
                {
                    idx++;
                }
                new offset = idx;
                new result[100];
                while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                {
                    result[idx - offset] = cmdtext[idx];
                    idx++;
                }
                result[idx - offset] = EOS;
                if(!strlen(result))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: (/gov)erno [texto]");
                    return 1;
                }
                 new str[ 128 ];
                if(TimerOrg[ org ] > gettime() )
                {
                    format( str, sizeof str, "Aguarde %d segundo(s) para mandar o próximo anúncio.", TimerOrg[ org ] - gettime() );
                    SendClientMessage(playerid, COLOR_GREY, str );
                    return 1;
                }
                GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
                if(org == 1)
                {
                    SendClientMessageToAll(0x1d4b9bFF,"-");
                    SendClientMessageToAll(0x1d4b9bFF,"[AVISO GOVERNAMENTAL - POLÍCIA MILITAR]");
                    format(string, sizeof(string), "Policial Militar %s: %s", sendername, result);
                    SendClientMessageToAll(0x1d4b9bFF, string);
                    SendClientMessageToAll(0x1d4b9bFF,"-");
                    SBizzInfo[7][sbTill] += 30;
                    ExtortionSBiz(7, 30);
                }
                else if(org == 2)
                {
                    SendClientMessageToAll(0x4a505aFF,"-");
                    SendClientMessageToAll(0x4a505aFF,"[AVISO GOVERNAMENTAL - ROTA]");
                    format(string, sizeof(string), "ROTA %s: %s", sendername, result);
                    SendClientMessageToAll(0x4a505aFF, string);
                    SendClientMessageToAll(0x4a505aFF,"-");
                    SBizzInfo[7][sbTill] += 30;
                    ExtortionSBiz(7, 30);
                }
                else if(org == 3)
                {
                    SendClientMessageToAll(0x508430FF,"-");
                    SendClientMessageToAll(0x508430FF,"[AVISO GOVERNAMENTAL - Exército ]");
                    format(string, sizeof(string), "Exército %s: %s", sendername, result);
                    SendClientMessageToAll(0x508430FF, string);
                    SendClientMessageToAll(0x508430FF,"-");
                    SBizzInfo[7][sbTill] += 30;
                    ExtortionSBiz(7, 30);
                }
                else if(org == 11)
                {
                    SendClientMessageToAll(0x8b8272FF,"-");
                    SendClientMessageToAll(0x8b8272FF,"[AVISO GOVERNAMENTAL - BOPE]");
                    format(string, sizeof(string), "Policial B.O.P.E %s: %s", sendername, result);
                    SendClientMessageToAll(0x8b8272FF, string);
                    SendClientMessageToAll(0x8b8272FF,"-");
                    SBizzInfo[7][sbTill] += 30;
                    ExtortionSBiz(7, 30);
                }
                else if(org == 16)
                {
                    SendClientMessageToAll(0xa59432FF,"-");
                    SendClientMessageToAll(0xa59432FF,"[AVISO GOVERNAMENTAL - POLÍCIA RODOVIÁRIA]");
                    format(string, sizeof(string), "Policial Rodoviário %s: %s", sendername, result);
                    SendClientMessageToAll(0xa59432FF, string);
                    SendClientMessageToAll(0xa59432FF,"-");
                    SBizzInfo[7][sbTill] += 30;
                    ExtortionSBiz(7, 30);
                }
                else if(org == 28)
                {
                    SendClientMessageToAll(0xFF4500FF,"-");
                    SendClientMessageToAll(0xFF4500FF,"[AVISO GOVERNAMENTAL - BPM ]");
                    format(string, sizeof(string), "Policial BPM  %s: %s", sendername, result);
                    SendClientMessageToAll(0xFF4500FF, string);
                    SendClientMessageToAll(0xFF4500FF,"-");
                    SBizzInfo[7][sbTill] += 30;
                    ExtortionSBiz(7, 30);
                }
                else if(org == 32)
                {
                    SendClientMessageToAll(0xa59432AA,"-");
                    SendClientMessageToAll(0xa59432AA,"[AVISO GOVERNAMENTAL - Policia Civil]");
                    format(string, sizeof(string), "Policia Civil %s: %s", sendername, result);
                    SendClientMessageToAll(0xa59432AA, string);
                    SendClientMessageToAll(0xa59432AA,"-");
                    SBizzInfo[7][sbTill] += 30;
                    ExtortionSBiz(7, 30);
                }
                else if(org == 4)
                {
                    SendClientMessageToAll(0xFF0080FF,"-");
                    SendClientMessageToAll(0xFF0080FF,"[AVISO GOVERNAMENTAL - MÉDICOS]");
                    format(string, sizeof(string), "Médico %s: %s", sendername, result);
                    SendClientMessageToAll(0xFF0080FF, string);
                    SendClientMessageToAll(0xFF0080FF,"-");
                    SBizzInfo[7][sbTill] += 30;
                    ExtortionSBiz(7, 30);
                }
                GastarProdutos(2, 7, 1);
                TimerOrg[ org ] = gettime() + 60;
                print(string);

            }
        }
        return 1;
    }
//----------------------------------[Prefeito]-----------------------------------------------
    if(strcmp(cmd, "/prefeitoo", true) == 0 || strcmp(cmd, "/pre", true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
           SendClientMessage(playerid,COLOR_YELLOW," Você não pode se comunicar na cadeia!");
           return 1;
        }
        if(PlayerInfo[playerid][pMuted] == 1)
        {
            SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
            return 1;
        }
        new str[ 128 ];
        new org = GetPlayerOrg(playerid);
        if(TimerOrg[ org ] > gettime() )
        {
            format( str, sizeof str, "Aguarde %d segundo(s) para mandar o próximo anúncio.", TimerOrg[ org ] - gettime() );
            SendClientMessage(playerid, COLOR_GREY, str );
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            if(gTeam[playerid] == 7  || IsAGOV(playerid))
            {
                if(PlayerInfo[playerid][pCargo] < 4)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Você precisa ter pelomenos cargo 4 para usar este comando");
                    return 1;
                }
                GetPlayerName(playerid, sendername, sizeof(sendername));
                new length = strlen(cmdtext);
                while ((idx < length) && (cmdtext[idx] <= ' '))
                {
                    idx++;
                }
                new offset = idx;
                new result[100];
                while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                {
                    result[idx - offset] = cmdtext[idx];
                    idx++;
                }
                result[idx - offset] = EOS;
                if(!strlen(result))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: (/pre)feito [texto]");
                    return 1;
                }
                SendClientMessageToAll(0x27AE60FF,"-");
                SendClientMessageToAll(0x27AE60FF,"[AVISO GOVERNAMENTAL - PREFEITURA DE LOS SANTOS]");
                format(string, sizeof(string), "Governo %s: %s", sendername, result);
                SendClientMessageToAll(0x27AE60FF, string);
                SendClientMessageToAll(0x27AE60FF,"-");
                SBizzInfo[7][sbTill] += 30;
                print(string);
                ExtortionSBiz(7, 30);
                GastarProdutos(2, 7, 1);
                TimerOrg[ org ] = gettime() + 60;
            }
        }
        return 1;
    }
//----------------------------------[to]-----------------------------------------------
    if(strcmp(cmd, "/desativar", true) == 0)
    {
        if(gPlayerLogged[playerid] == 0)
        {
            SendClientMessage(playerid, COLOR_GRAD3, "    Você não fez o login");
            return 1;
        }
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_WHITE, "|______________ Desabilitar ______________|");
            SendClientMessage(playerid, COLOR_WHITE,"/desativar [nome]");
            SendClientMessage(playerid, COLOR_GREY,"Nomes Disponíveis: org, celular");
            return 1;
        }
        /*if(strcmp(tmp, "noticias", true) == 0)
        {
            if (!gNews[playerid])
            {
                gNews[playerid] = 1;
                SendClientMessage(playerid, COLOR_GRAD2, "   Chat de notícias desativado !");
            }
            else if (gNews[playerid])
            {
                gNews[playerid] = 0;
                SendClientMessage(playerid, COLOR_GRAD2, "   Chat de notícias ativado !");
            }
        }*/
        else if(strcmp(tmp, "org", true) == 0)
        {
            if (!gFam[playerid])
            {
                gFam[playerid] = 1;
                SendClientMessage(playerid, COLOR_GRAD2, "   Chat da organização desativado !");
            }
            else if (gFam[playerid])
            {
                gFam[playerid] = 0;
                SendClientMessage(playerid, COLOR_GRAD2, "   Chat da organização ativado !");
            }
        }
        else if(strcmp(tmp, "celular", true) == 0)
        {
            if(PlayerInfo[playerid][pVip] > 0 || PlayerInfo[playerid][pAdmin] > 1)
            {
                if (!PhoneOnline[playerid])
                {
                    PhoneOnline[playerid] = 1;
                    SendClientMessage(playerid, COLOR_GRAD2, "   Você desligou seu celular (não receberá ligações nem SMS) !");
                    CellTime[playerid] = 0;
                    Mobile[playerid] = 9999;
                    new pSpecialAction = GetPlayerSpecialAction(playerid);
                    if (pSpecialAction == SPECIAL_ACTION_USECELLPHONE)
                    {
                        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
                    }
                }
                else if (PhoneOnline[playerid])
                {
                    PhoneOnline[playerid] = 0;
                    SendClientMessage(playerid, COLOR_GRAD2, "   Você ligou seu celular !");
                }
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_WHITE, "|______________ Desabilitar ______________|");
            SendClientMessage(playerid, COLOR_WHITE,"/desativar [nome]");
            SendClientMessage(playerid, COLOR_GREY,"Nomes Disponíveis: org, noticias, celular");
        }
        return 1;
    }
//----------------------------------[Emote]-----------------------------------------------
    if(strcmp(cmd, "/eu", true) == 0)
    {
        if(PlayerInfo[playerid][pMuted] == 1)
        {
            SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            if(gPlayerLogged[playerid] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não está logado !");
                return 1;
            }
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /eu [action]");
                return 1;
            }
            if(PlayerInfo[playerid][pMaskuse] == 1)
            {
                format(string, sizeof(string), "* Mascara %s", result);
            }
            else
            {
                format(string, sizeof(string), "* %s %s", sendername, result);
            }
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            printf("%s", string);
        }
        return 1;
    }
//----------------------------------[Local]-----------------------------------------------
    if(strcmp(cmd, "/sussurro", true) == 0 || strcmp(cmd, "/s", true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
           SendClientMessage(playerid,COLOR_YELLOW," Você não pode sussurrar da cadeia!");
           return 1;
        }
        if(PlayerInfo[playerid][pMuted] == 1)
        {
            SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            if(gPlayerLogged[playerid] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não logou ainda !");
                return 1;
            }
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /(s)ussurro [Para falar pra quem está perto]");
                return 1;
            }
            format(string, sizeof(string), "%s Sussurra: %s", sendername, result);
            ProxDetector(3.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
            printf("%s", string);
        }
        return 1;
    }
//----------------------------------[Short]-----------------------------------------------
    if(strcmp(cmd,"/Gritar",true) == 0 || strcmp(cmd,"/g",true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
           SendClientMessage(playerid,COLOR_YELLOW," Você não pode gritar na cadeia!");
           return 1;
        }
        if(PlayerInfo[playerid][pMuted] == 1)
        {
            SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            if(gPlayerLogged[playerid] == 0)
            {
                SendClientMessage(playerid,CINZA,"Você não está logado/registrado!");
                return 1;
            }
            if(Rouco[playerid] > 5)
            {
                SendClientMessage(playerid,CINZA,"Você está Rouco, aguarde 5 segundos para gritar novamente!");
                SetTimerEx("NRouco", 5000, 0, "d", playerid);
                return 1;
            }
            GetPlayerName(playerid,sendername,sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid,CINZA2,"Use: (/G)ritar [Texto]");
                return 1;
            }
            format(string,sizeof(string),"%s Grita: %s!!!",sendername,result);
            ProxDetector(30.0,playerid,string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
            ApplyAnimation(playerid,"RIOT", "RIOT_shout",4.0,0,1,0,0,0);
            Rouco[playerid]++;
            printf("%s",string);
        }
        return 1;
    }
    if(strcmp(cmd, "/megafoneadmin", true) == 0 || strcmp(cmd, "/ma", true) == 0)
    {
        if(PlayerInfo[playerid][pMuted] == 1)
        {
            SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
   return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um admin!");
       return 1;
            }
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[126];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: (/ma)egafone [Megafone Admin]");
    return 1;
            }
            if (PlayerInfo[playerid][pAdmin] >=1)
            {
                if (PlayerInfo[playerid][pAdmin] >=1)
                {
                    format(string, sizeof(string), "ADMIN %s:o< %s", sendername, result);
                    ProxDetector(60.0, playerid, string,0xFFC0E7F6,0xFFC0E7F6,0xFFC0E7F6,0xFFC0E7F6,0xFFC0E7F6);
                }
                printf("%s", string);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD2, "   Você não é admin!");
    return 1;
            }
        }
  return 1;
    }
//----------------------------------[Short]-----------------------------------------------
    if(strcmp(cmd, "/megafone", true) == 0 || strcmp(cmd, "/m", true) == 0)
    {
        if(PlayerInfo[playerid][pMuted] == 1)
        {
            SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            if(!IsACop(playerid))
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
                return 1;
            }
            if(OnDuty[playerid] != 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não bateu o cartão!");
                return 1;
            }
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: (/m)egafone [megaphone chat]");
                return 1;
            }
            if(gTeam[playerid] == 2 || IsACop(playerid))
            {
                if(PlayerInfo[playerid][pMembro] == 1||PlayerInfo[playerid][pLider] == 1)
                {
                    format(string, sizeof(string), "Policial Militar %s:o< %s", sendername, result);
                    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
                }
                else if(PlayerInfo[playerid][pMembro] == 2||PlayerInfo[playerid][pLider] == 2)
                {
                    format(string, sizeof(string), "ROTA %s:o< %s", sendername, result);
                    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
                }
                else if(PlayerInfo[playerid][pMembro] == 28||PlayerInfo[playerid][pLider] == 28)
                {
                    format(string, sizeof(string), "BPM  %s:o< %s", sendername, result);
                    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
                }
                else if(PlayerInfo[playerid][pMembro] == 3||PlayerInfo[playerid][pLider] == 3)
                {
                    format(string, sizeof(string), "Exército %s:o< %s", sendername, result);
                    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
                }
                else if(IsAGOV(playerid))
                {
                    format(string, sizeof(string), "Governo %s:o< %s", sendername, result);
                    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
                }
                else if(PlayerInfo[playerid][pMembro] == 16||PlayerInfo[playerid][pLider] == 16)
                {
                    format(string, sizeof(string), "Polícia %s:o< %s", sendername, result);
                    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
                }
                else if(PlayerInfo[playerid][pMembro] == 11||PlayerInfo[playerid][pLider] == 11)
                {
                    format(string, sizeof(string), "B.O.P.E %s:o< %s", sendername, result);
                    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
                }
                else if(PlayerInfo[playerid][pMembro] == 32||PlayerInfo[playerid][pLider] == 32)
                {
                    format(string, sizeof(string), "Polícia Federal %s:o< %s", sendername, result);
                    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
                }
                printf("%s", string);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD2, "   Você não faz parte de nenhuma equipe !");
                return 1;
            }
        }
        return 1;
    }
//----------------------------------[Team]-----------------------------------------------
    if(strcmp(cmd, "/radio", true) == 0 || strcmp(cmd, "/r", true) == 0)
    {
        if(PlayerInfo[playerid][pMuted] == 1)
        {
            SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
            return 1;
        }
        if(admtrampando[playerid] == 1) { return SendClientMessage(playerid, COLOR_GRAD2, "Você não pode Falar no Rádio da Org estando em modo Trabalho!"); }
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_R, "USE: (/r)adio [radio chat]");
                return 1;
            }
            if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1
            || PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2
            || PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3
            || PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4
            || PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7
            || PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11
            || PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16
            || PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32
            || PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28
            || PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)
            {
                format(string, sizeof(string), "{33ccff}** %s %s: %s, over. **",OrgCargo(playerid), sendername, result);
                SendFamilyMessage(GetPlayerOrg(playerid),COLOR_LIGHTBLUE,string);
                //printf("%s", strvinny);
                format(string, sizeof(string), "{e9e9e9}* %s falou algo no rádio.", sendername);
                ProxDetector(20.0, playerid, string, 0xe9e9e9FF,0xe9e9e9FF,0xe9e9e9FF,0xe9e9e9FF,0xe9e9e9FF);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD2, "   Você não é de nenhuma equipe !");
                return 1;
            }
        }
        return 1;
    }
//----------------------------------[offduty]-----------------------------------------------
    if(strcmp(cmd, "/batercartao", true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid,COLOR_YELLOW," Você não pode batercartao na cadeia!");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            if(IsACop(playerid))
            {
                if (PlayerToPoint(2, playerid,255.1110,76.0224,1003.6406) || PlayerToPoint(2,playerid,-1616.1294,681.1594,7.1875) || PlayerToPoint(2,playerid,230.1107,165.2237,1003.0234) || PlayerToPoint(2, playerid,1530.3945,-1664.0377,6.2187) || PlayerToPoint(2, playerid,302.7606,-1529.7537,24.9219) || PlayerToPoint(2, playerid,-1345.8823,492.5301,11.2027) || PlayerToPoint(2,playerid, -58.299999237061,-2293.6000976563,11.10000038147)
                || PlayerToPoint(2, playerid,326.4911,307.0710,999.1484)|| PlayerToPoint(2, playerid,1391.5026,-1623.0095,13.5469) || PlayerToPoint(2, playerid,629.1463,-581.5966,16.9337) || PlayerToPoint(2, playerid,-2446.4824,516.1896,30.2254) || PlayerInfo[playerid][pLocal] != 9999 || PlayerToPoint(2, playerid,1865.16,1198.86,18.17) || PlayerToPoint(2,playerid,234.3249,111.4311,1003.2257))
                {
                    if(OnDuty[playerid]==0)
                    {
                        if(BateuCartao[playerid] == 0)
                        {
                            format(string, sizeof(string), "%s: Oficial %s Colocou sua Farda.",NomeORG(playerid), PlayerName(playerid));
                            OOCNews(0xFF8080AA,string);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora Você Está em Serviço, Pegue seu equipamento com /equipar!");
                            SetPlayerArmour(playerid, 100);
                            SetPlayerHealth(playerid, 100);
                            OnDuty[playerid] = 1;
                            EmpregoDuty[playerid] = 2;
                            BateuCartao[playerid] = 1;
                            SetTimerEx("BaterNovamente", 20000, 0, "d", playerid);
                        }
                        else
                        {
                            SendClientMessage(playerid,0xB0B0B0AA," Espere Alguns segundos para Bater Cartão novamente!");
                        }
                    }
                    else if(OnDuty[playerid]==1)
                    {
                            format(string, sizeof(string), "%s: Oficial %s Retirou sua Farda.",NomeORG(playerid), PlayerName(playerid));
                            OOCNews(0xFF8080AA,string);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora Você Retirou sua Farda, e Não receberá Chamados!");
                            OnDuty[playerid] = 0;
                            EmpregoDuty[playerid] = 0;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "   Você não está em um vestiário !");
                    return 1;
                }
            }
            else if(PlayerToPoint(3.0, playerid,1712.3607,1177.3903,34.8259))
            {
                if(PlayerInfo[playerid][pMembro] == 4||PlayerInfo[playerid][pLider] == 4)
                {
                    if(EmpregoDuty[playerid] == 1)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora Você Está De Folga, e não receberá chamados!");
                        EmpregoDuty[playerid] = 0;
                        Medics -= 1;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora você está de plantão com o seu trabalho e irá receber chamadas de pessoas que precisam.");
                        EmpregoDuty[playerid] = 1;
                        format(string, sizeof(string), "[Anuncio] O Médico %s está em servico, /servico medico.", sendername);
                        OOCNews(0x2993EDAA,string);
                        Medics += 1;
                    }
                }
            }
            else if(PlayerInfo[playerid][pEmprego] == 5)
            {
                if(EmpregoDuty[playerid] == 1)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora Você Está De Folga, e não receberá chamados!");
                    EmpregoDuty[playerid] = 0;
                    Mechanics -= 1;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora você está de plantão como mecânico e irá receber chamadas de pessoas que precisam.");
                    EmpregoDuty[playerid] = 1;
                    format(string, sizeof(string), "[Anuncio] O Mecanico %s está em servico, /servico mecanico.", sendername);
                    OOCNews(0x2993EDAA,string);
                    Mechanics += 1;
                    BateuCartao[playerid] = 1;
                       SetTimerEx("BaterNovamente", 20000, 0, "d", playerid);
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não é Um Oficial/Médico/Mecânico ou Não está no local!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/menucop", true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid,COLOR_GREY,"ERRO: Voce Esta Preso!");
            return 1;
        }
        if (IsACop(playerid))
        {
        if(PlayerToPoint(2, playerid,255.1110,76.0224,1003.6406) || PlayerToPoint(2,playerid,-1616.1294,681.1594,7.1875) || PlayerToPoint(2,playerid,230.1107,165.2237,1003.0234) || PlayerToPoint(2, playerid,1530.3945,-1664.0377,6.2187) || PlayerToPoint(2, playerid,302.7606,-1529.7537,24.9219) || PlayerToPoint(2, playerid,-1345.8823,492.5301,11.2027)
        || PlayerToPoint(2, playerid,326.4911,307.0710,999.1484)|| PlayerToPoint(2, playerid,1391.5026,-1623.0095,13.5469) || PlayerToPoint(2, playerid,629.1463,-581.5966,16.9337) || PlayerToPoint(2, playerid,-2446.4824,516.1896,30.2254) || PlayerToPoint(2, playerid,1865.16,1198.86,18.17) || PlayerToPoint(2,playerid,234.3249,111.4311,1003.2257))
        {
            ShowPlayerDialog(playerid, 5678, DIALOG_STYLE_LIST, "Menu", "Bater cartão\nPegar Armas\nPegar Escudo\nRetirar Escudo\nVer Procurados\nVer Presos\nPegar Colete", "Ok", "Cancelar");
            TogglePlayerControllable(playerid, 0);
            return 1;
            }
        }
    }
    if(!strcmp(cmdtext,"/escudo",true))
    {
        if(PlayerToPoint(2, playerid,255.1110,76.0224,1003.6406) || PlayerToPoint(2,playerid,-1616.1294,681.1594,7.1875) || PlayerToPoint(2,playerid,230.1107,165.2237,1003.0234)  || PlayerToPoint(2, playerid,1530.3945,-1664.0377,6.2187) || PlayerToPoint(2, playerid,302.7606,-1529.7537,24.9219) || PlayerToPoint(2, playerid,-1345.8823,492.5301,11.2027)
        || PlayerToPoint(2, playerid,326.4911,307.0710,999.1484)|| PlayerToPoint(2, playerid,1391.5026,-1623.0095,13.5469) || PlayerToPoint(2, playerid,629.1463,-581.5966,16.9337) || PlayerToPoint(2, playerid,-2446.4824,516.1896,30.2254) || PlayerToPoint(2, playerid,1865.16,1198.86,18.17) || PlayerToPoint(2,playerid,234.3249,111.4311,1003.2257))
        {
            SetPlayerAttachedObject(playerid,1,18637,13,0.35,0.0,0.0,0.0,0.0,180.0);
            SetPlayerAttachedObject(playerid,2,18642,7,0.1,0.0,-0.11,0.0,-90.0,90.0);
            SendClientMessage(playerid,COLOR_GREY," Para retirar o escudo digite /tirarescudo!");
            return 1;
        }
        else
        {
            SendClientMessage(playerid,COLOR_GREY," Você só pode pegar escudo no local de equipar!");
        }
    }
    if(!strcmp(cmdtext,"/relatoon",true))
    {
        if(SuOff[playerid] == false)
        {
            SendClientMessage(playerid,0x7293EBAA,"Voce desativou o relato de crimes");
            SuOff[playerid] = true;
            return 1;
        }
        if(SuOff[playerid] == true)
        {
            SendClientMessage(playerid,0x7293EBAA,"Voce ativou o relato de crimes");
            SuOff[playerid] = false;
            return 1;
        }
    }
    if(strcmp(cmd, "/taser", true) == 0){
        new aarma;
        if( IsACop( playerid ) ){
            if( BulletTaser[ playerid ] < 1 ) return SendClientMessage( playerid, COLOR_GRAD2, "Sua taser esta descarregada. Equipe se na HQ." );
            if( Taser[ playerid ] == true ){
                Taser[ playerid ] = false;
                GetPlayerWeaponData( playerid, 2, aarma, BulletTaser[ playerid ] );
                if( WeaponsPlayer[ playerid ][ 2 ] > 0 ){
                    GivePlayerWeapon( playerid, WeaponsPlayer[ playerid ][ 2 ], BulletsPlayer[ playerid ][ 2 ] );
                }
                else{
                    RemovePlayerWeapon( playerid, 23 );
                }
            }
            else{
                GetPlayerWeaponData( playerid, 2, WeaponsPlayer[ playerid ][ 2 ], BulletsPlayer[ playerid ][ 2 ] );
                Taser[ playerid ] = true;
                GivePlayerWeapon( playerid, 23, BulletTaser[ playerid ] );
            }
            return true;
        }
        return true;
    }
    if(!strcmp(cmdtext,"/tirarescudo",true))
    {
        RemovePlayerAttachedObject(playerid,1);
        RemovePlayerAttachedObject(playerid,2);
        return 1;
    }
    if(strcmp(cmd, "/taserlog", true) == 0)
    {
        if( PlayerInfo[ playerid ][ pAdmin ] > 1 ){
            if( taserlog[ playerid ] == true ){
                taserlog[ playerid ] = false;
                SendClientMessage( playerid, -1, "Você {FF0000}desativou {FFFFFF}seu taserlog." );
            }
            else{
                SendClientMessage( playerid, -1, "Você {00FF00}ativou {FFFFFF}seu taserlog." );
                taserlog[ playerid ] = true;
            }

        }
        return true;
    }
    if(strcmp(cmd, "/equipar", true) == 0)
    {
        new cargo = PlayerInfo[playerid][pCargo];
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid,COLOR_GREY," Você não pode equipar na cadeia!");
            return 1;
        }
        if(!LocalEquipar(playerid)) return SendClientMessage(playerid,COLOR_GREY,"ERRO: Você não está no Local de Equipar!");
        if (IsACop(playerid))
        {
            ResetPlayerWeapons(playerid);
            SetPlayerArmour(playerid, 100);
            SetPlayerHealth(playerid, 100);
            Taser[ playerid ] = false;
            BulletTaser[ playerid ] = 5;
            if(cargo == 1)
            {
            GivePlayerWeapon(playerid, 24, 150);
            GivePlayerWeapon(playerid, 25, 100);
            GivePlayerWeapon(playerid, 31, 250);
            GivePlayerWeapon(playerid, 17, 3);
            GivePlayerWeapon(playerid, 4, 1);
            format(string, sizeof(string), "* Policial %s pega seus equipamentos.", PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            if(cargo == 2)
            {
            GivePlayerWeapon(playerid, 24, 200);
            GivePlayerWeapon(playerid, 25, 150);
            GivePlayerWeapon(playerid, 31, 300);
            GivePlayerWeapon(playerid, 17, 5);
            GivePlayerWeapon(playerid, 4, 1);
            format(string, sizeof(string), "* Policial %s pega seus equipamentos.", PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            if(cargo == 3)
            {
            GivePlayerWeapon(playerid, 24, 250);
            GivePlayerWeapon(playerid, 25, 200);
            GivePlayerWeapon(playerid, 31, 350);
            GivePlayerWeapon(playerid, 17, 7);
            GivePlayerWeapon(playerid, 4, 1);
            format(string, sizeof(string), "* Policial %s pega seus equipamentos.", PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            if(cargo == 4)
            {
            GivePlayerWeapon(playerid, 24, 300);
            GivePlayerWeapon(playerid, 25, 250);
            GivePlayerWeapon(playerid, 31, 400);
            GivePlayerWeapon(playerid, 17, 10);
            GivePlayerWeapon(playerid, 4, 1);
            GivePlayerWeapon(playerid, 34, 30);
            format(string, sizeof(string), "* Policial %s pega seus equipamentos.", PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            if(cargo == 5)
            {
            GivePlayerWeapon(playerid, 24, 400);
            GivePlayerWeapon(playerid, 25, 300);
            GivePlayerWeapon(playerid, 31, 450);
            GivePlayerWeapon(playerid, 17, 12);
            GivePlayerWeapon(playerid, 4, 1);
            GivePlayerWeapon(playerid, 34, 60);
            format(string, sizeof(string), "* Policial %s pega seus equipamentos de Sub-Líder.", PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            if(cargo == 6)
            {
            GivePlayerWeapon(playerid, 24, 500);
            GivePlayerWeapon(playerid, 25, 350);
            GivePlayerWeapon(playerid, 31, 500);
            GivePlayerWeapon(playerid, 17, 15);
            GivePlayerWeapon(playerid, 4, 1);
            GivePlayerWeapon(playerid, 34, 100);
            format(string, sizeof(string), "* Policial %s pega seus equipamentos de Líder.", PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            return true;
        }
        if(IsAGang(playerid) || GetPlayerOrg(playerid) == 12 || GetPlayerOrg(playerid) == 13)
        {
            ResetPlayerWeapons(playerid);
            SetPlayerArmour(playerid, 100);
            SetPlayerHealth(playerid, 100);
            new za = GetPlayerOrg(playerid);
            if(Morro[Dono] == za)
            {
                if(cargo == 1)
                {
                GivePlayerWeapon(playerid, 24, 999);
                GivePlayerWeapon(playerid, 25, 999);
                GivePlayerWeapon(playerid, 29, 999);
                GivePlayerWeapon(playerid, 30, 999);
                GivePlayerWeapon(playerid, 4, 1);
                format(string, sizeof(string), "* O Gangster %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                }
                if(cargo == 2)
                {
                GivePlayerWeapon(playerid, 24, 999);
                GivePlayerWeapon(playerid, 25, 999);
                GivePlayerWeapon(playerid, 29, 999);
                GivePlayerWeapon(playerid, 30, 999);
                GivePlayerWeapon(playerid, 4, 1);
                format(string, sizeof(string), "* O Gangster %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                }
                if(cargo == 3)
                {
                GivePlayerWeapon(playerid, 24, 999);
                GivePlayerWeapon(playerid, 25, 999);
                GivePlayerWeapon(playerid, 29, 999);
                GivePlayerWeapon(playerid, 30, 999);
                GivePlayerWeapon(playerid, 4, 1);
                format(string, sizeof(string), "* O Gangster %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                }
                if(cargo == 4)
                {
                GivePlayerWeapon(playerid, 24, 999);
                GivePlayerWeapon(playerid, 25, 999);
                GivePlayerWeapon(playerid, 29, 999);
                GivePlayerWeapon(playerid, 30, 999);
                GivePlayerWeapon(playerid, 4, 1);
                format(string, sizeof(string), "* O Gangster %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                }
                if(cargo == 5)
                {
                GivePlayerWeapon(playerid, 24, 999);
                GivePlayerWeapon(playerid, 25, 999);
                GivePlayerWeapon(playerid, 29, 999);
                GivePlayerWeapon(playerid, 30, 999);
                GivePlayerWeapon(playerid, 4, 1);
                format(string, sizeof(string), "* O Gangster %s pega seus equipamentos de Sub-Líder.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                }
                if(cargo == 6)
                {
                GivePlayerWeapon(playerid, 24, 999);
                GivePlayerWeapon(playerid, 25, 999);
                GivePlayerWeapon(playerid, 29, 999);
                GivePlayerWeapon(playerid, 30, 999);
                GivePlayerWeapon(playerid, 4, 1);
                format(string, sizeof(string), "* O Gangster %s pega seus equipamentos de Líder.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                }
                return true;
            }
            if(cargo == 1)
            {
            GivePlayerWeapon(playerid, 24, 150);
            GivePlayerWeapon(playerid, 25, 100);
            GivePlayerWeapon(playerid, 29, 250);
            GivePlayerWeapon(playerid, 30, 250);
            GivePlayerWeapon(playerid, 4, 1);
            format(string, sizeof(string), "* O Gangster %s pega seus equipamentos.", PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            if(cargo == 2)
            {
            GivePlayerWeapon(playerid, 24, 200);
            GivePlayerWeapon(playerid, 25, 150);
            GivePlayerWeapon(playerid, 29, 300);
            GivePlayerWeapon(playerid, 30, 300);
            GivePlayerWeapon(playerid, 4, 1);
            format(string, sizeof(string), "* O Gangster %s pega seus equipamentos.", PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            if(cargo == 3)
            {
            GivePlayerWeapon(playerid, 24, 250);
            GivePlayerWeapon(playerid, 25, 200);
            GivePlayerWeapon(playerid, 29, 350);
            GivePlayerWeapon(playerid, 30, 350);
            GivePlayerWeapon(playerid, 4, 1);
            format(string, sizeof(string), "* O Gangster %s pega seus equipamentos.", PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            if(cargo == 4)
            {
            GivePlayerWeapon(playerid, 24, 300);
            GivePlayerWeapon(playerid, 25, 250);
            GivePlayerWeapon(playerid, 29, 400);
            GivePlayerWeapon(playerid, 30, 400);
            GivePlayerWeapon(playerid, 4, 1);
            format(string, sizeof(string), "* O Gangster %s pega seus equipamentos.", PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            if(cargo == 5)
            {
            GivePlayerWeapon(playerid, 24, 400);
            GivePlayerWeapon(playerid, 25, 300);
            GivePlayerWeapon(playerid, 29, 450);
            GivePlayerWeapon(playerid, 30, 450);
            GivePlayerWeapon(playerid, 4, 1);
            format(string, sizeof(string), "* O Gangster %s pega seus equipamentos de Sub-Líder.", PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            if(cargo == 6)
            {
            GivePlayerWeapon(playerid, 24, 500);
            GivePlayerWeapon(playerid, 25, 350);
            GivePlayerWeapon(playerid, 29, 500);
            GivePlayerWeapon(playerid, 30, 500);
            GivePlayerWeapon(playerid, 4, 1);
            format(string, sizeof(string), "* O Gangster %s pega seus equipamentos de Líder.", PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            return true;
        }
        if( GetPlayerOrg( playerid ) == 12 || GetPlayerOrg( playerid ) == 13 ){
            if( cargo > 1 ){
                GivePlayerWeapon( playerid, 34, 60 );
            }
        }
        if(GetPlayerOrg(playerid) == 15 || GetPlayerOrg(playerid) == 6)
        {
            ResetPlayerWeapons(playerid);
            SetPlayerArmour(playerid, 100);
            SetPlayerHealth(playerid, 100);
            new za = GetPlayerOrg(playerid);
            if(Territorio[Vencedor] == za)
            {
                if(cargo == 1)
                {
                GivePlayerWeapon(playerid, 24, 999);
                GivePlayerWeapon(playerid, 25, 999);
                GivePlayerWeapon(playerid, 29, 999);
                GivePlayerWeapon(playerid, 30, 999);
                GivePlayerWeapon(playerid, 4, 1);
                format(string, sizeof(string), "* O Terrorista %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                }
                if(cargo == 2)
                {
                GivePlayerWeapon(playerid, 24, 999);
                GivePlayerWeapon(playerid, 25, 999);
                GivePlayerWeapon(playerid, 29, 999);
                GivePlayerWeapon(playerid, 30, 999);
                GivePlayerWeapon(playerid, 4, 1);
                format(string, sizeof(string), "* O Terrorista %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                }
                if(cargo == 3)
                {
                GivePlayerWeapon(playerid, 24, 999);
                GivePlayerWeapon(playerid, 25, 999);
                GivePlayerWeapon(playerid, 29, 999);
                GivePlayerWeapon(playerid, 30, 999);
                GivePlayerWeapon(playerid, 4, 1);
                format(string, sizeof(string), "* O Terrorista %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                }
                if(cargo == 4)
                {
                GivePlayerWeapon(playerid, 24, 999);
                GivePlayerWeapon(playerid, 25, 999);
                GivePlayerWeapon(playerid, 29, 999);
                GivePlayerWeapon(playerid, 30, 999);
                GivePlayerWeapon(playerid, 34, 999);
                GivePlayerWeapon(playerid, 4, 1);
                format(string, sizeof(string), "* O Terrorista %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                }
                if(cargo == 5)
                {
                GivePlayerWeapon(playerid, 24, 999);
                GivePlayerWeapon(playerid, 25, 999);
                GivePlayerWeapon(playerid, 29, 999);
                GivePlayerWeapon(playerid, 30, 999);
                GivePlayerWeapon(playerid, 34, 999);
                GivePlayerWeapon(playerid, 4, 1);
                format(string, sizeof(string), "* O Terrorista %s pega seus equipamentos de Sub-Líder.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                }
                if(cargo == 6)
                {
                GivePlayerWeapon(playerid, 24, 999);
                GivePlayerWeapon(playerid, 25, 999);
                GivePlayerWeapon(playerid, 29, 999);
                GivePlayerWeapon(playerid, 30, 999);
                GivePlayerWeapon(playerid, 34, 999);
                GivePlayerWeapon(playerid, 4, 1);
                format(string, sizeof(string), "* O Terrorista %s pega seus equipamentos de Líder.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                }
                return 1;
            }
            if(cargo == 1)
            {
            GivePlayerWeapon(playerid, 24, 150);
            GivePlayerWeapon(playerid, 25, 100);
            GivePlayerWeapon(playerid, 29, 250);
            GivePlayerWeapon(playerid, 30, 250);
            GivePlayerWeapon(playerid, 4, 1);
            format(string, sizeof(string), "* O Terrorista %s pega seus equipamentos.", PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            if(cargo == 2)
            {
            GivePlayerWeapon(playerid, 24, 200);
            GivePlayerWeapon(playerid, 25, 150);
            GivePlayerWeapon(playerid, 29, 300);
            GivePlayerWeapon(playerid, 30, 300);
            GivePlayerWeapon(playerid, 4, 1);
            format(string, sizeof(string), "* O Terrorista %s pega seus equipamentos.", PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            if(cargo == 3)
            {
            GivePlayerWeapon(playerid, 24, 250);
            GivePlayerWeapon(playerid, 25, 200);
            GivePlayerWeapon(playerid, 29, 350);
            GivePlayerWeapon(playerid, 30, 350);
            GivePlayerWeapon(playerid, 4, 1);
            format(string, sizeof(string), "* O Terrorista %s pega seus equipamentos.", PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            if(cargo == 4)
            {
            GivePlayerWeapon(playerid, 24, 300);
            GivePlayerWeapon(playerid, 25, 250);
            GivePlayerWeapon(playerid, 29, 400);
            GivePlayerWeapon(playerid, 30, 400);
            GivePlayerWeapon(playerid, 34, 30);
            GivePlayerWeapon(playerid, 4, 1);
            format(string, sizeof(string), "* O Terrorista %s pega seus equipamentos.", PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            if(cargo == 5)
            {
            GivePlayerWeapon(playerid, 24, 400);
            GivePlayerWeapon(playerid, 25, 300);
            GivePlayerWeapon(playerid, 29, 450);
            GivePlayerWeapon(playerid, 30, 450);
            GivePlayerWeapon(playerid, 34, 60);
            GivePlayerWeapon(playerid, 4, 1);
            format(string, sizeof(string), "* O Terrorista %s pega seus equipamentos de Sub-Líder.", PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            if(cargo == 6)
            {
            GivePlayerWeapon(playerid, 24, 500);
            GivePlayerWeapon(playerid, 25, 350);
            GivePlayerWeapon(playerid, 29, 500);
            GivePlayerWeapon(playerid, 30, 500);
            GivePlayerWeapon(playerid, 34, 100);
            GivePlayerWeapon(playerid, 4, 1);
            format(string, sizeof(string), "* O Terrorista %s pega seus equipamentos de Líder.", PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            return true;
        }
        if(IsAJornal(playerid))
        {
            SetPlayerArmour(playerid, 100);
            SetPlayerHealth(playerid, 100);
            GivePlayerWeapon(playerid, 43, 50);
            SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos.");
            format(string, sizeof(string), "* O Reporter %s pegou seus equipamentos.", PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            return 1;
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não possui esse comando.");
            return 1;
        }
    }
//misseis

//Cartorio
//
    if(strcmp(cmd, "/mudarsexo", true) == 0)
    {
        if(PlayerToPoint(3, playerid,360.5766, 164.2014, 1008.3828))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new x_sexo[32];
            x_sexo = strtok(cmdtext, idx);
            if(!strlen(x_sexo))
            {
                SendClientMessage(playerid, COLOR_WHITE, "|______________ Cartório ______________|");
                SendClientMessage(playerid, COLOR_WHITE, "|Use: /mudarsexo [Numero]");
                SendClientMessage(playerid, COLOR_GREY, "| 1 - Homem");
                SendClientMessage(playerid, COLOR_GREY, "| 2 - Mulher");
                return 1;
            }
            if(strcmp(x_sexo,"1",true) == 0)
            {
                GivePlayerMoney(playerid,-500);
                format(string, sizeof(string), "* Jogador %s mudou seu sexo para masculino.", sendername);
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                PlayerInfo[playerid][pSex] = 1;
                SendClientMessage(playerid,COLOR_GREEN,"Você mudou seu sexo para masculino!");
                return 1;
            }
            if(strcmp(x_sexo,"2",true) == 0)
            {
                GivePlayerMoney(playerid,-500);
                format(string, sizeof(string), "* Jogador %s mudou seu sexo para feminino.", sendername);
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                PlayerInfo[playerid][pSex] = 2;
                SendClientMessage(playerid,COLOR_GREEN,"Você trocou seu sexo para feminino!");
                return 1;
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_LIGHTRED, "Você não está na igreja de LS.");
        }
    }
    if(strcmp(cmd, "/separacao", true) == 0 || strcmp(cmd, "/divorsio", true) == 0 || strcmp(cmd, "/descasarme", true) == 0)
    {
        if(PlayerToPoint(10, playerid,2233.8225,-1333.2725,23.9816))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            if(IsPlayerConnected(playerid))
            {
                new x_separar[32];
                x_separar = strtok(cmdtext, idx);
                if(!strlen(x_separar))
                {
                    SendClientMessage(playerid, COLOR_WHITE, "|______________ Cartório ______________|");
                    SendClientMessage(playerid, COLOR_WHITE, "|Use: /separacao [Numero]");
                    SendClientMessage(playerid, COLOR_GREY, "| 1 - Sim");
                    SendClientMessage(playerid, COLOR_GREY, "| 2 - Não");
                    return 1;
                }
                if(strcmp(x_separar,"1",true) == 0)
                {
                    if(PlayerInfo[playerid][pMarried] > 0)
                    {
                        GivePlayerMoney(playerid,-500);
                        format(string, sizeof(string), "* Jogador %s se divorciou!", sendername);
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        SendClientMessage(playerid,COLOR_GREY,"Você se divorciou, agora não é mais Casado!");
                        ClearMarriage(playerid);
                        return 1;
                    }
                    SendClientMessage(playerid,COLOR_GREEN,"Você não é casado(a)!");
                }
                if(strcmp(x_separar,"2",true) == 0)
                {
                    if(PlayerInfo[playerid][pMarried] > 0)
                    {
                        SendClientMessage(playerid,COLOR_GREEN,"Você continuou casado(a)!");
                        return 1;
                    }
                }
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_LIGHTRED, "Você não está na igreja de LS!");
        }
    }
    if(strcmp(cmd, "/kitvip", true) == 0 || strcmp(cmd, "/kitivip", true) == 0)
    {
        new location = PlayerInfo[playerid][pLocal];
        if(location == 99 || location == 100 || location == 102 || (PlayerToPoint(10, playerid,316.3719,-133.6901,999.6016) || (PlayerToPoint(10, playerid,296.05,-38.08,1001.52))))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            if(PlayerInfo[playerid][pVip] >= 1)
            {
                format(string, sizeof(string), "* %s Pegou Seu Kit VIP.", sendername);
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeapons(playerid);
                GivePlayerWeapon(playerid, 24, 750);
                GivePlayerWeapon(playerid, 25, 750);
                GivePlayerWeapon(playerid, 30, 750);
                GivePlayerWeapon(playerid, 29, 750);
                GivePlayerWeapon(playerid, 4, 1);
                SetPlayerArmour(playerid, 100);
                SendClientMessage(playerid,COLOR_GREEN,"Você pegou o seu Kit VIP!");
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_LIGHTRED, "Você não é VIP");
                return 1;
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_LIGHTRED, "Você não está em uma loja de armas.");
        }
        return 1;
    }
    if(strcmp(cmd, "/kitsvip", true) == 0 || strcmp(cmd, "/kitsupervip", true) == 0)
    {
        new location = PlayerInfo[playerid][pLocal];
        if(location == 99 || location == 100 || location == 102 || (PlayerToPoint(10, playerid,316.3719,-133.6901,999.6016) || (PlayerToPoint(10, playerid,296.05,-38.08,1001.52))))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            if(PlayerInfo[playerid][pVip] >= 2)
            {
                format(string, sizeof(string), "* %s Pegou Seu Kit Super VIP.", sendername);
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeapons(playerid);
                ResetPlayerWeapons(playerid);
                GivePlayerWeapon(playerid, 24, 999);
                GivePlayerWeapon(playerid, 25, 999);
                GivePlayerWeapon(playerid, 30, 999);
                GivePlayerWeapon(playerid, 29, 999);
                GivePlayerWeapon(playerid, 8, 1);
                SetPlayerArmour(playerid, 100);
                SendClientMessage(playerid,COLOR_GREEN,"Você pegou o seu Kit VIP!");
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_LIGHTRED, "Você não é Super VIP");
                return 1;
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_LIGHTRED, "Você não está em uma loja de armas.");
        }
        return 1;
    }
//SISTEMA DE DROGAS BY vinny
    if(strcmp(cmd,"/pegar",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(Morro[Dono] == 2 || Morro[Dono] == 28)
            {
                SendClientMessage(playerid, COLOR_WHITE, "Os policiais estão no controle do morro não tem drogas a venda!");
                return 1;
            }
            new x_job[64];
            x_job = strtok(cmdtext, idx);
            if(!strlen(x_job))
            {
                SendClientMessage(playerid, COLOR_WHITE, "|__________________ Pegar __________________|");
                SendClientMessage(playerid, COLOR_WHITE, "USE: /pegar [Nome] [quantia]");
                SendClientMessage(playerid, COLOR_GREY, "Nomes Disponiveis: Maconha, Crack, Cocaina, Combustivel");
                SendClientMessage(playerid, COLOR_GREEN, "|_________________________________________|");
                return 1;
            }
            if(strcmp(x_job,"maconha",true) == 0)
            {
                if(PlayerInfo[playerid][pDrogas] > 15)
                {
                    format(string, sizeof(string), "  Você ainda tem %d Gramas de Maconha com você, gaste-as primeiro!", PlayerInfo[playerid][pDrogas]);
                    SendClientMessage(playerid, COLOR_GREY, string);
                    return 1;
                }
                new tel;
                new price;
                new ammount;
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: /pegar maconha [Quantia]");
                    return 1;
                }
                new level = PlayerInfo[playerid][pDrogasSkill];
                ammount = strval(tmp);
                if(level >= 0 && level <= 50)
                { tel = 200; if(ammount < 1 || ammount > 99) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 99 em seu Nivel de Drogas!"); return 1; } }
                else if(level >= 51 && level <= 100)
                { tel = 150; if(ammount < 1 || ammount > 150) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 150 em seu Nivel de Drogas!"); return 1; } }
                else if(level >= 101 && level <= 200)
                { tel = 100; if(ammount < 1 || ammount > 200) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 200 em seu Nivel de Drogas!"); return 1; } }
                else if(level >= 201 && level <= 400)
                { tel = 50; if(ammount < 1 || ammount > 250) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 250 em seu Nivel de Drogas!"); return 1; } }
                else if(level >= 401)
                { tel = 10; if(ammount < 1 || ammount > 300) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 300 em seu Nivel de Drogas!"); return 1; } }
                if (PlayerToPoint(4.0, playerid, 2152.4727,-1014.0005,62.8375))
                {
                    price = ammount * tel;
                    if(Morro[Dono] != GetPlayerOrg(playerid) || Morro[Dono] == 0 || PlayerInfo[playerid][pEmprego] == 4 && Morro[Dono] != GetPlayerOrg(playerid))
                    {
                        if(GetPlayerMoneyEx(playerid) < price)
                        {
                            SendClientMessage(playerid, COLOR_GRAD1, "Você não tem esse dinheiro!");
                            return 1;
                        }
                        format(string, sizeof(string), "* Você comprou %d gramas de Maconha, por: R$%d.", ammount, price);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        GivePlayerMoney(playerid, -price);
                        PlayerInfo[playerid][pDrogas] = ammount;
                    }
                    if(Morro[Dono] == GetPlayerOrg(playerid) && Morro[Dono] != 0)
                    {
                        format(string, sizeof(string), "* Você pegou %d gramas de Maconha, Gratuitamente porque sua gang controla o Trafico da Cidade.", ammount);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        PlayerInfo[playerid][pDrogas] = ammount;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não e um vendedor de Drogas ou não esta em um local de pegar drogas!");
                    return 1;
                }
            }
            if(strcmp(x_job,"crack",true) == 0)
            {
                if(PlayerInfo[playerid][pDrogas3] > 15)
                {
                    format(string, sizeof(string), "  Você ainda tem %d Gramas de Crack com você, gaste-as primeiro!", PlayerInfo[playerid][pDrogas2]);
                    SendClientMessage(playerid, COLOR_GREY, string);
                    return 1;
                }
                new tel;
                new price;
                new ammount;
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: /pegar crack [Quantia]");
                    return 1;
                }
                new level = PlayerInfo[playerid][pDrogasSkill];
                ammount = strval(tmp);
                if(level >= 0 && level <= 50)
                { tel = 200; if(ammount < 1 || ammount > 99) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 99 em seu Nivel de Drogas!"); return 1; } }
                else if(level >= 51 && level <= 100)
                { tel = 150; if(ammount < 1 || ammount > 100) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 100 em seu Nivel de Drogas!"); return 1; } }
                else if(level >= 101 && level <= 200)
                { tel = 100; if(ammount < 1 || ammount > 150) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 150 em seu Nivel de Drogas!"); return 1; } }
                else if(level >= 201 && level <= 400)
                { tel = 50; if(ammount < 1 || ammount > 200) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 200 em seu Nivel de Drogas!"); return 1; } }
                else if(level >= 401)
                { tel = 10; if(ammount < 1 || ammount > 250) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 250 em seu Nivel de Drogas!"); return 1; } }
                if (PlayerToPoint(4.0, playerid, 2152.4727,-1014.0005,62.8375))
                {
                    price = ammount * tel;
                    if(Morro[Dono] != GetPlayerOrg(playerid) || Morro[Dono] == 0 || PlayerInfo[playerid][pEmprego] == 4 && Morro[Dono] != GetPlayerOrg(playerid))
                    {
                        if(GetPlayerMoneyEx(playerid) < price)
                        {
                            SendClientMessage(playerid, COLOR_GRAD1, "Você não tem esse dinheiro!");
                            return 1;
                        }
                        format(string, sizeof(string), "* Você comprou %d gramas de Crack, por: R$%d.", ammount, price);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        GivePlayerMoney(playerid, -price);
                        PlayerInfo[playerid][pDrogas3] = ammount;
                    }
                    if(Morro[Dono] == GetPlayerOrg(playerid) && Morro[Dono] != 0)
                    {
                        format(string, sizeof(string), "* Você pegou %d gramas de Crack, Gratuitamente porque sua gang controla o Trafico da Cidade.", ammount);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        PlayerInfo[playerid][pDrogas3] = ammount;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não e um vendedor de Drogas ou não esta em um local de pegar drogas!");
                    return 1;
                }
            }
            if(strcmp(x_job,"cocaina",true) == 0)
            {
                if(PlayerInfo[playerid][pDrogas2] > 15)
                {
                    format(string, sizeof(string), "  Você ainda tem %d Gramas de Cocaina com você, gaste-as primeiro!", PlayerInfo[playerid][pDrogas3]);
                    SendClientMessage(playerid, COLOR_GREY, string);
                    return 1;
                }
                new tel;
                new price;
                new ammount;
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: /pegar cocaina [Quantia]");
                    return 1;
                }
                new level = PlayerInfo[playerid][pDrogasSkill];
                ammount = strval(tmp);
                if(level >= 0 && level <= 50)
                { tel = 200; if(ammount < 1 || ammount > 99) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 99 em seu Nivel de Drogas!"); return 1; } }
                else if(level >= 51 && level <= 100)
                { tel = 150; if(ammount < 1 || ammount > 100) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 100 em seu Nivel de Drogas!"); return 1; } }
                else if(level >= 101 && level <= 200)
                { tel = 100; if(ammount < 1 || ammount > 150) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 150 em seu Nivel de Drogas!"); return 1; } }
                else if(level >= 201 && level <= 400)
                { tel = 50; if(ammount < 1 || ammount > 200) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 200 em seu Nivel de Drogas!"); return 1; } }
                else if(level >= 401)
                { tel = 10; if(ammount < 1 || ammount > 250) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 250 em seu Nivel de Drogas!"); return 1; } }
                if (PlayerToPoint(4.0, playerid, 2152.4727,-1014.0005,62.8375))
                {
                    price = ammount * tel;
                    if(Morro[Dono] != GetPlayerOrg(playerid) || Morro[Dono] == 0 || PlayerInfo[playerid][pEmprego] == 4 && Morro[Dono] != GetPlayerOrg(playerid))
                    {
                        if(GetPlayerMoneyEx(playerid) < price)
                        {
                            SendClientMessage(playerid, COLOR_GRAD1, "Você não tem esse dinheiro!");
                            return 1;
                        }
                        format(string, sizeof(string), "* Você comprou %d gramas de Cocaina, por: R$%d.", ammount, price);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        GivePlayerMoney(playerid, -price);
                        PlayerInfo[playerid][pDrogas2] = ammount;
                    }
                    if(Morro[Dono] == GetPlayerOrg(playerid) && Morro[Dono] != 0)
                    {
                        format(string, sizeof(string), "* Você pegou %d gramas de Cocaina, Gratuitamente porque sua gang controla o Trafico da Cidade.", ammount);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        PlayerInfo[playerid][pDrogas2] = ammount;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não e um vendedor de Drogas ou não esta em um local de pegar drogas!");
                    return 1;
                }
            }
            else
            {
                return 1;
            }
        }//not connected
        return 1;
    }
    if(strcmp(cmd, "/Usedrogas", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage(playerid, COLOR_WHITE, "|______________ Use Drogas ______________|");
            SendClientMessage(playerid, COLOR_GRAD1,"BPG > USE: /usemaconha");
            SendClientMessage(playerid, COLOR_GRAD1,"BPG > USE: /usecocaina");
            SendClientMessage(playerid, COLOR_GRAD1,"BPG > USE: /usecrack");
            }
        return 1;
    }
    if(strcmp(cmd, "/venderdrogas", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage(playerid, COLOR_WHITE, "|______________ Vender ______________|");
            SendClientMessage(playerid, COLOR_GRAD1,"BPG > USE: /vendermaconha");
            SendClientMessage(playerid, COLOR_GRAD1,"BPG > USE: /vendercocaina");
            SendClientMessage(playerid, COLOR_GRAD1,"BPG > USE: /vendercrack");
            }
        return 1;
    }
    if(strcmp(cmd, "/sistemadedrogas", true) == 0 || strcmp(cmd, "/sistemadrogas", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage(playerid, COLOR_WHITE, "|______________ Sistema de Drogas ______________|");
            SendClientMessage(playerid, COLOR_GRAD1,"BPG > /usemaconha /usecocaina /usecrack");
            SendClientMessage(playerid, COLOR_GRAD1,"BPG > /vendermaconha /vendercocaina /vendercrack");
            SendClientMessage(playerid, COLOR_GRAD1,"BPG > Para pegar ou esconder drogas vá a um territorio");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"GPS Territorios: /GPS e selecione territorios");
        }
        return 1;
    }
    if(strcmp(cmd, "/guerrainfo", true) == 0 || strcmp(cmd, "/guerraBPG", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage(playerid, 0x0000FFAA, "|_______|{1E90FF}B{FFFFFF}.P.{FF0000}N{FFFFFF}| Horários da Guerra de Pontos |{1E90FF}B{FFFFFF}.P.{FF0000}N{FFFFFF}|_______|");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA DA MANHÃ] {808080}> {00EAEA}Dás 10 Horas até às 11 Horas.");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA DA TARDE] {808080}> {00EAEA}Dás 14 Horas até às 15 Horas.");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA DA TARDE] {808080}> {00EAEA}Dás 17 Horas até às 18 Horas.");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA DA NOITE] {808080}> {00EAEA}Dás 21 Horas até às 22 Horas.");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA DA MADRUGADA] {808080}> {00EAEA}Dás 0 Horas até às 1 Hora.");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA AJUDA] {808080}> {8080FF}CASO TENHA DÚVIDAS SOBRE O QUE É A GUERRA DIGITE /ajudaguerra!!!");
        }
        return 1;
    }
    if(strcmp(cmd, "/ajudafamilia", true) == 0 || strcmp(cmd, "/familiaajuda", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage(playerid, 0x0000FFAA, "|_______|{1E90FF}B{FFFFFF}.P.{FF0000}N{FFFFFF}| Sistema de Famílias |{1E90FF}B{FFFFFF}.P.{FF0000}N{FFFFFF}|_______|");
            SendClientMessage(playerid, 0xFF8080AA,"[COMANDO] {808080}> {00EAEA}/Tirarf [ID] [MOTIVO] = Retirar um membro.");
            SendClientMessage(playerid, 0xFF8080AA,"[COMANDO] {808080}> {00EAEA}/Convidarf [ID] = Convidar um Membro.");
            SendClientMessage(playerid, 0xFF8080AA,"[COMANDO] {808080}> {00EAEA}/FamyLider [ID] = Promove um Player a líder.");
            SendClientMessage(playerid, 0xFF8080AA,"[COMANDO] {808080}> {00EAEA}/fa [TEXTO] = Chat da Família.");
            SendClientMessage(playerid, 0xFF8080AA,"[COMANDO] {808080}> {00EAEA}/Membrosf = Mostrar os membros da Família.");
            SendClientMessage(playerid, 0xFF8080AA,"[COMANDO] {808080}> {00EAEA}/Sairdafamilia = Sai de membro/lider da família atual.");
            SendClientMessage(playerid, 0xFF8080AA,"[COMANDO] {808080}> {00EAEA}/AnF [TEXTO] = Anúncio Geral da Família.");
            SendClientMessage(playerid, 0xFF8080AA,"[COMANDO] {808080}> {00EAEA}/lideresf = Exibir todos Os líderes de Famílias Online.");
            SendClientMessage(playerid, 0x8080FFAA,"CASO TENHA DÚVIDAS OU HÁ ALGUM BUG NO SISTEMA DE FAMILIAS, AVISE UM ADMINISTRADOR!!!");
        }
        return 1;
    }
    if(strcmp(cmd, "/ajudaguerra", true) == 0 || strcmp(cmd, "/guerraBPGajuda", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage(playerid, 0x0000FFAA, "|_______|{1E90FF}B{FFFFFF}.P.{FF0000}N{FFFFFF}| Ajuda Guerra de Pontos |{1E90FF}B{FFFFFF}.P.{FF0000}N{FFFFFF}|_______|");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA] {808080}A guerra de pontos é uma competição entre Gangues e policiais que ocorre no MORRO!");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA] {808080}Cujo o objetivo das Gangs é ganhar a guerra para obter drogas gratis para os membros!");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA] {808080}Os Policiais tem o objetivo de impedir o trafico na cidade ganhando a guerra!");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA] {808080}Para ganhar pontos basta chamar os membros da sua Gang e ir até o local (MORRO)!");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA] {808080}Os pontos serão mostrados no canto Direito do seu munitor.");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA] {808080}Você ganha pontos matando os inimigos ou simplesmente tomando a posição no MORRO!");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA] {808080}A Guerra tem duração de 1 Hora e apenas Gangs e Policiais participam, sem civis no local.");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA] {808080}A guerra inicia automaticamente, para saber os Horários digite /guerrainfo.");
        }
        return 1;
    }
    if(strcmp(cmd, "/cartorio", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage(playerid, COLOR_WHITE, "|______________ Cartorio BPG ______________|");
            SendClientMessage(playerid, COLOR_GRAD1,"BPG > USE: /mudarsexo");
            SendClientMessage(playerid, COLOR_GRAD1,"BPG > USE: /separacao");
            SendClientMessage(playerid, COLOR_GRAD1,"BPG > USE: /loteria");
            }
        return 1;
    }
//----------------------------------[departments]-----------------------------------------------
    if(strcmp(cmd, "/departamento", true) == 0 || strcmp(cmd, "/d", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_DEPARTAMENTO, "USE: (/d)epartamento [Texto]");
                return 1;
            }
            if(admtrampando[playerid] == 1) { return SendClientMessage(playerid, COLOR_GRAD2, "Você não pode Falar no Rádio da Gang estando em modo Trabalho!"); }
            if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1
            || PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2
            || PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3
            || PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4
            || PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7
            || PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11
            || PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16
            || PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32
            || PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28
            || PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)
            {

                format(string, sizeof(string), "** %s %s %s: %s, câmbio. **",NomeORG(playerid), OrgCargo(playerid), sendername, result);
                SendFamilyMessage(1, COLOR_DEPARTAMENTO, string);
                SendFamilyMessage(2, COLOR_DEPARTAMENTO, string);
                SendFamilyMessage(3, COLOR_DEPARTAMENTO, string);
                SendFamilyMessage(4, COLOR_DEPARTAMENTO, string);
                SendFamilyMessage(7, COLOR_DEPARTAMENTO, string);
                SendFamilyMessage(11, COLOR_DEPARTAMENTO, string);
                SendFamilyMessage(16, COLOR_DEPARTAMENTO, string);
                SendFamilyMessage(28, COLOR_DEPARTAMENTO, string);
                SendFamilyMessage(32, COLOR_DEPARTAMENTO, string);
                SendFamilyMessage(33, COLOR_DEPARTAMENTO, string);
                //SendFamilyMessage(34, COLOR_DEPARTAMENTO, string);
                format(string, sizeof(string), "* %s falou algo no rádio.", sendername);
                ProxDetector(20.0, playerid, string, 0xe9e9e9ff,0xe9e9e9ff,0xe9e9e9ff,0xe9e9e9ff,0xe9e9e9ff);
                //printf("%s", strvinny);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD2, "   Você não é um Policial/Médico!");
                return 1;
            }
        }
        return 1;
    }
//----------------------------------[mdc]-----------------------------------------------
    if(strcmp(cmd, "/ficha", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(!IsACop(playerid))
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
                return 1;
            }
            if(OnDuty[playerid] != 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não bateu o cartão!");
                return 1;
            }
            new tmpcar = GetPlayerVehicleID(playerid);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /ficha [id]");
                return 1;
            }
            //giveplayerid = strval(tmp);
            giveplayerid = ReturnUser(tmp);
            if(IsACopCar(tmpcar)||PlayerToPoint(60.0, playerid,232.8069,164.0555,1003.0234)||PlayerToPoint(60.0, playerid,232.2051,117.3912,1003.2188)||PlayerToPoint(20.0, playerid,322.4880,309.1409,999.1484)||PlayerToPoint(40.0, playerid,246.1936,69.8609,1003.6406) ||PlayerToPoint(40.0, playerid,-103.09999847412,-2257,11.199999809265))
            {
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
                        SendClientMessage(playerid, COLOR_WHITE, "FICHA NA POLÍCIA");
                        format(string, sizeof(string), "Nome: %s", sendername);
                        SendClientMessage(playerid, COLOR_WHITE,string);
                        format(string, sizeof(string), "Crime: %s", PlayerCrime[giveplayerid][pAccusing]);
                        SendClientMessage(playerid, COLOR_GRAD2,string);
                        format(string, sizeof(string), "Relato: %s", PlayerCrime[giveplayerid][pVictim]);
                        SendClientMessage(playerid, COLOR_GRAD3,string);
                        format(string, sizeof(string), "Acusado: %s", PlayerCrime[giveplayerid][pBplayer]);
                        SendClientMessage(playerid, COLOR_GRAD5,string);
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   O jogador está offline!");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD2, "  Você tem que estar em um carro da policia ou em alguma HQ da policia!");
                return 1;
            }
        }
        return 1;
    }
//----------------------------------[SetCrim]-----------------------------------------------
    if(strcmp(cmd, "/suspeito", true) == 0 || strcmp(cmd, "/su", true) == 0)
    {

        if(IsPlayerConnected(playerid))
        {
            if(!IsACop(playerid))
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
                return 1;
            }
            if(OnDuty[playerid] != 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não bateu o cartão!");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: (/su)speito [id] [Descrição do Crime]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if (IsACop(playerid))
            {
                if(IsPlayerConnected(giveplayerid))
                {
                    if(IsACop(giveplayerid))
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Você não pode dar su em Policiais!");
                        return 1;
                    }
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            new length = strlen(cmdtext);
                            while ((idx < length) && (cmdtext[idx] <= ' '))
                            {
                                idx++;
                            }
                            new offset = idx;
                            new result[100];
                            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                            {
                                result[idx - offset] = cmdtext[idx];
                                idx++;
                            }
                            result[idx - offset] = EOS;
                            if(!strlen(result))
                            {
                                SendClientMessage(playerid, COLOR_GRAD2, "USE: (/su)speito [id] [Descrição do Crime]");
                                return 1;
                            }
                            if(PlayerInfo[giveplayerid][pJailed] == 2)
                            {
                                return SendClientMessage(playerid, COLOR_GRAD2, "Você não Pode dar /Su um Player Preso pelot!");
                            }
                            SetPlayerCriminal(giveplayerid,playerid, result);
                            return 1;
                    }
                }
                else
                {
                        SendClientMessage(playerid, COLOR_GRAD1, "  Esse jogador não está conectado.");
                        return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD2, "   Você não é um Policial !");
            }
        }
        return 1;
 }
//----------------------------------[LOCK]-----------------------------------------------
    if(strcmp(cmd, "/trancar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new carid;
            if(PlayerInfo[playerid][pJailed] != 0)
            {
                SendClientMessage(playerid,COLOR_GREY,"Você não pode Este comando preso!");
                return 1;
            }
            if (gTeam[playerid] == 2 || gTeam[playerid] == 1)
            {
                if(gLastCar[playerid] == 0 && PlayerInfo[playerid][pPHousekey] == 9999)
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "Você não tem um carro de casa/alugado.");
                    return 1;
                }
                else if(gLastCar[playerid] != 0 && gLastCar[playerid] != PlayerInfo[playerid][pPHousekey])
                {
                    if (HireCar[playerid] != gLastCar[playerid] && HireCar[playerid] > 0)
                    {
                        gLastDriver[HireCar[playerid]] = 300;
                        VTrancado[HireCar[playerid]] = 0;
                        UnLockCar(HireCar[playerid]);
                    }
                    HireCar[playerid] = gLastCar[playerid];
                }
            }
            if (PlayerInfo[playerid][pPHousekey] == 9999)
            {
                if(HireCar[playerid] == 0)
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "Voce não tem um carro.");
                    return 1;
                }
            }
            carid = HouseInfo[PlayerInfo[playerid][pPHousekey]][hVeiculo];
            if(HireCar[playerid] > 0 && !SwitchKey[playerid])
            {
                carid = HireCar[playerid];
            }
            new lockstatus = VTrancado[carid];
            new Float:cx,Float:cy,Float:cz;
            GetVehiclePos(carid, cx, cy, cz);
            switch (lockstatus)
            {
                case 0:
                {
                    if(HireCar[playerid] == 0 && PlayerInfo[playerid][pPHousekey] == 9999)
                    {
                        SendClientMessage(playerid, COLOR_GRAD2, "Voce não tem um carro");
                        return 1;
                    }
                    if(HireCar[playerid] == carid && !SwitchKey[playerid])
                    {
                        GameTextForPlayer(playerid, "~w~Veiculo Alugado~r~Fechado", 5000, 6);
                        PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
                        VTrancado[carid] = 1;
                        LockCar(carid);
                    }
                    else if(PlayerInfo[playerid][pPHouseCarkey] == carid)
                    {
                        GameTextForPlayer(playerid, "~w~Veiculo da Casa ~r~Fechado", 5000, 6);
                        PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
                        VTrancado[carid] = 1;
                        LockCar(carid);
                        return 1;
                    }
                }
                case 1:
                {
                    if(HireCar[playerid] == 0 && PlayerInfo[playerid][pPHousekey] == 9999)
                    {
                        SendClientMessage(playerid, COLOR_GRAD2, "Voce não tem um carro");
                        return 1;
                    }
                    if(HireCar[playerid] == carid && !SwitchKey[playerid])
                    {
                        GameTextForPlayer(playerid, "~w~Veiculo Alugado~g~Aberto", 5000, 6);
                        PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
                        VTrancado[carid] = 0;
                        UnLockCar(carid);
                        SetPlayerVirtualWorld(playerid, 0);
                        SetPlayerInterior(playerid, 0);
                    }
                    if (PlayerInfo[playerid][pPHouseCarkey] == carid)
                    {
                        GameTextForPlayer(playerid, "~w~Veiculo da Casa ~g~Aberto", 5000, 6);
                        PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
                        VTrancado[carid] = 0;
                        UnLockCar(carid);
                        SetPlayerVirtualWorld(playerid, 0);
                        SetPlayerInterior(playerid, 0);
                        return 1;
                    }
                }
                default:
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "Erro");
                }
            }
            if(carid == 256)
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Voce não tem um carro!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/chave", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            for(new i = 0; i < sizeof(HouseInfo); i++)
            {
                if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]) || PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
                {
                    if(PlayerInfo[playerid][pPHousekey] == i)
                    {
                        if(HouseInfo[i][hLock] == 1)
                        {
                            HouseInfo[i][hLock] = 0;
                            GameTextForPlayer(playerid, "~w~Porta ~g~Aberta", 5000, 6);
                            PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
                            return 1;
                        }
                        if(HouseInfo[i][hLock] == 0)
                        {
                            HouseInfo[i][hLock] = 1;
                            GameTextForPlayer(playerid, "~w~Porta ~r~Fechada", 5000, 6);
                            PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
                            return 1;
                        }
                    }
                    else
                    {
                        GameTextForPlayer(playerid, "~r~ Você não tem essa chave", 5000, 6);
                        return 1;
                    }
                }
            }
            for(new i = 0; i < sizeof(BizzInfo); i++)
            {
                if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) || PlayerToPoint(3, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
                {
                    if(PlayerInfo[playerid][pPbiskey] == i)
                    {
                        if(BizzInfo[i][bLocked] == 1)
                        {
                            BizzInfo[i][bLocked] = 0;
                            GameTextForPlayer(playerid, "~w~Empresa ~g~Aberta", 5000, 6);
                            PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
                            return 1;
                        }
                        if(BizzInfo[i][bLocked] == 0)
                        {
                            BizzInfo[i][bLocked] = 1;
                            GameTextForPlayer(playerid, "~w~Empresa ~r~Fechada", 5000, 6);
                            PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
                            return 1;
                        }
                    }
                    else
                    {
                        GameTextForPlayer(playerid, "~r~Você não tem essa chave", 5000, 6);
                        return 1;
                    }
                }
            }
            for(new i = 0; i < sizeof(SBizzInfo); i++)
            {
                if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
                {
                    if(PlayerInfo[playerid][pPbiskey] == i+100)
                    {
                        if(SBizzInfo[i][sbLocked] == 1)
                        {
                            SBizzInfo[i][sbLocked] = 0;
                            GameTextForPlayer(playerid, "~w~Empresa ~g~Aberta", 5000, 6);
                            PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
                            return 1;
                        }
                        if(SBizzInfo[i][sbLocked] == 0)
                        {
                            SBizzInfo[i][sbLocked] = 1;
                            GameTextForPlayer(playerid, "~w~Empresa ~r~Fechada", 5000, 6);
                            PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
                            return 1;
                        }
                    }
                    else
                    {
                        GameTextForPlayer(playerid, "~r~Você não tem essa chave", 5000, 6);
                        return 1;
                    }
                }
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/dado", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new dice = random(6)+1;
            if (gDice[playerid] == 1)
            {
                GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, sizeof(string), "* %s jogou um dado e caiu no numero: %d", sendername,dice);
                ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem um dado, compre em uma 24/7, Dica: use /gps");
                return 1;
            }
        }
        return 1;
    }
    if (strcmp("/banco", cmdtext, true) == 0)
    {
        if(PlayerToPoint(1.5,playerid,2224.1484,-1141.8772,1025.7969) || PlayerToPoint(1.0,playerid,1929.5409,-1785.1664,13.5469) || PlayerToPoint(1.0,playerid,2232.2886,-1162.6107,25.8906) || PlayerToPoint(1.0,playerid,1550.4796,-1669.7039,13.5624) || PlayerToPoint(1.5,playerid,957.4803,-48.7381,1001.1172) || PlayerToPoint(1.5,playerid,251.4170,120.7698,1010.2188)
        || PlayerToPoint(1.5,playerid,229.6725,153.8311,1003.0234)  || PlayerToPoint(1.5,playerid,321.4753,305.5962,999.1484) || PlayerToPoint(1.5,playerid,-1347.6376,499.9476,11.1953) || PlayerToPoint(1.5, playerid,2308.9492,-14.1523,26.7422) || PlayerToPoint(1.5,playerid,1467.5273, -1782.6521, 13.1987) || PlayerInBank[ playerid ] == true)
        {
            TogglePlayerControllable(playerid, 0);
            ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, " Você não está em um banco.");
        }
        return 1;
    }
    if(strcmp(cmd, "/comprar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (!PlayerToPoint(100, playerid,-30.875, -88.9609, 1004.53) && !PlayerToPoint(3, playerid,1508.4419,-1703.4607,14.0469))//centerpoint 24-7
            {
                SendClientMessage(playerid, COLOR_GRAD2, "   Você não esta em uma 24-7 ou Mercado, Vá até uma /gps!");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_WHITE, "USE: /comprar [Numero do item]");
                SendClientMessage(playerid, COLOR_WHITE, "|______________ 24-7 ______________|");
                SendClientMessage(playerid, COLOR_GRAD1, "| 1: Celular     R$500        2: Agenda      R$5000");
                SendClientMessage(playerid, COLOR_GRAD2, "| 3: Dados       R$500        4: Camisinha   R$50");
                SendClientMessage(playerid, COLOR_GRAD4, "| 5: CD-Player   R$2500       6: Frango      R$10");
                SendClientMessage(playerid, COLOR_GRAD5, "| 7: Hamburger   R$10         8: Pizza       R$10");
                //SendClientMessage(playerid, COLOR_GRAD5, "| 9: 20 Creditos R$2000      10: 50 Creditos R$5000");
                return 1;
            }
            new item = strval(tmp);
            if (item == 1 && GetPlayerMoneyEx(playerid) >= 500)
            {
                if(PlayerInfo[playerid][pTraderPerk] > 0)
                {
                    new skill = 500 / 100;
                    new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
                    new payout = 500 - price;
                    format(string, sizeof(string), "~r~-R$%d", payout);
                    GameTextForPlayer(playerid, string, 5000, 1);
                    GivePlayerMoney(playerid,- payout);
                    BizzInfo[3][bTill] += payout;
                    ExtortionBiz(3, payout);
                }
                else
                {
                    format(string, sizeof(string), "~r~-R$%d", 500);
                    GameTextForPlayer(playerid, string, 5000, 1);
                    GivePlayerMoney(playerid,-500);
                    BizzInfo[3][bTill] += 500;
                    ExtortionBiz(3, 500);
                }
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                new randphone = 1000 + random(8999);//minimo 1000  maximo 14999
                PlayerInfo[playerid][pPnumber] = randphone;
                format(string, sizeof(string), "Seu novo número de celular é %d", randphone);
                SendClientMessage(playerid, COLOR_GRAD4, string);
                SendClientMessage(playerid, COLOR_GRAD5, "Dê uma olhada nos seus documentos /rg");
                SendClientMessage(playerid, COLOR_WHITE, "Dica: Digite /ajudacelular em caso de dúvidas");
                return 1;
            }
            else if (item == 2 && GetPlayerMoneyEx(playerid) >= 5000)
            {
                if(PlayerInfo[playerid][pTraderPerk] > 0)
                {
                    new skill = 5000 / 100;
                    new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
                    new payout = 5000 - price;
                    GivePlayerMoney(playerid,- payout);
                    BizzInfo[3][bTill] += payout;
                    ExtortionBiz(3, payout);
                    format(string, sizeof(string), "~r~-R$%d", payout);
                    GameTextForPlayer(playerid, string, 5000, 1);
                }
                else
                {
                    GivePlayerMoney(playerid,-5000);
                    BizzInfo[3][bTill] += 5000;
                    ExtortionBiz(3, 5000);
                    format(string, sizeof(string), "~r~-R$%d", 5000);
                    GameTextForPlayer(playerid, string, 5000, 1);
                }
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                PlayerInfo[playerid][pPhoneBook] = 1;
                SendClientMessage(playerid, COLOR_GRAD4, "   Nova agenda telefônica comprada!");
                SendClientMessage(playerid, COLOR_MSG, "[BPG]: Digite /agenda <id/nome>.");
                return 1;
            }
            else if (item == 3 && GetPlayerMoneyEx(playerid) >= 500)
            {
                if(PlayerInfo[playerid][pTraderPerk] > 0)
                {
                    new skill = 500 / 100;
                    new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
                    new payout = 500 - price;
                    GivePlayerMoney(playerid,- payout);
                    BizzInfo[3][bTill] += payout;
                    ExtortionBiz(3, payout);
                    format(string, sizeof(string), "~r~-R$%d", payout);
                    GameTextForPlayer(playerid, string, 5000, 1);
                }
                else
                {
                    GivePlayerMoney(playerid,-500);
                    BizzInfo[3][bTill] += 500;
                    ExtortionBiz(3, 500);
                    format(string, sizeof(string), "~r~-R$%d", 500);
                    GameTextForPlayer(playerid, string, 5000, 1);
                }
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                gDice[playerid] = 1;
                SendClientMessage(playerid, COLOR_GRAD4, "   Você comprou um dado! Aproveite.");
                SendClientMessage(playerid, COLOR_MSG, "[BPG]: Digite /dado");
                return 1;
            }
            else if (item == 4 && GetPlayerMoneyEx(playerid) >= 50)
            {
                if(PlayerInfo[playerid][pTraderPerk] > 0)
                {
                    new skill = 50 / 100;
                    new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
                    new payout = 50 - price;
                    GivePlayerMoney(playerid,- payout);
                    format(string, sizeof(string), "~r~-R$%d", payout);
                    GameTextForPlayer(playerid, string, 5000, 1);
                }
                else
                {
                    GivePlayerMoney(playerid,-50);
                    format(string, sizeof(string), "~r~-R$%d", 50);
                    GameTextForPlayer(playerid, string, 5000, 1);
                }
                Condom[playerid] ++;
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                SendClientMessage(playerid, COLOR_GRAD4, "Camisinha comprada.");
                SendClientMessage(playerid, COLOR_WHITE, "Agora você pode fazer sexo com segurança.");
                return 1;
            }
            else if (item == 5 && GetPlayerMoneyEx(playerid) >= 2500)
            {
                if(PlayerInfo[playerid][pTraderPerk] > 0)
                {
                    new skill = 2500 / 100;
                    new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
                    new payout = 2500 - price;
                    GivePlayerMoney(playerid, - payout);
                    format(string, sizeof(string), "~r~-$%d", payout);
                    GameTextForPlayer(playerid, string, 5000, 1);
                }
                else
                {
                    GivePlayerMoney(playerid, - 2500);
                    format(string, sizeof(string), "~r~-$%d", 2500);
                    GameTextForPlayer(playerid, string, 5000, 1);
                }
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                SendClientMessage(playerid, COLOR_GRAD4, "CD-Player comprado.");
                SendClientMessage(playerid, COLOR_WHITE, "DICA: Use /musica");
                PlayerInfo[playerid][pCDPlayer] = 1;
                return 1;
            }
            else if (item == 6 && GetPlayerMoneyEx(playerid) >= 10)
            {
                if(Groceries[playerid][pChickens] >= 3)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você tem muitos frangos, coma alguns antes de comprar mais !");
                    return 1;
                }
                if(PlayerInfo[playerid][pTraderPerk] > 0)
                {
                    new skill = 10 / 100;
                    new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
                    new payout = 10 - price;
                    GivePlayerMoney(playerid, - payout);
                    format(string, sizeof(string), "~r~-R$%d", payout);
                    GameTextForPlayer(playerid, string, 5000, 1);
                }
                else
                {
                    GivePlayerMoney(playerid, - 10);
                    format(string, sizeof(string), "~r~-R$%d", 10);
                    GameTextForPlayer(playerid, string, 5000, 1);
                }
                GivePlayerMoney(playerid, - 10);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                SendClientMessage(playerid, COLOR_GRAD4, "Frango comprado.");
                format(string, sizeof(string), "~r~-R$%d", 10);
                GameTextForPlayer(playerid, string, 5000, 1);
                new rand = random(15);
                Groceries[playerid][pChickens] += 1;
                Groceries[playerid][pChicken] += rand;
                return 1;
            }
            else if (item == 7 && GetPlayerMoneyEx(playerid) >= 10)
            {
                if(Groceries[playerid][pHamburgers] >= 3)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você tem muitos Hamburgers, coma alguns antes de comprar mais!");
                    return 1;
                }
                if(PlayerInfo[playerid][pTraderPerk] > 0)
                {
                    new skill = 10 / 100;
                    new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
                    new payout = 10 - price;
                    GivePlayerMoney(playerid, - payout);
                    format(string, sizeof(string), "~r~-R$%d", payout);
                    GameTextForPlayer(playerid, string, 5000, 1);
                }
                else
                {
                    GivePlayerMoney(playerid, - 10);
                    format(string, sizeof(string), "~r~-R$%d", 10);
                    GameTextForPlayer(playerid, string, 5000, 1);
                }
                GivePlayerMoney(playerid, - 10);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                SendClientMessage(playerid, COLOR_GRAD4, "Hamburger Comprado.");
                format(string, sizeof(string), "~r~-R$%d", 10);
                GameTextForPlayer(playerid, string, 5000, 1);
                new rand = random(15);
                Groceries[playerid][pHamburgers] += 1;
                Groceries[playerid][pHamburger] += rand;
                return 1;
            }
            else if (item == 8 && GetPlayerMoneyEx(playerid) >= 10)
            {
                if(Groceries[playerid][pPizzas] >= 3)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você tem muitas pizzas, coma algumas antes de comprar mais!");
                    return 1;
                }
                if(PlayerInfo[playerid][pTraderPerk] > 0)
                {
                    new skill = 10 / 100;
                    new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
                    new payout = 10 - price;
                    GivePlayerMoney(playerid, - payout);
                    format(string, sizeof(string), "~r~-R$%d", payout);
                    GameTextForPlayer(playerid, string, 5000, 1);
                }
                else
                {
                    GivePlayerMoney(playerid, - 10);
                    format(string, sizeof(string), "~r~-R$%d", 10);
                    GameTextForPlayer(playerid, string, 5000, 1);
                }
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                SendClientMessage(playerid, COLOR_GRAD4, "Pizza Comprado.");
                new rand = random(15);
                Groceries[playerid][pPizzas] += 1;
                Groceries[playerid][pPizza] += rand;
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não tem dinheiro o suficiente.");
            }
        }
        return 1;
    }
    if(strcmp(cmdtext, "/oculos", true) == 0 || strcmp(cmdtext, "/colocaroculos", true) == 0)
    {
        new Float:X, Float:Y, Float:Z;
        TogglePlayerControllable(playerid, false);
        GetPlayerPos(playerid, X, Y, Z);
        SetPlayerCameraPos(playerid, X+0.1, Y+1, Z+0.6);
        SetPlayerCameraLookAt(playerid, X, Y, Z+0.6);
        SetPlayerFacingAngle(playerid, 0);
        PondoOculos[playerid] = true;
        TOculos = TextDrawCreate(220.000000, 339.000000, "~b~~h~~h~SHIFT~w~ para ver o proximo");
        TOculos2 = TextDrawCreate(220.000000, 360.000000, "~g~~h~~h~ESPACO~w~ escolhe o oculos");
        TextDrawUseBox(TOculos, true);
        TextDrawUseBox(TOculos2, true);
        TextDrawFont(TOculos, 1);
        TextDrawFont(TOculos2, 1);
        TextDrawLetterSize(TOculos, 0.739999, 1.800000);
        TextDrawLetterSize(TOculos2, 0.739999, 1.800000);
        TextDrawSetOutline(TOculos, 2);
        TextDrawSetOutline(TOculos2, 2);
        TextDrawShowForPlayer(playerid, TOculos);
        TextDrawShowForPlayer(playerid, TOculos2);
        return 1;
    }
    if(strcmp(cmdtext, "/toculos", true) == 0 || strcmp(cmdtext, "/tiraroculos", true) == 0)
    {
        RemovePlayerAttachedObject(playerid, MAX_PLAYER_ATTACHED_OBJECTS-1);
        SendClientMessage(playerid, 0xFFFFFFFF, "Você retirou seu oculos");
        return 1;
    }
    if(strcmp(cmd,"/bone",true)==0 || strcmp(cmd,"/colocarbone",true)==0)
    {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_GRAD2, "USE: /bone [1 - 9]");
            return 1;
        }
        new skin, id = strval(tmp), cap, slot = GetEmptySlot(playerid), count;
        if(id != 1 && id != 2 && id != 3 && id != 4 && id != 5 && id != 6 && id != 7 && id != 8 && id != 9) return SendClientMessage(playerid, 0xFFFFFFAA, "Boné Inválido, USE: /bone [1 - 9]");
        skin = (GetPlayerSkin(playerid) - 1);
        switch(id)
        {
            case 1:    cap = 18926;
            case 2..9: cap = 18926 + id;
        }
        do
        {
            if(skin == invalidskins[count]) return SendClientMessage(playerid, 0xFFFFFFAA, "[PlayGamer] Sua skin Não Tem Suporte para Bonés");
            count++;
        }
        while(count < sizeof invalidskins);
        if(skin < 0) skin = 0;
        if(slot == -1) return SendClientMessage(playerid, 0xFFFFFFAA, "[PlayGamer] Você Ja está Usando o Máximo de Objetos Possivel.");
        SendClientMessage(playerid, 0xFFFFFFAA, "[PlayGamer] Boné Colocado Com sucesso, Para Retirar Digite /rbone.");
        SetPlayerAttachedObjectEx(playerid, slot, cap, 2, SkinBone[skin][0], SkinBone[skin][1], SkinBone[skin][2], SkinBone[skin][3], SkinBone[skin][4], SkinBone[skin][5]);
        return 1;
    }
    if (strcmp(cmd, "/rbone", true) == 0 || strcmp(cmd, "/retirarbone", true) == 0 || strcmp(cmd, "/tirarbone", true) == 0)
    {
        if(HaveCap(playerid))
        {
            RemovePlayerAttachedObject(playerid, pObject[playerid][oslot]);
            pObject[playerid][oslot] = -1;
            pObject[playerid][slotreserved] = false;
            SendClientMessage(playerid, 0xFFFFFFAA, "[PlayGamer] Boné Removido Com Sucesso.");
            return 1;
        }
        return SendClientMessage(playerid, 0xFFFFFFAA, "[PlayGamer] Você não Está usando Nenhum Boné.");
    }
    if(strcmp(cmdtext, "/comprararara", true) == 0)
    {
        if(Infoa[playerid][Grande] >= 5) return SendClientMessage(playerid, VERMELHO, "Sua Arara Está Grande e Pronta para ser vendida, Para vender digite /VenderArara !");
        if(GetPlayerMoneyEx(playerid)<2000)return SendClientMessage(playerid, BRANCO,"Você não tem R$2000!");
        if(Infoa[playerid][Arara]) return SendClientMessage(playerid, BRANCO, "Você já tem uma Arara!");
        SendClientMessage(playerid, BRANCO, "Você Comprou uma Arara!");
        SendClientMessage(playerid, BRANCO, "Ela irá crescer de Cinco a Cinco minutos!");
        SendClientMessage(playerid, BRANCO, "Não se esqueça de Alimenta-lá! /Racão!");
        SetPlayerAttachedObject(playerid,0, 19079, 1, 0.319503, -0.089340, -0.185576, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
        GivePlayerMoney(playerid, -2000);
        Infoa[playerid][Arara] = true;
        Infoa[playerid][Tempo] = SetTimerEx("Crescimento", 300000, true, "i", playerid);
        return 1;
    }
    if(strcmp(cmdtext, "/alimentada", true) == 0)
    {
        if(Infoa[playerid][Grande] >= 5) return SendClientMessage(playerid, VERMELHO, "Sua Arara Está Grande e Pronta para ser vendida, Para vender digite /VenderArara !");
        if(!Infoa[playerid][Arara]) return SendClientMessage(playerid, VERMELHO, "Você não tem uma arara.");
        if(Infoa[playerid][Racao]) { SendClientMessage(playerid, BRANCO, "Arara Alimentada: {008000}Sim"); }
        else { SendClientMessage(playerid, BRANCO, "Arara Alimentada: {FF0000}Não"); }
        return 1;
    }
    if(strcmp(cmdtext, "/racao", true) == 0)
    {
        if(Infoa[playerid][Grande] >= 5) return SendClientMessage(playerid, VERMELHO, "Sua Arara Está Grande e Pronta para ser vendida, Para vender digite /VenderArara !");
        if(!Infoa[playerid][Arara]) return SendClientMessage(playerid, VERMELHO, "Você não tem uma arara.");
        if(Infoa[playerid][Racao]) return SendClientMessage(playerid, BRANCO, "Você já Alimentou sua Arara!");
        SendClientMessage(playerid, BRANCO, "Você Alimentou Sua Arara! Isso lhe custou R$200");
        GivePlayerMoney(playerid, -200);
        Infoa[playerid][Racao] = true;
        return 1;
    }
    if(strcmp(cmdtext, "/venderarara", true) == 0)
    {
        if(!Infoa[playerid][Arara]) return SendClientMessage(playerid, BRANCO,"Você Não comprou nenhuma Arara!");
        if(Infoa[playerid][Grande] < 5) return SendClientMessage(playerid, BRANCO,"Sua Arara ainda não está grande!");
        Infoa[playerid][Grande] = 0;
        Infoa[playerid][Arara] = false;
        RemovePlayerAttachedObject(playerid, 0);
        GivePlayerMoney(playerid, 10000);
        SendClientMessage(playerid, BRANCO, "Você Vendeu Sua Arara e ganhou R$10000!");
        return 1;
    }
    if(!strcmp("/tiraroculos",cmd,true))
    {
        StopPlayerHoldingObject(playerid);
        return 1;
    }
     if(strcmp(cmd, "/casav", true) == 0 || strcmp(cmd, "/casavip", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] == 3000)
            {
                new strcasavip[64];
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_WHITE, "USE: /casav [VIP ID] (1 = Free, 2 = VIP e 3 = Super Vip)");
                    return 1;
                }
                if(strcmp(tmp, "1", true) == 0)
                {
                    format(strcasavip, sizeof(strcasavip), "Casa Free");
                }
                else if(strcmp(tmp, "2", true) == 0)
                {
                    format(strcasavip, sizeof(strcasavip), "Casa VIP");
                }
                else if(strcmp(tmp, "3", true) == 0)
                {
                    format(strcasavip, sizeof(strcasavip), "Super VIP");
                }
                else  {return SendClientMessage(playerid, COLOR_WHITE, "USE: /casav [VIP ID] (1 = Free, 2 = VIP e 3 = Super Vip)");   }
                for(new i = 0; i < sizeof(HouseInfo); i++)
                {
                    if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
                    {
                        strmid(HouseInfo[i][hDiscription], strcasavip, 0, strlen(strcasavip), 255);

                        /*format(string, sizeof string, "Você Editou a propriedade ID: %d", i);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);*/
                        format(gstring, sizeof(gstring), "Casa de nível: %d, Valor: R$ %d, TIPO: %s", HouseInfo[i][hLevel],HouseInfo[i][hValue],strcasavip);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
                        if(ValorCasas != 0)
                        {
                            format(gstring, sizeof(gstring), "ATENÇÃO: Sistema de alteração automaticamente ativado, preço alterado, Valor: R$ %d", ValorCasas);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
                            HouseInfo[i][hValue] = ValorCasas;
                        }
                        SalvarCasa(i);
                        format(gstring, sizeof(gstring), "Alterações efetuadas com Sucesso!");
                        SendClientMessage(playerid, 0x95FFDFFF, gstring);
                    }
                }
                a3d();

                PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
            }
            else  {return SendClientMessage(playerid, COLOR_WHITE, "Você não tem autorização para usar este comando!");   }
        }
        return 1;
    }
    if(strcmp(cmd, "/casasvalor", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid,COLOR_GREY,"Coloque o valor a ser editado automaticamente junto com o '/casav'");
             return 1;
            }
            new idsemp = strval(tmp);
            if(PlayerInfo[playerid][pAdmin] == 3000)
            {
            ValorCasas = idsemp;
            PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
            format(string, sizeof string, "ATENÇÃO: Você editou o valor para ser modificado automaticamente no preço das casas!");
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            format(string, sizeof string, "AVISO: O Valor da casa será modificado em conjunto com o comando '/casav'.");
            SendClientMessage(playerid, 0xFFFFFFFF, string);
            format(string, sizeof string, "AVISO: Para desligar o sistema, basta alterar o valor para 0 novamente.");
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            format(gstring, sizeof(gstring), "Agora o preço das Casas será modificado automaticamente para: R$ %d.",ValorCasas);
            SendClientMessage(playerid, 0x95FFDFFF, gstring);
            PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
            }
        }
        return 1;
    }
 if(strcmp(cmd, "/comprarcasa", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new Float:oldposx, Float:oldposy, Float:oldposz;
            new curdate = getdate();
            GetPlayerName(playerid, playername, sizeof(playername));
            GetPlayerPos(playerid, oldposx, oldposy, oldposz);
            for(new h = 0; h < sizeof(HouseInfo); h++)
            {
                if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 0)
                {
                    if(PlayerInfo[playerid][pLevel] < HouseInfo[h][hLevel])
                    {
                        format(string, sizeof(string), "   Você precisa ter nivel %d Para comprar! !", HouseInfo[h][hLevel]);
                        SendClientMessage(playerid, COLOR_GRAD5, string);
                        return 1;
                    }
                    if(PlayerInfo[playerid][pVip] == 0)
                    {
                        if(GetCasaVip(h) != 0)  return SendClientMessage(playerid, COLOR_WHITE, "   ERRO: Você precisa ser um player vip para comprar esta propriedade!");
                    }
                    else  if(PlayerInfo[playerid][pVip] == 1)
                    {
                        if(GetCasaVip(h) > 1)  return SendClientMessage(playerid, COLOR_WHITE, "   ERRO: Você precisa ser um player vip para comprar esta propriedade!");
                    }
                    else  if(PlayerInfo[playerid][pVip] >= 2)
                    {

                    }

                    if(PlayerInfo[playerid][pPHousekey] != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "   Você tem uma casa para vender digite /vendercasa, você receberá o mesmo valor que foi pago!");
                        return 1;
                    }
                    if(GetPlayerMoneyEx(playerid) > HouseInfo[h][hValue])
                    {
                        PlayerInfo[playerid][pPHousekey] = h;
                        PlayerInfo[playerid][pPHouseCarkey] = HouseInfo[h][hVeiculo];
                        HouseInfo[h][hOwned] = 1;
                        HouseInfo[h][hExitx] = 234.0843;
                        HouseInfo[h][hExity] = 1064.6896;
                        HouseInfo[h][hExitz] = 1084.2108;
                        HouseInfo[h][hInt] = 6;
                        HouseInfo[h][hRentabil] = 1;
                        HouseInfo[h][hRent] = 200;
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        strmid(HouseInfo[h][hOwner], sendername, 0, strlen(sendername), 255);
                        HouseInfo[h][hDate] = curdate;
                        GivePlayerMoney(playerid,-HouseInfo[h][hValue]);
                        /*PlayerPlayMusic(playerid);
                        PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);*/
                        GameTextForPlayer(playerid, "~w~Parabens pela compra ~n~~b~Para entrar digite /entrar", 5000, 3);
                        SendClientMessage(playerid, COLOR_WHITE, "Parabéns pela sua nova casa!");
                        SendClientMessage(playerid, COLOR_WHITE, "Digite /ajudacasa Em caso de duvidas!");
                        PlayerInfo[playerid][pSpawn] = 1;
                        a3d();
                        SalvarCasa(h);
                        SalvarPlayer(playerid);
                        return 1;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "   Você não tem dinheiro o suficiente. !");
                        return 1;
                    }
                }
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/alugarquarto", true) == 0 || strcmp(cmd, "/alugar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new Float:oldposx, Float:oldposy, Float:oldposz;
            GetPlayerName(playerid, playername, sizeof(playername));
            GetPlayerPos(playerid, oldposx, oldposy, oldposz);
            for(new h = 0; h < sizeof(HouseInfo); h++)
            {
                if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 1 &&  HouseInfo[h][hRentabil] == 1)
                {
                    if(PlayerInfo[playerid][pPHousekey] != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "   Você tem uma casa, para vender digite /vendercasa, você receberá o mesmo valor que foi pago!");
                        return 1;
                    }
                    if(GetPlayerMoneyEx(playerid) > HouseInfo[h][hRent])
                    {
                        PlayerInfo[playerid][pPHousekey] = h;
                        PlayerInfo[playerid][pPHouseCarkey] = HouseInfo[h][hVeiculo];
                        GivePlayerMoney(playerid,-HouseInfo[h][hRent]);
                        HouseInfo[h][hTakings] = HouseInfo[h][hTakings]+HouseInfo[h][hRent];
                        //PlayerPlayMusic(playerid);
                        GameTextForPlayer(playerid, "~w~Parabens pela compra ~n~~b~Para entrar digite /entrar", 5000, 3);
                        SendClientMessage(playerid, COLOR_WHITE, "Parabéns pela sua nova casa!");
                        SendClientMessage(playerid, COLOR_WHITE, "Digite /ajudaaluguel Em caso de duvidas!");
                        return 1;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "Você não tem dinheiro o suficiente.");
                        return 1;
                    }
                }
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/alugarcarro", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new newcar = GetPlayerVehicleID(playerid);
            if(IsAAlugCar(newcar))
            {
                new hirefee = HireCost(GetPlayerVehicleID(playerid));
                if (GetPlayerMoneyEx(playerid) <  SBizzInfo[1][sbEntranceCost])
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "Você não tem esse dinheiro !");
     RemovePlayerFromVehicleEx(playerid);
                    return 1;
                }
                if(HireCar[playerid] > 0)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Você tem que desalugar o outro veiculo !");
                    RemovePlayerFromVehicleEx(playerid);
                    return 1;
                }
    for(new i=0; i<MaiorID; i++)
                {
                    if(HireCar[i] == GetPlayerVehicleID(playerid))
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Alguem já alugou esse veiculo !");
                        TogglePlayerControllable(playerid, 1);
                        RemovePlayerFromVehicleEx(playerid);
                        return 1;
                    }
                }
                GivePlayerMoney(playerid,-SBizzInfo[1][sbEntranceCost]);
                SBizzInfo[1][sbTill] += SBizzInfo[1][sbEntranceCost];
                ExtortionSBiz(1, SBizzInfo[1][sbEntranceCost]);
                GastarProdutos(2, 1, 3);
                HireCar[playerid] = GetPlayerVehicleID(playerid);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                format(string, sizeof(string), "~w~Voce pode ~r~/desalugarcarro~n~~g~ou /trancar ~w~ para trancar o carro.",hirefee);
                TogglePlayerControllable(playerid, 1);
                GameTextForPlayer(playerid, string, 5000, 3);
                return 1;
            }
            /*else if(IsAVipCar(newcar))
            {
                new hirefee = HireCost(GetPlayerVehicleID(playerid));
                if (GetPlayerMoneyEx (playerid) <  SBizzInfo[23][sbEntranceCost])
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "Você não tem esse dinheiro !");
                    return 1;
                }
                if(HireCar[playerid] > 0)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Você tem que desalugar o outro veiculo !");
                    return 1;
                }
    for(new i=0; i<MaiorID; i++)
                {
                    if(HireCar[i] == GetPlayerVehicleID(playerid))
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Alguem já alugou esse veiculo !");
                        TogglePlayerControllable(playerid, 1);
                        RemovePlayerFromVehicleEx(playerid);
                        return 1;
                    }
                }
                GivePlayerMoney(playerid,-SBizzInfo[22][sbEntranceCost]);
                SBizzInfo[22][sbTill] += SBizzInfo[22][sbEntranceCost];
                ExtortionSBiz(22, SBizzInfo[22][sbEntranceCost]);
                HireCar[playerid] = GetPlayerVehicleID(playerid);
                SalvarTudo();
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                format(string, sizeof(string), "~w~Voce pode ~r~/desalugarcarro~n~~g~ou /trancar ~w~ para trancar o carro.",hirefee);
                TogglePlayerControllable(playerid, 1);
                GameTextForPlayer(playerid, string, 5000, 3);
                return 1;
            }*/
        }
        return 1;
    }
    if(strcmp(cmd, "/alugarheli", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new hirefee = HireCost(GetPlayerVehicleID(playerid));
            if(IsAAlugHeli(GetPlayerVehicleID(playerid)))
            {
                if (GetPlayerMoneyEx (playerid) <  SBizzInfo[19][sbEntranceCost])
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "Você não tem esse dinheiro !");
     RemovePlayerFromVehicleEx(playerid);
                    return 1;
                }
                if(HireCar[playerid] > 0)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Você tem que desalugar o outro veiculo !");
                    return 1;
                }
    for(new i=0; i<MaiorID; i++)
                {
                    if(IsPlayerConnected(i))
                    {
                    if(HireCar[i] == GetPlayerVehicleID(playerid))
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Alguem já alugou esse veiculo !");
                        TogglePlayerControllable(playerid, 1);
                        RemovePlayerFromVehicleEx(playerid);
                        return 1;
                    }
                    }
                }
                GivePlayerMoney(playerid,-SBizzInfo[18][sbEntranceCost]);
                SBizzInfo[18][sbTill] += SBizzInfo[18][sbEntranceCost];
                ExtortionSBiz(18, SBizzInfo[18][sbEntranceCost]);
                GastarProdutos(2, 18, 10);
                HireCar[playerid] = GetPlayerVehicleID(playerid);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                format(string, sizeof(string), "~w~Voce pode ~r~/desalugarheli~n~~g~ou /trancar ~w~ para trancar o heli.",hirefee);
                TogglePlayerControllable(playerid, 1);
                GameTextForPlayer(playerid, string, 5000, 3);
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/desalugarcarro", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(HireCar[playerid] != 299)
            {
                new idcar = GetPlayerVehicleID(playerid);
                if(idcar == HireCar[playerid])
                {
                    TogglePlayerControllable(playerid, 1);
                }
                SetVehicleToRespawn(HireCar[playerid]);
                VTrancado[HireCar[playerid]] = 0;
                UnLockCar(HireCar[playerid]);
                HireCar[playerid] = 0;
                GameTextForPlayer(playerid, "~w~Voce desalugou o carro", 5000, 3);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/desalugarheli", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(HireCar[playerid] != 299)
            {
                new idcar = GetPlayerVehicleID(playerid);
                if(idcar == HireCar[playerid])
                {
                    TogglePlayerControllable(playerid, 1);
                }
                SetVehicleToRespawn(HireCar[playerid]);
                VTrancado[HireCar[playerid]] = 0;
                UnLockCar(HireCar[playerid]);
                HireCar[playerid] = 0;
                GameTextForPlayer(playerid, "~w~Voce desalugou o heli", 5000, 3);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/trocarchave", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(!SwitchKey[playerid])
            {
                if(HireCar[playerid] != 299)
                {
                    SwitchKey[playerid] = 1;
                    GameTextForPlayer(playerid, "~w~Voce controla a chave do seu carro de casa", 5000, 6);
                }
                else
                {
                    GameTextForPlayer(playerid, "~w~Voce nao possui uma chave de carro", 5000, 6);
                }
                return 1;
            }
            else
            {
                SwitchKey[playerid] = 0;
                GameTextForPlayer(playerid, "~w~Voce controla a chave do seu carro alugado", 5000, 6);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/darchaves", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            new car;
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /darchaves [id]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(HireCar[playerid] == 299 && PlayerInfo[playerid][pPHousekey] == 9999)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "  Você não tem uma chave para dar");
                return 1;
            }
            else
            {
                if(HireCar[playerid] != 299 && SwitchKey[playerid] == 0)
                {
                    car = HireCar[playerid];
                    VTrancado[car] = 0;
                    UnLockCar(car);
                    HireCar[playerid] = 299;
                }
                else
                {
                    car = PlayerInfo[playerid][pPHousekey];
                }
            }
            if (IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(ProxDetectorS(5.0, playerid, giveplayerid))
                    {
                        if(HireCar[giveplayerid] != 299)
                        {
                            VTrancado[HireCar[giveplayerid]] = 0;
                            UnLockCar(HireCar[giveplayerid]);
                        }
                        HireCar[giveplayerid] = car;
                        HireCar[playerid] = 999;
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "   Você deu a chave do seu veiculo para %s", giveplayer);
                        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                        SendClientMessage(playerid, COLOR_GRAD1, string);
                        format(string, sizeof(string), "   Você recebeu a chave do veiuclo de %s", sendername);
                        SendClientMessage(giveplayerid, COLOR_GRAD1, string);
                        format(string, sizeof(string), "* %s da uma chave para %s.", sendername ,giveplayer);
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    }
                }
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/desalugarcarro", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(HireCar[playerid] != 299)
            {
                VTrancado[HireCar[playerid]] = 0;
                UnLockCar(HireCar[playerid]);
                HireCar[playerid] = 299;
                GameTextForPlayer(playerid, "~w~Voce nao alugou nenhum carro", 5000, 3);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/desalugar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, playername, sizeof(playername));
            if(PlayerInfo[playerid][pPHousekey] != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
            {
                SendClientMessage(playerid, COLOR_WHITE, "   Você desalugou uma casa, e agora está desabrigado!");
                PlayerInfo[playerid][pPHousekey] = 9999;
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, " Você não alugou nenhuma casa.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/cofrecasa", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, playername, sizeof(playername));
            new borse = PlayerInfo[playerid][pPHousekey];
            if(PlayerInfo[playerid][pPHousekey] != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: /cofrecasa [quantidade]");
                    format(string, sizeof(string), "  Você tem $%d em seu cofre.", HouseInfo[borse][hTakings]);
                    SendClientMessage(playerid, COLOR_GRAD3, string);
                    return 1;
                }
                new cashdeposit = strval(tmp);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: /cofrecasa [quantidade]");
                    format(string, sizeof(string), "  Você tem $%d em seu cofre.", HouseInfo[borse][hTakings]);
                    SendClientMessage(playerid, COLOR_GRAD3, string);
                    return 1;
                }
                if (cashdeposit >  HouseInfo[borse][hTakings] || cashdeposit < 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem tudo isso !");
                    return 1;
                }
                if (!PlayerToPoint(100, playerid,HouseInfo[borse][hExitx],HouseInfo[borse][hExity],HouseInfo[borse][hExitz]))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "   Você está longe de sua casa !");
                    return 1;
                }
                else
                {
                    ConsumingMoney[playerid] = 1;
                    GivePlayerMoney(playerid,cashdeposit);
                    HouseInfo[borse][hTakings]=HouseInfo[borse][hTakings]-cashdeposit;
                    format(string, sizeof(string), "  Você retirou $%d de seu cofre Total: $%d ", cashdeposit,HouseInfo[borse][hTakings]);
                    SalvarCasa(borse);
                    SendClientMessage(playerid, COLOR_YELLOW, string);
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não tem uma casa.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/admvemp", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, playername, sizeof(playername));
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /admvemp [empresa id]");
                return 1;
            }
            new biz = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 3000)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
                }
                BizzInfo[biz][bLocked] = 1;
                BizzInfo[biz][bOwned] = 0;
                strmid(BizzInfo[biz][bOwner], "O estado", 0, strlen("O estado"), 255);
                strmid(BizzInfo[biz][bExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                format(string, sizeof(string), "~w~Voce vendeu a empresa ID:%d", biz);
                GameTextForPlayer(playerid, string, 10000, 3);
                a3d();
                SalvarTudo();
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não tem permissão para usar esse comando !");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/admvsemp", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, playername, sizeof(playername));
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /admvsemp [sempresa id]");
                return 1;
            }
            new sbiz = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 3000)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
                }
                SBizzInfo[sbiz][sbLocked] = 1;
                SBizzInfo[sbiz][sbOwned] = 0;
                strmid(SBizzInfo[sbiz][sbOwner], "O estado", 0, strlen("O estado"), 255);
                strmid(SBizzInfo[sbiz][sbExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                format(string, sizeof(string), "~w~Voce vendeu a empresa ID:%d", sbiz);
                GameTextForPlayer(playerid, string, 10000, 3);
                a3d();
                SalvarTudo();
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não tem permissão para usar esse comando !");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/admvcasa", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, playername, sizeof(playername));
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /admvcasa [Casa id]");
                return 1;
            }
            new House = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 3000)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
                }
                HouseInfo[House][hHel] = 0;
                HouseInfo[House][hArm] = 0;
                HouseInfo[House][hHealthx] = 0;
                HouseInfo[House][hHealthy] = 0;
                HouseInfo[House][hHealthz] = 0;
                HouseInfo[House][hArmorrx] = 0;
                HouseInfo[House][hArmorry] = 0;
                HouseInfo[House][hArmorrz] = 0;
                HouseInfo[House][hLock] = 1;
                HouseInfo[House][hOwned] = 0;
                HouseInfo[House][hVec] = 475;
                HouseInfo[House][hVcol1] = -1;
                HouseInfo[House][hVcol2] = -1;
                strmid(HouseInfo[House][hOwner], "O estado", 0, strlen("O estado"), 255);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                format(string, sizeof(string), "~w~Voce vendeu a propriedade ID:%d", House);
                GameTextForPlayer(playerid, string, 10000, 3);
                a3d();
                SalvarCasa(House);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não tem permissão para usar esse comando !");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/admvcasasall", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, playername, sizeof(playername));
            if (PlayerInfo[playerid][pAdmin] >= 3000)
            {
                new House = 0;
                while (House < sizeof(HouseInfo))
                {
                    HouseInfo[House][hHel] = 0;
                    HouseInfo[House][hArm] = 0;
                    HouseInfo[House][hHealthx] = 0;
                    HouseInfo[House][hHealthy] = 0;
                    HouseInfo[House][hHealthz] = 0;
                    HouseInfo[House][hArmorrx] = 0;
                    HouseInfo[House][hArmorry] = 0;
                    HouseInfo[House][hArmorrz] = 0;
                    HouseInfo[House][hLock] = 1;
                    HouseInfo[House][hOwned] = 0;
                    HouseInfo[House][hVec] = 475;
                    HouseInfo[House][hVcol1] = -1;
                    HouseInfo[House][hVcol2] = -1;
                    strmid(HouseInfo[House][hOwner], "O estado", 0, strlen("O estado"), 255);
                    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                    format(string, sizeof(string), "~w~Voce vendeu a propriedade ID:%d", House);
                    GameTextForPlayer(playerid, string, 10000, 3);
                    SalvarCasa(House);
                    House++;
                }
                a3d();
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não tem permissão para usar esse comando !");
            }
        }
        return 1;
    }
    /*if (strcmp(cmd, "/mostrardados", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (ServerOwner[playerid] != 1) return SendClientMessage(playerid, -1, "Você não tem autorização para usar este comando!");
            CaptarDados(playerid);
        }
        return 1;
    }
    if (strcmp(cmd, "/marcarzona", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (ServerOwner[playerid] != 1) return SendClientMessage(playerid, -1, "Você não tem autorização para usar este comando!");
            AtivarSys(playerid);
        }
        return 1;
    }     */
    if(strcmp(cmd, "/abteste", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 3000)
            {
                DestroyAllDynamic3DTextLabels();
                DestroyAllDynamicPickups();
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/cmdteste", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (ServerOwner[playerid] != 1) return SendClientMessage(playerid, -1, "Você não tem autorização para usar este comando!");
            OnPlayerCommandText(playerid,"/loadfiles");
            for(new h = 0; h < 216; h++)
            {
               HouseInfo[h][hSpawnX] = HouseCarSpawns[h][0];
               HouseInfo[h][hSpawnY] = HouseCarSpawns[h][1];
               HouseInfo[h][hSpawnZ] = HouseCarSpawns[h][2];
               HouseInfo[h][hSpawnA] = HouseCarSpawns[h][3];
               HouseInfo[h][hAtiva]  = 1;
           }
            for(new h = 0; h < 25; h++)
            {

               SBizzInfo[h][sbAtiva] = 1;
           }
            /*OnPlayerCommandText(playerid,"/savefiles");
               OnPlayerCommandText(playerid,"/loadfiles");*/
               OnPlayerCommandText(playerid,"/gmx");

        }

        return 1;
    }
    if(strcmp(cmd, "/admvtudo", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, playername, sizeof(playername));
            if (ServerOwner[playerid] == 1)
            {
                new House = 0;
                new vinnyForever = 0;
                while (House < sizeof(HouseInfo))
                {
                    format(gstring, sizeof(gstring), "Casa ID: %d, Dono: %s Vendida", House,HouseInfo[House][hOwner]);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
                    HouseInfo[House][hHel] = 0;
                    HouseInfo[House][hArm] = 0;
                    HouseInfo[House][hHealthx] = 0;
                    HouseInfo[House][hHealthy] = 0;
                    HouseInfo[House][hHealthz] = 0;
                    HouseInfo[House][hArmorrx] = 0;
                    HouseInfo[House][hArmorry] = 0;
                    HouseInfo[House][hArmorrz] = 0;
                    HouseInfo[House][hLock] = 1;
                    HouseInfo[House][hOwned] = 0;
                    HouseInfo[House][hVec] = 475;
                    HouseInfo[House][hVcol1] = -1;
                    HouseInfo[House][hVcol2] = -1;
                    strmid(HouseInfo[House][hOwner], "O estado", 0, strlen("O estado"), 255);
                    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                    format(string, sizeof(string), "~w~Voce vendeu a propriedade ID:%d", House);
                    GameTextForPlayer(playerid, string, 10000, 3);
                    House++;
                    vinnyForever ++;
                }
                new biz = 0;
                while (biz < sizeof(BizzInfo))
                {
                    format(gstring, sizeof(gstring), "Empresa ID: %d, Dono: %s Vendida", biz,BizzInfo[biz][bOwner]);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
                    BizzInfo[biz][bLocked] = 1;
                    BizzInfo[biz][bOwned] = 0;
                    strmid(BizzInfo[biz][bOwner], "O estado", 0, strlen("O estado"), 255);
                    strmid(BizzInfo[biz][bExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
                    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                    format(string, sizeof(string), "~w~Voce vendeu a empresa ID:%d", biz);
                    GameTextForPlayer(playerid, string, 10000, 3);
                    biz ++;
                    vinnyForever ++;
                }
                new sbiz = 0;
                while (sbiz < sizeof(SBizzInfo))
                {
                    format(gstring, sizeof(gstring), "Mini Empresa ID: %d, Dono: %s Vendida", sbiz,SBizzInfo[sbiz][sbOwner]);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
                    SBizzInfo[sbiz][sbLocked] = 1;
                    SBizzInfo[sbiz][sbOwned] = 0;
                    strmid(SBizzInfo[sbiz][sbOwner], "O estado", 0, strlen("O estado"), 255);
                    strmid(SBizzInfo[sbiz][sbExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
                    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                    format(string, sizeof(string), "~w~Voce vendeu a empresa ID:%d", sbiz);
                    GameTextForPlayer(playerid, string, 10000, 3);
                    sbiz ++;
                    vinnyForever ++;
                }
                a3d();
                SalvarTudo();
                format(gstring, sizeof(gstring), "Ao Todo São %d Vendidos, Atualizando: Sucesso!", vinnyForever);
                SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não tem permissão para usar esse comando !");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/admvcasaid", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, playername, sizeof(playername));
            if (PlayerInfo[playerid][pAdmin] >= 1340)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                for(new House = 0; House < sizeof(HouseInfo); House++)
                {
                    if (PlayerToPoint(3, playerid,HouseInfo[House][hEntrancex], HouseInfo[House][hEntrancey], HouseInfo[House][hEntrancez]))
                    {
                        format(string, sizeof(string), "Casa: %d", House);
                        SendClientMessage(playerid, COLOR_GRAD2, string);
                        HouseInfo[House][hHel] = 0;
                        HouseInfo[House][hArm] = 0;
                        HouseInfo[House][hHealthx] = 0;
                        HouseInfo[House][hHealthy] = 0;
                        HouseInfo[House][hHealthz] = 0;
                        HouseInfo[House][hArmorrx] = 0;
                        HouseInfo[House][hArmorry] = 0;
                        HouseInfo[House][hArmorrz] = 0;
                        HouseInfo[House][hLock] = 1;
                        HouseInfo[House][hOwned] = 0;
                        HouseInfo[House][hVec] = 475;
                        HouseInfo[House][hVcol1] = -1;
                        HouseInfo[House][hVcol2] = -1;
                        strmid(HouseInfo[House][hOwner], "O estado", 0, strlen("O estado"), 255);
                        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                        format(string, sizeof(string), "~w~Voce vendeu a propriedade ID:%d", House);
                        GameTextForPlayer(playerid, string, 10000, 3);
                        a3d();
                        SalvarCasa(House);
                        return 1;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não tem permissão para usar esse comando !");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/vendercasa", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, playername, sizeof(playername));
            if(PlayerInfo[playerid][pPHousekey] == 9999)
            {
                SendClientMessage(playerid, COLOR_WHITE, "Você não tem casa.");
                return 1;
            }
            if(PlayerInfo[playerid][pMarried] > 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você é casado ( a ) não pode vender a casa !");
                return 1;
            }
            if(PlayerInfo[playerid][pPHousekey] != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
            {
                new House = PlayerInfo[playerid][pPHousekey];
                HouseInfo[House][hHel] = 0;
                HouseInfo[House][hArm] = 0;
                HouseInfo[House][hHealthx] = 0;
                HouseInfo[House][hHealthy] = 0;
                HouseInfo[House][hHealthz] = 0;
                HouseInfo[House][hArmorrx] = 0;
                HouseInfo[House][hArmorry] = 0;
                HouseInfo[House][hArmorrz] = 0;
                HouseInfo[House][hLock] = 1;
                HouseInfo[House][hOwned] = 0;
                HouseInfo[House][hVec] = 475;
                HouseInfo[House][hVcol1] = -1;
                HouseInfo[House][hVcol2] = -1;
                GetPlayerName(playerid, sendername, sizeof(sendername));
                strmid(HouseInfo[House][hOwner], "O estado", 0, strlen("O estado"), 255);
                ConsumingMoney[playerid] = 1;
                GivePlayerMoney(playerid,HouseInfo[House][hValue]);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                format(string, sizeof(string), "~w~Parabens~n~ Voce vendeu a casa por ~n~~g~R$%d", HouseInfo[House][hValue]);
                GameTextForPlayer(playerid, string, 10000, 3);
                PlayerInfo[playerid][pPHousekey] = 9999;
                if(PlayerInfo[playerid][pLocal] == House)
                {
                    SetPlayerInterior(playerid,0);
                    SetPlayerPos(playerid,HouseInfo[House][hEntrancex],HouseInfo[House][hEntrancey],HouseInfo[House][hEntrancez]);
                    PlayerInfo[playerid][pInt] = 0;
                }
                a3d();
                SalvarCasa(House);
                SalvarPlayer(playerid);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não tem casa.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/moveis", true) == 0 || strcmp(cmd, "/mv", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new House = PlayerInfo[playerid][pPHousekey];
            GetPlayerName(playerid, playername, sizeof(playername));
            if (House != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_WHITE, "USE: /moveis [Numero do iten]");
                    SendClientMessage(playerid, COLOR_WHITE, "|______________ Moveis da casa ______________|");
                    SendClientMessage(playerid, COLOR_GRAD2, "| 1: Vida  R$50000");
                    SendClientMessage(playerid, COLOR_GRAD3, "| 2: Colete R$100000");
                    return 1;
                }
                new item = strval(tmp);
                switch (item)
                {
                    case 1:
                    {
                        if(GetPlayerMoneyEx(playerid) < 50000)
                        {
                            SendClientMessage(playerid, COLOR_GRAD5, "Voce não tem dinheiro suficiente ");
                            return 1;
                        }
                        HouseInfo[House][hHel] = 1;
                        GivePlayerMoney(playerid,-50000);
                        SBizzInfo[6][sbTill] += 50000;//vida buisness
                        ExtortionSBiz(6, 50000);
                        GastarProdutos(2, 6, 50);
                        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                        SendClientMessage(playerid, COLOR_GRAD5, "Sua casa agora tem upgrade de vida, Digite /vida.");
                    }
                    case 2:
                    {
                        if(!IsACop(playerid))
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você não pode comprar isso, você não é um policial !");
                            return 1;
                        }
                        if(GetPlayerMoneyEx(playerid) < 100000)
                        {
                            SendClientMessage(playerid, COLOR_GRAD5, "Voce não tem dinheiro suficiente !");
                            return 1;
                        }
                        HouseInfo[House][hArm] = 1;
                        GivePlayerMoney(playerid,-100000);
                        SBizzInfo[6][sbTill] += 100000;//vida buisness
                        ExtortionSBiz(6, 100000);
                        GastarProdutos(2, 6, 5);
                        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                        SendClientMessage(playerid, COLOR_GRAD5, "Sua casa agora tem upgrade de colete, Digite /vida.");
                    }
                    default:
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Número de móvel desconhecido.");
                    }
                }
                SalvarTudo();
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem uma casa");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/aluguel", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new borse = PlayerInfo[playerid][pPHousekey];
            GetPlayerName(playerid, playername, sizeof(playername));
            if (borse != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: /aluguel [Preço]");
                    return 1;
                }
                if(strval(tmp) < 1 || strval(tmp) > 99999)
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "Preço Mínimo R$1, Maximo R$99999.");
                    return 1;
                }
                HouseInfo[borse][hRent] = strval(tmp);
                a3d();
                SalvarCasa(borse);
                format(string, sizeof(string), "Aluguel definido para: R$%d", HouseInfo[borse][hRent]);
                SendClientMessage(playerid, COLOR_WHITE, string);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem uma casa");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/despejartodos", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new borse = PlayerInfo[playerid][pPHousekey];
            if (borse != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
            {
    for(new i = 0; i < MaiorID; i++)
                {
                    if(IsPlayerConnected(i))
                    {
                        if(i != playerid)
                        {
                            if (PlayerInfo[i][pPHousekey] == PlayerInfo[playerid][pPHousekey] )
                            {
                                SendClientMessage(i, COLOR_WHITE, "Você foi despejado de sua casa.");
                                SendClientMessage(playerid, COLOR_WHITE, "Você expulsou todos os inquilinos de sua casa.");
                                PlayerInfo[i][pPHousekey] = 9999;
                                return 1;
                            }
                        }
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD2, "   Você não é dono de uma casa !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/despejar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new borse = PlayerInfo[playerid][pPHousekey];
            GetPlayerName(playerid, playername, sizeof(playername));
            if (borse != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_WHITE, "USE: /despejar [id]");
                }
                new target;
                //target = strval(tmp);
                target = ReturnUser(tmp);
                if (target == playerid)
                {
                    SendClientMessage(target, COLOR_WHITE, "Você não pode despejar a si mesmo.");
                    return 1;
                }
                if(IsPlayerConnected(target))
                {
                    if(target != INVALID_PLAYER_ID)
                    {
                        if(PlayerInfo[target][pPHousekey] == PlayerInfo[playerid][pPHousekey])
                        {
                            SendClientMessage(target, COLOR_WHITE, "Você foi despejado");
                            SendClientMessage(playerid, COLOR_WHITE, "Você despejou o jogador");
                            PlayerInfo[target][pPHousekey] = 9999;
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_WHITE, "O Jogador não alugou sua casa !");
                            return 1;
                        }
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD2, "   Você não é dono de uma casa !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/alugada", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new borse = PlayerInfo[playerid][pPHousekey];
            GetPlayerName(playerid, playername, sizeof(playername));
            if (borse != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_WHITE, "USE: /alugada [0 - Nao / 1 - Sim]");
                }
                HouseInfo[borse][hRentabil] = strval(tmp);
                SalvarCasa(borse);
                a3d();
                format(string, sizeof(string), "Status do aluguel da casa setado para - %d.", HouseInfo[borse][hRentabil]);
                SendClientMessage(playerid, COLOR_WHITE, string);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD2, "   Você não é dono de uma casa !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/ligar", true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Você não pode usar isso Preso");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pMuted] == 1)
            {
                SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /ligar [Telefone]");
                return 1;
            }
            if(PlayerInfo[playerid][pConnectTime] < 0)
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Você precisa jogar pelo menos 4 horas para fazer ligações!");
                return 1;
            }
            if(PlayerInfo[playerid][pPnumber] == 0)
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Você não tem um celular");
                return 1;
            }
            /*if(PlayerInfo[playerid][pCreditos] < 2)
            {
                SendClientMessage(playerid, COLOR_GREY, "Voce não tem créditos suficientes, compre mais na 24-7!");
                return 1;
            }*/
            GetPlayerName(playerid, sendername, sizeof(sendername));
            format(string, sizeof(string), "* %s pega o celular.", sendername);
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            new phonenumb = strval(tmp);
            if(phonenumb == 0)
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Você está ligando para ninguém");
                return 1;
            }
            if(phonenumb == PlayerInfo[playerid][pPnumber])
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Voce não pode ligar para si mesmo");
                return 1;
            }
            if(Mobile[playerid] != 9999)
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Voce ja está em uma ligação...");
                return 1;
            }
   for(new i = 0; i < MaiorID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
                    {
                        giveplayerid = i;
                        Mobile[playerid] = giveplayerid; //caller connecting
                        if(IsPlayerConnected(giveplayerid))
                        {
                            if(giveplayerid != INVALID_PLAYER_ID)
                            {
                                if(helptrampando[giveplayerid] == 1)
                                {
                                    SendClientMessage(playerid, COLOR_GRAD1, "   Você Não pode ligar Para um Helper em modo Trabalho, mande /par!");
                                    return 1;
                                }
                                if(admtrampando[giveplayerid] == 1)
                                {
                                    SendClientMessage(playerid, COLOR_GRAD1, "   Você Não pode ligar Para um Administrador em modo Trabalho, mande /par!");
                                    return 1;
                                }
                                if(PhoneOnline[giveplayerid] > 0)
                                {
                                    SendClientMessage(playerid, COLOR_GREY, "   O celular chamado está fora da área de cobertura ou está desligado !");
                                    return 1;
                                }
                                if (Mobile[giveplayerid] == 9999)
                                {
                                    format(string, sizeof(string), "Seu celular está tocando (/At) Chamando: %s", sendername);
                                    SendClientMessage(giveplayerid, COLOR_YELLOW, string);
                                    GetPlayerName(giveplayerid, sendername, sizeof(sendername));
                                    RingTone[giveplayerid] = 10;
                                    format(string, sizeof(string), "* %s's está tocando o celular.", sendername);
                                    PlayerPlaySound(giveplayerid, 1142, 0.0, 0.0, 0.0);
                                    PlayerPlaySound(playerid, 1142, 0.0, 0.0, 0.0);
                                    SendClientMessage(playerid, COLOR_MSG, "[BPG]: Use 'T' para falar, digite /des para desligar");
                                    SendClientMessage(playerid, COLOR_MSG, "[BPG]: Obs: Se Não desligar,digite /cellout !");
                                    ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                    CellTime[playerid] = 1;
                                    //GameTextForPlayer(playerid,"~r~ -2 Creditos", 5000, 1);
                                    //PlayerInfo[playerid][pCreditos] -= 2;
                                    SBizzInfo[2][sbTill] += 1000;
                                    ExtortionSBiz(2, 1000);
                                    GastarProdutos(2, 2, 2);
                                    return 1;
                                }
                            }
                        }
                    }
                }
            }
            SendClientMessage(playerid, COLOR_GRAD2, "  Você acabou de ligar para um número ocupado...");
        }
        return 1;
    }
    if(strcmp(cmd, "/sms", true) == 0 || strcmp(cmd, "/t", true) == 0 || strcmp(cmd, "/sms", true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Você não pode usar isso Preso");
            return 1;
        }
        if(PlayerInfo[playerid][pMuted] == 1)
        {
            SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            if(gPlayerLogged[playerid] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "Voce não está logado!");
                return 1;
            }
            /*if(PlayerInfo[playerid][pCreditos] < 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "Voce não tem créditos suficientes compre mais na 24-7!");
                return 1;
            }*/
            if(PlayerInfo[playerid][pConnectTime] < 0)
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Você precisa jogar pelo menos 4 horas para mandar sms!");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /sms [telefone] [texto]");
                return 1;
            }
            if(PlayerInfo[playerid][pPnumber] == 0)
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Você não tem um celular, compre um na 24/7");
                return 1;
            }
            GetPlayerName(playerid, sendername, sizeof(sendername));
            format(string, sizeof(string), "* %s pegou o celular.", sendername);
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            new phonenumb = strval(tmp);
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /sms [telefone] [texto]");
                return 1;
            }
   for(new i = 0; i < MaiorID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
                    {
                        giveplayerid = i;
                        Mobile[playerid] = giveplayerid; //caller connecting
                        if(IsPlayerConnected(giveplayerid))
                        {
                            if(giveplayerid != INVALID_PLAYER_ID)
                            {
                                if(PhoneOnline[giveplayerid] > 0)
                                {
                                    SendClientMessage(playerid, COLOR_GREY, "   O celular chamado está fora da área de cobertura ou está desligado !");
                                    return 1;
                                }
                                format(string, sizeof(string), "SMS: %s, enviou: %s (%d)", result,sendername,PlayerInfo[playerid][pPnumber]);
                                GetPlayerName(giveplayerid, sendername, sizeof(sendername));
                                RingTone[giveplayerid] =20;
                                SendClientMessage(playerid, COLOR_WHITE, "SMS Enviado");
                                SendClientMessage(giveplayerid, COLOR_YELLOW, string);
                                print(string);
                                SendClientMessage(playerid,  COLOR_YELLOW, string);
                                //GameTextForPlayer(playerid,"~r~ -1 Credito", 5000, 1);
                                //PlayerInfo[playerid][pCreditos] -= 1;
                                SBizzInfo[2][sbTill] += 50;
                                ExtortionSBiz(2, 50);
                                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                                Mobile[playerid] = 9999;
                                GastarProdutos(2, 2, 1);
                                return 1;
                            }
                        }
                    }
                }
            }
            SendClientMessage(playerid, COLOR_GRAD2, " Falha ao enviar a mensagem!");
        }
        return 1;
    }
    if(strcmp(cmd, "/equiparsec", true) == 0 || strcmp(cmd, "/equipargov", true) == 0)
    {
        if(PlayerToPoint(5.0,playerid, 352.0188,197.6048,1008.3828) || PlayerToPoint(5.0,playerid, 355.2333,169.3552,1025.7891))
        {
            if(PlayerInfo[playerid][pLider] == 32 || PlayerInfo[playerid][pLider] == 7)
            {
                SendClientMessage(playerid, -1, "Você pegou seus Equipamentos de proteção");
                SetPlayerArmour(playerid, 100);
                SetPlayerHealth(playerid, 100);
                return 1;
            }
            else if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pMembro] == 7)
            {
                SendClientMessage(playerid, -1, "Você pegou seus Equipamentos");
                ResetPlayerWeapons(playerid);
                SetPlayerArmour(playerid, 100);
                SetPlayerHealth(playerid, 100);
                GivePlayerWeapon(playerid, 3, 1);
                GivePlayerWeapon(playerid, 24, 150);
                GivePlayerWeapon(playerid, 29, 650);
                GivePlayerWeapon(playerid, 31, 450);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Você não é um membro da prefeitura!");
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_GRAD2, "Você não está no lugar de equipar em sua HQ");
        }
        return 1;
    }
//----------------------------------[Skin]-----------------------------------------------
    if(strcmp(cmd,"/meuskin",true) == 0)
    if(PlayerToPoint(10.0,playerid,205.1173,-159.3505,1000.5234) || PlayerToPoint(10.0,playerid,207.9093,-104.6899,1005.1328) || PlayerToPoint(3.0,playerid,414.1574,2536.4773,10.00008) || PlayerToPoint(50.0,playerid,162.6288,-86.3102,1001.8047))
    {
        new skin;
        tmp=strtok(cmdtext,idx);
        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Use: /meuskin [id da skin] - Custo R$ 500");
        skin=strval(tmp);
        if(skin > 299) return SendClientMessage(playerid, COLOR_GRAD2, "Use: /meuskin [id da skin(0 à 299)]");
        SetPlayerSkinEx(playerid,skin);
        PlayerInfo[playerid][pSkin] = skin;
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você comprou novo skin por R$500");
        GivePlayerMoney(playerid,-500);
        SBizzInfo[6][sbTill] += 500;
        ExtortionSBiz(6, 500);
        GastarProdutos(2, 6, 2);
        return 1;
    }
//----------------------------------[pickup]-----------------------------------------------
    if(strcmp(cmd, "/atender", true) == 0 || strcmp(cmd, "/at", true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Você não pode usar isso Preso");
            return 1;
        }
        if(PlayerInfo[playerid][pMuted] == 1)
        {
            SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            if(Mobile[playerid] != 9999)
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Você já está em uma ligação.");
                return 1;
            }
   for(new i = 0; i < MaiorID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(Mobile[i] == playerid)
                    {
                        Mobile[playerid] = i; //caller connecting
                        SendClientMessage(i,  COLOR_GRAD2, "Atendeu o celular.");
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* %s atendeu o celular.", sendername);
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
                        RingTone[playerid] = 0;
                    }

                }
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/desligar", true) == 0 || strcmp(cmd, "/des", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new caller = Mobile[playerid];
            if(IsPlayerConnected(caller))
            {
                if(caller != INVALID_PLAYER_ID)
                {
                    if(caller != 9999)
                    {
                        if(caller < 255)
                        {
                            SendClientMessage(caller,  COLOR_GRAD2, "   Desligaram do outro lado da linha.");
                            CellTime[caller] = 0;
                            CellTime[playerid] = 0;
                            SendClientMessage(playerid,  COLOR_GRAD2, "   Você desligou seu celular.");
                            Mobile[caller] = 9999;
                            StopMusic(playerid);
                            StopMusic(caller);
                        }
                        Mobile[playerid] = 9999;
                        CellTime[playerid] = 0;
                        RingTone[playerid] = 0;
                        return 1;
                    }
                }
            }
            SendClientMessage(playerid,  COLOR_GRAD2, "   Você guardou seu celular no bolso.");
            new pSpecialAction = GetPlayerSpecialAction(playerid);
            if (pSpecialAction == SPECIAL_ACTION_USECELLPHONE)
            {
                SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
                SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
            }
        }
        return 1;
    }
//-----------------------[RONDA]--------------------
    if(strcmp(cmd,"/rondar",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pMembro] == 2||PlayerInfo[playerid][pLider] == 2 || PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11 || PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
            {
                if(EmRondaCop[playerid] >= 1)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não esta mais em serviço.");
                    EmRondaCop[playerid] = 0;
                    GetPlayerName(playerid,sendername,sizeof(sendername));
                    format(string, sizeof(string), "O Policial %s saiu de modo ronda e não atendera seus chamados.", sendername);
                    OOCNews(COLOR_LIGHTRED,string);
                    Copsronda -= 1;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora você está de serviço  e poderá receber chamadas de pessoas que precisam.");
                    EmRondaCop[playerid] = 1;
                    GetPlayerName(playerid,sendername,sizeof(sendername));
                    format(string, sizeof(string), "O Policial %s está rondando, /servico policia para chama-lo.", sendername);
                    OOCNews(COLOR_LIGHTRED,string);
                    Copsronda += 1;
                }
            }
        }
        return 1;
    }
//----------------------------[ORELHAO]--------------------------------------------------
    if(strcmp(cmd, "/orelhao", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerToPoint(3.0, playerid,1535.5697,-1637.5358,13.5469) || PlayerToPoint(3.0, playerid,1710.8175,-1605.0188,13.5469) || PlayerToPoint(3.0, playerid,1808.1926,-1598.6720,13.5469) || PlayerToPoint(3.0, playerid,1611.2460,-1713.0765,13.5469) || PlayerToPoint(3.0, playerid,1362.9312,-1751.3467,13.5244) || PlayerToPoint(3.0, playerid,1804.5630,-1167.7408,23.8281) || PlayerToPoint(3.0, playerid,814.5628,-1355.5433,13.5414) ||
            PlayerToPoint(3.0, playerid,839.7822,-1339.5476,7.1719) || PlayerToPoint(3.0, playerid,522.3236,-1515.9530,14.5936) || PlayerToPoint(3.0, playerid,523.9922,-1525.5927,14.7482) || PlayerToPoint(3.0, playerid,547.3288,-1498.3148,14.4988) || PlayerToPoint(3.0, playerid,637.4054,-1228.4910,17.8721) || PlayerToPoint(3.0, playerid,356.4761,-1365.3461,14.4760) ||
            PlayerToPoint(3.0, playerid,338.9698,-1397.1982,14.2238) || PlayerToPoint(3.0, playerid,248.2463,-1448.8539,13.5899) || PlayerToPoint(3.0, playerid,2232.8149,-1165.7214,25.8906)  || PlayerToPoint(3.0, playerid,1710.7872,-1605.3376,13.5469))
            {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /orelhao [Nº TELEFONE]");
                return 1;
            }
            GetPlayerName(playerid, sendername, sizeof(sendername));
            format(string, sizeof(string), "* %s disca algum numero no telefone.", sendername);
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            new phonenumb = strval(tmp);
            if(phonenumb == 0)
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Você está ligando para ninguém");
                return 1;
            }
            if(phonenumb == PlayerInfo[playerid][pPnumber])
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Voce não pode ligar para si mesmo");
                return 1;
            }
            if(Mobile[playerid] != 9999)
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Voce ja está em uma ligação...");
                return 1;
            }
   for(new i = 0; i < MaiorID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
                    {
                        giveplayerid = i;
                        Mobile[playerid] = giveplayerid; //caller connecting
                        if(IsPlayerConnected(giveplayerid))
                        {
                            if(giveplayerid != INVALID_PLAYER_ID)
                            {
                                if(PhoneOnline[giveplayerid] > 0)
                                {
                                    SendClientMessage(playerid, COLOR_GREY, "   O celular chamado está fora da área de cobertura ou está desligado !");
                                    return 1;
                                }
                                if (Mobile[giveplayerid] == 9999)
                                {
                                    format(string, sizeof(string), "Seu celular está tocando (/At) Chamando: %s", sendername);
                                    SendClientMessage(giveplayerid, COLOR_YELLOW, string);
                                    GetPlayerName(giveplayerid, sendername, sizeof(sendername));
                                    RingTone[giveplayerid] = 10;
                                    format(string, sizeof(string), "* %s's está tocando o celular.", sendername);
                                    //PlayerPlaySound(giveplayerid, 1142, 0.0, 0.0, 0.0);
                                    //PlayerPlaySound(playerid, 1142, 0.0, 0.0, 0.0);
                                    ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                    SendClientMessage(playerid, COLOR_MSG, "[BPG]: Use 'T' para falar, digite /des para desligar");
                                    CellTime[playerid] = 1;
                                    SBizzInfo[2][sbTill] += 500;
                                    ExtortionSBiz(2, 500);
                                    GastarProdutos(2, 2, 2);
                                    return 1;
                                }
                            }
                        }
                    }
                }
            }
            SendClientMessage(playerid, COLOR_GRAD2, "  Você acabou de ligar para 1 número ocupado...");}
        }
        return 1;
    }
//DESLIGAR ORELHAO
    if(strcmp(cmd, "/desligarorelhao", true) == 0 || strcmp(cmd, "/deso", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new caller = Mobile[playerid];
            if(IsPlayerConnected(caller))
            {
                if(caller != INVALID_PLAYER_ID)
                {
                    if(caller != 9999)
                    {
                        if(caller < 255)
                        {
                            SendClientMessage(caller,  COLOR_GRAD2, "Desligou.");
                            CellTime[caller] = 0;
                            CellTime[playerid] = 0;
                            SendClientMessage(playerid,  COLOR_GRAD2, "Desligou.");
                            Mobile[caller] = 9999;
                        }
                        Mobile[playerid] = 9999;
                        CellTime[playerid] = 0;
                        RingTone[playerid] = 0;
                        return 1;
                    }
                }
            }
            SendClientMessage(playerid,  COLOR_GRAD2, "Colocou o orelhão no gancho.");
            new pSpecialAction = GetPlayerSpecialAction(playerid);
            if (pSpecialAction == SPECIAL_ACTION_USECELLPHONE)
            {
                SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
            }
        }
        return 1;
    }
//----------------------------------[TIME]-----------------------------------------------
    if(strcmp(cmd, "/fixr", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            PlayerFixRadio(playerid);
        }
        return 1;
    }
    if(strcmp(cmd, "/horas", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new mtext[20];
            getdate(year, month, day);
            if(month == 1) { mtext = "Janeiro"; }
            else if(month == 2) { mtext = "Fevereiro"; }
            else if(month == 3) { mtext = "Marco"; }
            else if(month == 4) { mtext = "Abril"; }
            else if(month == 5) { mtext = "Maio"; }
            else if(month == 6) { mtext = "Junho"; }
            else if(month == 7) { mtext = "Julho"; }
            else if(month == 8) { mtext = "Agosto"; }
            else if(month == 9) { mtext = "Setembro"; }
            else if(month == 10) { mtext = "Outubro"; }
            else if(month == 11) { mtext = "Novembro"; }
            else if(month == 12) { mtext = "Dezembro"; }
            gettime(hour,minute,second);
            GetPlayerName(playerid, sendername, sizeof(sendername));
            format(string, sizeof(string), "* %s olhou as horas.", sendername);
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0);
            if (minute < 10)
            {
                if (PlayerInfo[playerid][pJailTime] > 0)
                {
                    format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|~n~~w~Tempo De Prisao: %d seg", day, mtext, hour, minute, PlayerInfo[playerid][pJailTime]-10);
                }
                else
                {
                    format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|", day, mtext, hour, minute);
                }
            }
            else
            {
                if (PlayerInfo[playerid][pJailTime] > 0)
                {
                    format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|~n~~w~Tempo De Prisao: %d seg", day, mtext, hour, minute, PlayerInfo[playerid][pJailTime]-10);
                }
                else
                {
                    format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|", day, mtext, hour, minute);
                }
            }
            GameTextForPlayer(playerid, string, 5000, 1);
        }
        return 1;
    }
//----------------------{HouseS}-------------------
    if(strcmp(cmd, "/ircasa", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 1337)
            {
                SendClientMessage(playerid, COLOR_GREY, "Voce não tem autorização para usar esse comando!");
                return 1;
            }
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /ircasa [ID]");
                return 1;
            }
            new Casa;
            Casa = strval(tmp);
            SetPlayerPos(playerid,HouseInfo[Casa][hEntrancex],HouseInfo[Casa][hEntrancey],HouseInfo[Casa][hEntrancez]);
            return 1;
        }
        return 1;
    }
    if(strcmp(cmd, "/iremp", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 1337)
            {
                SendClientMessage(playerid, COLOR_GREY, "Voce não tem autorização para usar esse comando!");
                return 1;
            }
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /iremp [ID]");
                return 1;
            }
            new Emp;
            Emp = strval(tmp);
            SetPlayerPos(playerid,BizzInfo[Emp][bEntranceX],BizzInfo[Emp][bEntranceY],BizzInfo[Emp][bEntranceZ]);
            return 1;
        }
        return 1;
    }
    if(strcmp(cmd,"/trazersemp",true)==0  && PlayerInfo[playerid][pAdmin] == 1341)
    {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid,COLOR_GREY,"USE: /trazersemp [ID]");
         return 1;
        }
        new idsemp = strval(tmp);
        new Float:x, Float:y, Float:z;
        GetPlayerPos(playerid, x, y, z);
        SBizzInfo[idsemp][sbEntranceX] = x;
        SBizzInfo[idsemp][sbEntranceY] = y;
        SBizzInfo[idsemp][sbEntranceZ] = z;
  return 1;
    }
    if(strcmp(cmd,"/trazeremp",true)==0  && PlayerInfo[playerid][pAdmin] == 1341)
    {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid,COLOR_GREY,"USE: /trazeremp [ID]");
         return 1;
        }
        new idemp = strval(tmp);
        new Float:x, Float:y, Float:z;
        GetPlayerPos(playerid, x, y, z);
        BizzInfo[idemp][bEntranceX] = x;
        BizzInfo[idemp][bEntranceY] = y;
        BizzInfo[idemp][bEntranceZ] = z;
  return 1;
    }
    if(strcmp(cmd,"/trazercasa",true)==0  && PlayerInfo[playerid][pAdmin] == 1341)
    {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid,COLOR_GREY,"USE: /trazercasa [ID]");
         return 1;
        }
        new idcasa = strval(tmp);
        new Float:x, Float:y, Float:z;
        GetPlayerPos(playerid, x, y, z);
        HouseInfo[idcasa][hEntrancex] = x;
        HouseInfo[idcasa][hEntrancey] = y;
        HouseInfo[idcasa][hEntrancez] = z;
  return 1;
    }
    if(strcmp(cmd, "/irsemp", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 1337)
            {
                SendClientMessage(playerid, COLOR_GREY, "Voce não tem autorização para usar esse comando!");
                return 1;
            }
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /iremp [ID]");
                return 1;
            }
            new Emp;
            Emp = strval(tmp);
            SetPlayerPos(playerid,SBizzInfo[Emp][sbEntranceX],SBizzInfo[Emp][sbEntranceY],SBizzInfo[Emp][sbEntranceZ]);
            return 1;
        }
        return 1;
    }
    if(strcmp(cmd, "/irfazenda", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 1337)
            {
                SendClientMessage(playerid, COLOR_GREY, "Voce não tem autorização para usar esse comando!");
                return 1;
            }
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, -1, "Você não está trabalhando! (/trabalhar)");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /irfazenda [ID]");
                return 1;
            }
            new Emp;
            Emp = strval(tmp);
            SetPlayerPos(playerid,FazendaInfo[Emp][ffX],FazendaInfo[Emp][ffY],FazendaInfo[Emp][ffZ]);
            return 1;
        }
        return 1;
    }

    if(strcmp(cmd, "/casa", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 6)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: /casa [numero da casa]");
                    return 1;
                }
                new Housenum = strval(tmp);
                SetPlayerInterior(playerid,HouseInfo[Housenum][hInt]);
                SetPlayerVirtualWorld(playerid,HouseInfo[Housenum][hWorld]);
                SetPlayerPos(playerid,HouseInfo[Housenum][hExitx],HouseInfo[Housenum][hExity],HouseInfo[Housenum][hExitz]);
                GameTextForPlayer(playerid, "~w~Teleportado", 5000, 1);
                PlayerInfo[playerid][pInt] = HouseInfo[Housenum][hInt];
                PlayerInfo[playerid][pLocal] = Housenum;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/biz", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 6)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: /biz [empresa]");
                    return 1;
                }
                new Housenum = strval(tmp);
                SetPlayerInterior(playerid,BizzInfo[Housenum][bInterior]);
                SetPlayerPos(playerid,BizzInfo[Housenum][bExitX],BizzInfo[Housenum][bExitY],BizzInfo[Housenum][bExitZ]);
                GameTextForPlayer(playerid, "~w~Teleportado", 5000, 1);
                PlayerInfo[playerid][pInt] = BizzInfo[Housenum][bInterior];
                PlayerInfo[playerid][pLocal] = Housenum+99;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/sbiz", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 6)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: /sbiz [empresa]");
                    return 1;
                }
                new Housenum = strval(tmp);
                SetPlayerPos(playerid,SBizzInfo[Housenum][sbEntranceX],SBizzInfo[Housenum][sbEntranceY],SBizzInfo[Housenum][sbEntranceZ]);
                GameTextForPlayer(playerid, "~w~Teleportado", 5000, 1);
            }
        }
        return 1;
    }
 if(strcmp(cmd, "/seditar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 3000)
            {
                SendClientMessage(playerid, COLOR_GREY, "Voce não tem autorização para usar esse comando!");
                return 1;
            }
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
            }
            new x_Emprego[32];
            x_Emprego = strtok(cmdtext, idx);
            if(!strlen(x_Emprego)) {
                SendClientMessage(playerid, COLOR_WHITE, "|______________ Editar ______________|");
                SendClientMessage(playerid, COLOR_WHITE, "USE: /seditar [nome] [quantidade] (Use para casas e empresas)");
                SendClientMessage(playerid, COLOR_GREY, "Casas: Level, Preco, carro, descricao, chave(0 aberto - 1 fechado)");
                SendClientMessage(playerid, COLOR_GREY, "Empresas: Level, Preco, fundos, descricao, chave(0 aberto - 1 fechado)");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /seditar [nome] [quantidade]");
                return 1;
            }
            new proplev = strval(tmp);
            for(new i = 0; i < sizeof(HouseInfo); i++)
            {
                if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
                {
                    format(string, sizeof(string), "Casa: %d", i);
                    SendClientMessage(playerid, COLOR_GRAD2, string);
                    if(proplev > 0)
                    {
                        if(strcmp(x_Emprego,"level",true) == 0)
                        {
                            HouseInfo[i][hLevel] = proplev;
                        }
                        else if(strcmp(x_Emprego,"preco",true) == 0)
                        {
                            HouseInfo[i][hValue] = proplev;
                        }
                        else if(strcmp(x_Emprego,"carro",true) == 0)
                        {
                            HouseInfo[i][hVec] = proplev;
                        }
                        else if(strcmp(x_Emprego,"chave",true) == 0)
                        {
                            HouseInfo[i][hLock] = proplev;
                        }
                    }
                }
            }
            for(new i = 0; i < sizeof(BizzInfo); i++)
            {
                if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
                {
                    format(string, sizeof(string), "Empresa: %d (Empresa com interior)", i);
                    SendClientMessage(playerid, COLOR_GRAD2, string);
                    if(proplev > 0)
                    {
                        if(strcmp(x_Emprego,"level",true) == 0)
                        {
                            BizzInfo[i][bLevelNeeded] = proplev;
                        }
                        else if(strcmp(x_Emprego,"preco",true) == 0)
                        {
                            BizzInfo[i][bBuyPrice] = proplev;
                        }
                        else if(strcmp(x_Emprego,"fundos",true) == 0)
                        {
                            BizzInfo[i][bTill] = proplev;
                        }
                        else if(strcmp(x_Emprego,"chave",true) == 0)
                        {
                            BizzInfo[i][bLocked] = proplev;
                        }
                        else if(strcmp(x_Emprego,"entrada",true) == 0)
                        {
                            BizzInfo[i][bEntranceCost] = proplev;
                        }

                    }
                }
            }
            for(new i = 0; i < sizeof(SBizzInfo); i++)
            {
                if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
                {
                    format(string, sizeof(string), "SEmpresa: %d (Empresa sem interior)", i);
                    SendClientMessage(playerid, COLOR_GRAD2, string);
                    if(proplev > 0)
                    {
                        if(strcmp(x_Emprego,"level",true) == 0)
                        {
                            SBizzInfo[i][sbLevel] = proplev;
                        }
                        else if(strcmp(x_Emprego,"preco",true) == 0)
                        {
                            SBizzInfo[i][sbBuyPrice] = proplev;
                        }
                        else if(strcmp(x_Emprego,"fundos",true) == 0)
                        {
                            SBizzInfo[i][sbTill] = proplev;
                        }
                        else if(strcmp(x_Emprego,"chave",true) == 0)
                        {
                            SBizzInfo[i][sbLocked] =  proplev;
                        }
                        else if(strcmp(x_Emprego,"entrada",true) == 0)
                        {
                            SBizzInfo[i][sbEntranceCost] = proplev;
                        }
                    }
                }
            }
            format(string, sizeof(string), "Você ajustou: %s", x_Emprego);
            SendClientMessage(playerid, COLOR_WHITE, string);
            a3d();
            SalvarTudo();
        }
        return 1;
    }
    if(strcmp(cmd, "/entrar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            for(new i = 0; i < sizeof(HouseInfo); i++)
            {
                if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
                {
                    if(PlayerInfo[playerid][pPHousekey] == i || HouseInfo[i][hLock] == 0)
                    {
                        SetPlayerInterior(playerid,HouseInfo[i][hInt]);
                        SetPlayerVirtualWorld(playerid,HouseInfo[i][hWorld]);
                        SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
                        GameTextForPlayer(playerid, "~w~Bem vindo em casa", 5000, 1);
                        PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
                        PlayerInfo[playerid][pLocal] = i;
                        HouseEntered[playerid] = i;
                    }
                    else
                    {
                        GameTextForPlayer(playerid, "~r~Fechado", 5000, 1);
                    }
                }
            }
            for(new i = 0; i < sizeof(BizzInfo); i++)
            {
                if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
                {
                    if(PlayerInfo[playerid][pPbiskey] == i || GetPlayerMoneyEx(playerid) >= BizzInfo[i][bEntranceCost])
                    {
                        if(PlayerInfo[playerid][pPbiskey] != i)
                        {
                            if(BizzInfo[i][bLocked] == 1)
                            {
                                GameTextForPlayer(playerid, "~r~Fechado", 5000, 1);
                                return 1;
                            }
                            GivePlayerMoney(playerid,-BizzInfo[i][bEntranceCost]);
                            format(string, sizeof(string), "~r~-R$%d~n~~w~Digite /sair~n~Para poder sair!", BizzInfo[i][bEntranceCost]);
                            BizzInfo[i][bTill] += BizzInfo[i][bEntranceCost];
                            ExtortionBiz(i, BizzInfo[i][bEntranceCost]);
                            GastarProdutos(1, i, 2, playerid);
                            //SalvarTudo();
                            GameTextForPlayer(playerid, string, 5000, 3);
                        }
                        SetPlayerInterior(playerid,BizzInfo[i][bInterior]);
                        SetPlayerPos(playerid,BizzInfo[i][bExitX],BizzInfo[i][bExitY],BizzInfo[i][bExitZ]);
                        PlayerInfo[playerid][pInt] = BizzInfo[i][bInterior];
                        PlayerInfo[playerid][pLocal] = i+99;
                        new dood[MAX_PLAYER_NAME];
                        GetPlayerName(playerid, dood, sizeof(dood));
                        format(string, sizeof(string), "%s pagou R$%d para entrar na empresa %d", dood, BizzInfo[i][bEntranceCost], i);
                        printf("%s", string);
                        //PayLog(string);
                        if( i == 3 ){
                            if( PlayerInBank[ playerid ] == false ){
                                PlayerInBank[ playerid ] = true;
                                GameTextForPlayer( playerid, "~w~Bem vindo ao banco de ~g~Los Santos~n~~w~Para acessar o painel use: ~r~/banco", 5000, 3 );
                            }
                        }
                    }
                    else
                    {
                        GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro suficiente", 5000, 1);
                    }
                }
            }
            for(new i = 0; i < sizeof(SBizzInfo); i++)
            {
                if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]) &&  i != 24)
                {
                    if(PlayerInfo[playerid][pPbiskey] == i || GetPlayerMoneyEx(playerid) >= SBizzInfo[i][sbEntranceCost])
                    {
                        if(PlayerInfo[playerid][pPbiskey] != i)
                        {
                            if(SBizzInfo[i][sbLocked] == 1)
                            {
                                GameTextForPlayer(playerid, "~r~Fechado", 5000, 1);
                                return 1;
                            }
                            if(i == 10)
                            {
                                PaintballPlayers ++;
                                PlayerPaintballing[playerid] = 1;
                                SetPlayerInterior(playerid,10);
                                new rand = random(sizeof(PaintballSpawns));
                                SetPlayerPos(playerid, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
                                TogglePlayerControllable(playerid, 0);
                            }
                            else
                            {
                                return 1;
                            }
                            GivePlayerMoney(playerid,-SBizzInfo[i][sbEntranceCost]);
                            gSpentCash[playerid] = GetPlayerMoneyEx(playerid);
                            SBizzInfo[i][sbTill] += SBizzInfo[i][sbEntranceCost];
                            ExtortionSBiz(i, SBizzInfo[i][sbEntranceCost]);
                            new dood[MAX_PLAYER_NAME];
                            GetPlayerName(playerid, dood, sizeof(dood));
                            format(string, sizeof(string), "%s payed R$%d to enter sbiz %d", dood, SBizzInfo[i][sbEntranceCost], i);
                            printf("%s", string);
                            //PayLog(string);
                        }
                    }
                    else
                    {
                        GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro suficiente", 5000, 1);
                    }
                }
            }
            if (PlayerToPoint(3.0, playerid,1484.3788,-1777.2107,15.5364))
            {
            //Prefeitura
                SetPlayerInterior(playerid,3);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid,387.7978,173.8582,1008.3828);
                GameTextForPlayer(playerid, "~w~Bem vindo a ~n~~b~Prefeitura !", 5000, 1);
                PlayerInfo[playerid][pInt] = 3;
                pref[ playerid ] = true;
            }
            else if (PlayerToPoint(3, playerid,1570.3828,-1333.8882,16.4844))
            {
                SetPlayerPos(playerid, 1545.0068,-1366.5094,327.2868);
            }
            else if(PlayerToPoint(3.0, playerid,1554.9537,-1675.6584,16.1953))
            {//Departamento de Policia Los Santos
                GameTextForPlayer(playerid, "~w~Departamento de Policia", 5000, 1);
                SetPlayerInterior(playerid, 6);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid,246.5878,62.7877,1003.6406);
                PlayerInfo[playerid][pInt] = 6;
            }
            else if(PlayerToPoint(3.0, playerid,1384.38,-1671.76,13.49))
            {//BPM
                GameTextForPlayer(playerid, "~w~DP BPM ", 5000, 1);
                SetPlayerInterior(playerid, 6);
                SetPlayerVirtualWorld(playerid, 1);
                SetPlayerPos(playerid,246.5878,62.7877,1003.6406);
                PlayerInfo[playerid][pInt] = 6;
            }
            else if(PlayerToPoint(3.0, playerid,914.33,-1037.52,31.90))
            {//BOPE
                GameTextForPlayer(playerid, "~w~DP BOPE", 5000, 1);
                SetPlayerInterior(playerid, 3);
                SetPlayerVirtualWorld(playerid, 2);
                SetPlayerPos(playerid,238.65,138.70,1003.02);
                PlayerInfo[playerid][pInt] = 6;
            }
            else if(PlayerToPoint(3.0, playerid,2244.3423,-1665.5542,15.4766))
            {//Entrada Binco
                GameTextForPlayer(playerid, "~w~Binco", 5000, 1);
                SetPlayerVirtualWorld(playerid, 0);
                SendClientMessage(playerid, COLOR_WHITE, "DICA: Use /meuskin para mudar sua roupa");
                SetPlayerInterior(playerid, 15);
                SetPlayerPos(playerid,207.7336,-108.6231,1005.1328);
                PlayerInfo[playerid][pInt] = 15;
            }
            else if (PlayerToPoint(3.0, playerid,461.3484,-1500.9084,31.0592))
            {//Entrada ZIP
                SetPlayerPos(playerid, 161.3350,-95.0194,1001.8047);
                GameTextForPlayer(playerid, "~w~Zip",5000,1);
                SetPlayerVirtualWorld(playerid, 0);
                SendClientMessage(playerid, COLOR_WHITE, "DICA: Use /meuskin para mudar sua roupa");
                SetPlayerInterior(playerid,18);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 18;
            }
            else if(PlayerToPoint(3.0, playerid,1836.4064,-1682.4403,13.3493))
            {//Alhambra Entrance
                GameTextForPlayer(playerid, "~w~Alhambra", 5000, 1);
                SetPlayerInterior(playerid, 17);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid,493.3891,-22.7212,1000.6797);
                PlayerInfo[playerid][pInt] = 17;
            }
            else if(PlayerToPoint(3.0, playerid,2140.9382,-1801.9813,16.1475))
            {//ENTRADA HQ CV
                GameTextForPlayer(playerid, "~w~HQ Comando Vermelho", 5000, 1);
                SetPlayerInterior(playerid, 6);
                SetPlayerPos(playerid,2308.5269,-1211.2737,1049.0234);
                PlayerInfo[playerid][pInt] = 6;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if(PlayerToPoint(3.0, playerid,2421.4998,-1219.2438,25.5617))
            {//Pigpen entrada
                GameTextForPlayer(playerid, "~w~The Pig Pen", 5000, 1);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerInterior(playerid, 2);
                SetPlayerPos(playerid,1205.0803,-9.9519,1000.9219);
                PlayerInfo[playerid][pInt] = 2;
            }
            else if(PlayerToPoint(3.0, playerid,2229.9011,-1721.2582,13.5613))
            {//Entrada Ginasio de Lutas
                GameTextForPlayer(playerid, "~w~Ginasio de Lutas", 5000, 1);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerInterior(playerid, 5);
                SetPlayerPos(playerid,771.9399,-2.2574,1000.7292);
                PlayerInfo[playerid][pInt] = 5;
            }
            else if (PlayerToPoint(3.0, playerid,1631.8547,-1172.5637,24.0843))
            {
            //Loterica entrada
                SetPlayerPos(playerid, 832.6270,7.2666,1004.1797);
                GameTextForPlayer(playerid, "~w~Loterica BPG",5000,1);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerInterior(playerid,3);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 3;
            }
            else if (PlayerToPoint(3.0, playerid,3034.8000,-318.1000,8.6000))
            {
            //DesTroyeR entrada
                SetPlayerPos(playerid, 934.6701,7.8506,1000.9858);
                GameTextForPlayer(playerid, "~w~HQ DesTroyeR BPG",5000,1);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerInterior(playerid,3);
                PlayerInfo[playerid][pInt] = 3;
            }
            else if (PlayerToPoint(3.0, playerid,934.6701,7.8506,1000.9858))
            {
            //Snake entrada
                SetPlayerPos(playerid, 3034.8000,-318.1000,8.6000);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerInterior(playerid,0);
                PlayerInfo[playerid][pInt] = 0;
            }
            else if (PlayerToPoint(3.0, playerid,280.7871,-2167.1914,2.7978))
            {
            //Snake entrada
                SetPlayerPos(playerid, 774.0968,-49.8827,1000.5859);
                GameTextForPlayer(playerid, "~w~HQ Justiceiros BPG",5000,1);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerInterior(playerid,6);
                PlayerInfo[playerid][pInt] = 6;
            }
            else if (PlayerToPoint(3.0, playerid,774.0968,-49.8827,1000.58598))
            {
            //Snake entrada
                SetPlayerPos(playerid, 280.7871,-2167.1914,2.7978);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerInterior(playerid,0);
                PlayerInfo[playerid][pInt] = 0;
            }
            else if (PlayerToPoint(3.0, playerid,1200.4497,-918.7695,43.1105))
            {
            //Entrada Burger Shot 1
                SetPlayerPos(playerid, 366.0324,-72.6400,1001.5078);
                GameTextForPlayer(playerid, "~w~Vinewood Burger Shot",5000,1);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerInterior(playerid,10);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 10;
                InAFoodPlace[playerid] = 2;
                SetPlayerCheckpoint(playerid, 376.8571,-67.6620,1001.5151, 1.0);
            }
            else if (PlayerToPoint(3.0, playerid,927.6217,-1353.0105,13.3438))
            {
            //Entrada Cluckin Bell
                SetPlayerPos(playerid, 365.7793,-9.1699,1001.8516);
                GameTextForPlayer(playerid, "~w~Cluckin Bell", 5000, 1);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerInterior(playerid, 9);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 9;
                InAFoodPlace[playerid] = 1;
                SetPlayerCheckpoint(playerid, 368.9714,-6.2486,1001.8516, 1.0);
            }
            else if (PlayerToPoint(3.0, playerid,2105.4858,-1806.4725,13.5547))
            {
            //Entrada Well Stacked Pizza
                SetPlayerPos(playerid, 372.4117,-130.4577,1001.4922);
                GameTextForPlayer(playerid, "~w~Well Stacked Pizza", 5000, 1);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerInterior(playerid, 5);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 5;
                InAFoodPlace[playerid] = 3;
                SetPlayerCheckpoint(playerid, 375.6895,-118.9683,1001.4995, 1.5);
            }
//===================================[HOTEL BPG]=======================================//
            else if (PlayerToPoint(3.0, playerid,2233.2659,-1159.8256,25.8906))
            {
                //Hotel Entrada
                SetPlayerPos(playerid, 2214.7134,-1150.4315,1025.7969);
                GameTextForPlayer(playerid, "~w~Hotel Brasil Play Gamer",5000,1);
                SetPlayerInterior(playerid,15);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 15;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(3.0, playerid,2214.7134,-1150.4315,1025.7969))
            {
                //Hotel Entrada
                SetPlayerPos(playerid, 2233.2659,-1159.8256,25.8906);
                SetPlayerInterior(playerid,0);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(3.0, playerid,2212.6235,-1150.4385,1025.7969))
            {
                //Hotel Entrada(dentro da porta)
                SetPlayerPos(playerid, 2214.7134,-1150.4315,1025.7969);
                GameTextForPlayer(playerid, "~w~Hotel Brasil Play Gamer",5000,1);
                SetPlayerInterior(playerid,15);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 15;
                SetPlayerVirtualWorld(playerid, 0);
            }
//===================================[FIM HOTEL BPG]=======================================//

//===================================[24/7]=======================================//
            else if(PlayerToPoint(3.0, playerid,1833.6124,-1842.4968,13.5781))
            {//24/7 estação entrada
                GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerInterior(playerid, 18);
                SetPlayerPos(playerid,-30.9467,-89.6096,1003.5469);
                PlayerInfo[playerid][pInt] = 18;
                storeexit[playerid] = 1;
            }
            else if(PlayerToPoint(3.0, playerid,1000.5861,-919.8832,42.3281))
            {//24/7 gas station entrance
                GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
                SetPlayerInterior(playerid, 4);
                SetPlayerPos(playerid,-28.2619,-26.2015,1003.5573);
                PlayerInfo[playerid][pInt] = 4;
            }
            else if(PlayerToPoint(3.0, playerid,1928.6006,-1776.4480,13.5469))
            {//24/7 lado hq pcc
                GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
                SetPlayerInterior(playerid, 16);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid,-25.1326,-139.0670,1003.5469);
                PlayerInfo[playerid][pInt] = 16;
            }
            else if (PlayerToPoint(3.0, playerid, 1315.5110,-898.9860,39.5781))
            {//24/7 perto madd dogg
                GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerInterior(playerid, 18);
                SetPlayerPos(playerid,-30.9467,-89.6096,1003.5469);
                PlayerInfo[playerid][pInt] = 18;
                storeexit[playerid] = 2;
            }
            else if (PlayerToPoint(3.0, playerid, 1352.3269,-1759.2491,13.5078))
            {//24/7 praça dp
                GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerInterior(playerid, 18);
                SetPlayerPos(playerid,-30.9467,-89.6096,1003.5469);
                PlayerInfo[playerid][pInt] = 18;
                storeexit[playerid] = 3;
            }
//===================================[24/7]=======================================//

//===================================[HQ ORGANIZAÇÕES]=======================================//
            else if (PlayerToPoint(3.0, playerid,2808.1106,-1189.6528,25.3436))
            {//HQ VAGOS
                SetPlayerPos(playerid, 2350.6013,-1180.7566,1027.9766);
                GameTextForPlayer(playerid, "~w~HQ Los Vagos",5000,1);
                SetPlayerInterior(playerid,5);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 5;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(3.0, playerid,2634.0874,1824.3887,11.0234))
            {//Máfia Japonesa Entrada
                SetPlayerPos(playerid, -2169.7590,645.5231,1057.5938);
                GameTextForPlayer(playerid, "~w~HQ Mafia Japonesa",5000,1);
                SetPlayerInterior(playerid,1);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 1;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(3.0, playerid,1614.2990,1679.7318,11.2184))
            {//Máfia Russa Entrada
                SetPlayerPos(playerid, -2636.8501,1405.0787,906.4609);
                GameTextForPlayer(playerid, "~w~HQ Mafia Russa",5000,1);
                SetPlayerInterior(playerid,3);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 3;
                SetPlayerVirtualWorld(playerid, 0);
            }
             if(PlayerToPoint(3.0, playerid,913.68,-1004.56,37.98))
            {//Entrada HQ BOPE
                GameTextForPlayer(playerid, "~w~DP B.O.P.E", 5000, 1);
                SetPlayerInterior(playerid, 3);
                SetPlayerPos(playerid,238.68,138.68,1003.02);
                PlayerInfo[playerid][pInt] = 3;
                SetPlayerVirtualWorld(playerid, 6);
            }
            if(PlayerToPoint(3.0, playerid,913.2850,-1037.3043,31.8984))
            {//Entrada HQ BOPE  Elevador
                GameTextForPlayer(playerid, "~w~DP B.O.P.E", 5000, 1);
                SetPlayerInterior(playerid, 3);
                SetPlayerPos(playerid,288.8585,166.9211,1007.1719);
                PlayerInfo[playerid][pInt] = 3;
                SetPlayerVirtualWorld(playerid, 6);
            }
            if(PlayerToPoint(3.0, playerid,-2455.0996,503.7621,30.0775))
            {//Entrada HQ BOPE
                GameTextForPlayer(playerid, "~w~DP Policia Civil", 5000, 1);
                SetPlayerInterior(playerid, 3);
                SetPlayerPos(playerid,238.68,138.68,1003.02);
                PlayerInfo[playerid][pInt] = 3;
                SetPlayerVirtualWorld(playerid, 8);
            }
            else if (PlayerToPoint(3.0, playerid,918.8992,-1252.3286,16.2109))
            {//PC Entrada
                SetPlayerPos(playerid, 238.68,138.68,1003.02);
                GameTextForPlayer(playerid, "~w~DP Polícia Rodoviária Federal",5000,1);
                SetPlayerInterior(playerid,3);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 3;
                SetPlayerVirtualWorld(playerid, 7);
            }
            if(PlayerToPoint(3.0, playerid,1883.72,1200.16,18.17))
            {//Presos BOPE
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid,1874.39,1222.66,18.17);
                PlayerInfo[playerid][pInt] = 10;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(3.0, playerid,327.8898,-1511.8446,36.0325))
            {//ROTA Entrada
                SetPlayerPos(playerid, 238.68,138.68,1003.02);
                GameTextForPlayer(playerid, "~w~DP Policia ROTA",5000,1);
                SetPlayerInterior(playerid,3);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 3;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if(PlayerToPoint(3.0, playerid,1154.9366,-1180.8309,32.8187))
            {//ENTRADA HQ BALLAS
                GameTextForPlayer(playerid, "~w~HQ Ballas", 5000, 1);
                SetPlayerInterior(playerid, 10);
                SetPlayerPos(playerid,2268.3950,-1210.5328,1047.7491);
                PlayerInfo[playerid][pInt] = 10;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if(PlayerToPoint(1, playerid,943.0517,-1743.3169,13.5546))
            {//entrada Reporters HQ

                SetPlayerPos(playerid, 238.6220,114.9466,1010.2188);
                GameTextForPlayer(playerid, "~g~Secretaria de seguranca",5000,1);
                SetPlayerInterior(playerid,10);
                SetPlayerVirtualWorld(playerid,1);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 10;
            }
            else if (PlayerToPoint(3.0, playerid,2495.3481,-1691.1355,14.7656))
            {//HQ Groove Street Entrada
                SetPlayerPos(playerid,2496.0061,-1693.5201,1014.7422);
                GameTextForPlayer(playerid, "~g~Groove Street HQ",5000,1);
                SetPlayerInterior(playerid,3);
                SetPlayerFacingAngle(playerid, 181);
                PlayerInfo[playerid][pInt] = 3;
                SetPlayerVirtualWorld(playerid, 0);
            }
                        else if (PlayerToPoint(3.0, playerid,3046.1663,-1956.1207,11.1547))
            {
            //Snake entrada
                SetPlayerPos(playerid, 744.4716,1442.9857,1102.7031);
                GameTextForPlayer(playerid, "~w~HQ Snake BPG",5000,1);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerInterior(playerid,6);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 6;
            }
            else if (PlayerToPoint(3.0, playerid,744.4716,1442.9857,1102.7031))
            {
            //Snake saida
                SetPlayerPos(playerid, 3046.1663,-1956.1207,11.4547);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerInterior(playerid,0);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 0;
            }
            /*if(PlayerToPoint(3.0, playerid,1097.9017,-326.4841,73.9922))
            {//ENTRADA HQ HITMANS
                GameTextForPlayer(playerid, "~w~HQ Hitmans", 5000, 1);
                SetPlayerInterior(playerid, 6);
                SetPlayerPos(playerid,345.0741,305.5558,999.1484);
                PlayerInfo[playerid][pInt] = 6;
                SetPlayerVirtualWorld(playerid, 0);
            }*/
//=================================[FIM HQ ORGANIZAÇÕES]=====================================//
        }
        return 1;
    }
    if(strcmp(cmd, "/sair", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            for(new i = 0; i <  sizeof(HouseInfo); i++)
            {
                if (PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
                {
                    if(HouseEntered[playerid] == i)
                    {
                        SetPlayerInterior(playerid,0);
                        SetPlayerVirtualWorld(playerid,0);
                        SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
                        PlayerInfo[playerid][pInt] = 0;
                        SetPlayerVirtualWorld(playerid, 0);
                        PlayerInfo[playerid][pLocal] = 9999;
                        HouseEntered[playerid] = 9999;
                        return 1;
                    }
                }
            }
            for(new i = 0; i <  sizeof(BizzInfo); i++)
            {
                if (PlayerToPoint(3, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
                {
                    SetPlayerInterior(playerid,0);
                    PlayerInfo[playerid][pInt] = 0;
                    SetPlayerVirtualWorld(playerid, 0);
     SetPlayerPos(playerid,BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ]);
                    PlayerInfo[playerid][pLocal] = 9999;
                    if( PlayerInBank[ playerid ] == true )
                        PlayerInBank[ playerid ] = false;
                    return 1;
                }
            }
            if(GetPlayerVehicleID(playerid) >= 1)
            {
                TogglePlayerControllable(playerid, 1);
                RemovePlayerFromVehicleEx(playerid);
            }
            else if (PlayerToPoint(3, playerid,1548.8167,-1366.2247,326.2109))
            {
                SetPlayerPos(playerid, 1572.1115,-1332.5288,16.4844);
            }
            else if (PlayerToPoint(3.0, playerid,387.7978,173.8582,1008.3828))
            {//Saida Prefeitura
                if(GetPlayerVirtualWorld(playerid) == 0)
                {
                    SetPlayerInterior(playerid,0);
                    SetPlayerPos(playerid,1484.3788,-1777.2107,16.3364);
                    TogglePlayerControllable(playerid, 1);
                    RemovePlayerFromVehicleEx(playerid);
                    PlayerInfo[playerid][pInt] = 0;
                    SetPlayerVirtualWorld(playerid, 0);
                    PlayerInfo[playerid][pLocal] = 9999;
                    pref[ playerid ] = false;
                }
            }
            if(PlayerToPoint(3.0, playerid,246.5878,62.7877,1003.6406))
            {//Saida Departamento de Policia Los Santos
                if(GetPlayerVirtualWorld(playerid) == 0)//PM Los Santos
                {
                    SetPlayerInterior(playerid, 0);
                    SetPlayerPos(playerid,1552.4890,-1675.6757,16.1953);
                    PlayerInfo[playerid][pInt] = 0;
                    PlayerInfo[playerid][pLocal] = 9999;
                    SetPlayerVirtualWorld(playerid, 0);
                }
             if(GetPlayerVirtualWorld(playerid) == 1)//BPM
             {
                    SetPlayerInterior(playerid, 0);
                    SetPlayerPos(playerid,1384.38,-1671.76,13.49);
                    PlayerInfo[playerid][pInt] = 0;
                    PlayerInfo[playerid][pLocal] = 9999;
                    SetPlayerVirtualWorld(playerid, 0);
                }
            }
            else if(PlayerToPoint(3.0, playerid,207.7336,-108.6231,1005.1328))
            {//Saida Binco
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid,2244.3423,-1665.5542,15.4766);
                PlayerInfo[playerid][pInt] = 0;
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if (PlayerToPoint(3.0, playerid,161.3350,-95.0194,1001.8047))
            {//Saida ZIP
                SetPlayerPos(playerid, 461.3484,-1500.9084,31.0592);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerInterior(playerid,0);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 0;
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if(PlayerToPoint(3.0, playerid,493.3891,-22.7212,1000.6797))
            {//Saida Alhambra
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid,1836.4064,-1682.4403,13.3493);
                PlayerInfo[playerid][pInt] = 0;
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if(PlayerToPoint(3.0, playerid,1205.0803,-9.9519,1000.9219))
            {//saida pigpen
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid,2421.4998,-1219.2438,25.5617);
                PlayerInfo[playerid][pInt] = 0;
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if(PlayerToPoint(3.0, playerid,771.9399,-2.2574,1000.7292))
            {//Saida Ginasio de Lutas
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid,2229.9011,-1721.2582,13.5613);
                PlayerInfo[playerid][pInt] = 0;
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if(PlayerToPoint(1, playerid,238.6220,114.9466,1010.2188))
            {

                    SetPlayerPos(playerid, 943.0517,-1743.3169,13.5546);
                    GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
                    SetPlayerInterior(playerid,0);
                    SetPlayerVirtualWorld(playerid,0);
                    SetPlayerFacingAngle(playerid, 0);
                    PlayerInfo[playerid][pInt] = 0;

            }
            else if (PlayerToPoint(3.0, playerid,832.6270,7.2666,1004.1797))
            {
            //Loterica saida
                SetPlayerPos(playerid, 1631.8547,-1172.5637,24.084);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerInterior(playerid,0);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 0;
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if (PlayerToPoint(3.0, playerid,365.7793,-9.1699,1001.8516))
            {
            //Saida Cluckin Bell
                SetPlayerPos(playerid, 927.6217,-1353.0105,13.3438);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerInterior(playerid, 0);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 0;
                InAFoodPlace[playerid] = 0;
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if (PlayerToPoint(3.0, playerid,372.4117,-130.4577,1001.4922))
            {
            //Saida Well Stacked Pizza
                SetPlayerPos(playerid, 2105.4858,-1806.4725,13.5547);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerInterior(playerid,0);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 0;
                InAFoodPlace[playerid] = 0;
                PlayerInfo[playerid][pLocal] = 9999;
            }
//==============================[SAIDAS 24/7]==============================//
            else if(PlayerToPoint(3.0, playerid,-30.9467,-89.6096,1003.5469))
            {
                if (storeexit[playerid] == 1)
                {//24/7 estação saida
                    SetPlayerVirtualWorld(playerid, 0);
                    SetPlayerInterior(playerid, 0);
                    SetPlayerPos(playerid,1833.6124,-1842.4968,13.5781);
                    PlayerInfo[playerid][pInt] = 0;
                    PlayerInfo[playerid][pLocal] = 9999;
                    storeexit[playerid] = 0;
                }
                else if(storeexit[playerid] == 2)
                {//perto madd dogg
                    SetPlayerVirtualWorld(playerid, 0);
                    SetPlayerInterior(playerid, 0);
                    SetPlayerPos(playerid,1315.5110,-898.9860,39.5781);
                    PlayerInfo[playerid][pInt] = 0;
                    PlayerInfo[playerid][pLocal] = 9999;
                    storeexit[playerid] = 0;
                }
                else if(storeexit[playerid] == 3)
                {//praça dp
                    SetPlayerVirtualWorld(playerid, 0);
                    SetPlayerInterior(playerid, 0);
                    SetPlayerPos(playerid,1352.3269,-1759.2491,13.5078);
                    PlayerInfo[playerid][pInt] = 0;
                    PlayerInfo[playerid][pLocal] = 9999;
                    storeexit[playerid] = 0;
                }
            }
            else if(PlayerToPoint(3.0, playerid,-28.2619,-26.2015,1003.5573))
            {//24/7 gas station saida
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid,1000.5861,-919.8832,42.3281);
                PlayerInfo[playerid][pInt] = 0;
                PlayerInfo[playerid][pLocal] = 9999;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if(PlayerToPoint(3.0, playerid,-25.1326,-139.0670,1003.5469))
            {//24/7 lado hq pcc saida
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerPos(playerid,1928.6006,-1776.4480,13.5469);
                PlayerInfo[playerid][pInt] = 0;
                PlayerInfo[playerid][pLocal] = 9999;
            }
//=============================[FIM SAIDAS 24/7]=============================//

//=============================[HOTEL BPG]=============================//
            else if (PlayerToPoint(3.0, playerid,2228.4087,-1150.5686,1025.7969))
            {
                //Hotel Saida
                SetPlayerPos(playerid, 2231.7896,-1159.8646,25.8906);
                SetPlayerInterior(playerid,0);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 0;
                PlayerInfo[playerid][pLocal] = 9999;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(3.0, playerid,2190.1182,-1179.7944,1033.7896))
            {
                //Hotel Saida 2
                SetPlayerPos(playerid, 2231.7896,-1159.8646,25.8906);
                SetPlayerInterior(playerid,0);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 0;
                PlayerInfo[playerid][pLocal] = 9999;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(3.0, playerid,2238.9316,-1192.4878,1033.7969))
            {
                //Hotel Saida 3
                SetPlayerPos(playerid, 2231.7896,-1159.8646,25.8906);
                SetPlayerInterior(playerid,0);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 0;
                PlayerInfo[playerid][pLocal] = 9999;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(3.0, playerid,2193.3254,-1138.6238,1029.7969))
            {
                //Hotel Saida 4
                SetPlayerPos(playerid, 2231.7896,-1159.8646,25.8906);
                SetPlayerInterior(playerid,0);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 0;
                PlayerInfo[playerid][pLocal] = 9999;
                SetPlayerVirtualWorld(playerid, 0);
            }
//=============================[FIM HOTEL BPG]=============================//

//==========================[SAIDAS HQ ORGANIZAÇÕES]==========================//
            else if (PlayerToPoint(3.0, playerid,2350.6013,-1180.7566,1027.9766))
            {//SAIDA HQ VAGOS
                SetPlayerPos(playerid, 2808.1106,-1189.6528,25.3436);
                SetPlayerInterior(playerid,0);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 0;
                PlayerInfo[playerid][pLocal] = 9999;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(3.0, playerid,-2169.7590,645.5231,1057.5938))
            {//SAIDA HQ Máfia Japonesa
                SetPlayerPos(playerid, 2634.0874,1824.3887,11.0234);
                SetPlayerInterior(playerid,0);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 0;
                PlayerInfo[playerid][pLocal] = 9999;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(3.0, playerid,-2636.8501,1405.0787,906.4609))
            {//SAIDA Máfia Russa
                SetPlayerPos(playerid, 1614.2990,1679.7318,11.2184);
                SetPlayerInterior(playerid,0);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 0;
                PlayerInfo[playerid][pLocal] = 9999;
                SetPlayerVirtualWorld(playerid, 0);
            }
            if(PlayerToPoint(3.0, playerid,238.68,138.68,1003.02))
            {//Saida HQ ROTA
                SetPlayerPosVirtualWord(playerid);
            }
            else if(PlayerToPoint(3.0,playerid,1866.00,1184.52,18.17))
            {//Saida BOPE
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid,914.33,-1037.52,31.90);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if(PlayerToPoint(3.0,playerid,288.8585,166.9211,1007.1719) && GetPlayerVirtualWorld(playerid) == 6)
            {//Saida BOPE
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid,913.2850,-1037.3043,31.8984);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if(PlayerToPoint(3.0,playerid,288.8585,166.9211,1007.1719) && GetPlayerVirtualWorld(playerid) == 3)
            {//Saida BOPE
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid,278.4538,-1518.2914,24.9289);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if(PlayerToPoint(3.0,playerid,1874.39,1222.66,18.17))
            {//Presos
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid,1883.72,1200.16,18.17);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if (PlayerToPoint(3.0, playerid,322.2557,302.6057,999.1454))
            {
            //Saida PFII
                SetPlayerPos(playerid, 930.7635,-1040.8397,31.6016);
                SetPlayerInterior(playerid,0);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if(PlayerToPoint(3.0, playerid,2268.3950,-1210.5328,1047.7491))
            {//SAIDA HQ BALLAS
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid,1154.9366,-1180.8309,32.8187);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if(PlayerToPoint(3.0, playerid,732.61,-1344.33,13.52))
            {//ENTRADA HQ rep
                GameTextForPlayer(playerid, "~w~San News", 5000, 1);
                SetPlayerInterior(playerid, 3);
                SetPlayerPos(playerid,367.0567,162.4148,1019.9843);
                PlayerInfo[playerid][pInt] = 3;
                SetPlayerVirtualWorld(playerid, 1);
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if(PlayerToPoint(3.0, playerid,367.0567,162.4148,1019.9843))
            {//SAIDA HQ rep
                if( GetPlayerVirtualWorld( playerid ) == 1 ){
                    SetPlayerInterior(playerid, 0);
                    SetPlayerPos(playerid,732.61,-1344.33,13.52);
                    PlayerInfo[playerid][pInt] = 0;
                    SetPlayerVirtualWorld(playerid, 0);
                    PlayerInfo[playerid][pLocal] = 9999;
                }
            }
            else if(PlayerToPoint(3.0, playerid,2481.42,-1536.85,24.12))
            {//ENTRADA HQ Storm
                GameTextForPlayer(playerid, "~w~HQ Storm", 5000, 1);
                SetPlayerInterior(playerid, 15);
                SetPlayerPos(playerid,-1424.1304,928.8401,1036.3972);
                PlayerInfo[playerid][pInt] = 15;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if(PlayerToPoint(3.0, playerid,-1424.1304,928.8401,1036.3972))
            {//SAIDA HQ FD
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid,2481.42,-1536.85,24.12);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if(PlayerToPoint(3.0, playerid,1228.2998,511.7998,19.6000))
            {//ENTRADA HQ butres
                GameTextForPlayer(playerid, "~w~HQ Snake", 5000, 1);
                SetPlayerInterior(playerid, 1);
                SetPlayerPos(playerid,203.8847,-50.0970,1001.8047);
                PlayerInfo[playerid][pInt] = 1;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if(PlayerToPoint(3.0, playerid,203.8847,-50.0970,1001.8047))
            {//SAIDA HQ butres
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid,1228.2998,511.7998,19.6000);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if(PlayerToPoint(3.0, playerid,2025.1075,-1402.5234,17.2085))//Yiakin FEZ!!
            {//ENTRADA hosp
                GameTextForPlayer(playerid, "~w~Hospital BPG", 5000, 1);
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid,1715.4816,1169.9344,34.8259);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if(PlayerToPoint(4.0, playerid,1715.4816,1169.9344,34.8259))//Yiakin FEZ!!
            {//SAIDA hosp
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid,2025.1075,-1402.5234,17.2085);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if(PlayerToPoint(3.0, playerid,681.621521,-474.528533,16.185522))
            {//ENTRADA HQ Hells Angels
                GameTextForPlayer(playerid, "~w~HQ Hells Angels", 5000, 1);
                SetPlayerInterior(playerid, 11);
                SetPlayerPos(playerid,501.7642,-68.4213,998.7578);
                PlayerInfo[playerid][pInt] = 11;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if(PlayerToPoint(3.0, playerid,501.7642,-68.4213,998.7578))
            {//SAIDA HQ Hells Angels
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid,681.621521,-474.528533,16.185522);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if(PlayerToPoint(3.0, playerid,23.8872,-2646.5869,40.4640))
            {//ENTRADA HQ Mongols
                GameTextForPlayer(playerid, "~w~HQ Mongols", 5000, 1);
                SetPlayerInterior(playerid, 1);
                SetPlayerPos(playerid,681.4992,-447.4459,-24.6052);
                PlayerInfo[playerid][pInt] = 1;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if(PlayerToPoint(3.0, playerid,681.4992,-447.4459,-24.6052))
            {//SAIDA HQ Mongols
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid,23.8872,-2646.5869,40.4640);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if(PlayerToPoint(3.0, playerid,-1566.5295,-2730.2783,48.7435))
            {//ENTRADA HQ sons
                GameTextForPlayer(playerid, "~w~Sons Of Anarchy", 5000, 1);
                SetPlayerInterior(playerid, 18);
                SetPlayerPos(playerid,-228.8804,1401.2633,27.7656);
                PlayerInfo[playerid][pInt] = 18;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if(PlayerToPoint(3.0, playerid,-228.8804,1401.2633,27.7656))
            {//SAIDA HQ sons
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid,-1566.5295,-2730.2783,48.7435);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if(PlayerToPoint(3.0, playerid,-78.9350,-1169.6569,2.1504))
            {//ENTRADA Posto Abandonado
                GameTextForPlayer(playerid, "~w~Posto Abandonado", 5000, 1);
                SetPlayerInterior(playerid, 17);
                SetPlayerPos(playerid,377.0593,-192.5313,1000.6328);
                PlayerInfo[playerid][pInt] = 17;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if(PlayerToPoint(3.0, playerid,377.0593,-192.5313,1000.6328))
            {//SAIDA Posto Abandonado
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid,-78.9350,-1169.6569,2.1504);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if(PlayerToPoint(3.0, playerid,1673.9886,-2122.1403,14.6014))
            {//ENTRADA HQ AZTECAS
                GameTextForPlayer(playerid, "~w~HQ Los Aztecas", 5000, 1);
                SetPlayerInterior(playerid, 8);
                SetPlayerPos(playerid,2807.8213,-1173.5691,1025.5703);
                PlayerInfo[playerid][pInt] = 8;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if(PlayerToPoint(3.0, playerid,2807.8213,-1173.5691,1025.5703))
            {//SAIDA HQ AZTECAS
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid,1673.9886,-2122.1403,14.6014);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 9999;
            }
            else if (PlayerToPoint(3.0, playerid,2496.0061,-1693.5201,1014.7422))
            {
            //HQ Groove Street Saida
                SetPlayerPos(playerid,2495.3481,-1691.1355,14.7656);
                SetPlayerInterior(playerid,0);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 9999;
            }
            /*if(PlayerToPoint(3.0, playerid,345.0741,305.5558,999.1484))
            {//SAIDA HQ HITMANS
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid,1097.9017,-326.4841,73.9922);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 9999;
            }     */
            else if(PlayerToPoint(3.0, playerid,2308.5269,-1211.2737,1049.0234))
            {//SAIDA HQ CV
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid,2140.9382,-1801.9813,16.1475);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 9999;
            }
//=========================[FIM SAIDAS HQ ORGANIZAÇÕES]=========================//
        }
        return 1;
    }
    if(strcmp(cmd, "/home", true) == 0 || strcmp(cmd, "/mapacasa", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pPHousekey] != 9999)
            {
                SetPlayerCheckpoint(playerid,HouseInfo[PlayerInfo[playerid][pPHousekey]][hEntrancex], HouseInfo[PlayerInfo[playerid][pPHousekey]][hEntrancey], HouseInfo[PlayerInfo[playerid][pPHousekey]][hEntrancez], 4.0);
                GameTextForPlayer(playerid, "~r~Mapa da Casa Marcado!", 5000, 1);
                gPlayerCheckpointStatus[playerid] = CHECKPOINT_HOME;
            }
            else
            {
                GameTextForPlayer(playerid, "~w~Voce nao tem casa", 5000, 1);
            }
        }
        return 1;
    }
//----------------------------------[BIZZ]-----------------------------------------------
    if(strcmp(cmd, "/compraremp", true) == 0 || strcmp(cmd, "/comprarempresa", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new Float:oldposx, Float:oldposy, Float:oldposz;
            GetPlayerName(playerid, playername, sizeof(playername));
            GetPlayerPos(playerid, oldposx, oldposy, oldposz);
            if(PlayerInfo[playerid][pPbiskey] != 9999)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você ja tem uma empresa, Digite /venderemp para comprar outra.");
                return 1;
            }
            if(PlayerInfo[playerid][pVip] < 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é VIP!");
                return 1;
            }
            for(new b = 0; b < sizeof(SBizzInfo); b++)
            {
                if(PlayerToPoint(2.0, playerid, SBizzInfo[b][sbEntranceX], SBizzInfo[b][sbEntranceY], SBizzInfo[b][sbEntranceZ]) && SBizzInfo[b][sbOwned] == 0)
                {
                    if(PlayerInfo[playerid][pLevel] < SBizzInfo[b][sbLevel])
                    {
                        format(string, sizeof(string), "Você precisa ser nível %d para comprar essa empresa",SBizzInfo[b][sbLevel]);
                        SendClientMessage(playerid, COLOR_GRAD5, string);
                        return 1;
                    }
                    if(GetPlayerMoneyEx(playerid) > SBizzInfo[b][sbBuyPrice])
                    {
                        PlayerInfo[playerid][pPbiskey] = b+100;
                        SBizzInfo[b][sbOwned] = 1;
                        SBizzInfo[b][sbLocked] = 0;
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        strmid(SBizzInfo[b][sbOwner], sendername, 0, strlen(sendername), 255);
                        GivePlayerMoney(playerid,-SBizzInfo[b][sbBuyPrice]);
                        //PlayerPlayMusic(playerid);
                        SendClientMessage(playerid, COLOR_WHITE, "Parabens, Você comprou uma empresa.");
                        SendClientMessage(playerid, COLOR_WHITE, "Digite /ajudaemp para ver os comandos de sua empresa.");
                        a3d();
                        SalvarTudo();
                        SalvarPlayer(playerid);
                        return 1;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Você não tem grana suficiente");
                        return 1;
                    }
                }
            }
            for(new b = 0; b < sizeof(BizzInfo); b++)
            {
                if(PlayerToPoint(2.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bOwned] == 0)
                {
                    if(PlayerInfo[playerid][pLevel] < BizzInfo[b][bLevelNeeded])
                    {
                        format(string, sizeof(string), "Você precisa ser nível %d para comprar essa empresa",BizzInfo[b][bLevelNeeded]);
                        SendClientMessage(playerid, COLOR_GRAD5, string);
                        return 1;
                    }
                    if(GetPlayerMoneyEx(playerid) > BizzInfo[b][bBuyPrice])
                    {
                        PlayerInfo[playerid][pPbiskey] = b;
                        BizzInfo[b][bOwned] = 1;
                        BizzInfo[b][bLocked] = 0;
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        strmid(BizzInfo[b][bOwner], sendername, 0, strlen(sendername), 255);
                        GivePlayerMoney(playerid,-BizzInfo[b][bBuyPrice]);
                        //PlayerPlayMusic(playerid);
                        SetPlayerInterior(playerid,BizzInfo[b][bInterior]);
                        PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
                        SetPlayerPos(playerid,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
                        GameTextForPlayer(playerid, "~w~Bem Vindo~n~Voce pode sair da sua empresa digitando /sair", 5000, 3);
                        PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
                        PlayerInfo[playerid][pLocal] = b ;
                        SendClientMessage(playerid, COLOR_WHITE, "Parabens, Você comprou esta empresa.");
                        SendClientMessage(playerid, COLOR_WHITE, "Digite /ajudaemp para ver os comandos de sua empresa.");
                        a3d();
                        SalvarTudo();
                        return 1;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Você nao tem grana o suficiente");
                        return 1;
                    }
                }
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/venderemp", true) == 0 || strcmp(cmd, "/venderempresa", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, playername, sizeof(playername));
            if(PlayerInfo[playerid][pPbiskey] == 9999)
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não possui uma empresa.");
                return 1;
            }
            if(PlayerInfo[playerid][pMarried] > 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você é casado(a), não pode vender a empresa!");
                return 1;
            }
            if(PlayerInfo[playerid][pPbiskey] >= 100 && strcmp(playername, SBizzInfo[PlayerInfo[playerid][pPbiskey]-100][sbOwner], true) == 0)
            {
                new borse = PlayerInfo[playerid][pPbiskey]-100;
                GivePlayerMoney(playerid,SBizzInfo[borse][sbTill]);
                SBizzInfo[borse][sbLocked] = 0;
                SBizzInfo[borse][sbOwned] = 0;
                GetPlayerName(playerid, sendername, sizeof(sendername));
                strmid(SBizzInfo[borse][sbOwner], "The State", 0, strlen("The State"), 255);
                strmid(SBizzInfo[borse][sbExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
                ConsumingMoney[playerid] = 1;
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                format(string, sizeof(string), "~w~Parabens~n~ Voce vendeu imoveis para ~n~~g~R$%d", SBizzInfo[borse][sbTill]);
                GameTextForPlayer(playerid, string, 10000, 3);
                SBizzInfo[borse][sbTill] = 0;
                PlayerInfo[playerid][pPbiskey] = 9999;
                a3d();
                SalvarTudo();
                return 1;
            }
            if(strcmp(playername, BizzInfo[PlayerInfo[playerid][pPbiskey]][bOwner], true) == 0)
            {
                new borse = PlayerInfo[playerid][pPbiskey];
                BizzInfo[borse][bLocked] = 0;
                BizzInfo[borse][bOwned] = 0;
                GetPlayerName(playerid, sendername, sizeof(sendername));
                strmid(BizzInfo[borse][bOwner], "The State", 0, strlen("The State"), 255);
                strmid(BizzInfo[borse][bExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
                ConsumingMoney[playerid] = 1;
                GivePlayerMoney(playerid,BizzInfo[borse][bTill]);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                format(string, sizeof(string), "~w~Parabens~n~ Voce vendeu imoveis para ~n~~g~R$%d", BizzInfo[borse][bTill]);
                GameTextForPlayer(playerid, string, 10000, 3);
                BizzInfo[borse][bTill] = 0;
                PlayerInfo[playerid][pPbiskey] = 9999;
                a3d();
                SalvarTudo();
                return 1;
            }
            if(PlayerInfo[playerid][pPbiskey] != 9999)
            {
                new borse = PlayerInfo[playerid][pPbiskey];
                format(string, sizeof(string), "~w~Parabens~n~ Voce vendeu imoveis para ~n~~g~R$%d", BizzInfo[borse][bTill]);
                GameTextForPlayer(playerid, string, 10000, 3);
                ConsumingMoney[playerid] = 1;
                PlayerInfo[playerid][pPbiskey] = 9999;
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_WHITE, "Você não tem uma Empresa.");
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/infoempresa", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new borse = PlayerInfo[playerid][pPbiskey];
            if(borse == 9999)
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não tem uma empresa.");
                return 1;
            }
            if (borse >= 100)
            {
                PrintSBizInfo(playerid,borse-100);
            }
            else
            {
                PrintBizInfo(playerid,borse);
            }
        }
        return 1;
    }
    /*if(strcmp(cmd, "/entradadaempresa", false) == 0 || strcmp(cmd, "/entradaemp", false) == 0 || strcmp(cmd, "/precoentradaemp", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new borse = PlayerInfo[playerid][pPbiskey];
            if (borse == 9999)
            {
                SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem uma Empresa !");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_WHITE, "USE: /entradadaempresa [preço]");
            }
            if(strval(tmp) < 0 || strval(tmp) > 99999)
            {
                SendClientMessage(playerid, COLOR_WHITE, "Preço da entrda mínmo R$0, máximo R$99999.");
                return 1;
            }
            if (borse >= 100)
            {
                SBizzInfo[borse-100][sbEntranceCost] = strval(tmp);
                format(string, sizeof(string), "Entrada Definida Para: R$%d.", SBizzInfo[borse-100][sbEntranceCost]);
            }
            else
            {
                BizzInfo[borse][bEntranceCost] = strval(tmp);
                format(string, sizeof(string), "Entrada Definida Para: R$%d.", BizzInfo[borse][bEntranceCost]);
            }
            a3d();
            SalvarTudo();
            SendClientMessage(playerid, COLOR_WHITE, string);
        }
        return 1;
    }   */
    if(strcmp(cmd, "/extorcao", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new borse = PlayerInfo[playerid][pPbiskey];
            if (borse == 9999)
            {
                SendClientMessage(playerid, COLOR_GRAD2, "  Você não tem uma Empresa");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_WHITE, "USE: /extorcao [id] (ou 555 para Nenhum)");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    format(string, sizeof(string), "* %s esta na extorcao de sua empresa.",giveplayer);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "* Agora você está na extorção da empresa de %s.",sendername);
                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                    if (borse >= 100)
                    {
                        format(string, sizeof(string), "%s",giveplayer);
                        strmid(SBizzInfo[borse-100][sbExtortion], string, 0, sizeof(string), 255);
                        format(string, sizeof(string), "Novo dono da Extorçao: %s",SBizzInfo[borse-100][sbExtortion]);
                    }
                    else
                    {
                        format(string, sizeof(string), "%s",giveplayer);
                        strmid(BizzInfo[borse][bExtortion], string, 0, sizeof(string), 255);
                        format(string, sizeof(string), "Novo dono da Extorçao: %s",BizzInfo[borse][bExtortion]);
                    }
                    a3d();
                    SendClientMessage(playerid, COLOR_WHITE, string);
                }
            }
            else if(giveplayerid == 555)
            {
                if (borse >= 100)
                {
                    format(string, sizeof(string), "Nenhum");
                    strmid(SBizzInfo[borse-100][sbExtortion], string, 0, sizeof(string), 255);
                    format(string, sizeof(string), "Novo dono da Extorçao: %s",SBizzInfo[borse-100][sbExtortion]);
                }
                else
                {
                    format(string, sizeof(string), "Nenhum");
                    strmid(BizzInfo[borse][bExtortion], string, 0, sizeof(string), 255);
                    format(string, sizeof(string), "Novo dono da Extorçao: %s",BizzInfo[borse][bExtortion]);
                }
            //  SalvarTudo();
                a3d();
                SendClientMessage(playerid, COLOR_WHITE, string);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta offline !");
                return 1;
            }
        }
        return 1;
    }
    /*if(strcmp(cmd, "/nomeempresa", false) == 0 || strcmp(cmd, "/nomeemp", false) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new borse = PlayerInfo[playerid][pAdmin];
            if (borse < 1337)
            {
                SendClientMessage(playerid, COLOR_GRAD2, "   Você não autorização para usar este comando!");
                return 1;
            }
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_WHITE, "USE: /nomeempresa [Nome]");
            }
            new quantcount = 0;
            for(new i = 0; i < sizeof(BizzInfo); i++)
            {
                if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
                {
                    strmid(BizzInfo[i][bMessage], result, 0, 64, 255);
                    format(string, sizeof(string), "Nome da Empresa Mudada Para: %s",BizzInfo[i][bMessage]);
                    quantcount ++;
                }
            }
            for(new i = 0; i < sizeof(SBizzInfo); i++)
            {
                if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
                {
                    strmid(SBizzInfo[i][sbMessage], result, 0, 64, 255);
                    format(string, sizeof(string), "Nome da Empresa Mudada Para: %s",SBizzInfo[i][sbMessage]);
                    quantcount ++;
                }
            }
            if(quantcount == 0) return SendClientMessage(playerid, -1, "Você não está proximo a nenhuma Empresa ou Mini Empresa!");
            SalvarTudo();
            a3d();
            SendClientMessage(playerid, COLOR_WHITE, string);
        }
        return 1;
    }   */
    if(strcmp(cmd, "/sacarempresa", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new borse = PlayerInfo[playerid][pPbiskey];
            if (borse == 9999)
            {
                SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem uma Empresa");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                if (borse >= 100)
                {
                    format(string, sizeof(string), "  Você tem R$%d no cofre da empresa.", SBizzInfo[borse-100][sbTill]);
                    SendClientMessage(playerid, COLOR_GRAD3, string);
                }
                else
                {
                    format(string, sizeof(string), "  Você tem R$%d no cofre da empresa.", BizzInfo[borse][bTill]);
                    SendClientMessage(playerid, COLOR_GRAD3, string);
                }
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /sacarempresa [quantidade]");
                return 1;
            }
            new cashdeposit = strval(tmp);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /sacarempresa [quantidade]");
                return 1;
            }
            if (borse >= 100)
            {
                if(cashdeposit > SBizzInfo[borse-100][sbTill] || cashdeposit < 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "   Você nao tem essa quantia.");
                    return 1;
                }
            }
            else
            {
                if (cashdeposit > BizzInfo[borse][bTill] || cashdeposit < 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "   Você nao tem essa quantia.");
                    return 1;
                }
            }
            if (borse >= 100)
            {
                if(!PlayerToPoint(100, playerid,SBizzInfo[borse-100][sbEntranceX],SBizzInfo[borse-100][sbEntranceY],SBizzInfo[borse-100][sbEntranceZ]))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "  Sua empresa esta longe de você.");
                    return 1;
                }
                else
                {
                    ConsumingMoney[playerid] = 1;
                    GivePlayerMoney(playerid,cashdeposit);
                    SBizzInfo[borse-100][sbTill] -= cashdeposit;
                    format(string, sizeof(string), "  Você retirou R$%d de sua empresa - restante: R$%d ", cashdeposit,SBizzInfo[borse-100][sbTill]);
                //  SalvarTudo();
                    SendClientMessage(playerid, COLOR_YELLOW, string);
                    return 1;
                }
            }
            else
            {
                if (!PlayerToPoint(100, playerid,BizzInfo[borse][bExitX],BizzInfo[borse][bExitY],BizzInfo[borse][bExitZ]))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "   Sua empresa esta longe de você.");
                    return 1;
                }
                else
                {
                    ConsumingMoney[playerid] = 1;
                    GivePlayerMoney(playerid,cashdeposit);
                    BizzInfo[borse][bTill] -= cashdeposit;
                    format(string, sizeof(string), "   Você retirou R$%d de sua empresa - restante: R$%d ", cashdeposit,BizzInfo[borse][bTill]);
                //  SalvarTudo();
                    SendClientMessage(playerid, COLOR_YELLOW, string);
                    return 1;
                }
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/depositarempresa", true) == 0 || strcmp(cmd, "/depositaremp", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new borse = PlayerInfo[playerid][pPbiskey];
            if (borse == 9999)
            {
                SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem uma empresa.");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                if (borse >= 100)
                {
                    format(string, sizeof(string), "  Você tem R$%d de saldo em sua empresa.", SBizzInfo[borse-100][sbTill]);
                    SendClientMessage(playerid, COLOR_GRAD3, string);
                }
                else
                {
                    format(string, sizeof(string), "  Você tem R$%d de saldo em sua empresa.", BizzInfo[borse][bTill]);
                    SendClientMessage(playerid, COLOR_GRAD3, string);
                }
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /depositarempresa [quantidade]");
                return 1;
            }
            new cashdeposit = strval(tmp);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /depositarempresa [quantidade]");
                SendClientMessage(playerid, COLOR_GRAD3, string);
                return 1;
            }
            if (cashdeposit > GetPlayerMoneyEx(playerid) || cashdeposit < 1)
            {
                SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem tanto");
                return 1;
            }
            if (borse >= 100)
            {
                if(!PlayerToPoint(100, playerid,SBizzInfo[borse-100][sbEntranceX],SBizzInfo[borse-100][sbEntranceY],SBizzInfo[borse-100][sbEntranceZ]))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "   Você está longe de sua empresa");
                    return 1;
                }
                else
                {
                    GivePlayerMoney(playerid,-cashdeposit);
                    SBizzInfo[borse-100][sbTill] += cashdeposit;
                    ExtortionSBiz(borse-100, cashdeposit);
                    format(string, sizeof(string), "  Você guardou R$%d no cofre de sua empresa. O saldo de sua empresa: R$%d", cashdeposit,SBizzInfo[borse-100][sbTill]);
                    GastarProdutos(2, borse-100, 20);
                    format(string, sizeof(string), "  Você guardou R$%d no cofre de sua empresa. O saldo de sua empresa: R$%d", cashdeposit,SBizzInfo[borse-100][sbTill]);
                //  SalvarTudo();
                    SendClientMessage(playerid, COLOR_YELLOW, string);
                    return 1;
                }
            }
            else
            {
                if (!PlayerToPoint(100, playerid,BizzInfo[borse][bExitX],BizzInfo[borse][bExitY],BizzInfo[borse][bExitZ]))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "   Você guardou R$%d no cofre de sua empresa. O saldo de sua empresa: R$%d");
                    return 1;
                }
                else
                {
                    GivePlayerMoney(playerid,-cashdeposit);
                    BizzInfo[borse][bTill] += cashdeposit;
                    ExtortionBiz(borse, cashdeposit);
                    format(string, sizeof(string), "  Voce depositou $%d no cofre de sua empresa Total: $%d", cashdeposit,BizzInfo[borse][bTill]);
                //  SalvarTudo();
                    SendClientMessage(playerid, COLOR_YELLOW, string);
                    return 1;
                }
            }
        }
        return 1;
    }
//-----------------------------------[HEAL]-------------------------------------------------------------------------
    if(strcmp(cmd, "/vida", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            GetPlayerName(playerid, sendername, sizeof(sendername));
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /vida [id] [preço]");
            }
            giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /vida [id] [price]");
                return 1;
            }
            moneys = strval(tmp);
            if(moneys < 1 || moneys > 5000) { SendClientMessage(playerid, COLOR_GREY, "   O Preço não pode passar de 5000 !"); return 1; }
            if (giveplayerid == playerid)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não pode se curar!");
                return 1;
            }
            if (IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if( ProxDetectorS( 10.0, playerid, giveplayerid ) )
                    {
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        if(gTeam[playerid] == TEAM_CYAN||PlayerInfo[playerid][pMembro]==4||PlayerInfo[playerid][pLider]==4)//model
                        {
                            new Veh = GetPlayerVehicleID(playerid);
                            if(CurarAtivo[giveplayerid] != 999)
                            {
                                SendClientMessage(playerid, COLOR_GRAD1, "  Algum médico Ja ofereceu Vida a Este Player!");
                                return 1;
                            }
                            if(IsAnAmbulanceCar(Veh))
                            {
                                CurarAtivo[giveplayerid] = playerid;
                                CurarPreco[giveplayerid] = moneys;
                                format(string, sizeof(string), "Um Médico está te oferecendo Vida e Colete por R$%d, Digite /aceitar vida.",moneys);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE,string);
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GRAD1, "  Vocês não está em uma Ambulancia!");
                                return 1;
                            }
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GRAD1, "Você não está autorizado a usar o comando!");
                            return 1;
                        }
                    }
                    else return SendClientMessage( playerid, -1, "O player não está próximo a você." );
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, " Esse jogador está offline");
            }
        }
        return 1;
    }
//----------------------------------[ADMINADMIN]-----------------------------------------------
    if(strcmp(cmd, "/id", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /id [ nick ]");
                return 1;
            }
            new target;
            target = ReturnUser(tmp);
            if(IsPlayerConnected(target))
            {
                if(target != INVALID_PLAYER_ID)
                {
                    GetPlayerName(target, giveplayer, sizeof(giveplayer));
                    format(gstring, sizeof(gstring), "ID: (%d) %s",target,giveplayer);
                    SendClientMessage(playerid, COLOR_GRAD1, gstring);
                }
            }
        }
        return 1;
    }
//----------------------------------[AdminChat]-----------------------------------------------
    if(strcmp(cmd, "/admin", true) == 0 || strcmp(cmd, "/a", true) == 0)
    {
        if(PlayerInfo[playerid][pMuted] == 1)
        {
            SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: (/a)dmin [admin chat]");
                return 1;
            }
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                format(string, sizeof(string), "*%d Admin %s: %s", PlayerInfo[playerid][pAdmin], PlayerName(playerid), result);
                ABroadCast(COLOR_LIGHTBLUE, string, 1);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/helper", true) == 0 || strcmp(cmd, "/h", true) == 0)
    {
        if(PlayerInfo[playerid][pMuted] == 1)
        {
            SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COR_HELPER, "USE: (/h)elper [helper chat]");
                return 1;
            }
            if (PlayerInfo[playerid][pHelper] >= 1)
            {
                format(string, sizeof(string), "*%d Helper %s: %s", PlayerInfo[playerid][pHelper], PlayerName(playerid), result);
                ABroadCasth(COR_HELPER, string, 1);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/adminhelper", true) == 0 || strcmp(cmd, "/ah", true) == 0)
    {
        if(PlayerInfo[playerid][pMuted] == 1)
        {
            SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
            return 1;
        }
        if(AhOff == 1)
        {
            SendClientMessage(playerid, 0x808080AA, "O Chat com Helpers e Admins foi desativado por um Administrador!");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COR_HELPER, "USE: (/h)elper [helper chat]");
                return 1;
            }
            if (PlayerInfo[playerid][pHelper] >= 1)
            {
                format(string, sizeof(string), "*%d Helper %s: %s", PlayerInfo[playerid][pHelper], PlayerName(playerid), result);
                ABroadCastah(0xFF80C0AA, string, 1);
            }
            else if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                format(string, sizeof(string), "*%d Admin %s: %s", PlayerInfo[playerid][pAdmin], PlayerName(playerid), result);
                ABroadCastah(0xFF80C0AA, string, 1);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/fa", true) == 0 || strcmp(cmd, "/famy", true) == 0)
    {
        if(PlayerInfo[playerid][pMuted] == 1)
        {
            SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COR_HELPER, "USE: (/fa)my [família chat]");
                return 1;
            }
            new FamyOwna = GetPlayerFamy(playerid);
            if (PlayerInfo[playerid][pFamyLider] >= 1)
            {
                format(string, sizeof(string), "**%s Líder %s: %s", NomeFamy(playerid), PlayerName(playerid), result);
                FamyMsg(0xFFDDFFFF, string, FamyOwna);
            }
            else if (PlayerInfo[playerid][pFamyMember] >= 1)
            {
                format(string, sizeof(string), "**%s Membro %s: %s", NomeFamy(playerid), PlayerName(playerid), result);
                FamyMsg(0xFFDDFFFF, string, FamyOwna);
            }
            format(string, sizeof(string), "* %s Falou algo no Rádio da Família.", PlayerName(playerid));
            ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        }
        return 1;
    }
//----------------------------------[cnn]-----------------------------------------------
    if(strcmp(cmd, "/cnn", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                GetPlayerName(playerid, sendername, sizeof(sendername));
                new length = strlen(cmdtext);
                while ((idx < length) && (cmdtext[idx] <= ' '))
                {
                    idx++;
                }
                new offset = idx;
                new result[100];
                while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                {
                    result[idx - offset] = cmdtext[idx];
                    idx++;
                }
                result[idx - offset] = EOS;
                if(!strlen(result))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: /cnn [cnn formato ~n~=NovaLinha ~r~=Vermelho ~g~=Verde ~b~=Azul ~w~=Branco ~y~=Amarelo ~l~=Preto]");
                    return 1;
                }
                format(string, sizeof(string), "~g~%s: ~w~%s",sendername,result);
                for(new i = 0; i < MaiorID; i++)
                {
                    if(IsPlayerConnected(i))
                    {
                        GameTextForPlayer(i, string, 5000, 3);
                    }
                }
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/cnnn", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1337)
            {
                tmp = strtok(cmdtext, idx);
                new txtid;
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: /cnnn <Digite> ");
                    return 1;
                }
                txtid = strval(tmp);
                if(txtid == 2)
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "Não existe 2! só 0,1,3,4!");
                    return 1;
                }
                new length = strlen(cmdtext);
                while ((idx < length) && (cmdtext[idx] <= ' '))
                {
                    idx++;
                }
                new offset = idx;
                new result[100];
                while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                {
                    result[idx - offset] = cmdtext[idx];
                    idx++;
                }
                result[idx - offset] = EOS;
                if(!strlen(result))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: /cnnn <Digite> [cnnc formato ~n~=NovaLinha ~r~=Vermelho ~g~=Verde ~b~=Azul ~w~=Branco ~y~=Amarelo ~l~=Preto]");
                    return 1;
                }
                format(string, sizeof(string), "~w~%s",result);
    for(new i = 0; i < MaiorID; i++)
                {
                    if(IsPlayerConnected(i) == 1)
                    {
                        GameTextForPlayer(i, string, 5000, txtid);
                    }
                }
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
                return 1;
            }
        }
        return 1;
    }
//[ADMIN]________________________________________________
//-----------------------------------[JAIL]-------------------------------------------------------------------------
    if(strcmp(cmd, "/carandiru",true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new tempo[20];
            new tempo2;
            if(PlayerInfo[playerid][pAdmin] < 2)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não esta autorizado para usar este comando!");
                return 1;
            }
            if(PlayerInfo[playerid][pAdmin] <= 4)
            {
                if(PlayerInfo[playerid][pJailed] != 0)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Você não pode prender quem já está Preso!");
                    return 1;
                }
            }
            tmp = strtok(cmdtext, idx);
            tempo = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /carandiru [ ID ] [ Tempo ] [ Motivo ]");
                return 1;
            }
            if(!strlen(tempo))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /carandiru [ ID ] [ Tempo ] [ Motivo ]");
                return 1;
            }
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /carandiru [ ID ] [ Tempo ] [ Motivo ]");
                return 1;
            }
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340  && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não pode dar carandiru para um Admin Dono !");
                return 1;
            }
            if(admtrampando[playerid] < 1 && PlayerInfo[giveplayerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
            {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            tempo2 = strval(tempo);
            if(IsPlayerConnected(giveplayerid))
            {
              if(giveplayerid != INVALID_PLAYER_ID)
              {
                    if(PlayerInfo[giveplayerid][pSex] == 1)
                    {
                        SetPlayerSkinEx(giveplayerid, 268);
                    }
                    else
                    {
                        SetPlayerSkinEx(giveplayerid, 69);
                    }
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    format(string, sizeof(string), "AdmAviso: %s Colocou %s por %d minutos no Carandiru. Motivo: %s", sendername, giveplayer, tempo2, (result));
                    SendClientMessageToAll(COLOR_LIGHTRED, string);
                    format(string, sizeof(string), "* Você foi colocado no Carandiru Pelo Admin %s.", sendername);
                    SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
                    GameTextForPlayer(giveplayerid, "~b~Bem Vindo ao ~n~~r~Carandiru", 5000, 3);
                    ResetPlayerWeapons(giveplayerid);
                    WantedPoints[giveplayerid] = 0;
                    SetPlayerWantedLevel(giveplayerid, 0);
                    PlayerInfo[giveplayerid][pJailed] = 2;
                    PlayerInfo[giveplayerid][pJailTime] = tempo2 * 60;
                    SetPlayerPos(giveplayerid, 268.58, 1857.94, 9.81);
                    SetPlayerWorldBounds(giveplayerid, 337.5694,101.5826,1940.9759,1798.7453); //285.3481,96.9720,1940.9755,1799.0811
                    SetPlayerSkinEx(giveplayerid,268);
                    SetPlayerChatBubble(giveplayerid, ".", COLOR_RED, 1, 1);
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   O jogador está offline!");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/cadeia", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /cadeia [ID/Nome] [Tempo(minutos)] [Motivo]");
                return 1;
            }
            new playa;
            new money;
            playa = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            money = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        new length = strlen(cmdtext);
                        while ((idx < length) && (cmdtext[idx] <= ' '))
                        {
                            idx++;
                        }
                        new offset = idx;
                        new result[100];
                        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                        {
                            result[idx - offset] = cmdtext[idx];
                            idx++;
                        }
                        result[idx - offset] = EOS;
                        if(!strlen(result))
                        {
                            SendClientMessage(playerid, COLOR_GRAD2, "USE: /cadeia [id] [Tempo(minutos)] [motivo]");
                            return 1;
                        }
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* Você prendeu %s.", giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTRED, string);
                        format(string, sizeof(string), "* Você foi preso pelo Admin %s    Motivo: %s.", sendername,result);
                        GameTextForPlayer(playa, "~b~Bem Vindo a ~n~~r~Cadeia Admin", 5000, 3);
                        ResetPlayerWeapons(playa);
                        WantedPoints[playa] = 0;
                        SetPlayerWantedLevel(playa, 0);
                        PlayerInfo[playa][pJailed] = 2;
                        PlayerInfo[playa][pJailTime] = money * 60;
                        SetPlayerPos(playa, 346.5848, 306.1026, 999.1484);
                        SetPlayerInterior(playa,6);
                        SetPlayerVirtualWorld(playa,random(20));
                        format(string, sizeof(string), "Você foi preso por %d minutos.", money);
                        SendClientMessage(playa, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "AdmAviso: Admin %s prendeu %s por %d minutos, Motivo: %s.",sendername,giveplayer,money,result);
                        SendClientMessageToAll(COLOR_LIGHTRED, string);
                        printf("%s", string);
                        //ProcuradoPlayer(playa);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não tem permissao para usar esse comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/agendarcadeia", true) == 0 || strcmp(cmd, "/acadeia", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new playa[64];
            new money;
            playa = strtok(cmdtext, idx);
            tmp = strtok(cmdtext, idx);
            if(!strlen(playa))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /agendarcadeia [Nome] [Tempo(minutos)] [Motivo]");
                return 1;
            }
            money = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                new length = strlen(cmdtext);
                while ((idx < length) && (cmdtext[idx] <= ' '))
                {
                    idx++;
                }
                new offset = idx;
                new result[100];
                while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                {
                    result[idx - offset] = cmdtext[idx];
                    idx++;
                }
                result[idx - offset] = EOS;
                if(!strlen(result))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: /cadeia [id] [Tempo(minutos)] [motivo]");
                    return 1;
                }
                new arquivo[64];
                format(arquivo, sizeof(arquivo), OpenAccPlayer,playa);
                GetPlayerName(playerid, sendername, sizeof(sendername));
                if(!dini_Exists(arquivo))
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "   Este Player Não está Registrado no Servidor!");
                    return 1;
                }
                format(arquivo, sizeof(arquivo), "Agendados/JAIL%s.ini",playa);
                if(dini_Exists(arquivo))
                {
                    dini_Set(arquivo,"Admin",sendername);
                    dini_Set(arquivo,"Motivo",result);
                    dini_IntSet(arquivo,"Tempo",money);
                }
                else
                {
                    dini_Create(arquivo);
                    dini_Set(arquivo,"Admin",sendername);
                    dini_Set(arquivo,"Motivo",result);
                    dini_IntSet(arquivo,"Tempo",money);
                }
                format(gstring,sizeof(gstring), "AdmAviso: %s Agendou %s, Tempo %d minutos, Motivo: %s", sendername,playa,money,result);
                ABroadCast(COLOR_YELLOW,gstring,1);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não tem permissao para usar esse comando!");
            }
        }
        return 1;
    }
//----------------------------------[TOD]-----------------------------------------------
    if(strcmp(cmd, "/sethora", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /sethora [hora do dia] (0-23)");
                return 1;
            }
            new hour2;
            hour2 = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 2)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                SetWorldTime(hour2);
                format(string, sizeof(string), "   Tempo Definido Para %d Horas.", hour2);
                BroadCast(COLOR_GRAD1, string);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não está autorizado a usar o comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/iniciarloteria", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 1337)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                format(string, sizeof(string), "Loteria: Ja comecou a loteria.");
                OOCNews(COLOR_WHITE, string);
                new rand = random(80);
                if(rand < 77) { rand += 3; }
                Lotto(rand);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não tem permissão para usar esse comando!");
                return 1;
            }
        }
        return 1;
    }
//-----------------------------------editstat---------------------------------------
    if(strcmp(cmd, "/editar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new editarnome[MAX_PLAYER_NAME];
            new editarnome2[MAX_PLAYER_NAME];
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /editar [id] [STATUS] [QUANTIDADE]");
                SendClientMessage(playerid, COLOR_GRAD4, "|1 Level |2 Morreu |3 Melhorar |4 Horas Jogadas ");
                SendClientMessage(playerid, COLOR_GRAD3, "|5 Conta Do Banco |6 NumeroTelefone |7 Respeito ");
                SendClientMessage(playerid, COLOR_GRAD2, "|8 ChaveCasa |9 ChaveEmpresa |10 VIP(3,4,5)");
                SendClientMessage(playerid, COLOR_GRAD2, "|12 Detetive |13 Advogado |14 Mecânico |15 Repórter |16 L.Carros |17 V.Drogas");
                SendClientMessage(playerid, COLOR_GRAD2, "|18 P.Sexo |19 Box |20 Emprego |21 Matou | 23 GoldBar |24 Skill De Pesca");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                GetPlayerName(playerid,editarnome,sizeof(editarnome));
                GetPlayerName(giveplayerid,editarnome2,sizeof(editarnome2));
                if(giveplayerid == playerid && ServerOwner[playerid] !=1)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Você não pode se Editar!");
                    return 1;
                }
                if(PlayerInfo[giveplayerid][pAdmin] >= 1 && ServerOwner[playerid] != 1)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Você não pode editar Um Admin!");
                    return 1;
                }
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "USE: /editar [id] [STATUS] [QUANTIDADE]");
                        SendClientMessage(playerid, COLOR_GRAD4, "|1 Level |2 Morreu |3 Melhorar |4 Horas Jogadas ");
                        SendClientMessage(playerid, COLOR_GRAD3, "|5 Conta Do Banco |6 NumeroTelefone |7 Respeito ");
                        SendClientMessage(playerid, COLOR_GRAD2, "|8 ChaveCasa |9 ChaveEmpresa |10 VIP(3,4,5)");
                        SendClientMessage(playerid, COLOR_GRAD2, "|12 Detetive |13 Advogado |14 Mecânico |15 Repórter |16 L.Carros |17 V.Drogas");
                        SendClientMessage(playerid, COLOR_GRAD2, "|18 P.Sexo |19 Box |20 Emprego |21 Matou | 23 BoldBar | 24 Skill De Pesca");
                        return 1;
                    }
                    new stat;
                    stat = strval(tmp);
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "USE: /editar [id] [STATUS] [QUANTIDADE]");
                        SendClientMessage(playerid, COLOR_GRAD4, "|1 Level |2 Morreu |3 Melhorar |4 Horas Jogadas ");
                        SendClientMessage(playerid, COLOR_GRAD3, "|5 Conta Do Banco |6 NumeroTelefone |7 Respeito ");
                        SendClientMessage(playerid, COLOR_GRAD2, "|8 ChaveCasa |9 ChaveEmpresa |10 VIP(3,4,5)");
                        SendClientMessage(playerid, COLOR_GRAD2, "|12 Detetive |13 Advogado |14 Mecânico |15 Repórter |16 L.Carros |17 V.Drogas");
                        SendClientMessage(playerid, COLOR_GRAD2, "|18 P.Sexo |19 Box |20 Emprego |21 Matou | 23 BoldBar | 24 Skill De Pesca");
                        return 1;
                    }
                    new quantidade;
                    quantidade = strval(tmp);
                    if (PlayerInfo[playerid][pAdmin] >= 1300)
                    {
                        if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                        {
                            SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                            return 1;
                        }
                        if(giveplayerid == playerid && PlayerInfo[playerid][pAdmin] != 3000)
                        {
                            SendClientMessage(playerid, COLOR_GRAD1, "Você não pode se editar");
                            return 1;
                        }
                        switch (stat)
                        {
                            case 1:
                            {
                                PlayerInfo[giveplayerid][pLevel] = quantidade;
                                format(string, sizeof(string), "   Você setou level %d para o jogador", quantidade);
                                ScoreLevel(giveplayerid);
                            }
                            case 2:
                            {
                                PlayerInfo[giveplayerid][pDeaths] = quantidade;
                                format(string, sizeof(string), "   Você setou %d vezes que ele morreu", quantidade);
                            }
                            case 3:
                            {
                                PlayerInfo[giveplayerid][gPupgrade] = quantidade;
                                format(string, sizeof(string), "   Você setou %d de pontos de melhoria", quantidade);
                            }
                            case 4:
                            {
                                PlayerInfo[giveplayerid][pConnectTime] = quantidade;
                                format(string, sizeof(string), "   Você setou %d horas jogadas para o jogador", quantidade);
                            }
                            case 5:
                            {
                                PlayerInfo[giveplayerid][pConta] = quantidade;
                                format(string, sizeof(string), "   Você setou R$%d no banco do jogador", quantidade);
                            }
                            case 6:
                            {
                                PlayerInfo[giveplayerid][pPnumber] = quantidade;
                                format(string, sizeof(string), "   Você setou o celular do jogador para %d", quantidade);
                            }
                            case 7:
                            {
                                PlayerInfo[giveplayerid][pExp] = quantidade;
                                format(string, sizeof(string), "   Você setou o respeito do jogador para %d", quantidade);
                            }
                            case 8:
                            {
                                PlayerInfo[giveplayerid][pPHousekey] = quantidade;
                                format(string, sizeof(string), "   Você setou a chave de casa pra %d", quantidade);
                            }
                            case 9:
                            {
                                PlayerInfo[giveplayerid][pPbiskey] = quantidade;
                                format(string, sizeof(string), "   Você setou a chave da empresa %d", quantidade);
                            }
                            case 10:
                            {
                                PlayerInfo[giveplayerid][pVip] = quantidade;
                                format(string, sizeof(string), "   Você setou VIP %d para o jogador", quantidade);
                                getdate(year, month, day);
                                gettime(hour,minute);
                            }
                            case 11:
                            {
                                format(string, sizeof(string), "   esse status foi retirado", quantidade);
                            }
                            case 12:
                            {
                                PlayerInfo[giveplayerid][pDetSkill] = quantidade;
                                format(string, sizeof(string), "   Você setou nivel de detetive para: %d", quantidade);
                            }
                            case 13:
                            {
                                PlayerInfo[giveplayerid][pLawSkill] = quantidade;
                                format(string, sizeof(string), "   Você setou nivel de advogado para: %d", quantidade);
                            }
                            case 14:
                            {
                                PlayerInfo[giveplayerid][pMechSkill] = quantidade;
                                format(string, sizeof(string), "   Você setou nivel de mecanico para: %d", quantidade);
                            }
                            case 15:
                            {
                                PlayerInfo[giveplayerid][pNewsSkill] = quantidade;
                                format(string, sizeof(string), "   The Player News Reporter Skill Set To %d", quantidade);
                            }
                            case 17:
                            {
                                PlayerInfo[giveplayerid][pDrogasSkill] = quantidade;
                                format(string, sizeof(string), "   Você setou a Skill de Drogas para: %d", quantidade);
                            }
                            case 18:
                            {
                                PlayerInfo[giveplayerid][pSexSkill] = quantidade;
                                format(string, sizeof(string), "  Você setou a Skill de P.Sexo para: %d", quantidade);
                            }
                            case 19:
                            {
                                PlayerInfo[giveplayerid][pBoxSkill] = quantidade;
                                format(string, sizeof(string), "   The Player Box Skill Set To %d", quantidade);
                            }
                            case 21:
                            {
                                PlayerInfo[giveplayerid][Rufflesills] = quantidade;
                                format(string, sizeof(string), "   Você setou %d vezes que ele matou alguém", quantidade);
                            }
                            case 22:
                            {
                                PlayerInfo[giveplayerid][pContractTime] = quantidade;
                                format(string, sizeof(string), "   Você setou o tempo de contrato para: %d", quantidade);
                            }
                            case 23:
                            {
                                PlayerInfo[giveplayerid][pGold] = quantidade;
                                format(string, sizeof(string), "   Você setou as gold bars do jogador para: %d", quantidade);
                            }
                            case 24:
                            {
                                PlayerInfo[giveplayerid][pFishSkill] = quantidade;
                                format(string, sizeof(string), "   Você setou a Skill de Pescar para: %d", quantidade);
                            }
                            default:
                            {
                                format(string, sizeof(string), "   Codigo Invalido", quantidade);
                            }

                        }
                        SendClientMessage(playerid, COLOR_GRAD1, string);
                        SalvarPlayer(playerid);
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
                    }
                }//not valid id
            }//not connected
        }
        return 1;
    }
//----------------------------------[SETINT]-----------------------------------------------
    if(strcmp(cmd, "/setint", true) == 0 || strcmp(cmd, "/setarinterior", true) == 0 || strcmp(cmd, "/setarint", true) == 0)
    {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_GRAD2, "USE: /setarinterior [id] [interior]");
            return 1;
        }
        new playa;
        new money;
        playa = ReturnUser(tmp);
        tmp = strtok(cmdtext, idx);
        money = strval(tmp);
        if (PlayerInfo[playerid][pAdmin] >= 1)
        {
            SetPlayerInterior(playa,money);
            format(string, sizeof(string), "  Seu Interior foi Mudado Para %d peelo Admin %s.", money,PlayerName(playerid));
            SendClientMessage(playa, COLOR_GRAD1, string);
            format(string, sizeof(string), "  Você mudou o interior do player: %s.", PlayerName(playa));
            SendClientMessage(playerid, COLOR_GRAD1, string);
        }
        else
        {
            return SendClientMessage(playerid, COLOR_GRAD2, "ERRO: Você não tem autorização para usar este comando!");
        }
        return 1;
    }
//----------------------------------[INVITE]------------------------------------------------
    if(strcmp(cmd, "/convidar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /convidar [playerid/Parte-do-Nick]");
                return 1;
            }
            new para1;
            para1 = ReturnUser(tmp);
            if (PlayerInfo[playerid][pLider] >= 1 || PlayerInfo[playerid][pCargo] >= 5)
            {
                new lolz = GetPlayerOrg(playerid);
                if(TemVaga(lolz) == 0)
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "Não há mais vagas na lista use /limparvaga primeiro.");
                    return 1;
                }
                if(IsPlayerConnected(para1))
                {
                    if(PlayerInfo[para1][pJailed] != 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Você não pode usar isso em um Preso");
                        return 1;
                    }
                    if(PlayerInfo[para1][pMembro] != 0 || PlayerInfo[para1][pLider] != 0)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Este player já participa de Org/Gang/Mafia.");
                        return 1;
                    }
                    if(para1 != INVALID_PLAYER_ID)
                    {
                        //if( PlayerInfo[ para1 ][ pConnectTime ] < 2)return SendClientMessage( playerid, -1, "O player deve ter jogado no mínimo 2 horas." );
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* %s te convidou para entrar para: %s (digite /aceitar convite) para aceitar.", PlayerName(playerid), NomeORG(playerid));
                        SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Você convidou %s para sua organização: %s.", giveplayer,NomeORG(playerid));
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        InviteOffer[para1] = playerid;
                        InviteJob[para1] = lolz;
                        format(strvinny,sizeof(strvinny), "{00FFFF}Você foi Convidado para a Organização: %s!\n{FF8000}Deseja Entrar para esta Organização?\n{0080FF}Se você Quiser Entrar Aperte em '{00FFFF}Sim{0080FF}'\n{0080FF}Se não Quiser Aperte em '{00FFFF}Não{0080FF}'",NomeORG(playerid));
                        ShowPlayerDialog(para1,642,DIALOG_STYLE_MSGBOX,"Convite",strvinny,"Sim","Nao");
                    }
                }//not connected
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Somente líderes e Sub lideres podem usar este comando !");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/sairdafamilia", true) == 0 || strcmp(cmd, "/contasfamilia", true) == 0 || strcmp(cmd, "/sairfamilia", true) == 0)
    {
        if(PlayerInfo[playerid][pFamyMember] == 0 && PlayerInfo[playerid][pFamyLider] == 0)
        {
            SendClientMessage(playerid,COLOR_GREY," Você não faz parte de nemhuma familia!");
            return 1;
        }
        PlayerInfo[playerid][pFamyMember] = 0;
        PlayerInfo[playerid][pFamyLider] = 0;
        MudarNickAceito[playerid] = 1;
        SendClientMessage(playerid, COLOR_GRAD2, "Você Saiu da Família, digite /mudarnick [NICK] e volte ao seu antigo Nick!");
        return 1;
    }
    if(strcmp(cmd, "/convidarf", true) == 0 || strcmp(cmd, "/convidarfamilia", true) == 0 || strcmp(cmd, "/convidarfamy", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /convidarf [playerid/Parte-do-Nick]");
                return 1;
            }
            if(GetPlayerFamy(playerid) == FamilyBloqueada)
        {
            SendClientMessage(playerid, COLOR_LIGHTRED, "* A sua Família Cancelada, Você foi Expulso Automaticamente.");
            PlayerInfo[playerid][pFamyLider] = 0;
            PlayerInfo[playerid][pFamyMember] = 0;
            return 1;
        }
            new para1;
            para1 = ReturnUser(tmp);
            if (PlayerInfo[playerid][pFamyLider] > 0)
            {
                if(IsPlayerConnected(para1))
                {
                    if(PlayerInfo[para1][pFamyMember] != 0 || PlayerInfo[para1][pFamyLider] != 0)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Este player já participa de Alguma outra família.");
                        return 1;
                    }
                    if(para1 != INVALID_PLAYER_ID)
                    {
                        new FamyOwna = GetPlayerFamy(playerid);
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* Você convidou %s para sua Família: %s.", giveplayer,NomeFamy(playerid));
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        ConviteFamy[para1] = FamyOwna;
                        format(gstring,sizeof(gstring), "{00FFFF}Você foi convidado para a Família:{FF8000} %s \n\n{00FFFF}Deseja entrar para esta Família?",NomeFamy(playerid));
                        ShowPlayerDialog(para1,4569,DIALOG_STYLE_MSGBOX,"Convite Família",gstring,"Sim","Nao");
                    }
                }//not connected
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Somente líderes de famílias podem usar este comando !");
            }
        }
        return 1;
    }
//----------------------------------[UNINVITE]------------------------------------------------
    if(strcmp(cmd, "/Demitir", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "/Demitir [ID/NICK] [Motivo]");
                return 1;
            }
            new para1;
            para1 = ReturnUser(tmp);
            if (PlayerInfo[playerid][pLider] > 0 || PlayerInfo[playerid][pCargo] >= 5)
            {
                new lolz = GetPlayerOrg(playerid);
                if(PlayerInfo[para1][pMembro] != lolz)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Você não pode demitir quem não é da sua org.");
                    return 1;
                }
                if(IsPlayerConnected(para1))
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
                        if (PlayerInfo[para1][pMembro] > 0)
                        {
                            GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            new length = strlen(cmdtext);
                            while ((idx < length) && (cmdtext[idx] <= ' '))
                            {
                                idx++;
                            }
                            new offset = idx;
                            new result[100];
                            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                            {
                                result[idx - offset] = cmdtext[idx];
                                idx++;
                            }
                            result[idx - offset] = EOS;
                            if(!strlen(result))
                            {
                                SendClientMessage(playerid, COLOR_GRAD2, "USE: /Demitir [ID/NICK] [Motivo]");
                                return 1;
                            }
                            DemitirInfoOrg(PlayerName(para1));
                            format(string, sizeof(string), "* Você foi demitido pelo líder %s Motivo: %s.", sendername, (result));
                            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                            SendClientMessage(para1, COLOR_LIGHTBLUE, "* Agora você é um civil novamente.");
                            gTeam[para1] = 3;
                            PlayerInfo[para1][pTeam] = 3;
                            PlayerInfo[para1][pMembro] = 0;
                            PlayerInfo[para1][pCargo] = 0;
                            if(PlayerInfo[para1][pSex] == 1) { PlayerInfo[para1][pSkin] = 23; } else { PlayerInfo[para1][pSkin] = 216; }
                            SetSpawnInfo(para1, gTeam[para1], PlayerInfo[para1][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
                            Hospital[para1] = 1;
                            SpawnPlayer(para1);
                            format(string, sizeof(string), "Você demitiu %s, Motivo: %s.", giveplayer, result);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            return 1;
                        }
                    }
                }
            }//not connected
        }
        else
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Você não é um líder!");
        }
        return 1;
    }
    if(strcmp(cmd, "/tirarf", true) == 0 || strcmp(cmd, "/tirarfamilia", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "/Tirarf [ID/NICK] [Motivo]");
                return 1;
            }
            new para1;
            para1 = ReturnUser(tmp);
            if (PlayerInfo[playerid][pFamyLider] > 0)
            {
                new lolz = GetPlayerFamy(playerid);
                if(PlayerInfo[para1][pFamyMember] != lolz)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Você não pode tirar quem não é da sua família.");
                    return 1;
                }
                if(IsPlayerConnected(para1))
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
                        if (PlayerInfo[para1][pFamyMember] > 0)
                        {
                            GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            new length = strlen(cmdtext);
                            while ((idx < length) && (cmdtext[idx] <= ' '))
                            {
                                idx++;
                            }
                            new offset = idx;
                            new result[100];
                            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                            {
                                result[idx - offset] = cmdtext[idx];
                                idx++;
                            }
                            result[idx - offset] = EOS;
                            if(!strlen(result))
                            {
                                SendClientMessage(playerid, COLOR_GRAD2, "USE: /Tirarf [ID/NICK] [Motivo]");
                                return 1;
                            }
                            format(string, sizeof(string), "* Você foi tirado da família pelo líder %s Motivo: %s.", sendername, (result));
                            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                            PlayerInfo[para1][pFamyMember] = 0;
                            format(string, sizeof(string), "Você tirou %s da família, Motivo: %s.", giveplayer, result);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            return 1;
                        }
                    }
                }
            }//not connected
        }
        else
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Você não é um líder!");
        }
        return 1;
    }
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    if(strcmp(cmd, "/comprargb", true) == 0)
    {
        new gold;
        new gold2;
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SendClientMessage(playerid, -1, "/comprargb [golds] [Cada gold = 100000]");
        gold = strval(tmp);
        gold2 = 100000*gold;
        if( PlayerInfo[playerid][pConta] < gold2 ) return SendClientMessage( playerid, -1, "Você não possui dinheiro suficiente." );
        if(PlayerToPoint(1.5,playerid,2224.1484,-1141.8772,1025.7969) || PlayerToPoint(1.0,playerid,1929.5409,-1785.1664,13.5469) || PlayerToPoint(1.0,playerid,2232.2886,-1162.6107,25.8906) || PlayerToPoint(1.0,playerid,1550.4796,-1669.7039,13.5624) || PlayerToPoint(1.5,playerid,957.4803,-48.7381,1001.1172)
        || PlayerToPoint(1.5,playerid,229.6725,153.8311,1003.0234)  || PlayerToPoint(1.5,playerid,321.4753,305.5962,999.1484) || PlayerToPoint(1.5,playerid,-1347.6376,499.9476,11.1953) || PlayerToPoint(1.5, playerid,2308.9492,-14.1523,26.7422) || PlayerToPoint(1.5,playerid,1467.5273, -1782.6521, 13.1987) || PlayerInBank[ playerid ] == true)
        {
            if(GetPlayerMoney(playerid) < gold || gold < 1 || gold > 10000) return SendClientMessage(playerid, -1, "ERROR: Você não tem essa quantia | Min 1 - máx 10000");
            PlayerInfo[playerid][pGold]+=gold;
            PlayerInfo[playerid][pConta]-=gold2;
            format(string,sizeof(string),"Você tem {00EE00}R$ %d {FFFFFF}no banco e possui agora %i gold's.", PlayerInfo[playerid][pConta], PlayerInfo[playerid][pGold]);
            SendClientMessage(playerid,-1,string);
            return 1;
        }
        else
        {
            SendClientMessage(playerid, -1, "Você não está no banco.");
            return 1;
        }
    }
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    if(strcmp(cmd, "/vendergb", true) == 0)
    {
        new gold;
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SendClientMessage(playerid, -1, "/vendergb [golds]");
        gold = strval(tmp);
        if(PlayerToPoint(1.5,playerid,2224.1484,-1141.8772,1025.7969) || PlayerToPoint(1.0,playerid,1929.5409,-1785.1664,13.5469) || PlayerToPoint(1.0,playerid,2232.2886,-1162.6107,25.8906) || PlayerToPoint(1.0,playerid,1550.4796,-1669.7039,13.5624) || PlayerToPoint(1.5,playerid,957.4803,-48.7381,1001.1172)
        || PlayerToPoint(1.5,playerid,229.6725,153.8311,1003.0234)  || PlayerToPoint(1.5,playerid,321.4753,305.5962,999.1484) || PlayerToPoint(1.5,playerid,-1347.6376,499.9476,11.1953) || PlayerToPoint(1.5, playerid,2308.9492,-14.1523,26.7422) || PlayerToPoint(1.5,playerid,1467.5273, -1782.6521, 13.1987) || PlayerInBank[ playerid ] == true)
        {
            if(PlayerInfo[playerid][pGold] < gold || gold < 1 || gold > 10000) return SendClientMessage(playerid, -1, "ERROR: Você não tem essa quantia | Min 1 - máx 10000");
            if( ( PlayerInfo[playerid][pConta] + 100000*gold ) > 100000000 )
                return SendClientMessage(playerid, -1, "Você não pode mais vender gb." );
            PlayerInfo[playerid][pGold]-=gold;
            PlayerInfo[playerid][pConta]+=100000*gold;
            format(string,sizeof(string),"Você tem %i gold's disponíveis e possui agora {00EE00}R$ %d {FFFFFF}em sua conta bancária.", PlayerInfo[playerid][pGold], PlayerInfo[playerid][pConta]);
            SendClientMessage(playerid,-1,string);
            return 1;
        }
        else
        {
            SendClientMessage(playerid, -1, "Você não está no banco.");
            return 1;
        }
    }
    if(strcmp(cmd, "/transferirgb", true) == 0)
    {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_GRAD2, "Digite o ID, e em seguida a Quantia em Gold's Bar, (apenas números)");
            return 1;
        }
        new playa;
        new money;
        playa = ReturnUser(tmp);
        tmp = strtok(cmdtext, idx);
        money = strval(tmp);
        if( !IsPlayerConnected( playa ) ) return SendClientMessage( playerid, -1, "Este player digitado não esta online." );
        if(PlayerInfo[playerid][pGold] < money || money < 1 || money > 10000) return SendClientMessage(playerid, -1, "ERROR: Você não tem essa quantia | Min 1 - máx 10000");
        if( PlayerInBank[ playerid ] == true ){
            PlayerInfo[playerid][pGold] -= money;
            PlayerInfo[playa][pGold] += money;
            format(gstring,sizeof(gstring),"Você transferiu %d Gold Bars Para Conta Bancaria de: %s",money,PlayerName(playa));
            SendClientMessage(playerid,COLOR_YELLOW,gstring);
            format(gstring, sizeof(gstring), "Seu novo saldo é: %d GB's",PlayerInfo[playerid][pConta]);
            SendClientMessage(playerid,COLOR_YELLOW,gstring);
            format(gstring, sizeof(gstring), "%s[%d] Transferiu %d de Gold Bar's para sua Conta",PlayerName(playerid),playerid,money);
            SendClientMessage(playa,COLOR_YELLOW,gstring);
            format(gstring, sizeof(gstring), "Seu novo saldo de GB's: %d",PlayerInfo[playa][pGold]);
            SendClientMessage(playa,COLOR_YELLOW,gstring);
        }
        else
        {
            return SendClientMessage(playerid,COLOR_GREY,"Você não está em um Banco/Caixa!");
        }
        return 1;
    }
//----------------------------------{Numero Emprego}-----------------------------------------------
    if(strcmp(cmd, "/empregos", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                SendClientMessage(playerid, TEAM_VAGOS_COLOR, "*** Detetive - 1");
                SendClientMessage(playerid, 0x33FF00FF, "*** Advogado - 2");
                SendClientMessage(playerid, TEAM_VAGOS_COLOR, "*** Profissional de Sexo - 3");
                SendClientMessage(playerid, 0x33FF00FF, "*** Vendedor de Drogas - 4");
                SendClientMessage(playerid, TEAM_VAGOS_COLOR, "*** Mecânico - 5");
                SendClientMessage(playerid, 0x33FF00FF, "*** Segurança - 6");
                SendClientMessage(playerid, TEAM_VAGOS_COLOR, "*** Vendedor de Armas - 7");
                SendClientMessage(playerid, 0x33FF00FF, "*** Boxer - 8");
                SendClientMessage(playerid, TEAM_VAGOS_COLOR, "*** Motorista de Onibus - 9");
                SendClientMessage(playerid, 0x33FF00FF, "*** Mendigo - 10");
                SendClientMessage(playerid, TEAM_VAGOS_COLOR, "*** Caminhoneiro - 11");
            }
        }
        return 1;
    }
//-----------------------------------{ IP }-----------------------------------------------------
    if(strcmp(cmd, "/ip", true) == 0)
    {
        if(ServerOwner[playerid] == 1)
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_YELLOW, "Use: /ip [ID]");
                SendClientMessage(playerid, COLOR_YELLOW, "Comando Para Ver o Ip Do Jogador.");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                new ip[64];
                GetPlayerIp(giveplayerid,ip,64);
                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                format(gstring, sizeof(gstring), "-| %s's IP: %s |-", giveplayer,ip);
                SendClientMessage(playerid,COLOR_LIGHTBLUE, gstring);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Esse não é um jogador Ativo.");
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não tem permissão para usar esse comando.");
            return 1;
        }
        return 1;
    }
    if(strcmp(cmd, "/irip", true) == 0)
    {
        if(ServerOwner[playerid] == 1)
        {
            new x_IP[32];
            x_IP = strtok(cmdtext, idx);
            if(!strlen(x_IP))
            {
                SendClientMessage(playerid, COLOR_WHITE, "USE: /irip [ip]");
                return 1;
            }
            for(new i = 0; i < MaiorID; i++)
            {

                GetPlayerIp(i,Infovinny[i][IrIp],32);
                if(strcmp(x_IP,Infovinny[i][IrIp],true)==0)
                {
                    if(IsPlayerConnected(i))
                    {
                        new Float:x,Float:y,Float:z;
                        GetPlayerPos(i, x, y, z);
                        GetPlayerName(i, giveplayer, sizeof(giveplayer));
                        SetPlayerPos(playerid,x,y,z);
                        SetPlayerInterior(playerid,GetPlayerInterior(i));
                        format(gstring, sizeof(gstring), "-| %s [ID: %d] IP: %s |- Você foi até ele ...", giveplayer,i,Infovinny[i][IrIp]);
                        SendClientMessage(playerid,COLOR_LIGHTBLUE, gstring);
                    }
                }
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não tem permissão para usar esse comando.");
            return 1;
        }
        return 1;
    }
//----------------------/unbanip--------------
    if(strcmp(cmd,"/desbanip",true)==0 || strcmp(cmd,"/unbanip",true)==0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 3)
        {
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
            }
        }
        tmp = strtok(cmdtext,idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid,COLOR_GRAD1,"USE: /desbanip [IP DO JOGADOR]");
            return 1;
        }
        format(gstring,sizeof(gstring), "IPsBanidos/%s.ini", tmp);
        format( string, sizeof string,"unbanip %s",tmp );
        SendRconCommand(string);
        SendRconCommand("reloadbans");
        if(!dini_Exists(gstring))
        {
            SendClientMessage(playerid,COLOR_GRAD1,"IP não encontrado na base de dados");
            return 1;
        }
        else
        {
            dini_Remove(gstring);
            GetPlayerName(playerid, sendername, sizeof(sendername));
            format(string,sizeof(string), "ADM: %s desbaniu o IP %s", sendername,tmp);
            ABroadCast(COLOR_YELLOW,string,1);
            return 1;
        }
    }
    if(strcmp(cmd,"/nomedesban",true)==0 || strcmp(cmd,"/unbannome",true)==0 || strcmp(cmd,"/desbannome",true)==0 || strcmp(cmd,"/desban",true)==0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 1337)
        {
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
            }
            tmp = strtok(cmdtext,idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid,COLOR_GRAD1,"USE: /nomedesban [NOME DO JOGADOR]");
                return 1;
            }
            new arquivo[64];
            format(arquivo, sizeof(arquivo), "Banidos/%s.ini",tmp);
            if(!dini_Exists(arquivo))
            {
                SendClientMessage(playerid,COLOR_GRAD1,"Nick não encontrado na base de dados");
                return 1;
            }
            else
            {
                dini_Remove(arquivo);
            }
            GetPlayerName(playerid, sendername, sizeof(sendername));
            format(string,sizeof(string), "ADM: %s desbaniu o Nick %s", sendername,tmp);
            ABroadCast(COLOR_YELLOW,string,1);
        }
        return 1;
    }
    if(strcmp(cmd, "/ptuto", true) == 0 && PlayerInfo[playerid][pAdmin] >= 1336)
    {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_GRAD2, "USE: /ptuto [id] ");
            return 1;
        }
        new para1;
        para1 = ReturnUser(tmp);
        GetPlayerName(para1, sendername, sizeof(sendername));
        PlayerPlaySound(para1, 1084, 0.0, 0.0, 0.0);
        SetPlayerCameraPos(para1,1519.4929,-1675.6611,21.0900);
        SetPlayerCameraLookAt(para1,1557.2080,-1675.8904,16.1953);
        TextDrawHideForPlayer(para1, BoasVindas);
        TextDrawHideForPlayer(para1, BoxTuto1);
        TextDrawHideForPlayer(para1, BoxTuto2);
        SendClientMessage(para1, 0x00FFFFAA, "~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~");
        SendClientMessage(para1, 0xFFD3A8FF, " Seja Bem Vindo ao nosso servidor {1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer");
        SendClientMessage(para1, 0xFFD3A8FF, " Caso precise de ajuda digite /duvida [Texto] ou /relatorio [Texto]");
        SendClientMessage(para1, 0xFFD3A8FF, " Visite nosso forum (/forum)");
        SendClientMessage(para1, 0x00FFFFAA, "~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~");
        PlayerPlaySound(para1, 1057, 0,0,0);
        PlayerInfo[para1][pTut] = 1;
        SetPlayerInterior(para1,0);
        TogglePlayerControllable(para1, 1);
        SetPlayerVirtualWorld(para1,0);
        Hospital[para1] = 1;
        SetPlayerSpawn(para1);
        SetCameraBehindPlayer(para1);
        GivePlayerMoney(para1, 50000);
        SendClientMessage(para1, 0xC78FFFAA, "Você ganhou 50000 e level 3 por logar em nosso servidor, Bom Jogo!");
        SetPlayerInterior(para1, 0);
        //gNews[para1] = 0;
        gFam[para1] = 0;
        new arma[256];
        format(arma,sizeof(arma),"{1CC712}Voce Teve a Leitura do Tutorial\n{1CC712}Cancelada Pelo Admin {E662DC}%s",sendername);
        ShowPlayerDialog(para1,55441,DIALOG_STYLE_MSGBOX,"{1CC712}Tutorial Cancelado",arma,"","Obrigado");
        SendClientMessage(playerid,0xE662DCAA,"Tutorial Cancelado com sucesso");
        return 1;
    }
//----------------------------------[MAKELider]------------------------------------------------
    if(strcmp(cmd, "/liderex", true) == 0 && PlayerInfo[playerid][pAdmin] >= 1337)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /liderex [id] [Numero]");
                return 1;
            }
            new para1;
            new level;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            level = strval(tmp);
            if(PlayerInfo[para1][pLider] != 0 && PlayerInfo[para1][pMembro] != 0)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Este player já participa de uma organização!");
                return 1;
            }
            if(IsPlayerConnected(para1))
            {
                if(para1 != INVALID_PLAYER_ID)
                {
                    if(level == 1) { PlayerInfo[para1][pSkin] = 283; }//Policia Militar
                    else if(level == 2) { PlayerInfo[para1][pSkin] = 285; }//ROTA
                    else if(level == 3) { PlayerInfo[para1][pSkin] = 287; }//Exército
                    else if(level == 4) { PlayerInfo[para1][pSkin] = 70; }//Fire/Ambulance
                    else if(level == 5) { PlayerInfo[para1][pSkin] = 115; }//Varrios Los Aztecas
                    else if(level == 6) { PlayerInfo[para1][pSkin] = 249; }//GuerrilheirosIsraelitas
                    else if(level == 7) { PlayerInfo[para1][pSkin] = 147; }//Prefeito
                    else if(level == 8) { PlayerInfo[para1][pSkin] = 294; }//Hitmans
                    else if(level == 9) { PlayerInfo[para1][pSkin] = 227; }//Repórters
                    else if(level == 10) { PlayerInfo[para1][pSkin] = 61; }//Taxistas
                    else if(level == 11) { PlayerInfo[para1][pSkin] = 295; }//BOPE
                    else if(level == 12) { PlayerInfo[para1][pSkin] = 113; }//Máfia Russa
                    else if(level == 13) { PlayerInfo[para1][pSkin] = 120; }//Máfia Japonesa
                    else if(level == 14) { PlayerInfo[para1][pSkin] = 270; }//Groove
                    else if(level == 15) { PlayerInfo[para1][pSkin] = 123; }//FARC
                    else if(level == 16) { PlayerInfo[para1][pSkin] = 186; }//Polícia Rodoviária Federal
                    else if(level == 17) { PlayerInfo[para1][pSkin] = 104; }//Ballas
                    else if(level == 18) { PlayerInfo[para1][pSkin] = 108; }//Vagos
                    else if(level == 19) { PlayerInfo[para1][pSkin] = 19; }//CV
                    else if(level == 20) { PlayerInfo[para1][pSkin] = 143; }//PCC
                    else if(level == 21) { PlayerInfo[para1][pSkin] = 247; }//Hells Angels
                    else if(level == 22) { PlayerInfo[para1][pSkin] = 181; }//Mongols
                    else if(level == 23) { PlayerInfo[para1][pSkin] = 101; }//Sons
                    else if(level == 24) { PlayerInfo[para1][pSkin] = 101; }//Sons
                    else if(level == 25) { PlayerInfo[para1][pSkin] = 29; }//Snake
                    else if(level == 26) { PlayerInfo[para1][pSkin] = 299; }//Sons
                    else if(level == 27) { PlayerInfo[para1][pSkin] = 100; }//Exército
                    else if(level == 28) { PlayerInfo[para1][pSkin] = 285; }//BPM
                    else if(level == 29) { PlayerInfo[para1][pSkin] = 25; }//FE
                    else if(level == 30) { PlayerInfo[para1][pSkin] = 230; }//PC
                    else if(level == 31) { PlayerInfo[para1][pSkin] = 230; }//PC
                    else if(level == 32) { PlayerInfo[para1][pSkin] = 186; }//PC
                    else if(level == 33) { PlayerInfo[para1][pSkin] = 141; }//PC
                    else if(level == 34) { PlayerInfo[para1][pSkin] = 230; }//Dark Gods
                    else if(level == 35) { PlayerInfo[para1][pSkin] = 123; }//KiLLeRs
                    else if(level == 36) { PlayerInfo[para1][pSkin] = 230; }//DaLesTe
                    else return SendClientMessage(playerid, COLOR_GREY, "Líder de 1 a 36");
                    GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    PlayerInfo[para1][pLider] = level;
                    format(string, sizeof(string), "   Você foi promovido a lider pelo admin %s", sendername);
                    SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                    SendClientMessage(para1, COLOR_LIGHTBLUE,"   Promovido Com sucesso !!");
                    format(string, sizeof(string), "   Você promoveu %s a Lider.", giveplayer);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    Hospital[para1] = 1;
                    gTeam[para1] = 11;
                    PlayerInfo[para1][pTeam] = 11;
                    PlayerInfo[para1][pCargo] = 6;
                    SetPlayerSkinEx(para1, PlayerInfo[para1][pSkin]);
                    SetPlayerSpawn(para1);
                }
            }//not connected
        }
        return 1;
    }
    if(strcmp(cmd, "/votar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(GetPlayerVirtualWorld(playerid) == 0)
            {
                if(EleicoesOn == 0)
                {
                    SendClientMessage(playerid, COLOR_WHITE, " Ás eleições não Estão abertas!");
                 return 1;
                }
                if(PlayerInfo[playerid][pVotou] != 0) return SendClientMessage(playerid, COLOR_WHITE, " Você ja Votou!");
                if(PlayerToPoint(15.0, playerid, 359.4827,207.1152,1008.3828))
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid, COLOR_WHITE, " Use: /Votar [Candidato (1 Até 3)]!");
                        format(gstring, sizeof(gstring), "Candidatos: 1 = %s, 2 = %s, 3 = %s.", CandidatoInfo[0][CandNome], CandidatoInfo[1][CandNome], CandidatoInfo[2][CandNome]/*, CandidatoInfo[3][CandNome],CandidatoInfo[4][CandNome]*/);
                        SendClientMessage(playerid, COLOR_WHITE, gstring);
                        return 1;
                    }
                    new Voto = strval(tmp);
                    new ResultVoto = Voto-1;
                    switch(Voto)
                    {
                        case 1:
                        {
                            if(strcmp(CandidatoInfo[ResultVoto][CandNome],"Ninguem", true ) == 0 )
                        {
                            SendClientMessage(playerid, COLOR_WHITE, " Não tem Nenhum candidato neste Número!");
                            format(gstring, sizeof(gstring), "Candidatos: 1 = %s, 2 = %s, 3 = %s.", CandidatoInfo[0][CandNome], CandidatoInfo[1][CandNome], CandidatoInfo[2][CandNome]/*, CandidatoInfo[3][CandNome],CandidatoInfo[4][CandNome]*/);
                            SendClientMessage(playerid, COLOR_WHITE, gstring);
       return 1;
                        }
                            format(string, sizeof(string), "** Você votou no Candidato: %s, Obrigado por Votar!", CandidatoInfo[ResultVoto][CandNome]);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(strvinny, sizeof(strvinny), "Eleições PlayGamer: %s Acabou de Votar em Algum Candidato para Prefeito, Para votar vá a Prefeitura de LS.",PlayerName(playerid));
                            SendClientMessageToAll(0x77D3EEFF,strvinny);
                            CandidatoInfo[ResultVoto][CandVotos] ++;
                            PlayerInfo[playerid][pVotou] = 1;
                        }
                        case 2:
                        {
                            if(strcmp(CandidatoInfo[ResultVoto][CandNome],"Ninguem", true ) == 0 )
                        {
                            SendClientMessage(playerid, COLOR_WHITE, " Não tem Nenhum candidato neste Número!");
                            format(gstring, sizeof(gstring), "Candidatos: 1 = %s, 2 = %s, 3 = %s.", CandidatoInfo[0][CandNome], CandidatoInfo[1][CandNome], CandidatoInfo[2][CandNome]/*, CandidatoInfo[3][CandNome],CandidatoInfo[4][CandNome]*/);
                            SendClientMessage(playerid, COLOR_WHITE, gstring);
       return 1;
                        }
                            format(string, sizeof(string), "** Você votou no Candidato: %s, Obrigado por Votar!", CandidatoInfo[ResultVoto][CandNome]);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(strvinny, sizeof(strvinny), "Eleições PlayGamer: %s Acabou de Votar em Algum Candidato para Prefeito, Para votar vá a Prefeitura de LS.",PlayerName(playerid));
                            SendClientMessageToAll(0x77D3EEFF,strvinny);
                            CandidatoInfo[ResultVoto][CandVotos] ++;
                            PlayerInfo[playerid][pVotou] = 1;
                        }
                        case 3:
                        {
                            if(strcmp(CandidatoInfo[ResultVoto][CandNome],"Ninguem", true ) == 0 )
                        {
                            SendClientMessage(playerid, COLOR_WHITE, " Não tem Nenhum candidato neste Número!");
                            format(gstring, sizeof(gstring), "Candidatos: 1 = %s, 2 = %s, 3 = %s.", CandidatoInfo[0][CandNome], CandidatoInfo[1][CandNome], CandidatoInfo[2][CandNome]/*, CandidatoInfo[3][CandNome],CandidatoInfo[4][CandNome]*/);
                            SendClientMessage(playerid, COLOR_WHITE, gstring);
       return 1;
                        }
                            format(string, sizeof(string), "** Você votou no Candidato: %s, Obrigado por Votar!", CandidatoInfo[ResultVoto][CandNome]);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(strvinny, sizeof(strvinny), "Eleições PlayGamer: %s Acabou de Votar em Algum Candidato para Prefeito, Para votar vá a Prefeitura de LS.",PlayerName(playerid));
                            SendClientMessageToAll(0x77D3EEFF,strvinny);
                            CandidatoInfo[ResultVoto][CandVotos] ++;
                            PlayerInfo[playerid][pVotou] = 1;
                        }
                       /* case 4:
                        {
                            format(string, sizeof(string), "** Você votou no Candidato: %s, Obrigado por Votar!", CandidatoInfo[ResultVoto][CandNome]);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(strvinny, sizeof(strvinny), "Eleições PlayGamer: %s Acabou de Votar em Algum Candidato para Prefeito, Para votar vá a Prefeitura de LS.",PlayerName(playerid));
                            SendClientMessageToAll(0x77D3EEFF,strvinny);
                            CandidatoInfo[ResultVoto][CandVotos] ++;
                        }
                        case 5:
                        {
                            format(string, sizeof(string), "** Você votou no Candidato: %s, Obrigado por Votar!", CandidatoInfo[ResultVoto][CandNome]);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(strvinny, sizeof(strvinny), "Eleições PlayGamer: %s Acabou de Votar em Algum Candidato para Prefeito, Para votar vá a Prefeitura de LS.",PlayerName(playerid));
                            SendClientMessageToAll(0x77D3EEFF,strvinny);
                            CandidatoInfo[ResultVoto][CandVotos] ++;
                        }     */
                    }
                    SaveEleicoes();
                }
                else
                {
                    SendClientMessage(playerid, COLOR_WHITE, " Você não está na Sala de Votação na Prefeitura!");
                 return 1;
                }
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/eleicoes", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] < 3000)
            {
                SendClientMessage(playerid, COLOR_WHITE, " Você não tem Autorização para Usar Este comando!");
                return 1;
            }
            if (EleicoesOn == 0)
            {
                EleicoesOn = 1;
                SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}N{95FFDF}| Eleições Iniciadas |{00FF00}B{FFD700}.P.{1E90FF}N{95FFDF}|*~*~*~*~*~*~*~~**");
                format(string, sizeof(string), "** Admin %s Iniciou as Eleições do Brasil PlayGamer", PlayerName(playerid));
                SendClientMessageToAll(0x77EEA1FF,string);
                format(string, sizeof(string), "~~> Candidato Número 1: %s.", CandidatoInfo[0][CandNome]);
                SendClientMessageToAll(COLOR_LIGHTBLUE,string);
                format(string, sizeof(string), "~~> Candidato Número 2: %s.", CandidatoInfo[1][CandNome]);
                SendClientMessageToAll(COLOR_LIGHTBLUE,string);
                format(string, sizeof(string), "~~> Candidato Número 3: %s.", CandidatoInfo[2][CandNome]);
                SendClientMessageToAll(COLOR_LIGHTBLUE,string);
                SendClientMessageToAll(0x95FFDFAA,"** Para Votar vá até a Prefeitura de Los Santos, Caso não votar Pagará Multa.");
                for(new o=0; o<sizeof(CandidatoInfo); o++)
                {
                    CandidatoInfo[o][CandVotos] = 0;
                }
                for(new i;i<MaiorID;i++) { PlayerPlaySound(i, 1084, 0.0, 0.0, 0.0),PlayerInfo[i][pVotou] = 0; }
            }
            else
            {
                EleicoesOn = 0;
                new vencedoreleicoes = 0,partido;
                for(new o=0; o<sizeof(CandidatoInfo); o++)
                {
                    if(CandidatoInfo[o][CandVotos] >= vencedoreleicoes)
                    {
                        vencedoreleicoes = CandidatoInfo[o][CandVotos];
                    }
                }
                for(new o=0; o<sizeof(CandidatoInfo); o++)
                {
                    if(CandidatoInfo[o][CandVotos] == vencedoreleicoes)
                    {
                        partido = o;
                    }
                }
                SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}N{95FFDF}| Eleições Finalizadas |{00FF00}B{FFD700}.P.{1E90FF}N{95FFDF}|*~*~*~*~*~*~*~~**");
                format(string, sizeof(string), "** Admin %s Finalizou as Eleições do Brasil PlayGamer", PlayerName(playerid));
                SendClientMessageToAll(0x77EEA1FF,string);
                format(string, sizeof(string), "~~> Candidato Número 1: %s, %d Votos.", CandidatoInfo[0][CandNome], CandidatoInfo[0][CandVotos]);
                SendClientMessageToAll(COLOR_LIGHTBLUE,string);
                format(string, sizeof(string), "~~> Candidato Número 2: %s, %d Votos.", CandidatoInfo[1][CandNome], CandidatoInfo[1][CandVotos]);
                SendClientMessageToAll(COLOR_LIGHTBLUE,string);
                format(string, sizeof(string), "~~> Candidato Número 3: %s, %d Votos.", CandidatoInfo[2][CandNome], CandidatoInfo[2][CandVotos]);
                SendClientMessageToAll(COLOR_LIGHTBLUE,string);
                format(string, sizeof(string), "~~> Vencedor <~~ Candidato Número %d: %s, Com %d Votos.", partido+1,CandidatoInfo[partido][CandNome], vencedoreleicoes);
                SendClientMessageToAll(0x1583F0AA,string);
                SendClientMessageToAll(0x95FFDFAA,"** Parabéns ao Novo Prefeito de Los Santos, Obrigado Por Votar.");
                for(new i;i<MaiorID;i++) { PlayerPlaySound(i, 1084, 0.0, 0.0, 0.0),PlayerInfo[i][pVotou] = 0; }
                for(new o=0; o<sizeof(CandidatoInfo); o++)
                {
                    strmid(CandidatoInfo[o][CandNome], "Ninguem", 0, strlen("Ninguem"), 255);
                    CandidatoInfo[o][CandVotos] = 0;
                }
                SaveEleicoes();
            }
            EleicoesOnSave();
            SaveEleicoes();
        }
        return 1;
    }
    if(strcmp(cmd, "/candidatar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_WHITE, " Use: /candidatar [ID] [Id da Vaga (1 Até 3)]!");
                format(gstring, sizeof(gstring), "Candidatos: 1 = %s, 2 = %s, 3 = %s.", CandidatoInfo[0][CandNome], CandidatoInfo[1][CandNome], CandidatoInfo[2][CandNome]/*, CandidatoInfo[3][CandNome],CandidatoInfo[4][CandNome]*/);
                SendClientMessage(playerid, COLOR_WHITE, gstring);
                return 1;
            }
            new para1;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            new VagaPref = strval(tmp);
            new ResultVoto = VagaPref-1;
                        if (PlayerInfo[playerid][pAdmin] < 3000)
            {
            SendClientMessage(playerid, COLOR_WHITE, " Você não tem Autorização para Usar Este comando!");
             return 1;
            }

            switch(VagaPref)
            {
                case 1:
                {
                    strmid(CandidatoInfo[ResultVoto][CandNome], PlayerName(para1), 0, strlen(PlayerName(para1)), 255);
                    format(string, sizeof(string), "** Você Adicionou um Candidato: %s, na Vaga: %d!", CandidatoInfo[ResultVoto][CandNome],VagaPref);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "** O Admin %s te Candidatou a Prefeito de Los Santos, Faça sua campanha  e Boa Sorte!", PlayerName(playerid));
                    SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                    format(strvinny, sizeof(strvinny), "Eleições PlayGamer: %s Se Candidatou a Prefeito de Los Santos.",PlayerName(para1));
                    SendClientMessageToAll(0x77D3EEFF,strvinny);
                }
                case 2:
                {
                    strmid(CandidatoInfo[ResultVoto][CandNome], PlayerName(para1), 0, strlen(PlayerName(para1)), 255);
                    format(string, sizeof(string), "** Você Adicionou um Candidato: %s, na Vaga: %d!", CandidatoInfo[ResultVoto][CandNome],VagaPref);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "** O Admin %s te Candidatou a Prefeito de Los Santos, Faça sua campanha  e Boa Sorte!", PlayerName(playerid));
                    SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                    format(strvinny, sizeof(strvinny), "Eleições PlayGamer: %s Se Candidatou a Prefeito de Los Santos.",PlayerName(para1));
                    SendClientMessageToAll(0x77D3EEFF,strvinny);
                }
                case 3:
                {
                    strmid(CandidatoInfo[ResultVoto][CandNome], PlayerName(para1), 0, strlen(PlayerName(para1)), 255);
                    format(string, sizeof(string), "** Você Adicionou um Candidato: %s, na Vaga: %d!", CandidatoInfo[ResultVoto][CandNome],VagaPref);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "** O Admin %s te Candidatou a Prefeito de Los Santos, Faça sua campanha  e Boa Sorte!", PlayerName(playerid));
                    SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                    format(strvinny, sizeof(strvinny), "Eleições PlayGamer: %s Se Candidatou a Prefeito de Los Santos.",PlayerName(para1));
                    SendClientMessageToAll(0x77D3EEFF,strvinny);
                }
               /* case 4:
                {
                    strmid(CandidatoInfo[ResultVoto][CandNome], PlayerName(para1), 0, strlen(PlayerName(para1)), 255);
                    format(string, sizeof(string), "** Você Adicionou um Candidato: %s, na Vaga: %d!", CandidatoInfo[ResultVoto][CandNome],VagaPref);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "** O Admin %s te Candidatou a Prefeito de Los Santos, Faça sua campanha  e Boa Sorte!", PlayerName(playerid));
                    SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                    format(strvinny, sizeof(strvinny), "Eleições PlayGamer: %s Se Candidatou a Prefeito de Los Santos.",PlayerName(para1));
                    SendClientMessageToAll(0x77D3EEFF,strvinny);
                }
                case 5:
                {
                    strmid(CandidatoInfo[ResultVoto][CandNome], PlayerName(para1), 0, strlen(PlayerName(para1)), 255);
                    format(string, sizeof(string), "** Você Adicionou um Candidato: %s, na Vaga: %d!", CandidatoInfo[ResultVoto][CandNome],VagaPref);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "** O Admin %s te Candidatou a Prefeito de Los Santos, Faça sua campanha  e Boa Sorte!", PlayerName(playerid));
                    SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                    format(strvinny, sizeof(strvinny), "Eleições PlayGamer: %s Se Candidatou a Prefeito de Los Santos.",PlayerName(para1));
                    SendClientMessageToAll(0x77D3EEFF,strvinny);
                }   */
            }
            SaveEleicoes();
        }
        return 1;
    }
    if(strcmp(cmd, "/lider", true) == 0  || strcmp(cmd, "/darlider", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /darlider [id] [Numero(1-36)]");
                return 1;
            }
            new para1;
            new level;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            level = strval(tmp);
            if(level == 0) { SendClientMessage(playerid, COLOR_GREY, "Para tirar o lider de uma organização você deve usar /limparlider"); return 1; }

            if (PlayerInfo[playerid][pAdmin] >= 1336)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if(PlayerInfo[para1][pLider] != 0 || PlayerInfo[para1][pMembro] != 0)
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "   Este player já participa de uma organização!");
                    return 1;
                }
                if(IsPlayerConnected(para1))
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
                        if( PlayerInfo[ para1 ][ pLiderBlock ] > gettime() ){
                            return SendClientMessage( playerid, -1, "Este player esta com o lider bloqueado." );
                        }
                        if(strcmp(InfoOrg[level][Lider],"Ninguem",true)==0)
                        {
                            ConviteInfoOrg(PlayerName(para1), level, 6);
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GRAD2, "Já tem líder nessa ORG, use /limparlider antes de colocar outro lider");
                            return 1;
                        }
                        if(level == 1) { PlayerInfo[para1][pSkin] = 283; }//Policia Militar
                        else if(level == 2) { PlayerInfo[para1][pSkin] = 285; }//ROTA
                        else if(level == 3) { PlayerInfo[para1][pSkin] = 287; }//Exército
                        else if(level == 4) { PlayerInfo[para1][pSkin] = 70; }//Fire/Ambulance
                        else if(level == 5) { PlayerInfo[para1][pSkin] = 115; }//Varrios Los Aztecas
                        else if(level == 6) { PlayerInfo[para1][pSkin] = 249; }//GuerrilheirosIsraelitas
                        else if(level == 7) { PlayerInfo[para1][pSkin] = 147; }//Prefeito
                        else if(level == 8) { PlayerInfo[para1][pSkin] = 294; }//Hitmans
                        else if(level == 9) { PlayerInfo[para1][pSkin] = 227; }//Repórters
                        else if(level == 10) { PlayerInfo[para1][pSkin] = 61; }//Taxistas
                        else if(level == 11) { PlayerInfo[para1][pSkin] = 295; }//BOPE
                        else if(level == 12) { PlayerInfo[para1][pSkin] = 113; }//Máfia Russa
                        else if(level == 13) { PlayerInfo[para1][pSkin] = 120; }//Máfia Japonesa
                        else if(level == 14) { PlayerInfo[para1][pSkin] = 270; }//Groove
                        else if(level == 15) { PlayerInfo[para1][pSkin] = 123; }//FARC
                        else if(level == 16) { PlayerInfo[para1][pSkin] = 186; }//Polícia Rodoviária Federal
                        else if(level == 17) { PlayerInfo[para1][pSkin] = 104; }//Ballas
                        else if(level == 18) { PlayerInfo[para1][pSkin] = 108; }//Vagos
                        else if(level == 19) { PlayerInfo[para1][pSkin] = 19; }//CV
                        else if(level == 20) { PlayerInfo[para1][pSkin] = 47; }//PCC
                        else if(level == 21) { PlayerInfo[para1][pSkin] = 247; }//Hells Angels
                        else if(level == 22) { PlayerInfo[para1][pSkin] = 181; }//Mongols
                        else if(level == 23) { PlayerInfo[para1][pSkin] = 101; }//son
                        else if(level == 24) { PlayerInfo[para1][pSkin] = 112; }//triads
                        else if(level == 25) { PlayerInfo[para1][pSkin] = 29; }//triads
                        else if(level == 26) { PlayerInfo[para1][pSkin] = 230; }//SK
                        else if(level == 27) { PlayerInfo[para1][pSkin] = 100; }//Snake
                        else if(level == 28) { PlayerInfo[para1][pSkin] = 285; }//GPT
                        else if(level == 29) { PlayerInfo[para1][pSkin] = 25; }//FE
                        else if(level == 30) { PlayerInfo[para1][pSkin] = 230; }//PC
                        else if(level == 31) { PlayerInfo[para1][pSkin] = 230; }//PC
                        else if(level == 32) { PlayerInfo[para1][pSkin] = 186; }//PC
                        else if(level == 33) { PlayerInfo[para1][pSkin] = 186; }//PFII
                        else if(level == 34) { PlayerInfo[para1][pSkin] = 230; }//Dark Gods
                        else if(level == 35) { PlayerInfo[para1][pSkin] = 123; }//KiLLeRs
                        else if(level == 36) { PlayerInfo[para1][pSkin] = 230; }//DaLesTe
                        else return SendClientMessage(playerid, COLOR_GREY, "Líder de 1 a 36");
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        PlayerInfo[para1][pLider] = level;
                        format(string, sizeof(string), "   Você foi promovido a lider pelo admin %s", sendername);
                        SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                        SendClientMessage(para1, COLOR_LIGHTBLUE,"   Promovido Com sucesso !!");
                        format(string, sizeof(string), "   Você promoveu %s a Lider.", giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        Hospital[para1] = 1;
                        gTeam[para1] = 11;
                        PlayerInfo[para1][pTeam] = 11;
                        PlayerInfo[para1][pCargo] = 6;
                        //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayGamer Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
                        format(gstring, sizeof(gstring), "[BPG]{80E3FF} %s{FFFFFF} Novo lider da ORG: {00ECEC}%s{FFFFFF} para mais informações /infolideres.", giveplayer, NomeORG(para1));// se num funfa NomeORG(GetPlayerOrg(para1))
                        SendClientMessageToAll(0xFF8080FF, gstring);
                        SetPlayerSkinEx(para1, PlayerInfo[para1][pSkin]);
                        SetPlayerSpawn(para1);
                        a3d();
                    }
                }//not connected
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/forceskin", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /forceskin [id]");
                return 1;
            }
            new para1;
            para1 = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 4)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if(IsPlayerConnected(para1))
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
                        if(PlayerInfo[para1][pMembro] < 1)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Este jogador nao esta em um Emprego / Familia");
                            return 1;
                        }
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* Você foi forçado a mudar o skin pelo Admin %s.", sendername);
                        SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Você forçou o(a) %s Para muda seu skin.", giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        if(PlayerInfo[para1][pMembro] == 1) { PlayerInfo[para1][pTeam] = 5; ChosenSkin[para1] = 59; }
                        else if(PlayerInfo[para1][pMembro] == 2) { PlayerInfo[para1][pTeam] = 6; ChosenSkin[para1] = 121; }
                        else if(PlayerInfo[para1][pMembro] == 3) { PlayerInfo[para1][pTeam] = 7; ChosenSkin[para1] = 98; }
                        else if(PlayerInfo[para1][pMembro] == 4) { PlayerInfo[para1][pTeam] = 8; ChosenSkin[para1] = 46; }
                        else if(PlayerInfo[para1][pMembro] == 5) { PlayerInfo[para1][pTeam] = 9; ChosenSkin[para1] = 174; }
                        else if(PlayerInfo[para1][pMembro] == 6) { PlayerInfo[para1][pTeam] = 2; ChosenSkin[para1] = 280; }
                        else if(PlayerInfo[para1][pMembro] == 7) { PlayerInfo[para1][pTeam] = 2; ChosenSkin[para1] = 164; }
                        else if(PlayerInfo[para1][pMembro] == 8) { PlayerInfo[para1][pTeam] = 10; ChosenSkin[para1] = 186; }
                        else { return 1; }
                        SetPlayerInterior(para1,0);
                        new rand = random(sizeof(gInviteSpawns));
                        SetPlayerPos(para1, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]); // Warp the player
                        SetPlayerFacingAngle(para1, gInviteSpawns[rand][3]);
                        SetPlayerCameraPos(para1,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
                        SetPlayerCameraLookAt(para1,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
                        TogglePlayerControllable(para1, 0);
                        SelectChar[para1] = 9999;
                        SelectCharID[para1] = PlayerInfo[para1][pMembro];
                        SelectCharPlace[para1] = 1;
                        PlayerInfo[para1][pSkin] = ChosenSkin[para1];
                        SendClientMessage(para1, COLOR_LIGHTRED, "* Use 'Proximo' para selecionar o skin de sua vontade.");
                        SendClientMessage(para1, COLOR_LIGHTRED, "* Se Quizer utilizar esta skin ->, Digite 'Confirma'.");
                        ShowPlayerDialog(para1,101,DIALOG_STYLE_MSGBOX,"Mudança de Skin","{00FFFF}Você foi convidado para uma Organização\n{FF8000}Escolha o seu skin preferido\n{0080FF}Se você gostar desse Aperte em '{00FFFF}Pronto{0080FF}'\n{0080FF}Se não gostar use '{00FFFF}Próximo{0080FF}'","Próximo","Pronto");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
            }
        }
        return 1;
    }
//----------------------------------[Promover]------------------------------------------------
    if(strcmp(cmd, "/promover", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Use:  /Promover [ID/Nick] [Cargos (1-5)]");
                return 1;
            }
            new para1;
            new level;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            level = strval(tmp);
            if(level > 5 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "   Cargos de 1 a 5, 5 é Sub-Líder!"); return 1; }
            if (PlayerInfo[playerid][pLider] > 0)
            {
                if(IsPlayerConnected(para1))
                {
        for(new i = 0; i < MaiorID; i++)
                    {
                        if(PlayerInfo[para1][pMembro] == PlayerInfo[playerid][pLider])
                        {
                            if(para1 != INVALID_PLAYER_ID)
                            {
                                GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                PlayerInfo[para1][pCargo] = level;
                                format(string, sizeof(string), "   Você foi promovido pelo líder %s", sendername);
                                SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "   Você promoveu %s a cargo %d.", giveplayer,level);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                new org = PlayerInfo[playerid][pLider];
                                if(level == 5)
                                {
                                    if(strcmp(InfoOrg[org][SubLider],"Ninguem",true)==0)
                                    {
                                        DemitirInfoOrg(giveplayer);
                                        ConviteInfoOrg(giveplayer, org, 5);
                                    }
                                    else
                                    {
                                        strmid(string, InfoOrg[org][SubLider], 0, strlen(InfoOrg[org][SubLider]), 255);
                                        DemitirInfoOrg(giveplayer);
                                        DemitirInfoOrg(InfoOrg[org][SubLider]);
                                        ConviteInfoOrg(string, org, 4);
                                        ConviteInfoOrg(giveplayer, org, 5);
                                    }
                                }
                                if(strcmp(InfoOrg[org][SubLider],giveplayer,true)==0)
                                {
                                    if(level < 5)
                                    {
                                        DemitirInfoOrg(giveplayer);
                                        ConviteInfoOrg(giveplayer, org, level);
                                    }
                                }
                                return 1;
                            }
                            if(PlayerInfo[para1][pMembro] != PlayerInfo[playerid][pLider])
                            {
                                SendClientMessage(playerid, COLOR_GREY, "Não pode promover quem não é da sua org.");
                                return 1;
                            }
                        }
                    }
                }//not connected
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não é um líder !");
            }
        }
        return 1;
    }
//----------------------------------[setteam]------------------------------------------------
    if(strcmp(cmd, "/settime", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /settime [id] [team 1(civ) - 2(cop)]");
                return 1;
            }
            new para1;
            new level;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            level = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if(IsPlayerConnected(para1))
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        PlayerInfo[para1][pTeam] = level;
                        gTeam[para1] = level;
                        Hospital[para1] = 1;
                        SetPlayerSpawn(para1);
                        ClearCrime(para1);
                        printf("AdmAviso: %s foi trocado %s pro time %d.", sendername, giveplayer, level);
                        format(string, sizeof(string), "   Você foi setado a equipe %d por %s", level, sendername);
                        SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "   Você setou %s a sua equipe %d.", giveplayer,level);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
            }
        }
        return 1;
    }
//Pedir Contas
    if(!strcmp("/pedircontas", cmdtext, true))
    {
        if(PlayerInfo[playerid][pMembro] == 0)
        {
            SendClientMessage(playerid,COLOR_GREY," Você não faz parte de nemhuma organização!");
            return 1;
        }
        DemitirInfoOrg(PlayerName(playerid));
        gTeam[playerid] = 3;
        PlayerInfo[playerid][pTeam] = 3;
        PlayerInfo[playerid][pMembro] = 0;
        PlayerInfo[playerid][pLider] = 0;
        PlayerInfo[playerid][pCargo] = 0;
        if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
        SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
        Hospital[playerid] = 1;
        SpawnPlayer(playerid);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você pediu as contas, agora você é um Civil novamente!");
        return 1;
    }
    if(!strcmp("/contaslider", cmdtext, true))
    {
        if(PlayerInfo[playerid][pLider] == 0)
        {
            SendClientMessage(playerid,COLOR_GREY," Você não é líder de nenhuma organização!");
            return 1;
        }
        DemitirInfoOrg(PlayerName(playerid));
        gTeam[playerid] = 3;
        PlayerInfo[playerid][pTeam] = 3;
        PlayerInfo[playerid][pMembro] = 0;
        PlayerInfo[playerid][pLider] = 0;
        PlayerInfo[playerid][pCargo] = 0;
        if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
        SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
        Hospital[playerid] = 1;
        SpawnPlayer(playerid);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você pediu as contas, agora você é um Civil novamente!");
        return 1;
    }
//Membros
    if(strcmp(cmd,"/membros",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            new teamnumber;
            if (PlayerInfo[playerid][pLider] != 0) teamnumber = PlayerInfo[playerid][pLider];
            else if (PlayerInfo[playerid][pMembro] != 0) teamnumber = PlayerInfo[playerid][pMembro];
            else
            {
                SendClientMessage(playerid,COLOR_GRAD1,"Você não é Membro de nenhuma Equipe!");
                return 1;
            }
            format(gstring, sizeof(gstring),"%s Membros Online:",NomeORG(playerid));
            SendClientMessage(playerid, GetPlayerColor(playerid),gstring);
            for(new i = 0; i < MaiorID; i++)
            {
                if (IsPlayerConnected(i))
                {
                    GetPlayerName(i,sendername,sizeof(sendername));
                    format(string,sizeof(string),"");
                    if (PlayerInfo[i][pLider] == teamnumber) format(string,sizeof(string),"%s, Cargo: [LIDER]",sendername);
                    else if (PlayerInfo[i][pMembro] == teamnumber) format(string,sizeof(string),"%s, Cargo: %d - %s.",sendername,PlayerInfo[i][pCargo],OrgCargo(i));
                    if (strlen(string) > 1) SendClientMessage(playerid,COLOR_GRAD1,string);
                }
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/avisar", true) == 0 || strcmp(cmd, "/av", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um Admin!");
                return 1;
            }
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
            }
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: (/av)isar [texto]");
                return 1;
            }
            SendClientMessageToAll(-1,"• AVISO DA {ff80c0}ADMINISTRAÇÃO {FFFFFF}•");
            format(strvinny, sizeof(strvinny), "Admin %s: {ff80c0}%s", sendername, result);
            SendClientMessageToAll(-1, strvinny);
        }
        return 1;
    }
    if(strcmp(cmd, "/avisarhelper", true) == 0 || strcmp(cmd, "/avh", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pHelper] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um Admin!");
                return 1;
            }
            if(helptrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não está ajudando! (/helpajudar)");
                return 1;
            }
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: (/avh)aviso helper [texto]");
                return 1;
            }
            if(helptrampando[playerid] == 1)
            {
                SendClientMessageToAll(-1,"• AVISO DOS {02ea9e}HELPERS {FFFFFF}•");
                format(strvinny, sizeof(strvinny), "Helper %d %s: {02ea9e}%s", PlayerInfo[playerid][pHelper], sendername, result);
                SendClientMessageToAll(0x02EA9EFF, strvinny);           }
        }
        return 1;
    }
    if(strcmp(cmd, "/lchat", true) == 0 || strcmp(cmd, "/limparchat", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não é um admin!");
                return 1;
            }
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
            }
            for(new i=0; i<MaiorID; i++)
            {
                if(IsPlayerConnected(i)) ClearChatbox(i, 100);
            }
            GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            format(string, sizeof(string), "~p~~h~%s ~n~~w~Resetou o Chat!",playername);
            GameTextForAll(string, 5000, 1);
            format(string, sizeof(string), "[BPG] {FFFFFF}Admin %s {FFFFFF}Limpou o Chat do Servidor.", playername);
            SendClientMessageToAll(0xFF8080AA,string);
            return 1;
        }
        return 1;
    }
//----------------------------------[Wisper]-----------------------------------------------
    if(strcmp(cmd, "/particular", true) == 0 || strcmp(cmd, "/par", true) == 0)
    {
        if(gPlayerLogged[playerid] == 0)
        {
            SendClientMessage(playerid, COLOR_GREY, " Você não está Logado!");
            return 1;
        }
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_GRAD2, "USE: (/par)ticular [ID/Nome] [texto]");
            return 1;
        }
        giveplayerid = ReturnUser(tmp);
        if (IsPlayerConnected(giveplayerid))
        {
            if(HidePM[giveplayerid] >= 1)
            {
                 SendClientMessage(playerid, 0xFF0000AA, "[BPG]:{FF8000} Este Administrador tem as particulares bloqueadas!");
                 return 1;
            }
            if(PlayerInfo[playerid][pMuted] == 1)
            {
                SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
                return 1;
            }
            if(giveplayerid != INVALID_PLAYER_ID)
            {
                GetPlayerName(playerid, sendername, sizeof(sendername));
                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                new length = strlen(cmdtext);
                while ((idx < length) && (cmdtext[idx] <= ' '))
                {
                    idx++;
                }
                new offset = idx;
                new result[100];
                while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                {
                    result[idx - offset] = cmdtext[idx];
                    idx++;
                }
                result[idx - offset] = EOS;
                if(!strlen(result))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: (/par)ticular [ID/Nome] [texto]");
                    return 1;
                }
                if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pHelper] == 0)
                {
                    if(PlayerInfo[giveplayerid][pAdmin] >= 1 || PlayerInfo[giveplayerid][pHelper] >= 1)
                    {
                        format(string, sizeof(string), "Jogador: %s (ID:%d) Enviou: %s", sendername, playerid, (result));
                        SendClientMessage(giveplayerid, COLOR_YELLOW, string);
                        format(string, sizeof(string), "Particular Enviada para %s(ID:%d).",giveplayer,giveplayerid);
                        SendClientMessage(playerid, COLOR_YELLOW, string);
                        if(vinnyOwna >= 1)
                        {
                            format(string, sizeof(string), "Player %s para %s: %s", sendername, giveplayer, (result));
                            SoEuVejoMsm(0x00F2F2FF, string);
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Você apenas pode mandar /par para um Administrador ou Helper!");
                    }
                }
                else if(PlayerInfo[playerid][pAdmin] >= 1)
                {
                    if(admtrampando[playerid] == 0 && PlayerInfo[playerid][pAdmin] !=3000)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando (/trabalhar).");
                        return 1;
                    }
                    format(string, sizeof(string), "Admin: %s (ID:%d) Enviou: %s", sendername, playerid, (result));
                    SendClientMessage(giveplayerid, COLOR_YELLOW, string);
                    format(string, sizeof(string), "Particular Enviada para %s(ID:%d).",giveplayer,giveplayerid);
                    SendClientMessage(playerid, COLOR_YELLOW, string);
                    if(vinnyOwna >= 1)
                    {
                        format(string, sizeof(string), "Admin %s para %s: %s", sendername, giveplayer, (result));
                        SoEuVejoMsm(0x00F2F2FF, string);
                    }
                }
                else if(PlayerInfo[playerid][pHelper] >= 1)
                {
                    if(helptrampando[playerid] >= 1)
                    {
                        format(string, sizeof(string), "Helper: %s (ID:%d) Enviou: %s", sendername, playerid, (result));
                        SendClientMessage(giveplayerid, COR_HELPER, string);
                        format(string, sizeof(string), "Particular Enviada para %s(ID:%d).",giveplayer,giveplayerid);
                        SendClientMessage(playerid, COR_HELPER, string);
                        if(vinnyOwna >= 1)
                        {
                            format(string, sizeof(string), "Helper %s para %s: %s.", sendername, giveplayer, (result));
                            SoEuVejoMsm(0x00F2F2FF, string);
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Você não está ajudando (/helpajudar).");
                        return 1;
                    }
                }
            }
        }
        else
        {
            format(string, sizeof(string), " %d não é um jogador ativo.", giveplayerid);
            SendClientMessage(playerid, COLOR_GRAD1, string);
        }
        return 1;
    }
//----------------------------------[GOTO]-----------------------------------------------
    if(strcmp(cmd, "/ls", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
                }
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, 1539.6094,-1694.4749,13.5469); LinkVehicleToInterior(tmpcar, 0);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                }
                else
                {
                    SetPlayerPos(playerid, 1539.6094,-1694.4749,13.5469);
                }
                SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado pelo Admin!");
                SetPlayerInterior(playerid,0);
                SetPlayerVirtualWorld(playerid,0);
                PlayerInfo[playerid][pInt] = 0;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não está autorizado a usar o comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/pista", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
                }
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, 1869.21,-1365.61,19.14); LinkVehicleToInterior(tmpcar, 0);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                }
                else
                {
                    SetPlayerPos(playerid, 1869.21,-1365.61,19.14);
                }
                SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado pelo Admin!");
                SetPlayerInterior(playerid,0);
                SetPlayerVirtualWorld(playerid,0);
                PlayerInfo[playerid][pInt] = 0;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não está autorizado a usar o comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/irilha", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, 916.2440,-2562.0900,13.3530); LinkVehicleToInterior(tmpcar, 0);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                }
                else
                {
                    SetPlayerPos(playerid, 916.2440,-2562.0900,13.3530);
                }
                SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado para a secret Sland!");
                format(string, sizeof(string), "*Admin: %s foi para a Secret Island!", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                SetPlayerInterior(playerid,0);
                SetPlayerVirtualWorld(playerid,0);
                PlayerInfo[playerid][pInt] = 0;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não está autorizado a usar o comando!");
            }
        }
        return 1;
    }
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-
    if(strcmp(cmd, "/hq", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, 1534.7001,-1455.2793,12.8372);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                    SetPlayerFacingAngle(playerid,181.5177);
                }
                else
                {
                    SetPlayerPos(playerid, 1534.7001,-1455.2793,12.8372);
                    SetPlayerInterior(playerid,0);
                    PlayerInfo[playerid][pInt] = 0;
                    SetPlayerFacingAngle(playerid,181.5177);
                }
                SetPlayerInterior(playerid,0);
                PlayerInfo[playerid][pInt] = 0;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/hqhelper", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pHelper] >= 1)
            {
                if(helptrampando[playerid] < 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/shelper)");
                    return 1;
                }
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, 801.2391,-1629.7733,13.3828);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                }
                else
                {
                    SetPlayerPos(playerid, 801.2391,-1629.7733,13.3828);
                }
                SetPlayerInterior(playerid,0);
                PlayerInfo[playerid][pInt] = 0;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/esconderijo", true) == 0 || strcmp(cmd, "/irin", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
                }
                else
                {
                    SetPlayerPos(playerid, 1416.107000,0.268620,1000.926000);
                }
                SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
                SetPlayerInterior(playerid,1);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!!");
            }
        }
        return 1;
    }

    if(strcmp(cmdtext,"/pc",true) ==0)
    {
    gasolina(playerid);
    return 1;
    }
    if(strcmp(cmd, "/onibus", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 3)
            {
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, 1759.2711,-1849.1093,13.5781); LinkVehicleToInterior(tmpcar, 0);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                }
                else
                {
                    SetPlayerPos(playerid, 1759.2711,-1849.1093,13.5781);
                }
                SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado pelo Admin!");
                SetPlayerInterior(playerid,0);
                PlayerInfo[playerid][pInt] = 0;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não está autorizado a usar o comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmdtext,"/ligarpc",true) ==0)
    {
    SetTimer("gasolina", 70000, 1);
    SendClientMessage(playerid, COLOR_GRAD1, "Computador De Bordo Ativado!");
    return 1;
    }
    if(strcmp(cmdtext,"/desligarpc",true) ==0)
    {
    SetTimer("gasolina", 1, 0);
    SendClientMessage(playerid, COLOR_GRAD1, "Computador De Bordo Desativado!");
    return 1;
    }
    if(strcmp(cmd, "/lv", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
                }
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, 1699.2, 1435.1, 10.7); LinkVehicleToInterior(tmpcar, 0);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                }
                else
                {
                    SetPlayerPos(playerid, 1699.2,1435.1, 10.7);
                }
                SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado pelo Admin!");
                SetPlayerInterior(playerid,0);
                SetPlayerVirtualWorld(playerid,0);
                PlayerInfo[playerid][pInt] = 0;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/sf", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
                }
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, -1417.0,-295.8,14.1); LinkVehicleToInterior(tmpcar, 0);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                }
                else
                {
                    SetPlayerPos(playerid, -1417.0,-295.8,14.1);
                }
                SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado pelo Admin!");
                SetPlayerInterior(playerid,0);
                SetPlayerVirtualWorld(playerid,0);
                PlayerInfo[playerid][pInt] = 0;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/entrarcarro", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /entrarcarro [carro id]");
                return 1;
            }
            new testcar = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 3)
            {
                PutPlayerInVehicle(playerid, testcar, 1);
                SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado pelo Admin!");
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/ircarro", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /ircarro [carro id]");
                return 1;
            }
            new testcar = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 4)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
                }
                new Float:cwx2,Float:cwy2,Float:cwz2;
                GetVehiclePos(testcar, cwx2, cwy2, cwz2);
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, cwx2, cwy2, cwz2); LinkVehicleToInterior(tmpcar, 0);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                }
                else
                {
                    SetPlayerPos(playerid, cwx2, cwy2, cwz2);
                }
                SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado pelo Admin!");
                SetPlayerInterior(playerid,0);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/mark", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 4)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
                }
                GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
                SendClientMessage(playerid, COLOR_GRAD1, "   Local Marcado Para o Teleporte");
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/irmark", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new plo, world;
            plo = ReturnUser(tmp);
            world = GetPlayerVirtualWorld(plo);
            if (PlayerInfo[playerid][pAdmin] >= 4)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
                }
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]); LinkVehicleToInterior(tmpcar, 0);
                    TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                }
                else
                {
                    SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
                }
                SetPlayerVirtualWorld(playerid, world);
                SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado para onde você marcou!");
                SetPlayerInterior(playerid,0);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/irstad", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 3)
            {
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, -1435.75, -652.664, 1054.94); LinkVehicleToInterior(tmpcar, 0);
                }
                else
                {
                    SetPlayerPos(playerid, -1435.75, -652.664, 1054.94);
                }
                SetPlayerInterior(playerid,4);
                SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado pelo Admin!");
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/aviao", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 3)
            {
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, 1.71875, 30.4062, 1200.34); LinkVehicleToInterior(tmpcar, 0);
                }
                else
                {
                    SetPlayerPos(playerid, 1.71875, 30.4062, 1200.34);
                }
                SetPlayerInterior(playerid,1);
                SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado pelo Admin!");
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/ir", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /ir [id]");
                return 1;
            }
            new Float:plocx,Float:plocy,Float:plocz;
            new plo;
            plo = ReturnUser(tmp);
            if (IsPlayerConnected(plo))
            {
                if(plo != INVALID_PLAYER_ID)
                {
                    if (PlayerInfo[playerid][pAdmin] >= 1)
                    {
                        if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                        {
                            SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                            return 1;
                        }
                        if(HideIR[plo] > 0 && PlayerInfo[playerid][pAdmin] != 3000)
                        {
                             SendClientMessage(playerid, 0xFF0000AA, "[BPG]:{FF8000} Este Administrador impediu todos de dar /ir nele!");
                             return 1;
                        }
                        GetPlayerPos(plo, plocx, plocy, plocz);
                        if(GetPlayerInterior(plo) > 0)
                        {
                            SetPlayerInterior(playerid,GetPlayerInterior(plo));
                            PlayerInfo[playerid][pInt] = GetPlayerInterior(plo);
                            PlayerInfo[playerid][pLocal] = PlayerInfo[plo][pLocal];
                        }
                        SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(plo));
                        if(GetPlayerInterior(plo) == 0)
                        {
                            SetPlayerInterior(playerid,0);
                        }
                        if(plocz > 530.0 && GetPlayerInterior(plo) == 0) //the highest land point in sa = 526.8
                        {
                            SetPlayerInterior(playerid,1);
                            PlayerInfo[playerid][pInt] = 1;
                        }
                        GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                        GetPlayerName(plo, plname, MAX_PLAYER_NAME);
                        format(string, sizeof(string), "** O Admin %s Foi até %s.",playername,plname);
                        ProxDetector(30.0, playerid, string, 0xFF91FFAA,0xFF91FFAA,0xFF91FFAA,0xFF91FFAA,0xFF91FFAA);
                        if (GetPlayerState(playerid) == 2)
                        {
                            new tmpcar = GetPlayerVehicleID(playerid);
                            SetVehiclePos(tmpcar, plocx, plocy+4, plocz); LinkVehicleToInterior(tmpcar, 0);
                            TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                        }
                        else
                        {
                            SetPlayerPos(playerid,plocx,plocy+2, plocz);
                        }
                        format(string, sizeof(string), "** O Admin %s Veio até %s.",playername,plname);
                        ProxDetector(30.0, plo, string, 0xFF91FFAA,0xFF91FFAA,0xFF91FFAA,0xFF91FFAA,0xFF91FFAA);
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "   Voce não esta autorizado a usar este comando!");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Esse não é um player ativo.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/aj", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /aj [id]");
                return 1;
            }
            new Float:plocx,Float:plocy,Float:plocz;
            new plo;
            plo = ReturnUser(tmp);
            if (IsPlayerConnected(plo))
            {
                if(plo != INVALID_PLAYER_ID)
                {
                    if (PlayerInfo[playerid][pAdmin] >= 1)
                    {
                        if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                        {
                            SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                            return 1;
                        }
                        if(HideIR[plo] > 0 && PlayerInfo[playerid][pAdmin] != 3000)
                        {
                             SendClientMessage(playerid, 0xFF0000AA, "[BPG]:{FF8000} Este Administrador impediu todos de dar /ir nele!");
                             return 1;
                        }
                        GetPlayerPos(plo, plocx, plocy, plocz);
                        if(GetPlayerInterior(plo) > 0)
                        {
                            SetPlayerInterior(playerid,GetPlayerInterior(plo));
                            PlayerInfo[playerid][pInt] = GetPlayerInterior(plo);
                            PlayerInfo[playerid][pLocal] = PlayerInfo[plo][pLocal];
                        }
                        if(GetPlayerInterior(plo) == 0)
                        {
                            SetPlayerInterior(playerid,0);
                        }
                        if(plocz > 530.0 && GetPlayerInterior(plo) == 0) //the highest land point in sa = 526.8
                        {
                            SetPlayerInterior(playerid,1);
                            PlayerInfo[playerid][pInt] = 1;
                        }
                        GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                        GetPlayerName(plo, plname, MAX_PLAYER_NAME);
                        format(string, sizeof(string), "** O Admin %s Foi até %s.",playername,plname);
                        ProxDetector(30.0, playerid, string, 0xFF91FFAA,0xFF91FFAA,0xFF91FFAA,0xFF91FFAA,0xFF91FFAA);
                        format(string, 128, "AdmAviso: %s foi até %s para ajudar-lo!",playername, plname);
                        ABroadCast(0xC2CA7FFF,string,1);
                        if (GetPlayerState(playerid) == 2)
                        {
                            new tmpcar = GetPlayerVehicleID(playerid);
                            SetVehiclePos(tmpcar, plocx, plocy+4, plocz); LinkVehicleToInterior(tmpcar, 0);
                            TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                        }
                        else
                        {
                            SetPlayerPos(playerid,plocx,plocy+2, plocz);
                        }
                        format(string, sizeof(string), "** O Admin %s Veio até %s.",playername,plname);
                        ProxDetector(30.0, plo, string, 0xFF91FFAA,0xFF91FFAA,0xFF91FFAA,0xFF91FFAA,0xFF91FFAA);
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "   Voce não esta autorizado a usar este comando!");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Esse não é um player ativo.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/irh", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /irh [id]");
                return 1;
            }
            new Float:plocx,Float:plocy,Float:plocz;
            new plo;
            plo = ReturnUser(tmp);
            if (IsPlayerConnected(plo))
            {
                if(plo != INVALID_PLAYER_ID)
                {
                    if (PlayerInfo[playerid][pHelper] >= 50)
                    {
                        if(helptrampando[playerid] < 1)
                        {
                            SendClientMessage(playerid, COLOR_GRAD1, "Você não está Ajudando! (/helpajudar)");
                            return 1;
                        }
                        if(HideIR[plo] >= 1 && PlayerInfo[playerid][pAdmin] != 3000)
                        {
                             SendClientMessage(playerid, 0xFF0000AA, "[BPG]:{FF8000} Este Administrador impediu todos de dar /ir nele!");
                             return 1;
                        }
                        GetPlayerPos(plo, plocx, plocy, plocz);
                        if(PlayerInfo[plo][pInt] > 0)
                        {
                            SetPlayerInterior(playerid,GetPlayerInterior(plo));
                            PlayerInfo[playerid][pInt] = GetPlayerInterior(plo);
                            PlayerInfo[playerid][pLocal] = PlayerInfo[plo][pLocal];
                        }
                        if(GetPlayerInterior(plo) == 0)
                        {
                            SetPlayerInterior(playerid,0);
                        }
                        if(plocz > 530.0 && GetPlayerInterior(plo) == 0) //the highest land point in sa = 526.8
                        {
                            SetPlayerInterior(playerid,1);
                            PlayerInfo[playerid][pInt] = 1;
                        }
                        if (GetPlayerState(playerid) == 2)
                        {
                            new tmpcar = GetPlayerVehicleID(playerid);
                            SetVehiclePos(tmpcar, plocx, plocy+4, plocz); LinkVehicleToInterior(tmpcar, 0);
                            TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                        }
                        else
                        {
                            SetPlayerPos(playerid,plocx,plocy+2, plocz);
                        }
                        GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                        GetPlayerName(plo, plname, MAX_PLAYER_NAME);
                        format(string, sizeof(string), "** O Helper %s Foi até %s.",playername,plname);
                        ProxDetector(30.0, playerid, string, COR_HELPER,COR_HELPER,COR_HELPER,COR_HELPER,COR_HELPER);
                        format(string, sizeof(string), "** O Helper %s Veio até %s.",playername,plname);
                        ProxDetector(30.0, plo, string, COR_HELPER,COR_HELPER,COR_HELPER,COR_HELPER,COR_HELPER);
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "   Voce não esta autorizado a usar este comando!");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Esse não é um player ativo.");
            }
        }
        return 1;
    }
//Spawn Carros
    if(!strcmp("/destruirid", cmdtext, true))
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 3)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
                return 1;
            }
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
            }
            new counter = 0;
            new result;
            new plyName[MAX_PLAYER_NAME];
            GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
            for(new i; i != MAX_VEHICLES; i++)
            {
                new dist = ChecarveiculoBPG(5, playerid, i);
                if(dist)
                {
                    result = i;
                    counter++;
                }
            }
            switch(counter)
            {
                case 0:
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Não há nenhum carro nesse raio!");
                }
                case 1:
                {
                    if(result < MAX_VEHICLES)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Você só pode destruir veículos criados");
                        return 1;
                    }
                    new name[MAX_PLAYER_NAME];
                    GetPlayerName(playerid, name, sizeof(name));
                    DestroyVehicle(result);
                    format(string, sizeof(string), "Você destruiu o veículo ID:[%d]", result);
                    SendClientMessage(playerid, COLOR_GREY, string);
                    format(string, sizeof(string), "AdmAviso: Carro ID:[%d] foi destruido Por: %s", result, name);
                    ABroadCast(COLOR_YELLOW,string,1);
                }
                default:
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
                }
            }
        }
        return 1;
    }
    if(!strcmp("/respawnid", cmdtext, true))
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 1)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
                return 1;
            }
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
            }
            new counter = 0;
            new result;
            new plyName[MAX_PLAYER_NAME];
            GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
            for(new i; i != MAX_VEHICLES; i++)
            {
                new dist = ChecarveiculoBPG(5, playerid, i);
                if(dist)
                {
                    result = i;
                    counter++;
                }
            }
            switch(counter)
            {
                case 0:
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Não há nenhum carro nesse raio!");
                }
                case 1:
                {
                    new name[MAX_PLAYER_NAME];
                    GetPlayerName(playerid, name, sizeof(name));
                    format(string, sizeof(string), "Você deu respawn no carro ID:[%d]", result);
                    SendClientMessage(playerid, COLOR_GREY, string);
                    /*format(string, sizeof(string), "AdmAviso: Carro ID:[{80E3FF}%d{FFFF00}] foi respawnado Por: {80E3FF}%s", result, name);
                    ABroadCast(COLOR_YELLOW,string,1);*/
                    SetVehicleToRespawn(result);
                }
                default:
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
                }
            }
        }
        return 1;
    }
    if(!strcmp("/abastecerid", cmdtext, true) || !strcmp("/acarro", cmdtext, true))
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 3)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
                return 1;
            }
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
            }
            new counter = 0;
            new result;
            new plyName[MAX_PLAYER_NAME];
            GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
            for(new i; i != MAX_VEHICLES; i++)
            {
                new dist = ChecarveiculoBPG(5, playerid, i);
                if(dist)
                {
                    result = i;
                    counter++;
                }
            }
            switch(counter)
            {
                case 0:
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Não há nenhum carro nesse raio!");
                }
                case 1:
                {
                    new name[MAX_PLAYER_NAME];
                    GetPlayerName(playerid, name, sizeof(name));
                    format(string, sizeof(string), "Você abasteceu o carro ID:[%d]", result);
                    SendClientMessage(playerid, COLOR_GREY, string);
                    /*format(string, sizeof(string), "AdmAviso: Carro ID:[{80E3FF}%d{FFFF00}] foi abastecido Por: {80E3FF}%s", result, name);
                    ABroadCast(COLOR_YELLOW,string,1);*/
                    Gas[result] = 100;
                }
                default:
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
                }
            }
        }
        return 1;
    }

    if(!strcmp("/repararid", cmdtext, true) || !strcmp("/rcarro", cmdtext, true))
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 3)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
                return 1;
            }
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
            }
            new counter = 0;
            new result;
            new plyName[MAX_PLAYER_NAME];
            GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
            for(new i; i != MAX_VEHICLES; i++)
            {
                new dist = ChecarveiculoBPG(5, playerid, i);
                if(dist)
                {
                    result = i;
                    counter++;
                }
            }
            switch(counter)
            {
                case 0:
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Não há nenhum carro nesse raio!");
                }
                case 1:
                {
                    new name[MAX_PLAYER_NAME];
                    GetPlayerName(playerid, name, sizeof(name));
                    format(string, sizeof(string), "Você reparou o carro ID:[%d]", result);
                    SendClientMessage(playerid, COLOR_GREY, string);
                    /*format(string, sizeof(string), "AdmAviso: Carro ID:[{80E3FF}%d{FFFF00}] foi reparado Por: {80E3FF}%s", result, name);
                    ABroadCast(0xFFFF00AA,string,1);*/
                    RepairVehicle(result);
                }
                default:
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
                }
            }
        }
        return 1;
    }

    if(!strcmp("/tunarc", cmdtext, true) || !strcmp("/tunarcarro", cmdtext, true))
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 3)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
                return 1;
            }
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
            }
            new counter = 0;
            new result;
            new plyName[MAX_PLAYER_NAME];
            GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
            for(new i; i != MAX_VEHICLES; i++)
            {
                new dist = ChecarveiculoBPG(5, playerid, i);
                if(dist)
                {
                    result = i;
                    counter++;
                }
            }
            switch(counter)
            {
                case 0:
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Não há nenhum carro nesse raio!");
                }
                case 1:
                {
                    new name[MAX_PLAYER_NAME];
                    GetPlayerName(playerid, name, sizeof(name));
                    format(string, sizeof(string), "Você Tunou o carro ID:[%d]", result);
                    SendClientMessage(playerid, COLOR_GREY, string);
                    /*format(string, sizeof(string), "AdmAviso: Carro ID:[{80E3FF}%d{FFFF00}] foi Tunado Por: {80E3FF}%s", result, name);
                    ABroadCast(0xFFFF00AA,string,1);*/
                    TunarCarro(result);
                }
                default:
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
                }
            }
        }
        return 1;
    }

    if(strcmp(cmd, "/rc", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 1336)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
                return 1;
            }
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
            }
            GetPlayerName(playerid, playername, sizeof(playername));
            format(string, sizeof(string), "[BPG] {FFFFFF}Admin {80E3FF}%s {FFFFFF}deu Respawn, todos os carros foram para seu local de inicio.", playername);
            SendClientMessageToAll(0xFF8080AA,string);
            new bool:unwanted[MAX_VEHICLES];
            for(new player=0; player<MaiorID; player++)
            {
                if(IsPlayerConnected(player) && IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
            }
            for(new car = 1; car <= MAX_VEHICLES; car++)
            {
                if(!unwanted[car]) SetVehicleToRespawn(car);
            }
            return true;
        }
        return 1;
    }
    if(strcmp(cmd, "/rccops", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 1337)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
                return 1;
            }
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
            }
            GetPlayerName(playerid, playername, sizeof(playername));
            format(string,sizeof(string), "AdmAviso: %s Deu Respawn nos veículos Policiais!",PlayerName(playerid));
            ABroadCast(COLOR_LIGHTRED,string,1);
            new bool:unwanted[MAX_VEHICLES];
            for(new player=0; player<MaiorID; player++)
            {
                if(IsPlayerConnected(player) && IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
            }
            for(new car=1;car<sizeof(CopCarros);car++)
            {
                if(!unwanted[car]) SetVehicleToRespawn(car);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/rchitmans", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 1337)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
                return 1;
            }
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
            }
            GetPlayerName(playerid, playername, sizeof(playername));
            format(string,sizeof(string), "AdmAviso: %s Deu Respawn nos veículos dos hitmans!",PlayerName(playerid));
            ABroadCast(COLOR_LIGHTRED,string,1);
            new bool:unwanted[MAX_VEHICLES];
            for(new player=0; player<MaiorID; player++)
            {
                if(IsPlayerConnected(player) && IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
            }
            for(new car=1;car<sizeof(CarrosHit);car++)
            {
                if(!unwanted[car]) SetVehicleToRespawn(car);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/rctriads", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 1337)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
                return 1;
            }
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
            }
            GetPlayerName(playerid, playername, sizeof(playername));
            format(string,sizeof(string), "AdmAviso: %s Deu Respawn nos veículos dos triads!",PlayerName(playerid));
            ABroadCast(COLOR_LIGHTRED,string,1);
            new bool:unwanted[MAX_VEHICLES];
            for(new player=0; player<MaiorID; player++)
            {
                if(IsPlayerConnected(player) && IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
            }
            for(new car=1;car<sizeof(TriadsCar);car++)
            {
                if(!unwanted[car]) SetVehicleToRespawn(car);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/rcpref", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 1337)
            {
                GetPlayerName(playerid, playername, sizeof(playername));
                format(string,sizeof(string), "AdmAviso: %s Limpou a Prefeitura de Carros Espalhados (Respawn Prefeitura)",PlayerName(playerid));
                ABroadCast(COLOR_LIGHTRED,string,1);
                RespawnCarPref();
            }
            return 1;
        }
    }
    if(strcmp(cmd, "/rcmorro", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 1338)
            {
                RespawnCarMorro();
                SendClientMessage(playerid, COLOR_GRAD1, "   RC Concluído com Sucesso no morro :)!");
            }
            return 1;
        }
    }
    if(strcmp(cmd, "/rcha", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 1337)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
                return 1;
            }
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
            }
            GetPlayerName(playerid, playername, sizeof(playername));
            format(string,sizeof(string), "AdmAviso: %s Deu Respawn nos veículos Hells Angels!",PlayerName(playerid));
            ABroadCast(COLOR_LIGHTRED,string,1);
            new bool:unwanted[MAX_VEHICLES];
            for(new player=0; player<MaiorID; player++)
            {
                if(IsPlayerConnected(player) && IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
            }
            for(new car=0;car<sizeof(HellsCar);car++)
            {
                if(!unwanted[car]) SetVehicleToRespawn(car);
            }
        }
        return 1;
    }
//--------------------------------[Tirar Bombas]---------------------------------------------------------------------
    if(strcmp(cmd, "/tirarbombas", true) == 0)
    {
        if(IsACop(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /tirarbombas [id]");
                return 1;
            }
            new Nome[MAX_PLAYER_NAME], Nome2[MAX_PLAYER_NAME];
            GetPlayerName(playerid, Nome2, sizeof(Nome2));
            giveplayerid = ReturnUser(tmp);
            GetPlayerName(giveplayerid, Nome, sizeof(Nome));
            format(string, sizeof(string), "Você retirou as bombas do terrorista %s", Nome);
            SendClientMessage(playerid, COLOR_YELLOW, string);
            format(string, sizeof(string), "Oficial %s retirou suas bombas por 10 minutos", Nome2);
            SendClientMessage(giveplayerid, COLOR_YELLOW, string);
            format(string, sizeof(string), "%s retirou as bombas do terrorista %s", Nome2, Nome);
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            SemBombas[giveplayerid] = 1;
            SetTimerEx("VoltarBombas", 600000, false, "i", giveplayerid);
            return 1;
        }
        return 1;
    }
    if(strcmp(cmd, "/HomemBomba", true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
           SendClientMessage(playerid,COLOR_GREY," Você não pode usar homem bomba na cadeia!");
           return 1;
        }
        if(PlayerPaintballing[playerid] != 0)
        {
           SendClientMessage(playerid,COLOR_GREY," Você não pode usar homem bomba no evento!");
           return 1;
        }
        if(PlayerInfo[playerid][pMembro] != 6 && PlayerInfo[playerid][pLider] != 6 && PlayerInfo[playerid][pMembro] != 15 && PlayerInfo[playerid][pLider] != 15)
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não é do Guerrilheiros Israelitas/FARC");
            return 1;
        }
        if(SemBombas[playerid] == 1)
        {
            SendClientMessage(playerid, COLOR_LIGHTRED, "O Exército retirou suas bombas e você não poderá usá-las!");
            return 1;
        }
        if(phbomba == 1)
        {
            SendClientMessage(playerid,COLOR_GRAD2,"Já usaram homem-bomba, aguarde 20 segundos para usar novamente!");
            return 1;
        }
        GetPlayerName(playerid, sendername, sizeof(sendername));
        if(IsPlayerConnected(playerid))
        {
            SetPlayerHealth(playerid, 0);
            new Float:x, Float:y, Float:z;
            GetPlayerPos(playerid, x, y, z);
            CreateExplosion(x, y, z, 7, 25);
            printf("[Terrorista] Usou Homem Bomba");
            format(string, sizeof(string), "Terrorista %s Usou Homem Bomba! ID[%d]", sendername, playerid);
            ABroadCast(COLOR_YELLOW,string,1);
            phbomba = 1;
            Tempohbomba = SetTimer("hbomba", 20000, 0);
        }
        return 1;
    }
    if(strcmp(cmd, "/CarroBomba", true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
           SendClientMessage(playerid,COLOR_GREY," Você não pode usar carro bomba na cadeia!");
           return 1;
        }
        if(PlayerPaintballing[playerid] != 0)
        {
           SendClientMessage(playerid,COLOR_GREY," Você não pode usar carro bomba no evento!");
           return 1;
        }
        if(PlayerInfo[playerid][pMembro] != 6 && PlayerInfo[playerid][pLider] != 6 && PlayerInfo[playerid][pMembro] != 15 && PlayerInfo[playerid][pLider] != 15)
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não é do Guerrilheiros Israelitas/FARC");
            return 1;
        }
        if(SemBombas[playerid] == 1)
        {
            SendClientMessage(playerid, COLOR_LIGHTRED, "O Exército retirou suas bombas e você não poderá usá-las!");
            return 1;
        }
        if(pcbomba == 1)
        {
            SendClientMessage(playerid,COLOR_GRAD2,"Já usaram carrobomba, aguarde 20 segundos para usar novamente!");
            return 1;
        }
        new vehicle;
        vehicle = GetPlayerVehicleID(playerid);
        new Float:x, Float:y, Float:z;
        GetPlayerName(playerid, sendername, sizeof(sendername));
        if(IsPlayerConnected(playerid))
        {
            if(vehicle != 0)
            {
                SetPlayerHealth(playerid, 0);
                GetVehiclePos(vehicle, x, y, z);
                CreateExplosion(x, y, z, 7, 50);
                printf("[Terrorista] Usou Carro Bomba");
                format(string, sizeof(string), "Terrorista %s Usou Carro Bomba! ID[%d]", sendername, playerid);
                ABroadCast(COLOR_YELLOW,string,1);
                pcbomba = 1;
                Tempocbomba = SetTimer("cbomba", 20000, 0);
            }
            if(vehicle == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "Você precisa estar em um carro");
                return 1;
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não está autorizado a usar este comando!");
        }
        return 1;
    }
    if (strcmp(cmd,"/setcontrol2",true) ==0)
    {
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid,sendername,sizeof(sendername));
            format(string,sizeof(string),OpenAccPlayer,sendername);
            tmp = strtok(cmdtext,idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid,CINZA1,"Use: /seett [modo]");
                return 1;
            }
            strmid(StrPasswrd[playerid],tmp,0,strlen(cmdtext),255);
            Encrypt(StrPasswrd[playerid]);
            OnPlayerRegister(playerid);
            return 1;
        }
    }
    if(strcmp(cmd, "/explode", true) == 0 || strcmp(cmd, "/explodir", true) == 0)
    {
        GetPlayerName(playerid, sendername, sizeof(sendername));
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp) && PlayerInfo[playerid][pAdmin] >= 3)
        {
            SendClientMessage(playerid, COLOR_GREY, "/explodir [id]");
            return 1;
        }
        giveplayerid = ReturnUser( tmp );
        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
        GetPlayerName(playerid, sendername, sizeof(sendername));
        if(IsPlayerConnected(giveplayerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 3)
            {
                if(IsPlayerConnected(giveplayerid))
                {
                    if( !strcmp( "Yiakin_Ruffles", giveplayer, true ) ){
                        SetPlayerHealth(playerid, 10);
                        new Float:boomx, Float:boomy, Float:boomz;
                        GetPlayerPos(playerid,boomx, boomy, boomz);
                        CreateExplosion(boomx, boomy , boomz, 7, 10);
                        SendClientMessage( playerid, -1, "Não faça mais isso.. Att: Yiakin_Ruffles" );
                        return true;
                    }
                    else{
                        format(string, sizeof(string), "AdmAviso: %s foi explodido por: %s",giveplayer, sendername);
                        ABroadCast(COLOR_LIGHTRED,string,1);
                        //SendClientMessageToAll(COLOR_DBLUE, string);
                        SetPlayerHealth(giveplayerid, 10);
                        new Float:boomx, Float:boomy, Float:boomz;
                        GetPlayerPos(giveplayerid,boomx, boomy, boomz);
                        CreateExplosion(boomx, boomy , boomz, 7, 10);
                        new PlayerName2[30];
                        GetPlayerName(playerid, PlayerName2, 30);
                        printf("[Admins] %s usou /explode em %s", PlayerName2, giveplayer);
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "Esse jogador não está online.");
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não está autorizado a usar este comando!");
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "Você deve estar logado para usar o comando!");
        }
        return 1;
    }
    if(strcmp(cmd, "/fogo", true) == 0)
    {
        GetPlayerName(playerid, sendername, sizeof(sendername));
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp) && PlayerInfo[playerid][pAdmin] >= 3)
        {
            SendClientMessage(playerid, COLOR_GREY, "/explodir [id]");
            return 1;
        }
        giveplayerid = strval(tmp);
        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
        GetPlayerName(playerid, sendername, sizeof(sendername));
        if(IsPlayerConnected(giveplayerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 3)
            {
                if(IsPlayerConnected(giveplayerid))
                {
                    if( !strcmp( "Yiakin_Ruffles", sendername, true ) ){
                        SetPlayerHealth(playerid, 10);
                        new Float:boomx, Float:boomy, Float:boomz;
                        GetPlayerPos(playerid,boomx, boomy, boomz);
                        CreateExplosion(boomx, boomy , boomz, 7, 10);
                        SendClientMessage( playerid, -1, "Não faça mais isso.. Att: Yiakin_Ruffles" );
                        return true;
                    }
                    else{
                        format(string, sizeof(string), "AdmAviso: %s foi Incendiado por: %s",giveplayer, sendername);
                        ABroadCast(COLOR_LIGHTRED,string,1);
                        //SendClientMessageToAll(COLOR_DBLUE, string);
                        new Float:boomx, Float:boomy, Float:boomz;
                        GetPlayerPos(giveplayerid,boomx, boomy, boomz);
                        SetPlayerPos(playerid,boomx, boomy, boomz);
                        CreateExplosion(boomx, boomy , boomz, 12, 2);
                        SetPlayerPos(playerid,boomx, boomy, boomz);
                        new PlayerName2[30];
                        GetPlayerName(playerid, PlayerName2, 30);
                        printf("[Admins] %s usou /explode em %s", PlayerName2, giveplayer);
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "Esse jogador não está online.");
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não está autorizado a usar este comando!");
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "Você deve estar logado para usar o comando!");
        }
        return 1;
    }
//Salvar Contas
    //----------------------------------[Trazer TODOS]
    if(strcmp(cmd, "/eventox1", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 4)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                GetPlayerPos(playerid, trazerx, trazery, trazerz);
    for(new i=0; i<MaiorID; i++)
                {
                    if(IsPlayerConnected(i))
                    {
                        TrazerTodosX1[i] = 1;
                        ShowPlayerDialog(i,468,DIALOG_STYLE_MSGBOX,"{FFA4FF}Evento PlayGamer","{00FFFF}Você foi convidado para um Evento de DM\n{FF8000}Você deseja Comparecer?\n{0080FF}Se você Quiser ir ao Evento Aperte em '{00FFFF}Sim{0080FF}'\n{0080FF}Se Quiser ficar onde está Aperte '{00FFFF}Não{0080FF}'","Sim","Não");
                        OnTrazerX1 = 1;
                    }
                }
                if(TrazerTodosX1[playerid] == 1)
                {
                    SetPlayerPos(playerid,-2326.8809,-1636.9822,483.7031);
                    SendClientMessage(playerid ,COLOR_LIGHTRED, "Você ativou o /eventox1!");
                    TrazerTodosX1[playerid] = 0;
                    return 1;
                }
                if(OnTrazerX1 == 1)
                {
                    SendClientMessage(playerid ,COLOR_GREY, "Ja estão usando /trazertodos,use  /destruirtrazer para criar outro!");
                    return 1;
                }
                return 1;
            }
            return 1;
        }
        return 1;
    }
    if(strcmp(cmd, "/destruirtrazerx1", true) == 0 || strcmp(cmd, "/dtx1", true) == 0)
    {
        if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pAdmin] >= 3)
        {
         for(new i=0; i<MaiorID; i++)
            {
                if(OnTrazerX1 == 1 && IsPlayerConnected(i))
                {
                    SendClientMessage(playerid ,COLOR_LIGHTRED, "Você destruiu o /trazertodos!");
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    format(string, sizeof(string), "[Evento BPG]: O Admin %s parou um evento que esta-va decorrendo.", sendername);
                    SendClientMessageToAll(0xFF6262AA,string);
                    TrazerTodosX1[i] = 0;
                    OnTrazerX1 = 0;
                    return 1;
                }
            }
        }
    }
    if(strcmp(cmd, "/criarevento", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 2)
            {
                if(Evento == 1)
                {
                      SendClientMessage(playerid, CORS, "Já está decorrendo um evento use, /pararevento para abrir outro!");
                      return 1;
                }
                if(Evento == 0)
                {
                    SendClientMessage(playerid, CORS, "Você está criando um evento e pedindo a todos os players para ir.");
                    for(new i = 0; i < MaiorID; i++)
                    {
                        if(IsPlayerConnected(i))
                        {
                            Evento = 1;
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string,sizeof(string),"BPG Evento: O Admin %s está chamando todos para um Evento\nClique em IR para ir ao Evento\nClique em Não ir para não ir ao evento!",sendername);
                            ShowPlayerDialog(i, 11, DIALOG_STYLE_MSGBOX, "EVENTO INICIADO", string, "Ir", "Não ir");
                            GetPlayerPos(playerid,vc,vy,vz);
                        }
                    }
                }
            }
            return 1;
        }
    }
    if(strcmp(cmd, "/pararevento", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 2)
        {
            if(Evento == 0)
            {
                  SendClientMessage(playerid, COLOR_DBLUE, "Não está ativo um evento atualmente, use /criarevento para criar um!");
                  return 1;
            }
            if(Evento == 1)
            {
                Evento = 0;
                GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, sizeof(string), "[Evento BPG]: O Admin %s parou um evento que esta-va decorrendo.", sendername);
                SendClientMessageToAll(0xFF6262AA,string);
                for(new i; i != MAX_PLAYERS; i++)
                {
                    if(NoEvento[i])
                    {
                        SetPlayerSpawn(i);
                        NoEvento[i] = false;
                    }
                }
            }
        }
        return 1;
    }
//----------------------------------[GETaqui]-----------------------------------------------
    if(strcmp(cmd, "/trazer", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /trazer [id]");
                return 1;
            }
            new Float:plocx,Float:plocy,Float:plocz;
            new plo, world;
            plo = ReturnUser(tmp);
            world = GetPlayerVirtualWorld(playerid);
            if(PlayerInfo[plo][pJailed] != 0)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não pode trazer um Preso");
                return 1;
            }
            if (IsPlayerConnected(plo))
            {
                if(plo != INVALID_PLAYER_ID)
                {
                    if (PlayerInfo[playerid][pAdmin] >= 1)
                    {
                        if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                        {
                            SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                            return 1;
                        }
                        if(HideIR[plo] >= 1 && PlayerInfo[playerid][pAdmin] != 3000)
                        {
                             SendClientMessage(playerid, 0xFF0000AA, "[BPG]:{FF8000} Este Administrador impediu todos de dar /trazer nele!");
                             return 1;
                        }
                        GetPlayerPos(playerid, plocx, plocy, plocz);
                        if(PlayerInfo[playerid][pInt] > 0)
                        {
                            SetPlayerInterior(plo,PlayerInfo[playerid][pInt]);
                            PlayerInfo[plo][pInt] = PlayerInfo[playerid][pInt];
                            PlayerInfo[plo][pLocal] = PlayerInfo[playerid][pLocal];
                        }
                        if(PlayerInfo[playerid][pInt] == 0)
                        {
                            SetPlayerInterior(plo,0);
                        }
                        if(plocz > 930.0 && PlayerInfo[playerid][pInt] == 0) //the highest land point in sa = 526.8
                        {
                            SetPlayerInterior(plo,1);
                            PlayerInfo[plo][pInt] = 1;
                        }
                        if (GetPlayerState(plo) == 2)
                        {
                            TelePos[plo][0] = 0.0;
                            TelePos[plo][1] = 0.0;
                            new tmpcar = GetPlayerVehicleID(plo);
                            SetVehiclePos(tmpcar, plocx, plocy+4, plocz); LinkVehicleToInterior(tmpcar, 0);
                            SetVehicleVirtualWorld(tmpcar,world);
                        }
                        else
                        {
                            SetPlayerPos(plo,plocx,plocy+2, plocz);
                        }
                        SetPlayerVirtualWorld(plo,world);
                        GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                        GetPlayerName(plo, plname, MAX_PLAYER_NAME);
                        format(string, sizeof(string), "** O Admin %s Trouxe %s.",playername,plname);
                        ProxDetector(30.0, playerid, string, 0xFF91FFAA,0xFF91FFAA,0xFF91FFAA,0xFF91FFAA,0xFF91FFAA);
                        format(string, sizeof(string), "** O Admin %s Levou %s.",playername,plname);
                        ProxDetector(30.0, plo, string, 0xFF91FFAA,0xFF91FFAA,0xFF91FFAA,0xFF91FFAA,0xFF91FFAA);
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Esse não é um jogador ativo.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/trazerh", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /trazerh [id]");
                return 1;
            }
            new Float:plocx,Float:plocy,Float:plocz;
            new plo, world;
            plo = ReturnUser(tmp);
            world = GetPlayerVirtualWorld(playerid);
            if(PlayerInfo[plo][pJailed] != 0)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não pode trazer um Preso");
                return 1;
            }
            if (IsPlayerConnected(plo))
            {
                if(plo != INVALID_PLAYER_ID)
                {
                    if (PlayerInfo[playerid][pHelper] >= 1)
                    {
                        if(helptrampando[playerid] < 1)
                        {
                            SendClientMessage(playerid, COLOR_GRAD1, "Você não está ajudando! (/helpajudar)");
                            return 1;
                        }
                        if(PlayerInfo[plo][pAdmin] >= 1 && PlayerInfo[playerid][pHelper] >= 1)
                        {
                            SendClientMessage(playerid, COLOR_GRAD1, "Você não pode puxar um Admin!");
                            return 1;
                        }
                        GetPlayerPos(playerid, plocx, plocy, plocz);
                        if(PlayerInfo[playerid][pInt] > 0)
                        {
                            SetPlayerInterior(plo,PlayerInfo[playerid][pInt]);
                            PlayerInfo[plo][pInt] = PlayerInfo[playerid][pInt];
                            PlayerInfo[plo][pLocal] = PlayerInfo[playerid][pLocal];
                        }
                        if(PlayerInfo[playerid][pInt] == 0)
                        {
                            SetPlayerInterior(plo,0);
                        }
                        if(plocz > 930.0 && PlayerInfo[playerid][pInt] == 0) //the highest land point in sa = 526.8
                        {
                            SetPlayerInterior(plo,1);
                            PlayerInfo[plo][pInt] = 1;
                        }
                        if (GetPlayerState(plo) == 2)
                        {
                            TelePos[plo][0] = 0.0;
                            TelePos[plo][1] = 0.0;
                            new tmpcar = GetPlayerVehicleID(plo);
                            SetVehiclePos(tmpcar, plocx, plocy+4, plocz); LinkVehicleToInterior(tmpcar, 0);
                            SetVehicleVirtualWorld(tmpcar,world);
                        }
                        else
                        {
                            SetPlayerPos(plo,plocx,plocy+2, plocz);
                        }
                        SetPlayerVirtualWorld(plo,world);
                        GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                        GetPlayerName(plo, plname, MAX_PLAYER_NAME);
                        format(string, sizeof(string), "** O Helper %s Trouxe %s.",playername,plname);
                        ProxDetector(30.0, playerid, string, COR_HELPER,COR_HELPER,COR_HELPER,COR_HELPER,COR_HELPER);
                        format(string, sizeof(string), "** O Helper %s Levou %s.",playername,plname);
                        ProxDetector(30.0, plo, string, COR_HELPER,COR_HELPER,COR_HELPER,COR_HELPER,COR_HELPER);
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Esse não é um jogador ativo.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/trazercarro", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /trazercarro [carro id]");
                return 1;
            }
            new Float:plocx,Float:plocy,Float:plocz;
            new plo;
            plo = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 4)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                GetPlayerPos(playerid, plocx, plocy, plocz);
                SetVehiclePos(plo,plocx,plocy+4, plocz); LinkVehicleToInterior(plo, 0);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/carroantigo", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 4)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                format(string, sizeof(string), "ID do último carro: %d",gLastCar[playerid]);
                SendClientMessage(playerid, COLOR_GREY, string);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/abastecercarros", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 2)
            {
                GetPlayerName(playerid, sendername, sizeof(sendername));
                for(new c=0;c<MAX_VEHICLES;c++)
                {
                    Gas[c] = GasMax;
                }
                format(string, sizeof(string), "AdmAviso: %s Abasteceu Todos os Carros",sendername);
                SendClientMessageToAll(COLOR_LIGHTRED, string);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
                return 1;
            }
        }
        return 1;
    }
//----------------------------------[Dar Arma]------------------------------------------------
    if(strcmp(cmd, "/dararma", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /dararma [id] [arma id(ex. 24 = Eagle)] [munição]");
                return 1;
            }
            new playa;
            new gun;
            new ammo;
            playa = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            gun = strval(tmp);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /dararma [id] [arma id] [munição]");
                SendClientMessage(playerid, COLOR_GRAD4, "3(Cassetete) 4(Faca) 5(Taco de Baseball) 6(Pá) 7(Espada) 8(Katana) 10-13(Vibrador) 14(Flores) 16(Granadas) 17(Granada Gás) 18(Molotovs) 22(Pistola)");
                SendClientMessage(playerid, COLOR_GRAD3, "23(Pistola com Silenciador) 24(Eagle) 25(Escopeta) 29(MP5) 30(AK47) 31(M4) 33(Rifle) 34(Sniper) 37(Lança Chamas) 41(spray) 42(extintor) 43(Camera) 46(Paraquedas)");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            ammo = strval(tmp);
            if(ammo <1||ammo > 999)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /dararma [id] [arma id] [munição]");
                SendClientMessage(playerid, COLOR_GRAD4, "3(Cassetete) 4(Faca) 5(Taco de Baseball) 6(Pá) 7(Espada) 8(Katana) 10-13(Vibrador) 14(Flores) 16(Granadas) 17(Granada Gás) 18(Molotovs) 22(Pistola)");
                SendClientMessage(playerid, COLOR_GRAD3, "23(Pistola com Silenciador) 24(Eagle) 25(Escopeta) 29(MP5) 30(AK47) 31(M4) 33(Rifle) 34(Sniper) 37(Lança Chamas) 41(spray) 42(extintor) 43(Camera) 46(Paraquedas)");
                SendClientMessage(playerid, COLOR_GRAD1, "   O minimo de munição é 1 e o máximo é 999!");
                return 1;
            }
            if (PlayerInfo[playerid][pAdmin] >= 4)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        GivePlayerWeapon(playa, gun, ammo);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
            }
        }
        return 1;
    }
//Equipar evento
    if(strcmp(cmd, "/dararmaev", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new gun;
            new ammo;
            tmp = strtok(cmdtext, idx);
            gun = strval(tmp);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /dararmav [arma id] [munição]");
                SendClientMessage(playerid, COLOR_GRAD4, "3(Cassetete) 4(Faca) 5(Taco de Baseball) 6(Pá) 7(Espada) 8(Katana) 10-13(Vibrador) 14(Flores) 16(Granadas) 17(Granada Gás) 18(Molotovs) 22(Pistola)");
                SendClientMessage(playerid, COLOR_GRAD3, "23(Pistola com Silenciador) 24(Eagle) 25(Escopeta) 29(MP5) 30(AK47) 31(M4) 33(Rifle) 34(Sniper) 37(Lança Chamas) 41(spray) 42(extintor) 43(Camera) 46(Paraquedas)");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            ammo = strval(tmp);
            if(ammo <1||ammo > 999)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /dararmav [arma id] [munição]");
                SendClientMessage(playerid, COLOR_GRAD4, "3(Cassetete) 4(Faca) 5(Taco de Baseball) 6(Pá) 7(Espada) 8(Katana) 10-13(Vibrador) 14(Flores) 16(Granadas) 17(Granada Gás) 18(Molotovs) 22(Pistola)");
                SendClientMessage(playerid, COLOR_GRAD3, "23(Pistola com Silenciador) 24(Eagle) 25(Escopeta) 29(MP5) 30(AK47) 31(M4) 33(Rifle) 34(Sniper) 37(Lança Chamas) 41(spray) 42(extintor) 43(Camera) 46(Paraquedas)");
                SendClientMessage(playerid, COLOR_GRAD1, "   O minimo de munição é 1 e o máximo é 999!");
                return 1;
            }
            if (PlayerInfo[playerid][pAdmin] >= 4)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                for(new i; i != MAX_PLAYERS; i++)
                {
                    if(NoEvento[i])
                    {
                        GivePlayerWeapon(i, gun, ammo);
                        new za[512];
                        format(za,sizeof(za),"[BPG EVENTO]O Admin %s deu a arma id [%d] com %d de municao a todos que estao no evento",PlayerName(playerid),tmp,gun);
                        SendClientMessage(i,0x34CB56AA,za);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/congelarev", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 4)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                for(new i; i != MAX_PLAYERS; i++)
                {
                    if(NoEvento[i])
                    {
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        TogglePlayerControllable(i, 0);
                        format(string, sizeof(string), "[BPG EVENTO]O admin %s Congelou todos participantes do evento",sendername);
                        SendClientMessage(i,0xEC93DAAA,string);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/descongelarev", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 4)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                for(new i; i != MAX_PLAYERS; i++)
                {
                    if(NoEvento[i])
                    {
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        TogglePlayerControllable(i, 1);
                        format(string, sizeof(string), "[BPG EVENTO]O admin %s descongelou todos participantes do evento",sendername);
                        SendClientMessage(i,0xEC93DAAA,string);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/darcoleteev", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /coleteev [quantia]");
                return 1;
            }
            new health;
            tmp = strtok(cmdtext, idx);
            health = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 4)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
                }
                 for(new i; i != MAX_PLAYERS; i++)
                {
                    if(NoEvento[i])
                    {
                        SetPlayerArmour(i, health);
                        new za[512];
                        format(za,sizeof(za),"[BPG EVENTO]O Admin %s deu [%d] de colete para todos os participantes do evento",PlayerName(playerid),health);
                        SendClientMessage(i,0x34CB56AA,za);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/ajudaevento", true) == 0)
    {
        if (PlayerInfo[playerid][pAdmin] >= 4)
        {
            SendClientMessage(playerid,0xF3A3EBAA,"Eventos Cmds: /criarevento /pararevento /dararmaev [arma] [municao] /darvidaev [percentagem] ");
            SendClientMessage(playerid,0xF3A3EBAA,"Eventos Cmds: /dacoleteev [percentagem] /congelarev /descongelarev");
            return 1;
        }
    }
    if(strcmp(cmd, "/darvidaev", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /darvidaev [quantia]");
                return 1;
            }
            new health;
            tmp = strtok(cmdtext, idx);
            health = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 4)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
                }
                 for(new i; i != MAX_PLAYERS; i++)
                {
                    if(NoEvento[i])
                    {
                        SetPlayerHealth(i, health);
                        new za[512];
                        format(za,sizeof(za),"[BPG EVENTO]O Admin %s deu [%d] de life para todos os participantes do evento",PlayerName(playerid),health);
                        SendClientMessage(i,0x34CB56AA,za);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
            }
        }
        return 1;
    }
//----------------------------------[Dar Vida]------------------------------------------------
    if(strcmp(cmd, "/darvida", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /darvida [id] [quantia]");
                return 1;
            }
            new playa;
            new health;
            playa = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            health = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 4)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
                }
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        SetPlayerHealth(playa, health);
                        format(string,sizeof(string), "AdmAviso: %s ID[%d] Usou o Comando /Darvida em: %s", PlayerName(playerid), playerid,PlayerName(playa));
                        ABroadCast(COLOR_GRAD1, string, 1);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/darcolete", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /colete [id] [quantia]");
                return 1;
            }
            new playa;
            new health;
            playa = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            health = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 4)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
                }
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        SetPlayerArmour(playa, health);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/veh", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] < 1342)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
                return 1;
            }
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /veh [IDCARRO] [COR1] [COR2]");
                return 1;
            }
            //if(playerid == playerid) return SendClientMessage(playerid, 0x77EEA1FF, "[BPG Veículo] {FFFFFF}Comando desativado pelo scripter do Servidor!");
            new car;
            car = strval(tmp);
            if(car < 400 || car > 611) { SendClientMessage(playerid, COLOR_GREY, "   Modelo Do Carro Tem Que Ser Entre 411 e 600 !"); return 1; }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /veh [IDCARRO] [COR1] [COR2]");
                return 1;
            }
            new COLOR1;
            COLOR1 = strval(tmp);
            if(COLOR1 < 0 || COLOR1 > 255) { SendClientMessage(playerid, COLOR_GREY, "   Número Da Cor tem que ser entre 0 e 255 !"); return 1; }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /veh [IDCARRO] [COR1] [COR2]");
                return 1;
            }
            new COLOR2;
            COLOR2 = strval(tmp);
            if(COLOR2 < 0 || COLOR2 > 255) { SendClientMessage(playerid, COLOR_GREY, "   Número Da Cor tem que ser entre 0 e 255 !"); return 1; }
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid, X,Y,Z);
            new carid = CreateVehicle(car, X,Y,Z, 0.0, COLOR1, COLOR2, 60000);
            GetPlayerName(playerid, sendername, sizeof(sendername));
            CreatedCars[CreatedCar] = carid;
            CreatedCar ++;
            format(string, sizeof(string), "AdmAviso: %s Criou um carro! Agora temos [%d] carros no Servidor.", sendername, carid);
            ABroadCast(0xFFFF00AA,string,1);
            PutPlayerInVehicle(playerid,carid,0);
            TunarCarro(carid);
            VTrancado[carid] = 0;
            UnLockCar(carid);
            for(new pl;pl<MaiorID;pl++)
            {
                CheckDonoCarro(pl);
            }
        }
        return 1;
    }
    if(!strcmp("/destruircarro", cmdtext, true) || !strcmp("/dcarro", cmdtext, true))
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] == 3000 && ServerOwner[playerid] == 1)
            {
                new counter = 0;
                new result;
                new plyName[MAX_PLAYER_NAME];
                GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
                for(new i; i != MAX_VEHICLES; i++)
                {
                    new dist = ChecarveiculoBPG(5, playerid, i);
                    if(dist)
                    {
                        result = i;
                        counter++;
                    }
                }
                switch(counter)
                {
                    case 0:
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Não há nenhum carro nesse raio!");
                    }
                    case 1:
                    {
                        new name[MAX_PLAYER_NAME];
                        GetPlayerName(playerid, name, sizeof(name));
                        for(new x = 0; x < sizeof(CreatedCars); x++)
                        {
                            if(CreatedCars[x] == result)
                            {
                                //if(!CreatedCars[x]) { SendClientMessage(playerid, COLOR_GREY, "   Você só pode destruir carros Criados!"); return 1; }if(!CreatedCars[result]) { SendClientMessage(playerid, COLOR_GREY, "   Você só pode destruir carros Criados!"); return 1; }
                                DestroyVehicle(CreatedCars[x]);
                                CreatedCars[x] = 0;
                                format(string, sizeof(string), "Você Destroiu o carro ID:[%d]", result);
                                SendClientMessage(playerid, COLOR_GREY, string);
                                format(string, sizeof(string), "AdmAviso: Carro ID:[%d] foi Destruido Por: %s", result, name);
                                ABroadCast(0xFFFF00AA,string,1);
                                CreatedCar --;
                            } else { SendClientMessage(playerid, COLOR_GREY, "   Você só pode destruir carros Criados!"); }
                        }
                    }
                    default:
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Comando Permitido apenas para Scripter do Servidor!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/destruirveiculos", true) == 0 || strcmp(cmd, "/dv", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] < 1338) return SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao tem permissao para usar esse comando!");
        for(new x = 0; x < sizeof(CreatedCars); x++)
        {
            if(!CreatedCars[x]) break;
            DestroyVehicle(CreatedCars[x]);
            CreatedCars[x] = 0;
        }
        CreatedCar = 0;
        format(string, sizeof(string), "AdmAviso: %s Destruiu todos os Veículos Criados do Servidor!",PlayerName(playerid));
        ABroadCast(COLOR_LIGHTRED,string,1);
        SendClientMessage(playerid, COLOR_GREY, "   Todos os veículos criados foram destruídos!");
        return 1;
    }
    if(strcmp(cmd, "/tempo", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 2)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
                return 1;
            }
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_WHITE, "USE: /tempo [tempo id]");
                return 1;
            }
            new name[MAX_PLAYER_NAME];
            GetPlayerName(playerid, name, sizeof(name));
            new weather;
            weather = strval(tmp);
            if(weather < 0||weather > 45) { SendClientMessage(playerid, COLOR_GREY, "   Tempo id de 0 ~ 45 !"); return 1; }
            SetWeather(weather);
            format(string,sizeof(string), "AdmAviso: %s setou o tempo para %d",name,weather);
            ABroadCast(COLOR_YELLOW,string,1);
            SendClientMessage(playerid, COLOR_GREY, "Tempo setado!");
        }
        return 1;
    }
    if(strcmp(cmdtext, "/tt", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 2)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
                return 1;
            }
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
            }
            new Float:x,Float:y,Float:z;
            GetPlayerPos(playerid, x, y, z);
            format(strvinny, sizeof(strvinny), "if(GetPlayerOrg(playerid) == %d && PlayerToPoint(5.0,playerid,%f,%f,%f)) return true;00 %s\n", GetPlayerOrg(playerid), x, y, z,NomeORG(playerid));
            KickLog(strvinny);
            ABroadCast(-1,strvinny,1);
        }
        return 1;
    }
//----------------------------------[GiveMoney]------------------------------------------------
    if(strcmp(cmd, "/resetargrana", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /dargrana [id] [grana]");
                return 1;
            }
            new playa;
            playa = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if (PlayerInfo[playerid][pAdmin] >= 1337)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        ConsumingMoney[playa] = 1;
                        ResetPlayerMoney(playa);

                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
            }
        }
        return 1;
    }
//----------------------------------[GiveMoney]------------------------------------------------
    if(strcmp(cmd, "/dargrana", true) == 0 || strcmp(cmd, "/setgrana", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /dargrana [id] [grana]");
                return 1;
            }
            new playa;
            new money;
            playa = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            money = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] == 3000)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        ConsumingMoney[playa] = 1;
                        GivePlayerMoney(playa, money);
                        format(string,sizeof(string), "AdmAviso: %s Está Dando [R$ %d] de Dinheiro para: %s",PlayerName(playerid),money,PlayerName(playa));
                        ABroadCast(COLOR_YELLOW,string,1);
                        format(gstring, sizeof(gstring), "** Você Recebeu R$ %d do Admin: %s", money, PlayerName(playerid));
                        SendClientMessage(playa, COLOR_LIGHTBLUE, gstring);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/setskin", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /setskin [playerid] [skin id]");
                return 1;
            }
            new para1;
            new level;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            level = strval(tmp);
            if(level > 299 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "id desconhecido!"); return 1; }
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if(IsPlayerConnected(para1))
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        PlayerInfo[para1][pSkin] = level;
                        format(string, sizeof(string), "O admin %s mudou sua Skin para %d", sendername,level);
                        SendClientMessage(para1, COLOR_WHITE, string);
                        format(string, sizeof(string), "Você mudou a skin do %s para %d.", giveplayer,level);
                        SendClientMessage(playerid, COLOR_WHITE, string);
                        SetPlayerSkinEx(para1, PlayerInfo[para1][pSkin]);
                    }
                }//not connected
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não tem permissão para usar esse comando!");
            }
        }
        return 1;
    }
//-----------------------------------[Slap]-----------------------------------------------
    if(strcmp(cmd, "/tapa", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /tapa [id]");
                return 1;
            }
            new playa;
            new Float:slx, Float:sly, Float:slz;
            playa = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >=1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        if(PlayerInfo[playa][pAdmin] >= 3000 && PlayerInfo[playerid][pAdmin] < 1338)
                        {
                            SendClientMessage(playerid, COLOR_GRAD1, "Você não pode dar tapas em um Admin Dono !");
                            return 1;
                        }
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        GetPlayerPos(playa, slx, sly, slz);
                        SetPlayerPos(playa, slx, sly, slz+12);
                        PlayerPlaySound(playa, 1130, slx, sly, slz+12);
                        printf("AdmAviso: %s slapped %s",sendername,  giveplayer);
                        format(string, sizeof(string), "AdmAviso: %s ganhou um tapa de: %s",giveplayer ,sendername);
                        ABroadCast(COLOR_LIGHTRED,string,1);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/tapao", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /tapao [id]");
                return 1;
            }
            new playa;
            //new Float:shealth;
            new Float:slx, Float:sly, Float:slz;
            playa = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >=1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        if(PlayerInfo[playa][pAdmin] >= 3000 && PlayerInfo[playerid][pAdmin] < 1338)
                        {
                            SendClientMessage(playerid, COLOR_GRAD1, "Você não pode dar tapão em um Admin Dono !");
                            return 1;
                        }
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        GetPlayerPos(playa, slx, sly, slz);
                        SetPlayerPos(playa, slx, sly, slz+130);
                        SetPlayerHealth(playerid, 100.0);
                        PlayerPlaySound(playa, 1130, slx, sly, slz+130);
                        printf("AdmAviso: %s slapped %s",sendername,  giveplayer);
                        format(string, sizeof(string), "AdmAviso: %s ganhou um tapao de: %s",giveplayer ,sendername);
                        ABroadCast(COLOR_LIGHTRED,string,1);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
            }
        }
        return 1;
    }
        if(strcmp(cmd, "/kitadm", true) == 0 || strcmp(cmd, "/kitadmin", true) == 0)
    {
        if(PlayerPaintballing[playerid] != 0)
        {
           SendClientMessage(playerid,COLOR_GREY," Você não pode usar seu kit no evento!");
           return 1;
        }
        if(PlayerInfo[playerid][pJailed] != 0)
        {
           SendClientMessage(playerid,COLOR_GREY," Você não pode usar seu kit preso!");
           return 1;
        }
        if (PlayerInfo[playerid][pAdmin] >= 1)
        {
            if(admtrampando[playerid] < 0)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não está em modo jogo! (/trabalhar)");
                return 1;
            }
            GivePlayerWeapon(playerid, 46, 1);
            GivePlayerWeapon(playerid, 24, 299);
            GivePlayerWeapon(playerid, 31, 999);
            GivePlayerWeapon(playerid, 29, 999);
            GivePlayerWeapon(playerid, 25, 999);
            GivePlayerWeapon(playerid, 4, 1);
            GivePlayerWeapon(playerid, 34, 999);
            GivePlayerWeapon(playerid, 43, 999);
            GivePlayerWeapon(playerid, 17, 49);
            GivePlayerWeapon(playerid, 42, 1999);
            SetPlayerArmour(playerid, 100);
            SetPlayerHealth(playerid, 100);
            SendClientMessage(playerid,COLOR_GREEN,"Você pegou o seu KitAdmin!");
            new name[MAX_PLAYER_NAME];
            GetPlayerName(playerid, name, sizeof(name));
            format(string, 128, "Admin: %s Pegou Seu KitAdmin.",name);
            ProxDetector(30.0, playerid, string, COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE);
        }
        return 1;
    }
    if(strcmp(cmd, "/kitadmdono", true) == 0)
    {
        if(admtrampando[playerid] < 0)
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Você não está em modo jogo! (/trabalhar)");
            return 1;
        }
        if (PlayerInfo[playerid][pAdmin] >= 3000 && PlayerInfo[playerid][pAdmin] >= 3000 )
        {
            if(PlayerPaintballing[playerid] != 0)
            {
                SendClientMessage(playerid,COLOR_GREY," Você não pode usar seu kit no evento!");
                return 1;
            }
            if(PlayerInfo[playerid][pJailed] != 0)
            {
                SendClientMessage(playerid,COLOR_GREY," Você não pode usar seu kit preso!");
                return 1;
            }
            GivePlayerWeapon(playerid, 46, 1);
            GivePlayerWeapon(playerid, 24, 9999999999);
            GivePlayerWeapon(playerid, 31, 9999999999);
            GivePlayerWeapon(playerid, 29, 9999999999);
            GivePlayerWeapon(playerid, 25, 9999999999);
            GivePlayerWeapon(playerid, 4, 1);
            GivePlayerWeapon(playerid, 36, 9999999999);
            GivePlayerWeapon(playerid, 34, 9999999999);
            GivePlayerWeapon(playerid, 43, 9999999999);
            GivePlayerWeapon(playerid, 16, 9999999999);
            GivePlayerWeapon(playerid, 38, 9999999999);
            SetPlayerArmour(playerid, 500);
            SetPlayerHealth(playerid, 500);
            SendClientMessage(playerid,COLOR_GREEN,"Você pegou o seu KitAdmin Dono^^!");
        }
        return 1;
    }
    if(strcmp(cmd, "/radios", true) == 0)
    {
        ShowPlayerDialog(playerid, 695, DIALOG_STYLE_LIST, "Radios Online","Brasil  Play Gamer\nDesligar","Selecionar","Selecionar");
        return 1;
    }
    if (strcmp("/arena", cmdtext, true, 10) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if (GetPlayerState(playerid) == 2)
                {
                    new tmpcar = GetPlayerVehicleID(playerid);
                    SetVehiclePos(tmpcar, 4105.1049804688,-1871.5346679688,4.3541293144226); LinkVehicleToInterior(tmpcar, 1);
                    SetPlayerInterior(playerid,0);
                    SetPlayerVirtualWorld(playerid,0);
                }
                else
                {
                    SetPlayerInterior(playerid,0);
                    SetPlayerVirtualWorld(playerid,0);
                    SetPlayerPos(playerid,4105.1049804688,-1871.5346679688,4.3541293144226);
                    SetPlayerFacingAngle(playerid,173.8);
                }
                SendClientMessage(playerid, COLOR_GRAD1, "Você Foi Teleportado!");
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não esta autorizado a usar este comando!!");
            }
        }
        return 1;
    }
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    if(strcmp(cmd, "/menuvip", true) == 0)
    {
        new Mensagem[100];
        strcat(Mensagem, "Ativar Moedas Verdes\nComprar VIP\nComprar Super-VIP\nDar Moedas Verdes à Alguém");
        ShowPlayerDialog(playerid, DIALOG_MV, DIALOG_STYLE_LIST, "Menu de transações VIP/Super-VIP", Mensagem, "Escolher", "Cancelar");
        return 1;
    }
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=PlayerInfo[playerid][pGold]+=25000;
    /*if(strcmp(cmd, "/libcodvip", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new PlayerEmail[64],EnviarEmail=0;
            PlayerEmail = strtok(cmdtext, idx);
            tmp = strtok(cmdtext, idx);
            if(!strlen(PlayerEmail))
            {
                SendClientMessage(playerid, -1, "Você Optou por não adicionar um E-mail!");
                EnviarEmail=1;
            }
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /libcodvip [ E-MAIL (Não Obrigatório) ] [ QUANTIDADE ] [ CÓDIGO ]");
                return 1;
            }

            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /libcodvip [ E-MAIL (Não Obrigatório) ] [ QUANTIDADE ] [ CÓDIGO ]");
                return 1;
            }
            new quantidadevip = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] == 3000)
            {
                new string3[200];
                format(string3, sizeof(string3), "Codigos/%s.ini", result);
                if(dini_Exists(string3))
                {
                    SendClientMessage(playerid,COLOR_GRAD1,"Este código já está liberado!");
     return 1;
                }
                else
                {

                    dini_Create(string3);
                    dini_IntSet(string3,"Quantidade",quantidadevip);
                    format(string, sizeof(string), "Você liberou o código: %s", result);
                    SendClientMessage(playerid, COLOR_LIGHTRED, string);
                    if(EnviarEmail)
                    {
                        new VarChefe[950],Parte[128];
                        format(Parte,sizeof(Parte),"[color=#333333][font=Arial]Olá![/font]");
                        strcat(VarChefe,Parte);
                        format(Parte,sizeof(Parte),"[font=Arial]Você está recebendo este e-mail porque fez uma doação ao [b]Brasil Play Gamer®[/b], por isso,");
                        strcat(VarChefe,Parte);
                        format(Parte,sizeof(Parte)," terá direito a benefícios especiais dentro do servidor.[/font]");
                        strcat(VarChefe,Parte);
                        format(Parte,sizeof(Parte),"[font=Arial]In-game, digite [b]/menuvip[/b] e escolha a opção [b]Ativar Moedas Verdes[/b],");
                        strcat(VarChefe,Parte);
                        format(Parte,sizeof(Parte)," depois copie e cole o código abaixo:[/font]");
                        strcat(VarChefe,Parte);
                        format(Parte,sizeof(Parte),"[b][font=Arial]%s[/font][/b]",result);
                        strcat(VarChefe,Parte);
                        format(Parte,sizeof(Parte),"[font=Arial][b]Após ter ativado as suas Moedas Verdes[/b] você poderá comprar seu [b]VIP[/b] ou [b]SUPER VIP[/b],");
                        strcat(VarChefe,Parte);
                        format(Parte,sizeof(Parte)," dependendo da quantidade que tiver adquirido.[/font]");
                        strcat(VarChefe,Parte);
                        format(Parte,sizeof(Parte),"[font=Arial]Obrigado por colaborar com o nosso servidor.[/font]");
                        strcat(VarChefe,Parte);
                        format(Parte,sizeof(Parte),"[color=#111111][font=Arial]  Atenciosamente.[/font]");
                        strcat(VarChefe,Parte);
                        format(Parte,sizeof(Parte),"[font=Arial]  Equipe[/font]");
                        strcat(VarChefe,Parte);
                        format(Parte,sizeof(Parte),"[font=Trebuchet MS, Geneva, sans-serif][img]http://i4.minus.com/iHHQWLkdiVtBq.png[/img][/font][/color]");
                        strcat(VarChefe,Parte);
                        SendMail(PlayerEmail, EMAIL_SERVIDOR, EMAIL_SERVIDOR, "Ativação Moedas Verdes | Brasil PlayGamer®?", VarChefe);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
            }
        }
  return 1;
    }      */
    if(strcmp(cmd, "/liberarvip", false) == 0)
    {
        if (PlayerInfo[playerid][pAdmin] == 3000)
        {
        new Mensagem[100];
        strcat(Mensagem, "Liberar Código VIP\nLiberar Código SUPER-VIP");
        ShowPlayerDialog(playerid, DIALOG_LIBERARMV, DIALOG_STYLE_LIST, "Menu de liberação codigos VIP/Super-VIP", Mensagem, "Escolher", "Cancelar");
        }
        return 1;
    }
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
/*  if(strcmp(cmd, "/libcodsvip", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /libcodsvip [QUANTIDADE] [CÓDIGO]");
                return 1;
            }

            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /libcodsvip [QUANTIDADE] [CÓDIGO]");
                return 1;
            }
            new quantidadevip = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] == 3000)
            {
                new string3[200];
                format(string3, sizeof(string3), "Codigos2/%s.ini", result);
                if(dini_Exists(string3))
                {
                    SendClientMessage(playerid,COLOR_GRAD1,"Este código já está liberado!");
     return 1;
                }
                else
                {

                    dini_Create(string3);
                    dini_IntSet(string3,"Quantidade",quantidadevip);
                    format(string, sizeof(string), "Você liberou o código: %s", result);
                    SendClientMessage(playerid, COLOR_LIGHTRED, string);
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
            }
        }
  return 1;
    }   */
    if(strcmp(cmd, "/darmvs", true) == 0 || strcmp(cmd, "/setmvs", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /darmvs [id] [quantidade]");
                return 1;
            }
            new playa;
            new money;
            playa = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            money = strval(tmp);
            if (ServerOwner[playerid])
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
                    return 1;
                }
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        PlayerInfo[playa][pMV] += money;
                        format(string,sizeof(string), "AdmAviso: %s Está Dando [%d] de Moedas Verdes para: %s",PlayerName(playerid),money,PlayerName(playa));
                        ABroadCast(COLOR_YELLOW,string,1);
                        format(gstring, sizeof(gstring), "** Você Recebeu %d Moedas Verdes do Admin: %s", money, PlayerName(playerid));
                        SendClientMessage(playa, COLOR_LIGHTBLUE, gstring);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if (strcmp("/motor", cmdtext, true, 10) == 0)
    {
        new vehicle = GetPlayerVehicleID(playerid);
        if(Gas[vehicle] <= 0)
        {
            NoFuel[playerid] = 1;
            PlayerPlaySound(playerid, 1159, 0.0, 0.0, 0.0);
            new mot, lu, alar, por, cap, porma, ob;
            GetVehicleParamsEx(vehicle, mot, lu, alar, por, cap, porma, ob);
            SetVehicleParamsEx(vehicle, VEHICLE_PARAMS_OFF, lu, alar, por, cap, porma, ob);
            motor[playerid] = 0;
            return 1;
        }
        new mot, lu, alar, por, cap, porma, ob;
        new carro = GetPlayerVehicleID(playerid);
        new playerState = GetPlayerState(playerid);
        if(carro != INVALID_VEHICLE_ID && playerState == PLAYER_STATE_DRIVER)
        {
            if(motor[playerid] == 0)
            {
                GetVehicleParamsEx(carro, mot, lu, alar, por, cap, porma, ob);
                SetVehicleParamsEx(carro, VEHICLE_PARAMS_ON, lu, alar, por, cap, porma, ob);
                motor[playerid] = 1;
                SendClientMessage(playerid, 0xFFFFFFAA, "Veiculo {2F991A}Ligado!");
            }
            else{
                GetVehicleParamsEx(carro, mot, lu, alar, por, cap, porma, ob);
                SetVehicleParamsEx(carro, VEHICLE_PARAMS_OFF, lu, alar, por, cap, porma, ob);
                motor[playerid] = 0;
                SendClientMessage(playerid, 0xFFFFFFAA, "Veiculo {E31919}Desligado!");
            }
        }
        return true;
    }
    if (strcmp("/anunciovoz", cmdtext, true, 10) == 0)
    {
        new str[ 128 ], nomep[ 25 ];
        if( PlayerInfo[ playerid ][ pAdmin ] < 1337 ) return SendClientMessage( playerid, -1, "Sem autorização." );
        new length = strlen(cmdtext);
        while ((idx < length) && (cmdtext[idx] <= ' '))
        {
            idx++;
        }
        new offset = idx;
        new result[100];
        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
        {
            result[idx - offset] = cmdtext[idx];
            idx++;
        }
        result[idx - offset] = EOS;
        if(!strlen(result))
        {
            SendClientMessage(playerid, COLOR_WHITE,"USE: /anunciovoz [ anuncio ]");
            return 1;
        }
        if( strlen( tmp ) > 35 ) return SendClientMessage( playerid, -1, "Mensagem muito grande." );
        format( str, sizeof str, "http://translate.google.com/translate_tts?tl=pt&q=%s", result );
        for( new i; i < MAX_PLAYERS; i++ ){
            PlayAudioStreamForPlayer( i, str, 0, 0, 0, 0, 0 );
        }
        GetPlayerName( playerid, nomep, sizeof nomep );
        format( str, sizeof str, "~n~~n~~n~~n~~n~~n~~w~O administrador ~p~%s ~w~enviou uma mensagem de voz.", nomep );
        GameTextForAll( str, 5000, 3 );
        return true;
    }
    if (strcmp("/motoron", cmdtext, true, 10) == 0)
    {
        new vehicle = GetPlayerVehicleID(playerid);
        if(Gas[vehicle] <= 0)
        {
            NoFuel[playerid] = 1;
            PlayerPlaySound(playerid, 1159, 0.0, 0.0, 0.0);
            new mot, lu, alar, por, cap, porma, ob;
            GetVehicleParamsEx(vehicle, mot, lu, alar, por, cap, porma, ob);
            SetVehicleParamsEx(vehicle, VEHICLE_PARAMS_OFF, lu, alar, por, cap, porma, ob);
            motor[playerid] = 0;
            return 1;
        }
        new mot, lu, alar, por, cap, porma, ob;
        new carro = GetPlayerVehicleID(playerid);
        if(carro != INVALID_VEHICLE_ID)
        {
            if(motor[playerid] == 0)
            {
                GetVehicleParamsEx(carro, mot, lu, alar, por, cap, porma, ob);
                SetVehicleParamsEx(carro, VEHICLE_PARAMS_ON, lu, alar, por, cap, porma, ob);
                motor[playerid] = 1;
                SendClientMessage(playerid, 0xFFFFFFAA, "Veiculo {2F991A}Ligado!");
            }
        }
        return true;
    }
    if (strcmp("/motoroff", cmdtext, true, 10) == 0)
    {
        new mot, lu, alar, por, cap, porma, ob;
        new carro = GetPlayerVehicleID(playerid);
        if(carro != INVALID_VEHICLE_ID)
        {
            if(motor[playerid] == 1)
            {
                GetVehicleParamsEx(carro, mot, lu, alar, por, cap, porma, ob);
                SetVehicleParamsEx(carro, VEHICLE_PARAMS_OFF, lu, alar, por, cap, porma, ob);
                motor[playerid] = 0;
                SendClientMessage(playerid, 0xFFFFFFAA, "Veiculo {E31919}Desligado!");
            }
        }
        return true;
    }
    if(strcmp(cmd, "/meucontrato", true) == 0)
    {
        if(GoChase[playerid] == 999)
            return SendClientMessage(playerid, COLOR_GRAD1, "Você não possui um  ");
        else
            format(string, sizeof(string), "Seu contrato está em %s [ID: %d].", PlayerName(GoChase[playerid]), GoChase[playerid]);
        return SendClientMessage(playerid, COLOR_GRAD2, string);
    }
    if(strcmp(cmd, "/largarcontrato", true) == 0)
    {
        if(GoChase[playerid] == 999)
            return SendClientMessage(playerid, COLOR_GRAD1, "Você não possui um contrato");
        else
            GotHit[playerid] = 0;
            GetChased[GoChase[playerid]] = 999;
            GoChase[playerid] = 999;
        return SendClientMessage(playerid, COLOR_GRAD2, string);
    }
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    if(strcmp(cmd, "/irorg", true) == 0)
    {
        if(gPlayerLogged[playerid] == 0)
        {
            SendClientMessage(playerid, COLOR_GRAD3, "    Você não fez o login");
   return 1;
        }
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_WHITE,"/irorg [Numero da ORG 01 - 28]");
   return 1;
        }
        if(strcmp(tmp, "1", true) == 0)
        {
            SetPlayerPos(playerid, 1542.3259,-1676.2583,13.2614);
            SetPlayerFacingAngle(playerid, 3.5268);
        }
        if(strcmp(tmp, "2", true) == 0)
        {
            SetPlayerPos(playerid, 338.8457,-1529.2365,33.0299);
            SetPlayerFacingAngle(playerid, 154.5457);
        }
        if(strcmp(tmp, "3", true) == 0)
        {
            SetPlayerPos(playerid, -1535.3730,489.6674,7.1797);
            SetPlayerFacingAngle(playerid, 146.6731);
        }
        if(strcmp(tmp, "4", true) == 0)
        {
            SetPlayerPos(playerid, 1993.0800,-1452.8026,13.1786);
            SetPlayerFacingAngle(playerid, 24.6460);
        }
        if(strcmp(tmp, "5", true) == 0)
        {
            SetPlayerPos(playerid, 330.9825,-1775.9579,5.0161);
            SetPlayerFacingAngle(playerid, 73.7887);
        }
        if(strcmp(tmp, "6", true) == 0)
        {
            SetPlayerPos(playerid, -2265.2388,2333.1624,4.8125);
            SetPlayerFacingAngle(playerid, 352.3715);
        }
        if(strcmp(tmp, "7", true) == 0)
        {
            SetPlayerPos(playerid, 1480.5498,-1764.7262,18.7958);
            SetPlayerFacingAngle(playerid, 182.0936);
        }
        if(strcmp(tmp, "8", true) == 0)
        {
            SetPlayerPos(playerid, 1101.3262,-305.8500,73.9922);
            SetPlayerFacingAngle(playerid, 84.3072);
        }
        if(strcmp(tmp, "9", true) == 0)
        {
            SetPlayerPos(playerid, 779.6964,-1328.4705,13.5469);
            SetPlayerFacingAngle(playerid, 171.3521);
        }
        if(strcmp(tmp, "10", true) == 0)
        {
            SetPlayerPos(playerid, 1803.7430,-1726.6770,13.5390);
            SetPlayerFacingAngle(playerid, 349.0125);
        }
        if(strcmp(tmp, "11", true) == 0)
        {
            SetPlayerPos(playerid, -2431.7085,492.0889,29.9276);
            SetPlayerFacingAngle(playerid, 37.3386);
        }
        if(strcmp(tmp, "12", true) == 0)
        {
            SetPlayerPos(playerid, 323.8087,-1191.8948,75.7489);
            SetPlayerFacingAngle(playerid, 134.4114);
        }
        if(strcmp(tmp, "13", true) == 0)
        {
            SetPlayerPos(playerid, 666.8416,-1314.9786,13.4687);
            SetPlayerFacingAngle(playerid, 12.6181);
        }
        if(strcmp(tmp, "14", true) == 0)
        {
            SetPlayerPos(playerid, 2494.8022,-1670.1398,13.3359);
            SetPlayerFacingAngle(playerid, 243.8388);
        }
        if(strcmp(tmp, "15", true) == 0)
        {
            SetPlayerPos(playerid, 400.3993,2528.4897,16.5700);
            SetPlayerFacingAngle(playerid, 0.4839);
        }
        if(strcmp(tmp, "16", true) == 0)
        {
            SetPlayerPos(playerid, 935.6680,-1219.7054,16.9060);
            SetPlayerFacingAngle(playerid, 99.8415);
        }
        if(strcmp(tmp, "17", true) == 0)
        {
            SetPlayerPos(playerid, 1094.3776,-1204.0072,17.8047);
            SetPlayerFacingAngle(playerid, 262.5864);
        }
        if(strcmp(tmp, "18", true) == 0)
        {
            SetPlayerPos(playerid, 2832.4641,-1184.7157,24.7540);
            SetPlayerFacingAngle(playerid, 296.0748);
        }
        if(strcmp(tmp, "19", true) == 0)
        {
            SetPlayerPos(playerid, 2167.4592,-1800.5421,13.3662);
            SetPlayerFacingAngle(playerid, 289.8901);
        }
        if(strcmp(tmp, "20", true) == 0)
        {
            SetPlayerPos(playerid, 684.7363,-479.3929,16.3359);
            SetPlayerFacingAngle(playerid, 155.0692);
        }
        if(strcmp(tmp, "21", true) == 0)
        {
            SetPlayerPos(playerid, 2775.5049,-1621.4487,10.9219);
            SetPlayerFacingAngle(playerid, 313.7982);
        }
        if(strcmp(tmp, "22", true) == 0)
        {
            SetPlayerPos(playerid, -1706.5035,1338.1572,7.1776);
            SetPlayerFacingAngle(playerid, 315.4580);
        }
        if(strcmp(tmp, "23", true) == 0)
        {
            SetPlayerPos(playerid, 1331.4468,-866.5571,39.5781);
            SetPlayerFacingAngle(playerid, 4.7698);
        }
        if(strcmp(tmp, "24", true) == 0)
        {
            SetPlayerPos(playerid, -2463.2729,791.8549,34.8788);
            SetPlayerFacingAngle(playerid, 223.3586);
        }
        if(strcmp(tmp, "25", true) == 0)
        {
            SetPlayerPos(playerid, -1829.8793,121.9480,15.1172);
            SetPlayerFacingAngle(playerid, 177.8420);
        }
        if(strcmp(tmp, "26", true) == 0)
        {
            SetPlayerPos(playerid, -2363.0007,1003.2393,50.7029);
            SetPlayerFacingAngle(playerid, 298.8618);
        }
        if(strcmp(tmp, "27", true) == 0)
        {
            SetPlayerPos(playerid, -2651.8333,630.2360,14.4531);
            SetPlayerFacingAngle(playerid, 11.3568);
        }
        if(strcmp(tmp, "28", true) == 0)
        {
            SetPlayerPos(playerid, -2514.7351,1218.2770,37.1483);
            SetPlayerFacingAngle(playerid, 81.1230);
        }
  return 1;
    }
    if (strcmp(cmd, "/mostrarsenha", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /mostrarsenha [ID]");
    return 1;
            }
            if(GetPlayerOrg(playerid) == 32 && PlayerInfo[playerid][pCargo] > 4)
            {
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerConnected(giveplayerid))
                {
                    if(ProxDetectorS(5.0, playerid, giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            format(string, sizeof(string), "A senha do painel de segurança:[%s]", SenhaSeguranca);
                            SendClientMessage(giveplayerid, COLOR_GRAD1, string);
                            format(string, sizeof(string), "* %s mostrou a senha das de cameras de segurança para %s.",PlayerName(playerid),PlayerName(giveplayerid));
                            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "   Jogador está muito longe.");
                    }
                }//invalid id
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não pode usar este comando");
            }
        }
  return 1;
    }
    if(strcmp(cmd, "/cameras", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerToPoint(3.0, playerid, 237.7438,108.0919,1010.2188) || PlayerToPoint(3.0, playerid, 226.8586,127.6783,1010.2188) ||PlayerToPoint(3.0, playerid, 215.5024,125.1288,1003.2188) || NaCamera[playerid] > 3)
            {
                if(IsASse(playerid) || NaCamera[playerid] > 3)
                {
                    ShowPlayerDialog(playerid, 8906, DIALOG_STYLE_LIST, "Cameras segurança","Cameras: Los Santos\nCameras: San Fierro\nCameras: Las Venturas\nSenha de Acesso\nSair do Painel 1\nSair do Painel 2\nSair do Painel 3\n","Acessar","Cancelar");
     return 1;
                }
                else
                {
                    ShowPlayerDialog(playerid,8911, DIALOG_STYLE_PASSWORD, "Digite a senha","Digite a senha de segurança\nPara acessar o painel","Acessar","Cancelar");
                }
            }
        }
  return 1;
    }
    if(strcmp(cmd,"/saircamera",true)==0 || strcmp(cmd,"/lavecamera",true)==0)
    {
        OnPlayerCommandText(playerid,"/cameras");
     return 1;
    }
    if(strcmp(cmd, "/DefinirSenha", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /definirsenha [Senha]");
    return 1;
            }
            if (PlayerInfo[playerid][pAdmin] >= 1337 || (GetPlayerOrg(playerid) == 32 || PlayerInfo[playerid][pCargo] >= 4))
            {
                format(string, sizeof(string), "Você definiu a senha de acesso as cameras de segurança para:[%s]", tmp);
                SendClientMessage(playerid, COLOR_LIGHTRED,string);
                strmid(SenhaSeguranca, tmp, 0, strlen(tmp), 256);
                SalvarSenhaSeguranca();
    return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "  Você não pode usar este comando!");
            }
        }
  return 1;
    }

    if(strcmp(cmd, "/acessarcamerass", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /acessarcamerass [Senha]");
    return 1;
            }
            if(strcmp(SenhaSeguranca,tmp, true) == 0)
            {
                format(string, sizeof(string), "Senha correta!! você entrou no painel de cameras de segurança!");
                SendClientMessage(playerid, 0x33FF00FF,string);
                ShowPlayerDialog(playerid, 8906, DIALOG_STYLE_LIST, "Cameras segurança","Cameras: Los Santos\nCameras: San Fierro\nCameras: Las Venturas\nSenha de Acesso\nSair","Acessar","Cancelar");
    return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_LIGHTRED, "A Senha está incorreta e os policiais foram avisados!");
                format(string, sizeof(string), "Todas as Unidades: Alguem está tentando invadir o painel de cameras de segurança.");
                CopBroadCast(COLORGZ_EXE, string);
                SendFamilyMessage(32, COLORGZ_EXE, string);
            }
        }
  return 1;
    }
    if (strcmp(cmd, "/paz", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] < 1337)
        {
            SendClientMessage(playerid, COLOR_GRAD2, "Somente admins master ou dono podem usar este comando!");
   return 1;
        }
        OnPlayerCommandText(playerid,"/desativar celular");
        OnPlayerCommandText(playerid,"/bloquearpar");
        OnPlayerCommandText(playerid,"/BLOQIR");
        SendClientMessage(playerid, -1, "Agora você está sussa!");
        return 1;
    }
    if (strcmp(cmd, "/eadm", true) == 0)
    {
        if(IsAAdmin(playerid))
        {
            if(PlayerToPoint(2.0, playerid, 1523.1340,-1455.0103,63.8594))
            {
                SetPlayerPos(playerid, 1528.9015,-1468.4169,9.5000);
                SetPlayerInterior(playerid, 0);
            }
            if(PlayerToPoint(2.0, playerid, 1528.9015,-1468.4169,9.5000))
            {
                SetPlayerPos(playerid, 1523.1340,-1455.0103,63.8594);
                SetPlayerInterior(playerid, 0);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/portaoadmin", true) == 0)
    {
        if ((IsAAdmin(playerid)) && PlayerToPoint(15.0, playerid, 1535.0999756 , -1451.4000244 , 15.1999998))
        { //GateGaragem
            MoveDynamicObject( portaoadmin, 1535.0999756 , -1451.4000244 , 8.1999998,3,0.0,0.0,0.0);
            GameTextForPlayer(playerid, "~w~Portao ~n~~b~Aberto", 5000, 3);
            SetTimer("portaoadminclosed", 5000, false);
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "   Você não está perto do portão ou não é um Admin!");
        }
    return 1;
    }
    if(strcmp(cmd, "/ajudagb", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage(playerid, COLOR_WHITE,"_______________________________________ AJUDA GOLD BARS ________________________________________");
            SendClientMessage(playerid, COLOR_WHITE, "O sistema de GOLD BARS foi criado para proteger sua grana e evitar possíveiS BUGs.");
            SendClientMessage(playerid, COLOR_WHITE,"Acontece quando tem uma quantidade muito grande de dinheiro em mãos ou no Banco, ele fica Negativo.");
            SendClientMessage(playerid, COLOR_WHITE,"Pode acontecer quando tiver mais de 1kkk(R$1000000000) no banco ou mais de 10kk(R$10000000) em mãos.");
            SendClientMessage(playerid, COLOR_WHITE,"As GOLD BARS funcionam da seguinte Forma:");
            SendClientMessage(playerid, COLOR_WHITE,"Cada GOLD BARS é o equivalente a 100k(R$100.000) [1 GOLD BAR = R$100.000]");
            SendClientMessage(playerid, COLOR_WHITE,"Você pode ver a quantidade de GOLD BARS que você tem digitando /RG.");
            SendClientMessage(playerid, COLOR_WHITE,"Para você Sacar ou Depositar OUROS você precisa estar em um Banco.");
            SendClientMessage(playerid, COLOR_WHITE,"USE: /comprargb [Quantidade] OU /vendergb [Quantidade].");
            SendClientMessage(playerid, COLOR_WHITE,"_______________________________________________________________________________________________________");
   return 1;
        }
    }
    if(strcmp(cmd,"/menufazenda",true) == 0)
    {
        if(ServerOwner[playerid] && PlayerInfo[playerid][pAdmin] == 3000)
        {
            MenuCasa(playerid,6);
            return 1;
        }
        else return SendClientMessage( playerid, -1, "Você não tem autorização para usar este comando!" );
    }
    if(strcmp(cmd,"/menucasa",true) == 0)
    {
        if(ServerOwner[playerid] && PlayerInfo[playerid][pAdmin] == 3000)
        {
            MenuCasa(playerid,1);
            return 1;
        }
        else return SendClientMessage( playerid, -1, "Você não tem autorização para usar este comando!" );
    }
    if(strcmp(cmd,"/menuemp",true)==0 || strcmp(cmd,"/menuempresa",true)==0)
    {
        if(ServerOwner[playerid] && PlayerInfo[playerid][pAdmin] == 3000)
        {
            MenuCasa(playerid,4);
            return 1;
        }
        else return SendClientMessage( playerid, -1, "Você não tem autorização para usar este comando!" );
    }
    if(strcmp(cmd, "/setarmat", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] == 3000)
        {
            CofreOrg[5][Maconha] = CofreOrg[5][Maconha]+5000;
            CofreOrg[14][Maconha] = CofreOrg[14][Maconha]+5000;
            CofreOrg[17][Maconha] = CofreOrg[17][Maconha]+5000;
            CofreOrg[18][Maconha] = CofreOrg[18][Maconha]+5000;
            CofreOrg[19][Maconha] = CofreOrg[19][Maconha]+5000;
            CofreOrg[20][Maconha] = CofreOrg[20][Maconha]+5000;
            CofreOrg[21][Maconha] = CofreOrg[21][Maconha]+5000;
            CofreOrg[22][Maconha] = CofreOrg[22][Maconha]+5000;
            CofreOrg[23][Maconha] = CofreOrg[23][Maconha]+5000;
            CofreOrg[25][Maconha] = CofreOrg[25][Maconha]+5000;
            CofreOrg[26][Maconha] = CofreOrg[26][Maconha]+5000;
            CofreOrg[27][Maconha] = CofreOrg[27][Maconha]+5000;
            CofreOrg[29][Maconha] = CofreOrg[29][Maconha]+5000;
            CofreOrg[30][Maconha] = CofreOrg[30][Maconha]+5000;
            CofreOrg[31][Maconha] = CofreOrg[31][Maconha]+5000;
            CofreOrg[35][Maconha] = CofreOrg[35][Maconha]+5000;
            CofreOrg[36][Maconha] = CofreOrg[36][Maconha]+5000;

            SendClientMessage(playerid, COLOR_WHITE,"Materiais setados para todas as gang's.");
            return 1;
        }
    }
    if(strcmp(cmd,"/matar",true)==0 || strcmp(cmd,"/kill",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /matar [id]");
                return 1;
            }
            new playa;
            //new Float:shealth;
            playa = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >=1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        if(PlayerInfo[playa][pAdmin] >= 1340 && PlayerInfo[playerid][pAdmin] < 1338)
                        {
                            SendClientMessage(playerid, COLOR_GRAD1, "Você não pode matar um Admin Dono !");
                            return 1;
                        }
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        SetPlayerHealth(playa, 0.0);
                        SetPlayerVirtualWorld(playa,0);
                        printf("AdmAviso: %s matou %s",sendername,  giveplayer);
                        format(string, sizeof(string), "AdmAviso: %s ganhou uma morte de: %s",giveplayer ,sendername);
                        ABroadCast(COLOR_LIGHTRED,string,1);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
            }
        }
        return 1;
    }
//---------------------Lista Animações------------------------------------
    new animid;
    if (strcmp(cmd, "/animes", true) == 0)
    {
        SendClientMessage(playerid, COLOR_YELLOW, "Alguns animes");
        SendClientMessage(playerid, COLOR_PURPLE, "/dance /ligar /desligar /bebado /bomba /apontar /merda /de4 /peidar");
        SendClientMessage(playerid, COLOR_PURPLE, "/handsup /sentar /deitar /abaixar /vomitar /comer /rape /passaramao /fumarbaseado");
        SendClientMessage(playerid, COLOR_PURPLE, "/cobrar /overdose /fumar /fumar2 /mijar /gro /conversar /fodase /taichi");
     return 1;
    }
    if (strcmp(cmd, "/de4", true) == 0)
    {
        if( IsPlayerInAnyVehicle( playerid ) ) return true;
        GetPlayerName(playerid, sendername, sizeof(sendername));
        format(string, sizeof(string), "%s está de 4 ", sendername);
        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        ApplyAnimation(playerid,"FINALE","FIN_Land_Car",4.1,1,1,1,1,1,1);
        PlayerAnim[playerid] = true;
        return 1;
    }
    if (strcmp(cmd, "/handsup", true) == 0)
    {
        if( IsPlayerInAnyVehicle( playerid ) ) return true;
        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
        PlayerAnim[playerid] = true;
        return 1;
    }
    if (strcmp(cmd, "/sentar", true) == 0)
    {
        if( IsPlayerInAnyVehicle( playerid ) ) return true;
        ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
        PlayerAnim[playerid] = true;
         return 1;
    }
    if (strcmp(cmd, "/mijar", true) == 0)
    {
        if( IsPlayerInAnyVehicle( playerid ) ) return true;
        ApplyAnimation(playerid,"PAULNMAC","Piss_in",4.1,0,1,1,1,1);
        PlayerAnim[playerid] = true;
        return 1;
    }
    if(!strcmp(cmd, "/animrobbank", true))
    {
        if( IsPlayerInAnyVehicle( playerid ) ) return true;
        tmp = strtok(cmdtext, idx);
        animid = strval(tmp);
        if(!strlen(tmp)||animid < 1 || animid > 5)
        {
            SendClientMessage(playerid,COLOR_WHITE," Syntax: /animrobbank [1-5]");
            return 1;
        }
        switch(animid)
        {
            case 1: ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_End",4.1,0,1,1,1,1), PlayerAnim[playerid] = true;
            case 2: ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Open",4.1,0,1,1,1,1), PlayerAnim[playerid] = true;
            case 3: ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Open_O",4.1,0,1,1,1,1), PlayerAnim[playerid] = true;
            case 4: ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Rob",4.1,0,1,1,1,1), PlayerAnim[playerid] = true;
            case 5: ApplyAnimation(playerid,"ROB_BANK","SHP_HandsUp_Scr",4.1,0,1,1,1,1), PlayerAnim[playerid] = true;
        }
  return 1;
    }
    if (strcmp(cmd, "/dance", true) == 0)
    {
        if( IsPlayerInAnyVehicle( playerid ) ) return true;
        if(IsPlayerInAnyVehicle(playerid) == 1) return SendClientMessage(playerid,COLOR_RED," Animations are inaccessible in transport!");

        tmp = strtok(cmdtext, idx);
        animid = strval(tmp);
        if(!strlen(tmp)||animid < 1 || animid > 15)
        {
            SendClientMessage(playerid,COLOR_GRAD1," Use: /dance [1-15]");
   return 1;
        }
        switch(animid)
        {
            case 1: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
            case 2: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
            case 3: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
            case 4: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
            case 5:ApplyAnimation(playerid, "DANCING","dance_loop", 4.0, 1, 1, 1, 1, 0, 1), PlayerAnim[playerid] = true;
            case 6:ApplyAnimation(playerid, "DANCING","DAN_Down_A", 4.0, 1, 1, 1, 1, 0, 1), PlayerAnim[playerid] = true;
            case 7:ApplyAnimation(playerid, "DANCING","DAN_Left_A", 4.0, 1, 1, 1, 1, 0, 1), PlayerAnim[playerid] = true;
            case 8:ApplyAnimation(playerid, "DANCING","DAN_Loop_A", 4.0, 1, 1, 1, 1, 0, 1), PlayerAnim[playerid] = true;
            case 9:ApplyAnimation(playerid, "DANCING","DAN_Right_A", 4.0, 1, 1, 1, 1, 0, 1), PlayerAnim[playerid] = true;
            case 10:ApplyAnimation(playerid, "DANCING","DAN_Up_A", 4.0, 1, 1, 1, 1, 0, 1), PlayerAnim[playerid] = true;
            case 11:ApplyAnimation(playerid, "DANCING","dnce_M_a", 4.0, 1, 1, 1, 1, 0, 1), PlayerAnim[playerid] = true;
            case 12:ApplyAnimation(playerid, "DANCING","dnce_M_b", 4.0, 1, 1, 1, 1, 0, 1), PlayerAnim[playerid] = true;
            case 13:ApplyAnimation(playerid, "DANCING","dnce_M_c", 4.0, 1, 1, 1, 1, 0, 1), PlayerAnim[playerid] = true;
            case 14:ApplyAnimation(playerid, "DANCING","dnce_M_d", 4.0, 1, 1, 1, 1, 0, 1), PlayerAnim[playerid] = true;
            case 15:ApplyAnimation(playerid, "DANCING","dnce_M_ e", 4.0, 1, 1, 1, 1, 0, 1), PlayerAnim[playerid] = true;
        }
  return 1;
    }
    if (strcmp(cmd, "/rape", true) == 0)
    {
        if( IsPlayerInAnyVehicle( playerid ) ) return true;
        GetPlayerName(playerid, sendername, sizeof(sendername));
        format(string, sizeof(string), "%s está dançando um repe ^^!.", sendername);
        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        ApplyAnimation(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0), PlayerAnim[playerid] = true;
     return 1;
    }
    if (strcmp(cmd, "/fodase", true) == 0)
    {
        if( IsPlayerInAnyVehicle( playerid ) ) return true;
        ApplyAnimation(playerid, "PED", "fucku", 4.0, 0, 0, 0, 0, 0), PlayerAnim[playerid] = true;
     return 1;
    }
    if (strcmp(cmd, "/taichi", true) == 0)
    {
        if( IsPlayerInAnyVehicle( playerid ) ) return true;
        ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop", 4.0, 1, 0, 0, 0, 0), PlayerAnim[playerid] = true;
     return 1;
    }
    if (strcmp(cmd, "/observar", true) == 0)
    {
        if( IsPlayerInAnyVehicle( playerid ) ) return true;
        ApplyAnimation(playerid, "BAR", "dnk_stndF_loop", 4.0, 1, 0, 0, 0, 0), PlayerAnim[playerid] = true;
     return 1;
    }
    if (strcmp(cmd, "/bebado", true) == 0)
    {
        if( IsPlayerInAnyVehicle( playerid ) ) return true;
        GetPlayerName(playerid, sendername, sizeof(sendername));
        format(string, sizeof(string), "%s está bebado uhul ^^!.", sendername);
        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        ApplyAnimation(playerid, "PED", "WALK_DRUNK", 4.0, 1, 1, 1, 1, 0), PlayerAnim[playerid] = true;
     return 1;
    }
    if (strcmp(cmd, "/deitar", true) == 0)
    {
        if( IsPlayerInAnyVehicle( playerid ) ) return true;
        ApplyAnimation(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0), PlayerAnim[playerid] = true;
     return 1;
    }
    if (strcmp(cmd, "/abaixar", true) == 0)
    {
        if( IsPlayerInAnyVehicle( playerid ) ) return true;
        ApplyAnimation(playerid, "ped", "cower", 3.0, 1, 0, 0, 0, 0), PlayerAnim[playerid] = true;
     return 1;
    }
    if (strcmp(cmd, "/vomitar", true) == 0)
    {
        if( IsPlayerInAnyVehicle( playerid ) ) return true;
        GetPlayerName(playerid, sendername, sizeof(sendername));
        format(string, sizeof(string), "%s está vomitando ^^!.", sendername);
        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0), PlayerAnim[playerid] = true;
     return 1;
    }
    if (strcmp(cmd, "/passaramao", true) == 0)
    {
        if( IsPlayerInAnyVehicle( playerid ) ) return true;
        ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0), PlayerAnim[playerid] = true;
     return 1;
    }
    if (strcmp(cmd, "/cobrar", true) == 0)
    {
        if( IsPlayerInAnyVehicle( playerid ) ) return true;
        ApplyAnimation(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 0, 0, 0, 0), PlayerAnim[playerid] = true;
     return 1;
    }
    if (strcmp(cmd, "/overdose", true) == 0)
    {
        if( IsPlayerInAnyVehicle( playerid ) ) return true;
        ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0), PlayerAnim[playerid] = true;
     return 1;
    }
    if (strcmp(cmd, "/fumar", true) == 0)
    {
        if( IsPlayerInAnyVehicle( playerid ) ) return true;
        ApplyAnimation(playerid, "SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0), PlayerAnim[playerid] = true;
     return 1;
    }
    if (strcmp(cmd, "/fumarbaseado", true) == 0)
    {
        if( IsPlayerInAnyVehicle( playerid ) ) return true;
        GetPlayerName(playerid, sendername, sizeof(sendername));
        format(string, sizeof(string), "%s está fumando um baseado ^^!.", sendername);
        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        ApplyAnimation(playerid, "SMOKING", "F_smklean_loop", 4.0, 1, 0, 0, 0, 0), PlayerAnim[playerid] = true;
     return 1;
    }
    if (strcmp(cmd, "/fumar2", true) == 0)
    {
        if( IsPlayerInAnyVehicle( playerid ) ) return true;
        ApplyAnimation(playerid, "SMOKING", "F_smklean_loop", 4.0, 1, 0, 0, 0, 0), PlayerAnim[playerid] = true;
     return 1;
    }
    if (strcmp(cmd, "/gro", true) == 0)
    {
        if( IsPlayerInAnyVehicle( playerid ) ) return true;
        ApplyAnimation(playerid, "BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0), PlayerAnim[playerid] = true;
     return 1;
    }
    if (strcmp(cmd, "/peidar", true) == 0)
    {
        if( IsPlayerInAnyVehicle( playerid ) ) return true;
        GetPlayerName(playerid, sendername, sizeof(sendername));
        format(string, sizeof(string), "%s Acabou de soltar um peido snif snif ^^!.", sendername);
        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        ApplyAnimation(playerid,"FINALE","FIN_Land_Car",4.1,1,1,1,1,1,1), PlayerAnim[playerid] = true;
     return 1;
    }
//============================[fim dos animes]============================================
    if(strcmp(cmd,"/retirararmas",true)==0 || strcmp(cmd,"/rarmas",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /retirararmas [id]");
                return 1;
            }
            new playa;
            playa = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 4)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        ResetPlayerWeapons(playa);
                        printf("AdmAviso: %s retirou as armas de %s",sendername,  giveplayer);
                        format(string, sizeof(string), "AdmAviso: %s teve as armas retiradas por: %s",giveplayer ,sendername);
                        ABroadCast(COLOR_LIGHTRED,string,1);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/bloquear", true) == 0)
    {
        if( PlayerInfo[ playerid ][ pAdmin ] > 0 ){
            new id, tempo, str[ 128 ],pName[ 25 ], pAdminName[ 25 ];
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /bloquear [ id ][ tempo ]");
                return 1;
            }
            id = ReturnUser( tmp );
            tmp = strtok(cmdtext, idx);
            tempo = strval( tmp );
            if( !IsPlayerConnected( id ) ) return SendClientMessage( playerid, -1, "Player não esta conectado." );
            else if( PlayerInfo[ id ][ pAdmin ] == 3000 ) return SendClientMessage( playerid, -1, "Você não pode bloquear um dono." );
            if( tempo < 1 ) return SendClientMessage( playerid, -1, "O tempo deve ser maior que 'ZERO'" );
            PlayerInfo[ id ][ pTimeBlock ] = gettime() + ( tempo*60 );
            BlockAccount[ playerid ] = true;
            GetPlayerName( id, pName, sizeof pName );
            GetPlayerName( playerid, pAdminName, sizeof pAdminName );
            format( str, sizeof str, "{EE0000}O admin %s bloqueou a conta do player %s por %d minuto(s)", pAdminName, pName, tempo );
            SendClientMessageToAll( -1, str );
            return true;
        }
        else return SendClientMessage( playerid, -1, "Sem autorização." );
    }
    if(strcmp(cmd, "/desbloquear", true) == 0)
    {
        if( PlayerInfo[ playerid ][ pAdmin ] > 0 ){
            new id, str[ 128 ],pName[ 25 ], pAdminName[ 25 ];
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /desbloquear [ id ]");
                return 1;
            }
            id = ReturnUser( tmp );
            if( !IsPlayerConnected( id ) ) return SendClientMessage( playerid, -1, "Player não esta conectado." );
            if( BlockAccount[ playerid ] == false ) return SendClientMessage( playerid, -1, "A conta não esta bloqueada." );
        //  else if( PlayerInfo[ id ][ pAdmin ] == 3000 ) return SendClientMessage( playerid, -1, "Você não pode bloquear um dono." );
            PlayerInfo[ id ][ pTimeBlock ] = 0;
            BlockAccount[ playerid ] = false;
            GetPlayerName( id, pName, sizeof pName );
            GetPlayerName( playerid, pAdminName, sizeof pAdminName );
            format( str, sizeof str, "{EE0000}O admin %s desbloqueou a conta do player %s.", pAdminName, pName );
            SendClientMessageToAll( -1, str );
            return true;
        }
        else return SendClientMessage( playerid, -1, "Sem autorização." );
    }
    if(strcmp(cmd, "/equiparid", true) == 0)
    {
        if( PlayerInfo[ playerid ][ pAdmin ] > 3 ){
            new
                id,
                pName[ 25 ],
                pNameAdmin[ 25 ],
                str[ 128 ]
            ;
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /equiparid [id]");
                return 1;
            }
            id = ReturnUser( tmp );
            if( !IsPlayerConnected( id ) ) return SendClientMessage( playerid, -1, "Este playerid não esta conectado." );
            GivePlayerWeapon( id, 24, 700 );
            GivePlayerWeapon( id, 25, 700 );
            GivePlayerWeapon( id, 31, 700 );
            SetPlayerHealth( id, 100 );
            SetPlayerArmour( id, 100 );
            GetPlayerName( id, pName,sizeof pName );
            GetPlayerName( playerid, pNameAdmin, sizeof pNameAdmin );
            format( str, sizeof str, "O player %s foi equipado pelo admin %s.", pName, pNameAdmin );
            ProxDetector(20.0, id, str,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF );
            return true;
        }
        else return SendClientMessage( playerid, -1, "Sem autorização." );
    }
    if(strcmp(cmd, "/calar", true) == 0 || strcmp(cmd, "/mutar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /calar [id]");
                return 1;
            }
            new playa;
            playa = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        if(PlayerInfo[playa][pAdmin] >= 1340 && PlayerInfo[playerid][pAdmin] < 1338)
                        {
                            SendClientMessage(playerid, COLOR_GRAD1, "Você não pode calar um Admin Dono !");
                            return 1;
                        }
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        if(PlayerInfo[playa][pMuted] == 0)
                        {
                            PlayerInfo[playa][pMuted] = 1;
                            printf("AdmAviso: %s silenced %s",sendername,  giveplayer);
                            format(string, sizeof(string), "AdmAviso: %s foi calado por %s",giveplayer ,sendername);
                            ABroadCast(COLOR_LIGHTRED,string,1);
                        }
                        else
                        {
                            PlayerInfo[playa][pMuted] = 0;
                            printf("AdmAviso: %s unsilenced %s",sendername,  giveplayer);
                            format(string, sizeof(string), "AdmAviso: %s foi descalado por %s",giveplayer ,sendername);
                            ABroadCast(COLOR_LIGHTRED,string,1);
                        }
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
            }
        }
        return 1;
    }
// infoarmas , infoplayer , infoxiter
    if(strcmp(cmd, "/infoarmas", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_WHITE, "USE: /infoarmas [id do player]");
                return 1;
            }
            if(PlayerInfo[playerid][pAdmin] < 1 )
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não está autorizado a usar esse comando!");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    new weapons[13][2];
                    new playerck[MAX_PLAYER_NAME];
                    GetPlayerName(giveplayerid, playerck, sizeof(playerck));
                    format(string, sizeof(string), "EXIBINDO AS INFORMAÇÕES DAS ARMAS DE: %s",playerck);
                    SendClientMessage(playerid, TEAM_BALLAS_COLOR, string);
                    GetPlayerWeaponData(giveplayerid, 2, weapons[2][0], weapons[2][1]);
                    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[2][0]], weapons[2][1]);
                    SendClientMessage(playerid, COLOR_WHITE, string);
                    GetPlayerWeaponData(giveplayerid, 3, weapons[3][0], weapons[3][1]);
                    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[3][0]], weapons[3][1]);
                    SendClientMessage(playerid, COLOR_WHITE, string);
                    GetPlayerWeaponData(giveplayerid, 4, weapons[4][0], weapons[4][1]);
                    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[4][0]], weapons[4][1]);
                    SendClientMessage(playerid, COLOR_WHITE, string);
                    GetPlayerWeaponData(giveplayerid, 5, weapons[5][0], weapons[5][1]);
                    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[5][0]], weapons[5][1]);
                    SendClientMessage(playerid, COLOR_WHITE, string);
                    GetPlayerWeaponData(giveplayerid, 6, weapons[6][0], weapons[6][1]);
                    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[6][0]], weapons[6][1]);
                    SendClientMessage(playerid, COLOR_WHITE, string);
                    GetPlayerWeaponData(giveplayerid, 7, weapons[7][0], weapons[7][1]);
                    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[7][0]], weapons[7][1]);
                    SendClientMessage(playerid, COLOR_WHITE, string);
                    GetPlayerWeaponData(giveplayerid, 8, weapons[8][0], weapons[8][1]);
                    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[8][0]], weapons[8][1]);
                    SendClientMessage(playerid, COLOR_WHITE, string);
                    GetPlayerWeaponData(giveplayerid, 9, weapons[9][0], weapons[9][1]);
                    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[9][0]], weapons[9][1]);
                    SendClientMessage(playerid, COLOR_WHITE, string);
                    GetPlayerWeaponData(giveplayerid, 11, weapons[11][0], weapons[11][1]);
                    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[11][0]], weapons[11][1]);
                    SendClientMessage(playerid, COLOR_WHITE, string);
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Este jogador está off-line !");
                return 1;
            }
        }
        return 1;
    }
//---------------------------------------------------------------------------------------
    if(strcmp(cmd, "/infoplayer", true) == 0)
    {
        new armatext[30];
        new municao;
        new arma;
        new Float:plrtempheal;
        new Float:plrarmour;
        new plrping;
        new iplayer[MAX_PLAYER_NAME];
        new plrIP[16];
        new smunicao;
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_WHITE, "USE: /infoplayer [id do player]");
                return 1;
            }
            if(PlayerInfo[playerid][pAdmin] < 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não está autorizado a usar esse comando!");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    GetPlayerIp(giveplayerid, plrIP, sizeof(plrIP));
                    GetPlayerName(giveplayerid, iplayer, sizeof(iplayer));
                    plrping = GetPlayerPing(giveplayerid);
                    GetPlayerArmour(giveplayerid, plrarmour);
                    GetPlayerHealth(playerid,plrtempheal);
                    arma = GetPlayerWeapon(giveplayerid);
                    municao = GetPlayerAmmo(giveplayerid);
                    SendClientMessage(playerid, COLOR_GREEN, "|__________________ EXIBINDO INFORMAÇÕES __________________|");
                    format(string, sizeof(string), "Nome: %s", iplayer);
                    SendClientMessage(playerid, COLOR_GRAD1, string);
                    format(string, sizeof(string), "IP: %s", plrIP);
                    SendClientMessage(playerid, COLOR_GRAD1, string);
                    format(string, sizeof(string), "Ping: %d", plrping);
                    SendClientMessage(playerid, COLOR_GRAD1, string);
                    format(string, sizeof(string), "Colete: %1f", plrarmour);
                    SendClientMessage(playerid, COLOR_GRAD1, string);
                    format(string, sizeof(string), "Saúde: %1f", plrtempheal);
                    SendClientMessage(playerid, COLOR_GRAD1, string);
                    if(arma == 38) { armatext = "Minigun"; }
                    else if(arma == 40) { armatext = "Detonador"; }
                    else if(arma == 36) { armatext = "Lança missil RPG"; }
                    else if(arma == 35) { armatext = "Lança missil"; }
                    else if(arma == 16) { armatext = "Granada"; }
                    else if(arma == 18) { armatext = "Coctel Molotov"; }
                    else if(arma == 22) { armatext = "Pistola de Duas mãos 9mm"; }
                    else if(arma == 26) { armatext = "Escopeta de Cano Serrado"; }
                    else if(arma == 27) { armatext = "Escopeta de Combate"; }
                    else if(arma == 28) { armatext = "Micro Uzi"; }
                    else if(arma == 32) { armatext = "Tec9"; }
                    else if(arma == 37) { armatext = "Lança Chamas"; }
                    else if(arma == 0) { armatext = "Desarmado"; }
                    else if(arma == 4) { armatext = "Faca"; }
                    else if(arma == 5) { armatext = "Bastão de Base Ball"; }
                    else if(arma == 9) { armatext = "Motoserra"; }
                    else if(arma == 14) { armatext = "Flores"; }
                    else if(arma == 17) { armatext = "Granada de Gas"; }
                    else if(arma == 23) { armatext = "Pistola com silênciador"; }
                    else if(arma == 16) { armatext = "Granada"; }
                    else if(arma == 24) { armatext = "Desert Eagle"; }
                    else if(arma == 25) { armatext = "ShotGun"; }
                    else if(arma == 29) { armatext = "MP5"; }
                    else if(arma == 30) { armatext = "AK-47"; }
                    else if(arma == 31) { armatext = "M4"; }
                    else if(arma == 33) { armatext = "Rifle"; }
                    else if(arma == 41) { armatext = "Spray"; }
                    else if(arma == 42) { armatext = "Extintor"; }
                    else if(arma == 46) { armatext = "Paraquedas"; }
                    else { armatext = "Desconhecido"; }
                    format(string, sizeof(string), "Arma: %s", armatext);
                    SendClientMessage(playerid, COLOR_GRAD1, string);
                    if(arma == 38 || arma == 40 || arma == 36 || arma == 35 || arma == 16 || arma == 18 || arma == 26 || arma == 27 || arma == 28 || arma == 32 || arma == 37)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "/tv nele, pois ele pode estar usando xiter de armas");
                    }
                    if(municao == 65535) { smunicao = 0; } else { smunicao = municao; }
                    format(string, sizeof(string), "Munição: %d", smunicao);
                    SendClientMessage(playerid, COLOR_GRAD1, string);
                 }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Este jogador está off-line !");
                return 1;
            }
        }
        return 1;
    }
//---------------Guinchar----------------------------------
    if(strcmp(cmd,"/guinchar",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsAMec(playerid) || PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
            {
                if(IsPlayerInAnyVehicle(playerid))
                {
                    if (GetVehicleModel(GetPlayerVehicleID(playerid)) == 525)
                    {
                        if(GetPlayerState(playerid)==2)
                        {
                            new Float:pX,Float:pY,Float:pz;
                            GetPlayerPos(playerid,pX,pY,pz);
                            new Float:vX,Float:vY,Float:vZ;
                            new Found=0;
                            new vid=0;
                            while((vid<MAX_VEHICLES)&&(!Found))
                            {
                                vid++;
                                GetVehiclePos(vid,vX,vY,vZ);
                                if ((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pz-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
                                {
                                    if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
                                    {
                                        DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
                                    }
                                    else
                                    {
                                       AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));
                                    }
                                }
                            }
                            if(!Found)
                            {
                                SendClientMessage(playerid,COLOR_GREY,"Não tem nenhum carro perto.");
                            }
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GRAD2, "Você precisa estar dirigindo!");
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD2, "Você não tem um Guincho!");
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "Você não está em um guincho!");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid,COLOR_GRAD2,"Você não é mecanico!");
                return 1;
            }
        }
        return 1;
    }
    //---------------- Sincronizar ----------------------------
    /*if(strcmp(cmdtext, "/sinc", true) == 0 || strcmp(cmdtext, "/sincronizar", true) == 0)
    {
        if(GetPlayerState(playerid) == 9|| GetPlayerState(playerid) == 5 || GetPlayerState(playerid) == 6 ||GetPlayerState(playerid) == 4|| GetPlayerState(playerid) == 0 || sincronizando[playerid] == 1 || PlayerInfo[playerid][pJailed] != 0 || PlayerInfo[playerid][pMuted] == 1)
        {
            SendClientMessage(playerid,COLOR_YELLOW," Você não pode sincronizar agora!");
            return 1;
        }
        if(PlayerPaintballing[playerid] != 0)
        {
            SendClientMessage(playerid,COLOR_YELLOW," Você não pode sincronizar no evento!");
            return 1;
        }
        if(psinc == 1)
        {
            SendClientMessage(playerid,COLOR_GRAD2,"Já sincronizaram,tente daqui a pouco!");
            return 1;
        }
        sincronizando[playerid] = 1;
        virt[playerid] = GetPlayerVirtualWorld(playerid);
        interior[playerid] = GetPlayerInterior(playerid);
        skinneg[playerid] = GetPlayerSkin(playerid);
        GetPlayerArmour(playerid,APP[playerid]);
        GetPlayerHealth(playerid,PlayerHPP[playerid]);
        GetPlayerFacingAngle(playerid,FaceAngle[playerid]);
        GetPlayerPos(playerid,xx[playerid],yy[playerid],zz[playerid]);
        GetPlayerWeaponData(playerid,1,gunsinc[1][playerid],ammoo[1][playerid]);
        GetPlayerWeaponData(playerid,2,gunsinc[2][playerid],ammoo[2][playerid]);
        GetPlayerWeaponData(playerid,3,gunsinc[3][playerid],ammoo[3][playerid]);
        GetPlayerWeaponData(playerid,4,gunsinc[4][playerid],ammoo[4][playerid]);
        GetPlayerWeaponData(playerid,5,gunsinc[5][playerid],ammoo[5][playerid]);
        GetPlayerWeaponData(playerid,6,gunsinc[6][playerid],ammoo[6][playerid]);
        GetPlayerWeaponData(playerid,7,gunsinc[7][playerid],ammoo[7][playerid]);
        GetPlayerWeaponData(playerid,8,gunsinc[8][playerid],ammoo[8][playerid]);
        GetPlayerWeaponData(playerid,9,gunsinc[9][playerid],ammoo[9][playerid]);
        GetPlayerWeaponData(playerid,10,gunsinc[10][playerid],ammoo[10][playerid]);
        GetPlayerWeaponData(playerid,11,gunsinc[11][playerid],ammoo[11][playerid]);
        GetPlayerWeaponData(playerid,12,gunsinc[12][playerid],ammoo[12][playerid]);
        psinc = 1;
        TempoSincronizar = SetTimer("Sinc", 8000, 0);
        if(IsPlayerInAnyVehicle(playerid))
        {
            vehicledd[playerid] = 1;
            VehicleIDD[playerid] = GetPlayerVehicleID(playerid);
        }
        Hospital[playerid] = 1;
        SpawnPlayer(playerid);
        TempoSinc = SetTimerEx("Sincronizar", 500, 0, "i", playerid);
        return 1;
    }*/
//------------------------ Dominar --------------------------
    if(strcmp(cmd, "/dominar", true) == 0 || strcmp(cmd, "/do", true) == 0)
    {
        new carid = GetPlayerVehicleID(playerid),OrgID = GetPlayerOrg(playerid);
        if(IsAPlane(carid))
        {
            SendClientMessage(playerid, COLOR_GRAD5, "Você não pode usar esse comando dentro de um heli ou avião.");
            return 1;
        }
        if(OrgID == 27 || OrgID == 1 || OrgID == 2 || OrgID == 5 || OrgID == 14 || OrgID == 17 || OrgID == 18 || OrgID == 19 || OrgID == 20 || OrgID == 26 || OrgID == 29 || OrgID == 30 || OrgID == 31 || OrgID == 35 || OrgID == 36 || OrgID == 34 || OrgID == 28)
        {
            if(IsPlayerInShop(playerid))
            {
                if(Dominando[playerid] == 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
                    return 1;
                }
                if(GuerranoShop == 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma guerra nesse territorio.");
                    return 1;
                }
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s estão dominando o Shopping Center!",playername,NomeORGTr(OrgID));
                SendClientMessageToAll(OrgCor(OrgID), string);
                SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
                SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar está area .");
                GangZoneFlashForAll(GZShop,OrgCor(OrgID));
                Dominando[playerid] = 1;
                ProvocoShop[playerid] = 1;
                GuerranoShop = 1;
                TempoGuerraShop = SetTimerEx("GuerraShop", 30000, 0, "i", playerid);
                return 1;
            }
            if(IsPlayerInPark(playerid))
            {
                if(Dominando[playerid] == 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
                    return 1;
                }
                if(GuerranoPark == 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma guerra nesse territorio.");
                    return 1;
                }
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s estão dominando o Parque Gleen!",playername,NomeORGTr(OrgID));
                SendClientMessageToAll(OrgCor(OrgID), string);
                SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
                SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar está area .");
                GangZoneFlashForAll(GZPark,OrgCor(OrgID));
                Dominando[playerid] = 1;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
                TempoGuerraPark = SetTimerEx("GuerraPark", 30000, 0, "i", playerid);
                return 1;
            }
            if(IsPlayerInCemiterio(playerid))
            {
                if(Dominando[playerid] == 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
                    return 1;
                }
                if(GuerranoCemiterio == 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma guerra nesse territorio.");
                    return 1;
                }
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s estão dominando o Cemitério!",playername,NomeORGTr(OrgID));
                SendClientMessageToAll(OrgCor(OrgID), string);
                SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
                SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar está area .");
                GangZoneFlashForAll(GZCemiterio,OrgCor(OrgID));
                Dominando[playerid] = 1;
                ProvocoCemiterio[playerid] = 1;
                GuerranoCemiterio = 1;
                TempoGuerraCemiterio = SetTimerEx("GuerraCemiterio", 30000, 0, "i", playerid);
                return 1;
            }
            if(IsPlayerInSkate(playerid))
            {
                if(Dominando[playerid] == 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
                    return 1;
                }
                if(GuerranoSkate == 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma guerra nesse territorio.");
                    return 1;
                }
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s estão dominando a Pista de Skate!",playername,NomeORGTr(OrgID));
                SendClientMessageToAll(OrgCor(OrgID), string);
                SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
                SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar está area .");
                GangZoneFlashForAll(GZSkate,OrgCor(OrgID));
                Dominando[playerid] = 1;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
                TempoGuerraSkate = SetTimerEx("GuerraSkate", 30000, 0, "i", playerid);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD3, "Você não está em nenhum território!");
            }
        }
        else if(OrgID == 12 || OrgID == 13 || OrgID == 32)//Máfia Russa
        {
            if(IsPlayerInEstacao(playerid))
            {
                if(Dominando[playerid] == 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
                    return 1;
                }
                if(GuerranaEstacao == 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma guerra nesse territorio.");
                    return 1;
                }
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s estão dominando a Estação Unity!",playername,NomeORGTr(OrgID));
                SendClientMessageToAll(OrgCor(OrgID), string);
                SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
                SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar está area .");
                GangZoneFlashForAll(GZEstacao,OrgCor(OrgID));
                Dominando[playerid] = 1;
                ProvocoEstacao[playerid] = 1;
                GuerranaEstacao = 1;
                TempoGuerraEstacao = SetTimerEx("GuerraEstacao", 30000, 0, "i", playerid);
                return 1;
            }
            else if(IsPlayerInCasarao(playerid))
            {
                if(Dominando[playerid] == 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
                    return 1;
                }
                if(GuerranoCasarao == 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma guerra nesse territorio.");
                    return 1;
                }
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s estão dominando o Casarão Abandonado!",playername,NomeORGTr(OrgID));
                SendClientMessageToAll(OrgCor(OrgID), string);
                SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
                SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar está area .");
                GangZoneFlashForAll(GZCasarao,OrgCor(OrgID));
                Dominando[playerid] = 1;
                ProvocoCasarao[playerid] = 1;
                GuerranoCasarao = 1;
                TempoGuerraCasarao = SetTimerEx("GuerraCasarao", 30000, 0, "i", playerid);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD3, "Você não está em nenhum território!");
            }
        }
        else if(OrgID == 21 || OrgID == 22 || OrgID == 23 || OrgID == 25)// Hells Angels
        {
            if(IsPlayerInCemiterio(playerid))
            {
                if(Dominando[playerid] == 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
                    return 1;
                }
                if(GuerranoCemiterio == 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma guerra nesse territorio.");
                    return 1;
                }
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s estão dominando o Cemitério!",playername,NomeORGTr(OrgID));
                SendClientMessageToAll(OrgCor(OrgID), string);
                SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
                SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar está area .");
                GangZoneFlashForAll(GZCemiterio,OrgCor(OrgID));
                Dominando[playerid] = 1;
                ProvocoCemiterio[playerid] = 1;
                GuerranoCemiterio = 1;
                TempoGuerraCemiterio = SetTimerEx("GuerraCemiterio", 30000, 0, "i", playerid);
                return 1;
            }
            if(IsPlayerInGamer(playerid))
            {
                if(Dominando[playerid] == 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
                    return 1;
                }
                if(GuerranoGamer == 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma guerra nesse territorio.");
                    return 1;
                }
                if(TomouGamer == 1)
                {
                        format(string, sizeof(string), "O Palominio Creek Continuará sobre o Domínio do %s Durante 15 minutos!",NomeORGTr(DonoGamer));
                        SendClientMessage(playerid, OrgCor(OrgID), string);
                        return 1;
                }
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s estão dominando o Palomínio Creek!",playername,NomeORGTr(OrgID));
                SendClientMessageToAll(OrgCor(OrgID), string);
                SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
                SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar está area .");
                Dominando[playerid] = 1;
                ProvocoGamer[playerid] = 1;
                GuerranoGamer = 1;
                TempoGuerraGamer = SetTimerEx("GuerraGamer", 60000, 0, "i", playerid);
                return 1;
            }
            if(IsPlayerInPosto(playerid))
            {
                if(Dominando[playerid] == 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
                    return 1;
                }
                if(GuerranoPosto == 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma guerra nesse territorio.");
                    return 1;
                }
                if(TomouPosto == 1)
                {
                        format(string, sizeof(string), "O Posto de Gasolina Continuará sobre o Domínio do %s Durante 15 minutos!",NomeORGTr(donoPosto));
                        SendClientMessage(playerid, OrgCor(OrgID), string);
                        return 1;
                }
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s estão dominando o Posto de Gasolina Abandonado",playername,NomeORGTr(OrgID));
                SendClientMessageToAll(OrgCor(OrgID), string);
                SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
                SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar está area .");
                GangZoneFlashForAll(GZPosto,OrgCor(OrgID));
                Dominando[playerid] = 1;
                ProvocoPosto[playerid] = 1;
                GuerranoPosto = 1;
                TempoGuerraPosto = SetTimerEx("GuerraPosto", 60000, 0, "i", playerid);
                return 1;
            }
            if(IsPlayerInShop(playerid))
            {
                if(Dominando[playerid] == 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
                    return 1;
                }
                if(GuerranoShop == 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma guerra nesse territorio.");
                    return 1;
                }
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s estão dominando o Shopping Center!",playername,NomeORGTr(OrgID));
                SendClientMessageToAll(OrgCor(OrgID), string);
                SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
                SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar está area .");
                GangZoneFlashForAll(GZShop,OrgCor(OrgID));
                Dominando[playerid] = 1;
                ProvocoShop[playerid] = 1;
                GuerranoShop = 1;
                TempoGuerraShop = SetTimerEx("GuerraShop", 30000, 0, "i", playerid);
                return 1;
            }
            if(IsPlayerInPark(playerid))
            {
                if(Dominando[playerid] == 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
                    return 1;
                }
                if(GuerranoPark == 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma guerra nesse territorio.");
                    return 1;
                }
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s estão dominando o Parque Gleen!",playername,NomeORGTr(OrgID));
                SendClientMessageToAll(OrgCor(OrgID), string);
                SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
                SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar está area .");
                GangZoneFlashForAll(GZPark,OrgCor(OrgID));
                Dominando[playerid] = 1;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
                TempoGuerraPark = SetTimerEx("GuerraPark", 30000, 0, "i", playerid);
                return 1;
            }
            if(IsPlayerInSkate(playerid))
            {
                if(Dominando[playerid] == 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
                    return 1;
                }
                if(GuerranoSkate == 1)
                {
                    SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma guerra nesse territorio.");
                    return 1;
                }
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s estão dominando a Pista de Skate!",playername,NomeORGTr(OrgID));
                SendClientMessageToAll(OrgCor(OrgID), string);
                SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
                SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar está area .");
                GangZoneFlashForAll(GZSkate,OrgCor(OrgID));
                Dominando[playerid] = 1;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
                TempoGuerraSkate = SetTimerEx("GuerraSkate", 30000, 0, "i", playerid);
                return 1;
            }
            else
            {
                return SendClientMessage(playerid, COLOR_GRAD3, "Você não está em nenhum território!");
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_GRAD3, "Você não Pode usar Este comando!");
        }
        return 1;
    }
    if(strcmp(cmd, "/gdp", true) == 0 || strcmp(cmd, "/guerradepontos", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 3000)
            {
                if(Morro[Guerra] == 0)
                {
                    IniciandoGuerra = SetTimer("IniciarGuerraMorro", 5000, false);
                    IniciarMusica();
                }
                else
                {
                    FinalizandoGuerra = SetTimer("FinalizarGuerraMorro", 8000, false);
                    TextosGuerraIniciar();
                }
            }
            return 1;
        }
    }
    if(strcmp(cmd, "/infoban", true) == 0)
    {
        if( PlayerInfo[ playerid ][ pAdmin ] < 1 ) return SendClientMessage( playerid, -1, "Sem autorização.." );
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_GRAD2, "USE: /infoban [ Nick completo do Player ]");
            return 1;
        }
        new
            str[ 350 ],
            account[ 50 ]
        ;
        format( account, sizeof account, "Banidos/%s.ini", tmp );
        if( dini_Exists( account ) ){
            format( str, sizeof str, "{48D1CC}\t.:Info Ban:.\n\nConta: {FFFFFF}%s\n{48D1CC}Motivo: {FFFFFF}%s\n{48D1CC}Administrador: {FFFFFF}%s\n{48D1CC}IP: {FFFFFF}%s\n{48D1CC}Data: {FFFFFF}%s às %s", tmp, dini_Get( account, "Motivo" ), dini_Get( account, "Admin" ), dini_Get( account, "IP" ), dini_Get( account, "Data" ), dini_Get( account, "Hora" ) );
            ShowPlayerDialog( playerid, 1654, DIALOG_STYLE_MSGBOX, "{FFFFFF}Banidos", str, "Sair", "" );
        }
        else return SendClientMessage( playerid, -1, "Conta digitada não esta banida." );
        return true;
    }
    if(strcmp(cmd, "/guerra", true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid, CINZA," Você não pode criar guerra na cadeia!");
            return 1;
        }
        if(TendoGuerra >= 1)
        {
            SendClientMessage(playerid, CINZA, "   Já está tendo uma guerra!");
            return 1;
        }
        new Float:x,Float:y,Float:z;
        if(GetPlayerOrg(playerid) == 3 || GetPlayerOrg(playerid) == 6 || GetPlayerOrg(playerid) == 15 )
        {
      GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            new location[MAX_ZONE_NAME];
            GetPlayer2DZone(playerid, location, MAX_ZONE_NAME);
            format(string, sizeof(string), "%s e a %s iniciaram uma Guerra em %s, Nao se aproxime!",playername,NomeORG(playerid),location);
            SendClientMessageToAll(GetPlayerColor(playerid), string);
            GetPlayerPos(playerid,x,y,z);
            Territorio[MinX] = x-280;
            Territorio[MinY] = y-280;
            Territorio[MaxX] = x+280;
            Territorio[MaxY] = y+280;
            for(new opt=0; opt<MAX_ORGS; opt++)
            {
                GPontos[opt] = 0;
            }
            GZGuerra = GangZoneCreate(x-280,y-280,x+280,y+280);
            PiscarGuerra();
            //vinnyInfo[playerid][InicioGuerra] = 1;
            TendoGuerra = 1;
            //FinalizarGuerra = 0;
            Pguerra = SetTimer("GuerraTerror", 3000, 1);
            Pguerra = SetTimer("FimGuerra", 3600000, 0);
            //TempoGuerra = SetTimerEx("GuerraTerrorista", 180000, 0, "i", playerid);
            return 1;
        }
    }
 if(strcmp(cmd, "/finalizarguerra", true) == 0)
    {
        if(TendoGuerra == 0)
        {
            SendClientMessage(playerid, COLOR_GREY, " Não tem uma hora de guerra ainda!");
            return 1;
        }
        if(PlayerInfo[playerid][pAdmin] < 1337)
        {
            SendClientMessage(playerid, CINZA," Você não tem permicao para usar esse comando");
            return 1;
        }
        FimGuerra();
        return 1;
    }
//----------------------------------[Kick]------------------------------------------------
    if(strcmp(cmd, "/kick", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /kick [Id Do Jogador] [motivo]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        if(PlayerInfo[giveplayerid][pAdmin] >= 1340 && PlayerInfo[playerid][pAdmin] < 1338)
                        {
                            SendClientMessage(playerid, COLOR_GRAD1, "Você não pode kickar um Admin Dono !");
                            return 1;
                        }
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        new length = strlen(cmdtext);
                        while ((idx < length) && (cmdtext[idx] <= ' '))
                        {
                            idx++;
                        }
                        new offset = idx;
                        new result[100];
                        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                        {
                            result[idx - offset] = cmdtext[idx];
                            idx++;
                        }
                        result[idx - offset] = EOS;
                        if(!strlen(result))
                        {
                            SendClientMessage(playerid, COLOR_GRAD2, "USE: /kick [Id Do Jogador] [motivo]");
                            return 1;
                        }
                        getdate(year, month, day);
                        format(string, sizeof(string), "AdmAviso: %s foi kickado por %s, Motivo: %s (%d-%d-%d)", giveplayer, sendername, (result),day,month,year);
                        KickLog(string);
                        format(string, sizeof(string), "AdmAviso: %s foi kickado por %s, Motivo: %s", giveplayer, sendername, (result));
                        SendClientMessageToAll(COLOR_LIGHTRED, string);
                        Kick(giveplayerid);
                        return 1;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Esse não é um jogador ativo.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/aviso", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /aviso [id] [motivo]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        new length = strlen(cmdtext);
                        while ((idx < length) && (cmdtext[idx] <= ' '))
                        {
                            idx++;
                        }
                        new offset = idx;
                        new result[100];
                        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                        {
                            result[idx - offset] = cmdtext[idx];
                            idx++;
                        }
                        result[idx - offset] = EOS;
                        if(!strlen(result))
                        {
                            SendClientMessage(playerid, COLOR_GRAD2, "USE: /aviso [id] [motivo]");
                            return 1;
                        }
                        PlayerInfo[giveplayerid][pWarns] += 1;
                        if(PlayerInfo[giveplayerid][pAdmin] >= 3000)
                        {
                            SendClientMessage(playerid, COLOR_GRAD1, "Você não pode banir um Admin Dono !");
                            return 1;
                        }
                        if(PlayerInfo[giveplayerid][pWarns] >= 3)
                        {
                            getdate(year, month, day);
                            if(BaniuPlayer[playerid] >= 1)
                            {
                                SBan(playerid, "Tentativa de Ban-ALL", "Automático");
                                return 1;
                            }
                            format(string, sizeof(string), "AdmAviso: %s foi banido por %s, Motivo: %s (%d-%d-%d)", giveplayer, sendername, (result),day,month,year);
                            BanLog(string);
                            format(string, sizeof(string), "AdmAviso: %s foi banido por %s (Tinha 3 Avisos), Motivo: %s", giveplayer, sendername, (result));
                            SendClientMessageToAll(COLOR_LIGHTRED, string);
                            getdate(Ano, Mes, Dia);
                            SBan(giveplayerid, "Terceiro Aviso", sendername);
                            BaniuPlayer[playerid] ++;
                            SetTimerEx("PlayerBanALL", 7000,false,"i",playerid);
                            return 1;
                        }
                        format(string, sizeof(string), "AdmAviso: %s foi avisado por %s, Motivo: %s", giveplayer, sendername, (result));
                        SendClientMessageToAll(COLOR_LIGHTRED, string);
                        return 1;
                    }
                }//not connected
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Esse não é um jogador ativo.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/banoff", true) == 0 || strcmp(cmd, "/aban", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new playa[64];
            playa = strtok(cmdtext, idx);
            //tmp = strtok(cmdtext, idx);
            if(!strlen(playa))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /banoff [ nick/ip ] [ Motivo ]");
                return 1;
            }
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                new length = strlen(cmdtext);
                while ((idx < length) && (cmdtext[idx] <= ' '))
                {
                    idx++;
                }
                new offset = idx;
                new result[100];
                while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                {
                    result[idx - offset] = cmdtext[idx];
                    idx++;
                }
                result[idx - offset] = EOS;
                if(!strlen(result))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: /banoff [ nick/ip ] [ Motivo ]");
                    return 1;
                }
                BanPlayerOFF(playerid, playa, result);
                format(gstring,sizeof(gstring), "AdmAviso: %s Agendou Banimento de %s, Motivo: %s", PlayerName(playerid),playa,result);
                ABroadCast(COLOR_YELLOW,gstring,1);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não tem permissao para usar esse comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/ban", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /ban [id] [motivo]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 2)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        new length = strlen(cmdtext);
                        while ((idx < length) && (cmdtext[idx] <= ' '))
                        {
                            idx++;
                        }
                        new offset = idx;
                        new result[100];
                        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                        {
                            result[idx - offset] = cmdtext[idx];
                            idx++;
                        }
                        result[idx - offset] = EOS;
                        if(!strlen(result))
                        {
                            SendClientMessage(playerid, COLOR_GRAD2, "USE: /ban [id] [motivo]");
                            return 1;
                        }
                        if(BaniuPlayer[playerid] >= 1)
                        {
                            SBan(playerid, "Tentativa de Ban-ALL", "Automático");
                            return 1;
                        }
                        if(PlayerInfo[giveplayerid][pAdmin] >= 3000)
                        {
                            SendClientMessage(playerid, COLOR_GRAD1, "Você não pode banir um Admin Dono !");
                            return 1;
                        }
                        getdate(year, month, day);
                        format(string, sizeof(string), "AdmAviso: %s foi banido por %s, Motivo: %s (%d-%d-%d)", giveplayer, sendername, (result),day,month,year);
                        BanLog(string);
                        format(string, sizeof(string), "AdmAviso: %s foi banido por %s, Motivo: %s", giveplayer, sendername, (result));
                        SendClientMessageToAll(COLOR_LIGHTRED, string);
                        SendClientMessage(giveplayerid, COLOR_WHITE, "|________________ Instruções para revisão de Ban ________________|");
                        SendClientMessage(giveplayerid, COLOR_YELLOW2, "Tire uma SS da tela apertando F8 imediatamente após ser banido");
                        SendClientMessage(giveplayerid, COLOR_YELLOW2, "E acesse o nosso forum: bpg-rapidosemortais.forumeiros.com");
                        SendClientMessage(giveplayerid, COLOR_LIGHTRED, "Atenção: Você só será desbanido caso for inocente");
                        if(gPlayerLogged[giveplayerid] == 0){Ban(giveplayerid);}else {SBan(giveplayerid, result, sendername);}
                        BaniuPlayer[playerid] ++;
                        SetTimerEx("PlayerBanALL", 7000,false,"i",playerid);
                        return 1;
                    }
                }//not connected
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Esse não é um jogador ativo.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/banxiter", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /banxiter [id] [motivo]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 1337)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        new length = strlen(cmdtext);
                        while ((idx < length) && (cmdtext[idx] <= ' '))
                        {
                            idx++;
                        }
                        new offset = idx;
                        new result[100];
                        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                        {
                            result[idx - offset] = cmdtext[idx];
                            idx++;
                        }
                        result[idx - offset] = EOS;
                        if(!strlen(result))
                        {
                            SendClientMessage(playerid, COLOR_GRAD2, "USE: /ban [id] [motivo]");
                            return 1;
                        }
                        getdate(year, month, day);
                        format(string, sizeof(string), "AdmAviso: %s foi banido por %s, Motivo: %s (%d-%d-%d)", giveplayer, sendername, (result),day,month,year);
                        BanLog(string);
                        format(string, sizeof(string), "AdmAviso: %s foi banido por %s, Motivo: %s", giveplayer, sendername, (result));
                        SendClientMessageToAll(COLOR_LIGHTRED, string);
                        SendClientMessage(playerid,-1,"** Serial do HD, Banido com sucesso!");
                        SendClientMessage(giveplayerid, COLOR_WHITE, "|________________ Instruções para revisão de Ban ________________|");
                        SendClientMessage(giveplayerid, COLOR_YELLOW2, "Tire uma SS da tela apertando F8 imediatamente após ser banido");
                        SendClientMessage(giveplayerid, COLOR_YELLOW2, "E acesse o nosso forum: bpg-rapidosemortais.forumeiros.com");
                        SendClientMessage(giveplayerid, COLOR_LIGHTRED, "Atenção: Você só será desbanido caso for inocente");
                        BanXiter(giveplayerid, result, PlayerName(playerid),SerialPlayerHD(giveplayerid));
                        return 1;
                    }
                }//not connected
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Esse não é um jogador ativo.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/payday", true) == 0)
    {
        if (PlayerInfo[playerid][pAdmin] >= 1337)
        {
            for(new i=0;  i<MaiorID; i++)
            {
                if(IsPlayerConnected(i)) PlayerInfo[i][pPayDay] = 6;
            }
            PayDay();
            /*format(gstring,sizeof(gstring), "ADM AVISO: %s ID[%d] usou o comando /payday", PlayerName(playerid), playerid);
            ABroadCast(COLOR_GRAD1, gstring, 1);  */
        }
        else
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Você não esta autorizado a usar este comando!");
        }
        return 1;
    }
//----------------------------------[Freeze]------------------------------------------------
    if(strcmp(cmd, "/congelar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /congelar [id]");
                return 1;
            }
            new playa;
            playa = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        if(PlayerInfo[playa][pAdmin] >= 1340 && PlayerInfo[playerid][pAdmin] < 1338)
                        {
                            SendClientMessage(playerid, COLOR_GRAD1, "Você não pode congelar um Admin Dono !");
                            return 1;
                        }
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        TogglePlayerControllable(playa, 0);
                        format(string, sizeof(string), "AdmAviso: %s Congelou %s",sendername,  giveplayer);
                        printf("%s",string);
                        format(string, sizeof(string), "AdmAviso: %s Foi congelado por: %s",giveplayer ,sendername);
                        ABroadCast(COLOR_LIGHTRED,string,1);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/banoff", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /banoff [ 1 - Para Nick e 2 - Para IP ] [ Motivo ]");
                return 1;
            }
            giveplayerid = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 2)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        if(PlayerInfo[giveplayerid][pAdmin] >= 1340 && PlayerInfo[playerid][pAdmin] < 1338)
                        {
                            SendClientMessage(playerid, COLOR_GRAD1, "Você não pode kickar um Admin Dono !");
                            return 1;
                        }
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        new length = strlen(cmdtext);
                        while ((idx < length) && (cmdtext[idx] <= ' '))
                        {
                            idx++;
                        }
                        new offset = idx;
                        new result[100];
                        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                        {
                            result[idx - offset] = cmdtext[idx];
                            idx++;
                        }
                        result[idx - offset] = EOS;
                        if(!strlen(result))
                        {
                            SendClientMessage(playerid, COLOR_GRAD2, "USE: /kick [Id Do Jogador] [motivo]");
                            return 1;
                        }
                        getdate(year, month, day);
                        format(string, sizeof(string), "AdmAviso: %s foi kickado por %s, Motivo: %s (%d-%d-%d)", giveplayer, sendername, (result),day,month,year);
                        KickLog(string);
                        format(string, sizeof(string), "AdmAviso: %s foi kickado por %s, Motivo: %s", giveplayer, sendername, (result));
                        SendClientMessageToAll(COLOR_LIGHTRED, string);
                        Kick(giveplayerid);
                        return 1;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Esse não é um jogador ativo.");
            }
        }
        return 1;
    }

//----------------------------------[descongelar]------------------------------------------------
    if(strcmp(cmd, "/descongelar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /descongelar [id]");
                return 1;
            }
            new playa;
            playa = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        PlayerInfo[playa][pMuted] = 0;
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        TogglePlayerControllable(playa, 1);
                        format(string, sizeof(string), "AdmAviso: %s Descongelou %s",sendername,  giveplayer);
                        printf("%s",string);
                        format(string, sizeof(string), "AdmAviso: %s Foi descongelado por: %s",giveplayer ,sendername);
                        ABroadCast(COLOR_LIGHTRED,string,1);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
            }
        }
        return 1;
    }
//----------------------------------[desbugar]------------------------------------------------
    if(strcmp(cmd, "/desbugar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /desbugar [playerid]");
                return 1;
            }
            new playa;
            playa = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        PlayerInfo[playa][pMuted] = 0;
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        TogglePlayerControllable(playa, 1);
                        Hospital[playa] = 1;
                        SetCameraBehindPlayer(playa);
                        sincronizando[playa] = 1;
                        virt[playa] = GetPlayerVirtualWorld(playa);
                        interior[playa] = GetPlayerInterior(playa);
                        skinneg[playa] = GetPlayerSkin(playa);
                        GetPlayerArmour(playa,APP[playa]);
                        GetPlayerHealth(playa,PlayerHPP[playa]);
                        GetPlayerFacingAngle(playa,FaceAngle[playa]);
                        GetPlayerPos(playa,xx[playa],yy[playa],zz[playa]);
                        GetPlayerWeaponData(playa,1,gunsinc[1][playa],ammoo[1][playa]);
                        GetPlayerWeaponData(playa,2,gunsinc[2][playa],ammoo[2][playa]);
                        GetPlayerWeaponData(playa,3,gunsinc[3][playa],ammoo[3][playa]);
                        GetPlayerWeaponData(playa,4,gunsinc[4][playa],ammoo[4][playa]);
                        GetPlayerWeaponData(playa,5,gunsinc[5][playa],ammoo[5][playa]);
                        GetPlayerWeaponData(playa,6,gunsinc[6][playa],ammoo[6][playa]);
                        GetPlayerWeaponData(playa,7,gunsinc[7][playa],ammoo[7][playa]);
                        GetPlayerWeaponData(playa,8,gunsinc[8][playa],ammoo[8][playa]);
                        GetPlayerWeaponData(playa,9,gunsinc[9][playa],ammoo[9][playa]);
                        GetPlayerWeaponData(playa,10,gunsinc[10][playa],ammoo[10][playa]);
                        GetPlayerWeaponData(playa,11,gunsinc[11][playa],ammoo[11][playa]);
                        GetPlayerWeaponData(playa,12,gunsinc[12][playa],ammoo[12][playa]);
                        SpawnPlayer(playa);
                        TempoSinc = SetTimerEx("Sincronizar", 500, 0, "i", playa);
                        if(IsPlayerInAnyVehicle(playa))
                        {
                            vehicledd[playa] = 1;
                            VehicleIDD[playa] = GetPlayerVehicleID(playa);
                        }
                        format(string, sizeof(string), "AdmAviso: %s Desbugou %s",sendername,  giveplayer);
                        printf("%s",string);
                        format(string, sizeof(string), "AdmAviso: %s Foi desbugado por: %s",giveplayer ,sendername);
                        ABroadCast(COLOR_LIGHTRED,string,1);
                        format(gstring, sizeof(gstring), "Você Foi desbugado pelo Admin: %s", sendername);
                        SendClientMessage(playa, COLOR_LIGHTBLUE, gstring);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
            }
        }
        return 1;
    }
//----------------------------------[Setar emprego]-----------------------------------------------
    if(strcmp(cmd, "/setemprego", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /setemprego [playerid/ParteDoNome] [empregoid]");
                return 1;
            }
            new para1;
            new jobid;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            jobid = strval(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 1340)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                if(IsPlayerConnected(para1))
                {
                    if(para1 != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        PlayerInfo[para1][pEmprego] = jobid;
                        SendClientMessage(playerid, COLOR_GRAD1, "   Emprego setado com sucesso !");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar esse comando!");
            }
        }
        return 1;
    }
//----------------------------------[GMX]-----------------------------------------------
 if(strcmp(cmd, "/savefiles", true) == 0)
    {
        if (PlayerInfo[playerid][pAdmin] >= 3000)
        {
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
            }
            SalvarTudo();
            SendClientMessage(playerid, COLOR_GRAD1, "Casas e empresas Salvas...");
            a3d();
            SendClientMessage(playerid, COLOR_GRAD1, "Textos atualizados...");
            SaveBoxer();
            SendClientMessage(playerid, COLOR_GRAD1, "Boxer Salvo...");
            SaveVip();
            SendClientMessage(playerid, COLOR_GRAD1, "Vips Salvos...");
            SaveAdm();
            SendClientMessage(playerid, COLOR_GRAD1, "Admins Salvos...");
            SaveHelp();
            SendClientMessage(playerid, COLOR_GRAD1, "Helpers Salvos...");
            SaveCarros();
            SendClientMessage(playerid, COLOR_GRAD1, "Carros Salvos...");
            SalvarContas();
            SendClientMessage(playerid, COLOR_GRAD1, "Contas Salvas, Concluido.");
            ContarJogadores();
            SendClientMessage(playerid,COLOR_LIGHTRED,"* Você Salvou os Arquivos!");
            SalvarPassword();
            return 1;
        }
        return 1;
    }
    if(strcmp(cmd, "/loadfiles", true) == 0)
    {
        if (PlayerInfo[playerid][pAdmin] >= 3000)
        {
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
            }
            LoadVip();
            CarregarCasas();
            CarregarEmpresas();
            CarregarMiniEmpresas();
            CarregarFazendas();
            LoadStuff();
            LoadBoxer();
            LoadAdm();
            LoadHelp();
            LoadCarros();
            LoadPassword();
            SendClientMessage(playerid,COLOR_LIGHTRED,"* Você Abriu os Arquivos!");
            return 1;
        }
        return 1;
    }
    if(strcmp(cmd, "/testeteste", true) == 0)
    {
        if (ServerOwner[playerid])
        {
                for(new i = 0; i < sizeof(VipInfo); i++)
                {
                 strmid(VipInfo[i][vNick], "Ninguem", 0, strlen("Ninguem"), 255);
                 VipInfo[i][vNick] = 0;

                }
                  return 1;

        }
    }
    if(strcmp(cmd, "/gmx", true) == 0 || strcmp(cmd, "/restart", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 3000)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000) { return SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)"); }
                for(new i = 0; i < MaiorID; i++)
                {
                    if(IsPlayerConnected(i))
                    { SalvarPlayer(i); }
                    ShowPlayerDialog(i, 156, DIALOG_STYLE_MSGBOX, "          {a09f2c}GMX EM ANDAMENTO", "      {2657a9}Reinicialização em andamento...\n\n{FFFFFF}Isso pode demorar alguns segundos\n                 {FFFFFF}por favor aguarde!\n\n    {2657a9}Agradecemos sua compreensão.", "AGUARDE", "");
                }
                GetPlayerName(playerid,sendername,sizeof(sendername));
                OnPlayerCommandText(playerid,"/savefiles");
                format(string,sizeof(string), "AdmAviso: %s está reinicializando o servidor, por favor aguarde!",sendername);
                SendClientMessageToAll(CORS, string);
                format(string,sizeof(string), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer{FFFFFF} reinicializando o gamemode, isso pode demorar alguns segundos!");
                SendClientMessageToAll(0x00FF00FF, string);
                for(new i = 0; i < MaiorID; i++)
                {
                    tirohitman[ i ] = 9999;
                    tirotime[ i ] = 0;
                    ShowPlayerDialog(i, 156, DIALOG_STYLE_MSGBOX, "          {a09f2c}GMX EM ANDAMENTO", "      {2657a9}Reinicialização em andamento...\n\n{FFFFFF}Isso pode demorar alguns segundos\n                 {FFFFFF}por favor aguarde!\n\n    {2657a9}Agradecemos sua compreensão.", "AGUARDE", "");
                }
                SetTimer("GameModeExitFunc", 4000, 0);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para dar GMX!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/gmxemergencia", true) == 0 || strcmp(cmd, "/ferrotudo", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(ServerOwner[playerid] == 1)
            {
                if(PlayerInfo[playerid][pAdmin] != 3000) { return SendClientMessage(playerid, COLOR_GRAD1, "Você não é o Kohi para usar este comando, está pensando o que?"); }
                if(GMXPROIBIDO == 1) { return SendClientMessage(playerid, COLOR_GRAD1, "O GMX foi proibido temporariamente pelo Administrador Dono."); }
                for(new i = 0; i < MaiorID; i++)
                {
                    if(IsPlayerConnected(i))
                    { SalvarPlayer(i); }
                }
                GetPlayerName(playerid,sendername,sizeof(sendername));
                format(string,sizeof(string), "AdmAviso: %s está reinicializando o servidor, por favor aguarde!",sendername);
                SendClientMessageToAll(CORS, string);
                format(string,sizeof(string), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer{FFFFFF} reinicializando o gamemode, isso pode demorar alguns segundos!");
                SendClientMessageToAll(0x00FF00FF, string);
                OnGameModeExit();
                SendRconCommand("gmx");
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para dar GMX!");
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/admins", true) == 0)
    {
        SendClientMessage(playerid, 0xff80c0FF, "[BPG] Admins Online:");
        for(new i = 0; i <= MaiorID; i++)
        {
            if(IsPlayerConnected(i) == 1 && PlayerInfo[i][pAdmin] > 0)
            {
                if(HideAdm[i] == 0)
                {
                    GetPlayerName(i, sendername, sizeof(sendername));
                    new lolz[20];
                    if(PlayerInfo[i][pAdmin] == 1)
                    {
                        lolz = "ADMIN TEMPORÁRIO";
                    }
                    if(PlayerInfo[i][pAdmin] == 2)
                    {
                        lolz = "ADMIN ESTAGIÁRIO";
                    }
                    if(PlayerInfo[i][pAdmin] == 3)
                    {
                        lolz = "ADMIN FIXO";
                    }
                    if(PlayerInfo[i][pAdmin] == 4)
                    {
                        lolz = "ADMIN EXPERIENTE";
                    }
                    if(PlayerInfo[i][pAdmin] == 5)
                    {
                        lolz = "ADMIN AVANÇADO";
                    }
                    if(PlayerInfo[i][pAdmin] == 1336)
                    {
                        lolz = "MÁSTER EDITOR";
                    }
                    if(PlayerInfo[i][pAdmin] == 1337)
                    {
                        lolz = "MÁSTER LÍDER";
                    }
                    if(PlayerInfo[i][pAdmin] == 1338)
                    {
                        lolz = "MÁSTER HELPER";
                    }
                    if(PlayerInfo[i][pAdmin] == 1339)
                    {
                        lolz = "ADMIN GERENTE";
                    }
                    if(PlayerInfo[i][pAdmin] == 1342)
                    {
                        lolz = "ADMIN SUB-DONO";
                    }
                    if(PlayerInfo[i][pAdmin] == 3000 && PlayerInfo[i][pSex] == 1)
                    {
                        lolz = "ADMIN DONO";
                    }
                    if(PlayerInfo[i][pAdmin] == 3000 && PlayerInfo[i][pSex] == 2)
                    {
                        lolz = "ADM DONA";
                    }
                    if(away[i] == 0)
                    {
                        if(admtrampando[i] == 1)
                        {
                            format(string,sizeof(string), "%s: %s [Disponível]", sendername, lolz);
                            SendClientMessage(playerid, 0x4ace01FF, string);
                        }
                        else
                        {
                            format(string,sizeof(string), "%s: %s [Jogando]", sendername, lolz);
                            SendClientMessage(playerid, 0xFFFFFFFF, string);
                        }

                    }
                    else
                    {
                        format(string,sizeof(string), "%s: %s [Ausente]", sendername, lolz);
                        SendClientMessage(playerid, 0xfcd116FF, string);
                    }
                }
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/Helpers", true) == 0)
    {
        SendClientMessage(playerid, COR_HELPER, "[BPG] Helpers Online:");
        for(new i = 0; i < MaiorID; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(PlayerInfo[i][pHelper] >= 1)
                {
                    new helperlevel = PlayerInfo[i][pHelper];
                    GetPlayerName(i, sendername, sizeof(sendername));
                    if(helptrampando[i] == 1 && PlayerInfo[i][pHelper] >= 1)
                    {
                        format(string, sizeof(string), "%s | Nivel: [%d] (Disponível)", sendername, helperlevel);
                        SendClientMessage(playerid, 0x4ace01FF, string);
                    }
                    else if(helptrampando[i] == 0 && PlayerInfo[i][pHelper] >= 1)
                    {
                        format(string, sizeof(string), "%s | Nivel: [%d] (Jogando)", sendername, helperlevel);
                        SendClientMessage(playerid, 0xffFFFFFF, string);
                    }
                }
             }
        }
        return 1;
    }
    if (strcmp(cmd, "/checkorgs", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 3000)
        {
            new arquivo[64];
            for(new i = 1; i < sizeof(InfoOrg); i++)
            {
                format(arquivo, sizeof(arquivo), "InfoOrg/Org%d.cfg",i);
                strmid(InfoOrg[i][Membro26], "Ninguem", 0, strlen("Ninguem"), 255);
                dini_Set(arquivo,"Membro26","Ninguem");
                strmid(InfoOrg[i][Membro27], "Ninguem", 0, strlen("Ninguem"), 255);
                dini_Set(arquivo,"Membro27","Ninguem");
                strmid(InfoOrg[i][Membro28], "Ninguem", 0, strlen("Ninguem"), 255);
                dini_Set(arquivo,"Membro28","Ninguem");
                strmid(InfoOrg[i][Membro29], "Ninguem", 0, strlen("Ninguem"), 255);
                dini_Set(arquivo,"Membro29","Ninguem");
                strmid(InfoOrg[i][Membro30], "Ninguem", 0, strlen("Ninguem"), 255);
                dini_Set(arquivo,"Membro30","Ninguem");
            }
            SendClientMessage(playerid, COR_HELPER, "[BPG] Orgs com Sucesso!");
        }
        return 1;
    }
    if(strcmp(cmd, "/meavalie", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /meavalie [ID/Nome]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não mandar avaliação para você mesmo."); return 1; }
                    if(helptrampando[playerid] < 1)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Você não está Ajudando! (/helpajudar)");
                        return 1;
                    }
                    if(meavaliehelper[playerid] == 1)
                    {
                        return SendClientMessage(playerid,COLOR_GRAD1,"Você já foi avaliado recentemente, Espere 1 minuto!");
                    }
                    meavalie[giveplayerid] = playerid;
                    meavaliehelper[playerid] = 1;
                    SetTimerEx("TempoAvalieHelper", TEMPO_MEAVALIE, false, "d",playerid);
                    format(string,sizeof(string),"Helper %s\nPediu a você que o avalie como helper\nCaso ele tenha ajudado aperte Aprovar\nCaso contrario aperte Reprovar", PlayerName(playerid));
                    ShowPlayerDialog(giveplayerid, DIALOG_MEAVALIE, DIALOG_STYLE_MSGBOX, "Avaliação do Helper", string, "Aprovar", "Reprovar");
                    format(string, sizeof(string), "Você enviou a Avaliação de sua Ajuda para o Jogador: %s.", giveplayerid);
                    SendClientMessage(playerid, COLOR_GRAD1, string);
                }
            }
            else
            {
                format(string, sizeof(string), "O jogador não está conectado!");
                SendClientMessage(playerid, COLOR_GRAD1, string);
            }
        }
        return 1;
    }
    if(strcmp(cmdtext, "/afk", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] < 1)
        {
            SendClientMessage(playerid,COLOR_GREY," Você não é um admin ou um helper!");
            return 1;
        }
        if(admtrampando[playerid] < 1)
        {
            SendClientMessage(playerid,COLOR_GREY," Você não está trabalhando, USE /trabalhar!");
            return 1;
        }
        if(away[playerid] == 1)
        {
            SendClientMessage(playerid,COLOR_GREY," Você já está modo AFK, use /sairafk!");
        }
        else
        {
           format(gstring, sizeof(gstring), "Admin %s:{CAFFFF} Está ausente, para mais informações /admins.", PlayerName(playerid));
           SendClientMessageToAll(0xFF8080FF, gstring);
           SendClientMessage(playerid,COLOR_LIGHTRED," Você está AFK agora, para sair /sairafk!");
           away[playerid] = 1;
        }
        return 1;
    }
    if(strcmp(cmdtext, "/sairafk", true) == 0)
    {
        if(away[playerid] == 0)
        {
            SendClientMessage(playerid,COLOR_GREY," Você saiu do modo AFK, use /afk!");
        }
        else
        {
           format(gstring, sizeof(gstring), "Admin %s:{CAFFFF} Não está mais ausente, para mais informações /admins.", PlayerName(playerid));
           SendClientMessageToAll(0xFF8080FF, gstring);
           SendClientMessage(playerid,COLOR_LIGHTRED," Você saiu do modo AFK!");
           away[playerid] = 0;
        }
        return 1;
    }
    if(strcmp(cmdtext, "/trabalhar", true) == 0) //Yiakin FEZ!!
    {
        if(PlayerInfo[playerid][pAdmin] >= 1)
        {
            if(PlayerInfo[playerid][pAdmin] == 3000)
            {
                ModoTrabalho(playerid, 3000);
            }
            else
            {
                if( PlayerInfo[ playerid ][ pWorkFree ] == 0 ){
                    SendClientMessage( playerid, COLOR_GRAD2, "Você não tem permissão para usar esse comando!" );
                    SendClientMessage( playerid, COLOR_GRAD2, "Procure um Admin gerente ou superior para que ele libere-o para você." );
                    return true;
                }
                ModoTrabalho(playerid, 1);
            }
        }
        return 1;
    }
    if(strcmp(cmdtext, "/helpajudar", true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid,COLOR_YELLOW," Você não pode ajudar na cadeia!");
            return 1;
        }
        if(PlayerInfo[playerid][pHelper] >= 1)
        {
            if(helptrampando[playerid] > 0)
            {
                helptrampando[playerid] = 0;
                GetPlayerName(playerid,sendername,sizeof(sendername));
                format(gstring, sizeof(gstring), "Helper: %s Está Jogando, para mais informações /Helpers.", PlayerName(playerid));
                SendClientMessageToAll(COR_HELPER, gstring);
                KillTimer(TempoHelper);
                SetPlayerToTeamColor(playerid);
                ResetPlayerWeapons(playerid);
                SetPlayerHealth(playerid,100);
                PhoneOnline[playerid] = 1;
                SendClientMessage(playerid, 0x808080AA, "Você Saiu de modo Ajuda, e seu Celular foi Ligado Automaticamente!");
            }
            else
            {
                helptrampando[playerid] = 1;
                format(gstring, sizeof(gstring), "Helper: %s Está Ajudando, para mais informações /Helpers.", PlayerName(playerid));
                SendClientMessageToAll(COR_HELPER, gstring);
                SetPlayerToTeamColor(playerid);
                TempoHelper = SetTimerEx("Helpert", 100, true, "i", playerid);
                PhoneOnline[playerid] = 1;
                SendClientMessage(playerid, 0x808080AA, "Você Entrou em modo Ajuda, e seu Celular foi Desligado Automaticamente!");
           }
        }
        return 1;
    }
    if(strcmp(cmdtext, "/bloquearpar", true) == 0 || strcmp(cmdtext, "/bpar", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 1336)
        {
            if(HidePM[playerid] == 1)
            {
                HidePM[playerid] = 0;
                SendClientMessage(playerid,COLOR_GREEN,"Você desbloqueou suas particulares agora todos poderao mandar /par!");
            }
            else
            {
                HidePM[playerid] = 1;
                SendClientMessage(playerid,COLOR_GREEN,"Você bloqueou suas particulares agora só verá os relatórios!");
            }
        }
        return 1;
    }
    if(strcmp(cmdtext, "/aparecer", true) == 0 || strcmp(cmdtext, "/reaparecer", true) == 0 || strcmp(cmdtext, "/ocultar", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 1342 || HideAdm[playerid] == 1)
        {
            if(HideAdm[playerid] == 1)
            {
                HideAdm[playerid] = 0;
                SendClientMessage(playerid,COLOR_GREEN,"Você está visivel a todos no /admins!");
            }
            else
            {
                HideAdm[playerid] = 1;
                SendClientMessage(playerid,COLOR_GREEN,"Você está invisivel no /admins!");
            }
        }
        return 1;
    }
    if(strcmp(cmdtext, "/antifakekill", true) == 0 || strcmp(cmdtext, "/antf", true) == 0 || strcmp(cmdtext, "/antifakekill", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 1)
        {
            if(FakeKillOn == 1)
            {
                FakeKillOn = 0;
                TempoCheckHack = SetTimer("CheckHack", 4000, 1);
                format(string,sizeof(string), "AdmAviso: %s Desativou o Anti Flood Hacker do Server!",PlayerName(playerid));
                ABroadCast(COLOR_LIGHTRED,string,1);
            }
            else
            {
                FakeKillOn = 1;
                KillTimer(TempoCheckHack);
                format(string,sizeof(string), "AdmAviso: %s Ativou o Anti Flood Hacker do Server!",PlayerName(playerid));
                ABroadCast(COLOR_LIGHTRED,string,1);
                SetTimer("DesligarFakeKill", 20000, false);
            }
        }
        return 1;
    }
    if(strcmp(cmdtext, "/sysdb", true) == 0 || strcmp(cmdtext, "/antdb", true) == 0 || strcmp(cmdtext, "/antidb", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 1)
        {
            if(SysDBOn == 0)
            {
                SysDBOn = 1;
                format(string,sizeof(string), "AdmAviso: %s Desativou o Sistema de DB do Server!",PlayerName(playerid));
                ABroadCast(COLOR_LIGHTRED,string,1);
            }
            else
            {
                SysDBOn = 0;
                format(string,sizeof(string), "AdmAviso: %s Ativou o Sistema de DB do Server!",PlayerName(playerid));
                ABroadCast(COLOR_LIGHTRED,string,1);
            }
        }
        return 1;
    }

    if(strcmp(cmd, "/desbantemp", true) == 0)
    {
        if( PlayerInfo[ playerid ][ pAdmin ] > 2 ){

            new
                str[ 200 ],
                Aadmin[ 25 ]
            ;
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /desbantemp [ nome do player ]");
                return 1;
            }
            GetPlayerName( playerid, Aadmin, sizeof Aadmin );
            format( str, sizeof str, "TempBan/%s.ini", tmp );
            if( DOF2_FileExists( str ) ){
                DOF2_RemoveFile( str );
                format( str, sizeof str, "{CD0000}[ BanTemp ] {FFFFFF}A conta do player %s foi desbanida pelo admin %s.", tmp, Aadmin );
                SendClientMessageToAll( -1, str );
            }
            else return SendClientMessage( playerid, -1, "A conta digitada não está temporariamente banida." );
        }
        else return SendClientMessage( playerid, -1, "Sem autorização." );
        return true;
    }
    if(strcmp(cmd, "/infobantemp", true) == 0)
    {
        if( PlayerInfo[ playerid ][ pAdmin ] > 0 ){
            new
                str[ 200 ]
            ;
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /desbantemp [ nome do player ]");
                return 1;
            }
            format( str, sizeof str, "TempBan/%s.ini", tmp );
            if( DOF2_FileExists( str ) ){
                AdminCheckBanTemp( playerid, tmp );
            }
            else return SendClientMessage( playerid, -1, "A conta digitada não está temporariamente banida." );
        }
        else return SendClientMessage( playerid, -1, "Sem autorização." );
        return true;
    }
    if(strcmp(cmd, "/bantemp", true) == 0)
    {
        if( PlayerInfo[ playerid ][ pAdmin ] > 0 ){

            new
                p,
                tempo,
                str[ 200 ],
                pName[ 25 ],
                Aadmin[ 25 ]
            ;
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /bantemp [ id ] [ tempo(dias) ][ motivo ]");
                return 1;
            }
            p = ReturnUser( tmp );
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /bantemp [ id ] [ tempo(dias) ][ motivo ]");
                return 1;
            }
            tempo = strval( tmp );
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /bantemp [ id ] [ tempo(dias) ][ motivo ]");
                return 1;
            }
            if( strlen( result ) > 64 ) return SendClientMessage( playerid, -1, "Use uma descrição menor para a razão do banimento." );
            if( tempo < 1 ) return SendClientMessage( playerid, COLOR_GRAD2, "O tempo não pode ser ZERO." );
            if( !IsPlayerConnected( p ) ) return SendClientMessage( playerid, -1, "O player não esta conectado." );

            GetPlayerName( p, pName, sizeof pName );
            GetPlayerName( playerid, Aadmin, sizeof Aadmin );
            format( str, sizeof str, "{CD0000}[ BanTemp ] {FFFFFF}O player %s foi banido pelo admin %s por %d dia(s). {CD0000}Motivo: %s.", pName, Aadmin, tempo, result );
            SendClientMessageToAll( -1, str );
            tempo = tempo * 86400;
            BanTemp( p, result, tempo, playerid );
        }
        else return SendClientMessage( playerid, -1, "Sem autorização." );
        return true;
    }
    if(strcmp(cmdtext, "/ativarban", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 3000)
        {
            if(BanXiterOn == true)
            {
                BanXiterOn = false;
                format(gstring,sizeof(gstring), "AdmAviso: %s Desativou o Sistema Ban Cheater do Servidor!",PlayerName(playerid));
                ABroadCast(COLOR_LIGHTRED,gstring,1);
            }
            else
            {
                BanXiterOn = true;
                format(gstring,sizeof(gstring), "AdmAviso: %s ativou o Sistema Ban Cheater do Servidor!",PlayerName(playerid));
                ABroadCast(COLOR_LIGHTRED,gstring,1);
            }
        }
        return 1;
    }
    if(strcmp(cmdtext, "/antcarspam", true) == 0 || strcmp(cmdtext, "/antcar", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 1337)
        {
            if(AntCarSpam == 1)
            {
                AntCarSpam = 0;
                format(string,sizeof(string), "AdmAviso: %s Desativou o Anti Car Spam Hacker do Server!",PlayerName(playerid));
                ABroadCast(COLOR_LIGHTRED,string,1);
            }
            else
            {
                AntCarSpam = 1;
                format(string,sizeof(string), "AdmAviso: %s Ativou o Anti Car Spam Hacker do Server!",PlayerName(playerid));
                ABroadCast(COLOR_LIGHTRED,string,1);
            }
        }
        return 1;
    }
    if(strcmp(cmdtext, "/verdm", true) == 0 || strcmp(cmdtext, "/vermortes", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 1337)
        {
            if(admtrampando[playerid] < 1)
            {
                SendClientMessage(playerid,COLOR_GREY," Você não está trabalhando, USE /trabalhar!");
                return 1;
            }
            if(Verdm == 1)
            {
                Verdm = 0;
                format(string,sizeof(string), "AdmAviso: %s Desativou as Informações de DM do Servidor!",PlayerName(playerid));
                ABroadCast(COLOR_LIGHTRED,string,1);
            }
            else
            {
                Verdm = 1;
                format(string,sizeof(string), "AdmAviso: %s Ativou as Informações de DM do Servidor!",PlayerName(playerid));
                ABroadCast(COLOR_LIGHTRED,string,1);
            }
        }
        return 1;
    }
    if(strcmp(cmdtext, "/verdmhit", true) == 0 || strcmp(cmdtext, "/vermorteshit", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 1337)
        {
            if(admtrampando[playerid] < 1)
            {
                SendClientMessage(playerid,COLOR_GREY," Você não está trabalhando, USE /trabalhar!");
                return 1;
            }
            if(Verdmhit == 1)
            {
                Verdmhit = 0;
                format(string,sizeof(string), "AdmAviso: %s Desativou as Informações de DM dos assassinos!",PlayerName(playerid));
                ABroadCast(COLOR_LIGHTRED,string,1);
            }
            else
            {
                Verdmhit = 1;
                format(string,sizeof(string), "AdmAviso: %s Ativou as Informações de DM dos assassinos!",PlayerName(playerid));
                ABroadCast(COLOR_LIGHTRED,string,1);
            }
        }
        return 1;
    }
    if(strcmp(cmdtext, "/vinnyowna", true) == 0 || strcmp(cmdtext, "/leehowna", true) == 0)
    {
        if(ServerOwner[playerid] == 1)
        {
            if(ContarAdminOn == 1)
            {
                ContarAdminOn = 0;
                format(string,sizeof(string), "AdmAviso: %s Desativado /trabalhar!",PlayerName(playerid));
                ABroadCast(COLOR_LIGHTRED,string,1);
            }
            else
            {
                ContarAdminOn = 1;
                format(string,sizeof(string), "AdmAviso: %s Ativado /trabalhar!",PlayerName(playerid));
                ABroadCast(COLOR_LIGHTRED,string,1);
            }
        }
        return 1;
    }
    if(strcmp(cmdtext, "/relatooff", true) == 0 || strcmp(cmdtext, "/relatoriooff", true) == 0)
    {
        if(ServerOwner[playerid] == 1)
        {
            if(RelatoOFF == 1)
            {
                RelatoOFF = 0;
                format(string,sizeof(string), "AdmAviso: %s Desativado /relatorio!",PlayerName(playerid));
                SoEuVejoMsm(COLOR_LIGHTRED,string);
            }
            else
            {
                RelatoOFF = 1;
                format(string,sizeof(string), "AdmAviso: %s Ativado /relatorio!",PlayerName(playerid));
                SoEuVejoMsm(COLOR_LIGHTRED,string);
            }
        }
        return 1;
    }
    if(strcmp(cmdtext, "/desativarah", true) == 0 || strcmp(cmdtext, "/bloqah", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 1339)
        {
            if(AhOff == 1)
            {
                AhOff = 0;
                format(string, sizeof(string), "AdmAviso: Admin %s Ativou o Chat de Admins e Helpers.",PlayerName(playerid));
                ABroadCastah(COLOR_LIGHTRED, string, 1);
            }
            else
            {
                AhOff = 1;
                format(string, sizeof(string), "AdmAviso: Admin %s Desativou o Chat de Admins e Helpers.",PlayerName(playerid));
                ABroadCastah(COLOR_LIGHTRED, string, 1);
            }
        }
        return 1;
    }
    if(strcmp(cmdtext, "/verck", true) == 0 || strcmp(cmdtext, "/verchatkill", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 1342)
        {
            if(Verck == 1)
            {
                Verck = 0;
                format(string,sizeof(string), "AdmAviso: %s Tirou o Chat Kill do Servidor!",PlayerName(playerid));
                ABroadCast(COLOR_LIGHTRED,string,1);
            }
            else
            {
                Verck = 1;
                format(string,sizeof(string), "AdmAviso: %s Colocou o Chat Kill do Servidor!",PlayerName(playerid));
                ABroadCast(COLOR_LIGHTRED,string,1);
            }
        }
        return 1;
    }
    if(strcmp(cmdtext, "/bloquearir", true) == 0 || strcmp(cmdtext, "/bloqir", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 1342)
        {
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid,COLOR_GREY," Você não está trabalhando, USE /trabalhar!");
                return 1;
            }
            if(HideIR[playerid] == 1)
            {
                HideIR[playerid] = 0;
                SendClientMessage(playerid,COLOR_GREEN,"Você liberou o /ir para todos admins ir até você!");
            }
            else
            {
                HideIR[playerid] = 1;
                SendClientMessage(playerid,COLOR_GREEN,"Você Impediu os Admins de ir até você!");
            }
        }
        return 1;
    }
    if(strcmp(cmdtext, "/infoarma", true) == 0 || strcmp(cmdtext, "/armasinfo", true) == 0 || strcmp(cmdtext, "/mirainfo", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(MiraInfo[playerid] == 1)
            {
                MiraInfo[playerid] = 0;
                SendClientMessage(playerid,COLOR_GREEN,"Você Desligou a Informações nas Armas!");
            }
            else
            {
                MiraInfo[playerid] = 1;
                SendClientMessage(playerid,COLOR_GREEN,"Você ligou as Informações de Armas, Agora poderá Ver em quem está Mirando de Longe!");
            }
        }
        return 1;
    }
    if (strcmp(cmdtext, "/alterarsenhascript", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            format(strvinny,sizeof(strvinny),"Olá %s Você solicitou uma modificação,\nNa senha de Administração do Servidor!\nDigite abaixo a senha antiga,\nEm seguida aperte em 'Confirmar'\nOBS: Se errar mais de 5 vezes, será BANIDO!\n** Esta operação está sendo registrada em Logs.",PlayerName(playerid));
            ShowPlayerDialog(playerid, 5124, DIALOG_STYLE_INPUT,"Alteração de Senha",strvinny,"Confirmar","");
        }
        return 1;
    }
    if (strcmp(cmdtext, "/BPGscript", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            format(strvinny,sizeof(strvinny),"Olá %s Você solicitou o Login\nComo Propietário do Servidor!\nDigite abaixo a senha de Login\nEm seguida aperte em 'Confirmar'\nOBS: Se errar mais de 5 vezes, será BANIDO!\n** Esta operação está sendo registrada em Logs.",PlayerName(playerid));
            ShowPlayerDialog(playerid, 5123, DIALOG_STYLE_INPUT,"Login Proprietário",strvinny,"Confirmar","");
        }
        return 1;
    }
    if (strcmp(cmd, "/advogados", true) == 0)
    {
        SendClientMessage(playerid, 0xFF0000AA, "[BPG] {FF8000}Advogados Online:");
    for(new i = 0; i < MaiorID; i++)
        {
            if(IsPlayerConnected(i))
            {
                new celular = PlayerInfo[i][pPnumber];
                GetPlayerName(i, sendername, sizeof(sendername));
                if(PlayerInfo[i][pEmprego] == 2)
                {
                    format(string, sizeof(string), "Advogado: %s || Telefone: [%d] || ID: [%d] || Org: %s", sendername, celular, i, NomeORG(i));
                    SendClientMessage(playerid, GetPlayerColor(i), string);
                }
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/mecanicos", true) == 0)
    {
        SendClientMessage(playerid, 0xFF0000AA, "[BPG] {FF8000}Mecânicos Online:");
    for(new i = 0; i < MaiorID; i++)
        {
            if(IsPlayerConnected(i))
            {
                new celular = PlayerInfo[i][pPnumber];
                GetPlayerName(i, sendername, sizeof(sendername));
                if(PlayerInfo[i][pEmprego] == 5)
                {
                    format(string, sizeof(string), "Mencânico: %s || Telefone: [%d] || ID: [%d] || Org: %s", sendername, celular, i, NomeORG(i));
                    SendClientMessage(playerid, GetPlayerColor(i), string);
                }
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/taxistas", true) == 0)
    {
        SendClientMessage(playerid, 0xFF0000AA, "[BPG] {FF8000}Taxistas Online:");
    for(new i = 0; i < MaiorID; i++)
        {
            if(IsPlayerConnected(i))
            {
                new celular = PlayerInfo[i][pPnumber];
                GetPlayerName(i, sendername, sizeof(sendername));
                if(PlayerInfo[i][pMembro] == 10 || PlayerInfo[i][pLider] == 10)
                {
                    format(string, sizeof(string), "Taxista: %s || Telefone: [%d] || ID: [%d] || Org: %s", sendername, celular, i, NomeORG(i));
                    SendClientMessage(playerid, GetPlayerColor(i), string);
                }
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/familias", true) == 0)
    {
        SendClientMessage(playerid, 0xFF0000AA, "[BPG] {FF8000}Famílias ativas no Servidor");

        return 1;
    }
    if (strcmp(cmd, "/familiaslideres", true) == 0 || strcmp(cmd, "/lideresf", true) == 0)
    {
        SendClientMessage(playerid, 0xFF0000AA, "[BPG] {FF8000}Líderes de Famílias Online:");
        for(new i = 0; i < MaiorID; i++)
        {
            if(IsPlayerConnected(i))
            {
                new celular = PlayerInfo[i][pPnumber];
                GetPlayerName(i, sendername, sizeof(sendername));
                if(PlayerInfo[i][pFamyLider] >= 1)
                {
                    format(string, sizeof(string), "* %s: %s || Telefone: [%d] || ID: [%d] || Org: %s",NomeFamy(i), sendername, celular, i, NomeORG(i));
                    SendClientMessage(playerid, 0xFFBBFFFF, string);
                }
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/membrosf", true) == 0)
    {
        if(PlayerInfo[playerid][pFamyLider] >= 1 || PlayerInfo[playerid][pFamyMember] >= 1)
        {
            SendClientMessage(playerid, 0xFF0000AA, "[BPG] {FF8000}Membros da Família Online:");
     for(new i = 0; i < MaiorID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    new celular = PlayerInfo[i][pPnumber];
                    new FamyLolz = GetPlayerFamy(playerid);
                    GetPlayerName(i, sendername, sizeof(sendername));
                    if(PlayerInfo[i][pFamyLider] == FamyLolz || PlayerInfo[i][pFamyMember] == FamyLolz)
                    {
                        format(string, sizeof(string), "* %s: %s || Telefone: [%d] || ID: [%d] || Org: %s",NomeFamy(i), sendername, celular, i, NomeORG(i));
                        SendClientMessage(playerid, 0xFFBBFFFF, string);
                    }
                }
            }
        }
        else
        {
            SendClientMessage(playerid, 0x808080AA, "[BPG] Você não faz parte de nenhuma família!");
            return 1;
        }
        return 1;
    }
    if (strcmp(cmd,"/Lideres",true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage(playerid,0xFFA4FFFF, "[BPG] Lideres Online:");
            for(new i = 0; i < MaiorID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(PlayerInfo[i][pLider] != 0)
                    {
                        new celular = PlayerInfo[i][pPnumber];
                        if(PlayerInfo[i][pLider] == 7)
                        {
                            GetPlayerName(i,sendername,sizeof(sendername));
                            format(string,128,"=> Prefeito: %s <= Cel [%d] ID [%d]",sendername,celular,i);
                            SendClientMessage(playerid,COR_PREFEITURA,string);
                        }
                        else
                        {
                            GetPlayerName(i,sendername,sizeof(sendername));
                            format(string,128,"Lider: %s(%s) Cel [%d] ID [%d]",sendername,NomeORG(i),celular,i);
                            SendClientMessage(playerid,GetPlayerColor(i),string);
                        }
                    }
                }
            }
        }
        return 1;
    }
    if (strcmp(cmd,"/sublideres",true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage(playerid,0xFFA4FFFF, "[BPG] Sub-Líderes Online:");
            for(new i = 0; i < MaiorID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(PlayerInfo[i][pCargo] == 5)
                    {
                        new celular = PlayerInfo[i][pPnumber];
                        if(PlayerInfo[i][pMembro] == 7)
                        {
                            GetPlayerName(i,sendername,sizeof(sendername));
                            format(string,128,"=> Vice-Prefeito: %s <= Cel [%d] ID [%d]",sendername,celular,i);
                            SendClientMessage(playerid,COR_PREFEITURA,string);
                        }
                        else
                        {
                            GetPlayerName(i,sendername,sizeof(sendername));
                            format(string,128,"Sub-Líder: %s(%s) Cel [%d] ID [%d]",sendername,NomeORG(i),celular,i);
                            SendClientMessage(playerid,GetPlayerColor(i),string);
                        }
                    }
                }
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/vips", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage(playerid, 0xFF00FFAA, "Vips Online:");
            for(new i = 0; i < MaiorID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(PlayerInfo[i][pVip] == 1)
                    {
                        GetPlayerName(i, sendername, sizeof(sendername));
                        format(string,sizeof(string), "VIP: %s [VIP]", sendername);
                        SendClientMessage(playerid, 0xFFFFFFFF, string);
                    }
                    else if(PlayerInfo[i][pVip] == 2)
                    {
                        GetPlayerName(i,sendername,sizeof(sendername));
                        format(string,128, "VIP: %s [Super VIP]",sendername);
                        SendClientMessage(playerid, 0xff80c0FF, string);
                    }
                }
            }
        }
        return 1;
    }
    if(!strcmp(cmdtext,"/coletepolicial",true))
             {
                if(PlayerInfo[playerid][pJailed] != 0)
               {
                        SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar esté comando na cadeia!");
                        return 1;
            }
            if(OnDuty[playerid] != 1)
            {
                            SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
                            return 1;
            }
           if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
           {
                        if(Equipamentos[playerid] == 1)
                        {
               RemovePlayerAttachedObject(playerid,1);
               Equipamentos[playerid] = 0;
               return 1;
                        }
                        if(Equipamentos[playerid] == 0)
                        {
               SetPlayerAttachedObject(playerid,1,19142,1,0.1,0.05,0.0,0.0,0.0,0.0);
               SendClientMessage(playerid,COLOR_GREY,"Você colocou seu Colete !");
               Equipamentos[playerid] = 1;
               return 1;
                        }
        }
        else
        {
            SendClientMessage(playerid,COLOR_YELLOW,"Você não é da Policia Civil e nao pode utilizar esse acessorio.");
        }
        return 1;
    }
//----------------------------------[HELP]-----------------------------------------------
    if(strcmp(cmd, "/ajuda", true) == 0 || strcmp(cmd, "/help", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            //TogglePlayerControllable(playerid, 0);
            ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Ajuda do {00FF40}{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer", "Ajuda Player\nAjuda Empresa\nAjuda Casa\nAjuda Aluguel\nAjuda Celular\nAjuda Lider\nAjuda Emprego\nAjuda Pesca\nAjuda Chat IRC\nAjuda Cozinha\nAjuda Casamento\nForum do {00FF40}{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\nCreditos do {00FF40}{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\nAjuda VIP/Super VIP\n*** Conta VIP ***", "Selecionar", "Cancelar");
        }
        return 1;
    }
    if(strcmp(cmd, "/elevadorPF", true) == 0 || strcmp(cmd, "/ePF", true) == 0)
    {
        if ((IsACop(playerid)) && PlayerToPoint(2.0, playerid, 256.6183,126.0865,1010.2188) || PlayerToPoint(2.0, playerid, 960.1323,-1727.9789,23.4883) || PlayerToPoint(2.0, playerid, 239.1693,117.6838,1003.2188))
        {
            ShowPlayerDialog(playerid, 555, DIALOG_STYLE_LIST, "{FFFF00}Elevador Policia Civil", "1º Departamento Pessoal\n2º Delegacia\n3º Terraço", "Selecionar", "Cancelar");
        }
        return 1;
    }
    if(strcmp(cmd, "/ajudaemprego", true) == 0 || strcmp(cmd, "/ae", true) == 0)
    {
        SendClientMessage(playerid, COLOR_WHITE, "USE: /ajuda");
        return 1;
    }
///FORUM, EXEMPLO
    if(strcmp(cmd, "/forum", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage(playerid, COLOR_WHITE, "|______________ Forum do Server ______________|");
            SendClientMessage(playerid, COLOR_WHITE, "=======> http://bpg-rapidosemortais.forumeiros.com/FORUM <========");
        }
        return 1;
    }
//----------------------------------{Portoes DP}--------------------------------------------
    if(strcmp(cmd, "/pp", true) == 0)
    {
        if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 247.005905 , 72.448440 , 1003.640625) || PlayerInfo[playerid][pEmprego] == 2)
        {
            MoveDynamicObject( PDDOORa, 247.005905 , 72.448440 , 1006.912902,3);
            GameTextForPlayer(playerid, "~w~Porta das Celas ~n~~r~~h~Aberto", 4000, 3);
            SetTimer("GaragemDpClosed", 4000, false);
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "   Você não está perto do portão ou não é um Oficial ");
        }
        return 1;
    }
//----------------------------------{Portoes DP2}----------------------------------------
    if(strcmp(cmd, "/pr", true) == 0)
    {

        if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 250.774871 , 60.822799 , 1003.640625))
        { //GateGaragem
            MoveDynamicObject( PDDOORb, 250.774871 , 60.822799 , 1006.862670,3);
            GameTextForPlayer(playerid, "~w~Porta da Recepcao ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("GaragemDpClosed2", 5000, false);
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "   Você não está perto do portão ou não é um Oficial ");
        }
        return 1;
    }
    /*if(strcmp(cmd, "/pld2", true) == 0)
    {
        if(PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27)
        { //GateGaragem
            if(PlayerToPoint(15.0, playerid, -28.8994100,-1717.0000000,12.5000000))
            {
            MoveDynamicObject(PortaoFaTaL_ImperiuM2, -28.899,-1717.000,17.393,3);
            GameTextForPlayer(playerid, "~w~Portao FaTaL_ImperiuM ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoFaTaL_ImperiuM2F", 5000, false);
            }
        }
        return 1;
    }*/
    if(strcmp(cmd, "/pld1", true) == 0)
    {
        if(PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27)
        { //GateGaragem
            if(PlayerToPoint(15.0, playerid, 79.0996100,-1677.6992200,12.5000000))
            {
            MoveDynamicObject(PortaoFaTaL_ImperiuM1, 79.099,-1677.699,17.393,3);
            GameTextForPlayer(playerid, "~w~Portao FaTal DangeR ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoFaTaL_ImperiuM1F", 5000, false);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/ponibus", true) == 0)
    {
        if(PlayerInfo[playerid][pEmprego] == 9)
        { //GateGaragem
            if(PlayerToPoint(15.0, playerid, 2425.3486,-2089.3240,13.5469))
            {
            MoveDynamicObject(PortaoOnibus, 2424.3000488281, -2089.6000976563, 7.60000038147,3);
            GameTextForPlayer(playerid, "~w~Portao Onibus ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("FecharOnibus", 5000, false);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/pfd2", true) == 0)
    {
        if(PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)
        { //GateGaragem
            if(PlayerToPoint(15.0, playerid, 2092.5347,-1578.7651,13.2424))
            {
                MoveDynamicObject(PortaoTwOPaCk1, 2092.5,-1575.3000488281,19.799999237061,3, 84, 0.00, 0.00);
                GameTextForPlayer(playerid, "~w~Portao HunTerS ~n~~r~~h~Aberto", 5000, 3);
                SetTimer("PortaoTwOPaCk1F", 5000, false);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/pfd1", true) == 0)
    {
        if(PlayerInfo[playerid][pMembro] == 35 || PlayerInfo[playerid][pLider] == 35)
        { //GateGaragem
            if(PlayerToPoint(15.0, playerid, 851.70001221,-2186.10009766,21.9031))
            {
            MoveDynamicObject(PortaoTwOPaCk2, 851.70001221,-2186.10009766,21.9031,3);
            GameTextForPlayer(playerid, "~w~Portao KiLLeRs ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoTwOPaCk2F", 5000, false);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/ps1", true) == 0)
    {
        if(PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29)
        { //GateGaragem
            if(PlayerToPoint(15.0, playerid, 2877.0000,-1961.8000,12.8999))
            {
            MoveDynamicObject(PortaoFakers1, 2877.00000000,-1961.90002441,7.19999981,3);
            GameTextForPlayer(playerid, "~w~Portao Snake ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoFakers1F", 5000, false);
            }
        }
        return 1;
    }
//----------------------------------{Portoes DP3}----------------------------------------
    if(strcmp(cmd, "/pv", true) == 0)
    {
        if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 248.142105 , 78.125961 , 1003.640625))
        { //GateGaragem
            MoveDynamicObject( PDDOORc, 248.142105 , 78.125961 , 1007.248718,3);
            GameTextForPlayer(playerid, "~w~Porta do Vestiario ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("pd1", 5000, false);
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "   Você não está perto do portão ou não é um Oficial ");
        }
        return 1;
    }
//----------------------------------{Portoes LS}----------------------------------------
    if(strcmp(cmd, "/pe", true) == 0)
    {
        if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 1549.5300292969, -1625.1999511719, 13.420000076294))
        { //GateGaragem
            MoveDynamicObject( PDGATE, 1549.5300292969, -1619.999511719, 13.420000076294,3);
            MoveDynamicObject( PDGATE2, 1549.5300292969, -1635.999511719, 13.420000076294,3);
            GameTextForPlayer(playerid, "~w~Garagem Externa ~n~~r~Aberta", 4200, 3);
            SetTimer("pd2", 4200, false);
        }
        return 1;
    }
//----------------------------------{Portoes LS2}----------------------------------------
    if(strcmp(cmd, "/pg", true) == 0)
    {
        if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 1588.555786, -1637.811157, 15.911808))
        { //GateGaragem
            MoveDynamicObject( PDGARAGE, 1588.195,-1637.969, 20.086790,3);
            GameTextForPlayer(playerid, "~w~Garagem Interna ~n~~r~Aberta", 5000, 3);
            SetTimer("pd3", 5000, false);
        }
        return 1;
    }
//----------------------------------{Portoes DP5}----------------------------------------
    if(strcmp(cmd, "/pcg", true) == 0)
    {
        if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 2334.757568, 2443.675537, 8.250650))
        { //GateGaragem
            MoveDynamicObject( gatepf2, 2334.757568, 2443.675537, 12.200590,3);
            GameTextForPlayer(playerid, "~b~Aberto", 5000, 3);
            SetTimer("PFIIClosed2", 5000, false);
        }
        return 1;
    }
 //----------------------------------{Portoes DP6}----------------------------------------
    if(strcmp(cmd, "/pce", true) == 0)
    {
        if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 2293.928467, 2499.322021, 5.825822))
        { //GateGaragem
            MoveDynamicObject( gatepf3, 2293.928467, 2506.294678, 5.825822,3);
            GameTextForPlayer(playerid, "~b~Aberto", 5000, 3);
            SetTimer("PFIIClosed3", 5000, false);
        }
        return 1;
    }
//----------------------------------{Portoes PC}----------------------------------------
    if(strcmp(cmd, "/ppr", true) == 0)
    {
        if(GetPlayerOrg(playerid) == 16 && PlayerToPoint(15.0, playerid, 923.567382,-1227.334716,15.976562))
        { //Portao F      TD
            MoveDynamicObject( PortaoPf, 923.660522, -1238.988647, 15.976562,3);
            GameTextForPlayer(playerid, "~w~Portao PFII ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoPf2", 5000, false);
        }
        return 1;
    }
    if(strcmp(cmd, "/pprc", true) == 0)
    {
        if(PlayerToPoint(11.0, playerid, 917.4000,-1198.8000,19.6000))
        { //GateGaragem
            if(GetPlayerOrg(playerid) == 16)
            {
                MoveDynamicObject(PortaoPRFCarros, 917.4000200,-1198.8000500,26.9000000,3);
                GameTextForPlayer(playerid, "~w~Garagem de Carros ~n~~r~~h~Aberta", 5000, 3);
                SetTimer("PortaoCarros", 5000, false);
            }
        }
        return 1;
    }
//----------------------------------{Portoes ROTA}----------------------------------------
    if(strcmp(cmd, "/pb2", true) == 0)
    {
        if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 283.095062, -1542.899170, 25.510294))
        { //GateGaragem
            MoveDynamicObject( gt3gate, 283.095062, -1542.899170, 33.385311,3);
            GameTextForPlayer(playerid, "~w~Portao ROTA ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("gt3gate2", 5000, false);
        }
        return 1;
    }
//----------------------------------{Portoes ROTA}----------------------------------------
    if(strcmp(cmd, "/pb", true) == 0)
    {
        if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 321.832672, -1488.615112, 25.527353))
        { //GateGaragem
            MoveDynamicObject( gt3gate3, 321.832672, -1488.615112, 33.777353,3);
            GameTextForPlayer(playerid, "~w~Portao ROTA ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("gt3gate4", 5000, false);
        }
        return 1;
    }
//----------------------------------{Exército }----------------------------------------
    if(strcmp(cmd, "/abrirgn", true) == 0)
    {
        if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, -1531.3978271484, 482.25979614258, 8.9530792236328))
        { //GateGaragem
            MoveDynamicObject( PDEx, -1531.3978271484, 482.25979614258, 13.9530792236328,3);
            GameTextForPlayer(playerid, "~w~Portao Exército  ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PDEx2", 5000, false);
        }
        return 1;
    }
    if(strcmp(cmd, "/portaoyiakin", true) == 0)
    {
        if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 1385.7900400,-1646.5699500,12.7000000))
        { //GateGaragem
            MoveDynamicObject( PYiakin[ 0 ], 1385.7900400,-1655.4000200,12.7000000,3);
            GameTextForPlayer(playerid, "~w~Portao ~r~~h~Aberto", 5000, 3);
            SetTimer("PYiakin0", 5000, false);
        }
        return 1;
    }
    if(strcmp(cmd, "/portaoyiakin2", true) == 0)
    {
        if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 1366.5999800,-1610.3000500,12.7000000))
        { //GateGaragem
            MoveDynamicObject( PYiakin[ 1 ], 1371.5899700,-1611.3399700,12.7000000,3);
            GameTextForPlayer(playerid, "~w~Portao ~r~~h~Aberto", 5000, 3);
            SetTimer("PYiakin1", 5000, false);
        }
        return 1;
    }
    if(strcmp(cmd, "/portaoyiakin3", true) == 0)
    {
        if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 1368.5996100,-1699.0000000,11.6000000))
        { //GateGaragem
            MoveDynamicObject( PYiakin[ 2 ], 1368.5996100,-1699.0000000,17.6000000,3);
            GameTextForPlayer(playerid, "~w~Portao ~r~~h~Aberto", 5000, 3);
            SetTimer("PYiakin2", 5000, false);
        }
        return 1;
    }
    if(strcmp(cmd, "/pyakuza", true) == 0)
    {
        if (PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
        {
            if(PlayerToPoint(15.0, playerid, 2516.7102, 1822.7935, 12.5000))
            {
                MoveDynamicObject( pyakuza1, 2516.7102, 1811.6935, 12.5000,3);
                GameTextForPlayer(playerid, "~w~Portao Japonesa ~n~~r~~h~Aberto", 5000, 3);
                SetTimer("fecharyakuza1", 5000, false);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/acn", true) == 0)
    {
        if (PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
        {
            if(PlayerToPoint(15.0, playerid, 1645.19995, 1669.30005, 12.60000))
            {
                MoveDynamicObject( acn, 1645.2000, 1669.3000, 17.8400,3);
                GameTextForPlayer(playerid, "~w~Portao Mafia Russa ~n~~r~~h~Aberto", 5000, 3);
                SetTimer("fecharacn", 5000, false);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/pmec", true) == 0)
    {
        if (PlayerInfo[playerid][pEmprego] == 5)
        {
            if(PlayerToPoint(10.0, playerid, 952.79998779297,-1559.8000488281,15.300000190735))
            {
                MoveDynamicObject( portaomec2, 947.79998779297,-1559.6999511719,15.300000190735,3);
                GameTextForPlayer(playerid, "~w~Portao Mecanicos ~n~~r~~h~Aberto", 5000, 3);
                SetTimer("fecharportaomec2", 5000, false);
            }
            else if(PlayerToPoint(10.0, playerid, 952.9434800,-1501.3525400,15.4121800))
            {
                MoveDynamicObject( portaomec, 947.1435, -1501.4125, 15.4122,3);
                GameTextForPlayer(playerid, "~w~Portao Mecanicos ~n~~r~~h~Aberto", 5000, 3);
                SetTimer("portaomecf", 5000, false);
            }
        }
        return 1;
    }

//----------------------------------{Portao GOVERNO}----------------------------------------
    if(strcmp(cmd, "/pgov", true) == 0)
    {
        if ((IsAGOV(playerid)) && PlayerToPoint(15.0, playerid, 1539.2235107422, -1838.2176513672, 15.320266723633))
        { //Portao Governo
            MoveDynamicObject( PortaoGov, 1539.2235107422, -1848.2176513672, 15.320266723633,3);
            GameTextForPlayer(playerid, "~w~Portao Governo ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoGov2", 5000, false);
        }
        return 1;
    }
    if(strcmp(cmd, "/ppre", true) == 0)
    {
        if ((IsAGOV(playerid)) && PlayerToPoint(15.0, playerid, 369.15893554688, 162.35037231445, 1028.6030273438))
        { //Portao Governo
            MoveDynamicObject( PortaoPre, 369.15893554688, 162.35037231445, 1030.9030273438,3);
            GameTextForPlayer(playerid, "~w~Porta Prefeitura ~n~~r~Aberta", 5000, 3);
            SetTimer("PortaoPre2", 5000, false);
        }
        return 1;
    }
//PORTAO RALLY
    if(strcmp(cmd, "/portaorally", true) == 0)
    {
        if (PlayerInfo[playerid][pAdmin] >= 1 && PlayerToPoint(15.0, playerid, -2368.4670410156, -2192.6381835938, 36.037666320801))
        { //PortaoAdmin
            MoveDynamicObject( PortaoRally, -2368.4670410156, -2192.6381835938, 42.037666320801,3);
            GameTextForPlayer(playerid, "~w~Pista de Rally ~n~~r~Aberta", 25000, 3);
            SetTimer("PortaoRally2", 25000, false);
        }
        return 1;
    }
//PORTAO X1 MONTE CHILIAD
    if(strcmp(cmd, "/portaox1", true) == 0)
    {
        if (PlayerInfo[playerid][pAdmin] >= 1 && PlayerToPoint(15.0, playerid, -2321.5114746094, -1619.4454345703, 484.98388671875))
        { //PortaoAdmin
            MoveDynamicObject( PortaoX1, -2321.5114746094, -1619.4454345703, 488.99388671875,3);
            GameTextForPlayer(playerid, "~w~Portao X1 ~n~~r~~h~Aberto!", 3000, 3);
            SetTimer("PortaoX12", 3000, false);
        }
        return 1;
    }
//----------------------------------{PortaoReporter}----------------------------------------
    if(strcmp(cmd, "/portaoreporter", true) == 0 || strcmp(cmd, "/preporter", true) == 0)
    {
        if ((IsAJornal(playerid)) && PlayerToPoint(15.0, playerid, 777.80017089844, -1330.2664794922, 14.200000762939))
        { //PortaoAdmin
            MoveDynamicObject( PortaoReporter, 777.80017089844, -1330.2664794922, 20.200000762939,3);
            GameTextForPlayer(playerid, "~w~Portao Reporter ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoReporter2", 5000, false);
        }
        return 1;
    }
    if(strcmp(cmd, "/portaoreporter2", true) == 0 || strcmp(cmd, "/preporter2", true) == 0)
    {
        if ((IsAJornal(playerid)) && PlayerToPoint(15.0, playerid, 777.97308349609, -1384.7303466797, 14.299999237061))
        { //PortaoAdmin
            MoveDynamicObject( PortaoReporterr, 777.97308349609, -1384.7303466797, 20.299999237061,3);
            GameTextForPlayer(playerid, "~w~Portao Reporter ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoReporterr2", 5000, false);
        }
        return 1;
 }
//----------------------------------{Portao Taxi}----------------------------------------
    if(strcmp(cmd, "/ptaxi", true) == 0)
    {
        if ((PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10) && PlayerToPoint(15.0, playerid, 959.8434,-1415.2617,13.3612))
        { //Portao Governo
            MoveDynamicObject( PortaoTaxi, 970.840,-1415.794,15.151,3);//-1842.8439
            GameTextForPlayer(playerid, "~w~Portao Taxi ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoTaxi2", 5000, false);
        }
        return 1;
    }
    if(strcmp(cmd, "/ppf", true) == 0)
    {
        if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, -2425.26635742,502.76617432,33.00000000))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            MoveDynamicObject(pfdoor,-2433.97338867,496.39559937,26.20938301,3);
            MoveDynamicObject(pfdoor2,-2424.72973633,500.50247192,30.89804077,3);
            format(string, sizeof(string), "* %s Abriu Este Portao!", sendername);
            ProxDetector(4.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            GameTextForPlayer(playerid, "~g~Aberto", 5000, 3);
            SetTimer("PoliciaFederalClosed", 5000, false);
        }
        return 1;
    }
    if(strcmp(cmd, "/pStorm", true) == 0)
    {
        if ((PlayerInfo[playerid][pMembro] == 36 || PlayerInfo[playerid][pLider] == 36) && PlayerToPoint(15.0, playerid, -75.8000000,-353.2999900,3.2000000))
        { //Portao Desaster
            MoveDynamicObject( PortaoFD, -75.8000000,-353.2999900,-4.9000000,3);//-1842.8439
            GameTextForPlayer(playerid, "~w~Portao Storm ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoFD2", 5000, false);
        }
        return 1;
    }
    if(strcmp(cmd, "/pjn", true) == 0)
    {
        if ((PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34) && PlayerToPoint(15.0, playerid, 708.7999900,-1416.0000000,16.1000000))
        { //Portao Governo
            MoveDynamicObject( PortaoJn, 708.7999900,-1416.0000000,7.1000000,3);//-1842.8439
            GameTextForPlayer(playerid, "~w~Portao ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoJn2", 5000, false);
        }
        return 1;
    }
    if(strcmp(cmd, "/pjn2", true) == 0)
    {
        if ((PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34) && PlayerToPoint(15.0, playerid, 767.5999800,-1415.9000200,16.1000000))
        { //Portao Governo
            MoveDynamicObject( PortaoJn3, 767.5999800,-1415.9000200,7.1000000,3);//-1842.8439
            GameTextForPlayer(playerid, "~w~Portao 2~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoJn2", 5000, false);
        }
        return 1;
    }
    if(strcmp(cmd, "/pjn3", true) == 0)
    {
        if ((PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34) && PlayerToPoint(30.0, playerid, 724.7999900,-1595.3000500,1.5000000))
        { //Portao Governo
            MoveDynamicObject( PortaoJn4, 724.7999900,-1595.3000500,-9.5000000,3);//-1842.8439
            GameTextForPlayer(playerid, "~w~Portao Naval~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoJn5", 5000, false);
        }
        return 1;
    }
 //=============================== Portao Killers ============================================
    /*if(strcmp(cmd, "/pmo1", true) == 0)
    {
        if ((PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30) && PlayerToPoint(15.0, playerid, 2981.1001,-313.2000,9.6000))
        { //PortaoKillers
            MoveDynamicObject( PortaoKillers1, 2981.1001000,-313.2000100,4.2000000,3);
            GameTextForPlayer(playerid, "~w~Portao PyskO ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoKillers12", 5000, false);
        }
        return 1;
    } */
    if(strcmp(cmd, "/pmo2", true) == 0)
    {
        if ((PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30) && PlayerToPoint(15.0, playerid, 2879.5000,-306.1000,9.7000))
        { //PortaoKillers
            MoveDynamicObject( PortaoKillers2, 2879.5000000,-306.1000100,4.2000000,3);
            GameTextForPlayer(playerid, "~w~Portao DesTroyeR ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoKillers22", 5000, false);
        }
        return 1;
    }
//================================ PortaoStrikerS =========================================
    if(strcmp(cmd, "/pbr1", true) == 0)
    {
        if ((PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31) && PlayerToPoint(15.0, playerid, 247.0000000,-1965.3000500,3.8000000))
        { //Portao StrikerS
            MoveDynamicObject( PortaoStrikerS1, 247.0000000,-1965.3000500,-2.3000000,3);
            GameTextForPlayer(playerid, "~w~Portao Justiceiros ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoStrikerS12", 5000, false);
        }
        return 1;
    }
    /*if(strcmp(cmd, "/pbr2", true) == 0)
    {
        if ((PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31) && PlayerToPoint(15.0, playerid, 245.8000000,-2142.3000500,3.8000000))
        { //Portao StrikerS
            MoveDynamicObject( PortaoStrikerS2, 245.8000000,-2142.3000500,-2.3000000,3);
            GameTextForPlayer(playerid, "~w~Portao StrikerS ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoStrikerS22", 5000, false);
        }
        return 1;
    } */
//=============================== Portao PCC ================================================
    if(strcmp(cmd, "/ppcc", true) == 0)
    {
        if ((PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20) && PlayerToPoint(15.0, playerid, 1338.0000000,-876.4000200,42.0000000))
        { //Portao PCC
            MoveDynamicObject( PortaoPcc, 1338.0000000,-876.3994100,33.9000000,3);
            GameTextForPlayer(playerid, "~w~Portao Pcc ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoPcc2", 5000, false);
        }
        return 1;
    }
//------------------------------ Portao Storm--------------------------------------------
    if(strcmp(cmd, "/pds", true) == 0)
    {
        if ((PlayerInfo[playerid][pMembro] == 36 || PlayerInfo[playerid][pLider] == 36) && PlayerToPoint(15.0, playerid, 2441.8137,-1549.5906,23.9969))
        { //Portao PF
            MoveDynamicObject( PortaoDS, 2441.3999, -1549.5000, 18.8000,3);
            GameTextForPlayer(playerid, "~w~Portao Storm ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoDS1", 5000, false);
        }
        return 1;
    }
//------------------------------ Portao PF --------------------------------------------
    if(strcmp(cmd, "/ppf1", true) == 0)
    {
        if((PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32 || PlayerInfo[playerid][pEmprego] == 2) && PlayerToPoint(15.0, playerid, 927.2998000,-1723.3000500,13.6000000))
        { //Portao PF
            MoveDynamicObject( PortaoPF1, 927.2998000,-1713.0999800,13.6000000,3);
            MoveDynamicObject( PortaoPF2, 927.2998000,-1728.0000000,13.6000000,3);
            GameTextForPlayer(playerid, "~w~Portao Policia Civil ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoPF12", 5000, false);
            SetTimer("PortaoPF22", 5000, false);
        }
        return 1;
    }
    if(strcmp(cmd, "/ppf7", true) == 0)
    {
        if (PlayerToPoint(3.0, playerid, 932.1405,-1726.4769,13.5467))
        { //Portao PF
            MoveDynamicObject( PortaoPF1, 927.2998000,-1713.0999800,13.6000000,3);
            MoveDynamicObject( PortaoPF2, 927.2998000,-1728.0000000,13.6000000,3);
            GameTextForPlayer(playerid, "~w~Portao ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoPF12", 5000, false);
            SetTimer("PortaoPF22", 5000, false);
        }
        return 1;
    }
    if(strcmp(cmd, "/ppf3", true) == 0)
    {
        if (PlayerToPoint(15.0, playerid, 217.7000000,124.3000000,1009.0399800))
        { //Portao PF
            MoveDynamicObject( PortaoPF4, 217.6992200,126.0200000,1009.0399800,3);
            GameTextForPlayer(playerid, "~w~Portao ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoFECHADO99", 5000, false);
        }
        return 1;
    }
    if(strcmp(cmd, "/ppf4", true) == 0)
    {
        if (PlayerToPoint(15.0, playerid, 227.3994100,126.7998000,1004.8499800))
        { //Portao PF
            MoveDynamicObject( PortaoPF5, 227.3994100,128.5200000,1004.8499800,3);
            GameTextForPlayer(playerid, "~w~Portao ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoFECHADO98", 5000, false);
        }
        return 1;
    }
    if(strcmp(cmd, "/portaomedico", true) == 0)//Yiakin FEZ
    {
        if( GetPlayerOrg( playerid ) == 4 ){
            if( IsPlayerInRangeOfPoint( playerid, 8.0, 2001.3000000,-1357.3000000,24.7000000 ) ){
                MoveObject( gatemedic[ 0 ], 2008.0000000,-1357.3000000,24.7000000, 3.0 );
                SetTimerEx( "FecharGateMedico", 5000, false, "d", gatemedic[ 0 ] );
            }
            else if( IsPlayerInRangeOfPoint( playerid, 8.0, 2096.2998000,-1446.5996000,24.7000000 ) ){
                MoveObject( gatemedic[ 1 ], 2096.2998000,-1441.0000000,24.7000000, 3.0 );
                SetTimerEx( "FecharGateMedico", 5000, false, "d", gatemedic[ 1 ] );
            }
            else if( IsPlayerInRangeOfPoint( playerid, 15.0, 2002.8000000,-1450.9000000,15.3000000 ) ){
                MoveObject( gatemedic[ 2 ], 2002.8000000,-1450.9000000,17.5000000,3.0,280.0000000,0.0000000,0.0000000 );
                MoveObject( gatemedic[ 3 ], 1997.0000000,-1445.1000000,17.5000000,3.0,80.0000000,0.0000000,90.0000000 );
                SetTimerEx( "FecharGateMedico", 5000, false, "d", gatemedic[ 2 ] );

            }
        }
        return true;
    }
//---------------------------------- Portao Triads -----------------------------------------
    if(strcmp(cmd, "/pt1", true) == 0)
    {
        if ((PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24) && PlayerToPoint(15.0, playerid, 2722.22,-2503.79,13.49))
        { //Portao Triads
            MoveDynamicObject( PortaoTriads1, 2720.5300300,-2495.8999000,16.1000000,3);
            GameTextForPlayer(playerid, "~w~Portao Triads ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoTriads12", 5000, false);
        }
        return 1;
    }

    if(strcmp(cmd, "/pt2", true) == 0)
    {
        if ((PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24) && PlayerToPoint(15.0, playerid, 2721.60,-2405.64,16.46))
        { //Portao Triads
            MoveDynamicObject( PortaoTriads2, 2720.5293000,-2413.3999000,16.0400000,3);
            GameTextForPlayer(playerid, "~w~Portao Triads ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoTriads22", 5000, false);
        }
        return 1;
    }
//----------------------------- BOPE -------------------------------------------------------
    if(strcmp(cmd, "/pbope", true) == 0)
    {
        if ((GetPlayerOrg(playerid) == 32 || PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11) && PlayerToPoint(15.0, playerid, 939.64,-1016.19,31.90))
        { //Portao BOPE
            MoveDynamicObject( PortaoBope, 934.0999800,-1013.0996100,32.6000000,3);
            GameTextForPlayer(playerid, "~w~Portao B.O.P.E ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoBope2", 5000, false);
        }
        return 1;
    }
//------------------------------- Drifters --------------------------------------------
    if(strcmp(cmd, "/pd", true) == 0)
    {
        if ((PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25) && PlayerToPoint(15.0, playerid, 837.11,-1901.06,12.87))
        { //Portao Drifters
            MoveDynamicObject( PortaoDrifters, 847.2,-1899.08,14.6000000,3);
            GameTextForPlayer(playerid, "~w~Portao Drifters ~n~~r~~h~Aberto", 5000, 3);
            SetTimer("PortaoDrifters2", 5000, false);
        }
        return 1;
    }
//----------------------------------(Raidcall)------------------------------------------
    if(strcmp(cmd, "/raidcall", true) == 0 || strcmp(cmd, "/rc", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage(playerid, COLOR_WHITE, "|______________ RaidCall ______________|");
            SendClientMessage(playerid, COLOR_GRAD1," > - ID: 7583826 < - ");
            SendClientMessage(playerid, COLOR_GRAD1," > - ID: 7583826 < - ");
        }
        return 1;
    }
//----------------------------------[HELP]-----------------------------------------------
    if(strcmp(cmd, "/ajudahelper", true) == 0)
    {
        if(helptrampando[playerid] < 1)
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Você não está ajudando! (/helpajudar)");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {

            if (PlayerInfo[playerid][pHelper] >= 1)
            {
                SendClientMessage(playerid, 0xFF00FFAA, "~*~*~*~*~*~*~*~*~~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*");
                SendClientMessage(playerid, COR_HELPER, "*1* Helper ** /hq /helpajudar (entra em modo ajuda) /meavalie (envia sua avaliação para os players)");
                SendClientMessage(playerid, COR_HELPER, "*1* Helper *** /avh (Aviso Helper) /h (Chat Helpers) /ah (Chat Helpers com Admins) /par (particular)");
                SendClientMessage(playerid, COR_HELPER, "*80* Helper *** /irh (vai até um jogardor) ");
                SendClientMessage(playerid, COR_HELPER, "*100* Helper *** /trazerh (trazer um jogador até você)");
                SendClientMessage(playerid, COR_HELPER, "*150* Helper *** /tvh (entra em modo spectator)");
                SendClientMessage(playerid, 0xFF00FFAA, "~*~*~*~*~*~*~*~*~~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/ahelp", true) == 0 || strcmp(cmd, "/aa", true) == 0 || strcmp(cmd, "/adminajuda", true) == 0)
    {
        if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
        {
            SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage(playerid, COLOR_WHITE, "|______________ Ajuda Admin ______________|");
            if (PlayerInfo[playerid][pAdmin] >= 1)
            {

                SendClientMessage(playerid, TEAM_CYAN_COLOR, "*1* ADMIN *** /kitadm /tv /tapa /tapao /par /ver /calar /kick /ir /trazer /trazer2(sem armas) /matar /infoadm /infovip");
                SendClientMessage(playerid, TEAM_CYAN_COLOR, "*1* ADMIN *** (/av)iso /congelar /descongelar /infoarmas /infoplayer /afk(modo afk) /sairafk(sair do modo afk)");
                SendClientMessage(playerid, TEAM_CYAN_COLOR, "*1* ADMIN *** /cnn (/desativar celular) /paredao /portaorally /avisar /infolider /ajudaevento /respawnid");
                SendClientMessage(playerid, TEAM_CYAN_COLOR, "*1* TELEPORTES *** /ls /lv /sf /predio /praia /monte /aerols /aerolv /bate-bate /fim /arenax1 /portaox1 /pista");
            }
            if (PlayerInfo[playerid][pAdmin] >= 2)
            {
                SendClientMessage(playerid, COLOR_LIGHTRED,"*2* ADMIN *** /carandiru /settime /tempo /sethora /ip /desbugar");
            }
            if (PlayerInfo[playerid][pAdmin] >= 3)
            {
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"*3* ADMIN *** /explode /respawnevento /1 /2 /3 /go /votacao /encerrar");
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"*3* ADMIN *** /rpall /abastecerid /repararid /destruirid /entrarcarro");
            }
            if (PlayerInfo[playerid][pAdmin] >= 4)
            {
                SendClientMessage(playerid, COLOR_GREEN,"*4* ADMIN *** /mark /irmark /carroantigo /ircarro /trazercarro /abastecercarros /retirararmas /spawn ");
                SendClientMessage(playerid, COLOR_GREEN,"*4* ADMIN *** /setcampeao /darcolete /dararma /forceskin /iniciarloteria /trazertodos /destruirtrazer /irtunning /ban");
                SendClientMessage(playerid, COLOR_GREEN,"*4* ADMIN *** /eventokart | /darvida /Destruirkart | /eventorally /destuirrally | /eventox1 /dtx1(destruir)");
            }
            if (PlayerInfo[playerid][pAdmin] >= 1337)
            {
                SendClientMessage(playerid, 0x00FFFFFF,"***ADMIN MASTER*** /editar /admvemp /admvsemp /dargrana /setgrana /antiafk /darlicencas /limparlider /respawncarros");
                SendClientMessage(playerid, 0x00FFFFFF,"***ADMIN MASTER*** /cnnn /seditar /ircasa /iremp /irsemp /biz /sbiz /makeircadmin /online /lider");
                SendClientMessage(playerid, 0x00FFFFFF,"***ADMIN MASTER*** /desbanip /nomedesban /ptuto /rc");
            }
            if(PlayerInfo[playerid][pAdmin] >= 1338)
            {
                SendClientMessage(playerid, 0x00FFFFFF,"***ADMIN 1338+*** /liderex");
            }
            if (PlayerInfo[playerid][pAdmin] >= 1340)
            {
                SendClientMessage(playerid, 0xFF66CCFF,"***ADMIN DONO*** /savefiles /loadfiles /kitadmdono /admvcasa /admvemp /admvsemp");
                SendClientMessage(playerid, 0xFF66CCFF,"***ADMIN DONO*** /Morro /destruirveiculos /veh(não use atoa) /setskin /setemprego");
            }
            if (PlayerInfo[playerid][pAdmin] == 3000 && ServerOwner[playerid] == 1)
            {
                SendClientMessage(playerid, 0xFF66CCFF,"*** O CARA *** /gmx/amudarnick /atualizar3dtext /deletarconta /limparadmin /trazercasa /descricao");
                SendClientMessage(playerid, 0xFF66CCFF,"*** O CARA *** /darvip  /limparvip /setpos /ocultar /daradmin /padmin /carid /Deslogartodos /irobjeto");
            }
        }
        return 1;
    }
    if(strcmp(cmd,"/habilidades",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            new x_nr[32];
            x_nr = strtok(cmdtext, idx);
            if(!strlen(x_nr))
            {
                SendClientMessage(playerid, COLOR_WHITE, "|__________________ Skill Info __________________|");
                SendClientMessage(playerid, COLOR_WHITE, "USE: /Habilidades [numero]");
                SendClientMessage(playerid, COLOR_GREY, "| 1: Detetive             ");
                SendClientMessage(playerid, COLOR_GREY, "| 2: Advogado             ");
                SendClientMessage(playerid, COLOR_GREY, "| 3: Profissional do sexo");
                SendClientMessage(playerid, COLOR_GREY, "| 4: Vendedor De Drogas ");
                SendClientMessage(playerid, COLOR_GREY, "| 5: Ladrão De Carros   ");
                SendClientMessage(playerid, COLOR_GREY, "| 6: Reporter           ");
				SendClientMessage(playerid, COLOR_GREY, "| 7: Mecanico           ");
				SendClientMessage(playerid, COLOR_GREY, "| 8: Vendedor De Carros ");
				SendClientMessage(playerid, COLOR_GREY, "| 9: Boxer              ");
				SendClientMessage(playerid, COLOR_GREY, "| 10: Pesca             ");
                return 1;
            }
            if(strcmp(x_nr,"1",true) == 0)//Detetive
            {
                new level = PlayerInfo[playerid][pDetSkill];
                if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de detetive = 1."); format(string, sizeof(string), "Você precisa procurar mais %d para passar de nível.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de detetive = 2."); format(string, sizeof(string), "Você precisa procurar mais %d para passar de nível.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de detetive = 3."); format(string, sizeof(string), "Você precisa procurar mais %d para passar de nível.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de detetive = 4."); format(string, sizeof(string), "Você precisa procurar mais %d para passar de nível.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de detetive = 5."); }
            }
            else if(strcmp(x_nr,"2",true) == 0)//Advogado
            {
                new level = PlayerInfo[playerid][pLawSkill];
                if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de advogado = 1."); format(string, sizeof(string), "Você precisa soltar mais %d pessoas para passar de nível.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de advogado = 2."); format(string, sizeof(string), "Você precisa soltar mais %d pessoas para passar de nível.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de advogado = 3."); format(string, sizeof(string), "Você precisa soltar mais %d pessoas para passar de nível.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de advogado = 4."); format(string, sizeof(string), "Você precisa soltar mais %d pessoas para passar de nível.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de advogado = 5."); }
            }
            else if(strcmp(x_nr,"3",true) == 0)//Profissional do sexo
            {
                new level = PlayerInfo[playerid][pSexSkill];
                if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de profissional do sexo = 1."); format(string, sizeof(string), "Você precisa fazer mais %d sexos para passar de nível.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de profissional do sexo = 2."); format(string, sizeof(string), "Você precisa fazer mais %d sexos para passar de nível.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de profissional do sexo = 3."); format(string, sizeof(string), "Você precisa fazer mais %d sexos para passar de nível.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de profissional do sexo = 4."); format(string, sizeof(string), "Você precisa fazer mais %d sexos para passar de nível.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de profissional do sexo = 5."); }
            }
            else if(strcmp(x_nr,"4",true) == 0)//Vendedor De Drogas
            {
                new level = PlayerInfo[playerid][pDrogasSkill];
                if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de vendedor de drogas = 1."); format(string, sizeof(string), "Você precisa vender mais %d drogas para passar de nível.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de vendedor de drogas = 2."); format(string, sizeof(string), "Você precisa vender mais %d drogas para passar de nível.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de vendedor de drogas = 3."); format(string, sizeof(string), "Você precisa vender mais %d drogas para passar de nível.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de vendedor de drogas = 4."); format(string, sizeof(string), "Você precisa vender mais %d drogas para passar de nível.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de vendedor de drogas = 5."); }
            }
            else if(strcmp(x_nr,"6",true) == 0)//noticias Reporter
            {
                new level = PlayerInfo[playerid][pNewsSkill];
                if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de repórter = 1."); format(string, sizeof(string), "Você precisar mandar mais %d notícias para passar de nível.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de repórter = 2."); format(string, sizeof(string), "Você precisar mandar mais %d notícias para passar de nível.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de repórter = 3."); format(string, sizeof(string), "Você precisar mandar mais %d notícias para passar de nível.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de repórter = 4."); format(string, sizeof(string), "Você precisar mandar mais %d notícias para passar de nível.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de repórter = 5."); }
            }
            else if(strcmp(x_nr,"7",true) == 0)//Mecanico
            {
                new level = PlayerInfo[playerid][pMechSkill];
                if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de mecânico = 1."); format(string, sizeof(string), "Você precisa concertar/abastecer mais %d carros para passar de nível.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de mecânico = 2."); format(string, sizeof(string), "Você precisa concertar/abastecer mais %d carros para passar de nível.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de mecânico = 3."); format(string, sizeof(string), "Você precisa concertar/abastecer mais %d carros para passar de nível.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de mecânico = 4."); format(string, sizeof(string), "Você precisa concertar/abastecer mais %d carros para passar de nível.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de mecânico = 5."); }
            }
            else if(strcmp(x_nr,"9",true) == 0)//Boxer
            {
                new level = PlayerInfo[playerid][pBoxSkill];
                if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de boxeador = 1."); format(string, sizeof(string), "Você precisa ganhar mais %d lutas para passar de nível.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de boxeador = 2."); format(string, sizeof(string), "Você precisar ganhar mais %d lutas para passar de nível.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de boxeador = 3."); format(string, sizeof(string), "Você precisar ganhar mais %d lutas para passar de nível.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de boxeador = 4."); format(string, sizeof(string), "Você precisar ganhar mais %d lutas para passar de nível.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de boxeador = 5."); }
            }
            else if(strcmp(x_nr,"10",true) == 0)//Fishing
            {
                new level = PlayerInfo[playerid][pFishSkill];
                if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de pesca = 1."); format(string, sizeof(string), "Você precisa pescar mais %d peixes para passar de nível.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 51 && level <= 250) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de pesca = 2."); format(string, sizeof(string), "Você precisa pescar mais %d peixes para passar de nível.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 251 && level <= 500) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de pesca = 3."); format(string, sizeof(string), "Você precisa pescar mais %d peixes para passar de nível.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 501 && level <= 999) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de pesca = 4."); format(string, sizeof(string), "Você precisa pescar mais %d peixes para passar de nível.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
                else if(level >= 1000) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de pesca = 5."); }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Número de habilidade inválido !");
                return 1;
            }
        }
        return 1;
    }
// ADM VENDERLICENCA
    if(strcmp(cmd, "/darlicencas", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 1336)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                    return 1;
                }
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_WHITE, "USE: /darlicencas [id]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        format(string, sizeof(string), "* Você deu todas as licenças para %s.",giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Admin %s lhe deu todas as licenças.",sendername);
                        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                        PlayerInfo[giveplayerid][pGunLic] = 1;
                        PlayerInfo[giveplayerid][pFishLic] = 1;
                        PlayerInfo[giveplayerid][pBoatLic] = 1;
                        PlayerInfo[giveplayerid][pFlyLic] = 1;
                        PlayerInfo[giveplayerid][pCarLic] = 1;
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   O jogador está offline!");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não está autorizado a usar este comando !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/arrombar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(gTeam[playerid] == 2  || IsACop(playerid) || IsAHit(playerid) || GetPlayerOrg(playerid) == 24)
            {
                for(new i = 0; i < sizeof(HouseInfo); i++)
                {
                    if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
                    {
                        SetPlayerInterior(playerid,HouseInfo[i][hInt]);
                        SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
                        SetPlayerVirtualWorld(playerid,HouseInfo[i][hWorld]);
                        GameTextForPlayer(playerid, "~r~Arrombou a Porta", 5000, 1);
                        PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
                        PlayerInfo[playerid][pLocal] = i;
                        HouseEntered[playerid] = i;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um Oficial ou um Hitman !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/camera", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsACop(playerid))
            {
                if(!PlayerToPoint(8.0,playerid,211.6222,1811.9565,21.8594))
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não está no painel de segurança do carandiru !");
                    return 1;
                }
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp)) {
                    SendClientMessage(playerid, COLOR_WHITE, "USE: /camera [numero 1 - 6]  (6 = Desligar)");
                    return 1;
                }
                new number = strval(tmp);
                if(number < 1 || number > 6) { SendClientMessage(playerid, COLOR_GREY, "   Número da câmera mínimo 1 máximo 6 !"); return 1; }
                TogglePlayerControllable(playerid, 0);
            //  GetPlayerPos(playerid, Unspec[playerid][Coords][0],Unspec[playerid][Coords][1],Unspec[playerid][Coords][2]);
                if(number == 1) { SetPlayerCameraPos(playerid, 118.1011,1931.3221,22.5527); SetPlayerCameraLookAt(playerid, 98.9656,1920.9819,18.2180); }
                else if(number == 2) { SetPlayerCameraPos(playerid, 213.5340,1875.3075,17.6406); SetPlayerCameraLookAt(playerid, 213.8679,1884.1714,13.8945); }
                else if(number == 3) { SetPlayerCameraPos(playerid, 266.0640,1894.8856,38.6459); SetPlayerCameraLookAt(playerid, 224.0039,1887.1532,17.6406); }
                else if(number == 4) { SetPlayerCameraPos(playerid, 260.8112,1808.0175,38.6303); SetPlayerCameraLookAt(playerid, 227.5645,1818.4778,17.6406); }
                else if(number == 5) { SetPlayerCameraPos(playerid, 114.5196,1814.3483,38.6029); SetPlayerCameraLookAt(playerid, 123.6176,1846.4792,17.6549); }
                else if(number == 6)
                {
                    Hospital[playerid] = 1;
                    TogglePlayerControllable(playerid, 1);
                    //SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pSkin], Unspec[playerid][Coords][0], Unspec[playerid][Coords][1], Unspec[playerid][Coords][2], 10.0, -1, -1, -1, -1, -1, -1);
                    SpawnPlayer(playerid);
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd,"/divorcio",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(!PlayerToPoint(10.0, playerid, 2233.8225,-1333.2725,23.9816))
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não está na igreja de Los Santos !");
                return 1;
            }
            if(PlayerInfo[playerid][pMarried] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não está casado !");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) {
                SendClientMessage(playerid, COLOR_WHITE, "USE: /divorcio [id]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if (ProxDetectorS(8.0, playerid, giveplayerid))
                    {
                        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se pedir em divórcio!"); return 1; }
                        new dstring[MAX_PLAYER_NAME];
                        new wstring[MAX_PLAYER_NAME];
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "%s", giveplayer);
                        strmid(wstring, string, 0, strlen(string), 255);
                        format(string, sizeof(string), "%s", PlayerInfo[playerid][pMarriedTo]);
                        strmid(dstring, string, 0, strlen(string), 255);
                        if(strcmp(dstring ,wstring, true ) == 0 )
                        {
                            format(string, sizeof(string), "* Você enviou papéis de divórcio para %s.", giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* %s pediu papéis de divórcio (Digite /aceitar divorcio) para aceitar.", sendername);
                            SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                            DivorceOffer[giveplayerid] = playerid;
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "  Esse jogador não está casado com você !");
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O jogador está longe de você!");
                        return 1;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   O Jogador Esta Offline !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd,"/casar",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(!PlayerToPoint(10.0, playerid, 2233.8225,-1333.2725,23.9816))
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não está na igreja de Los Santos !");
                return 1;
            }
            if(GetPlayerMoneyEx(playerid) < 100000)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Para se Casar Custa R$100000 !");
                return 1;
            }
            if(PlayerInfo[playerid][pMarried] > 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você já é casado !");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) {
                SendClientMessage(playerid, COLOR_WHITE, "USE: /casar [id]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(PlayerInfo[giveplayerid][pMarried] > 0)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Este jogador(a) ja é casado(a) !");
                        return 1;
                    }
                    if (ProxDetectorS(8.0, playerid, giveplayerid))
                    {
                        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode propor a si mesmo!"); return 1; }
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* Você propôs casamento a %s.", giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* %s Você foi pedida em casamento (Digite /aceitar casamento) para aceitar.", sendername);
                        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                        ProposeOffer[giveplayerid] = playerid;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está perto de você !");
                        return 1;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   O jogador esta offline !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd,"/padrinho",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(!PlayerToPoint(10.0, playerid, 2233.8225,-1333.2725,23.9816))
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não está na igreja de Los Santos !");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) {
                SendClientMessage(playerid, COLOR_WHITE, "USE: /padrinho [id]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if (ProxDetectorS(8.0, playerid, giveplayerid))
                    {
                        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode ser marido e padrinho do casamento!"); return 1; }
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* Você chamou %s para ser seu padrinho de casamento.", giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* %s Você foi chamado para ser Padrinho do Casamento (Digite /aceitar padrinho) para aceitar.", sendername);
                        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                        MarryWitnessOffer[giveplayerid] = playerid;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está perto de você !");
                        return 1;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta offline !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd,"/bloqf",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] != 3000)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não tem autorização pra usar este comando!");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_WHITE, "USE: /bloquearf [familia ID]");
                return 1;
            }
            moneys = strval(tmp);
            FamilyBloqueada = moneys;
            format(string, sizeof(string), "* Você bloqueou a Família ID: %d, Agora ninguem vai Poder ultiliza-la!", FamilyBloqueada);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
        }
        return 1;
    }
//--------------------------------------Prefeito Comandos-------------------------------------------
    if(strcmp(cmd,"/setartaxa",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pLider] != 7)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é o Prefeito !");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) {
                SendClientMessage(playerid, COLOR_WHITE, "USE: /setartaxa [quantidade]");
                return 1;
            }
            moneys = strval(tmp);
            if(moneys < 1 || moneys > 10000) { SendClientMessage(playerid, COLOR_GREY, "   O Dinheiro da Taxa não pode ser menor que 1 ou maior que 10000 !"); return 1; }
            Tax = moneys;
            SaveStuff();
            format(string, sizeof(string), "* Cada Jogador vai pagar uma taxa de R$%d, apartir de agora!", Tax);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            format(string, sizeof(string), "Notícias: O Prefeito acaba de mudar a Taxa por Pessoa para: R$%d.", Tax);
            SendClientMessageToAll(COLOR_LIGHTBLUE, string);
        }
        return 1;
    }
    if(strcmp(cmd,"/pagarcops",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pLider] != 7)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é o Prefeito !");
                return 1;
            }
            if(Tax < 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Não há Dinheiro suficiente no banco de Impostos !");
                return 1;
            }
            new Cops = 0;
   for(new i = 0; i < MaiorID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(IsACop(i))
                    {
                        Cops += 1;
                    }
                }
            }
            if(Cops >= 1)
            {
                new price = Tax / Cops;
       for(new i = 0; i < MaiorID; i++)
                {
                    if(IsPlayerConnected(i))
                    {
                        if(IsACop(i))
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Você deu a taxa para todos os policiais online!");
                            format(string, sizeof(string), "* Você recebeu R$%d do banco de Impostos pelo Prefeito.",price);
                            SendClientMessage(i, COLOR_LIGHTBLUE, string);
                            GivePlayerMoney(i, price);
                            Tax = 0;
                        }
                    }
                }
                SaveStuff();
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "  Não há nenhum Policial Online no Momento !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd,"/pagarmedicos",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pLider] != 7)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é o Prefeito !");
                return 1;
            }
            if(Tax < 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Não há Dinheiro suficiente no banco de Impostos !");
                return 1;
            }
            new Cops = 0;
   for(new i = 0; i < MaiorID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(GetPlayerOrg(i) == 4)
                    {
                        Cops += 1;
                    }
                }
            }
            if(Cops >= 1)
            {
                new price = Tax / Cops;
       for(new i = 0; i < MaiorID; i++)
                {
                    if(IsPlayerConnected(i))
                    {
                        if(GetPlayerOrg(i) == 4)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "Você deu a taxa para todos os Medicos online!");
                            format(string, sizeof(string), "* Você recebeu R$%d do banco de Impostos pelo Prefeito.",price);
                            SendClientMessage(i, COLOR_LIGHTBLUE, string);
                            GivePlayerMoney(i, price);
                            Tax = 0;
                        }
                    }
                }
                SaveStuff();
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "  Não há nenhum Medicos Online no Momento !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd,"/pagarbolsa",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pLider] != 7)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é o Prefeito !");
                return 1;
            }
            if(Tax < 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Não há Dinheiro suficiente no banco de Impostos !");
                return 1;
            }
            new Cops = 0;
   for(new i = 0; i < MaiorID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    Cops += 1;
                }
            }
            if(Cops >= 1)
            {
                new price = Tax / Cops;
       for(new i = 0; i < MaiorID; i++)
                {
                    if(IsPlayerConnected(i))
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Você deu a taxa para todos os Cidadaos online!");
                        format(string, sizeof(string), "* Você recebeu R$%d do banco de Impostos pelo Prefeito.",price);
                        SendClientMessage(i, COLOR_LIGHTBLUE, string);
                        GivePlayerMoney(i, price);
                        Tax = 0;
                    }
                }
                SaveStuff();
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "  Não há nenhum cidadao Online no Momento !");
                return 1;
            }
        }
        return 1;
    }
//------------------------------------------------/Prefeito Comandos--------------------------------------------------------
    if(strcmp(cmd, "/mudarlocal", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pPHousekey] != 9999 || IsAMon(playerid) || IsASons(playerid) || IsAHell(playerid) || PlayerInfo[playerid][pFamyMember] != 0 || PlayerInfo[playerid][pFamyLider] != 0)
            {

                if((IsAHell(playerid) || IsAMon(playerid) || IsASons(playerid)) && PlayerInfo[playerid][pSpawn] == 0)
                {
                    PlayerInfo[playerid][pSpawn] = 3;
                    SendClientMessage(playerid, COLOR_GREY, "   Você vai nascer na SUB HQ de sua Organização !");
                }
                else if((PlayerInfo[playerid][pFamyMember] != 0 || PlayerInfo[playerid][pFamyLider] != 0) && PlayerInfo[playerid][pSpawn] == 0)
                {
                    PlayerInfo[playerid][pSpawn] = 4;
                    SendClientMessage(playerid, COLOR_GREY, "   Você vai nascer na HQ de sua Família !");
                }
                else if(PlayerInfo[playerid][pSpawn] == 1)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você vai nascer no local normal de nascimento ou em sua HQ !");
                    PlayerInfo[playerid][pSpawn] = 0;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "  Agora você vai nascer em sua casa !");
                    PlayerInfo[playerid][pSpawn] = 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não tem casa/sub-hq, não pode mudar o local !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/relatorio", true) == 0 || strcmp(cmd, "/relato", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(gPlayerLogged[playerid] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não está logado!");
                return 1;
            }
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /relatorio [texto]");
                return 1;
            }
            if(RelatoOFF == 1) { return SendClientMessage(playerid, COLOR_GRAD2, "O /relatorio Foi Bloqueado por um Administrador, Ultilize /senha para Atendimento!"); }
            if(RelatoEntregue[playerid] == 1) { return SendClientMessage(playerid, COLOR_GRAD2, "Você ja mandou um Relatório Recentemente, Aguarde 5 Segundos."); }
            if(PlayerInfo[playerid][pVip] == 1)
            {
                new lol;
                lol = PlayerInfo[playerid][pVip];
                format(strvinny, sizeof(strvinny), "==> Relatório VIP de %s - ID[%d]: %s <== {C2CA7F}/aj para ajuda-lo.", sendername, playerid, lol, (result));
                ABroadCast(0x33FF00FF,strvinny,1);
                SendClientMessage(playerid, COLOR_YELLOW, "Seu relatório VIP foi enviado aos admins, aguarde uma resposta...");
            }
            else if(PlayerInfo[playerid][pVip] == 2)
            {
                new lol;
                lol = PlayerInfo[playerid][pVip];
                format(strvinny, sizeof(strvinny), "==> Relatório Premium de %s - ID[%d]: %s <== {C2CA7F}/aj para ajuda-lo.", sendername, playerid, lol, (result));
                ABroadCast(0x33FF00FF,strvinny,1);
                SendClientMessage(playerid, COLOR_YELLOW, "Seu relatório VIP foi enviado aos admins, aguarde uma resposta...");
            }
            else
            {
                format(strvinny, sizeof(strvinny), "==> Relatório de %s(%d): %s <== {C2CA7F}/aj para ajuda-lo.", sendername, playerid, (result));
                ABroadCast(0xFFFF66FF,strvinny,1);
                SendClientMessage(playerid, COLOR_YELLOW, "Seu relatório foi enviado aos admins, aguarde uma resposta...");
            }
            RelatoEntregue[playerid] = 1;
            SetTimerEx("MandarRelato", 5000,false,"i",playerid);
        }
        return 1;
    }
    if(strcmp(cmd, "/ticket", true) == 0 || strcmp(cmd, "/senha", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /Senha [Pergunta]");
                return 1;
            }
            if(Infovinny[playerid][NumSenha] != 999)
            {
                SendClientMessage(playerid,0xFFFFFFFF,"[Atendimento] Você ja Pediu uma Senha, Aguarde ela ser Atendida!");
                return 1;
            }
            if(PlayerInfo[playerid][pMuted] == 1)
            {
                SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
                return 1;
            }
            if(SenhasAtendimento >= 8)
            {
                SendClientMessage(playerid,0xFFFFFFFF,"[Atendimento] O Atendimento está Lotado, Por favor Aguarde alguns Segundos!");
                return 1;
            }
            if( PlayerInfo[playerid][pJailed] > 0 ) return SendClientMessage( playerid, -1, "Você não pode pegar uma senha estando preso." );
            if(Infovinny[playerid][NumSenha] == 999)
            {
                Infovinny[playerid][NumSenha] = playerid;
                SenhasAtendimento ++;
                strmid(Infovinny[playerid][PergSenha], result, 0, strlen(result), 255);
                SendClientMessage(playerid,0xFFFFFFFF,"[Atendimento] Você Enviou uma Senha de Ajuda, Aguarde até que ela seja Atendida!");
                format(string,sizeof(string),"Player %s[ID:%d] Pediu uma Senha de Ajuda (/senhas), Digite /irsenha %d.",PlayerName(playerid),playerid,Infovinny[playerid][NumSenha]);
                ABroadCastah(0xFFBE93AA,string,1);
                return 1;
            }
        }
        else return SendClientMessage(playerid,COLOR_GREEN,"Você precisa estar logado");
        return 1;
    }
    if(strcmp(cmd, "/versenhas", true) == 0 || strcmp(cmd, "/versenha", true) == 0 || strcmp(cmd, "/senhas", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
            {
                SendClientMessage(playerid, 0x55aafdFF, "[Atendimento] Senhas de suporte abertas:");
                for(new i = 0; i < MaiorID; i++)
                {
                    if(Infovinny[i][NumSenha] != 999 && IsPlayerConnected(i))
                    {
                        format(string,sizeof(string),"Senha ID: %d, %s, Pergunta: %s.",i,PlayerName(i),Infovinny[i][PergSenha]);
                        SendClientMessage(playerid,0x77EEA1FF,string);
                    }
                }
                SendClientMessage(playerid,0xFFFFFFFF,"Para ir até o solicitante digite: /irsenha [ID]");
            }
        }
        else return SendClientMessage(playerid,COLOR_GREEN,"Você precisa estar logado.");
        return 1;
    }
    if(strcmp(cmd, "/irsenha", true) == 0 || strcmp(cmd, "/atendersenha", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /irsenha [id]");
                return 1;
            }
            new Float:plocx,Float:plocy,Float:plocz;
            new plo;
            plo = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
            {
                if (IsPlayerConnected(plo))
                {
                    if(Infovinny[plo][NumSenha] == 999)
                    {
                        SendClientMessage(playerid,0xFFFFFFFF,"[BPG] Esse jogador não solicitou ajuda ou já foi atendido.");
                        return 1;
                    }
                    GetPlayerPos(plo, plocx, plocy, plocz);
                    format(string,sizeof(string),"[SENHA] %s está atendendo a senha: %d de %s, para mais informações digite: /senhas.",PlayerName(playerid),plo,PlayerName(plo));
                    ABroadCastah(COLOR_YELLOW,string,1);
                    format(string,sizeof(string),"[Atendimento] %s está atendendo o seu pedido, aguarde em sua posição atual (fique parado).",PlayerName(playerid));
                    SendClientMessage(plo,COLOR_YELLOW,string);
                    format(string,sizeof(string),"[SENHA] Player %s pergunta: %s.",PlayerName(plo),Infovinny[plo][PergSenha]);
                    SendClientMessage(playerid,0xFEEA5CAA,string);
                    if (GetPlayerState(playerid) == 2)
                    {
                        new tmpcar = GetPlayerVehicleID(playerid);
                        SetVehiclePos(tmpcar, plocx, plocy+4, plocz); LinkVehicleToInterior(tmpcar, 0);
                        TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                    }
                    else
                    {
                        SetPlayerPos(playerid,plocx,plocy+2, plocz);
                    }
                    SetPlayerInterior(playerid,GetPlayerInterior(plo));
                    SetPlayerVirtualWorld(playerid,GetPlayerInterior(plo));
                    PlayerInfo[playerid][pInt] = GetPlayerInterior(plo);
                    SenhasAtendimento --;
                    strmid(Infovinny[plo][PergSenha], "Vazia", 0, strlen("Vazia"), 255);
                    Infovinny[plo][NumSenha] = 999;
                }
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/duvida", true) == 0 || strcmp(cmd, "/relatoh", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(gPlayerLogged[playerid] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não está logado!");
                return 1;
            }
            if(PlayerInfo[playerid][pMuted] == 1)
            {
                SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
                return 1;
            }
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /duvida [texto]");
                return 1;
            }
            if(PlayerInfo[playerid][pVip] == 1)
            {
                new lol;
                lol = PlayerInfo[playerid][pVip];
                format(string, sizeof(string), "==> Dúvida VIP de %s - ID[%d]: %s <==", sendername, playerid, lol, (result));
                ABroadCasth(0x33FF00FF,string,1);
                SendClientMessage(playerid, COLOR_YELLOW, "Sua dúvida VIP foi enviada aos Helpers, aguarde uma resposta!");
            }
            else if(PlayerInfo[playerid][pVip] == 2)
            {
                new lol;
                lol = PlayerInfo[playerid][pVip];
                format(string, sizeof(string), "==> Dúvida Premium de %s - ID[%d]: %s <==", sendername, playerid, lol, (result));
                ABroadCasth(0x33FF00FF,string,1);
                SendClientMessage(playerid, COLOR_YELLOW, "Sua dúvida VIP foi enviada aos Helpers, aguarde uma resposta!");
            }
            else
            {
                format(string, sizeof(string), "==> Dúvida de %s(%d): %s <==", sendername, playerid, (result));
                ABroadCasth(0xFFFF66FF,string,1);
                SendClientMessage(playerid, COLOR_YELLOW, "Sua dúvida foi enviada aos Helpers, aguarde uma resposta!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/roupas", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pMembro] >= 1 || PlayerInfo[playerid][pLider] >= 1)
            {
                if(IsAtClothShop(playerid))
                {
                    if(PlayerInfo[playerid][pMembro] == 1) { ChosenSkin[playerid] = 282; SetPlayerSkinEx(playerid, 282); }// Policia Militar
                    else if(PlayerInfo[playerid][pMembro] == 2) { ChosenSkin[playerid] = 285; SetPlayerSkinEx(playerid, 285); }//ROTA
                    else if(PlayerInfo[playerid][pMembro] == 3) { ChosenSkin[playerid] = 287; SetPlayerSkinEx(playerid, 287); }//Exército
                    else if(PlayerInfo[playerid][pMembro] == 4) { ChosenSkin[playerid] = 274; SetPlayerSkinEx(playerid, 274); }//Médicos
                    else if(PlayerInfo[playerid][pMembro] == 5) { ChosenSkin[playerid] = 114; SetPlayerSkinEx(playerid, 115); }//Aztecas
                    else if(PlayerInfo[playerid][pMembro] == 6) { ChosenSkin[playerid] = 121; SetPlayerSkinEx(playerid, 121); }//GuerrilheirosIsraelitas
                    else if(PlayerInfo[playerid][pMembro] == 7) { ChosenSkin[playerid] = 163; SetPlayerSkinEx(playerid, 163); }//Prefeitura
                    else if(PlayerInfo[playerid][pMembro] == 8) { ChosenSkin[playerid] = 127; SetPlayerSkinEx(playerid, 127); }//Hitmans
                    else if(PlayerInfo[playerid][pMembro] == 9) { ChosenSkin[playerid] = 148; SetPlayerSkinEx(playerid, 148); }//Reporters
                    else if(PlayerInfo[playerid][pMembro] == 10) { ChosenSkin[playerid] = 253; SetPlayerSkinEx(playerid, 253); }//Taxistas
                    else if(PlayerInfo[playerid][pMembro] == 12) { ChosenSkin[playerid] = 126; SetPlayerSkinEx(playerid, 126); }//Máfia Russa
                    else if(PlayerInfo[playerid][pMembro] == 13) { ChosenSkin[playerid] = 203; SetPlayerSkinEx(playerid, 203); }//Máfia Japonesa
                    else if(PlayerInfo[playerid][pMembro] == 14) { ChosenSkin[playerid] = 107; SetPlayerSkinEx(playerid, 107); }//Groove Street
                    else if(PlayerInfo[playerid][pMembro] == 15) { ChosenSkin[playerid] = 30; SetPlayerSkinEx(playerid, 30); }//FARC
                    else if(PlayerInfo[playerid][pMembro] == 16) { ChosenSkin[playerid] = 59; SetPlayerSkinEx(playerid, 59); }//Polícia Rodoviária Federal
                    else if(PlayerInfo[playerid][pMembro] == 17) { ChosenSkin[playerid] = 103; SetPlayerSkinEx(playerid, 103); }//Ballas
                    else if(PlayerInfo[playerid][pMembro] == 18) { ChosenSkin[playerid] = 109; SetPlayerSkinEx(playerid, 109); }//Vagos
                    else if(PlayerInfo[playerid][pLider] == 1) { ChosenSkin[playerid] = 283; SetPlayerSkinEx(playerid, 283); }//Policia Militar
                    else if(PlayerInfo[playerid][pLider] == 2)  { ChosenSkin[playerid] = 285; SetPlayerSkinEx(playerid, 285); }//ROTA
                    else if(PlayerInfo[playerid][pLider] == 3) { ChosenSkin[playerid] = 287; SetPlayerSkinEx(playerid, 287); }//Exército
                    else if(PlayerInfo[playerid][pLider] == 4) { ChosenSkin[playerid] = 70; SetPlayerSkinEx(playerid, 70); }//Fire/Ambulance
                    else if(PlayerInfo[playerid][pLider] == 5) { ChosenSkin[playerid] = 115; SetPlayerSkinEx(playerid, 115); }//Varrios Los Aztecas
                    else if(PlayerInfo[playerid][pLider] == 6) { ChosenSkin[playerid] = 249; SetPlayerSkinEx(playerid, 249); }//GuerrilheirosIsraelitas
                    else if(PlayerInfo[playerid][pLider] == 7) { ChosenSkin[playerid] = 147; SetPlayerSkinEx(playerid, 147); }//Prefeito
                    else if(PlayerInfo[playerid][pLider] == 8) { ChosenSkin[playerid] = 294; SetPlayerSkinEx(playerid, 294); }//Hitmans
                    else if(PlayerInfo[playerid][pLider] == 9) { ChosenSkin[playerid] = 227; SetPlayerSkinEx(playerid, 227); }//Repórters
                    else if(PlayerInfo[playerid][pLider] == 10) { ChosenSkin[playerid] = 61; SetPlayerSkinEx(playerid, 61); }//Taxistas
                    else if(PlayerInfo[playerid][pLider] == 12) { ChosenSkin[playerid] = 113; SetPlayerSkinEx(playerid, 113); }//Máfia Russa
                    else if(PlayerInfo[playerid][pLider] == 13) { ChosenSkin[playerid] = 120; SetPlayerSkinEx(playerid, 120); }//Máfia Japonesa
                    else if(PlayerInfo[playerid][pLider] == 14) { ChosenSkin[playerid] = 270; SetPlayerSkinEx(playerid, 270); }//Groove
                    else if(PlayerInfo[playerid][pLider] == 15) { ChosenSkin[playerid] = 123; SetPlayerSkinEx(playerid, 123); }//FARC
                    else if(PlayerInfo[playerid][pLider] == 16) { ChosenSkin[playerid] = 186; SetPlayerSkinEx(playerid, 186); }//Polícia Rodoviária Federal
                    else if(PlayerInfo[playerid][pLider] == 17) { ChosenSkin[playerid] = 104; SetPlayerSkinEx(playerid, 104); }//Ballas
                    else if(PlayerInfo[playerid][pLider] == 18) { ChosenSkin[playerid] = 108; SetPlayerSkinEx(playerid, 108); }//Vagos
                    else { return 1; }
                    if(PlayerInfo[playerid][pLider] < 1)
                    {
                        new Float:x,Float:y,Float:z;
                        GetPlayerPos(playerid, x, y, z);
                        SetPlayerCameraPos(playerid, x + 3, y, z);
                        SetPlayerCameraLookAt(playerid,x, y, z);
                        TogglePlayerControllable(playerid, 0);
                        SelectChar[playerid] = 9999;
                        SelectCharID[playerid] = PlayerInfo[playerid][pMembro];
                        SelectCharPlace[playerid] = 1;
                        PlayerInfo[playerid][pSkin] = ChosenSkin[playerid];
                        SendClientMessage(playerid, COLOR_LIGHTRED, "* Use 'proximo' para trocar a skin.");
                        SendClientMessage(playerid, COLOR_LIGHTRED, "* Assim que escolher sua skin, confirme.");
                    }
                    GivePlayerMoney(playerid, -1000);
                    SBizzInfo[6][sbTill] += 500;
                    ExtortionSBiz(6, 500);
                    GastarProdutos(2, 6, 3);
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "   Você não está em uma loja de roupas!");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD2, "   Civis não podem usar esse comando!");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/loteria", true) == 0)
    {
        if(PlayerToPoint(1, playerid,822.0201,4.2154,1004.1797) || PlayerToPoint(1, playerid,822.0099,6.3927,1004.1797) || PlayerToPoint(1, playerid,822.0087,-0.1116,1004.1797) || PlayerToPoint(1, playerid,822.0237,1.7826,1004.1797))
        {
            if(PlayerInfo[playerid][pLottoNr] > 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você já tem um bilhete de loteria!");
                return 1;
            }
            if(GetPlayerMoneyEx(playerid) < 1000)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não possui R$1000 para comprar o bilhete de loteria!");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) {
                SendClientMessage(playerid, COLOR_WHITE,"USE: /loteria [número]");
                return 1;
            }
            new lottonr = strval(tmp);
            if(lottonr < 1 || lottonr > 80) { SendClientMessage(playerid, COLOR_GREY, "   Número da loteria, de 1 a 80 !"); return 1; }
            format(string, sizeof(string), "* Você comprou um bilhete de loteria com número: %d.", lottonr);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            GivePlayerMoney(playerid, - 1000);
            PlayerInfo[playerid][pLottoNr] = lottonr;
         }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está em uma lotérica!");
        }
        return 1;
    }
    if(strcmp(cmd, "/retirar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(!IsACop(playerid))
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
                return 1;
            }
            if(OnDuty[playerid] != 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não bateu o cartão!");
                return 1;
            }
            if(gTeam[playerid] == 2 || IsACop(playerid) || IsAGOV(playerid))
            {
                if(PlayerInfo[playerid][pCargo] < 2)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você precisa de cargo 2 para usar este comando!");
                    return 1;
                }
                new x_nr[32];
                x_nr = strtok(cmdtext, idx);
                if(!strlen(x_nr)) {
                    SendClientMessage(playerid, COLOR_WHITE, "RETIRAR LICENÇAS");
                    SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar [nome] [id]");
                    SendClientMessage(playerid, COLOR_GREY, "Licenças disponpiveis: Motorista, Piloto, Marujo, PorteLegal, Armas, Drogas, Materiais");
                    return 1;
                }
                if(strcmp(x_nr,"Motorista",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar Motorista [id]");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            if (ProxDetectorS(8.0, playerid, giveplayerid))
                            {
                                new cop[MAX_PLAYER_NAME];
                                GetPlayerName(playerid, cop, sizeof(cop));
                                new fudido[MAX_PLAYER_NAME];
                                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
                                format(string, sizeof(string), "* Você retirou a licença de motorista de %s.", fudido);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "* Oficial %s retirou sua licença de motorista.", cop);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                PlayerInfo[giveplayerid][pCarLic] = 0;
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   O jogador está longe de você!");
                                return 1;
                            }
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O jogador está offline!");
                        return 1;
                    }
                }
                else if(strcmp(x_nr,"Piloto",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar Piloto [id]");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            if (ProxDetectorS(8.0, playerid, giveplayerid))
                            {
                                new cop[MAX_PLAYER_NAME];
                                GetPlayerName(playerid, cop, sizeof(cop));
                                new fudido[MAX_PLAYER_NAME];
                                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
                                format(string, sizeof(string), "* Você retirou a licença de Voo de %s.", fudido);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "* Oficial %s Retirou sua licença de Voo.", cop);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                PlayerInfo[giveplayerid][pFlyLic] = 0;
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   O jogador está longe de você!");
                                return 1;
                            }
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O jogador está offline!");
                        return 1;
                    }
                }
                else if(strcmp(x_nr,"PorteLegal",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar portelegal [id]");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            GetPlayerName(giveplayerid, sendername, sizeof(sendername));
                            if (ProxDetectorS(8.0, playerid, giveplayerid))
                            {
                                new cop[MAX_PLAYER_NAME];
                                GetPlayerName(playerid, cop, sizeof(cop));
                                new fudido[MAX_PLAYER_NAME];
                                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
                                format(string, sizeof(string), "* Você retirou a licença de Porte de Armas de %s.", fudido);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "* Oficial %s Retirou sua licença de Porte de Armas.", cop);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                PlayerInfo[giveplayerid][pGunLic] = 0;
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   O jogador está longe de você!");
                                return 1;
                            }
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O jogador está offline!");
                        return 1;
                    }
                }
                else if(strcmp(x_nr,"Marujo",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar Marujo [id]");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            GetPlayerName(giveplayerid, sendername, sizeof(sendername));
                            if (ProxDetectorS(8.0, playerid, giveplayerid))
                            {
                                new cop[MAX_PLAYER_NAME];
                                GetPlayerName(playerid, cop, sizeof(cop));
                                new fudido[MAX_PLAYER_NAME];
                                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
                                format(string, sizeof(string), "* Você retirou a licença de Navegacao de %s.", fudido);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "* Oficial %s Retirou sua licença de Navegacao.", cop);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                PlayerInfo[giveplayerid][pBoatLic] = 0;
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   O jogador está longe de você!");
                                return 1;
                            }
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O jogador está offline!");
                        return 1;
                    }
                }
                else if(strcmp(x_nr,"Armas",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar Armas [id]");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            GetPlayerName(giveplayerid, sendername, sizeof(sendername));
                            if (ProxDetectorS(8.0, playerid, giveplayerid))
                            {
                                new cop[MAX_PLAYER_NAME];
                                GetPlayerName(playerid, cop, sizeof(cop));
                                new fudido[MAX_PLAYER_NAME];
                                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
                                format(string, sizeof(string), "* Você retirou as Armas de %s.", fudido);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "* Oficial %s retirou suas Armas.", cop);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                ResetPlayerWeapons(giveplayerid);
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   O jogador está longe de você!");
                                return 1;
                            }
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O jogador está offline!");
                        return 1;
                    }
                }
                else if(strcmp(x_nr,"Drogas",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar Drogas [id]");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            GetPlayerName(giveplayerid, sendername, sizeof(sendername));
                            if (ProxDetectorS(8.0, playerid, giveplayerid))
                            {
                                new cop[MAX_PLAYER_NAME];
                                GetPlayerName(playerid, cop, sizeof(cop));
                                new fudido[MAX_PLAYER_NAME];
                                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
                                format(string, sizeof(string), "* Você retirou as Drogas de %s.", fudido);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "* Oficial %s retirou suas Drogas.", cop);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                PlayerInfo[giveplayerid][pDrogas] = 0;
                                PlayerInfo[giveplayerid][pDrogas2] = 0;
                                PlayerInfo[giveplayerid][pDrogas3] = 0;
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   O jogador está longe de você!");
                                return 1;
                            }
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O jogador está offline!");
                        return 1;
                    }
                }
                else if(strcmp(x_nr,"Materiais",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar Materiais [id]");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            GetPlayerName(giveplayerid, sendername, sizeof(sendername));
                            if (ProxDetectorS(8.0, playerid, giveplayerid))
                            {
                                new cop[MAX_PLAYER_NAME];
                                GetPlayerName(playerid, cop, sizeof(cop));
                                new fudido[MAX_PLAYER_NAME];
                                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
                                format(string, sizeof(string), "* Você retirou os Materiais de %s.", fudido);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "* Oficial %s Retirou seus Materiais.", cop);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                PlayerInfo[giveplayerid][pMats] = 0;
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   O jogador está longe de você!");
                                return 1;
                            }
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O jogador está offline!");
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Nome inválido !");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não e COP !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/beber", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsAtBar(playerid))
            {
                if(PlayerInfo[playerid][pDorgado2] >= 70)
                {
                    PlayerInfo[playerid][pDoenca] = 4;
                    PlayerInfo[playerid][pDorgado2] = 0;
                    SendClientMessage(playerid, COLOR_GRAD2, "* Você está infectado com cirrose, vá até um hospital se tratar !");
                    return 1;
                }
                if(PlayerDrunk[playerid] < 10)
                {
                    if(PlayerInfo[playerid][pDoenca] == 4)
                    {
                        SendClientMessage(playerid, COLOR_GRAD2, "* Você está com cirrose, vá até um hospital se tratar !");
                        return 1;
                    }
                    new Float:health;
                    new x_nr[32];
                    x_nr = strtok(cmdtext, idx);
                    if(!strlen(x_nr)) {
                        SendClientMessage(playerid, COLOR_WHITE, "|__________________ BPG Drinks __________________|");
                        SendClientMessage(playerid, COLOR_WHITE, "Use: /beber [Bebida]");
                        SendClientMessage(playerid, COLOR_GREY, "Nomes Válidos: Cerveja (R$6), Vodka (R$10), Whisky (R$25), Coca-Cola (R$2), Água (R$1)");
                        return 1;
                    }
                    if(strcmp(x_nr,"Cerveja",true) == 0)
                    {
                        if(PlayerInfo[playerid][pAge] < 0)
                        {
                            SendClientMessage(playerid, COLOR_WHITE, "BarMan - Você Não Tem 18 Anos ou mais Para Poder Beber.");
                            return 1;
                        }
                        GivePlayerMoney(playerid, - 6);
                        PlayerDrunk[playerid] += 1;
                        PlayerInfo[playerid][pDorgado2] += 2;
                        if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~Voce Esta~n~~p~Tonto~n~,~g~beba agua ou coca-cola", 3500, 1); }
                        SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 3000);
                        ApplyAnimation(playerid, "FOOD","EAT_Vomit_P",3.0,0,0,0,0,0);
                        if(GetPlayerHealth(playerid, health) < 100)
                        {
                            if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 15; SetPlayerHealth(playerid, health + hp); }
                            else { SetPlayerHealth(playerid, health + 15.0); }
                        }
                    }
                    else if(strcmp(x_nr,"Vodka",true) == 0)
                    {
                        if(PlayerInfo[playerid][pAge] < 0)
                        {
                            SendClientMessage(playerid, COLOR_WHITE, "BarMan - Você Não Tem 18 Anos ou mais Para Poder Beber.");
                            return 1;
                        }
                        GivePlayerMoney(playerid, - 10);
                        PlayerDrunk[playerid] += 2;
                        PlayerInfo[playerid][pDorgado2] += 2;
                        SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 3000);
                        ApplyAnimation(playerid, "FOOD","EAT_Vomit_P",3.0,0,0,0,0,0);
                        if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~Voce Esta~n~~p~Tonto~n~,~g~beba agua ou coca-cola", 3500, 1); }
                        if(GetPlayerHealth(playerid, health) < 100)
                        {
                            if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 25; SetPlayerHealth(playerid, health + hp); }
                            else { SetPlayerHealth(playerid, health + 25.0); }
                        }
                    }
                    else if(strcmp(x_nr,"Whisky",true) == 0)
                    {
                        if(PlayerInfo[playerid][pAge] < 0)
                        {
                            SendClientMessage(playerid, COLOR_WHITE, "BarMan - Você Não Tem 18 Anos ou mais Para Poder Beber");
                            return 1;
                        }
                        GivePlayerMoney(playerid, - 25);
                        PlayerDrunk[playerid] += 3;
                        PlayerInfo[playerid][pDorgado2] += 2;
                        SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 3000);
                        ApplyAnimation(playerid, "FOOD","EAT_Vomit_P",3.0,0,0,0,0,0);
                        if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~Voce Esta~n~~p~Tonto~n~,~g~beba agua ou coca-cola", 3500, 1); }
                        if(GetPlayerHealth(playerid, health) < 100)
                        {
                            if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 27; SetPlayerHealth(playerid, health + hp); }
                            else { SetPlayerHealth(playerid, health + 27.0); }
                        }
                    }
                    else if(strcmp(x_nr,"Coca-Cola",true) == 0)
                    {
                        GivePlayerMoney(playerid, - 2);
                        if(GetPlayerHealth(playerid, health) < 100)
                        {
                            if(PlayerInfo[playerid][pAlcoholPerk] > 0) { new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 5; SetPlayerHealth(playerid, health + hp); }
                            else { SetPlayerHealth(playerid, health + 5.0); }
                            SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) - 2300);
                            PlayerDrunk[playerid] = 0;
                            PlayerDrunkTime[playerid] = 0;
                            SetPlayerDrunkLevel (playerid, 0);
                        }
                    }
                    else if(strcmp(x_nr,"agua",true) == 0)
                    {
                        GivePlayerMoney(playerid, - 1);
                        if(GetPlayerHealth(playerid, health) < 100)
                        {
                            if(PlayerInfo[playerid][pAlcoholPerk] > 0) { new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 5; SetPlayerHealth(playerid, health + hp); }
                            else { SetPlayerHealth(playerid, health + 5.0); }
                            SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) - 2300);
                            PlayerDrunk[playerid] = 0;
                            PlayerDrunkTime[playerid] = 0;
                            SetPlayerDrunkLevel (playerid, 0);
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "BarMan - Não não vendemos essa bebida.");
                        return 1;
                    }
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    format(string, sizeof(string), "* %s bebeu um(a) %s.", sendername ,x_nr);
                    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
                    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não pode beber mais, Você vai vomitar...!");
                    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 3000);
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não está em um bar !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/setcampeao", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] >= 4)
            {
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
                return 1;
                }
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "USE: /setcampeao [id]");
                    return 1;
                }
                //giveplayerid = strval(tmp);
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        new nstring[MAX_PLAYER_NAME];
                        format(nstring, sizeof(nstring), "%s", giveplayer);
                        strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
                        Titel[TitelWins] = PlayerInfo[giveplayerid][pWins];
                        Titel[TitelLoses] = PlayerInfo[giveplayerid][pLoses];
                        SaveBoxer();
                        format(string, sizeof(string), "* Você definiu %s como o novo campeão de boxe.", giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   O jogador está offline!");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/statusluta", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pEmprego] != 8)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um Lutador de Boxe !");
                return 1;
            }
            new ttext[20];//Title
            new clevel = PlayerInfo[playerid][pBoxSkill];
            if(clevel >= 0 && clevel <= 50) { ttext = "Iniciante"; }
            else if(clevel >= 51 && clevel <= 200) { ttext = "Amador"; }
            else if(clevel >= 201 && clevel <= 400) { ttext = "Profissional"; }
            new ntext[20];//NickName
            new level = PlayerInfo[playerid][pWins];
            if(level > 0 && PlayerInfo[playerid][pLoses] == 0)
            {
                ntext = "Invicto";
            }
            else
            {
                if(level >= 0 && level <= 10) { ntext = "Novato"; }
                else if(level >= 11 && level <= 20) { ntext = "Mão Pesada"; }
                else if(level >= 21 && level <= 30) { ntext = "Quebra Nozes"; }
                else if(level >= 31 && level <= 40) { ntext = "Braço de ferro"; }
                else if(level >= 41 && level <= 50) { ntext = "Quebra crânio"; }
                else if(level >= 51 && level <= 60) { ntext = "Velocidade da Luz"; }
                else if(level >= 61 && level <= 70) { ntext = "Guerreiro"; }
                else if(level >= 71) { ntext = "Cavalo"; }
            }
            SendClientMessage(playerid, COLOR_WHITE, "|__________________ Recorde do Boxe __________________|");
            format(string, sizeof(string), "| Atual Campeão: %s, com %d vitórias e %d derrotas.", Titel[TitelName],Titel[TitelWins],Titel[TitelLoses]);
            SendClientMessage(playerid, COLOR_GREY, string);
            format(string, sizeof(string), "| Título atual: %s.", ttext);
            SendClientMessage(playerid, COLOR_GREY, string);
            format(string, sizeof(string), "| Nome Atual: %s.", ntext);
            SendClientMessage(playerid, COLOR_GREY, string);
            format(string, sizeof(string), "| Total de Vitórias: %d.", PlayerInfo[playerid][pWins]);
            SendClientMessage(playerid, COLOR_GREY, string);
            format(string, sizeof(string), "| Total de Derrotas: %d.", PlayerInfo[playerid][pLoses]);
            SendClientMessage(playerid, COLOR_GREY, string);
        }
        return 1;
    }
    if(strcmp(cmd, "/lutar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pEmprego] != 8)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um lutador de boxe !");
                return 1;
            }
            if(InRing > 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Já está tendo uma luta, espere ela terminar !");
                return 1;
            }
            if(PlayerBoxing[playerid] > 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você já está em uma luta !");
                return 1;
            }
            if(!PlayerToPoint(20.0,playerid,765.9343,0.2761,1000.7173))
            {
                SendClientMessage(playerid, COLOR_GREY, "  Você não está no ginásio de lutas de LS !");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) {
                SendClientMessage(playerid, COLOR_WHITE, "USE: /lutar [id]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if (ProxDetectorS(8.0, playerid, giveplayerid))
                    {
                        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode lutar contra si mesmo!"); return 1; }
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* Você intimou %s para uma luta de boxe.", giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Lutador %s te intimou para uma luta (USE: /aceitar boxe) para aceitar.", sendername);
                        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                        BoxOffer[giveplayerid] = playerid;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O jogador está longe de você!");
                        return 1;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   O jogador está offline!");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/musica", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pCDPlayer])
            {
                new x_nr[32];
                x_nr = strtok(cmdtext, idx);
                if(!strlen(x_nr)) {
                    SendClientMessage(playerid, COLOR_WHITE, "|__________________ Music __________________|");
                    SendClientMessage(playerid, COLOR_WHITE, "USE: /musica [nome]");
                    SendClientMessage(playerid, COLOR_GREY, "Nomes Disponíveis: On, Off, Proximo");
                    return 1;
                }
                if(strcmp(x_nr,"on",true) == 0)
                {
                    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~CD Player On", 5000, 5);
                    new channel = Music[playerid];
                    PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
                }
                else if(strcmp(x_nr,"off",true) == 0)
                {
                    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~CD Player Off", 5000, 5);
                    PlayerFixRadio(playerid);
                }
                else if(strcmp(x_nr,"Proximo",true) == 0)
                {
                    if(Music[playerid] == 0) { Music[playerid] = 1; }
                    else if(Music[playerid] == 1) { Music[playerid] = 2; }
                    else if(Music[playerid] == 2) { Music[playerid] = 3; }
                    else if(Music[playerid] == 3) { Music[playerid] = 4; }
                    else if(Music[playerid] == 4) { Music[playerid] = 5; }
                    else if(Music[playerid] == 5) { Music[playerid] = 6; }
                    else if(Music[playerid] == 6) { Music[playerid] = 0; }
                    new channel = Music[playerid];
                    PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Comando Musical Desconhecido !");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não possui um CD-Player !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/servico", true) == 0 || strcmp(cmd, "/serviço", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new x_nr[32];
            x_nr = strtok(cmdtext, idx);
            if(!strlen(x_nr)) {
                SendClientMessage(playerid, COLOR_WHITE, "|__________________ Service Names __________________|");
                SendClientMessage(playerid, COLOR_WHITE, "USE: /servico [nome]");
                SendClientMessage(playerid, COLOR_GREY, "Serviços: Taxi, Onibus,Medico,Mecanico,Policia,Advogado");
                return 1;
            }
            if(PediuServico[playerid] == 1) return SendClientMessage(playerid, -1, "  Aguarde 60 Segundos para pedir Serviço novamente!!!");
            if(strcmp(x_nr,"taxi",true) == 0)
            {
                if(TaxiDrivers < 1)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Não tem taxista online agora, tente /servico onibus...");
                    return 1;
                }
                if(TransportDuty[playerid] > 0)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não pode ligar para um Taxi agora !");
                    return 1;
                }
                GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, sizeof(string), "** %s Necessita de um Taxista. (Use /aceitar taxi - Para Aceitar a Chamada)", sendername);
                SendFamilyMessage(10, TEAM_AZTECAS_COLOR, string);
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chamou um Taxista,espere a resposta...");
                TaxiCall = playerid;
                PediuServico[playerid] = 1;
                SetTimerEx("PediuServico2", 50000,false,"i",playerid);
                return 1;
            }
            else if(strcmp(x_nr,"moto-taxi",true) == 0)
            {
                if(TaxiDrivers < 1)
                {
                    SendClientMessage(playerid, COLOR_GREY, "  Não tem nenhum Moto-Taxi online agora, espere algum entrar !");
                    return 1;
                }
                if(TransportDuty[playerid] > 0)
                {
                    SendClientMessage(playerid, COLOR_GREY, "  Você não pode ligar para um Moto-Taxi agora !");
                    return 1;
                }
                GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, sizeof(string), "** %s Necessita de um Taxista. (Use /aceitar moto-taxi - Para Aceitar a Chamada)", sendername);
                SendFamilyMessage(10, TEAM_AZTECAS_COLOR, string);
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chamou um Moto-Taxi... Agora espere a resposta.");
                TaxiCall = playerid;
                PediuServico[playerid] = 1;
                SetTimerEx("PediuServico2", 50000,false,"i",playerid);
                return 1;
            }
            else if(strcmp(x_nr,"onibus",true) == 0)
            {
                if(BusDrivers < 1)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Não tem motorista de onibus online neste momento, espere um entrar !");
                    return 1;
                }
                if(TransportDuty[playerid] > 0)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não pode chamar um onibus agora !");
                    return 1;
                }
                GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, sizeof(string), "** %s Necessita de um Onibus. (Use /aceitar onibus - Para aceitar a chamada)", sendername);
                SendEmpregoMessage(9, TEAM_AZTECAS_COLOR, string);
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chamou um Onibus... Agora espere a resposta.");
                BusCall = playerid;
                 PediuServico[playerid] = 1;
                SetTimerEx("PediuServico2", 50000,false,"i",playerid);
                return 1;
            }
            else if(strcmp(x_nr,"medico",true) == 0)
            {
                if(Medics < 1)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Não tem nenhum medico online neste momento, espere um entrar !");
                    return 1;
                }
                GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, sizeof(string), "** %s Necessita da SAMU. (Use /aceitar medico - Para aceitar a chamada)", sendername);
                SendFamilyMessage(4, TEAM_AZTECAS_COLOR, string);
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chamou a SAMU.... Agora espere por resposta.");
                MedicCall = playerid;
       PediuServico[playerid] = 1;
                SetTimerEx("PediuServico2", 50000,false,"i",playerid);
                return 1;
            }
            else if(strcmp(x_nr,"policia",true) == 0)
            {
                if(Copsronda < 1)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Nenhum Policial em ronda no momento.");
                    return 1;
                }
          for(new i = 0; i < MaiorID; i++)
                {
                    if(IsACop(i) && IsPlayerConnected(i))
                    {
                        if(PolicialInRonda[i] == 1)
                        {
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Estão fazendo uma chamada.");
                            return 1;
                        }
                    }
                }
                GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, sizeof(string), "** %s está precisando de um Policial. (Digite /aceitar chamada para aceitar a chamada)", sendername);
                SendFamilyMessage(1, TEAM_AZTECAS_COLOR, string);
                SendFamilyMessage(2, TEAM_AZTECAS_COLOR, string);
                SendFamilyMessage(3, TEAM_AZTECAS_COLOR, string);
                SendFamilyMessage(16, TEAM_AZTECAS_COLOR, string);
                SendFamilyMessage(11, TEAM_AZTECAS_COLOR, string);
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chamou um Policial Aguarde a Resposta.");
                CopsrondaCall = playerid;
       PediuServico[playerid] = 1;
                SetTimerEx("PediuServico2", 50000,false,"i",playerid);
                return 1;
            }
            else if(strcmp(x_nr,"mecanico",true) == 0)
            {
                if(Mechanics < 1)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Nenhum mecanico online neste momento, espere um entrar !");
                    return 1;
                }
                GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, sizeof(string), "** %s Necessita de um Mecanico. (Use /aceitar mecanico - Para aceitar a chamada)", sendername);
                SendEmpregoMessage(5, TEAM_AZTECAS_COLOR, string);
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chamou um Mecanico... Agora espere por uma resposta.");
                MechanicCall = playerid;
                PediuServico[playerid] = 1;
                SetTimerEx("PediuServico2", 50000,false,"i",playerid);
                return 1;
            }
            else if(strcmp(x_nr,"advogado",true) == 0)
            {
                if(Advogado < 1)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Nenhum Advogado online neste momento, espere um entrar !");
                    return 1;
                }
                GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, sizeof(string), "** %s Necessita de um Advogado. (Use /aceitar advogado - Para aceitar a chamada)", sendername);
                SendEmpregoMessage(2, TEAM_AZTECAS_COLOR, string);
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você solicitou um Adovgado... Agora espere por uma resposta.");
                ChamoAd = playerid;
                PediuServico[playerid] = 1;
                SetTimerEx("PediuServico2", 50000,false,"i",playerid);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Serviço Inexistente !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/vender", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new x_nr[32];
            x_nr = strtok(cmdtext, idx);
            if(!strlen(x_nr))
            {
                SendClientMessage(playerid, COLOR_WHITE, "|__________________ Selling __________________|");
                SendClientMessage(playerid, COLOR_WHITE, "USE: /vender [nome]");
                SendClientMessage(playerid, COLOR_GREY, "Nomes: Peixe, Cozido");
                return 1;
            }
            if(strcmp(x_nr,"peixe",true) == 0)
            {
                if (!PlayerToPoint(100, playerid,-29.2522,-89.0717,1003.5469) && !PlayerToPoint(100, playerid,-24.2589,-54.7865,1003.5469) && !PlayerToPoint(100, playerid,-30.8149,-28.0234,1003.5573))//centerpoint 24-7
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "   Você não está em uma 24-7 !");
                    return 1;
                }
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp)) {
                    SendClientMessage(playerid, COLOR_WHITE, "USE: /vender peixe [peixe]");
                    return 1;
                }
                new price;
                new fishid = strval(tmp);
                if(fishid < 1 || fishid > 5) { SendClientMessage(playerid, COLOR_GREY, "   Número de Peixes tem que ser maior que 1 e menor que 5 !"); return 1; }
                else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não pegou um peixe na bolsa número(1) !"); return 1; }
                else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não pegou um peixe na bolsa número(2) !"); return 1; }
                else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não pegou um peixe na bolsa número(3) !"); return 1; }
                else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não pegou um peixe na bolsa número(4) !"); return 1; }
                else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não pegou um peixe na bolsa número(5) !"); return 1; }
                ConsumingMoney[playerid] = 1;
                switch (fishid)
                {
                    case 1:
                    {
                        if(Fishes[playerid][pWeight1] < 20)
                        {
                            SendClientMessage(playerid, COLOR_WHITE, "Estamos interessados apenas em peixes com 20 ou mais LBS.");
                            return 1;
                        }
                        price = FishCost(playerid, Fishes[playerid][pFid1]);
                        price = price * Fishes[playerid][pWeight1];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
                        {
                            new skill = price / 2;
                            new payout = (skill)*(5);
                            price += payout;
                        }
                        GameTextForPlayer(playerid, "~g~Peixe~n~~r~Vendido", 3000, 1);
                        format(string, sizeof(string), "* Voce vendeu seu %s pesando %d, por R$%d.", Fishes[playerid][pFish1],Fishes[playerid][pWeight1],price);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        GivePlayerMoney(playerid, price);
                        ClearFishID(playerid, 1);
                    }
                    case 2:
                    {
                        if(Fishes[playerid][pWeight2] < 20)
                        {
                            SendClientMessage(playerid, COLOR_WHITE, "Estamos interessados apenas em peixes com 20 ou mais LBS.");
                            return 1;
                        }
                        price = FishCost(playerid, Fishes[playerid][pFid2]);
                        price = price * Fishes[playerid][pWeight2];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
                        {
                            new skill = price / 2;
                            new payout = (skill)*(5);
                            price += payout;
                        }
                        GameTextForPlayer(playerid, "~g~Peixe~n~~r~Vendido", 3000, 1);
                        format(string, sizeof(string), "* Voce vendeu seu %s pesando %d, por R$%d.", Fishes[playerid][pFish2],Fishes[playerid][pWeight2],price);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        GivePlayerMoney(playerid, price);
                        ClearFishID(playerid, 2);
                    }
                    case 3:
                    {
                        if(Fishes[playerid][pWeight3] < 20)
                        {
                            SendClientMessage(playerid, COLOR_WHITE, "Estamos interessados apenas em peixes com 20 ou mais LBS.");
                            return 1;
                        }
                        price = FishCost(playerid, Fishes[playerid][pFid3]);
                        price = price * Fishes[playerid][pWeight3];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
                        {
                            new skill = price / 2;
                            new payout = (skill)*(5);
                            price += payout;
                        }
                        GameTextForPlayer(playerid, "~g~Peixe~n~~r~Vendido", 3000, 1);
                        format(string, sizeof(string), "* Voce vendeu seu %s pesando %d, por R$%d.", Fishes[playerid][pFish3],Fishes[playerid][pWeight3],price);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        GivePlayerMoney(playerid, price);
                        ClearFishID(playerid, 3);
                    }
                    case 4:
                    {
                        if(Fishes[playerid][pWeight4] < 20)
                        {
                            SendClientMessage(playerid, COLOR_WHITE, "Estamos interessados apenas em peixes com 20 ou mais LBS.");
                            return 1;
                        }
                        price = FishCost(playerid, Fishes[playerid][pFid4]);
                        price = price * Fishes[playerid][pWeight4];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
                        {
                            new skill = price / 2;
                            new payout = (skill)*(5);
                            price += payout;
                        }
                        GameTextForPlayer(playerid, "~g~Peixe~n~~r~Vendido", 3000, 1);
                        format(string, sizeof(string), "* Voce vendeu seu %s pesando %d, por R$%d.", Fishes[playerid][pFish4],Fishes[playerid][pWeight4],price);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        GivePlayerMoney(playerid, price);
                        ClearFishID(playerid, 4);
                    }
                    case 5:
                    {
                        if(Fishes[playerid][pWeight5] < 20)
                        {
                            SendClientMessage(playerid, COLOR_WHITE, "Estamos interessados apenas em peixes com 20 ou mais LBS.");
                            return 1;
                        }
                        price = FishCost(playerid, Fishes[playerid][pFid5]);
                        price = price * Fishes[playerid][pWeight5];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
                        {
                            new skill = price / 2;
                            new payout = (skill)*(5);
                            price += payout;
                        }
                        GameTextForPlayer(playerid, "~g~Peixe~n~~r~Vendido", 3000, 1);
                        format(string, sizeof(string), "* Voce vendeu seu %s pesando %d, por R$%d.", Fishes[playerid][pFish5],Fishes[playerid][pWeight5],price);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        GivePlayerMoney(playerid, price);
                        ClearFishID(playerid, 5);
                    }
                }
                Fishes[playerid][pLastFish] = 0;
                Fishes[playerid][pFishID] = 0;
                return 1;
            }
            else if(strcmp(x_nr,"cozido",true) == 0)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp)) {
                    SendClientMessage(playerid, COLOR_WHITE, "USE: /vender cozido [Nº do cozido] [id/nome]");
                    return 1;
                }
                new cookid = strval(tmp);
                if(cookid < 1 || cookid > 5) { SendClientMessage(playerid, COLOR_GREY, "   Número do cozido mínimo 1 máximo 5 !"); return 1; }
                else if(cookid == 1 && Cooking[playerid][pCWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem um cozido no numero(1) !"); return 1; }
                else if(cookid == 2 && Cooking[playerid][pCWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem um cozido no numero(2) !"); return 1; }
                else if(cookid == 3 && Cooking[playerid][pCWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem um cozido no numero(3) !"); return 1; }
                else if(cookid == 4 && Cooking[playerid][pCWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem um cozido no numero(4) !"); return 1; }
                else if(cookid == 5 && Cooking[playerid][pCWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem um cozido no numero(5) !"); return 1; }
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp)) {
                    SendClientMessage(playerid, COLOR_WHITE, "USE: /vender cozido [Nº do cozido] [id/nome]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        switch(cookid)
                        {
                            case 1:
                            {
                                if(Cooking[giveplayerid][pCWeight1] < 1)
                                {
                                    format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
                                    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
                                    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight1];
                                    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID1];
                                    format(string, sizeof(string), "* %s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
                                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                }
                                else if(Cooking[giveplayerid][pCWeight2] < 1)
                                {
                                    format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
                                    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
                                    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight1];
                                    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID1];
                                    format(string, sizeof(string), "* %s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
                                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                }
                                else if(Cooking[giveplayerid][pCWeight3] < 1)
                                {
                                    format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
                                    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
                                    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight1];
                                    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID1];
                                    format(string, sizeof(string), "* %s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
                                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                }
                                else if(Cooking[giveplayerid][pCWeight4] < 1)
                                {
                                    format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
                                    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
                                    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight1];
                                    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID1];
                                    format(string, sizeof(string), "* %s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
                                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                }
                                else if(Cooking[giveplayerid][pCWeight5] < 1)
                                {
                                    format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
                                    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
                                    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight1];
                                    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID1];
                                    format(string, sizeof(string), "* %s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
                                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                }
                                else
                                {
                                    SendClientMessage(playerid, COLOR_GREY, "   Esse jogador não tem espaço na sua lista de cozidos !");
                                    return 1;
                                }
                            }
                            case 2:
                            {
                                if(Cooking[giveplayerid][pCWeight1] < 1)
                                {
                                    format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
                                    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
                                    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight2];
                                    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID2];
                                    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
                                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                }
                                else if(Cooking[giveplayerid][pCWeight2] < 1)
                                {
                                    format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
                                    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
                                    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight2];
                                    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID2];
                                    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
                                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                }
                                else if(Cooking[giveplayerid][pCWeight3] < 1)
                                {
                                    format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
                                    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
                                    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight2];
                                    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID2];
                                    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
                                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                }
                                else if(Cooking[giveplayerid][pCWeight4] < 1)
                                {
                                    format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
                                    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
                                    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight2];
                                    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID2];
                                    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
                                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                }
                                else if(Cooking[giveplayerid][pCWeight5] < 1)
                                {
                                    format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
                                    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
                                    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight2];
                                    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID2];
                                    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
                                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                }
                                else
                                {
                                    SendClientMessage(playerid, COLOR_GREY, "   Esse jogador não tem espaço na sua lista de cozidos !");
                                    return 1;
                                }
                            }
                            case 3:
                            {
                                if(Cooking[giveplayerid][pCWeight1] < 1)
                                {
                                    format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
                                    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
                                    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight3];
                                    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID3];
                                    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
                                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                }
                                else if(Cooking[giveplayerid][pCWeight2] < 1)
                                {
                                    format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
                                    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
                                    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight3];
                                    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID3];
                                    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
                                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                }
                                else if(Cooking[giveplayerid][pCWeight3] < 1)
                                {
                                    format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
                                    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
                                    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight3];
                                    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID3];
                                    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
                                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                }
                                else if(Cooking[giveplayerid][pCWeight4] < 1)
                                {
                                    format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
                                    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
                                    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight3];
                                    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID3];
                                    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
                                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                }
                                else if(Cooking[giveplayerid][pCWeight5] < 1)
                                {
                                    format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
                                    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
                                    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight3];
                                    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID3];
                                    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
                                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                }
                                else
                                {
                                    SendClientMessage(playerid, COLOR_GREY, "   Esse jogador não tem espaço na sua lista de cozidos !");
                                    return 1;
                                }
                            }
                            case 4:
                            {
                                if(Cooking[giveplayerid][pCWeight1] < 1)
                                {
                                    format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
                                    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
                                    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight4];
                                    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID4];
                                    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
                                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                }
                                else if(Cooking[giveplayerid][pCWeight2] < 1)
                                {
                                    format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
                                    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
                                    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight4];
                                    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID4];
                                    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
                                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                }
                                else if(Cooking[giveplayerid][pCWeight3] < 1)
                                {
                                    format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
                                    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
                                    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight4];
                                    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID4];
                                    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
                                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                }
                                else if(Cooking[giveplayerid][pCWeight4] < 1)
                                {
                                    format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
                                    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
                                    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight4];
                                    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID4];
                                    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
                                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                }
                                else if(Cooking[giveplayerid][pCWeight5] < 1)
                                {
                                    format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
                                    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
                                    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight4];
                                    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID4];
                                    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
                                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                }
                                else
                                {
                                    SendClientMessage(playerid, COLOR_GREY, "   Esse jogador não tem espaço na sua lista de cozidos !");
                                    return 1;
                                }
                            }
                            case 5:
                            {
                                if(Cooking[giveplayerid][pCWeight1] < 1)
                                {
                                    format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
                                    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
                                    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight5];
                                    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID5];
                                    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
                                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                }
                                else if(Cooking[giveplayerid][pCWeight2] < 1)
                                {
                                    format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
                                    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
                                    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight5];
                                    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID5];
                                    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
                                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                }
                                else if(Cooking[giveplayerid][pCWeight3] < 1)
                                {
                                    format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
                                    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
                                    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight5];
                                    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID5];
                                    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
                                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                }
                                else if(Cooking[giveplayerid][pCWeight4] < 1)
                                {
                                    format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
                                    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
                                    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight5];
                                    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID5];
                                    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
                                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                }
                                else if(Cooking[giveplayerid][pCWeight5] < 1)
                                {
                                    format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
                                    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
                                    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight5];
                                    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID5];
                                    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
                                    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                }
                                else
                                {
                                    SendClientMessage(playerid, COLOR_GREY, "   Esse jogador não tem espaço na sua lista de cozidos !");
                                    return 1;
                                }
                            }
                        }//switch
                        ClearCookingID(playerid, cookid);
                    }//invalid giveplayerid
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   O jogador está offline!");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Comando de Venda Desconhecido !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd,"/corrida",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pMembro] == 10||PlayerInfo[playerid][pLider] == 10|| PlayerInfo[playerid][pEmprego] == 9)
            {
                if(TransportDuty[playerid] > 0)
                {
                    if(TransportDuty[playerid] == 1)
                    {
                        TaxiDrivers -= 1;
                    }
                    else if(TransportDuty[playerid] == 2)
                    {
                        BusDrivers -= 1;
                    }
                    TransportDuty[playerid] = 0;
                    format(string, sizeof(string), "* Voce está de folga e recebeu $%d.", TransportMoney[playerid]);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    GivePlayerMoney(playerid, TransportMoney[playerid]);
                    ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
                    return 1;
                }
                new Veh = GetPlayerVehicleID(playerid);
                if(IsATaxiCar(Veh) && (PlayerInfo[playerid][pMembro] == 10||PlayerInfo[playerid][pLider] == 10))
                {
                    if(GetPlayerState(playerid) == 2)
                    {
                        tmp = strtok(cmdtext, idx);
                        if(!strlen(tmp))
                        {
                            SendClientMessage(playerid, COLOR_WHITE, "USE: /corrida [Preço]");
                            return 1;
                        }
                        moneys = strval(tmp);
                        if(moneys < 1 || moneys > 999) { SendClientMessage(playerid, COLOR_GREY, "   Preço da corrida mínimo $1 Máximo $999!"); return 1; }
                        TaxiDrivers += 1; TransportDuty[playerid] = 1; TransportValue[playerid] = moneys;
                        GetPlayerName(playerid,sendername,sizeof(sendername));
                        format(string, sizeof(string), "Taxista %s está em serviço, Corrida: $%d - Chame um taxi /servico taxi", sendername, TransportValue[playerid]);
                        OOCNews(TEAM_GROVE_COLOR,string);
                        return 1;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Voce não é o motorista!");
                        return 1;
                    }
                }
                else if(IsAOniCar(Veh) && PlayerInfo[playerid][pEmprego] == 9)
                {
                    if(GetPlayerState(playerid) == 2)
                    {
                        tmp = strtok(cmdtext, idx);
                        if(!strlen(tmp))
                        {
                            SendClientMessage(playerid, COLOR_WHITE, "USE: /corrida [Preco]");
                            return 1;
                        }
                        moneys = strval(tmp);
                        if(moneys < 1 || moneys > 999) { SendClientMessage(playerid, COLOR_GREY, "   Preço da corrida Mínimo $1 Máximo $999!"); return 1; }
                        BusDrivers += 1; TransportDuty[playerid] = 2; TransportValue[playerid]= moneys;
                        GetPlayerName(playerid,sendername,sizeof(sendername));
                        format(string, sizeof(string), "Motorista de onibus %s está em serviço, Corrida: $%d - Chame um onibus /servico onibus", sendername, TransportValue[playerid]);
                        OOCNews(TEAM_GROVE_COLOR,string);
                        return 1;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Voce não é o motorista!");
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Voce não está em um taxi/onibus!");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid,COLOR_GREY,"   Voce não é um taxista/motorista de ônibus!");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/1", true) == 0)
    {
        if (PlayerInfo[playerid][pAdmin] >= 3)
        {
            GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            format(string, sizeof(string), "~w~] ~y~1 ~w~]");
            GameTextForAll(string, 1000, 5);
        }
        return 1;
    }
    if(strcmp(cmd, "/2", true) == 0)
    {
        if (PlayerInfo[playerid][pAdmin] >= 3)
        {
            GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            format(string, sizeof(string), "~w~] ~p~~h~2 ~w~]");
            GameTextForAll(string, 1000, 5);
        }
        return 1;
    }
    if(strcmp(cmd, "/3", true) == 0)
    {
        if (PlayerInfo[playerid][pAdmin] >= 3)
        {
            GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            format(string, sizeof(string), "~w~] ~p~3 ~w~]");
            GameTextForAll(string, 1000, 5);
        }
        return 1;
    }
    if(strcmp(cmd, "/go", true) == 0 || strcmp(cmd, "/4", true) == 0)
    {
        if (PlayerInfo[playerid][pAdmin] >= 3)
        {
            GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            format(string, sizeof(string), "~w~] ~r~~h~Go Go Go ~w~]");
            GameTextForAll(string, 1000, 5);
        }
        return 1;
    }
    if(strcmp(cmd,"/comer",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerBoxing[playerid] > 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não pode comer enquanto está lutando !");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) {
                SendClientMessage(playerid, COLOR_WHITE, "USE: /comer [numero do peixe(1 a 5)]");
                return 1;
            }
            new cookid = strval(tmp);
            if(cookid < 1 || cookid > 5) { SendClientMessage(playerid, COLOR_GREY, "   número de cozimento tem que ser entre 1 e 5 !"); return 1; }
            else if(cookid == 1 && Cooking[playerid][pCWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem uma comida na bolsa(1) !"); return 1; }
            else if(cookid == 2 && Cooking[playerid][pCWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem uma comida na bolsa(2) !"); return 1; }
            else if(cookid == 3 && Cooking[playerid][pCWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem uma comida na bolsa(3) !"); return 1; }
            else if(cookid == 4 && Cooking[playerid][pCWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem uma comida na bolsa(4) !"); return 1; }
            else if(cookid == 5 && Cooking[playerid][pCWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem uma comida na bolsa(5) !"); return 1; }
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new Float:health;
            if(GetPlayerHealth(playerid, health) < 40)
            {
                new hp = 0;
                switch (cookid)
                {
                    case 1:
                    {
                        if(Cooking[playerid][pCookID1] == 16 || Cooking[playerid][pCookID1] == 18)
                        {//Dolphin ou Turtle
                            SetPlayerCriminal(playerid,255, "Consumo de espécies ameaçadas de extinção");
                        }
                        SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight1] / 3));
                        hp = Cooking[playerid][pCWeight1];
                        format(string, sizeof(string), "* %s come %s.", sendername, Cooking[playerid][pCook1]);
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        format(string, sizeof(string), "* %s peso %d, e foi adicionado em sua vida.",Cooking[playerid][pCook1], hp);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    }
                    case 2:
                    {
                        if(Cooking[playerid][pCookID2] == 16 || Cooking[playerid][pCookID2] == 18)
                        {//Dolphin ou Turtle
                            SetPlayerCriminal(playerid,255, "Consumo de espécies ameaçadas de extinção");
                        }
                        SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight2] / 3));
                        hp = Cooking[playerid][pCWeight2];
                        format(string, sizeof(string), "* %s come %s.", sendername, Cooking[playerid][pCook2]);
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        format(string, sizeof(string), "* %s peso %d, e foi adicionado em sua vida.",Cooking[playerid][pCook2], hp);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    }
                    case 3:
                    {
                        if(Cooking[playerid][pCookID3] == 16 || Cooking[playerid][pCookID3] == 18)
                        {//Dolphin ou Turtle
                            SetPlayerCriminal(playerid,255, "Consumo de espécies ameaçadas de extinção");
                        }
                        SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight3] / 3));
                        hp = Cooking[playerid][pCWeight3];
                        format(string, sizeof(string), "* %s come %s.", sendername, Cooking[playerid][pCook3]);
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        format(string, sizeof(string), "* %s peso %d, e foi adicionado em sua vida.",Cooking[playerid][pCook3], hp);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    }
                    case 4:
                    {
                        if(Cooking[playerid][pCookID4] == 16 || Cooking[playerid][pCookID4] == 18)
                        {//Dolphin ou Turtle
                            SetPlayerCriminal(playerid,255, "Consumo de espécies ameaçadas de extinção");
                        }
                        SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight4] / 3));
                        hp = Cooking[playerid][pCWeight4];
                        format(string, sizeof(string), "* %s come %s.", sendername, Cooking[playerid][pCook4]);
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        format(string, sizeof(string), "* %s peso %d, e foi adicionado em sua vida.",Cooking[playerid][pCook4], hp);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    }
                    case 5:
                    {
                        if(Cooking[playerid][pCookID5] == 16 || Cooking[playerid][pCookID5] == 18)
                        {//Dolphin ou Turtle
                            SetPlayerCriminal(playerid,255, "Consumo de espécies ameaçadas de extinção");
                        }
                        SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight5] / 3));
                        hp = Cooking[playerid][pCWeight5];
                        format(string, sizeof(string), "* %s come %s.", sendername, Cooking[playerid][pCook5]);
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        format(string, sizeof(string), "* %s peso %d, e foi adicionado em sua vida.",Cooking[playerid][pCook5], hp);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    }
                }
                ClearCookingID(playerid, cookid);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Sua saúde é alta demais, só pode com a Saúde em 40 !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd,"/cozinhar",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsAtCookPlace(playerid))
            {
                new x_nr[32];
                x_nr = strtok(cmdtext, idx);
                if(!strlen(x_nr)) {
                    SendClientMessage(playerid, COLOR_WHITE, "USE: /cozinhar [nome]");
                    SendClientMessage(playerid, COLOR_WHITE, "Nomes: ultimopeixe, Peixe, Frango, Hamburger, Pizza.");
                    return 1;
                }
                if(strcmp(x_nr,"ultimopeixe",true) == 0)
                {
                    if(Fishes[playerid][pLastFish] > 0)
                    {
                        new fornd = 0;
                        if(Cooking[playerid][pCWeight1] == 0)
                        {
                            format(string, sizeof(string), "Você preparou %s", FishNames[Fishes[playerid][pFishID]]);
                            strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight1] = Fishes[playerid][pLastWeight];
                            Cooking[playerid][pCookID1] = Fishes[playerid][pFishID];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                            fornd = 1;
                        }
                        else if(Cooking[playerid][pCWeight2] == 0)
                        {
                            format(string, sizeof(string), "Você preparou %s", FishNames[Fishes[playerid][pFishID]]);
                            strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight2] = Fishes[playerid][pLastWeight];
                            Cooking[playerid][pCookID2] = Fishes[playerid][pFishID];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                            fornd = 1;
                        }
                        else if(Cooking[playerid][pCWeight3] == 0)
                        {
                            format(string, sizeof(string), "Você preparou %s", FishNames[Fishes[playerid][pFishID]]);
                            strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight3] = Fishes[playerid][pLastWeight];
                            Cooking[playerid][pCookID3] = Fishes[playerid][pFishID];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                            fornd = 1;
                        }
                        else if(Cooking[playerid][pCWeight4] == 0)
                        {
                            format(string, sizeof(string), "Você preparou %s", FishNames[Fishes[playerid][pFishID]]);
                            strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight4] = Fishes[playerid][pLastWeight];
                            Cooking[playerid][pCookID4] = Fishes[playerid][pFishID];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                            fornd = 1;
                        }
                        else if(Cooking[playerid][pCWeight5] == 0)
                        {
                            format(string, sizeof(string), "Você preparou %s", FishNames[Fishes[playerid][pFishID]]);
                            strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight5] = Fishes[playerid][pLastWeight];
                            Cooking[playerid][pCookID5] = Fishes[playerid][pFishID];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                            fornd = 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você não tem espaço na sua lista de preparo !");
                            return 1;
                        }
                        if(fornd)
                        {
                            ClearFishID(playerid, Fishes[playerid][pLastFish]);
                            Fishes[playerid][pLastFish] = 0;
                            Fishes[playerid][pFishID] = 0;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Você ainda não fisgou um peixe !");
                        return 1;
                    }
                }
                else if(strcmp(x_nr,"peixe",true) == 0)
                {
                    new fornd = 0;
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "USE: /cozinhar peixe [peixenumero]");
                        return 1;
                    }
                    new fishid = strval(tmp);
                    if(fishid < 1 || fishid > 5) { SendClientMessage(playerid, COLOR_GREY, "   Número de Peixes tem que ser entre 1 e 5 !"); return 1; }
                    else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não pegou um peixe na bolsa número(1) !"); return 1; }
                    else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não pegou um peixe na bolsa número(2) !"); return 1; }
                    else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não pegou um peixe na bolsa número(3) !"); return 1; }
                    else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não pegou um peixe na bolsa número(4) !"); return 1; }
                    else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não pegou um peixe na bolsa número(5) !"); return 1; }
                    if(Cooking[playerid][pCWeight1] == 0)
                    {
                        if(fishid == 1)
                        {
                            format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish1]);
                            strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight1];
                            Cooking[playerid][pCookID1] = Fishes[playerid][pFid1];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                        }
                        else if(fishid == 2)
                        {
                            format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish2]);
                            strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight2];
                            Cooking[playerid][pCookID1] = Fishes[playerid][pFid2];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                        }
                        else if(fishid == 3)
                        {
                            format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish3]);
                            strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight3];
                            Cooking[playerid][pCookID1] = Fishes[playerid][pFid3];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                        }
                        else if(fishid == 4)
                        {
                            format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish4]);
                            strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight4];
                            Cooking[playerid][pCookID1] = Fishes[playerid][pFid4];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                        }
                        else if(fishid == 5)
                        {
                            format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish5]);
                            strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight5];
                            Cooking[playerid][pCookID1] = Fishes[playerid][pFid5];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                        }
                        fornd = 1;
                    }
                    else if(Cooking[playerid][pCWeight2] == 0)
                    {
                        if(fishid == 1)
                        {
                            format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish1]);
                            strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight1];
                            Cooking[playerid][pCookID2] = Fishes[playerid][pFid1];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                        }
                        else if(fishid == 2)
                        {
                            format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish2]);
                            strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight2];
                            Cooking[playerid][pCookID2] = Fishes[playerid][pFid2];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                        }
                        else if(fishid == 3)
                        {
                            format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish3]);
                            strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight3];
                            Cooking[playerid][pCookID2] = Fishes[playerid][pFid3];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                        }
                        else if(fishid == 4)
                        {
                            format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish4]);
                            strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight4];
                            Cooking[playerid][pCookID2] = Fishes[playerid][pFid4];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                        }
                        else if(fishid == 5)
                        {
                            format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish5]);
                            strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight5];
                            Cooking[playerid][pCookID2] = Fishes[playerid][pFid5];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                        }
                        fornd = 1;
                    }
                    else if(Cooking[playerid][pCWeight3] == 0)
                    {
                        if(fishid == 1)
                        {
                            format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish1]);
                            strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight1];
                            Cooking[playerid][pCookID3] = Fishes[playerid][pFid1];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                        }
                        else if(fishid == 2)
                        {
                            format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish2]);
                            strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight2];
                            Cooking[playerid][pCookID3] = Fishes[playerid][pFid2];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                        }
                        else if(fishid == 3)
                        {
                            format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish3]);
                            strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight3];
                            Cooking[playerid][pCookID3] = Fishes[playerid][pFid3];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                        }
                        else if(fishid == 4)
                        {
                            format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish4]);
                            strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight4];
                            Cooking[playerid][pCookID3] = Fishes[playerid][pFid4];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                        }
                        else if(fishid == 5)
                        {
                            format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish5]);
                            strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight5];
                            Cooking[playerid][pCookID3] = Fishes[playerid][pFid5];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                        }
                        fornd = 1;
                    }
                    else if(Cooking[playerid][pCWeight4] == 0)
                    {
                        if(fishid == 1)
                        {
                            format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish1]);
                            strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight1];
                            Cooking[playerid][pCookID4] = Fishes[playerid][pFid1];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                        }
                        else if(fishid == 2)
                        {
                            format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish2]);
                            strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight2];
                            Cooking[playerid][pCookID4] = Fishes[playerid][pFid2];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                        }
                        else if(fishid == 3)
                        {
                            format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish3]);
                            strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight3];
                            Cooking[playerid][pCookID4] = Fishes[playerid][pFid3];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                        }
                        else if(fishid == 4)
                        {
                            format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish4]);
                            strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight4];
                            Cooking[playerid][pCookID4] = Fishes[playerid][pFid4];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                        }
                        else if(fishid == 5)
                        {
                            format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish5]);
                            strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight5];
                            Cooking[playerid][pCookID4] = Fishes[playerid][pFid5];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                        }
                        fornd = 1;
                    }
                    else if(Cooking[playerid][pCWeight5] == 0)
                    {
                        if(fishid == 1)
                        {
                            format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish1]);
                            strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight1];
                            Cooking[playerid][pCookID5] = Fishes[playerid][pFid1];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                        }
                        else if(fishid == 2)
                        {
                            format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish2]);
                            strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight2];
                            Cooking[playerid][pCookID5] = Fishes[playerid][pFid2];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                        }
                        else if(fishid == 3)
                        {
                            format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish3]);
                            strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight3];
                            Cooking[playerid][pCookID5] = Fishes[playerid][pFid3];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                        }
                        else if(fishid == 4)
                        {
                            format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish4]);
                            strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight4];
                            Cooking[playerid][pCookID5] = Fishes[playerid][pFid4];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                        }
                        else if(fishid == 5)
                        {
                            format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish5]);
                            strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
                            Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight5];
                            Cooking[playerid][pCookID5] = Fishes[playerid][pFid5];
                            format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
                            SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                        }
                        fornd = 1;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Você não tem espaço na sua lista de preparo !");
                        return 1;
                    }
                    if(fornd)
                    {
                        ClearFishID(playerid, fishid);
                        Fishes[playerid][pLastFish] = 0;
                        Fishes[playerid][pFishID] = 0;
                    }
                }
                else if(strcmp(x_nr,"frango",true) == 0)
                {
                    if(PlayerToPoint(3.0,playerid,369.9786,-4.0798,1001.8589))
                    {//Cluckin Bell
                        if(Groceries[playerid][pChicken] != 0)
                        {
                            if(Cooking[playerid][pCWeight1] == 0)
                            {
                                format(string, sizeof(string), "Preparou Frango");
                                strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
                                Cooking[playerid][pCWeight1] = Groceries[playerid][pChicken];
                                Cooking[playerid][pCookID1] = 30;
                                Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
                                format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
                                SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                            }
                            else if(Cooking[playerid][pCWeight2] == 0)
                            {
                                format(string, sizeof(string), "Preparou Frango");
                                strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
                                Cooking[playerid][pCWeight2] = Groceries[playerid][pChicken];
                                Cooking[playerid][pCookID2] = 30;
                                Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
                                format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
                                SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                            }
                            else if(Cooking[playerid][pCWeight3] == 0)
                            {
                                format(string, sizeof(string), "Preparou Frango");
                                strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
                                Cooking[playerid][pCWeight3] = Groceries[playerid][pChicken];
                                Cooking[playerid][pCookID3] = 30;
                                Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
                                format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
                                SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                            }
                            else if(Cooking[playerid][pCWeight4] == 0)
                            {
                                format(string, sizeof(string), "Preparou Frango");
                                strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
                                Cooking[playerid][pCWeight4] = Groceries[playerid][pChicken];
                                Cooking[playerid][pCookID4] = 30;
                                Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
                                format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
                                SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                            }
                            else if(Cooking[playerid][pCWeight5] == 0)
                            {
                                format(string, sizeof(string), "Preparou Frango");
                                strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
                                Cooking[playerid][pCWeight5] = Groceries[playerid][pChicken];
                                Cooking[playerid][pCookID5] = 30;
                                Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
                                format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
                                SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   Você não tem espaço na sua lista de preparo !");
                                return 1;
                            }
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você não tem nem um frango !");
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Você precisa ir até uma Cluckin Bell para /cozinhar isso !");
                        return 1;
                    }
                }
                else if(strcmp(x_nr,"hamburger",true) == 0)
                {
                    if(PlayerToPoint(3.0,playerid,376.4466,-60.9574,1001.5078) || PlayerToPoint(3.0,playerid,378.1215,-57.4928,1001.5078))
                    {//Burgershot
                        if(Groceries[playerid][pHamburger] != 0)
                        {
                            if(Cooking[playerid][pCWeight1] == 0)
                            {
                                format(string, sizeof(string), "Preparou Hamburgers");
                                strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
                                Cooking[playerid][pCWeight1] = Groceries[playerid][pHamburger];
                                Cooking[playerid][pCookID1] = 30;
                                Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
                                format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
                                SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                            }
                            else if(Cooking[playerid][pCWeight2] == 0)
                            {
                                format(string, sizeof(string), "Preparou Hamburgers");
                                strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
                                Cooking[playerid][pCWeight2] = Groceries[playerid][pHamburger];
                                Cooking[playerid][pCookID2] = 30;
                                Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
                                format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
                                SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                            }
                            else if(Cooking[playerid][pCWeight3] == 0)
                            {
                                format(string, sizeof(string), "Preparou Hamburgers");
                                strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
                                Cooking[playerid][pCWeight3] = Groceries[playerid][pHamburger];
                                Cooking[playerid][pCookID3] = 30;
                                Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
                                format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
                                SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                            }
                            else if(Cooking[playerid][pCWeight4] == 0)
                            {
                                format(string, sizeof(string), "Preparou Hamburgers");
                                strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
                                Cooking[playerid][pCWeight4] = Groceries[playerid][pHamburger];
                                Cooking[playerid][pCookID4] = 30;
                                Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
                                format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
                                SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                            }
                            else if(Cooking[playerid][pCWeight5] == 0)
                            {
                                format(string, sizeof(string), "Preparou Hamburgers");
                                strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
                                Cooking[playerid][pCWeight5] = Groceries[playerid][pHamburger];
                                Cooking[playerid][pCookID5] = 30;
                                Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
                                format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
                                SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   Você não tem espaço na sua lista de preparo !");
                                return 1;
                            }
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você não tem nem um hamburger !");
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Você precisa ir a uma Burger Shot para /cozinhar isso !");
                        return 1;
                    }
                }
                else if(strcmp(x_nr,"pizza",true) == 0)
                {
                    if(PlayerToPoint(3.0,playerid,374.1185,-113.6361,1001.4922) || PlayerToPoint(3.0,playerid,377.7971,-113.7668,1001.4922))
                    {//Well Stacked Pizza
                        if(Groceries[playerid][pPizza] != 0)
                        {
                            if(Cooking[playerid][pCWeight1] == 0)
                            {
                                format(string, sizeof(string), "Preparou Pizza");
                                strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
                                Cooking[playerid][pCWeight1] = Groceries[playerid][pHamburger];
                                Cooking[playerid][pCookID1] = 30;
                                Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
                                format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
                                SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                            }
                            else if(Cooking[playerid][pCWeight2] == 0)
                            {
                                format(string, sizeof(string), "Preparou Pizza");
                                strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
                                Cooking[playerid][pCWeight2] = Groceries[playerid][pHamburger];
                                Cooking[playerid][pCookID2] = 30;
                                Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
                                format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
                                SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                            }
                            else if(Cooking[playerid][pCWeight3] == 0)
                            {
                                format(string, sizeof(string), "Preparou Pizza");
                                strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
                                Cooking[playerid][pCWeight3] = Groceries[playerid][pHamburger];
                                Cooking[playerid][pCookID3] = 30;
                                Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
                                format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
                                SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                            }
                            else if(Cooking[playerid][pCWeight4] == 0)
                            {
                                format(string, sizeof(string), "Preparou Pizza");
                                strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
                                Cooking[playerid][pCWeight4] = Groceries[playerid][pHamburger];
                                Cooking[playerid][pCookID4] = 30;
                                Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
                                format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
                                SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                            }
                            else if(Cooking[playerid][pCWeight5] == 0)
                            {
                                format(string, sizeof(string), "Preparou Pizza");
                                strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
                                Cooking[playerid][pCWeight5] = Groceries[playerid][pHamburger];
                                Cooking[playerid][pCookID5] = 30;
                                Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
                                format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
                                SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   Você não tem espaço na sua lista de preparo !");
                                return 1;
                            }
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você não tem nem uma pizza !");
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Você precisa ir a uma Well Stacked Pizza parar /cozinhar isso !");
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Número de preparo inválido !");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não está em nem um lugar de cozimento (Cluckin Bell / Burger Shot / Well Stacked Pizza).");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd,"/cozido",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage(playerid, COLOR_WHITE, "|__________________ Cozidos __________________|");
            format(string, sizeof(string), "** (1) Cozido: %s.   Peso: %d.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1]);
            SendClientMessage(playerid, COLOR_GREY, string);
            format(string, sizeof(string), "** (2) Cozido: %s.   Peso: %d.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2]);
            SendClientMessage(playerid, COLOR_GREY, string);
            format(string, sizeof(string), "** (3) Cozido: %s.   Peso: %d.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3]);
            SendClientMessage(playerid, COLOR_GREY, string);
            format(string, sizeof(string), "** (4) Cozido: %s.   Peso: %d.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4]);
            SendClientMessage(playerid, COLOR_GREY, string);
            format(string, sizeof(string), "** (5) Cozido: %s.   Peso: %d.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5]);
            SendClientMessage(playerid, COLOR_GREY, string);
        }
        return 1;
    }
    if(strcmp(cmd,"/pescar",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pFishes] > 500)
            {
                SendClientMessage(playerid, COLOR_GREY, "   pescaram muitos peixes, espere até a sua reduzida !");
                return 1;
            }
            if(Fishes[playerid][pWeight1] > 0 && Fishes[playerid][pWeight2] > 0 && Fishes[playerid][pWeight3] > 0 && Fishes[playerid][pWeight4] > 0 && Fishes[playerid][pWeight5] > 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você já pegou 5 Peixes, /vender(24-7) ou /comer(lojas de comida) ou liberte-os primeiro !");
                return 1;
            }
            new Veh = GetPlayerVehicleID(playerid);
            if((IsAtFishPlace(playerid)) || IsABoat(Veh))
            {
                new Caught;
                new rand;
                new fstring[MAX_PLAYER_NAME];
                new Level = PlayerInfo[playerid][pFishSkill];
                if(Level >= 0 && Level <= 50) { Caught = random(20)-7; }
                else if(Level >= 51 && Level <= 100) { Caught = random(50)-20; }
                else if(Level >= 101 && Level <= 200) { Caught = random(100)-50; }
                else if(Level >= 201 && Level <= 400) { Caught = random(160)-60; }
                else if(Level >= 401) { Caught = random(180)-70; }
                rand = random(FishNamesNumber);
                if(Caught <= 0)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Os Peixes fugiram de você, Tente de Novo !");
                    return 1;
                }
                else if(rand == 0)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você pegou 1 casaco e o jogou fora !");
                    return 1;
                }
                else if(rand == 4)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você pegou 1 calça e a jogou fora !");
                    return 1;
                }
                else if(rand == 7)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você pegou 1 latinha e a jogou fora !");
                    return 1;
                }
                else if(rand == 10)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você pegou 1 par de sapatos e jogou fora !");
                    return 1;
                }
                else if(rand == 13)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você pegou algum lixo e jogou fora !");
                    return 1;
                }
                else if(rand == 20)
                {
                    new mrand = random(500);
                    format(string, sizeof(string), "* Você pegou 1 saco de dinheiro,contendo R$%d.", mrand);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    GivePlayerMoney(playerid, mrand);
                    return 1;
                }
                if(PlayerInfo[playerid][pFishLic] < 1)
                {
                    SetPlayerCriminal(playerid,255, "Pesca Ilegal!");
                }
                if(Fishes[playerid][pWeight1] == 0)
                {
                    PlayerInfo[playerid][pFishes] += 1;
                    PlayerInfo[playerid][pFishSkill] += 1;
                    format(fstring, sizeof(fstring), "%s", FishNames[rand]);
                    strmid(Fishes[playerid][pFish1], fstring, 0, strlen(fstring), 255);
                    Fishes[playerid][pWeight1] = Caught;
                    format(string, sizeof(string), "* Voce pescou uma %s, pesando %d Lbs.", Fishes[playerid][pFish1], Caught);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    Fishes[playerid][pLastWeight] = Caught;
                    Fishes[playerid][pLastFish] = 1;
                    Fishes[playerid][pFid1] = rand;
                    Fishes[playerid][pFishID] = rand;
                    if(Caught > PlayerInfo[playerid][pBiggestFish])
                    {
                        format(string, sizeof(string), "* Seu antigo recorde de %d Lbs foi quebrado, Seu novo recorde agora é de %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        PlayerInfo[playerid][pBiggestFish] = Caught;
                    }
                }
                else if(Fishes[playerid][pWeight2] == 0)
                {
                    PlayerInfo[playerid][pFishes] += 1;
                    PlayerInfo[playerid][pFishSkill] += 1;
                    format(fstring, sizeof(fstring), "%s", FishNames[rand]);
                    strmid(Fishes[playerid][pFish2], fstring, 0, strlen(fstring), 255);
                    Fishes[playerid][pWeight2] = Caught;
                    format(string, sizeof(string), "* Voce pescou uma %s, pesando %d Lbs.", Fishes[playerid][pFish2], Caught);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    Fishes[playerid][pLastWeight] = Caught;
                    Fishes[playerid][pLastFish] = 2;
                    Fishes[playerid][pFid2] = rand;
                    Fishes[playerid][pFishID] = rand;
                    if(Caught > PlayerInfo[playerid][pBiggestFish])
                    {
                        format(string, sizeof(string), "* Seu antigo recorde de %d Lbs foi quebrado, Seu novo recorde agora é de %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        PlayerInfo[playerid][pBiggestFish] = Caught;
                    }
                }
                else if(Fishes[playerid][pWeight3] == 0)
                {
                    PlayerInfo[playerid][pFishes] += 1;
                    PlayerInfo[playerid][pFishSkill] += 1;
                    format(fstring, sizeof(fstring), "%s", FishNames[rand]);
                    strmid(Fishes[playerid][pFish3], fstring, 0, strlen(fstring), 255);
                    Fishes[playerid][pWeight3] = Caught;
                    format(string, sizeof(string), "* Voce pescou uma %s, pesando %d Lbs.", Fishes[playerid][pFish3], Caught);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    Fishes[playerid][pLastWeight] = Caught;
                    Fishes[playerid][pLastFish] = 3;
                    Fishes[playerid][pFid3] = rand;
                    Fishes[playerid][pFishID] = rand;
                    if(Caught > PlayerInfo[playerid][pBiggestFish])
                    {
                        format(string, sizeof(string), "* Seu antigo recorde de %d Lbs foi quebrado, Seu novo recorde agora é de %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        PlayerInfo[playerid][pBiggestFish] = Caught;
                    }
                }
                else if(Fishes[playerid][pWeight4] == 0)
                {
                    PlayerInfo[playerid][pFishes] += 1;
                    PlayerInfo[playerid][pFishSkill] += 1;
                    format(fstring, sizeof(fstring), "%s", FishNames[rand]);
                    strmid(Fishes[playerid][pFish4], fstring, 0, strlen(fstring), 255);
                    Fishes[playerid][pWeight4] = Caught;
                    format(string, sizeof(string), "* Voce pescou uma %s, pesando %d Lbs.", Fishes[playerid][pFish4], Caught);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    Fishes[playerid][pLastWeight] = Caught;
                    Fishes[playerid][pLastFish] = 4;
                    Fishes[playerid][pFid4] = rand;
                    Fishes[playerid][pFishID] = rand;
                    if(Caught > PlayerInfo[playerid][pBiggestFish])
                    {
                        format(string, sizeof(string), "* Seu antigo recorde de %d Lbs foi quebrado, Seu novo recorde agora é de %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        PlayerInfo[playerid][pBiggestFish] = Caught;
                    }
                }
                else if(Fishes[playerid][pWeight5] == 0)
                {
                    PlayerInfo[playerid][pFishes] += 1;
                    PlayerInfo[playerid][pFishSkill] += 1;
                    format(fstring, sizeof(fstring), "%s", FishNames[rand]);
                    strmid(Fishes[playerid][pFish5], fstring, 0, strlen(fstring), 255);
                    Fishes[playerid][pWeight5] = Caught;
                    format(string, sizeof(string), "* Voce pescou uma %s, pesando %d Lbs.", Fishes[playerid][pFish5], Caught);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    Fishes[playerid][pLastWeight] = Caught;
                    Fishes[playerid][pLastFish] = 5;
                    Fishes[playerid][pFid5] = rand;
                    Fishes[playerid][pFishID] = rand;
                    if(Caught > PlayerInfo[playerid][pBiggestFish])
                    {
                        format(string, sizeof(string), "* Seu antigo recorde de %d Lbs foi quebrado, Seu novo recorde agora é de %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        PlayerInfo[playerid][pBiggestFish] = Caught;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não tem nenhum espaço para o seu peixe !");
                    return 1;
                }
                if(PlayerInfo[playerid][pFishSkill] == 50)
                { SendClientMessage(playerid, COLOR_YELLOW, "* Seu Nível de Pesca Agora é nível 2, Agora você pode capturar peixes mais pesados."); }
                else if(PlayerInfo[playerid][pFishSkill] == 250)
                { SendClientMessage(playerid, COLOR_YELLOW, "* Seu Nível de Pesca Agora é nível 3, Agora você pode capturar peixes mais pesados."); }
                else if(PlayerInfo[playerid][pFishSkill] == 500)
                { SendClientMessage(playerid, COLOR_YELLOW, "* Seu Nível de Pesca Agora é nível 4, Agora você pode capturar peixes mais pesados."); }
                else if(PlayerInfo[playerid][pFishSkill] == 1000)
                { SendClientMessage(playerid, COLOR_YELLOW, "* Seu Nível de Pesca Agora é nível 5, Agora você pode capturar peixes mais pesados."); }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não está em um lugar Pesca (Parque Gleen) ou em um barco de pesca !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd,"/peixes",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage(playerid, COLOR_WHITE, "|__________________ Fishes __________________|");
            format(string, sizeof(string), "** (1) Peixe: %s.   Peso: %d.", Fishes[playerid][pFish1], Fishes[playerid][pWeight1]);
            SendClientMessage(playerid, COLOR_GREY, string);
            format(string, sizeof(string), "** (2) Peixe: %s.   Peso: %d.", Fishes[playerid][pFish2], Fishes[playerid][pWeight2]);
            SendClientMessage(playerid, COLOR_GREY, string);
            format(string, sizeof(string), "** (3) Peixe: %s.   Peso: %d.", Fishes[playerid][pFish3], Fishes[playerid][pWeight3]);
            SendClientMessage(playerid, COLOR_GREY, string);
            format(string, sizeof(string), "** (4) Peixe: %s.   Peso: %d.", Fishes[playerid][pFish4], Fishes[playerid][pWeight4]);
            SendClientMessage(playerid, COLOR_GREY, string);
            format(string, sizeof(string), "** (5) Peixe: %s.   Peso: %d.", Fishes[playerid][pFish5], Fishes[playerid][pWeight5]);
            SendClientMessage(playerid, COLOR_GREY, string);
        }
        return 1;
    }
    if(strcmp(cmd,"/soltarpeixe",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_WHITE, "USE: /soltarpeixe [peixe]");
                return 1;
            }
            new fishid = strval(tmp);
            if(fishid < 1 || fishid > 5) { SendClientMessage(playerid, COLOR_GREY, "   O Número de Peixes Deve Ser Maior que 1 ou menor que 5 !"); return 1; }
            else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você nem pegou peixe,número(1) !"); return 1; }
            else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você nem pegou peixe,número(2) !"); return 1; }
            else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você nem pegou peixe,número(3) !"); return 1; }
            else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você nem pegou peixe,número(4) !"); return 1; }
            else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você nem pegou peixe,número(5) !"); return 1; }
            ClearFishID(playerid, fishid);
            Fishes[playerid][pLastFish] = 0;
            Fishes[playerid][pFishID] = 0;
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "   Você devolveu o peixe !");
        }
        return 1;
    }
    if(strcmp(cmd,"/soltarultimo",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(Fishes[playerid][pLastFish] > 0)
            {
                ClearFishID(playerid, Fishes[playerid][pLastFish]);
                Fishes[playerid][pLastFish] = 0;
                Fishes[playerid][pFishID] = 0;
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "   Você devolveu o último peixe !");
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você nem mesmo apanhou um peixe ainda !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd,"/soltartodos",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(Fishes[playerid][pWeight1] > 0 || Fishes[playerid][pWeight2] > 0 || Fishes[playerid][pWeight3] > 0 || Fishes[playerid][pWeight4] > 0 || Fishes[playerid][pWeight5] > 0)
            {
                ClearFishes(playerid);
                Fishes[playerid][pLastFish] = 0;
                Fishes[playerid][pFishID] = 0;
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "   Você soltou todos os seus peixes !");
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não pegou nenhum peixe ainda !");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd,"/minhaslicencas",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            new text1[20];
            new text2[20];
            new text3[20];
            new text4[20];
            new text5[20];
            if(PlayerInfo[playerid][pCarLic]) { text1 = "Positivo"; } else { text1 = "Negativo"; }
            if(PlayerInfo[playerid][pFlyLic]) { text4 = "Positivo"; } else { text4 = "Negativo"; }
            if(PlayerInfo[playerid][pBoatLic]) { text2 = "Positivo"; } else { text2 = "Negativo"; }
            if(PlayerInfo[playerid][pFishLic]) { text3 = "Positivo"; } else { text3 = "Negativo"; }
            if(PlayerInfo[playerid][pGunLic]) { text5 = "Positivo"; } else { text5 = "Negativo"; }
            SendClientMessage(playerid, COLOR_WHITE, "|__________________ Licencas __________________|");
            format(string, sizeof(string), "** Motorista: %s.", text1);
            SendClientMessage(playerid, COLOR_GREY, string);
            format(string, sizeof(string), "** Piloto: %s.", text4);
            SendClientMessage(playerid, COLOR_GREY, string);
            format(string, sizeof(string), "** Marujo: %s.", text2);
            SendClientMessage(playerid, COLOR_GREY, string);
            format(string, sizeof(string), "** Pescador: %s.", text3);
            SendClientMessage(playerid, COLOR_GREY, string);
            format(string, sizeof(string), "** Armas: %s.", text5);
            SendClientMessage(playerid, COLOR_GREY, string);
        }
        return 1;
    }
    if(strcmp(cmd,"/minhaslicencas",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            new text1[20];
            new text2[20];
            new text3[20];
            new text4[20];
            new text5[20];
            if(PlayerInfo[playerid][pCarLic]) { text1 = "Positivo"; } else { text1 = "Negativo"; }
            if(PlayerInfo[playerid][pFlyLic]) { text4 = "Positivo"; } else { text4 = "Negativo"; }
            if(PlayerInfo[playerid][pBoatLic]) { text2 = "Positivo"; } else { text2 = "Negativo"; }
            if(PlayerInfo[playerid][pFishLic]) { text3 = "Positivo"; } else { text3 = "Negativo"; }
            if(PlayerInfo[playerid][pGunLic]) { text5 = "Positivo"; } else { text5 = "Negativo"; }
            SendClientMessage(playerid, COLOR_WHITE, "|__________________ Licencas __________________|");
            format(string, sizeof(string), "** Motorista: %s.", text1);
            SendClientMessage(playerid, COLOR_GREY, string);
            format(string, sizeof(string), "** Piloto: %s.", text4);
            SendClientMessage(playerid, COLOR_GREY, string);
            format(string, sizeof(string), "** Marujo: %s.", text2);
            SendClientMessage(playerid, COLOR_GREY, string);
            format(string, sizeof(string), "** Pescador: %s.", text3);
            SendClientMessage(playerid, COLOR_GREY, string);
            format(string, sizeof(string), "** Armas: %s.", text5);
            SendClientMessage(playerid, COLOR_GREY, string);
        }
        return 1;
    }
    if(strcmp(cmd,"/tv",true)==0)
    {
        if( PlayerInfo[ playerid ][ pAdmin ] < 1 ) return SendClientMessage( playerid, -1, "Você não pode usar este comando." );
        tmp = strtok(cmdtext, idx);
        if( ( !strlen(tmp) || !strcmp( "off", tmp, false ) && Espiando[ playerid ] > -1 ) ){
            if( Espiando[ playerid ] > -1 ){
                GameTextForPlayer( playerid, "~n~~n~~n~~n~~n~~w~TV ~r~OFF", 5000, 5 );
                TogglePlayerSpectating( playerid, false );
                SpawnPlayer( playerid );
                Espiando[ playerid ] = -1;
                return true;
            }
        }
        if(!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_WHITE, "Use: /tv [id]");
            return 1;
        }
        giveplayerid = ReturnUser(tmp);
        if( IsPlayerConnected( giveplayerid ) ){
            Espiando[ playerid ] = giveplayerid;
            SetPlayerInterior( playerid, GetPlayerInterior( giveplayerid ) );
            SetPlayerVirtualWorld( playerid, GetPlayerVirtualWorld( giveplayerid ) );
            TogglePlayerSpectating( playerid, true );
            if( IsPlayerInAnyVehicle( giveplayerid ) )
                PlayerSpectateVehicle( playerid, GetPlayerVehicleID( giveplayerid ), SPECTATE_MODE_NORMAL );
            else
                PlayerSpectatePlayer( playerid, giveplayerid, SPECTATE_MODE_NORMAL );
            GameTextForPlayer( playerid, "~n~~n~~n~~n~~n~~w~TV ~g~ON", 5000, 5 );
        }
        else return SendClientMessage( playerid, -1, "Este player não esta conectado." );
        return true;
    }
    if(strcmp(cmd,"/mostrarlicencas",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_WHITE, "Use: /mostrarlicencas [id]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if (ProxDetectorS(8.0, playerid, giveplayerid))
                    {
                        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Para ver suas licencas Use: /minhaslicencas!"); return 1; }
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        new text1[20];
                        new text2[20];
                        new text3[20];
                        new text4[20];
                        new text5[20];
                        if(PlayerInfo[playerid][pCarLic]) { text1 = "Positivo"; } else { text1 = "Negativo"; }
                        if(PlayerInfo[playerid][pFlyLic]) { text4 = "Positivo"; } else { text4 = "Negativo"; }

                        if(PlayerInfo[playerid][pBoatLic]) { text2 = "Positivo"; } else { text2 = "Negativo"; }
                        if(PlayerInfo[playerid][pFishLic]) { text3 = "Positivo"; } else { text3 = "Negativo"; }
                        if(PlayerInfo[playerid][pGunLic]) { text5 = "Positivo"; } else { text5 = "Negativo"; }
                        format(string, sizeof(string), "|__________ Licenses of %s __________|", sendername);
                        SendClientMessage(giveplayerid, COLOR_WHITE, string);
                        format(string, sizeof(string), "** Motorista: %s.", text1);
                        SendClientMessage(giveplayerid, COLOR_GREY, string);
                        format(string, sizeof(string), "** Piloto: %s.", text4);
                        SendClientMessage(giveplayerid, COLOR_GREY, string);
                        format(string, sizeof(string), "** Marujo: %s.", text2);
                        SendClientMessage(giveplayerid, COLOR_GREY, string);
                        format(string, sizeof(string), "** Pescador: %s.", text3);
                        SendClientMessage(giveplayerid, COLOR_GREY, string);
                        format(string, sizeof(string), "** Armas: %s.", text5);
                        SendClientMessage(giveplayerid, COLOR_GREY, string);
                        format(string, sizeof(string), "* %s mostrou suas licencas para você.", sendername);
                        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Você mostrou suas licencas para %s.", giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta longe de Você !");
                        return 1;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   O jogador está offline!");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/dhitman", true) == 0)
    {
        if(PlayerToPoint(1.0,playerid,1110.4048,-355.8542,73.9851))
        {
            if(PlayerInfo[playerid][pLider] == 8 || PlayerInfo[playerid][pMembro] == 8)
            {
            ShowPlayerDialog(playerid, dhitman, DIALOG_STYLE_LIST, "Disfarce", "Civil\nROTA\nMafia Japonesa\nMafia Russa\nGroove\nBallas\nPolícia Rodoviária Federal\nPolicia Militar\nExército \nFARC\nGuerrilheiros Israelitas\nHells Angels\nVagos\nComando Vermelho\nAztecas", "Buscar", "Cancelar");
            return 1;
            }
        }
    }
    if(strcmp(cmd, "/dtriads", true) == 0)
    {
        if(PlayerToPoint(1.0,playerid,2773.01,-2461.69,13.64))
        {
            if(PlayerInfo[playerid][pLider] == 24 || PlayerInfo[playerid][pMembro] == 24)
            {
                ShowPlayerDialog(playerid, dhitman, DIALOG_STYLE_LIST, "Disfarce", "Civil\nROTA\nMafia Japonesa\nMafia Russa\nGroove\nBallas\nPolícia Rodoviária Federal\nPolicia Militar\nExército \nFARC\nGuerrilheiros Israelitas\nHells Angels\nVagos\nComando Vermelho\nAztecas", "Buscar", "Cancelar");
                return 1;
            }
        }
    }
    if(strcmp(cmdtext, "/infocam", true) == 0 || strcmp(cmdtext, "/infocaminhoneiros", true) == 0)
    {
        if(PlayerInfo[playerid][pEmprego] != 11) return SendClientMessage(playerid, -1, "ERRO: Você não é um Caminhoneiro!");
        if(!IsACaminhaoCar(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, -1, "ERRO: Você não está em um caminhão da Empresa, portanto, não pode usar o Computador!");
        new Mensagem[750];
        format(string, sizeof(string), "{FFFFFF}Olá %s, Você acessou as informações do computador!",PlayerName(playerid));
        strcat(Mensagem, string);
        strcat(Mensagem, "\n{FFFFFF}Observe abaixo, e veja como Funciona o Computador dos Caminhoneiros!\n");
        strcat(Mensagem, "{FFFFFF}Aqui você poderá ver o Nome da Empresa/Fazenda, Quantidade de produtos necessários,\n");
        strcat(Mensagem, "{FFFFFF}Dono, Além de poder marcar no Mapa para facilitar a Localização!\n\n");
        strcat(Mensagem, "{FF8080}LEMBRE-SE: {FFFFFF}Cada estabelecimento possui seu Tipo de produto !!!\n");
        format(string, sizeof(string), "Produtos de Base(para Fazendas) Você pode pegar na Empresa: %s.",SBizzInfo[24][sbMessage]);
        strcat(Mensagem, string);
        strcat(Mensagem, "\n{FFFFFF}Você pode Ultilizar o GPS do seu computador para chegar até lá! \n");
        strcat(Mensagem, "{FFFFFF}Produtos para Empresas, Você poderá obter nas FAZENDAS!\n\n");
        strcat(Mensagem, "{1E90FF}COMPUTADOR: {FFFFFF}Para visualizar as Informações contidas no Computador, clique em 'Ligar'!\n");
        ShowPlayerDialog(playerid, DialVinny(5), DIALOG_STYLE_MSGBOX, "{33CCFF}Computador Caminhoneiros", Mensagem, "Ligar", "Desligar");
  return 1;
    }
    if(strcmp(cmdtext, "/infocontratos", true) == 0 || strcmp(cmdtext, "/infocont", true) == 0)
    {
        format(string, sizeof(string), "Hitmans \n\n%d Contratos Concluidos\n\n\nTriads\n%d Contratos Concluidos",InfoCont[1],InfoCont[2]);
        ShowPlayerDialog(playerid,1416,DIALOG_STYLE_MSGBOX,"Contratos Concluidos",string,"Pronto","");
        return 1;
    }

    if(strcmp(cmd,"/laptop",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8 || PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)
            {
                if(ConnectedToPC[playerid] == 9999)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você desligou seu laptop, e se desconectou de sua Agência.");
                    ConnectedToPC[playerid] = 0;
                    return 1;
                }
                GetPlayerName(playerid, sendername, sizeof(sendername));
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você ligou seu laptop, e se conectou a sua Agência.");
                SendClientMessage(playerid, COLOR_WHITE, "|___ Agencia dos Assassinos ___|");
                SendClientMessage(playerid, COLOR_YELLOW2, "|");
                SendClientMessage(playerid, COLOR_YELLOW2, "| - Noticias");
                SendClientMessage(playerid, COLOR_YELLOW2, "| - Contratos");
                SendClientMessage(playerid, COLOR_YELLOW2, "| - DarCont");
                SendClientMessage(playerid, COLOR_YELLOW2, "| - Pedido");
                SendClientMessage(playerid, COLOR_YELLOW2, "| - Membros");
                SendClientMessage(playerid, COLOR_YELLOW2, "| - Sair");
                SendClientMessage(playerid, COLOR_WHITE, "|______________|00:00|");
                ConnectedToPC[playerid] = 9999;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um Assasino!");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/jfora", true) == 0)
    {
        new Veh = GetPlayerVehicleID(playerid);
        if((IsAtFishPlace(playerid)) || IsABoat(Veh))
        {
            if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
            {
                new x_nr[32];
                x_nr = strtok(cmdtext, idx);
                if(!strlen(x_nr)) {
                    SendClientMessage(playerid, COLOR_WHITE, "Use: /jfora [name]");
                    SendClientMessage(playerid, COLOR_WHITE, "Nomes validos: materiais.");
                    return 1;
                }
                if(strcmp(x_nr,"materiais",true) == 0)
                {
                    if((IsAtFishPlace(playerid)) || IsABoat(Veh))
                    {
                        if(MatsHolding[playerid] > 0)
                        {
                            format(string,sizeof(string),"* %s jogou um saco na água.",sendername);
                            ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            MatsHolding[playerid] = 0;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_LIGHTRED, "Você não tem Materiais para jogá-los na água.");
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "Você não pode jogar os itens ilegais aqui.");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_LIGHTRED, "Você não é um Mafioso");
            }
        }
    }
    if(strcmp(cmd, "/mafia",true)==0)
    {
        if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13 || PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
        {
            new x_nr[32];
            x_nr = strtok(cmdtext, idx);
            if(!strlen(x_nr))
            {
                SendClientMessage(playerid, COLOR_WHITE, "Use: /mafia [name]");
                SendClientMessage(playerid, COLOR_WHITE, "Nomes validos: pegar, trocar.");
                return 1;
            }
            if(strcmp(x_nr,"pegar",true) == 0)
            {
                if(PlayerToPoint(3.0,playerid,1738.6844,-1944.9553,13.5647))
                {
                    if(MatsHolding[playerid] >= 55)
                    {
                        SendClientMessage(playerid, COLOR_GREY, " Você já tem Pacotes !");
                        return 1;
                    }
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "Use: /mafia pegar [quantidade]  *Max p/ Vez = 55*");
                        return 1;
                    }
                    moneys = strval(tmp);
                    if(moneys < 1 || moneys > 55) { SendClientMessage(playerid, COLOR_GREY, "   O Números de Pacotes à ser pegos tem que ser mais que 1 e menos que 50 !"); return 1; }
                    new price = moneys * 100;
                    if(GetPlayerMoneyEx(playerid) > price)
                    {
                        format(string, sizeof(string), "* Você recebeu %d Pacotes por R$%d.", moneys, price);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        GivePlayerMoney(playerid, - price);
                        SBizzInfo[16][sbTill] += price;
                        ExtortionSBiz(16, price);
                        GastarProdutos(2, 16, 4);
                        MatsHolding[playerid] = moneys;
                        return 1;
                    }
                    else
                    {
                        format(string, sizeof(string), "   Você não tem R$%d !", price);
                        SendClientMessage(playerid, COLOR_GREY, string);
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, " Você não está nas caixas de Materiais na Estação Unity !");
                    return 1;
                }
            }
            else if(strcmp(x_nr,"trocar",true) == 0)
            {
                if(PlayerToPoint(3.0,playerid,1240.3546,-2067.5168,59.9752) || PlayerToPoint(3.0,playerid,1990.8590,-1996.3722,13.5469))
                {
                    if(MatsHolding[playerid] > 0)
                    {
                        new payout = (100)*(MatsHolding[playerid]);
                        format(string, sizeof(string), "* Você pagou %d para o Armazén pelos seus %d pacotes.", payout, MatsHolding[playerid]);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        PlayerInfo[playerid][pMats] += payout;
                        MatsHolding[playerid] = 0;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Você não tem nenhum pacote !");
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não está nas caixas de Materiais no Casarão !");
                    return 1;
                }
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/mafiavkit", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pJailed] != 0)
            {
                SendClientMessage(playerid,COLOR_YELLOW," Você não pode vender armas na cadeia!");
                return 1;
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 498)
            {
                SendClientMessage(playerid,COLOR_GRAD1,"Você precisa estar dentro do BoxVille");
                return 1;
            }
            if (PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13 || PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
            {
                new x_nr[32];
                x_nr = strtok(cmdtext, idx);
                if(!strlen(x_nr))
                {
                    SendClientMessage(playerid,COLOR_WHITE,"|__________________ Vender Armas - Mafiosos __________________|");
                    SendClientMessage(playerid,COLOR_GREY,"USE: /mafiavkit [1 a 3] [ID do Player] ");
                    SendClientMessage(playerid,COLOR_GREY,"Kit 1: Shotgun,m4,mp5(399 Materiais)");
                    SendClientMessage(playerid,COLOR_GREY,"Kit 2: Eagle,Shotgun,m4,mp5(499 Materiais)");
                    SendClientMessage(playerid,COLOR_GREY,"Kit 3: Eagle,Shotgun,m4,mp5,sniper,faca(599 Materiais)");
                    return 1;
                }
                else if(strcmp(x_nr,"1",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid,COLOR_WHITE,"|__________________ Vender Armas - Mafiosos __________________|");
                        SendClientMessage(playerid,COLOR_GREY,"USE: /mafiavkit [1 a 3] [ID do Player] ");
                        SendClientMessage(playerid,COLOR_GREY,"Kit 1: Shotgun,m4,mp5(399 Materiais)");
                        SendClientMessage(playerid,COLOR_GREY,"Kit 2: Eagle,Shotgun,m4,mp5(499 Materiais)");
                        SendClientMessage(playerid,COLOR_GREY,"Kit 3: Eagle,Shotgun,m4,mp5,sniper,faca(599 Materiais)");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se vender armas!"); return 1; }
                    new carid1 = GetPlayerVehicleID(giveplayerid);
                    if(IsACop(giveplayerid))
                    {
                        SendClientMessage(playerid,COLOR_GRAD1,"Você não pode vender kit para policiais");
                        return 1;
                    }
                    if(!IsACaminhaozinhoCar(carid1))
                    {
                        SendClientMessage(playerid,COLOR_GRAD1,"O player para quem você vai vender precisa estar dentro do BoxVille");
                        return 1;
                    }
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            if(PlayerInfo[playerid][pMats] > 399)
                            {
                                GivePlayerMoney(giveplayerid, -10000);
                                GivePlayerMoney(playerid, 10000);
                                PlayerInfo[playerid][pMats] -= 399;
                                GivePlayerWeapon(giveplayerid, 31, 300);
                                GivePlayerWeapon(giveplayerid, 29, 200);
                                GivePlayerWeapon(giveplayerid, 25, 100);
                                format(string,sizeof(string),"Voce vendeu o kit 1,para %s.",giveplayer);
                                SendClientMessage(playerid,COLOR_GRAD1,string);
                                format(string,sizeof(string),"* %s vendeu kits para %s.",sendername ,giveplayer);
                                ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                return 1;
                            }
                            else
                            {
                                SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender este kit!");
                                return 1;
                            }
                            //return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O jogador está offline!");
                        return 1;
                    }
                }
                else if(strcmp(x_nr,"2",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid,COLOR_WHITE,"|__________________ Vender Armas - Mafiosos __________________|");
                        SendClientMessage(playerid,COLOR_GREY,"USE: /mafiavkit [1 a 3] [ID do Player] ");
                        SendClientMessage(playerid,COLOR_GREY,"Kit 1: Shotgun,m4,mp5(399)");
                        SendClientMessage(playerid,COLOR_GREY,"Kit 2: Eagle,Shotgun,m4,mp5(499)");
                        SendClientMessage(playerid,COLOR_GREY,"Kit 3: Eagle,Shotgun,m4,mp5,sniper,faca(599)");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se vender armas!"); return 1; }
                    new carid2 = GetPlayerVehicleID(giveplayerid);
                    if(IsACop(giveplayerid))
                    {
                        SendClientMessage(playerid,COLOR_GRAD1,"Você não pode vender kit para policiais");
                        return 1;
                    }
                    if(!IsACaminhaozinhoCar(carid2))
                    {
                        SendClientMessage(playerid,COLOR_GRAD1,"O player para quem você vai vender precisa estar dentro do BoxVille");
                        return 1;
                    }
                    if(IsPlayerConnected(giveplayerid))
                    {
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        if(PlayerInfo[playerid][pMats] > 499)
                        {
                            GivePlayerMoney(giveplayerid, -12000);
                            GivePlayerMoney(playerid, 12000);
                            PlayerInfo[playerid][pMats] -= 499;
                            GivePlayerWeapon(giveplayerid, 31, 300);
                            GivePlayerWeapon(giveplayerid, 29, 200);
                            GivePlayerWeapon(giveplayerid, 25, 100);
                            GivePlayerWeapon(giveplayerid, 24, 100);
                            format(string,sizeof(string),"Voce vendeu o kit 2,para %s.",giveplayer);
                            SendClientMessage(playerid,COLOR_GRAD1,string);
                            format(string,sizeof(string),"* %s vendeu kits para %s.",sendername ,giveplayer);
                            ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender este kit!");
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O jogador está offline!");
                        return 1;
                    }
                }
                else if(strcmp(x_nr,"3",true) == 0)
                {
                    tmp = strtok(cmdtext, idx);
                    if(!strlen(tmp))
                    {
                        SendClientMessage(playerid,COLOR_WHITE,"|__________________ Vender Armas - Mafiosos __________________|");
                        SendClientMessage(playerid,COLOR_GREY,"USE: /mafiavkit [1 a 3] [ID do Player] ");
                        SendClientMessage(playerid,COLOR_GREY,"Kit 1: Shotgun,m4,mp5(399)");
                        SendClientMessage(playerid,COLOR_GREY,"Kit 2: Eagle,Shotgun,m4,mp5(499)");
                        SendClientMessage(playerid,COLOR_GREY,"Kit 3: Eagle,Shotgun,m4,mp5,sniper,faca(599)");
                        return 1;
                    }
                    giveplayerid = ReturnUser(tmp);
                    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se vender armas!"); return 1; }
                    new carid3 = GetPlayerVehicleID(giveplayerid);
                    if(IsACop(giveplayerid))
                    {
                        SendClientMessage(playerid,COLOR_GRAD1,"Você não pode vender kit para policiais");
                        return 1;
                    }
                    if(!IsACaminhaozinhoCar(carid3))
                    {
                        SendClientMessage(playerid,COLOR_GRAD1,"O player para quem você vai vender precisa estar dentro do BoxVille");
                        return 1;
                    }
                    if(IsPlayerConnected(giveplayerid))
                    {
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        if(PlayerInfo[playerid][pMats] > 599)
                        {
                            GivePlayerMoney(giveplayerid, -15000);
                            GivePlayerMoney(playerid, 15000);
                            PlayerInfo[playerid][pMats] -= 599;
                            GivePlayerWeapon(giveplayerid, 31, 300);
                            GivePlayerWeapon(giveplayerid, 29, 200);
                            GivePlayerWeapon(giveplayerid, 24, 100);
                            GivePlayerWeapon(giveplayerid, 25, 100);
                            GivePlayerWeapon(giveplayerid, 34, 80);
                            GivePlayerWeapon(giveplayerid, 4, 1);
                            format(string,sizeof(string),"Voce vendeu o kit 3,para %s.",giveplayer);
                            SendClientMessage(playerid,COLOR_GRAD1,string);
                            format(string,sizeof(string),"* %s vendeu kits para %s.",sendername ,giveplayer);
                            ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender este kit!");
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O jogador está offline!");
                        return 1;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid,COLOR_GREY,"Você não é de nenhuma Organização Mafiosa!");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd,"/mafiavarma",true)==0)
    {
        if(PlayerPaintballing[playerid] != 0)
        {
            SendClientMessage(playerid,COLOR_YELLOW," Você não pode vender armas no evento!");
            return 1;
        }
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid,COLOR_YELLOW," Você não pode vender armas na cadeia!");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pMembro] != 13 && PlayerInfo[playerid][pLider] != 13 && PlayerInfo[playerid][pMembro] != 12 && PlayerInfo[playerid][pLider] != 12)
            {
                SendClientMessage(playerid,COLOR_GREY,"Você não é de nenhuma Organização Mafiosa!");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            //if (giveplayerid == playerid)
            //{
            //    SendClientMessage(playerid,COLOR_GREY,"Você não pode vender armas pra si mesmo!");
            //    return 1;
            //}
            new x_weapon[32],weapon[MAX_PLAYERS],ammo[MAX_PLAYERS],price[MAX_PLAYERS];
            tmp = strtok(cmdtext,idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid,COLOR_GRAD1,"USE: /mafiavarma [ID do Player] [weaponname]");
                SendClientMessage(playerid,COLOR_GREY,"Armas: pistola(50) eagle(200) mp5(150) faca(50) ");
                SendClientMessage(playerid,COLOR_GREY,"Armas: flores(25) ak47(200) m4(200) rifle(200)");
                SendClientMessage(playerid,COLOR_GREY,"Armas: fumaca(400) shotgun(150) sniper(200)");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if (IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                //if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se vender armas!"); return 1; }
                    x_weapon = strtok(cmdtext,idx);
                    if(!strlen(x_weapon))
                    {
                        SendClientMessage(playerid,COLOR_WHITE,"|__________________ Vender Armas - Mafiosos __________________|");
                        SendClientMessage(playerid,COLOR_GREY,"USE: /mafiavarma [ID do Player] [weaponname]");
                        SendClientMessage(playerid,COLOR_GREY,"Armas: pistola(50) eagle(200) mp5(150) faca(50) ");
                        SendClientMessage(playerid,COLOR_GREY,"Armas: flores(25) ak47(200) m4(200) rifle(200)");
                        SendClientMessage(playerid,COLOR_GREY,"Armas: fumaca(400) shotgun(150) sniper(200)");
                        return 1;
                    }
                }
                if(strcmp(x_weapon,"pistola",true) == 0) { if(PlayerInfo[playerid][pMats] > 49) { weapon[playerid] = 23; price[playerid] = 50; ammo[playerid] = 240;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
                else if(strcmp(x_weapon,"flores",true) == 0) { if(PlayerInfo[playerid][pMats] > 24) { weapon[playerid] = 14; price[playerid] = 25; ammo[playerid] = 1;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
                else if(strcmp(x_weapon,"eagle",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 24; price[playerid] = 100; ammo[playerid] = 220;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
                else if(strcmp(x_weapon,"mp5",true) == 0) { if(PlayerInfo[playerid][pMats] > 149) { weapon[playerid] = 29; price[playerid] = 100; ammo[playerid] = 360;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
                else if(strcmp(x_weapon,"shotgun",true) == 0) { if(PlayerInfo[playerid][pMats] > 149) { weapon[playerid] = 25; price[playerid] = 200; ammo[playerid] = 190;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
                //else if(strcmp(x_weapon,"spas12",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 27; price[playerid] = 600; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 27; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"Not enough Materials for that Weapon!"); return 1; } }
                else if(strcmp(x_weapon,"ak47",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 30; price[playerid] = 200; ammo[playerid] = 360;  } else { SendClientMessage(playerid,COLOR_GREY,"   Materiais insuficientes para vender esta Arma!"); return 1; } }
                else if(strcmp(x_weapon,"m4",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 31; price[playerid] = 200; ammo[playerid] = 360;  } else { SendClientMessage(playerid,COLOR_GREY,"   Materiais insuficientes para vender esta Arma!"); return 1; } }
                else if(strcmp(x_weapon,"rifle",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 33; price[playerid] = 200; ammo[playerid] = 230;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
                else if(strcmp(x_weapon,"faca",true) == 0) { if(PlayerInfo[playerid][pMats] > 49) { weapon[playerid] = 4; price[playerid] = 50; ammo[playerid] = 1;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
                else if(strcmp(x_weapon,"sniper",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 34; price[playerid] = 200; ammo[playerid] = 100;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
                else if(strcmp(x_weapon,"fumaca",true) == 0) { if(PlayerInfo[playerid][pMats] > 399) { weapon[playerid] = 17; price[playerid] = 200; ammo[playerid] = 12;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
                //else if(strcmp(x_weapon,"granada",true) == 0) { if(PlayerInfo[playerid][pMats] > 499) { weapon[playerid] = 16; price[playerid] = 200; ammo[playerid] = 5;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
                else { SendClientMessage(playerid,COLOR_GREY,"Nome da arma inválida!"); return 1; }
                if (ProxDetectorS(5.0,playerid,giveplayerid))
                {
                    if(PlayerInfo[playerid][pMiserPerk] > 0)
                    {
                        new skill = 2 * PlayerInfo[playerid][pMiserPerk];
                        new mats = price[playerid] / 100;
                        price[playerid] -= (mats)*(skill);
                    }
                    ConsumingMoney[playerid] = 1;
                    GetPlayerName(giveplayerid,giveplayer,sizeof(giveplayer));
                    GetPlayerName(playerid,sendername,sizeof(sendername));
                    format(string,sizeof(string),"Voce vendeu %s,um %s com %d ammo,para %d Materiais .",giveplayer,x_weapon,ammo[playerid],price[playerid]);
                    PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
                    SendClientMessage(playerid,COLOR_GRAD1,string);
                    format(string,sizeof(string),"Você recebeu uma %s com %d a partir de munição %s.",x_weapon,ammo[playerid],sendername);
                    SendClientMessage(giveplayerid,COLOR_GRAD1,string);
                    PlayerPlaySound(giveplayerid,1052,0.0,0.0,0.0);
                    format(string,sizeof(string),"* %s vendeu armas para %s.",sendername ,giveplayer);
                    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    GivePlayerWeapon(giveplayerid,weapon[playerid],ammo[playerid]);
                    PlayerInfo[playerid][pMats] -= price[playerid];
                    //SaveVendas();
                }
                else
                {
                    SendClientMessage(playerid,COLOR_GRAD1,"O cliente não esta proximo de você.");
                    return 1;
                }
            }
            else
            {
                format(string,sizeof(string),"%d não esta online este player.",giveplayerid);
                SendClientMessage(playerid,COLOR_GRAD1,string);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/tunar", true) == 0)
    {
        new org = GetPlayerOrg(playerid);
        if(org != 25) return SendClientMessage(playerid, COLOR_GRAD2, "Você não é dos Drifters");
        {
            if(!PlayerToPoint(5.0,playerid,828.9000,-2056.1999,12.6000))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Você não está no tunning");
    return 1;
            }
            new playerstate = GetPlayerState(playerid);
            if(playerstate == PLAYER_STATE_DRIVER || playerstate == PLAYER_STATE_PASSENGER)
            {
                return ShowPlayerDialog(playerid, 26547, DIALOG_STYLE_LIST, "Menu Tunning","Reparar Veiculo\nAuto Tunar\nTunning Personalizado\nInstalar Neon\nInstalar Nitro", "Selecionar", "Sair");
            }
            else
            {
                return SendClientMessage(playerid, 0xADADADAA, "** Você não está em um veiculo!");
            }
        }
    }
    if(strcmp(cmd,"/VenderArma",true)==0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid,COLOR_YELLOW," Você não pode vender armas na cadeia!");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pEmprego] != 7)
            {
                SendClientMessage(playerid,COLOR_GREY,"Você não é um Vendendor de Armas !");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if (giveplayerid == playerid)
            {
                SendClientMessage(playerid,COLOR_GREY,"Você não pode vender armas pra si mesmo!");
                return 1;
            }
            new x_weapon[32],weapon[MAX_PLAYERS],ammo[MAX_PLAYERS],price[MAX_PLAYERS];
            tmp = strtok(cmdtext,idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid,COLOR_GRAD1,"USE: /VenderArma [ID do Player] [Arma]");
                SendClientMessage(playerid,COLOR_GREY,"Armas: flowers(25) spistola(100) pistola(150) mp5(200) shotgun(200)");
                SendClientMessage(playerid,COLOR_GREY,"Armas: rifle (600) ak47(600) m4(600)");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if (IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    x_weapon = strtok(cmdtext,idx);
                    if(!strlen(x_weapon))
                    {
                        SendClientMessage(playerid,COLOR_WHITE,"|__________________ Vender Armas __________________|");
                        SendClientMessage(playerid,COLOR_GREY,"USE: /VenderArma [ID do Players] [weaponname]");
                        SendClientMessage(playerid,COLOR_GREY,"Armas: spistola(100) eagle(200) mp5(200)");
                        SendClientMessage(playerid,COLOR_GREY,"Armas: rifle(600) flores(25) ak47(600) m4(600) rifle(600)");
                        return 1;
                    }
                }
                //if(strcmp(x_weapon,"knife",true) == 0) { if(PlayerInfo[playerid][pMats] > 99) { weapon[playerid] = 4; price[playerid] = 100; ammo[playerid] = 1; PlayerInfo[giveplayerid][pGun1] = 4; PlayerInfo[giveplayerid][pAmmo1] = 1; } else { SendClientMessage(playerid,COLOR_GREY,"Not enough Materials for that Weapon!"); return 1; } }
                if(strcmp(x_weapon,"spistola",true) == 0) { if(PlayerInfo[playerid][pMats] > 99) { weapon[playerid] = 23; price[playerid] = 100; ammo[playerid] = 50;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insulficiente para Arma!"); return 1; } }
                else if(strcmp(x_weapon,"flowers",true) == 0) { if(PlayerInfo[playerid][pMats] > 24) { weapon[playerid] = 14; price[playerid] = 25; ammo[playerid] = 1;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insulficiente para Arma!"); return 1; } }
                else if(strcmp(x_weapon,"pistola",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 22; price[playerid] = 150; ammo[playerid] = 50;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insulficiente para Arma!"); return 1; } }
                else if(strcmp(x_weapon,"mp5",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 29; price[playerid] = 200; ammo[playerid] = 200;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insulficiente para Arma!"); return 1; } }
                else if(strcmp(x_weapon,"shotgun",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 25; price[playerid] = 200; ammo[playerid] = 50;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insulficiente para Arma!"); return 1; } }
                //else if(strcmp(x_weapon,"spas12",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 27; price[playerid] = 600; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 27; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"Not enough Materials for that Weapon!"); return 1; } }
                else if(strcmp(x_weapon,"ak47",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 30; price[playerid] = 600; ammo[playerid] = 250;  } else { SendClientMessage(playerid,COLOR_GREY,"   Você não tem Materiais para essa arma!"); return 1; } }
                else if(strcmp(x_weapon,"m4",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 31; price[playerid] = 600; ammo[playerid] = 250;  } else { SendClientMessage(playerid,COLOR_GREY,"   Você não tem Materiais para essa arma!"); return 1; } }
                else if(strcmp(x_weapon,"rifle",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 33; price[playerid] = 600; ammo[playerid] = 50;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insulficiente para Arma!"); return 1; } }
                else { SendClientMessage(playerid,COLOR_GREY,"Nome da arma inválida!"); return 1; }
                if (ProxDetectorS(5.0,playerid,giveplayerid))
                {
                    if(giveplayerid == playerid)
                    {
                        SendClientMessage(playerid,COLOR_GRAD1,"Você não está numa loja de armas!");
                        return 1;
                    }
                    if(PlayerInfo[playerid][pMiserPerk] > 0)
                    {
                        new skill = 2 * PlayerInfo[playerid][pMiserPerk];
                        new mats = price[playerid] / 100;
                        price[playerid] -= (mats)*(skill);
                    }
                    ConsumingMoney[playerid] = 1;
                    GetPlayerName(giveplayerid,giveplayer,sizeof(giveplayer));
                    GetPlayerName(playerid,sendername,sizeof(sendername));
                    format(string,sizeof(string),"Voce vendeu %s,um %s com %d ammo,para %d Materiais .",giveplayer,x_weapon,ammo[playerid],price[playerid]);
                    PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
                    SendClientMessage(playerid,COLOR_GRAD1,string);
                    format(string,sizeof(string),"Você recebeu uma %s com %d a partir de munição %s.",x_weapon,ammo[playerid],sendername);
                    SendClientMessage(giveplayerid,COLOR_GRAD1,string);
                    PlayerPlaySound(giveplayerid,1052,0.0,0.0,0.0);
                    format(string,sizeof(string),"* %s vendeu armas para %s.",sendername ,giveplayer);
                    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    GivePlayerWeapon(giveplayerid,weapon[playerid],ammo[playerid]);
                    PlayerInfo[playerid][pMats] -= price[playerid];
                }
                else
                {
                    SendClientMessage(playerid,COLOR_GRAD1,"O cliente nao esta proximo de Você.");
                    return 1;
                }
            }
            else
            {
                format(string,sizeof(string),"%d não está online.",giveplayerid);
                SendClientMessage(playerid,COLOR_GRAD1,string);
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/abastecer", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            new gastanto;
            if(!strlen(tmp))
            {
            gastanto = 100;
            }
            else
            {
            gastanto = strval(tmp);
            }


            if(gastanto > 100 || gastanto < 1)
            {
            SendClientMessage(playerid, COLOR_WHITE, " Gasolina: Litros [de 1 à 100]!");
        return 1;
        }
            if(IsAtGasStation(playerid))
            {

                Refueling[playerid] = gastanto;
                GasETanto[playerid] = Gas[GetPlayerVehicleID(playerid)]+Refueling[playerid];
                if(GasETanto[playerid] > 100) { GasETanto[playerid] = 100; }
                //GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Re-Abastecendo, Aguarde!",2000,3);
                format(gstring,sizeof(gstring)," Reabastecendo Seu carro com %d Litros de Combustivel, Aguarde.",gastanto);
                SendClientMessage(playerid,COLOR_LIGHTBLUE,gstring);
                TogglePlayerControllable(playerid, 0);
                Abastecendo(playerid);
            }
            else if(IsAtGasStationgang(playerid))
            {
                SetTimer("GasGang",RefuelWait,0);
                Refuelinggang[playerid] = 1;
                GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~ Aguarde!",2000,3);
            }
            else
            {
                SendClientMessage(playerid,COLOR_GREY,"   Você não está em um posto de Gasolina");
            }
        }
        return 1;
    }

    if(strcmp(cmd, "/imo", true) ==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(!IsACop(playerid))
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um Policial!");
                return 1;
            }
            if(OnDuty[playerid] != 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não bateu o cartão!");
                return 1;
            }
            if(gTeam[playerid] == 2 || IsACop(playerid) || IsAGOV(playerid))
            {
                if(IsPlayerInAnyVehicle(playerid))
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Não é possivel imobilizar de dentro do carro !");
                    return 1;
                }
                new suspect = GetClosestPlayer(playerid);
                if(IsPlayerConnected(suspect))
                {
                    if(PlayerCuffed[suspect] > 0)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Suspeito Imobilizado !");
                        return 1;
                    }
                    if(GetDistanceBetweenPlayers(playerid,suspect) < 3)
                    {
                        if(IsPlayerInAnyVehicle(suspect))
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   O suspeito está em um carro, faça ele descer antes !");
                            return 1;
                        }
                        if(IsACop(giveplayerid))
                        {
                            SendClientMessage(playerid, COLOR_GRAD1, "Você não pode dar imo em Policiais!");
                            return 1;
                        }
                        GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* Você foi imobilizado por %s por 20 segundos.", sendername);
                        SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Você imobilizou o(a) %s por 20 segundos.", giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* %s Imobilizou %s, para não fugir.", sendername ,giveplayer);
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        GameTextForPlayer(suspect, "~r~Imobilizado", 2500, 3);
                        TogglePlayerControllable(suspect, 0);
                        ApplyAnimation(suspect, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
                        PlayerCuffed[suspect] = 1;
                        PlayerCuffedTime[suspect] = 20;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Ele não está perto de Você!");
                        return 1;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um Oficial !");
            }
        }//not connected
        return 1;
    }
    if(strcmp(cmd, "/algemar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(!IsACop(playerid))
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
                return 1;
            }
            if(OnDuty[playerid] != 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não bateu o cartão!");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_WHITE, "Use: /algemar [id]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(gTeam[giveplayerid] == 2 || IsACop(giveplayerid))
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Você não pode algemar COPs !");
                        return 1;
                    }
                    if(PlayerCuffed[giveplayerid] > 0)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O Jogador já esta algemado !");
                        return 1;
                    }
                    if (ProxDetectorS(8.0, playerid, giveplayerid))
                    {
                        new car = GetPlayerVehicleID(playerid);
                        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você nao pode se algemar!"); return 1; }
                        if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
                        {
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "* Você foi algemado pelo: %s.", sendername);
                            SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* Você algemou %s.", giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* %s Algemou %s, para nao fugir.", sendername ,giveplayer);
                            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            GameTextForPlayer(giveplayerid, "~r~Algemado", 2500, 3);
                            TogglePlayerControllable(giveplayerid, 0);
                            PlayerCuffed[giveplayerid] = 2;
                            PlayerInfo[giveplayerid][pMuted] = 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está no carro ou você não é o motorista !");
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O jogador está longe de você!");
                        return 1;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   O jogador está offline!");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/desalgemar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(gTeam[playerid] == 2 || IsACop(playerid))
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp)) {
                    SendClientMessage(playerid, COLOR_WHITE, "Use: /desalgemar [id]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        if (ProxDetectorS(8.0, playerid, giveplayerid))
                        {
                            if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se desalgemar!"); return 1; }
                            if(PlayerCuffed[giveplayerid])
                            {
                                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                format(string, sizeof(string), "* Você foi desalgemado pelo: %s.", sendername);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "* Você desalgemou %s.", giveplayer);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                GameTextForPlayer(giveplayerid, "~g~Desalgemado", 2500, 3);
                                TogglePlayerControllable(giveplayerid, 1);
                                PlayerCuffed[giveplayerid] = 0;
                                PlayerInfo[giveplayerid][pMuted] = 0;
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   Este jogador não está algemado !");
                                return 1;
                            }
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   O jogador está longe de você!");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   O jogador está offline!");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não e PM/PR/PC/Exército  !");
            }
        }//not connected
        return 1;
    }
    if(strcmp(cmd, "/arrastar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(!IsACop(playerid))
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
                return 1;
            }
            if(OnDuty[playerid] != 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não bateu o cartão!");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_WHITE, "Use: /arrastar [id]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(gTeam[giveplayerid] == 2 || IsACop(giveplayerid))
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Você não pode arrastar COPs !");
                        return 1;
                    }
                    if (ProxDetectorS(8.0, playerid, giveplayerid))
                    {
                        new car = GetPlayerVehicleID(playerid);
                        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você nao pode se arrastar!"); return 1; }
                        if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2)
                        {
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "* Você foi arrastado para a Viatura pelo: %s.", sendername);
                            SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* Você arrastou %s.", giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* %s Arrastou %s, para a Viatura.", sendername ,giveplayer);
                            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            GameTextForPlayer(giveplayerid, "~r~Arrastado", 3000, 3);
                            PutPlayerInVehicle(giveplayerid, car, 1);
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   você não é o motorista !");
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O jogador está longe de você!");
                        return 1;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   O jogador está offline!");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/jetpack", true) == 0)
    {
        if(PlayerInfo[playerid][pVip] == 2 || PlayerInfo[playerid][pAdmin] >= 1)
        {
            if(PlayerPaintballing[playerid] != 0)
            {
                SendClientMessage(playerid,COLOR_GREY,"[SUPER VIP]Você não pode usar seu jetpack no evento!");
                return 1;
            }
            if(PlayerInfo[playerid][pJailed] != 0)
            {
                SendClientMessage(playerid,COLOR_GREY,"[SUPER VIP]Você não pode usar seu jetpack preso!");
                return 1;
            }
            if (ProxDetectorS(15.0, playerid, Atirou[playerid]))
            {
                return SendClientMessage(playerid, COLOR_GRAD1, "VIP BPG: Você não pode usarjetpack perto de quem atirou em voce.");
            }
            if(IsPlayerInMorro(playerid) || IsPlayerInShop(playerid) || IsPlayerInPark(playerid) || IsPlayerInCemiterio(playerid)
            || IsPlayerInPosto(playerid) || IsPlayerInEstacao(playerid) || IsPlayerInCasarao(playerid))
            {
                return SendClientMessage(playerid, COLOR_GRAD1, "VIP BPG: Você não pode Equipar neste Local.");
            }
            SetPlayerSpecialAction(playerid, 2);
            SendClientMessage(playerid,COLOR_GREEN,"[SUPER VIP] Você será punido se usar o jetpack em batalha!");
            SendClientMessage(playerid,COLOR_GREEN,"[SUPER VIP] Você pegou sua mochila a Jato!");
            format(string, sizeof(string), "** SUPER VIP: %s Pegou seu Jetpack VIP",PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        }
        else return SendClientMessage(playerid, COLOR_GRAD1, "Você não é um player Super VIP do servidor.");

        return 1;
    }
     if(strcmp(cmd, "/procurar", true) == 0 || strcmp(cmd, "/localizar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(!IsACop(playerid) && !IsAHit(playerid) && GetPlayerOrg(playerid) != 24 && PlayerInfo[playerid][pEmprego] != 1)
            {
                SendClientMessage(playerid, COLOR_GRAD1,"Você não é um Assassino, Policial ou detetive!");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /procurar [ id ]");
                return 1;
            }
            if(LocalizarTime[playerid] > 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você já está procurando alguem!");
    return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se procurar!"); return 1; }
                    new points;
                    new level = PlayerInfo[playerid][pDetSkill];
                    if(level >= 0 && level <= 50)
                    { points = 4; }
                    else if(level >= 51 && level <= 100)
                    { points = 6; }
                    else if(level >= 101 && level <= 200)
                    { points = 8; }
                    else if(level >= 201 && level <= 400)
                    { points = 10; }
                    else if(level >= 401)
                    { points = 12; }
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    format(string, sizeof(string), "* Voce está localizando %s, A marca estará visível até você chegar.",giveplayer);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar procurar!");
                    GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
                    LocalizarTime[playerid] = 1;
                    LocalizarAccepted[playerid] = giveplayerid;
                    //new Float:X,Float:Y,Float:Z;
                    //GetPlayerPos(giveplayerid, X,Y,Z);
                    //SetPlayerCheckpoint(playerid, X,Y,Z, 6);
                    FindTime[playerid] = 1;
                    FindTimePoints[playerid] = points;
                    PlayerInfo[playerid][pDetSkill] ++;
                    UsedFind[playerid] = 1;
                    if(PlayerInfo[playerid][pDetSkill] == 50)
                    { SendClientMessage(playerid, COLOR_YELLOW, "* Seu nivel de detetive agora é 2, Você pode procurar mais rapido e encontrar mais rapido."); }
                    else if(PlayerInfo[playerid][pDetSkill] == 100)
                    { SendClientMessage(playerid, COLOR_YELLOW, "* Seu nivel de detetive agora é 3, Você pode procurar mais rapido e encontrar mais rapido."); }
                    else if(PlayerInfo[playerid][pDetSkill] == 200)
                    { SendClientMessage(playerid, COLOR_YELLOW, "* Seu nivel de detetive agora é 4, Você pode procurar mais rapido e encontrar mais rapido."); }
                    else if(PlayerInfo[playerid][pDetSkill] == 400)
                    { SendClientMessage(playerid, COLOR_YELLOW, "* Seu nivel de detetive agora é 5, Você pode procurar mais rapido e encontrar mais rapido."); }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Invalido NICK/ID !");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/proteger", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pEmprego] != 6)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um segurança!");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /proteger [id] [preço]");
                return 1;
            }
            new money;
            giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) { return 1; }
            money = strval(tmp);
            if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Preço mínimo 1, máximo 99999!"); return 1; }
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(ProxDetectorS(8.0, playerid, giveplayerid))
                    {
                        if(giveplayerid == playerid)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você não pode se proteger !");
                            return 1;
                        }
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* Você se ofereceu para proteger %s por R$%d.", giveplayer, money);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Segurança %s ofereceu segurança por R$%d, (Digite /aceitar segurança) para aceitar.", sendername, money);
                        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                        GuardOffer[giveplayerid] = playerid;
                        GuardPrice[giveplayerid] = money;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está perto de você !");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   O Jogador está Offline!");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/soltar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pEmprego] != 2)
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não é um Advogado!");
                return 1;
            }
            if(PlayerInfo[playerid][pJailed] != 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "Você está preso e não pode ajustar ninguém preso.");
                return 1;
            }
            if(PlayerInfo[playerid][pLawSkill] >= 401)
            {
                ApprovedAdvogado[playerid] = 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, BRANCO, "USE: /soltar [ID/Nome] [Preço]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, BRANCO, "USE: /soltar [ID/Nome] [Preço]");
                return 1;
            }
            moneys = strval(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(!ProxDetectorS(10.0, playerid,giveplayerid))
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Você não está perto do presidiário!");
                        return 1;
                    }
                    if(giveplayerid == playerid)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Você não pode soltar a si mesmo!");
                        return 1;
                    }
                    if(PlayerInfo[giveplayerid][pJailed] == 2)
                    {
                        SendClientMessage(playerid, BRANCO, "Você não pode soltar um preso da Cadeia do admin!");
                        return 1;
                    }
                    /*if(PlayerInfo[giveplayerid][pJailed] == 8)
                    {
                        SendClientMessage(playerid, BRANCO, "Este jogador está hospitalizado e não preso!");
                        return 1;
                    }*/
                    if(PlayerInfo[giveplayerid][pAjustado] > 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Este jogador já foi ajustado!");
                        return 1;
                    }
                    if(PlayerInfo[giveplayerid][pJailed] >= 1 && ApprovedAdvogado[playerid] == 1)
                    {
                        if(moneys < 1 || moneys > 50000) { SendClientMessage(playerid, COLOR_LIGHTRED, "Preço mínimo R$1 | Preço Máximo: R$50000"); return 1; }
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* Você enviou um pedido de soltura a %s por R$%d.", PlayerName(giveplayerid), moneys);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* O Advogado %s enviou um pedido de soltura para você, preço: R$%d", PlayerName(playerid), moneys);
                        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                        new solturadialog[250];
                        format(string, sizeof(string), "{FFFFFF}O Advogado %s está se oferecendo para te soltar!\nPreço: {9DFD65}R$%d\n",PlayerName(playerid), moneys);
                        strcat(solturadialog,string);
                        strcat(solturadialog,"{FFFFFF}Caso você queira aceitar a proposta do advogado\nUse '{9DFD65}aceitar{FFFFFF}' ou '{ED3737}recusar{FFFFFF}' para recusar.");
                        ShowPlayerDialog(giveplayerid, DIALOG_SOLTURA, DIALOG_STYLE_MSGBOX,"Proposta do Advogado", solturadialog,"Aceitar","Recusar");
                        ShowPlayerDialog(playerid, 99999, DIALOG_STYLE_MSGBOX,"Sindicato dos Advogados", "Pedido de soltura enviado","Ok","");
                        PedidoAdvogado[giveplayerid] = playerid;
                        PrecoAdvogado[giveplayerid] = moneys;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Você não tem uma autorização!");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Esse não é um jogador ativo!");
            }
        }//not connected
        return 1;
    }
    if(strcmp(cmd,"/cancelar",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            new x_Emprego[32];
            x_Emprego = strtok(cmdtext, idx);
            if(!strlen(x_Emprego)) {
                SendClientMessage(playerid, COLOR_WHITE, "|__________________ Cancelar __________________|");
                SendClientMessage(playerid, COLOR_WHITE, "Use: /cancelar [nome]");
                SendClientMessage(playerid, COLOR_GREY, "Nomes Validos: Sexo, Drogas, reparo, Advogado, segurança, aovivo, Abastecimento, Carro, Boxe");
                SendClientMessage(playerid, COLOR_GREY, "Nomes Validos: Taxi, Onibus, Medico, Mecanico, Policia, mendigo, convite");
                return 1;
            }
            if(strcmp(x_Emprego,"sexo",true) == 0) {    SexOffer[playerid] = 999; SexPrice[playerid] = 0; }
            else if(strcmp(x_Emprego,"convite",true) == 0) { InviteOffer[playerid] = 999; InviteJob[playerid] = 0; }
            else if(strcmp(x_Emprego,"mendigo",true) == 0) { MendigoOffer[playerid] = 999; MendigoPrice[playerid] = 0; }
            else if(strcmp(x_Emprego,"drogas",true) == 0) { DrugOffer[playerid] = 999; DrugPrice[playerid] = 0; DrugGram[playerid] = 0; }
            else if(strcmp(x_Emprego,"reparo",true) == 0) { RepairOffer[playerid] = 999; RepairPrice[playerid] = 0; RepairCar[playerid] = 0; }
            else if(strcmp(x_Emprego,"segurança",true) == 0) { GuardOffer[playerid] = 999; GuardPrice[playerid] = 0; }
            else if(strcmp(x_Emprego,"aovivo",true) == 0) { LiveOffer[playerid] = 999; }
            else if(strcmp(x_Emprego,"assalto",true) == 0) { OfAssalto[playerid] = 999; precoassalto[playerid] = 0; }
            else if(strcmp(x_Emprego,"abastecercarro",true) == 0) { RefillOffer[playerid] = 999; RefillPrice[playerid] = 0; }
            else if(strcmp(x_Emprego,"carro",true) == 0) { CarOffer[playerid] = 999; CarPrice[playerid] = 0; CarID[playerid] = 0; }
            else if(strcmp(x_Emprego,"Boxe",true) == 0) { BoxOffer[playerid] = 999; }
            else if(strcmp(x_Emprego,"padrinho",true) == 0) { MarryWitnessOffer[playerid] = 999; }
            else if(strcmp(x_Emprego,"casamento",true) == 0) { ProposeOffer[playerid] = 999; }
            else if(strcmp(x_Emprego,"divorcio",true) == 0) { DivorceOffer[playerid] = 999; }
            else if(strcmp(x_Emprego,"multa",true) == 0) { TicketOffer[playerid] = 999; TicketMoney[playerid] = 0; }
            else if(strcmp(x_Emprego,"taxi",true) == 0)
            {
                    if(TransportDuty[playerid] == 1 && TaxiCallTime[playerid] > 0)
                    {
                        TaxiAccepted[playerid] = 999;
                        GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
                        TaxiCallTime[playerid] = 0;
                        DisablePlayerCheckpoint(playerid);
                        TaxiCall = 999;
                    }
                    else
                    {
                        if(IsPlayerConnected(TaxiCall)) { if(TaxiCall == playerid) { TaxiCall = 999; } }
                        for(new i = 0; i < MaiorID; i++)
                        {
                            if(IsPlayerConnected(i))
                            {
                                if(TaxiAccepted[i] < 999)
                                {
                                    if(TaxiAccepted[i] == playerid)
                                    {
                                        TaxiAccepted[i] = 999;
                                        GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
                                        TaxiCallTime[i] = 0;
                                        DisablePlayerCheckpoint(i);
                                }
                            }
                        }
                    }
                }
            }
            else if(strcmp(x_Emprego,"procurar",true) == 0)
            {
                    if(LocalizarTime[playerid] > 0)
                    {
                        LocalizarAccepted[playerid] = 999;
                        GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou", 5000, 1);
                        LocalizarTime[playerid] = 0;
                        DisablePlayerCheckpoint(playerid);
                    }
            }
            else if(strcmp(x_Emprego,"bus",true) == 0 || strcmp(x_Emprego,"onibus",true) == 0)
            {
                    if(TransportDuty[playerid] == 2 && BusCallTime[playerid] > 0)
                    {
                        BusAccepted[playerid] = 999;
                        GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
                        BusCallTime[playerid] = 0;
                        DisablePlayerCheckpoint(playerid);
                        BusCall = 999;
                    }
                    else
                    {
                        if(IsPlayerConnected(BusCall)) { if(BusCall == playerid) { BusCall = 999; } }
      for(new i = 0; i < MaiorID; i++)
                        {
                            if(IsPlayerConnected(i))
                            {
                                if(BusAccepted[i] < 999)
                                {
                                    if(BusAccepted[i] == playerid)
                                    {
                                        BusAccepted[i] = 999;
                                        GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
                                        BusCallTime[i] = 0;
                                        DisablePlayerCheckpoint(i);
                                }
                            }
                        }
                    }
                }
            }
            else if(strcmp(x_Emprego,"mecanico",true) == 0)
            {
                    if(MechanicCallTime[playerid] > 0)
                    {
                        MechanicAccepted[playerid] = 999;
                        GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
                        MechanicCallTime[playerid] = 0;
                        DisablePlayerCheckpoint(playerid);
                        MechanicCall = 999;
                    }
                    else
                    {
                        if(IsPlayerConnected(MechanicCall)) { if(MechanicCall == playerid) { MechanicCall = 999; } }
      for(new i = 0; i < MaiorID; i++)
                        {
                            if(IsPlayerConnected(i))
                            {
                                if(MechanicAccepted[i] < 999)
                                {
                                    if(MechanicAccepted[i] == playerid)
                                    {
                                        MechanicAccepted[i] = 999;
                                        GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
                                        MechanicCallTime[i] = 0;
                                        DisablePlayerCheckpoint(i);
                                }
                            }
                        }
                    }
                }
            }
            else if(strcmp(x_Emprego,"medico",true) == 0)
            {
                    if(MedicCallTime[playerid] > 0)
                    {
                        MedicAccepted[playerid] = 999;
                        GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
                        MedicCallTime[playerid] = 0;
                        DisablePlayerCheckpoint(playerid);
                        MedicCall = 999;
                    }
                    else
                    {
                        if(IsPlayerConnected(MedicCall)) { if(MedicCall == playerid) { MedicCall = 999; } }
      for(new i = 0; i < MaiorID; i++)
                        {
                            if(IsPlayerConnected(i))
                            {
                                if(MedicAccepted[i] < 999)
                                {
                                    if(MedicAccepted[i] == playerid)
                                    {
                                        MedicAccepted[i] = 999;
                                        GameTextForPlayer(i, "~w~Paciente~n~~r~Cancelou a Chamada", 5000, 1);
                                        MedicCallTime[i] = 0;
                                        DisablePlayerCheckpoint(i);
                                }
                            }
                        }
                    }
                }
            }
            else if(strcmp(x_Emprego,"policia",true) == 0)
            {
                    if(CopsrondaCallTime[playerid] > 0)
                    {
                        CopsrondaAccepted[playerid] = 999;
                        GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
                        CopsrondaCallTime[playerid] = 0;
                        DisablePlayerCheckpoint(playerid);
                        CopsrondaCall = 999;
                    }
                    else
                    {
                        if(IsPlayerConnected(CopsrondaCall)) { if(CopsrondaCall == playerid) { CopsrondaCall = 999; } }
      for(new i = 0; i < MaiorID; i++)
                        {
                            if(IsPlayerConnected(i))
                            {
                                if(CopsrondaAccepted[i] < 999)
                                {
                                    if(CopsrondaAccepted[i] == playerid)
                                    {
                                        CopsrondaAccepted[i] = 999;
                                        GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
                                        CopsrondaCallTime[i] = 0;
                                        DisablePlayerCheckpoint(i);
                                }
                            }
                        }
                    }
                }
            }
            else { return 1; }
            format(string, sizeof(string), "* Você cancelou: %s.", x_Emprego);
            SendClientMessage(playerid, COLOR_YELLOW, string);
        }//not connected
        return 1;
    }
//aceitar COMMANDS (Cops)
    if(strcmp(cmd,"/aceitar",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            new x_Emprego[32];
            x_Emprego = strtok(cmdtext, idx);
            if(!strlen(x_Emprego)) {
                SendClientMessage(playerid, COLOR_WHITE, "|__________________ Aceitar __________________|");
                SendClientMessage(playerid, COLOR_WHITE, "Use: aceitar [nome]");
                SendClientMessage(playerid, COLOR_GREY, "Nomes Validos: Transa, drogas, Reparo, Advogado, segurança, emprego, aovivo, Refill , Assalto");
                SendClientMessage(playerid, COLOR_GREY, "Nomes Validos: Carro, Taxi, Onibus, Boxe, Medico, Mecanico, Multa ,divorcio, mendigo, convite, Avogado");
                return 1;
            }
            if(strcmp(x_Emprego,"convite",true) == 0)
            {
                if(InviteOffer[playerid] < 999)
                {
                    if(IsPlayerConnected(InviteOffer[playerid]))
                    {
                        if(PlayerInfo[InviteOffer[playerid]][pLider] != 0)
                        {
                            if(PlayerInfo[InviteOffer[playerid]][pLider] == 1) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; ChosenSkin[playerid] = 282; SetPlayerSkinEx(playerid, 282); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 2) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; ChosenSkin[playerid] = 285; SetPlayerSkinEx(playerid, 285); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 3) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; ChosenSkin[playerid] = 287; SetPlayerSkinEx(playerid, 287); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 4) { PlayerInfo[playerid][pTeam] = 1; gTeam[playerid] = 1; ChosenSkin[playerid] = 279; SetPlayerSkinEx(playerid, 279); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 5) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; ChosenSkin[playerid] = 114; SetPlayerSkinEx(playerid, 114); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 6) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; ChosenSkin[playerid] = 121; SetPlayerSkinEx(playerid, 121); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 7) { PlayerInfo[playerid][pTeam] = 7; gTeam[playerid] = 7; ChosenSkin[playerid] = 163; SetPlayerSkinEx(playerid, 163); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 8) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 127; SetPlayerSkinEx(playerid, 127); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 9) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 148; SetPlayerSkinEx(playerid, 148); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 10) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 253; SetPlayerSkinEx(playerid, 253); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 11) { PlayerInfo[playerid][pTeam] = 25; gTeam[playerid] = 2; ChosenSkin[playerid] = 286; SetPlayerSkinEx(playerid, 286); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 12) { PlayerInfo[playerid][pTeam] = 22; gTeam[playerid] = 12; ChosenSkin[playerid] = 126; SetPlayerSkinEx(playerid, 126); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 13) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 203; SetPlayerSkinEx(playerid, 203); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 14) { PlayerInfo[playerid][pTeam] = 15; gTeam[playerid] = 12; ChosenSkin[playerid] = 107; SetPlayerSkinEx(playerid, 107); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 15) { PlayerInfo[playerid][pTeam] = 16; gTeam[playerid] = 17; ChosenSkin[playerid] = 30; SetPlayerSkinEx(playerid, 30); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 16) { PlayerInfo[playerid][pTeam] = 25; gTeam[playerid] = 2; ChosenSkin[playerid] = 59; SetPlayerSkinEx(playerid, 59); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 17) { PlayerInfo[playerid][pTeam] = 18; gTeam[playerid] = 12; ChosenSkin[playerid] = 103; SetPlayerSkinEx(playerid, 103); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 18) { PlayerInfo[playerid][pTeam] = 19; gTeam[playerid] = 12; ChosenSkin[playerid] = 109; SetPlayerSkinEx(playerid, 109); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 19) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 40; SetPlayerSkinEx(playerid, 40); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 20) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 47; SetPlayerSkinEx(playerid, 47); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 21) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 247; SetPlayerSkinEx(playerid, 247); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 22) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 181; SetPlayerSkinEx(playerid, 181); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 23) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; ChosenSkin[playerid] = 101; SetPlayerSkinEx(playerid, 101); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 24) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 127; SetPlayerSkinEx(playerid, 127); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 25) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 101; SetPlayerSkinEx(playerid, 29); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 26) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 20; ChosenSkin[playerid] = 230; SetPlayerSkinEx(playerid, 230); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 27) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 20; ChosenSkin[playerid] = 282; SetPlayerSkinEx(playerid, 282); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 28) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 20; ChosenSkin[playerid] = 282; SetPlayerSkinEx(playerid, 282); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 29) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 20; ChosenSkin[playerid] = 25; SetPlayerSkinEx(playerid, 25); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 30) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 20; ChosenSkin[playerid] = 282; SetPlayerSkinEx(playerid, 282); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 31) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 20; ChosenSkin[playerid] = 282; SetPlayerSkinEx(playerid, 282); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 32) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 20; ChosenSkin[playerid] = 282; SetPlayerSkinEx(playerid, 282); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 33) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 20; ChosenSkin[playerid] = 282; SetPlayerSkinEx(playerid, 282); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 34) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 20; ChosenSkin[playerid] = 230; SetPlayerSkinEx(playerid, 230); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 35) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 20; ChosenSkin[playerid] = 282; SetPlayerSkinEx(playerid, 282); }
                            else if(PlayerInfo[InviteOffer[playerid]][pLider] == 36) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 20; ChosenSkin[playerid] = 282; SetPlayerSkinEx(playerid, 282); }
                        }
                        else
                        {
                            if(PlayerInfo[InviteOffer[playerid]][pMembro] == 1) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; ChosenSkin[playerid] = 282; SetPlayerSkinEx(playerid, 282); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 2) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; ChosenSkin[playerid] = 285; SetPlayerSkinEx(playerid, 285); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 3) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; ChosenSkin[playerid] = 287; SetPlayerSkinEx(playerid, 287); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 4) { PlayerInfo[playerid][pTeam] = 1; gTeam[playerid] = 1; ChosenSkin[playerid] = 279; SetPlayerSkinEx(playerid, 279); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 5) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; ChosenSkin[playerid] = 114; SetPlayerSkinEx(playerid, 114); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 6) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; ChosenSkin[playerid] = 121; SetPlayerSkinEx(playerid, 121); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 7) { PlayerInfo[playerid][pTeam] = 7; gTeam[playerid] = 7; ChosenSkin[playerid] = 163; SetPlayerSkinEx(playerid, 163); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 8) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 127; SetPlayerSkinEx(playerid, 127); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 9) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 148; SetPlayerSkinEx(playerid, 148); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 10) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 253; SetPlayerSkinEx(playerid, 253); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 12) { PlayerInfo[playerid][pTeam] = 22; gTeam[playerid] = 12; ChosenSkin[playerid] = 126; SetPlayerSkinEx(playerid, 126); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 13) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 203; SetPlayerSkinEx(playerid, 203); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 14) { PlayerInfo[playerid][pTeam] = 15; gTeam[playerid] = 12; ChosenSkin[playerid] = 107; SetPlayerSkinEx(playerid, 107); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 15) { PlayerInfo[playerid][pTeam] = 16; gTeam[playerid] = 17; ChosenSkin[playerid] = 30; SetPlayerSkinEx(playerid, 30); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 16) { PlayerInfo[playerid][pTeam] = 25; gTeam[playerid] = 2; ChosenSkin[playerid] = 59; SetPlayerSkinEx(playerid, 59); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 17) { PlayerInfo[playerid][pTeam] = 18; gTeam[playerid] = 12; ChosenSkin[playerid] = 103; SetPlayerSkinEx(playerid, 103); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 18) { PlayerInfo[playerid][pTeam] = 19; gTeam[playerid] = 12; ChosenSkin[playerid] = 109; SetPlayerSkinEx(playerid, 109); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 19) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 40; SetPlayerSkinEx(playerid, 40); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 20) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 47; SetPlayerSkinEx(playerid, 47); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 21) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 247; SetPlayerSkinEx(playerid, 247); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 22) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 181; SetPlayerSkinEx(playerid, 181); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 23) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; ChosenSkin[playerid] = 101; SetPlayerSkinEx(playerid, 101); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 24) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 127; SetPlayerSkinEx(playerid, 127); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 25) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 29; SetPlayerSkinEx(playerid, 29); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 26) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 230; SetPlayerSkinEx(playerid, 230); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 27) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 230; SetPlayerSkinEx(playerid, 230); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 28) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 230; SetPlayerSkinEx(playerid, 230); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 29) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 25; SetPlayerSkinEx(playerid, 25); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 30) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 230; SetPlayerSkinEx(playerid, 230); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 31) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 230; SetPlayerSkinEx(playerid, 230); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 32) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 230; SetPlayerSkinEx(playerid, 230); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 33) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 230; SetPlayerSkinEx(playerid, 230); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 34) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 230; SetPlayerSkinEx(playerid, 230); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 35) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 230; SetPlayerSkinEx(playerid, 230); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 36) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 230; SetPlayerSkinEx(playerid, 230); }
                        }
                        PlayerInfo[playerid][pMembro] = InviteJob[playerid];
                        PlayerInfo[playerid][pCargo] = 1;

                        new rand = random(sizeof(gInviteSpawns));
                        SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]); // Warp the player
                        SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
                        SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
                        SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
                        TogglePlayerControllable(playerid, 0);

                        SelectChar[playerid] = 9999;
                        SelectCharID[playerid] = PlayerInfo[playerid][pMembro];
                        SelectCharPlace[playerid] = 1;

                        PlayerInfo[playerid][pSkin] = ChosenSkin[InviteOffer[playerid]];
                        SetPlayerSkinEx(playerid, ChosenSkin[playerid]);

                        format(gstring,sizeof(gstring), "* %s aceitou seu convite para entrar na sua organização.", PlayerName(playerid));
                        SendClientMessage(InviteOffer[playerid], COLOR_LIGHTBLUE, gstring);

                        ConviteInfoOrg(PlayerName(playerid), InviteJob[playerid], 1);
                        format(gstring, sizeof(gstring), "* Você aceitou o convite de emprego de %s para entrar para: %s, parabéns.", PlayerName(InviteOffer[playerid]), NomeORG(InviteOffer[playerid]));
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);

                        ShowPlayerDialog(playerid,101,DIALOG_STYLE_MSGBOX,"Convite da Organização","{00FFFF}Você foi convidado para uma Organização\n{FF8000}Escolha o seu skin preferido\n{0080FF}Se você gostar desse Aperte em '{00FFFF}Pronto{0080FF}'\n{0080FF}Se não gostar use '{00FFFF}Próximo{0080FF}'","Próximo","Pronto");
                        format(string,sizeof(string),"Proximo");
                        OnPlayerText(playerid,string);
                        InviteOffer[playerid] = 999;
                        InviteJob[playerid] = 0;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "    O jogador que lhe convidou não está conectado.");
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "    Você não foi convidado para nenhuma organização.");
                    return 1;
                }
            }
            else if(strcmp(x_Emprego,"assalto",true) == 0)
            {
                if(OfAssalto[playerid] < 999)
                {
                    if(IsPlayerConnected(OfAssalto[playerid]))
                    {
                        if (ProxDetectorS(5.0, playerid, OfAssalto[playerid]))
                        {
                            GetPlayerName(OfAssalto[playerid], giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "* Você aceitou um assalto de %s e pagou $%d", giveplayer, precoassalto[playerid]);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* %s aceitou seu assalto e pagou $%d.", sendername, precoassalto[playerid]);
                            SendClientMessage(OfAssalto[playerid], COLOR_LIGHTBLUE, string);
                            SendClientMessage(TicketOffer[playerid], COLOR_LIGHTBLUE, string);
                            GivePlayerMoney(playerid, - precoassalto[playerid]);
                            GivePlayerMoney(OfAssalto[playerid], precoassalto[playerid]);
                            SetPlayerCriminal(OfAssalto[playerid],255, "Assalto");
                            OfAssalto[playerid] = 999;
                            precoassalto[playerid] = 0;
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   O Assaltante está longe de você!");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não foi assaltado!");
                    return 1;
                }
            }
            else if(strcmp(x_Emprego,"vida",true) == 0)
            {
                if(CurarAtivo[playerid] != 999)
                {
                    if(IsPlayerConnected(CurarAtivo[playerid]) && IsPlayerConnected(playerid))
                    {
                            GetPlayerName(CurarAtivo[playerid], giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "~y~Voce foi curado ~n~~w~Medico: %s~n~~g~R$%d", giveplayer,CurarPreco[playerid]);
                            GameTextForPlayer(playerid, string, 5000, 1);
                            GivePlayerMoney(CurarAtivo[playerid],CurarPreco[playerid]);
                            GivePlayerMoney(playerid,-CurarPreco[playerid]);
                            new hp = 0;
                            if(PlayerInfo[playerid][pPainPerk] > 0)
                            {
                                hp = 20 * PlayerInfo[CurarAtivo[playerid]][pPainPerk]; hp += 100;
                                SetPlayerHealth(playerid, hp);
                            }
                            else
                            {
                                hp = 100;
                                SetPlayerHealth(playerid, 100);
                                PlayerInfo[playerid][pDoenca] = 0;
                            }
                            new colete = 0;
                            if(PlayerInfo[playerid][pPainPerk] > 0)
                            {
                                colete = 0 * PlayerInfo[CurarAtivo[playerid]][pPainPerk]; colete += 100;
                                SetPlayerArmour(playerid, colete);
                            }
                            else
                            {
                                colete = 100;
                                SetPlayerArmour(playerid, 100);
                                PlayerInfo[playerid][pDoenca] = 0;
                            }
                            PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
                            PlayerPlaySound(CurarAtivo[playerid], 1150, 0.0, 0.0, 0.0);
                            format(string, sizeof(string), "%s Aceitou a Cura, %d de saude e %d de colete por R$%d",sendername,hp,colete,CurarPreco[playerid]);
                            SendClientMessage(CurarAtivo[playerid], COLOR_LIGHTBLUE,string);
                            CurarAtivo[playerid] = 999;
                            CurarPreco[playerid] = 0;
                            if(PlayerInfo[playerid][pDoenca] > 0)
                            {
                                PlayerInfo[playerid][pDoenca] = 0;
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você não está infectado com nenhuma doença, por causa de cuidados medicos!");
                            }
                            return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu Cura!!");
                    return 1;
                }
            }
            else if(strcmp(x_Emprego,"divorcio",true) == 0)
            {
                if(DivorceOffer[playerid] < 999)
                {
                    if(IsPlayerConnected(DivorceOffer[playerid]))
                    {
                        if(ProxDetectorS(10.0, playerid, DivorceOffer[playerid]))
                        {
                            GetPlayerName(DivorceOffer[playerid], giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "* Voce aceitou o pedido de %s para ser testemunha de seu divorcio.", giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* %s aceitou o seu pedido para ser testemunha do seu divorcio.", sendername);
                            SendClientMessage(DivorceOffer[playerid], COLOR_LIGHTBLUE, string);
                            ClearMarriage(playerid);
                            ClearMarriage(DivorceOffer[playerid]);
                            PlayerInfo[playerid][pPHousekey] = 9999;
                            PlayerInfo[playerid][pPbiskey] = 9999;
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   O jogador que te enviou os papéis do divórcio não está perto de você!");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te enviou qualquer papel de divórcio!");
                    return 1;
                }
            }
            else if(strcmp(x_Emprego,"padrinho",true) == 0)
            {
                if(MarryWitnessOffer[playerid] < 999)
                {
                    if(IsPlayerConnected(MarryWitnessOffer[playerid]))
                    {
                        if(ProxDetectorS(10.0, playerid, MarryWitnessOffer[playerid]))
                        {
                            GetPlayerName(MarryWitnessOffer[playerid], giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "* Você aceitou o pedido de %s para ser padrinho de seu casamento.", giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* %s aceitou o seu pedido para ser padrinho do seu casamento.", sendername);
                            SendClientMessage(MarryWitnessOffer[playerid], COLOR_LIGHTBLUE, string);
                            MarryWitness[MarryWitnessOffer[playerid]] = playerid;
                            MarryWitnessOffer[playerid] = 999;
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   O jogador que pediu para ser padrinho de seu casamento não está perto de você!");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Ninguem pediu para ser padrinho de seu casamento!");
                    return 1;
                }
            }
            else if(strcmp(x_Emprego,"casamento",true) == 0)
            {
                if(ProposeOffer[playerid] < 999)
                {
                    if(!PlayerToPoint(10.0, playerid, 2233.8225,-1333.2725,23.9816))
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Você não está na igreja de Los Santos !");
                        return 1;
                    }
                    if(IsPlayerConnected(ProposeOffer[playerid]))
                    {
                        if(ProxDetectorS(10.0, playerid, ProposeOffer[playerid]))
                        {
                            if(MarryWitness[ProposeOffer[playerid]] == 999)
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   O jogador não possui um padrinho de casamento!");
                                return 1;
                            }
                            if(IsPlayerConnected(MarryWitness[ProposeOffer[playerid]]))
                            {
                                if(ProxDetectorS(12.0, ProposeOffer[playerid], MarryWitness[ProposeOffer[playerid]]))
                                {
                                    GetPlayerName(ProposeOffer[playerid], giveplayer, sizeof(giveplayer));
                                    GetPlayerName(playerid, sendername, sizeof(sendername));
                                    format(string, sizeof(string), "* Voce aceitou o pedido de %s para ser seu marido.", giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* %s aceitou o seu pedido para ser sua esposa.", sendername);
                                    SendClientMessage(ProposeOffer[playerid], COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "Padre: %s voce aceita %s como seu legitimo marido? (use 'sim', qualquer outra coisa cancela o casamento)", sendername, giveplayer);
                                    SendClientMessage(playerid, COLOR_WHITE, string);
                                    MarriageCeremoney[playerid] = 1;
                                    ProposedTo[ProposeOffer[playerid]] = playerid;
                                    GotProposedBy[playerid] = ProposeOffer[playerid];
                                    MarryWitness[ProposeOffer[playerid]] = 999;
                                    ProposeOffer[playerid] = 999;
                                    return 1;
                                }
                                else
                                {
                                    SendClientMessage(playerid, COLOR_GREY, "   O padrinho de casamento nao esta perto de sua noiva/noivo!");
                                    return 1;
                                }
                            }
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "  O jogador não esta perto de você!");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te fez uma proposta!");
                    return 1;
                }
            }
            else if(strcmp(x_Emprego,"multa",true) == 0)
            {
                if(TicketOffer[playerid] < 999)
                {
                    if(IsPlayerConnected(TicketOffer[playerid]))
                    {
                        if (ProxDetectorS(5.0, playerid, TicketOffer[playerid]))
                        {
                            GetPlayerName(TicketOffer[playerid], giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "* Você pagou a multa de $%d para o Oficial %s.", TicketMoney[playerid], giveplayer);
                            SendClientMessage(playerid, COLOR_WHITE, string);
                            format(string, sizeof(string), "* %s pagou a multa de $%d.", sendername, TicketMoney[playerid]);
                            SendClientMessage(TicketOffer[playerid], COLOR_WHITE, string);
                            GivePlayerMoney(playerid, - TicketMoney[playerid]);
                            GivePlayerMoney(TicketOffer[playerid], TicketMoney[playerid]);
                            TicketOffer[playerid] = 999;
                            TicketMoney[playerid] = 0;
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "O policial não está perto de você !");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "Ninguem lhe deu uma multa !");
                    return 1;
                }
            }
            else if(strcmp(x_Emprego,"boxe",true) == 0)
            {
                if(BoxOffer[playerid] < 999)
                {
                    if(IsPlayerConnected(BoxOffer[playerid]))
                    {
                        new points;
                        new mypoints;
                        GetPlayerName(BoxOffer[playerid], giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        new level = PlayerInfo[BoxOffer[playerid]][pBoxSkill];
                        if(level >= 0 && level <= 50) { points = 40; }
                        else if(level >= 51 && level <= 100) { points = 50; }
                        else if(level >= 101 && level <= 200) { points = 60; }
                        else if(level >= 201 && level <= 400) { points = 70; }
                        else if(level >= 401) { points = 80; }
                        if(PlayerInfo[playerid][pEmprego] == 8)
                        {
                            new clevel = PlayerInfo[playerid][pBoxSkill];
                            if(clevel >= 0 && clevel <= 50) { mypoints = 40; }
                            else if(clevel >= 51 && clevel <= 100) { mypoints = 50; }
                            else if(clevel >= 101 && clevel <= 200) { mypoints = 60; }
                            else if(clevel >= 201 && clevel <= 400) { mypoints = 70; }
                            else if(clevel >= 401) { mypoints = 80; }
                        }
                        else
                        {
                            mypoints = 30;
                        }
                        format(string, sizeof(string), "* Você aceitou a luta de boxe de %s, e irá lutar com %d de saúde.",giveplayer,mypoints);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* %s aceitou seu pedido para a luta de boxe, você irá lutar com %d de saúde.",sendername,points);
                        SendClientMessage(BoxOffer[playerid], COLOR_LIGHTBLUE, string);
                        SetPlayerHealth(playerid, mypoints);
                        SetPlayerHealth(BoxOffer[playerid], points);
                        SetPlayerInterior(playerid, 5); SetPlayerInterior(BoxOffer[playerid], 5);
                        SetPlayerPos(playerid, 762.9852,2.4439,1001.5942); SetPlayerFacingAngle(playerid, 131.8632);
                        SetPlayerPos(BoxOffer[playerid], 758.7064,-1.8038,1001.5942); SetPlayerFacingAngle(BoxOffer[playerid], 313.1165);
                        TogglePlayerControllable(playerid, 0); TogglePlayerControllable(BoxOffer[playerid], 0);
                        GameTextForPlayer(playerid, "~r~Esperando", 3000, 1); GameTextForPlayer(BoxOffer[playerid], "~r~Esperando", 3000, 1);
                        new name[MAX_PLAYER_NAME];
                        new dstring[MAX_PLAYER_NAME];
                        new wstring[MAX_PLAYER_NAME];
                        GetPlayerName(playerid, name, sizeof(name));
                        format(dstring, sizeof(dstring), "%s", name);
                        strmid(wstring, dstring, 0, strlen(dstring), 255);
                        if(strcmp(Titel[TitelName] ,wstring, true ) == 0 )
                        {
                            format(string, sizeof(string), "Notícias do Boxe: Lutador de Boxe %s lutará contra %s, em 60 segundos no Ginásio da Groove Street.",  sendername, giveplayer);
                            OOCNews(COLOR_WHITE,string);
                            TBoxer = playerid;
                            BoxDelay = 60;
                        }
                        GetPlayerName(BoxOffer[playerid], name, sizeof(name));
                        format(dstring, sizeof(dstring), "%s", name);
                        strmid(wstring, dstring, 0, strlen(dstring), 255);
                        if(strcmp(Titel[TitelName] ,wstring, true ) == 0 )
                        {
                            format(string, sizeof(string), "Notícias do Boxe: Lutador de Boxe %s lutará contra %s, em 60 segundos no Ginásio da Groove Street.",  giveplayer, sendername);
                            OOCNews(COLOR_WHITE,string);
                            TBoxer = BoxOffer[playerid];
                            BoxDelay = 60;
                        }
                        BoxWaitTime[playerid] = 1; BoxWaitTime[BoxOffer[playerid]] = 1;
                        if(BoxDelay < 1) { BoxDelay = 20; }
                        InRing = 1;
                        Boxer1 = BoxOffer[playerid];
                        Boxer2 = playerid;
                        PlayerBoxing[playerid] = 1;
                        PlayerBoxing[BoxOffer[playerid]] = 1;
                        BoxOffer[playerid] = 999;
                        return 1;
                    }
                    return 1;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te convidou para uma luta !");
                    return 1;
                }
            }
            else if(strcmp(x_Emprego,"mototaxi",true) == 0)
            {
                if(TransportDuty[playerid] != 1)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não está em corrida, USE: /corrida !");
                    return 1;
                }
                if(TaxiCallTime[playerid] > 0)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você já aceitou uma chamada de Moto-Taxi !");
                    return 1;
                }
                if(TaxiCall < 999)
                {
                    if(IsPlayerConnected(TaxiCall))
                    {
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        GetPlayerName(TaxiCall, giveplayer, sizeof(giveplayer));
                        format(string, sizeof(string), "* Você aceitou a chamada do(a) %s, A marca estará visível até você chegar.",giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Moto-Taxi : %s aceitou sua chamada, se mantenha neste local e espere chegar.",sendername);
                        SendClientMessage(TaxiCall, COLOR_LIGHTBLUE, string);
                        GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
                        TaxiCallTime[playerid] = 1;
                        TaxiAccepted[playerid] = TaxiCall;
                        TaxiCall = 999;
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Não tem nenhuma chamada de taxi no momento !");
                    return 1;
                }
            }
            else if(strcmp(x_Emprego,"advogado",true) == 0)
            {
                if(IsPlayerConnected(ChamoAd))
                {
                    new texto[256];
                    if(PlayerInfo[ChamoAd][pJailed] == 1) { texto = "da Policia Militar"; }
                    if(PlayerInfo[ChamoAd][pJailed] == 4) { texto = "da R.O.T.A"; }
                    if(PlayerInfo[ChamoAd][pJailed] == 44) { texto = "do BPM"; }
                    if(PlayerInfo[ChamoAd][pJailed] == 55) { texto = "das Exercito"; }
                    if(PlayerInfo[ChamoAd][pJailed] == 7) { texto = "5 BOPE"; }
                    if(PlayerInfo[ChamoAd][pJailed] == 3) { texto = "3 Policia Rodoviaria Federal"; }
                    if(PlayerInfo[ChamoAd][pJailed] == 7) { texto = "das Exército"; }
                    if(PlayerInfo[ChamoAd][pJailed] == 40) { texto = "da Policia Civil"; }
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(ChamoAd, giveplayer, sizeof(giveplayer));
                    format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, Va ate a prisao %s",giveplayer,texto);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "* Advogado : %s aceitou sua chamada e esta vindo negociar.",sendername);
                    SendClientMessage(ChamoAd, COLOR_LIGHTBLUE, string);
                    //SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar Avogado !");
                    return 1;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Não tem nenhuma chamada de taxi no momento !");
                    return 1;
                }
            }
            else if(strcmp(x_Emprego,"taxi",true) == 0)
            {
                if(TransportDuty[playerid] != 1)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não está em corrida, USE: /corrida !");
                    return 1;
                }
                if(TaxiCallTime[playerid] > 0)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você já aceitou uma chamada de Taáxi !");
                    return 1;
                }
                if(TaxiCall < 999)
                {
                    if(IsPlayerConnected(TaxiCall))
                    {
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        GetPlayerName(TaxiCall, giveplayer, sizeof(giveplayer));
                        format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estará visível até você chegar.",giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Taxista : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",sendername);
                        SendClientMessage(TaxiCall, COLOR_LIGHTBLUE, string);
                        GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
                        SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar taxi !");
                        TaxiCallTime[playerid] = 1;
                        TaxiAccepted[playerid] = TaxiCall;
                        TaxiCall = 999;
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Não tem nenhuma chamada de taxi no momento !");
                    return 1;
                }
            }
            else if(strcmp(x_Emprego,"onibus",true) == 0)
            {
                if(TransportDuty[playerid] != 2)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não está em corrida, USE: /corrida !");
                    return 1;
                }
                if(BusCallTime[playerid] > 0)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você já aceitou a chamada de Onibus !");
                    return 1;
                }
                if(BusCall < 999)
                {
                    if(IsPlayerConnected(BusCall))
                    {
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        GetPlayerName(BusCall, giveplayer, sizeof(giveplayer));
                        format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estará visível até você chegar.",giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Motorista : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",sendername);
                        SendClientMessage(BusCall, COLOR_LIGHTBLUE, string);
                        GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
                        SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar onibus !");
                        BusCallTime[playerid] = 1;
                        BusAccepted[playerid] = BusCall;
                        BusCall = 999;
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Não tem nenhuma chamada de onibus no momento !");
                    return 1;
                }
            }
            else if(strcmp(x_Emprego,"medico",true) == 0)
            {
                if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
                {
                    if(MedicCallTime[playerid] > 0)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Você já aceitou um chamado medico!");
                        return 1;
                    }
                    if(MedicCall < 999)
                    {
                    if(IsPlayerConnected(MedicCall))
                    {
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        GetPlayerName(MedicCall, giveplayer, sizeof(giveplayer));
                        format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estará visível até você chegar.",giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Medico : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",sendername);
                        SendClientMessage(MedicCall, COLOR_LIGHTBLUE, string);
                        GameTextForPlayer(playerid, "~w~Cliente~n~~r~Ir Ate a Marca Vermelha", 5000, 1);
                        SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar medico !");
                        MedicCallTime[playerid] = 1;
                        MedicAccepted[playerid] = MedicCall;
                        MedicCall = 999;
                        return 1;
                    }
                }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Nenhuma chamada de médico no momento !");
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não é um Medico !");
                    return 1;
                }
            }
            else if(strcmp(x_Emprego,"mecanico",true) == 0)
            {
             if(PlayerInfo[playerid][pEmprego] == 5)
             {
                if(MechanicCallTime[playerid] > 0)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você já aceitou uma chamada de mecanico!");
                    return 1;
                }
                if(MechanicCall < 999)
                {
                    if(IsPlayerConnected(MechanicCall))
                    {
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        GetPlayerName(MechanicCall, giveplayer, sizeof(giveplayer));
                        format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estará visível até você chegar.",giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Mecanico : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",sendername);
                        SendClientMessage(MechanicCall, COLOR_LIGHTBLUE, string);
                        GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
                        SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar mecanico !");
                        MechanicCallTime[playerid] = 1;
                        MechanicAccepted[playerid] = MechanicCall;
                        MechanicCall = 999;
                        return 1;
                    }
                }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Nenhuma chamada de mecânico no momento !");
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não é um mecânico !");
                    return 1;
                }
            }
            else if(strcmp(x_Emprego,"chamada",true) == 0)
            {
                if(IsACop(playerid))
                {
                    if(CopsrondaCallTime[playerid] > 0)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Você aceitou o chamado!");
                        return 1;
                    }
                    if(PolicialInRonda[playerid] == 1)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Você já está em um chamado...");
                        return 1;
                    }
                    if(CopsrondaCall < 999)
                    {
                    if(IsPlayerConnected(CopsrondaCall))
                    {
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        GetPlayerName(CopsrondaCall, giveplayer, sizeof(giveplayer));
                        format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estará visível até você chegar.",giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Policial : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",sendername);
                        SendClientMessage(CopsrondaCall, COLOR_LIGHTBLUE, string);
                        GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
                        SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar policia !");
                        CopsrondaCallTime[playerid] = 1;
                        CopsrondaAccepted[playerid] = CopsrondaCall;
                        CopsrondaCall = 999;
                        return 1;
                    }
                }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Ninguem solicitou um policial ");
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não é um Policial !");
                    return 1;
                }
            }
            else if(strcmp(x_Emprego,"emprego",true) == 0)
            {
                if(PlayerInfo[playerid][pEmprego] != 0)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você tem um emprego digite /sairdoemprego para sair do emprego.");
                    return 1;
                }
                if(GettingEmprego[playerid] > 0)
                {
                    //SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você já completou seu tempo de contrato!.");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Boa sorte com seu novo emprego,digite /ajudaemprego para saber seus comandos!");
                    PlayerInfo[playerid][pEmprego] = GettingEmprego[playerid];
                    GettingEmprego[playerid] = 0;
                    return 1;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você ainda não esta no lugar de um emprego!");
                    return 1;
                }
            }
            else if(strcmp(x_Emprego,"abastecimento",true) == 0)
            {
                if(RefillOffer[playerid] < 999)
                {
                    if(IsPlayerConnected(RefillOffer[playerid]))
                    {
                        if(GetPlayerMoneyEx(playerid) > RefillPrice[playerid])
                        {
                            if(IsPlayerInAnyVehicle(playerid))
                            {
                                GetPlayerName(RefillOffer[playerid], giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                new car = GetPlayerVehicleID(playerid);
                                new fuel;
                                PlayerInfo[RefillOffer[playerid]][pMechSkill] ++;
                                if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 50)
                                { SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Sua habilidade de mecânico agora é nível 2, agora você pode abastecer com 40 de combustivel"); }
                                else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 100)
                                { SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Sua habilidade de mecânico agora é nível 3, agora você pode abastecer com 60 de combustivel."); }
                                else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 200)
                                { SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Sua habilidade de mecânico agora é nível 4, agora você pode abastecer com 80 de combustivel."); }
                                else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 400)
                                { SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Sua habilidade de mecânico agora é nível 5, agora você pode abastecer com 100 de combustivel."); }
                                new level = PlayerInfo[RefillOffer[playerid]][pMechSkill];
                                if(level >= 0 && level <= 50)
                                { fuel = 15; }
                                else if(level >= 51 && level <= 100)
                                { fuel = 40; }
                                else if(level >= 101 && level <= 200)
                                { fuel = 60; }
                                else if(level >= 201 && level <= 400)
                                { fuel = 80; }
                                else if(level >= 401)
                                { fuel = 100; }
                                format(string, sizeof(string), "* Seu veículo foi abastecido com %d% de combustível por $%d pelo mecânico %s.",fuel,RefillPrice[playerid],giveplayer);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "* Você abasteceu o carro de %s com %d% de combustível por $%d, esse dinheiro será adicionado ao seu salário.",sendername,fuel,RefillPrice[playerid]);
                                SendClientMessage(RefillOffer[playerid], COLOR_LIGHTBLUE, string);
                                PlayerInfo[RefillOffer[playerid]][pSalario] += RefillPrice[playerid];
                                GivePlayerMoney(playerid, -RefillPrice[playerid]);
                                if(Gas[car] < 100) { Gas[car] += fuel; }
                                if(Gas[car] > 100) { Gas[car] = 100; }
                                RefillOffer[playerid] = 999;
                                RefillPrice[playerid] = 0;
                                return 1;
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não está em um carro!");
                                return 1;
                            }
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você não pode pagar pelo abastecimento !");
                            return 1;
                        }
                    }
                    return 1;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Ninguem ofereceu abastecimento para seu carro!");
                    return 1;
                }
            }
            else if(strcmp(x_Emprego,"aovivo",true) == 0)
            {
                if(LiveOffer[playerid] < 999)
                {
                    if(IsPlayerConnected(LiveOffer[playerid]))
                    {
                        if (ProxDetectorS(5.0, playerid, LiveOffer[playerid]))
                        {
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você está congelado até o final da conversa.");
                            SendClientMessage(LiveOffer[playerid], COLOR_LIGHTBLUE, "* Você está congelado até o final da conversa (use /aovivo denovo).");
                            TogglePlayerControllable(playerid, 0);
                            TogglePlayerControllable(LiveOffer[playerid], 0);
                            TalkingLive[playerid] = LiveOffer[playerid];
                            TalkingLive[LiveOffer[playerid]] = playerid;
                            LiveOffer[playerid] = 999;
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você está longe do repórter !");
                            return 1;
                        }
                    }
                    return 1;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu uma conversa ao vivo!");
                    return 1;
                }
            }
            else if(strcmp(x_Emprego,"Advogado",true) == 0)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: /aceitar Advogado [id]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                if (IsACop(playerid))
                {
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                            if(PlayerInfo[giveplayerid][pEmprego] == 2)
                            {
                                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                format(string, sizeof(string), "* Você autorizou %s para liberar um preso.", giveplayer);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
                                format(string, sizeof(string), "* Oficial %s te autorizou a soltar alguem da prisão. (use /soltar)", sendername);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE,string);
                                ApprovedAdvogado[giveplayerid] = 1;
                                return 1;
                            }
                        }
                    }
                    return 1;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "Ação Invalida! (Você não é um policial)");
                    return 1;
                }
            }
            else if(strcmp(x_Emprego,"seguranca",true) == 0)
            {
                if(GuardOffer[playerid] < 999)
                {
                    if(GetPlayerMoneyEx(playerid) > GuardPrice[playerid])
                    {
                        if(IsPlayerConnected(GuardOffer[playerid]))
                        {
                            GetPlayerName(GuardOffer[playerid], giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "* Você aceitou a proteção por R$%d do Segurança: %s.",GuardPrice[playerid],giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* %s aceitou sua proteção, e R$%d será adicionado no seu salário.",sendername,GuardPrice[playerid]);
                            SendClientMessage(GuardOffer[playerid], COLOR_LIGHTBLUE, string);
                            PlayerInfo[GuardOffer[playerid]][pSalario] += GuardPrice[playerid];
                            GivePlayerMoney(playerid, -GuardPrice[playerid]);
                            GuardOffer[playerid] = 999;
                            GuardPrice[playerid] = 0;
                            return 1;
                        }
                        return 1;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Você não pode pagar pela proteção !");
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu proteção!");
                    return 1;
                }
            }
            else if(strcmp(x_Emprego,"maconha",true) == 0)
            {
                if(DrugOffer[playerid] < 999)
                {
                    if(GetPlayerMoneyEx(playerid) > DrugPrice[playerid])
                    {
                        if(PlayerInfo[playerid][pDrogas] < 7)
                        {
                            if(IsPlayerConnected(DrugOffer[playerid]))
                            {
                                GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                format(string, sizeof(string), "* você comprou %d gramas de maconha do traficante: %s por R$%d.",DrugGram[playerid],giveplayer,DrugPrice[playerid]);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "* %s comprou suas %d gramas de maconha, e R$%d será adicionado no seu salário.",sendername,DrugGram[playerid],DrugPrice[playerid]);
                                SendClientMessage(DrugOffer[playerid], COLOR_LIGHTBLUE, string);
                                PlayerInfo[DrugOffer[playerid]][pSalario] += DrugPrice[playerid];
                                PlayerInfo[DrugOffer[playerid]][pDrogasSkill] ++;
                                GivePlayerMoney(playerid, -DrugPrice[playerid]);
                                PlayerInfo[playerid][pDrogas] += DrugGram[playerid];
                                PlayerInfo[DrugOffer[playerid]][pDrogas] -= DrugGram[playerid];
                                if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 50)
                                { SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 2, e você pode comprar mais erva por um preço mais barato."); }
                                else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 100)
                                { SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 3, e você pode comprar mais erva por um preço mais barato."); }
                                else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 200)
                                { SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 4, e você pode comprar mais erva por um preço mais barato."); }
                                else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 400)
                                { SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 5, e você pode comprar mais erva por um preço mais barato."); }
                                DrugOffer[playerid] = 999;
                                DrugPrice[playerid] = 0;
                                DrugGram[playerid] = 0;
                                return 1;
                            }
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você está totalmente carregado com maconha, use ou venda primeiro !");
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Você não pode pagar essas maconhas !");
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu maconha !");
                    return 1;
                }
            }
            else if(strcmp(x_Emprego,"cocaina",true) == 0)
            {
                if(DrugOffer[playerid] < 999)
                {
                    if(GetPlayerMoneyEx(playerid) > DrugPrice[playerid])
                    {
                        if(PlayerInfo[playerid][pDrogas2] < 7)
                        {
                            if(IsPlayerConnected(DrugOffer[playerid]))
                            {
                                GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                format(string, sizeof(string), "* você comprou %d gramas de cocaína do traficante: %s por R$%d.",DrugGram[playerid],giveplayer,DrugPrice[playerid]);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "* %s comprou suas %d gramas de cocaína, e R$%d será adicionado no seu salário.",sendername,DrugGram[playerid],DrugPrice[playerid]);
                                SendClientMessage(DrugOffer[playerid], COLOR_LIGHTBLUE, string);
                                PlayerInfo[DrugOffer[playerid]][pSalario] += DrugPrice[playerid];
                                PlayerInfo[DrugOffer[playerid]][pDrogasSkill] ++;
                                GivePlayerMoney(playerid, -DrugPrice[playerid]);
                                PlayerInfo[playerid][pDrogas2] += DrugGram[playerid];
                                PlayerInfo[DrugOffer[playerid]][pDrogas2] -= DrugGram[playerid];
                                if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 50)
                                { SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 2, e você pode comprar mais pó por um preço mais barato."); }
                                else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 100)
                                { SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 3, e você pode comprar mais pó por um preço mais barato."); }
                                else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 200)
                                { SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 4, e você pode comprar mais pó por um preço mais barato."); }
                                else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 400)
                                { SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 5, e você pode comprar mais pó por um preço mais barato."); }
                                DrugOffer[playerid] = 999;
                                DrugPrice[playerid] = 0;
                                DrugGram[playerid] = 0;
                                return 1;
                            }
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você está carregado com crack, use ou venda primeiro !");
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Você não pode pagar por essa cocaína !");
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu cocaína !");
                    return 1;
                }
            }
            else if(strcmp(x_Emprego,"crack",true) == 0)
            {
                if(DrugOffer[playerid] < 999)
                {
                    if(GetPlayerMoneyEx(playerid) > DrugPrice[playerid])
                    {
                        if(PlayerInfo[playerid][pDrogas3] < 7)
                        {
                            if(IsPlayerConnected(DrugOffer[playerid]))
                            {
                                GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                format(string, sizeof(string), "* você comprou %d pedras de crack do traficante: %s por R$%d.",DrugGram[playerid],giveplayer,DrugPrice[playerid]);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "* %s comprou suas %d pedras de crack, e R$%d será adicionado no seu salário.",sendername,DrugGram[playerid],DrugPrice[playerid]);
                                SendClientMessage(DrugOffer[playerid], COLOR_LIGHTBLUE, string);
                                PlayerInfo[DrugOffer[playerid]][pSalario] += DrugPrice[playerid];
                                PlayerInfo[DrugOffer[playerid]][pDrogasSkill] ++;
                                GivePlayerMoney(playerid, -DrugPrice[playerid]);
                                PlayerInfo[playerid][pDrogas3] += DrugGram[playerid];
                                PlayerInfo[DrugOffer[playerid]][pDrogas3] -= DrugGram[playerid];
                                if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 50)
                                { SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 2, e você pode comprar mais pedras por um preço mais barato."); }
                                else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 100)
                                { SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 3, e você pode comprar mais pedras por um preço mais barato."); }
                                else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 200)
                                { SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 4, e você pode comprar mais pedras por um preço mais barato."); }
                                else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 400)
                                { SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 5, e você pode comprar mais pedras por um preço mais barato."); }
                                DrugOffer[playerid] = 999;
                                DrugPrice[playerid] = 0;
                                DrugGram[playerid] = 0;
                                return 1;
                            }
                            return 1;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você está carregado com crack, use ou venda primeiro !");
                            return 1;
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Você não pode pagar por esse crack !");
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu crack !");
                    return 1;
                }
            }
            else if(strcmp(x_Emprego,"mendigo",true) == 0)
            {
                if(MendigoOffer[playerid] < 999)
                {
                    if(GetPlayerMoneyEx(playerid) > MendigoPrice[playerid])
                    {
                        if (IsPlayerConnected(MendigoOffer[playerid]))
                        {
                            GetPlayerName(MendigoOffer[playerid], giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "* Você deu um esmola de R$%d, para R$%s.",MendigoPrice[playerid] ,giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* %s te deu uma esmola de R$%d", sendername, MendigoPrice[playerid]);
                            SendClientMessage(MendigoOffer[playerid], COLOR_LIGHTBLUE, string);
                            GivePlayerMoney(playerid, -MendigoPrice[playerid]);
                            GivePlayerMoney(MendigoOffer[playerid], MendigoPrice[playerid]);
                            MendigoPrice[playerid] = 0;
                            MendigoOffer[playerid] = 999;
                            return 1;
                        }//Connected ou not
                        return 1;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Você não pode pagar a esmola!");
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não tem nenhum pedido de esmola!");
                    return 1;
                }
            }
            else if(strcmp(x_Emprego,"transa",true) == 0)
            {
                if(SexOffer[playerid] < 999)
                {
                    if(GetPlayerMoneyEx(playerid) > SexPrice[playerid])
                    {
                        if (IsPlayerConnected(SexOffer[playerid]))
                        {
                            new Car = GetPlayerVehicleID(playerid);
                            if(IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(SexOffer[playerid], Car))
                            {
                                GetPlayerName(SexOffer[playerid], giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                format(string, sizeof(string), "* Você fez sexo com a profissional do sexo %s, por R$%d.", giveplayer, SexPrice[playerid]);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "* %s teve relações sexuais com você, R$%d foi adicionado em seu salário.", sendername, SexPrice[playerid]);
                                SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, string);
                                PlayerInfo[SexOffer[playerid]][pSalario] += SexPrice[playerid];
                                GivePlayerMoney(playerid, -SexPrice[playerid]);
                                PlayerInfo[SexOffer[playerid]][pSexSkill] ++;
                                if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 50)
                                { SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Seu nível de sexo agora é 2, e pode oferecer uma melhor Sexo (saúde) e menos chance de DST."); }
                                else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 100)
                                { SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Seu nível de sexo agora é 3, e pode oferecer uma melhor Sexo (saúde) e menos chance de DST."); }
                                else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 200)
                                { SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Seu nível de sexo agora é 4, e pode oferecer uma melhor Sexo (saúde) e menos chance de DST."); }
                                else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 400)
                                { SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Seu nível de sexo agora é 5, e pode oferecer uma melhor Sexo (saúde) e menos chance de DST."); }
                                if(PlayerInfo[playerid][pDoenca] == 0)
                                {
                                    if(Condom[playerid] < 1)
                                    {
                                        new Float:health;
                                        new level = PlayerInfo[SexOffer[playerid]][pSexSkill];
                                        if(level >= 0 && level <= 50)
                                        {
                                            if(GetPlayerHealth(playerid, health) < 80) {
                                            SetPlayerHealth(playerid, health + 20.0); } else { SetPlayerHealth(playerid, 100.0); }
                                            new rand = random(sizeof(STD1));
                                            PlayerInfo[playerid][pDoenca] = STD1[rand];
                                            PlayerInfo[SexOffer[playerid]][pDoenca] = STD1[rand];
                                            if(STD1[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 20 de Saúde e não pegou nenhuma DST durante o sexo."); }
                                            else if(STD1[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 20 de Saúde + uma Pereba no CU devido ao sexo."); }
                                            else if(STD1[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 20 de Saúde + uma Duenca na Cabeca do Pau devido ao sexo."); }
                                            else if(STD1[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 20 de Saúde + uma Duenca na Buceta devido ao sexo."); }
                                        }
                                        else if(level >= 51 && level <= 100)
                                        {
                                            if(GetPlayerHealth(playerid, health) < 60) {
                                            SetPlayerHealth(playerid, health + 40.0); } else { SetPlayerHealth(playerid, 100.0); }
                                            new rand = random(sizeof(STD2));
                                            PlayerInfo[playerid][pDoenca] = STD2[rand];
                                            PlayerInfo[SexOffer[playerid]][pDoenca] = STD2[rand];
                                            if(STD2[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 40 de Saúde e não pegou nenhuma DST durante o sexo."); }
                                            else if(STD2[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 40 de Saúde + um Pereba no CU devido ao Sexo."); }
                                            else if(STD2[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 40 de Saúde + um Duenca na Cabeca do Pau devido ao Sexo."); }
                                            else if(STD2[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 40 de Saúde + uma Duenca na Buceta devido ao Sexo."); }
                                        }
                                        else if(level >= 101 && level <= 200)
                                        {
                                            if(GetPlayerHealth(playerid, health) < 40) {
                                            SetPlayerHealth(playerid, health + 60.0); } else { SetPlayerHealth(playerid, 100.0); }
                                            new rand = random(sizeof(STD3));
                                            PlayerInfo[playerid][pDoenca] = STD3[rand];
                                            PlayerInfo[SexOffer[playerid]][pDoenca] = STD3[rand];
                                            if(STD3[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 60 de Saúde e não pegou nenhuma DST durante o sexo."); }
                                            else if(STD3[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 60 de Saúde + um Pereba no CU devido ao Sexo."); }
                                            else if(STD3[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 60 de Saúde + um Duenca na Cabeca do Pau devido ao Sexo."); }
                                            else if(STD3[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 60 de Saúde + uma Duenca na Buceta devido ao Sexo."); }
                                        }
                                        else if(level >= 201 && level <= 400)
                                        {
                                            if(GetPlayerHealth(playerid, health) < 20) {
                                            SetPlayerHealth(playerid, health + 80.0); } else { SetPlayerHealth(playerid, 100.0); }
                                            new rand = random(sizeof(STD4));
                                            PlayerInfo[playerid][pDoenca] = STD4[rand];
                                            PlayerInfo[SexOffer[playerid]][pDoenca] = STD4[rand];
                                            if(STD4[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 80 de Saúde + DST enquanto não ter relações sexuais."); }
                                            else if(STD4[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 80 de Saúde + um Pereba no CU devido ao Sexo."); }
                                            else if(STD4[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 80 de Saúde + um Duenca na Cabeca do Pau devido ao Sexo."); }
                                            else if(STD4[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 80 de Saúde + uma Duenca na Buceta devido ao Sexo."); }
                                        }
                                        else if(level >= 401)
                                        {
                                            SetPlayerHealth(playerid, 100.0);
                                            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Seu nível de sexo é tão alto que você ganhou 100% de saúde e nenhuma DST.");
                                            SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* A Prostitura tem um nível de sexo tão alto que você ganhou 100% de saúde e nenhuma DST.");
                                        }
                                    }
                                    else
                                    {
                                        SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* O Jogador usou camisinha.");
                                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você está usando camisinha.");
                                        Condom[playerid] --;
                                    }
                                }
                                else
                                {
                                    SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Este jogador já está infectado com DST, no pode pegar mais uma.");
                                    return 1;
                                }
                                SexOffer[playerid] = 999;
                                return 1;
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   Você ou a Profissional do sexo não estão em um carro !");
                                return 1;
                            }
                        }//Connected ou not
                        return 1;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Você não pode pagar o sexo!");
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não tem nenhuma oferta de sexo !");
                    return 1;
                }
            }
            else if(strcmp(x_Emprego,"reparo",true) == 0)
            {
                if(RepairOffer[playerid] < 999)
                {
                    if(GetPlayerMoneyEx(playerid) > RepairPrice[playerid])
                    {
                        if(IsPlayerInAnyVehicle(playerid))
                        {
                            if(IsPlayerConnected(RepairOffer[playerid]))
                            {
                                GetPlayerName(RepairOffer[playerid], giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                RepairCar[playerid] = GetPlayerVehicleID(playerid);
                                SetVehicleHealth(RepairCar[playerid], 1000.0);
                                RepairVehicle(RepairCar[playerid]);
                                format(string, sizeof(string), "* O mecânico %s reparou seu veículo por R$%d.",giveplayer,RepairPrice[playerid]);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "* Você reparou o veículo de %s, e R$%d foi adicionado no seu salário.",sendername,RepairPrice[playerid]);
                                SendClientMessage(RepairOffer[playerid], COLOR_LIGHTBLUE, string);
                                PlayerInfo[RepairOffer[playerid]][pMechSkill] ++;
                                if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 50)
                                { SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Seu mecanico e cargo 2, Agora ele pode adicionar combustivel para qualquer carro."); }
                                else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 100)
                                { SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Seu mecanico e cargo 3, Agora ele pode adicionar combustivel para qualquer carro."); }
                                else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 200)
                                { SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Seu mecanico e cargo 4, Agora ele pode adicionar combustivel para qualquer carro."); }
                                else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 400)
                                { SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Seu mecanico e cargo 5, Agora ele pode adicionar combustivel para qualquer carro."); }
                                PlayerInfo[RepairOffer[playerid]][pSalario] += RepairPrice[playerid];
                                GivePlayerMoney(playerid, -RepairPrice[playerid]);
                                RepairOffer[playerid] = 999;
                                RepairPrice[playerid] = 0;
                                return 1;
                            }
                            return 1;
                        }
                        return 1;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Você não pode permitir o reparo !");
                        return 1;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Falta uma oferta para Você reparar o carro !");
                    return 1;
                }
            }
            else { return 1; }
        }//not connected
        return 1;
    }
    if(strcmp(cmd, "/abastecercarro", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(!IsAMec(playerid))
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é mecanico!");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /abastecercarro [id] [preco]");
                return 1;
            }
            if(!IsAMecCar(GetPlayerVehicleID(playerid)))
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não está no veículo dos mecânicos!");
                return 1;
            }
            new playa;
            new money;
            playa = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            money = strval(tmp);
            if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Preco minimo 1, preco maximo 99999!"); return 1; }
            if(IsPlayerConnected(playa))
            {
                if(playa != INVALID_PLAYER_ID)
                {
                    if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
                    {
                        if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "   Nao posso fazer isso!"); return 1; }
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* Você ofereceu ao(a) %s para re-abastecer o carro dele(a) por R$%d .",giveplayer,money);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Mecanico %s quer re-abastecer seu carro por R$%d, (Digite /aceitar abastecimento) para aceitar.",sendername,money);
                        SendClientMessage(playa, COLOR_LIGHTBLUE, string);
                        RefillOffer[playa] = playerid;
                        RefillPrice[playa] = money;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O Player nao esta perto de Você ou nao esta no carro.");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Jogador offline.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/reparar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(!IsAMec(playerid))
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é mecanico!");
                return 1;
            }
            if(!IsAMecCar(GetPlayerVehicleID(playerid)))
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não está no veículo dos mecânicos!");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /reparar [id] [preco]");
                return 1;
            }
            new playa;
            new money;
            playa = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            money = strval(tmp);
            if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Preco minimo 1, preco maximo 99999!"); return 1; }
            if(IsPlayerConnected(playa))
            {
                if(playa != INVALID_PLAYER_ID)
                {
                    if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
                    {
                        if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "  Não posso fazer isso!"); return 1; }
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* Você ofereceu ao(a) %s para concertar seu carro por R$%d .",giveplayer,money);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Mecanico %s quer reparar seu carro por R$%d, (Digite /aceitar reparo) para aceitar.",sendername,money);
                        SendClientMessage(playa, COLOR_LIGHTBLUE, string);
                        RepairOffer[playa] = playerid;
                        RepairPrice[playa] = money;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Este jogador nao esta perto de Você ou nao esta no carro.");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta offline.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/callcar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(CarCalls[playerid] > 0)
            {
                new Float:plocx,Float:plocy,Float:plocz;
                GetPlayerPos(playerid, plocx, plocy, plocz);
                SetVehiclePos(CarID[playerid],plocx,plocy+4, plocz); LinkVehicleToInterior(CarID[playerid], 0);
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Borght Car has arrived.");
                CarCalls[playerid] -= 1;
                format(string, sizeof(string), "* You can call Your Borght Car for %d times more.", CarCalls[playerid]);
                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Invalido Ação !");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/gangue", true) == 0 || strcmp(cmd, "/ga", true) == 0 || strcmp(cmd, "/f", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pMuted] == 1)
            {
                SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
                return 1;
            }
            GetPlayerName(playerid, sendername, sizeof(sendername));
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: (/ga)ngue [ORG CHAT]");
                return 1;
            }
            if(admtrampando[playerid] == 1) { return SendClientMessage(playerid, COLOR_GRAD2, "Você não pode Falar no Rádio da Gang estando em modo Trabalho!"); }
            if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5
            || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6
            || PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8
            || PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9
            || PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10
            || PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12
            || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13
            || PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14
            || PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15
            || PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17
            || PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18
            || PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19
            || PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20
            || PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21
            || PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22
            || PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23
            || PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24
            || PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25
            || PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26
            || PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27
            || PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30
            || PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34
            || PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31
            || PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29
            || PlayerInfo[playerid][pMembro] == 35 || PlayerInfo[playerid][pLider] == 35
            || PlayerInfo[playerid][pMembro] == 36 || PlayerInfo[playerid][pLider] == 36)
            {
                format(string, sizeof(string), "** %s %s: %s. ))  **",OrgCargo(playerid), sendername, result);
                SendFamilyMessage(GetPlayerOrg(playerid),COLOR_LIGHTBLUE,string);
                format(string, sizeof(string), "{e9e9e9}* %s falou algo no rádio da Gang.", sendername);
                ProxDetector(20.0, playerid, string, 0xe9e9e9ff,0xe9e9e9ff,0xe9e9e9ff,0xe9e9e9ff,0xe9e9e9ff);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Você não faz parte de nenhuma família!");
                return 1;
            }
        }//not connected
        return 1;
    }
//Outros
    if(strcmp(cmd, "/noticias", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)
            {
                new newcar = GetPlayerVehicleID(playerid);
                if(PlayerInfo[playerid][pMuted] == 1)
                {
                    SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você nao poder falar, Você foi calado");
                    return 1;
                }
                if(IsAJornalCar(newcar))
                {
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    new length = strlen(cmdtext);
                    while ((idx < length) && (cmdtext[idx] <= ' '))
                    {
                        idx++;
                    }
                    new offset = idx;
                    new result[100];
                    while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                    {
                        result[idx - offset] = cmdtext[idx];
                        idx++;
                    }
                    result[idx - offset] = EOS;
                    if(!strlen(result))
                    {
                        SendClientMessage(playerid, COLOR_GRAD2, "USE: /noticias [Texto]");
                        return 1;
                    }
                    format(string, sizeof(string), "[BPG] Reporter %s: %s", sendername, result);
                    OOCNews(COLOR_NEWS,string);
                    PlayerInfo[playerid][pNewsSkill] ++;
                    if(PlayerInfo[playerid][pNewsSkill] == 50)
                    { SendClientMessage(playerid, COLOR_YELLOW, "* Seu Reporter Agora e cargo 2, logo logo ja pode voar no helicoptero e falar AoVivo."); }
                    else if(PlayerInfo[playerid][pNewsSkill] == 100)
                    { SendClientMessage(playerid, COLOR_YELLOW, "* Seu Reporter Agora e cargo 3, logo logo ja pode voar no helicoptero e falar AoVivo."); }
                    else if(PlayerInfo[playerid][pNewsSkill] == 200)
                    { SendClientMessage(playerid, COLOR_YELLOW, "* O Seu Reporter Agora e cargo 4 e pode fazer coberturas com helicoptero"); }
                    else if(PlayerInfo[playerid][pNewsSkill] == 400)
                    { SendClientMessage(playerid, COLOR_YELLOW, "* O Seu Reporter Agora e cargo 5 e pode conversar AoVivo com quem ele quizer."); }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não está no Jornal ou na Van !");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um Reporter !");
            }
        }//not connected
        return 1;
    }
    if(strcmp(cmd, "/aovivo", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)
            {
                if(TalkingLive[playerid] != 9999)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* A Conversa AoVivo Terminou.");
                    SendClientMessage(TalkingLive[playerid], COLOR_LIGHTBLUE, "* A Conversa AoVivo Terminou.");
                    TogglePlayerControllable(playerid, 1);
                    TogglePlayerControllable(TalkingLive[playerid], 1);
                    TalkingLive[TalkingLive[playerid]] = 9999;
                    TalkingLive[playerid] = 9999;
                    return 1;
                }
                if(PlayerInfo[playerid][pCargo] < 4)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Seu Cargo é baixo para falar com alguem AoVivo !");
                    return 1;
                }
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "USE: /aovivo [id]");
                    return 1;
                }
                //giveplayerid = strval(tmp);
                giveplayerid = ReturnUser(tmp);
                if (IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        if (ProxDetectorS(5.0, playerid, giveplayerid))
                        {
                            if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode falar AoVivo com você mesmo!"); return 1; }
                            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "* Você ofereceu a %s para ter uma conversa AoVivo.", giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* %s Você tem uma oferta para conversas ao vivo, Digite (/aceitar aovivo) para aceitar.", sendername);
                            SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                            LiveOffer[giveplayerid] = playerid;
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você esta longe deste player !");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   ID/Nick - Invalido !");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você nao e um reporter !");
            }
        }//not connected
        return 1;
    }
    if(strcmp(cmd, "/vendermaconha", true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid,COLOR_YELLOW," Você não pode vender drogas na cadeia!");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pEmprego] != 4)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é Vendedor De Drogas!");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /venderdrogas [id] [quantidade] [preco]");
                return 1;
            }
            new playa;
            new money;
            new needed;
            playa = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) { return 1; }
            needed = strval(tmp);
            if(needed < 1 || needed > 99) { SendClientMessage(playerid, COLOR_GREY, "   Minimo de maconha = 1  Maximo de maconha = 99"); return 1; }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) { return 1; }
            money = strval(tmp);
            if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "  Preco maior que 1, menor que 99999!"); return 1; }
            if(needed > PlayerInfo[playerid][pDrogas]) { SendClientMessage(playerid, COLOR_GREY, "   Você nao tem esta quantidade de maconha com você!"); return 1; }
            if(IsPlayerConnected(playa))
            {
                if(playa != INVALID_PLAYER_ID)
                {
                    if (ProxDetectorS(8.0, playerid, playa))
                    {
                        if(playa == playerid)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você não pode vender maconha pra você mesmo!");
                            return 1;
                        }
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* Você ofereceu %s com %d folhas de maconha por R$%d .", giveplayer, needed, money);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* O Traficante %s quer vender %d folhas de maconha por R$%d, (Digite /aceitar maconha) para comprar.", sendername, needed, money);
                        SendClientMessage(playa, COLOR_LIGHTBLUE, string);
                        DrugOffer[playa] = playerid;
                        DrugPrice[playa] = money;
                        DrugGram[playa] = needed;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está perto de você !");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Jogador offline.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/vendercocaina", true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid,COLOR_YELLOW," Você não pode vender drogas na cadeia!");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pEmprego] != 4)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é Vendedor De Drogas!");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /venderdrogas [id] [quantidade] [preco]");
                return 1;
            }
            new playa;
            new money;
            new needed;
            playa = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) { return 1; }
            needed = strval(tmp);
            if(needed < 1 || needed > 99) { SendClientMessage(playerid, COLOR_GREY, "   Minimo de cocaina = 1   Maximo de cocaina = 99"); return 1; }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) { return 1; }
            money = strval(tmp);
            if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "  Preço maior que 1, menor que 99999!"); return 1; }
            if(needed > PlayerInfo[playerid][pDrogas2]) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem esta quantidade de cocaina com você !"); return 1; }
            if(IsPlayerConnected(playa))
            {
                if(playa != INVALID_PLAYER_ID)
                {
                    if (ProxDetectorS(8.0, playerid, playa))
                    {
                        if(playa == playerid)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você não pode vender cocaina pra você mesmo!");
                            return 1;
                        }
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* Você ofereceu %s com %dg de pó por R$%d .", giveplayer, needed, money);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* O Traficante %s quer vender %dg de pó por R$%d, (Digite /aceitar cocaina) para comprar.", sendername, needed, money);
                        SendClientMessage(playa, COLOR_LIGHTBLUE, string);
                        DrugOffer[playa] = playerid;
                        DrugPrice[playa] = money;
                        DrugGram[playa] = needed;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está perto de você !");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Jogador offline.");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/vendercrack", true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid,COLOR_YELLOW," Você não pode vender drogas na cadeia!");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pEmprego] != 4)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é Vendedor De Drogas!");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /venderdrogas [id] [quantidade] [preco]");
                return 1;
            }
            new playa;
            new money;
            new needed;
            playa = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) { return 1; }
            needed = strval(tmp);
            if(needed < 1 || needed > 99) { SendClientMessage(playerid, COLOR_GREY, "   Minimo de crack = 1  Maximo de Crack = 99"); return 1; }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) { return 1; }
            money = strval(tmp);
            if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "  Preço maior que 1, menor que 99999!"); return 1; }
            if(needed > PlayerInfo[playerid][pDrogas3]) { SendClientMessage(playerid, COLOR_GREY, "   Você nao tem esta quantidade de crack com você!"); return 1; }
            if(IsPlayerConnected(playa))
            {
                if(playa != INVALID_PLAYER_ID)
                {
                    if (ProxDetectorS(8.0, playerid, playa))
                    {
                        if(playa == playerid)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você não pode vender crack pra você mesmo!");
                            return 1;
                        }
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* Você ofereceu %s com %d pedras por R$%d .", giveplayer, needed, money);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* O Traficante %s quer vender %d pedras por R$%d, (Digite /aceitar crack) para comprar.", sendername, needed, money);
                        SendClientMessage(playa, COLOR_LIGHTBLUE, string);
                        DrugOffer[playa] = playerid;
                        DrugPrice[playa] = money;
                        DrugGram[playa] = needed;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está perto de você !");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Jogador offline.");
            }
        }
        return 1;
    }
    if(strcmp(cmdtext,"/usemaconha",true) == 0 || strcmp(cmdtext,"/usarmaconha",true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid,COLOR_YELLOW," Você não usar drogas na cadeia!");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pDorgado] >= 160)
            {
                //PlayerInfo[playerid][pDoenca] = 5;
                PlayerInfo[playerid][pDorgado] = 0;
                //SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você esta com câncer de pulmão, vá ate um hospital se tratar !");
                //SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 2300);
                return 1;
            }
            if(PlayerBoxing[playerid] > 0 || PlayerInfo[playerid][pJailed] != 0)
            {
                SendClientMessage(playerid,COLOR_GREY,"Você não pode usar drogas enquanto você está lutando!");
                return 1;
            }
            if(EmBatalha(playerid)) return SendClientMessage(playerid,-1,"ERRO: Você não pode Usar drogas perto de um Membro de Outra Organização/Gang!");
            if(PlayerInfo[playerid][pDrogas] > 1)
            {
                if(PlayerStoned[playerid] >= 3) { GameTextForPlayer(playerid,"~w~Você esta~n~~p~Lezado",4000,1); }
                new Float:PlayersArmour;
                GetPlayerArmour(playerid,PlayersArmour);
                PlayerInfo[playerid][pDrogas] -= 2;
                PlayerInfo[playerid][pDorgado] += 2;
                new Dmelhoria = 1 * PlayerInfo[playerid][pDrugPerk]; Dmelhoria += 2;
                if(PlayersArmour >= 100)
                {
                    SetPlayerArmour(playerid, 100);
                    SendClientMessage(playerid,COLOR_LIGHTRED,"* Você não pode mais usar drogas!");
                    return 1;
                }
                else
                {
                    SetPlayerArmour(playerid, PlayersArmour + Dmelhoria);
                }
                GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, sizeof(string), "* %s Fumou Maconha.", sendername);
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            else
            {
                SendClientMessage(playerid,COLOR_GREY,"Você não tem droga suficiente!");
            }
        }//not connected
        return 1;
    }
    if(strcmp(cmdtext,"/usecocaina",true) == 0 || strcmp(cmdtext,"/usarcocaina",true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid,COLOR_YELLOW," Você não usar drogas na cadeia!");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pDorgado] >= 120)
            {
                //PlayerInfo[playerid][pDoenca] = 5;
                PlayerInfo[playerid][pDorgado] = 0;
               /* SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você esta com câncer de pulmão, vá ate um hospital se tratar !");
                SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 2300);  */
                return 1;
            }
            /*if(PlayerInfo[playerid][pDoenca] == 5)
            {
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você esta com câncer de pulmão, vá ate um hospital se tratar !");
                return 1;
            }    */
            if(PlayerBoxing[playerid] > 0 || PlayerInfo[playerid][pJailed] != 0)
            {
                SendClientMessage(playerid,COLOR_GREY,"Você não pode usar drogas enquanto está lutando !");
                return 1;
            }
            if(EmBatalha(playerid)) return SendClientMessage(playerid,-1,"ERRO: Você não pode Usar drogas perto de um Membro de Outra Organização/Gang!");
            if(PlayerInfo[playerid][pDrogas2] > 1)
            {
                PlayerStoned[playerid] += 1;
                if(PlayerStoned[playerid] >= 3) { GameTextForPlayer(playerid,"~w~Você está~n~~p~Cherado",4000,1); }
                new Float:PlayersArmour;
                GetPlayerArmour(playerid,PlayersArmour);
                PlayerInfo[playerid][pDrogas2] -= 2;
                PlayerInfo[playerid][pDorgado] += 2;
                new Dmelhoria = 1 * PlayerInfo[playerid][pDrugPerk]; Dmelhoria += 2;
                if(PlayersArmour >= 100)
                {
                    SetPlayerArmour(playerid, 100);
                    SendClientMessage(playerid,COLOR_LIGHTRED,"* Você não pode mais usar drogas!");
                    return 1;
                }
                else
                {
                    SetPlayerArmour(playerid, PlayersArmour + Dmelhoria);
                }
                GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, sizeof(string), "* %s Cherou Cocaina.", sendername);
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            else
            {
                SendClientMessage(playerid,COLOR_GREY,"Você não tem droga suficiente!");
            }
        }//not connected
        return 1;
    }
    if(strcmp(cmdtext,"/usecrack",true) == 0 || strcmp(cmdtext,"/usarcrack",true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
           SendClientMessage(playerid,COLOR_YELLOW," Você não usar drogas na cadeia!");
           return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pDorgado] >= 80)
            {
                //PlayerInfo[playerid][pDoenca] = 5;
                PlayerInfo[playerid][pDorgado] = 0;
               /* SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você está com câncer de pulmão, vá ate um hospital se tratar !");
                SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 2300);            */
                return 1;
            }
            /*if(PlayerInfo[playerid][pDoenca] == 5)
            {
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você está com câncer de pulmão, vá ate um hospital se tratar !");
                return 1;
            }        */
            if(PlayerBoxing[playerid] > 0 || PlayerInfo[playerid][pJailed] != 0)
            {
                SendClientMessage(playerid,COLOR_GREY,"Use Drogas enquanto você está lutando !");
                return 1;
            }
            if(EmBatalha(playerid)) return SendClientMessage(playerid,-1,"ERRO: Você não pode Usar drogas perto de um Membro de Outra Organização/Gang!");
            if(PlayerInfo[playerid][pDrogas3] > 1)
            {
                new Float:PlayersArmour;
                GetPlayerArmour(playerid,PlayersArmour);
                PlayerInfo[playerid][pDrogas3] -= 2;
                PlayerInfo[playerid][pDorgado] += 2;
                new Dmelhoria = 1 * PlayerInfo[playerid][pDrugPerk]; Dmelhoria += 2;
                if(PlayersArmour >= 100)
                {
                    SetPlayerArmour(playerid, 100);
                    SendClientMessage(playerid,COLOR_LIGHTRED,"* Você não pode mais usar drogas!");
                    return 1;
                }
                else
                {
                    SetPlayerArmour(playerid, PlayersArmour + Dmelhoria);
                }
                GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, sizeof(string), "* %s Fumou Crack.", sendername);
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            else
            {
                SendClientMessage(playerid,COLOR_GREY,"Você não tem Gramas de Drogas Suficiente.!");
            }
        }//not connected
        return 1;
    }
    if(strcmp(cmd, "/curarme", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerToPoint(3, playerid,1719.8948,1170.1931,34.8259)||PlayerToPoint(3, playerid,2029.5945,-1404.6426,17.2512))
            {
                if(PlayerInfo[playerid][pDoenca] > 0)
                {
                    PlayerInfo[playerid][pDoenca] = 0;
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você está infectado com uma DST, vá ate um hospital se tratar !");
                    GivePlayerMoney(playerid, -5000);
                    SendClientMessage(playerid, TEAM_CYAN_COLOR, "Hospital BPG: Retiramos as suas doenças! Tenha um otimo dia!!");
                    SendClientMessage(playerid, TEAM_CYAN_COLOR, "Hospital BPG: Foram cobrados R$5.000 para ajudar o Hospital!!");
                    SendClientMessage(playerid, TEAM_CYAN_COLOR, "Hospital BPG: Procure um médico que eles cobram mais barato!!");
                    SetPlayerDrunkLevel (playerid, 0);
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não tem uma Doença para ser curada !");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não está em um Hospital !");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/ejetar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new State;
            if(IsPlayerInAnyVehicle(playerid))
            {
                State=GetPlayerState(playerid);
                if(State!=PLAYER_STATE_DRIVER)
                {
                    SendClientMessage(playerid,COLOR_GREY,"   Você não é o motorista do carro !");
                    return 1;
                }
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: /ejetar [id]");
                    return 1;
                }
                new playa;
                playa = ReturnUser(tmp);
                new test;
                test = GetPlayerVehicleID(playerid);
                if(IsPlayerConnected(playa))
                {
                    if(playa != INVALID_PLAYER_ID)
                    {
                        if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se expulsar... Aperte Enter ¬¬!"); return 1; }
                        if(IsPlayerInVehicle(playa,test))
                        {
                            new PName[MAX_PLAYER_NAME];
                            GetPlayerName(playerid,PName,sizeof(PName));
                            GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                            format(string, sizeof(string), "* Você expulsou o(a) %s para fora do carro!", giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* Você foi retirado do carro por %s !", PName);
                            SendClientMessage(playa, COLOR_LIGHTBLUE, string);
                            RemovePlayerFromVehicle(playa);
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Este jogador não está em seu carro !");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, " ID/Nick - Invalido!");
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você precisa estar em um carro para usar este comando !");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/transar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pEmprego] == 3)
            {
                if(!IsPlayerInAnyVehicle(playerid))
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você só pode transar em um carro !");
                    return 1;
                }
                new Car = GetPlayerVehicleID(playerid);
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "USE: /transar [id] [price]");
                    return 1;
                }
                //giveplayerid = strval(tmp);
                giveplayerid = ReturnUser(tmp);
                tmp = strtok(cmdtext, idx);
                new money;
                money = strval(tmp);
                if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Preço da transa não pode ser menor que R$1, ou maior que R$99999!"); return 1; }
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        if (ProxDetectorS(8.0, playerid, giveplayerid))
                        {
                            if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode ter relação sexual com você mesma, mais pode bater uma siririca!"); return 1; }
                            if(IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(giveplayerid, Car))
                            {
                                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                format(string, sizeof(string), "* Você ofereceu ao %s para dar uma *Foda* com você por R$%d.", giveplayer, money);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "* Profissional do sexo %s Perguntou se você aceita fazer uma *Foda* com ela, por R$%d (Digite /aceitar transa) Para Aceitar.", sendername, money);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                SexOffer[giveplayerid] = playerid;
                                SexPrice[giveplayerid] = money;
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   Você e o seu cliente devem estar juntos em um carro !");
                                return 1;
                            }
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Este jogador não está perto de você !");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   O jogador está offline!");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é Profissional do sexo !");
            }
        }//not connected
        return 1;
    }
    if(strcmp(cmd, "/esmola", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pEmprego] != 10)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é Mendigo!");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /esmola [id] [preço]");
                return 1;
            }
            new money;
            giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp)) { return 1; }
            money = strval(tmp);
            if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Preço da esmola não pode ser menor que R$1, ou maior que R$99999!"); return 1; }
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(ProxDetectorS(8.0, playerid, giveplayerid))
                    {
                        if(giveplayerid == playerid)
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   Você não pode pedir dinheiro a si mesmo!");
                            return 1;
                        }
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* Você pediu ao %s uma esmola de R$%d.", giveplayer, money);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Mendigo %s pediu R$%d de esmola... Digite /aceitar mendigo e ajude-o.", sendername, money);
                        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                        MendigoOffer[giveplayerid] = playerid;
                        MendigoPrice[giveplayerid] = money;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está perto de você !");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   O Jogador está Offline!");
            }
        }
        return 1;
    }
    if(strcmp(cmd,"/Bafometro",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(!IsACop(playerid))
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
                return 1;
            }
            if(OnDuty[playerid] != 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não bateu o cartão!");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_WHITE, "USE: /bafometro [id]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if (ProxDetectorS(8.0,playerid,giveplayerid))
                    {
                        if(giveplayerid == playerid) { SendClientMessage(playerid,COLOR_GREY,"Você não pode fazer o teste em si mesmo!"); return 1; }
                        GetPlayerName(giveplayerid,giveplayer,sizeof(giveplayer));
                        GetPlayerName(playerid,sendername,sizeof(sendername));
                        new bebado[32], bebado2[32];
                        if(PlayerDrunk[giveplayerid] > 0) { bebado = "Bêbado."; } else { bebado = "| Sóbrio "; }
                        if(PlayerInfo[giveplayerid][pMats] > 0) { bebado2 = "Drogado."; } else { bebado2 = "| Sóbrio "; }
                        format(string,sizeof(string),"|__________ %s __________|",giveplayer);
                        SendClientMessage(playerid,COLOR_WHITE,string);
                        format(string,sizeof(string),"%s.",bebado);
                        SendClientMessage(playerid,COLOR_GREY,string);
                        format(string,sizeof(string),"%s.",bebado2);
                        format(string,sizeof(string),"* %s faz o teste do Bafomêtro em %s.",sendername ,giveplayer);
                        ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    }
                    else
                    {
                        SendClientMessage(playerid,COLOR_GREY,"O jogador não está perto de você !");
                        return 1;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid,COLOR_GREY,"Esse jogador está off-line !");
                return 1;
            }
            return 1;
        }
    }
//--------------------------------=Ajuda para Polícia=----------------------------------------------------------------
    if(strcmp(cmd,"/reforco",true)==0 || strcmp(cmd,"/rf",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
                if(!IsACop(playerid))
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
                    return 1;
                }
                if(OnDuty[playerid] != 1)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não bateu o cartão!");
                    return 1;
                }
                if (PlayerInfo[playerid][pRequestingBackup] != 1)
                {
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    format(string, sizeof(string), "Todas as unidades: %s está pedindo reforço,veja o mapa e digite /procurar %d!.", sendername,playerid);
                    PlayerInfo[playerid][pRequestingBackup] = 1;
     for(new i = 0; i < MaiorID; i++)
                    {
                        if(IsPlayerConnected(i))
                        {
                            if(IsACop(i))
                            {
                                new Float:plocx,Float:plocy,Float:plocz;
                                new plo;
                                plo = ReturnUser(tmp);
                                GetPlayerPos(plo, plocx, plocy, plocz);
                                SendClientMessage(i, TEAM_BLUE_COLOR, string);
                            }
                        }
                    }
                    SendClientMessage(playerid, TEAM_BLUE_COLOR, "Digite /rcr pra retirar o alerta.");
                    SetTimerEx("BackupClear", 180000, false, "ii", playerid, 1);
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "Você já tem um pedido de reforço ativo!");
                }
        }
        return 1;
    }

//-----------------=Limpa a Ajuda Policial=-----------------
    if(strcmp(cmd,"/reforcoretirar",true)==0 || strcmp(cmd,"/rcr",true)==0)
    {
        BackupClear(playerid, 0);
        return 1;
    }
    if(strcmp(cmd,"/revistar",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(!IsACop(playerid))
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
                return 1;
            }
            if(OnDuty[playerid] != 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não bateu o cartão!");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_WHITE, "USE: /revistar [id]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if (ProxDetectorS(8.0, playerid, giveplayerid))
                    {
                        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se Revistar!"); return 1; }
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        new text1[20], text2[20], text3[20], text4[20], text5[20], text6[20], text7[20];
                        if(PlayerInfo[giveplayerid][pDrogas] > 0) { text1 = "| Maconha."; } else { text1 = "| Vazio."; }
                        if(PlayerInfo[giveplayerid][pDrogas2] > 0) { text2 = "| Cocaina."; } else { text2 = "| Vazio."; }
                        if(PlayerInfo[giveplayerid][pDrogas3] > 0) { text3 = "| Crack."; } else { text3 = "| Vazio."; }
                        if(PlayerInfo[giveplayerid][pMats] > 0) { text4 = "| Materiais."; } else { text4 = "| Vazio."; }
                        if(Fishes[giveplayerid][pWeight1] > 0 || Fishes[giveplayerid][pWeight2] > 0 || Fishes[giveplayerid][pWeight3] > 0 || Fishes[giveplayerid][pWeight4] > 0 || Fishes[giveplayerid][pWeight5] > 0) { text5 = "| Peixes."; } else { text5 = "| Vazio."; }
                        if(PlayerInfo[giveplayerid][pPhoneBook] > 0) { text6 = "| Lista Telefonica."; } else { text6 = "| Vazio."; }
                        if(PlayerInfo[giveplayerid][pCDPlayer] > 0) { text7 = "| MP10."; } else { text7 = "| Vazio."; }
                        format(string, sizeof(string), "|__________ Itens %s __________|", giveplayer);
                        SendClientMessage(playerid, COLOR_WHITE, string);
                        format(string, sizeof(string), "%s [Quantidade: %d].", text1, PlayerInfo[giveplayerid][pDrogas]);
                        SendClientMessage(playerid, COLOR_GREY, string);
                        format(string, sizeof(string), "%s [Quantidade: %d].", text2, PlayerInfo[giveplayerid][pDrogas2]);
                        SendClientMessage(playerid, COLOR_GREY, string);
                        format(string, sizeof(string), "%s [Quantidade: %d].", text3, PlayerInfo[giveplayerid][pDrogas3]);
                        SendClientMessage(playerid, COLOR_GREY, string);
                        format(string, sizeof(string), "%s [Quantidade: %d].", text4, PlayerInfo[giveplayerid][pMats]);
                        SendClientMessage(playerid, COLOR_GREY, string);
                        format(string, sizeof(string), "%s.", text5);
                        SendClientMessage(playerid, COLOR_GREY, string);
                        format(string, sizeof(string), "%s.", text6);
                        SendClientMessage(playerid, COLOR_GREY, string);
                        format(string, sizeof(string), "%s.", text7);
                        SendClientMessage(playerid, COLOR_GREY, string);
                        format(string, sizeof(string), "* %s revistou %s para ver se tem qualquer item ilegal.", sendername ,giveplayer);
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de você!");
                        return 1;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   O Jogador está Offline!");
                return 1;
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/presos", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage(playerid, 0x55aafdAA, "PRESOS");
             for(new i = 0; i < MaiorID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    new za[20];
                    if(PlayerInfo[i][pAjustado] == 0) { za = "{FF0000}Não"; }
                    else if(PlayerInfo[i][pAjustado] == 1) { za = "{00FF00}Sim"; }
                    if(PlayerInfo[i][pJailTime] >=60)
                    {
                        if(PlayerInfo[i][pJailed] == 1)
                        {
                            GetPlayerName(i, sendername, sizeof(sendername));
                            format(string,sizeof(string), "ID: %d Preso: %s Local: Policia Militar Tempo: %d minutos | Org: %s | Ajustado: %s", i, sendername, PlayerInfo[i][pJailTime]/60, NomeORG(i),za);
                            SendClientMessage(playerid, COR_PM, string);
                        }
                        if(PlayerInfo[i][pJailed] == 2)
                        {
                            GetPlayerName(i, sendername, sizeof(sendername));
                            format(string,sizeof(string), "ID: %d Preso: %s Local: Cela do Admin Tempo: %d minutos | Org: %s | {FF0000}NAO AJUSTAVEL", i, sendername, PlayerInfo[i][pJailTime]/60, NomeORG(i));
                            SendClientMessage(playerid, 0xffff66FF, string);
                        }
                        if(PlayerInfo[i][pJailed] == 4)
                        {
                            GetPlayerName(i, sendername, sizeof(sendername));
                            format(string,sizeof(string), "ID: %d Preso: %s Local: ROTA Tempo: %d minutos | Org: %s | Ajustado: %s", i, sendername, PlayerInfo[i][pJailTime]/60, NomeORG(i),za);
                            SendClientMessage(playerid, COR_ROTA, string);
                        }
                        if(PlayerInfo[i][pJailed] == 44)
                        {
                            GetPlayerName(i, sendername, sizeof(sendername));
                            format(string,sizeof(string), "{FF4500}ID: %d Preso: %s Local: BPM Tempo: %d minutos | Org: %s | Ajustado: %s", i, sendername, PlayerInfo[i][pJailTime]/60, NomeORG(i),za);
                            SendClientMessage(playerid, COR_ROTA, string);
                        }
                        if(PlayerInfo[i][pJailed] == 55)
                        {
                            GetPlayerName(i, sendername, sizeof(sendername));
                            format(string,sizeof(string), "ID: %d Preso: %s Local: Exercito Tempo: %d minutos | Org: %s | Ajustado: %s", i, sendername, PlayerInfo[i][pJailTime]/60, NomeORG(i),za);
                            SendClientMessage(playerid, 0x042B07AA, string);
                        }
                        if(PlayerInfo[i][pJailed] == 5)
                        {
                            GetPlayerName(i, sendername, sizeof(sendername));
                            format(string,sizeof(string), "ID: %d Preso: %s Local: B.O.P.E Tempo: %d minutos | Org: %s | Ajustado: %s", i, sendername, PlayerInfo[i][pJailTime]/60, NomeORG(i),za);
                            SendClientMessage(playerid, COR_BOPE, string);
                        }
                        if(PlayerInfo[i][pJailed] == 3)
                        {
                            GetPlayerName(i, sendername, sizeof(sendername));
                            format(string,sizeof(string), "ID: %d Preso: %s Local: Polícia Rodoviária Federal Tempo: %d minutos | Org: %s | Ajustado: %s", i, sendername, PlayerInfo[i][pJailTime]/60, NomeORG(i),za);
                            SendClientMessage(playerid, COR_PRF, string);
                        }
                        if(PlayerInfo[i][pJailed] == 6)
                        {
                            GetPlayerName(i, sendername, sizeof(sendername));
                            format(string,sizeof(string), "ID: %d Preso: %s Local : Cela Admin Tempo: %d minutos | Org: %s | Ajustado: %s", i, sendername, PlayerInfo[i][pJailTime]/60, NomeORG(i),za);
                            SendClientMessage(playerid, 0xffff66FF, string);
                        }
                        if(PlayerInfo[i][pJailed] == 7)
                        {
                            GetPlayerName(i, sendername, sizeof(sendername));
                            format(string,sizeof(string), "ID: %d Preso: %s Local: Exército Tempo: %d minutos | Org: %s | Ajustado: %s", i, sendername, PlayerInfo[i][pJailTime]/60, NomeORG(i),za);
                            SendClientMessage(playerid, COLOR_EXE, string);
                        }
                        if(PlayerInfo[i][pJailed] == 69)
                        {
                            GetPlayerName(i, sendername, sizeof(sendername));
                            format(string,sizeof(string), "ID: %d Preso: %s Local: Policia Civil | Tempo: %d minutos | Org: %s | Ajustado: %s", i, sendername, PlayerInfo[i][pJailTime]/60, NomeORG(i),za);
                            SendClientMessage(playerid, COLOR_EXE, string);
                        }
                        if(PlayerInfo[i][pJailed] == 40)
                        {
                            GetPlayerName(i, sendername, sizeof(sendername));
                            format(string,sizeof(string), "ID: %d Preso: %s Local: Poícia Federal | Tempo: %d minutos | Org: %s | Ajustado: %s", i, sendername, PlayerInfo[i][pJailTime]/60, NomeORG(i),za);
                            SendClientMessage(playerid, 0xAC8426AA, string);
                        }

                    }
                    else if(PlayerInfo[i][pJailTime] <= 59)
                    {
                        if(PlayerInfo[i][pJailed] == 1)
                        {
                            GetPlayerName(i, sendername, sizeof(sendername));
                            format(string,sizeof(string), "ID: %d Preso: %s Local: Policia Militar Tempo: %d Segundos | Org: %s | Ajustado: %s", i, sendername, PlayerInfo[i][pJailTime], NomeORG(i),za);
                            SendClientMessage(playerid, COR_PM, string);
                        }
                        if(PlayerInfo[i][pJailed] == 2)
                        {
                            GetPlayerName(i, sendername, sizeof(sendername));
                            format(string,sizeof(string), "ID: %d Preso: %s Local: Cela do Admin Tempo: %d Segundos | Org: %s | {FF0000}NAO AJUSTAVEL", i, sendername, PlayerInfo[i][pJailTime], NomeORG(i));
                            SendClientMessage(playerid, 0xffff66FF, string);
                        }
                        if(PlayerInfo[i][pJailed] == 4)
                        {
                            GetPlayerName(i, sendername, sizeof(sendername));
                            format(string,sizeof(string), "ID: %d Preso: %s Local: ROTA Tempo: %d Segundos | Org: %s | Ajustado: %s", i, sendername, PlayerInfo[i][pJailTime], NomeORG(i),za);
                            SendClientMessage(playerid, COR_ROTA, string);
                        }
                        if(PlayerInfo[i][pJailed] == 3)
                        {
                            GetPlayerName(i, sendername, sizeof(sendername));
                            format(string,sizeof(string), "ID: %d Preso: %s Local: Polícia Rodoviária Federal Tempo: %d Segundos | Org: %s | Ajustado: %s", i, sendername, PlayerInfo[i][pJailTime], NomeORG(i),za);
                            SendClientMessage(playerid, COR_PRF, string);
                        }
                        if(PlayerInfo[i][pJailed] == 5)
                        {
                            GetPlayerName(i, sendername, sizeof(sendername));
                            format(string,sizeof(string), "ID: %d Preso: %s Local: B.O.P.E Tempo: %d Segundos | Org: %s | Ajustado: %s", i, sendername, PlayerInfo[i][pJailTime], NomeORG(i),za);
                            SendClientMessage(playerid, COR_BOPE, string);
                        }
                        if(PlayerInfo[i][pJailed] == 6)
                        {
                            GetPlayerName(i, sendername, sizeof(sendername));
                            format(string,sizeof(string), "ID: %d Preso: %s Local : Cela Admin Tempo: %d Segundos | Org: %s | Ajustado: %s", i, sendername, PlayerInfo[i][pJailTime], NomeORG(i),za);
                            SendClientMessage(playerid, 0xffff66FF, string);
                        }
                        if(PlayerInfo[i][pJailed] == 7)
                        {
                            GetPlayerName(i, sendername, sizeof(sendername));
                            format(string,sizeof(string), "ID: %d Preso: %s Local: Exército Tempo: %d Segundos | Org: %s | Ajustado: %s", i, sendername, PlayerInfo[i][pJailTime], NomeORG(i),za);
                            SendClientMessage(playerid, COLOR_EXE, string);
                        }
                        if(PlayerInfo[i][pJailed] == 69)
                        {
                            GetPlayerName(i, sendername, sizeof(sendername));
                            format(string,sizeof(string), "ID: %d Preso: %s Local: Policia Civil | Tempo: %d minutos | Org: %s | Ajustado: %s", i, sendername, PlayerInfo[i][pJailTime], NomeORG(i),za);
                            SendClientMessage(playerid, 0xa59432AA, string);
                        }
                        if(PlayerInfo[i][pJailed] == 40)
                        {
                            GetPlayerName(i, sendername, sizeof(sendername));
                            format(string,sizeof(string), "ID: %d Preso: %s Local: Poícia Federal | Tempo: %d minutos | Org: %s | Ajustado: %s", i, sendername, PlayerInfo[i][pJailTime], NomeORG(i),za);
                            SendClientMessage(playerid, 0xAC8426AA, string);
                        }
         if(PlayerInfo[i][pJailed] == 44)
                        {
                            GetPlayerName(i, sendername, sizeof(sendername));
                            format(string,sizeof(string), "{FF4500}ID: %d Preso: %s Local: BPM | Tempo: %d minutos | Org: %s | Ajustado: %s", i, sendername, PlayerInfo[i][pJailTime], NomeORG(i),za);
                            SendClientMessage(playerid, COLOR_EXE, string);
                        }
                    }
                }
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/hospitalizar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 2)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "  Você não pode usar este comando!");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /hospitalizar [id] [tempo]");
                return 1;
            }
            new para1;
            new level;
            para1 = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /hospitalizar [id] [tempo]");
                return 1;
            }
            level = strval(tmp);
            GetPlayerName(para1, giveplayer, sizeof(giveplayer));
            GetPlayerName(playerid, sendername, sizeof(sendername));
            if(IsPlayerConnected(para1))
            {
                if(para1 != INVALID_PLAYER_ID)
                {
                    format(string, sizeof string, "Você hospitalizou %s por %d segundos", giveplayer, level);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    format(string, sizeof string, "O Admin %s te hospitalizou por %d segundos", sendername, level);
                    SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                    format(string, 128, "AdmAviso: %s hospitalizou %s por %d segundos",sendername, giveplayer, level);
                    ABroadCast(0xC2CA7FFF,string,1);
                    SetPlayerVirtualWorld(para1, 0);
                    SetPlayerInterior(para1, 10);
                    ResetPlayerWeapons(para1);
                    Hospital[para1] = 1;
                    TogglePlayerControllable(para1, 0);
                    SetPVarInt(para1, "PlayerMorto", 0);
                    PlayerInfo[para1][pHosp] = 1;
                    PlayerInfo[para1][pHospTime] = level;
                    SetTimerEx("EntrarHospital", 1000, 0, "d",para1);
                }
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/hospitalizados", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage(playerid, 0xFFA4FFFF, "|___|B.P.G|Hospitalizados Online|B.P.G|___|");
            for(new i = 0; i < MaiorID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(PlayerInfo[i][pHosp] >=1)
                    {
                        format(string, sizeof(string), "Duente: %s ID: [%d] || Org: %s || Tempo: %d", PlayerName(i), i, NomeORG(i),PlayerInfo[i][pHospTime]);
                        SendClientMessage(playerid, GetPlayerColor(i), string);
                    }
                }
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/procurados", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsACop(playerid))
            {
                SendClientMessage(playerid, 0xFEBF01FF, "|___|B.P.G|Suspeitos Online||___|");
                for(new i=0; i < MaiorID; i++)
                {
                    if(IsPlayerConnected(i))
                    {
                        if(WantedPoints[i] > 0)
                        {
                            new colorprocurado = GetPlayerColor(i);
                            GetPlayerName(i, giveplayer, sizeof(giveplayer));
                            format(string, sizeof(string), "%s [ID:%d]: || Nível de Procurado: %d || Org: %s",giveplayer,i,WantedPoints[i],NomeORG(i));
                            SendClientMessage(playerid, colorprocurado, string);
                        }
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não e um oficial!");
            }
        }//not connected
        return 1;
    }
    if(strcmp(cmd, "/sairdoemprego", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pEmprego] > 0)
            {
                if(PlayerInfo[playerid][pVip] == 1)
                {
                    if(PlayerInfo[playerid][pContractTime] >= 2)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você cumpriu seu contrato e saiu do emprego.");
                        PlayerInfo[playerid][pEmprego] = 0;
                        if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
                        PlayerInfo[playerid][pContractTime] = 0;
                    }
                    else
                    {
                        new chours = 2 - PlayerInfo[playerid][pContractTime];
                        format(string, sizeof(string), "* Você ainda tem %d Horas para o fim do contrato.", chours / 2);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    }
                }
                else if(PlayerInfo[playerid][pVip] == 2)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você cumpriu seu contrato e saiu do emprego.");
                    PlayerInfo[playerid][pEmprego] = 0;
                    if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
                    PlayerInfo[playerid][pContractTime] = 0;
                }
                else if(PlayerInfo[playerid][pVip] == 0)
                {
                    if(PlayerInfo[playerid][pContractTime] >= 10)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você cumpriu seu contrato e saiu do emprego.");
                        PlayerInfo[playerid][pEmprego] = 0;
                        if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
                        PlayerInfo[playerid][pContractTime] = 0;
                    }
                    else
                    {
                        new chours = 10 - PlayerInfo[playerid][pContractTime];
                        format(string, sizeof(string), "* Você ainda tem %d Horas para o fim do contrato.", chours / 2);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não possui um emprego!");
            }
        }//not connected
        return 1;
    }
    if(strcmp(cmd, "/fianca", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pJailed]==1)
            {
                if(JailPrice[playerid] > 0)
                {
                    if(GetPlayerMoneyEx(playerid) > JailPrice[playerid])
                    {
                        format(string, sizeof(string), "Você pagou R$%d de fiança", JailPrice[playerid]);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        GivePlayerMoney(playerid, -JailPrice[playerid]);
                        DepositarGranaOrg(7,JailPrice[playerid]);
                        Tax += JailPrice[playerid];
                        JailPrice[playerid] = 0;
                        PlayerInfo[playerid][pJailTime] = 1;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "   Você não pode pagar o preco da Fiança !");
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "   Você não tem uma Fiança à ser paga !");
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está preso !");
            }
        }//not connected
        return 1;
    }
    if(strcmp(cmd, "/limpar", true) == 0 || strcmp(cmd, "/limparficha", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(!IsACop(playerid))
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
                return 1;
            }
            if(OnDuty[playerid] != 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não bateu o cartão!");
                return 1;
            }
            new member = PlayerInfo[playerid][pMembro];
            new lider = PlayerInfo[playerid][pLider];
            new rank = PlayerInfo[playerid][pCargo];
            if((gTeam[playerid] == 2 || 1 || 3))
            {
                if (!PlayerToPoint(3.0, playerid, 253.9280,69.6094,1003.6406) &&!PlayerToPoint(3.0, playerid, 256.5436,69.7123,1003.6406) && !PlayerToPoint(3.0, playerid, 259.2474,120.3977,1003.2188) && !PlayerToPoint(3.0, playerid, 198.9671,168.1982,1003.0234) && !PlayerToPoint(3.0, playerid, 234.8419,111.2194,1003.2257) && !PlayerToPoint(3.0, playerid, 326.8282,304.4166,999.1484)
                && !PlayerToPoint(3.0, playerid, 1898.40,1193.43,18.17)&& !PlayerToPoint(3.0, playerid, 223.3242,109.9442,1010.2188) && !PlayerToPoint(3.0, playerid, -103.09999847412,-2257,11.199999809265))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "   Você não está na recepção do Departamento de Policia!");
                    return 1;
                }
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "USE: /limpar [id]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não limpar sua própria ficha!"); return 1; }
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* Você limpou a ficha de %s.", giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Oficial %s Limpou a Ficha.", sendername);
                        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                        WantedPoints[giveplayerid] = 0;
                        SetPlayerWantedLevel(giveplayerid, 0);
                        ClearCrime(giveplayerid);
                        //ProcuradoPlayer(giveplayerid);
                        if(gTeam[giveplayerid]==4)
                        {
                            gTeam[giveplayerid] = 3;
                            SetPlayerToTeamColor(giveplayerid);
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Invalido ID/NICK!");
                }
            }
            else if(member == 12||member == 13||lider == 12||lider == 13)
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "USE: /limpar [id]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode limpar-se!"); return 1; }
                        if(rank < 3) { SendClientMessage(playerid, COLOR_GREY, "   Apenas Cargo 3+ Podem Limpar Ficha !"); return 1; }
                        if(GetPlayerMoneyEx(playerid) < 5000) { SendClientMessage(playerid, COLOR_GREY, "   Você precisa de R$5000 para limpar a ficha !"); return 1; }
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        if(member > 0)
                        {
                            if(PlayerInfo[giveplayerid][pMembro] != member)
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   O Jogador não é da sua família !");
                                return 1;
                            }
                            format(string, sizeof(string), "* Você limpou a ficha do(a) %s por R$5000.", giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* Membro %s cargo %d, limpou sua ficha.", sendername, rank);
                            SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                        }
                        else if(lider > 0)
                        {
                            if(PlayerInfo[giveplayerid][pMembro] != lider)
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   O Jogador não é da sua família !");
                                return 1;
                            }
                            format(string, sizeof(string), "* Você limpou a ficha do(a) %s por R$5000.", giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* Lider %s, limpou sua ficha.", sendername);
                            SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                        }
                        WantedPoints[giveplayerid] = 0;
                        SetPlayerWantedLevel(giveplayerid, 0);
                        ClearCrime(giveplayerid);
                        GivePlayerMoney(playerid, - 5000);
                        //ProcuradoPlayer(giveplayerid);
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   ID/Nick! Invalido");
                }
            }

        }//not connected
        return 1;
    }
    if(strcmp(cmd, "/multar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(!IsACop(playerid))
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
                return 1;
            }
            if(OnDuty[playerid] != 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não bateu o cartão!");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /multar [ID] [Custo] [Razao]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /multar [ID] [Custo] [Razao]");
                return 1;
            }
            moneys = strval(tmp);
            if(moneys < 1000 || moneys > 30000) { SendClientMessage(playerid, COLOR_GREY, "Custo entre 1000 e 30000 !"); return 1; }
            if(IsPlayerConnected(giveplayerid))
            {
                if(IsACop(giveplayerid))
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "Você não pode multar Policiais!");
                    return 1;
                }
                if(PlayerInfo[giveplayerid][pJailed] > 0)
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "Você não pode multar jogadores que estejam presos!");
                    return 1;
                }
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if (ProxDetectorS(25.0, playerid, giveplayerid))
                    {
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        new length = strlen(cmdtext);
                        while ((idx < length) && (cmdtext[idx] <= ' '))
                        {
                            idx++;
                        }
                        new offset = idx;
                        new result[100];
                        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
                        {
                            result[idx - offset] = cmdtext[idx];
                            idx++;
                        }
                        result[idx - offset] = EOS;
                        if(!strlen(result))
                        {
                            SendClientMessage(playerid, COLOR_GRAD2, "USE: /multar [ID] [Custo] [Razao]");
                            return 1;
                        }
                        format(string, sizeof(string), "* Você multou %s por $%d, Razao: %s", giveplayer, moneys, (result));
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Oficial %s lhe deu uma multa no valor de $%d, Razao: %s", sendername, moneys, (result));
                        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                        SendClientMessage(giveplayerid, COLOR_LIGHTRED, "* Use /aceitar multa, para aceita-la.");
                        SendClientMessage(giveplayerid, COLOR_LIGHTRED, "* Se em 5 minutos você não pagar, irá preso!");
                        TicketOffer[giveplayerid] = playerid;
                        TicketMoney[giveplayerid] = moneys;
                        SetTimerEx("PresoMulta", 300000, false, "i", giveplayerid);
                        return 1;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "O jogador está longe !");
                        return 1;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "O jogador está offline!");
                return 1;
            }
        }
        return 1;
    }
//BARREIRAS
    if(strcmp(cmdtext, "/barreira", true)==0 || strcmp(cmdtext, "/br", true)==0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid,COLOR_GREY,"Você não pode Este comando preso!");
            return 1;
        }
        if(IsPlayerInPref(playerid))
        {
            SendClientMessage(playerid,COLOR_GREY,"Você Usar Este Comando Perto da Prefeitura!");
            return 1;
        }
        if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Você não é um Policial!");
        if(PlayerPaintballing[playerid] != 0)
        {
            SendClientMessage(playerid,COLOR_YELLOW," Você não pode por barreiras no evento!");
            return 1;
        }
        if (pRoadblock[playerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "Você só pode criar 1 barreira por vez, /rbr - para remover sua barreira");
        new Float:X, Float:Y, Float:Z, Float:A;
        GetPlayerPos(playerid, X, Y, Z);
        GetPlayerFacingAngle(playerid, A);
        pRoadblock[playerid] = CreateDynamicObject(981, X, Y, Z, 0.0, 0.0, A+180);
        SetPlayerPos(playerid, X, Y, Z+4);
        GameTextForPlayer(playerid, "~w~Barreira ~r~Criada", 5000, 5);
        SendClientMessage(playerid, COLOR_GREEN, "Barreira Implantada... Use /rbr Para Remove-la!");
        format(string, sizeof(string), "Estado: Uma barreira foi posta por %s.", PlayerName(playerid));
  for(new i = 0; i < MaiorID; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(IsACop(i))
                {
                    SendClientMessage(i, TEAM_BLUE_COLOR, string);
                    if (PlayerInfo[i][pCargo] >= 5 || PlayerInfo[i][pLider] > 0)
                    {
                        SendClientMessage(i, TEAM_BLUE_COLOR, "Você pode remover todas as barreiras usando /rbrall");
                    }
                }
            }
        }
        return 1;
    }
    if(strcmp(cmdtext, "/removerbarreira", true)==0 || strcmp(cmdtext, "/rbr", true)==0)
    {
        if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Você não é um Policial!");
        if (pRoadblock[playerid] != 0)
        {
            RemoveRoadblock(playerid);
            SendClientMessage(playerid, COLOR_GREY, "Você retirou a sua barreira!");
        }
        else { return SendClientMessage(playerid, COLOR_GREY, "Você não criou uma barreira!"); }
        format(string, sizeof(string), "Estado: Uma barreira foi destruída por %s.", PlayerName(playerid));
  for(new i = 0; i < MaiorID; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(IsACop(i))
                {
                    SendClientMessage(i, TEAM_BLUE_COLOR, string);
                }
            }
        }
        return 1;
    }
    if(strcmp(cmdtext, "/removertodasbarreiras", true)==0 || strcmp(cmdtext, "/rbrall", true)==0)
    {
        if ((PlayerInfo[playerid][pCargo] >= 4 && IsACop(playerid)) || PlayerInfo[playerid][pAdmin] >= 1)
        {
   for(new i = 0; i < MaiorID; i++)
            {
                if(pRoadblock[i] != 0)
                {
                    RemoveRoadblock(i);
                }
            }
            format(string, sizeof(string), "Estado: Todas as barreiras foram retiradas por: %s.", PlayerName(playerid));
   for(new i = 0; i < MaiorID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(IsACop(i))
                    {
                        SendClientMessage(i, TEAM_BLUE_COLOR, string);
                    }
                }
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "Você precisa ser cargo 4+ ou um líder de alguma organização policial para remover todas as barreiras!");
        }
        return 1;
    }
    if(strcmp(cmdtext, "/cone", true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
            {
                SendClientMessage(playerid,COLOR_GREY,"Você não pode usar esee comando enquanto estiver preso!");
                return 1;
            }
            if(IsPlayerInPref(playerid))
        {
            SendClientMessage(playerid,COLOR_GREY,"Você não pode usar esse comando perto da prefeitura!");
            return 1;
        }
        if (!IsACop(playerid)) { SendClientMessage(playerid, COLOR_GREY, "Você não é um oficial!"); return 1; }
        new Float:X, Float:Y, Float:Z, Float:A;
        GetPlayerPos(playerid, X, Y, Z);
        GetPlayerFacingAngle(playerid, A);
        if(PlayerInfo[playerid][pCone] == 0)
        {
            SendClientMessage(playerid, COLOR_WHITE, "Cone implantado, use /rcone para retirá-lo.");
            Cone[0] = CreateDynamicObject(1238, X, Y, Z-0.6, 0.0, 0.0, A+180);
            SetPlayerPos(playerid, X, Y, Z+2);
            GameTextForPlayer(playerid, "~w~Cone ~b~~h~~h~Colocado", 5000, 5);
            PlayerInfo[playerid][pCone] += 1;
        }
        else if(PlayerInfo[playerid][pCone] == 1)
        {
            SendClientMessage(playerid, COLOR_WHITE, "Cone implantado, use /rcone para retirá-lo.");
            Cone[1] = CreateDynamicObject(1238, X, Y, Z-0.6, 0.0, 0.0, A+180);
            SetPlayerPos(playerid, X, Y, Z+2);
            GameTextForPlayer(playerid, "~w~Cone ~b~~h~~h~Colocado", 5000, 5);
            PlayerInfo[playerid][pCone]++;
        }
        else if(PlayerInfo[playerid][pCone] == 2)
        {
            SendClientMessage(playerid, COLOR_WHITE, "Cone implantado, use /rcone para retirá-lo.");
            Cone[2] = CreateDynamicObject(1238, X, Y, Z-0.6, 0.0, 0.0, A+180);
            SetPlayerPos(playerid, X, Y, Z+2);
            GameTextForPlayer(playerid, "~w~Cone ~b~~h~~h~Colocado", 5000, 5);
            PlayerInfo[playerid][pCone]++;
        }
        else if(PlayerInfo[playerid][pCone] == 3)
        {
            SendClientMessage(playerid, COLOR_WHITE, "Cone implantado, use /rcone para retirá-lo.");
            Cone[3] = CreateDynamicObject(1238, X, Y, Z-0.6, 0.0, 0.0, A+180);
            SetPlayerPos(playerid, X, Y, Z+2);
            GameTextForPlayer(playerid, "~w~Cone ~b~~h~~h~Colocado", 5000, 5);
            PlayerInfo[playerid][pCone]++;
        }
        else if(PlayerInfo[playerid][pCone] == 4)
        {
            SendClientMessage(playerid, COLOR_WHITE, "Cone implantado, use /rcone para retirá-lo.");
            Cone[4] = CreateDynamicObject(1238, X, Y, Z-0.6, 0.0, 0.0, A+180);
            SetPlayerPos(playerid, X, Y, Z+2);
            GameTextForPlayer(playerid, "~w~Cone ~b~~h~~h~Colocado", 5000, 5);
            PlayerInfo[playerid][pCone]++;
        }
        else if(PlayerInfo[playerid][pCone] == 5)
        {
            SendClientMessage(playerid, COLOR_WHITE, "Cone implantado, use /rcone para retirá-lo.");
            Cone[5] = CreateDynamicObject(1238, X, Y, Z-0.6, 0.0, 0.0, A+180);
            SetPlayerPos(playerid, X, Y, Z+2);
            GameTextForPlayer(playerid, "~w~Cone ~b~~h~~h~Colocado", 5000, 5);
            PlayerInfo[playerid][pCone]++;
        }
        else if(PlayerInfo[playerid][pCone] == 6)
        {
            SendClientMessage(playerid, COLOR_WHITE, "Cone implantado, use /rcone para retirá-lo.");
            Cone[6] = CreateDynamicObject(1238, X, Y, Z-0.6, 0.0, 0.0, A+180);
            SetPlayerPos(playerid, X, Y, Z+2);
            GameTextForPlayer(playerid, "~w~Cone ~b~~h~~h~Colocado", 5000, 5);
            PlayerInfo[playerid][pCone]++;
        }
        else if(PlayerInfo[playerid][pCone] == 7)
        {
            SendClientMessage(playerid, COLOR_WHITE, "Cone implantado, use /rcone para retirá-lo.");
            Cone[7] = CreateDynamicObject(1238, X, Y, Z-0.6, 0.0, 0.0, A+180);
            SetPlayerPos(playerid, X, Y, Z+2);
            GameTextForPlayer(playerid, "~w~Cone ~b~~h~~h~Colocado", 5000, 5);
            PlayerInfo[playerid][pCone]++;
        }
        else if(PlayerInfo[playerid][pCone] == 8)
        {
            SendClientMessage(playerid, COLOR_WHITE, "Cone implantado, use /rcone para retirá-lo.");
            Cone[8] = CreateDynamicObject(1238, X, Y, Z-0.6, 0.0, 0.0, A+180);
            SetPlayerPos(playerid, X, Y, Z+2);
            GameTextForPlayer(playerid, "~w~Cone ~b~~h~~h~Colocado", 5000, 5);
            PlayerInfo[playerid][pCone]++;
        }
        else if(PlayerInfo[playerid][pCone] == 9)
        {
            SendClientMessage(playerid, COLOR_WHITE, "Cone implantado, use /rcone para retirá-lo.");
            Cone[9] = CreateDynamicObject(1238, X, Y, Z-0.6, 0.0, 0.0, A+180);
            SetPlayerPos(playerid, X, Y, Z+2);
            GameTextForPlayer(playerid, "~w~Cone ~b~~h~~h~Colocado", 5000, 5);
            PlayerInfo[playerid][pCone]++;
        }
        else if(PlayerInfo[playerid][pCone] == 10)
        {
            SendClientMessage(playerid, COLOR_RED, "Você já utilizou seus 10 cones, use /rcone para retirá-los.");
        }
        if(PlayerInfo[playerid][pCone] != 10 && PlayerInfo[playerid][pCone] != 0)
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            format(string, sizeof(string), "Estado: Cone colocado por: %s.", sendername);
            for(new i = 0; i < MaiorID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(IsACop(i))
                    {
                        SendClientMessage(i, TEAM_BLUE_COLOR, string);
                    }
                }
            }
        }
        return 1;
    }
    if(strcmp(cmdtext, "/retirarcone", true)==0 || strcmp(cmdtext, "/rcone", true)==0)
    {
        if (!IsACop(playerid))
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não é um Policial.");
            return 1;
        }
        if (PlayerInfo[playerid][pCone] == 0)
        {
            SendClientMessage(playerid, COLOR_GREY, "Nenhum cone implantado!");
            return 1;
        }
        RemoveCone(playerid);
        GetPlayerName(playerid, sendername, sizeof(sendername));
        format(string, sizeof(string), "Estado: Cone retirado pelo oficial: %s.", sendername);
        for(new i = 0; i < MaiorID; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(IsACop(i))
                {
                    SendClientMessage(i, TEAM_BLUE_COLOR, string);
                }
            }
        }
        SendClientMessage(playerid, COLOR_GREEN, "Cones retirados com sucesso.");
        return 1;
    }
    if(strcmp(cmdtext, "/removertodoscones", true)==0 || strcmp(cmdtext, "/rconeall", true)==0)
    {
        if (!IsACop(playerid)) { SendClientMessage(playerid, COLOR_GREY, "Você não é um Oficial!"); return 1; }
        if(PlayerInfo[playerid][pCargo] >= 3 && PlayerInfo[playerid][pLider] > 0)
        {
   for(new i = 0; i < MaiorID; i++)
            {
                if(PlayerInfo[i][pCone] != 0)
                {
                    RemoveCone(i);
                }
            }
            GetPlayerName(playerid, sendername, sizeof(sendername));
            format(string, sizeof(string), "Estado: Todos os cones foram retirados pelo oficial: %s.", sendername);
   for(new i = 0; i < MaiorID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(IsACop(i))
                    {
                        SendClientMessage(i, TEAM_BLUE_COLOR, string);
                    }
                }
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "Você precisa ser cargo 3+ ou Lider para usar este comando!");
        }
        return 1;
    }
    if(strcmp(cmdtext, "/removerprego", true)==0 || strcmp(cmdtext, "/rpr", true)==0)
    {
        if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Você não é um Policial!");
        if (SpikeInfo[playerid][sCreated] == 0)
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não criou nenhum tapete de pregos!");
            return 1;
        }
        RemoveRoadPregos(playerid);
        SendClientMessage(playerid, COLOR_GREY, "Você retirou seu tapete de pregos!");
        format(string, sizeof(string), "Estado: %s removeu seu tapete de pregos.", PlayerName(playerid));
  for(new i = 0; i < MaiorID; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(IsACop(i))
                {
                    SendClientMessage(i, TEAM_BLUE_COLOR, string);
                }
            }
        }
        return 1;
    }
    if(strcmp(cmdtext, "/removerprall", true)==0 || strcmp(cmdtext, "/rprall", true)==0)
    {
        if (PlayerInfo[playerid][pCargo] >= 4 && IsACop(playerid) || PlayerInfo[playerid][pAdmin] >= 1)
        {
      for(new i = 0; i < MaiorID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(SpikeInfo[playerid][sCreated] != 0)
                    {
                        RemoveRoadPregos(i);
                    }
                }
            }
            format(string, sizeof(string), "Estado: Todos os pregos foram retirados por: %s.", PlayerName(playerid));
   for(new i = 0; i < MaiorID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if (IsACop(i))
                    {
                        SendClientMessage(i, TEAM_BLUE_COLOR, string);
                    }
                }
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "Você precisa ser cargo 4+ ou um líder de alguma organização policial para remover todos os tapetes de pregos!");
        }
        return 1;
    }
    if(strcmp(cmdtext, "/prego", true)==0 || strcmp(cmdtext, "/pregos", true)==0)
    {
        if(PlayerPaintballing[playerid] != 0)
        {
            SendClientMessage(playerid,COLOR_YELLOW," Você não pode por pregos no evento!");
            return 1;
        }
        if(IsPlayerInPref(playerid))
        {
            SendClientMessage(playerid,COLOR_GREY,"Você Usar Este Comando Perto da Prefeitura!");
            return 1;
        }
        if(PlayerInfo[playerid][pJailed] != 0)
            {
                SendClientMessage(playerid,COLOR_GREY,"Você não pode Este comando preso!");
                return 1;
            }
        if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Você não é COP!");
        if (SpikeInfo[playerid][sCreated] != 0) return SendClientMessage(playerid, COLOR_GREY, "Você só pode implantar 1 prego por vez, /rpr - para remover seu tapete de pregos.");
        new Float:X, Float:Y, Float:Z, Float:A;
        GetPlayerPos(playerid, X, Y, Z);
        GetPlayerFacingAngle(playerid, A);
        SpikeInfo[playerid][sCreated]=1;
        SpikeInfo[playerid][sX]=X;
        SpikeInfo[playerid][sY]=Y;
        SpikeInfo[playerid][sZ]=Z-0.7;
        SpikeInfo[playerid][sObject] = CreateDynamicObject(2899, X, Y, Z-0.9, 0, 0, A-90);
        GameTextForPlayer(playerid, "~w~Pregos ~r~Criados", 5000, 5);
        SendClientMessage(playerid, COLOR_GREEN, "Pregos Implantados... Use /rpr Para Remover e Poder Criar Mais!.");
        format(string, sizeof(string), "Estado: Um prego foi bem plantado por %s.", PlayerName(playerid));
  for(new i = 0; i < MaiorID; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(IsACop(i))
                {
                    SendClientMessage(i, TEAM_BLUE_COLOR, string);
                    if (PlayerInfo[i][pCargo] >= 5 && IsACop(i))
                    {
                        SendClientMessage(i, COLOR_YELLOW, "Você pode remover todos os pregos usando /rprall");
                    }
                }
            }
        }
        return 1;
    }
    //colocar emprego aki
    if(strcmp(cmdtext, "/plantarbarraca", true)==0 || strcmp(cmdtext, "/pbarraca", true)==0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
            {
                SendClientMessage(playerid,COLOR_GREY,"Você não pode Este comando preso!");
                return 1;
            }
            if(IsPlayerInPref(playerid))
        {
            SendClientMessage(playerid,COLOR_GREY,"Você Usar Este Comando Perto da Prefeitura!");
            return 1;
        }
        if (PlayerInfo[playerid][pEmprego] != 10) return SendClientMessage(playerid, COLOR_GREY, "Você não é Mendigo!");
        if(PlayerInfo[playerid][pJailed] != 0)
        {
           SendClientMessage(playerid,COLOR_YELLOW," Você não pode plantar barracas na cadeia!");
           return 1;
        }
        if(PlayerPaintballing[playerid] != 0)
        {
           SendClientMessage(playerid,COLOR_YELLOW," Você não pode por barracas no evento!");
           return 1;
        }
        if (PlayerInfo[playerid][pBarraca] != 0) return SendClientMessage(playerid, COLOR_GREY, "Você só pode implantar uma barraca por vez, /rbarraca - para remover sua barraca.");
        new Float:X, Float:Y, Float:Z, Float:A;
        GetPlayerPos(playerid, X, Y, Z);
        GetPlayerFacingAngle(playerid, A);
        PlayerInfo[playerid][pBarraca] = CreateDynamicObject(1457, X, Y, Z, 0.0, 0.0, A+180);
        SetPlayerPos(playerid, X, Y, Z+4);
        GameTextForPlayer(playerid, "~w~Barraquinha ~r~Criada", 5000, 5);
        SendClientMessage(playerid, COLOR_GREEN, "Barraca Implantada... Use /rbarraca para remover e poder criar em outro lugar!.");
        SendClientMessage(playerid, COLOR_YELLOW, "Agora você pode trafegar ou dormir em sua barraca");
        return 1;
    }
    if(strcmp(cmdtext, "/removerbarraca", true)==0 || strcmp(cmdtext, "/rbarraca", true)==0)
    {
        if (PlayerInfo[playerid][pEmprego] != 10 || PlayerInfo[playerid][pAdmin] >= 1)
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não é um Mendigo !");
            return 1;
        }
        if (PlayerInfo[playerid][pBarraca] == 0)
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não criou nenhuma barraca!");
            return 1;
        }
        RemoveBarraca(playerid);
        SendClientMessage(playerid, COLOR_GREEN, "Barracas removidas com sucesso.");
        return 1;
    }
    if(strcmp(cmdtext, "/bloqueio", true)==0 || strcmp(cmdtext, "/bq", true)==0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
            {
                SendClientMessage(playerid,COLOR_GREY,"Você não pode Este comando preso!");
                return 1;
            }
            if(IsPlayerInPref(playerid))
        {
            SendClientMessage(playerid,COLOR_GREY,"Você Usar Este Comando Perto da Prefeitura!");
            return 1;
        }
        if(PlayerPaintballing[playerid] != 0)
        {
            SendClientMessage(playerid,COLOR_YELLOW," Você não pode por bloqueios no evento!");
            return 1;
        }
        if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Você não é um policial!");
        if (pRoadBloq[playerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "Você só pode implantar 1 Bloqueio por vez, /rbq - para remover seu bloqueio.");
        new Float:X, Float:Y, Float:Z, Float:A;
        GetPlayerPos(playerid, X, Y, Z);
        GetPlayerFacingAngle(playerid, A);
        pRoadBloq[playerid] = CreateDynamicObject(4526, X, Y, Z+1, 0.0, 0.0, A+110);
        SetPlayerPos(playerid, X, Y, Z+1);
        GameTextForPlayer(playerid, "~w~Bloqueio ~r~Criado", 5000, 5);
        SendClientMessage(playerid, COLOR_GREEN, "Bloqueio Implantado... Use /rbq Para Remover e Poder Criar Mais!.");
        format(string, sizeof(string), "Estado: Um Bloqueio foi posto por %s.", PlayerName(playerid));
  for(new i = 0; i < MaiorID; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(IsACop(i))
                {
                    SendClientMessage(i, TEAM_BLUE_COLOR, string);
                    if (PlayerInfo[i][pCargo] >= 5 && IsACop(i))
                    {
                        SendClientMessage(i, COLOR_YELLOW, "Você pode remover todos os Bloqueios usando /rbqall");
                    }
                }
            }
        }
        return 1;
    }
    if(strcmp(cmd,"/plataforma",true)==0 || strcmp(cmd,"/rampa",true)==0)
    {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
        {
            SendClientMessage(playerid, COLOR_GRAD2, "USE: /plataforma [Tipo (1 ou 2)]");
            return 1;
        }
        new PtTipo = strval(tmp);
        if(PlayerInfo[playerid][pJailed] != 0)
            {
                SendClientMessage(playerid,COLOR_GREY,"Você não pode Este comando preso!");
                return 1;
            }
        if(!IsPlayerInAnyVehicle(playerid) || GetVehicleModel(GetPlayerVehicleID(playerid)) != 497)
        {
            SendClientMessage(playerid,COLOR_GREY,"Você precisa Estar em um Helicóptero da Polícia!");
            return 1;
        }
        if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Você não é um policial!");
        if (pRoadRampa[playerid][1] != 0) return SendClientMessage(playerid, COLOR_GREY, "Você só pode implantar 1 Plataforma por vez, /rplataforma - para remover sua plataforma.");
        switch(PtTipo)
        {
            case 2:
            {
                pRoadRampa[playerid][0] = CreateDynamicObject(3280, 0.0, 0.0, -10.0, 0.0, 0.0, 0.0);
                pRoadRampa[playerid][1] = CreateDynamicObject(3280, 0.0, 0.0, -10.0, 0.0, 0.0, 0.0);
                pRoadRampa[playerid][2] = CreateDynamicObject(3280, 0.0, 0.0, -10.0, 0.0, 0.0, 0.0);
                pRoadRampa[playerid][3] = CreateDynamicObject(3280, 0.0, 0.0, -10.0, 0.0, 0.0, 0.0);
                pRoadRampa[playerid][4] = CreateDynamicObject(3280, 0.0, 0.0, -10.0, 0.0, 0.0, 0.0);
                pRoadRampa[playerid][5] = CreateDynamicObject(3280, 0.0, 0.0, -10.0, 0.0, 0.0, 0.0);
                pRoadRampa[playerid][6] = CreateDynamicObject(970, 0.0, 0.0, -10.0, 0.0, 0.0, 0.0);
                pRoadRampa[playerid][7] = CreateDynamicObject(970, 0.0, 0.0, -10.0, 0.0, 0.0, 0.0);
                pRoadRampa[playerid][8] = CreateDynamicObject(1238, 0.0, 0.0, -10.0, 0.0, 0.0, 0.0);
                pRoadRampa[playerid][9] = CreateDynamicObject(1238, 0.0, 0.0, -10.0, 0.0, 0.0, 0.0);
                AttachDynamicObjectToVehicle(pRoadRampa[playerid][0], GetPlayerVehicleID(playerid), 1.874998, 0.809999, -1.064999, 0.000000, 0.000000, 0.000000); //Object Model: 3280 |
                AttachDynamicObjectToVehicle(pRoadRampa[playerid][1], GetPlayerVehicleID(playerid), 1.869998, 2.370006, -1.064999, 0.000000, 0.000000, 0.000000); //Object Model: 3280 |
                AttachDynamicObjectToVehicle(pRoadRampa[playerid][2], GetPlayerVehicleID(playerid), 3.455031, 0.814999, -1.049999, 0.000000, 0.000000, 0.000000); //Object Model: 3280 |
                AttachDynamicObjectToVehicle(pRoadRampa[playerid][3], GetPlayerVehicleID(playerid), 3.450031, 2.365006, -1.054999, 0.000000, 0.000000, 0.000000); //Object Model: 3280 |
                AttachDynamicObjectToVehicle(pRoadRampa[playerid][4], GetPlayerVehicleID(playerid), 1.864998, -0.689999, -1.074999, 0.000000, 0.000000, 0.000000); //Object Model: 3280 |
                AttachDynamicObjectToVehicle(pRoadRampa[playerid][5], GetPlayerVehicleID(playerid), 3.460031, -0.674999, -1.054999, 0.000000, 0.000000, 0.000000); //Object Model: 3280 |
                AttachDynamicObjectToVehicle(pRoadRampa[playerid][6], GetPlayerVehicleID(playerid), 2.205003, -1.434998, -0.519999, 0.000000, 0.000000, 0.000000); //Object Model: 970 |
                AttachDynamicObjectToVehicle(pRoadRampa[playerid][7], GetPlayerVehicleID(playerid), 2.170002, 3.140024, -0.524999, 0.000000, 0.000000, 0.000000); //Object Model: 970 |
                AttachDynamicObjectToVehicle(pRoadRampa[playerid][8], GetPlayerVehicleID(playerid), 3.935042, -1.044999, -0.749999, -0.000000, -0.000000, 37.184993); //Object Model: 1238 |
                AttachDynamicObjectToVehicle(pRoadRampa[playerid][9], GetPlayerVehicleID(playerid), 3.903541, 2.790016, -0.719999, 0.000000, 0.000000, 108.539901); //Object Model: 1238 |
            }
            case 1:
            {
                pRoadRampa[playerid][0] = CreateDynamicObject(1412, 0.0, 0.0, -10.0, 0.0, 0.0, 0.0);
                pRoadRampa[playerid][1] = CreateDynamicObject(991, 0.0, 0.0, -10.0, 0.0, 0.0, 0.0);
                pRoadRampa[playerid][2] = CreateDynamicObject(1238, 0.0, 0.0, -10.0, 0.0, 0.0, 0.0);
                pRoadRampa[playerid][3] = CreateDynamicObject(1238, 0.0, 0.0, -10.0, 0.0, 0.0, 0.0);
                pRoadRampa[playerid][4] = CreateDynamicObject(1238, 0.0, 0.0, -10.0, 0.0, 0.0, 0.0);
                pRoadRampa[playerid][5] = CreateDynamicObject(1238, 0.0, 0.0, -10.0, 0.0, 0.0, 0.0);
                AttachDynamicObjectToVehicle(pRoadRampa[playerid][0], GetPlayerVehicleID(playerid), 2.325005, 0.379999, -0.999999, 90.449951, -0.000001, -90.449951); //Object Model: 1412 |
                AttachDynamicObjectToVehicle(pRoadRampa[playerid][1], GetPlayerVehicleID(playerid), 2.400007, 0.554999, -0.969999, 90.148422, 90.449951, -1.306500); //Object Model: 991 |
                AttachDynamicObjectToVehicle(pRoadRampa[playerid][2], GetPlayerVehicleID(playerid), 2.965020, -2.335005, -0.639999, 0.000000, 0.000000, 36.179992); //Object Model: 1238 |
                AttachDynamicObjectToVehicle(pRoadRampa[playerid][3], GetPlayerVehicleID(playerid), 1.739998, -2.290004, -0.649999, 0.000000, 0.000000, 186.930130); //Object Model: 1238 |
                AttachDynamicObjectToVehicle(pRoadRampa[playerid][4], GetPlayerVehicleID(playerid), 1.894998, 3.420030, -0.654999, 0.000000, 0.000000, 43.215000); //Object Model: 1238 |
                AttachDynamicObjectToVehicle(pRoadRampa[playerid][5], GetPlayerVehicleID(playerid), 2.935019, 3.365029, -0.644999, 0.000000, 0.000000, 40.199996); //Object Model: 1238 |
            }
            default:
            {
                 return SendClientMessage(playerid,COLOR_GREY,"Tipo de Plataforma Inválido, USE: /plataforma [Tipo (1 ou 2)]!");
            }
        }
        GameTextForPlayer(playerid, "~w~Plataforma ~r~Criada", 5000, 5);
        SendClientMessage(playerid, COLOR_GREEN, "Plataforma Implantada... Use /rplataforma Para Remover e Poder Criar Mais!.");
        format(string, sizeof(string), "Estado: Uma Plataforma foi posta em um Helicóptero por %s.", PlayerName(playerid));
        for(new i = 0; i < MaiorID; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(IsACop(i))
                {
                    SendClientMessage(i, TEAM_BLUE_COLOR, string);
                    if (PlayerInfo[i][pCargo] >= 5 && IsACop(i))
                    {
                        SendClientMessage(i, COLOR_YELLOW, "Você pode remover todas as Plataformas usando /rplataformaall");
                    }
                }
            }
        }
        return 1;
    }
    if(strcmp(cmdtext, "/removerbloqueio", true)==0 || strcmp(cmdtext, "/rbq", true)==0)
    {
        if (!IsACop(playerid))
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não é um policial!");
            return 1;
        }
        if (pRoadBloq[playerid] == 0)
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não criou nenhum bloqueio Bloqueio!");
            return 1;
        }
        SendClientMessage(playerid, COLOR_GREY, "Você retirou o seu Bloqueio!");
        RemoveRoadBloq(playerid);
        format(string, sizeof(string), "Estado: %s removeu seu bloqueio.", PlayerName(playerid));
  for(new i = 0; i < MaiorID; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(IsACop(i))
                {
                    SendClientMessage(i, TEAM_BLUE_COLOR, string);
                }
            }
        }
        return 1;
    }
    if(strcmp(cmdtext, "/rrampa", true)==0 || strcmp(cmdtext, "/rplataforma", true)==0)
    {
        if (!IsACop(playerid))
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não é um policial!");
            return 1;
        }
        if (pRoadRampa[playerid][1] == 0)
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não criou nenhuma Plataforma!");
            return 1;
        }
        SendClientMessage(playerid, COLOR_GREY, "Você retirou a sua Plataforma!");
        RemovePlataforma(playerid);
        format(string, sizeof(string), "Estado: %s removeu sua Plataforma.", PlayerName(playerid));
        for(new i = 0; i < MaiorID; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(IsACop(i))
                {
                    SendClientMessage(i, TEAM_BLUE_COLOR, string);
                }
            }
        }
        return 1;
    }
    if(strcmp(cmdtext, "/removerbloqueioall", true)==0 || strcmp(cmdtext, "/rbqall", true)==0)
    {
        if (IsACop(playerid) || PlayerInfo[playerid][pAdmin] >= 1)
        {
   for(new i = 0; i < MaiorID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(pRoadBloq[i] != 0)
                    {
                        RemoveRoadBloq(i);
                    }
                }
            }
            format(string, sizeof(string), "Estado: Todos os Bloqueios foram retirados por: %s.", PlayerName(playerid));
   for(new i = 0; i < MaiorID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(IsACop(i))
                    {
                        SendClientMessage(i, TEAM_BLUE_COLOR, string);
                    }
                }
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "Você precisa ser cargo 4+ ou ser um líder da polícia para remover todos os Bloqueios!");
        }
        return 1;
    }
    if(strcmp(cmdtext, "/rrampaall", true)==0 || strcmp(cmdtext, "/rplataformaall", true)==0)
    {
        if (IsACop(playerid) || PlayerInfo[playerid][pAdmin] >= 1)
        {
   for(new i = 0; i < MaiorID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(pRoadRampa[i][1] != 0)
                    {
                        RemovePlataforma(i);
                    }
                }
            }
            format(string, sizeof(string), "Estado: Todos as Plataformas foram retirados por: %s.", PlayerName(playerid));
   for(new i = 0; i < MaiorID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(IsACop(i))
                    {
                        SendClientMessage(i, TEAM_BLUE_COLOR, string);
                    }
                }
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "Você precisa ser cargo 4+ ou ser um líder da polícia para remover todos os Bloqueios!");
        }
        return 1;
    }
    if(strcmp(cmdtext, "/paredao", true)==0 || strcmp(cmdtext, "/paredaoadm", true)==0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
            {
                SendClientMessage(playerid,COLOR_GREY,"Você não pode Este comando preso!");
                return 1;
            }
            if(IsPlayerInPref(playerid))
        {
            SendClientMessage(playerid,COLOR_GREY,"Você Usar Este Comando Perto da Prefeitura!");
            return 1;
        }
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid,COLOR_YELLOW," Você não pode colocar paredao na cadeia!");
            return 1;
        }
        if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
        {
            SendClientMessage(playerid, -1, "Você não está trabalhando! {E31919}(/trabalhar)");
            return 1;
        }
        if (PlayerInfo[playerid][pAdmin] == 0) return SendClientMessage(playerid, COLOR_GREY, "Você não é Admin!");
        new Float:X, Float:Y, Float:Z, Float:A;
        GetPlayerPos(playerid, X, Y, Z);
        GetPlayerFacingAngle(playerid, A);
        PlayerInfo[playerid][pParedao] = CreateDynamicObject(972, X, Y, Z-2, 0.0, 0.0, A+90);
        SetPlayerPos(playerid, X, Y, Z+4);
        GameTextForPlayer(playerid, "~w~Paredao ~r~Criado", 5000, 5);
        SendClientMessage(playerid, COLOR_GREEN, "Paredão Implantado... Use /rparedao Para Remover e Poder Criar Mais!.");
        format(string, sizeof(string), "AdmAviso: Um Paredão foi posto por %s.", PlayerName(playerid));
        ABroadCast(COLOR_YELLOW, string, 1);
        return 1;
    }
    if(strcmp(cmdtext, "/removerparedao", true)==0 || strcmp(cmdtext, "/rparedao", true)==0)
    {
        if (PlayerInfo[playerid][pAdmin] == 0)
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não é um Admin!");
            return 1;
        }
        if (PlayerInfo[playerid][pParedao] == 0)
        {
            SendClientMessage(playerid, COLOR_GREY, "Você não criou nenhum paredão!");
            return 1;
        }
        RemoveParedao(playerid);
        SendClientMessage(playerid, COLOR_GREEN, "Paredão removido com sucesso.");
        return 1;
    }
    if(strcmp(cmdtext, "/removerparedaotodos", true)==0 || strcmp(cmdtext, "/rpall", true)==0)
    {
        if (PlayerInfo[playerid][pAdmin] >= 3)
        {
   for(new i = 0; i < MaiorID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(PlayerInfo[i][pParedao] != 0)
                    {
                        RemoveParedao(i);
                    }
                }
            }
            format(string, sizeof(string), "Estado: Todos os Paredões foram retirados por: %s.", PlayerName(playerid));
            ABroadCast(TEAM_BLUE_COLOR, string, 1);
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "Você precisa ser admin nivel 3 + pra remover os paredões!");
        }
        return 1;
    }
    if(strcmp(cmdtext, "/robjetos", true)==0 || strcmp(cmdtext, "/rob", true)==0)
    {
        if(PlayerInfo[playerid][pAdmin] == 3000)
        {
            for(new i = 0; i < MaiorID; i++)
            {
                RemoveRoadblock(i);
                RemoveCone(i);
                RemoveRoadPregos(i);
                RemoveBarraca(i);
                RemoveRoadBloq(i);
                RemoveParedao(i);
                RemovePlataforma(i);
            }
            SendClientMessage(playerid, COLOR_GREY, "   Objetos Removidos!");
        }
        return 1;
    }
    if(strcmp(cmdtext, "/desbugarobjetos", true)==0 || strcmp(cmdtext, "/dob", true)==0)
    {
        new ObjectBugado = ObjetosPlayGamer+200;
        if(PlayerInfo[playerid][pAdmin] == 3000)
        {
            for(new i = 0; i < MaiorID; i++)
            {
                RemoveRoadblock(i);
                RemoveCone(i);
                RemoveRoadPregos(i);
                RemoveBarraca(i);
                RemoveRoadBloq(i);
                RemoveParedao(i);
                RemovePlataforma(i);
            }
            SendClientMessage(playerid, COLOR_LIGHTBLUE, " ** Objetos Que não Estão Bugados Removidos com Sucesso, Buscando Objetos Bugados.");
            for(new o = 0; o < ObjectBugado; o++)
            {
                if(o >= ObjetosPlayGamer)
                {
                    DestroyDynamicObject(o);
                    format(string, sizeof(string), "Objeto ID: %d, Estava bugado e foi Removido do Servidor com Sucesso.",o);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                }
            }
            SendClientMessage(playerid, COLOR_LIGHTBLUE, " ** O Servidor Finalizou a Busca... Caso ainda Tenha objetos Bugados use /gmx para Reiniciar o Servidor.");
        }
        return 1;
    }
    if(strcmp(cmd, "/ajustar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsACop(playerid))
            {
                if(OnDuty[playerid] != 1)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não bateu o cartão!");
        return 1;
                }
                if(!PlayerToPoint(12.0, playerid, 268.3327,77.8972,1001.0391) && !PlayerToPoint(12.0, playerid, 1545.4073,-1607.9791,13.3828) && !PlayerToPoint(12.0, playerid, 341.4560,-1499.6265,36.0390) && !PlayerToPoint(12.0, playerid, 920.5212,-1184.8267,16.9766) &&  !PlayerToPoint(12.0, playerid, 221.1459,115.3492,999.0156) && !PlayerToPoint(12.0, playerid, 193.9101,179.2799,1003.0234) && !PlayerToPoint(12.0, playerid, 1545.7220,-1609.4769,13.3828)
                && !PlayerToPoint(12.0, playerid, 1019.6051,-317.6436,73.9922) && !PlayerToPoint(12.0, playerid, 195.5733,158.4008,1003.0234)
                && !PlayerToPoint(12.0, playerid, -1298.8188,490.5014,11.1953) && !PlayerToPoint(12.0, playerid, 264.1557,77.5797,1001.0391) && !PlayerToPoint(12.0, playerid, 1361,175.1075,1003.0234) && !PlayerToPoint(12.0, playerid, 935.14,-1035.45,32.03) && !PlayerToPoint(12.0, playerid, 1368.4421,-1666.0829,13.4968) && !PlayerToPoint(12.0, playerid, -2441.0391,527.3107,29.9149)&& !PlayerToPoint(12.0, playerid, 944.2126,-1695.3010,14.3798))
                {// Jail spot
                    SendClientMessage(playerid, COLOR_GREY, "   Você não está perto da cela, não pode ajustar o tempo do suspeito !");
        return 1;
                }
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: /ajustar [id] [tempo (minutos)]");
     return 1;
                }
                giveplayerid = ReturnUser(tmp);
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: /ajustar [id] [tempo (minutos)]");
     return 1;
                }
                new time = strval(tmp);
                if(time < 1 || time > 20) { SendClientMessage(playerid, COLOR_GREY, "   O Tempo não pode ser menor que 1 nem maior que 20 !"); return 1; }
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: /ajustar [id] [tempo (minutos)]");
     return 1;
                }
                if(PlayerInfo[giveplayerid][pJailed] == 2)
                {
                    return SendClientMessage(playerid, COLOR_GRAD2, "Você não Pode ajustar um Player Preso pelo Administrador!");
                }
                new suspect = giveplayerid;
                if(IsPlayerConnected(suspect))
                {
                format(string, sizeof(string), "* Você ajustou %s !", giveplayer);
                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                PlayerInfo[suspect][pJailTime] = time * 60;
                format(string, sizeof(string), "Oficial %s ajustou seu tempo de prisão para %d Segundos.", PlayerName(playerid),PlayerInfo[suspect][pJailTime]);
                SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um Oficial !");
       return 1;
            }
        }//not connected
  return 1;
    }
    if(strcmp(cmd, "/prender", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsACop(playerid))
            {
                if(OnDuty[playerid] != 1)
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Você não bateu o cartão!");
                    return 1;
                }
                if(!PlayerToPoint(12.0, playerid, 268.3327,77.8972,1001.0391) && !PlayerToPoint(12.0, playerid, 1545.4073,-1607.9791,13.3828) && !PlayerToPoint(12.0, playerid, 341.4560,-1499.6265,36.0390) && !PlayerToPoint(12.0, playerid, 920.5212,-1184.8267,16.9766) &&  !PlayerToPoint(12.0, playerid, 221.1459,115.3492,999.0156) && !PlayerToPoint(12.0, playerid, 193.9101,179.2799,1003.0234) && !PlayerToPoint(12.0, playerid, 1545.7220,-1609.4769,13.3828)
                && !PlayerToPoint(12.0, playerid, 1019.6051,-317.6436,73.9922) && !PlayerToPoint(12.0, playerid, 195.5733,158.4008,1003.0234) && !PlayerToPoint(12.0, playerid,-84.300003051758,-2255.3999023438,11.10000038147)
                && !PlayerToPoint(12.0, playerid, -1298.8188,490.5014,11.1953) && !PlayerToPoint(12.0, playerid, 264.1557,77.5797,1001.0391) && !PlayerToPoint(12.0, playerid, 1361,175.1075,1003.0234) && !PlayerToPoint(12.0, playerid, 935.14,-1035.45,32.03) && !PlayerToPoint(12.0, playerid, 1368.4421,-1666.0829,13.4968) && !PlayerToPoint(12.0, playerid, -2441.0391,527.3107,29.9149)&& !PlayerToPoint(12.0, playerid, 944.2126,-1695.3010,14.3798))
                {// Jail spot
                    SendClientMessage(playerid, COLOR_GREY, "   Você não está perto da cela, não pode prender o suspeito !");
                    return 1;
                }
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: /prender [id] [tempo (minutos)] [fianca (0=nao 1=sim)] [preco da fianca]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: /prender [id] [tempo (minutos)] [fianca (0=nao 1=sim)] [preco da fianca]");
                    return 1;
                }
                new time = strval(tmp);
                if(time < 1 || time > 20) { SendClientMessage(playerid, COLOR_GREY, "   O Tempo não pode ser menor que 1 nem maior que 20 !"); return 1; }
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: /prender [id] [tempo (minutos)] [fianca (0=nao 1=sim)] [preco da fianca]");
                    return 1;
                }
                new bail = strval(tmp);
                if(bail < 0 || bail > 1) { SendClientMessage(playerid, COLOR_GREY, "   Fiança Tem Que ser 0=Não ou 1=Sim !"); return 1; }
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD2, "USE: /prender [id] [tempo (minutos)] [fianca (0=nao 1=sim)] [preco da fianca]");
                    return 1;
                }
                new bailprice = strval(tmp);
                if(bailprice < 0 || bailprice > 300000) { SendClientMessage(playerid, COLOR_GREY, "   O Preço não pode ser menor que 0 nem maior que R$300000 !"); return 1; }
                new suspect = giveplayerid;
                if(IsPlayerConnected(suspect))
                {
                    if(GetDistanceBetweenPlayers(playerid,suspect) < 15)
                    {
                        if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
                        {
                            GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            if(WantedPoints[suspect] < 1)
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no mínimo 1 nível de procurado!");
                                return 1;
                            }
                            format(string, sizeof(string), "* Você Prendeu %s !", giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            //GivePlayerMoney(suspect, -moneys);
                            format(string, sizeof(string), "Preso por %s", sendername);
                            GameTextForPlayer(suspect, string, 5000, 5);
                            ResetPlayerWeapons(suspect);
                            if(PlayerInfo[playerid][pMembro]==1||PlayerInfo[playerid][pLider]==1)
                            {
                                format(string, sizeof(string), "<< Policial Militar %s prendeu o suspeito %s >>", sendername, giveplayer);
                                OOCNews(COLOR_LIGHTRED, string);
                            }
                            SetPlayerInterior(suspect, 6);
                            SetPlayerPos(suspect,264.6288,77.5742,1001.0391);
                            PlayerInfo[suspect][pJailTime] = time * 60;
                            if(bail == 1)
                            {
                                JailPrice[suspect] = bailprice;
                                format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
                                SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
                            }
                            else
                            {
                                JailPrice[suspect] = 0;
                                format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: Desativada", PlayerInfo[suspect][pJailTime]);
                                SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
                            }
                            PlayerInfo[suspect][pJailed] = 1;
                            SetPlayerFree(suspect,playerid, "Foi Preso");
                            WantedPoints[suspect] = 0;
                            SetPlayerWantedLevel(suspect, 0);
                            PlayerInfo[suspect][pMuted] = 0;
                            TogglePlayerControllable(suspect, 1);
                            PlayerCuffed[suspect] = 0;
                            PlayerInfo[suspect][pDrogas] = 0;
                            PlayerInfo[suspect][pDrogas2] = 0;
                            PlayerInfo[suspect][pDrogas3] = 0;
                            PlayerInfo[suspect][pMats] = 0;
                            PlayerInfo[giveplayerid][pAjustado] = 0;
                            //ProcuradoPlayer(suspect);
                            return 1;
                        }
                        if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
                        {
                            GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            if(WantedPoints[suspect] < 1)
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no minimo 1 nível de procura!");
                                return 1;
                            }
                            format(string, sizeof(string), "* Você Prendeu %s !", giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            //GivePlayerMoney(suspect, -moneys);
                            format(string, sizeof(string), "Preso por %s", sendername);
                            GameTextForPlayer(suspect, string, 5000, 5);
                            ResetPlayerWeapons(suspect);
                            if(PlayerInfo[playerid][pMembro]==2||PlayerInfo[playerid][pLider]==2)
                            {
                                format(string, sizeof(string), "<< ROTA %s prendeu o suspeito %s >>", sendername, giveplayer);
                                OOCNews(COLOR_LIGHTRED, string);
                            }
                            SetPlayerInterior(suspect, 3);
                            SetPlayerPos(suspect,198.3454,174.7621,1003.0234);
                            SetPlayerVirtualWorld(suspect,0);
                            PlayerInfo[suspect][pJailTime] = time * 60;
                            if(bail == 1)
                            {
                                JailPrice[suspect] = bailprice;
                                format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
                                SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
                            }
                            else
                            {
                                JailPrice[suspect] = 0;
                                format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: Desativada", PlayerInfo[suspect][pJailTime]);
                                SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
                            }
                            PlayerInfo[suspect][pJailed] = 4;
                            SetPlayerFree(suspect,playerid, "Foi Preso");
                            WantedPoints[suspect] = 0;
                            SetPlayerWantedLevel(suspect, 0);
                            TogglePlayerControllable(suspect, 1);
                            PlayerInfo[suspect][pMuted] = 0;
                            PlayerCuffed[suspect] = 0;
                            PlayerInfo[suspect][pDrogas] = 0;
                            PlayerInfo[suspect][pDrogas2] = 0;
                            PlayerInfo[suspect][pDrogas3] = 0;
                            PlayerInfo[suspect][pMats] = 0;
                            PlayerInfo[giveplayerid][pAjustado] = 0;
                            //ProcuradoPlayer(suspect);
                            return 1;
                        }
                        if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
                        {
                            GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            if(WantedPoints[suspect] < 1)
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no minimo 1 nível de procura!");
                                return 1;
                            }
                            format(string, sizeof(string), "* Você Prendeu %s !", giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            //GivePlayerMoney(suspect, -moneys);
                            format(string, sizeof(string), "Preso por %s", sendername);
                            GameTextForPlayer(suspect, string, 5000, 5);
                            ResetPlayerWeapons(suspect);
                            if(PlayerInfo[playerid][pMembro]==11||PlayerInfo[playerid][pLider]==11)
                            {
                                format(string, sizeof(string), "<< B.O.P.E %s prendeu o suspeito %s >>", sendername, giveplayer);
                                OOCNews(COLOR_LIGHTRED, string);
                            }
       SetPlayerInterior(suspect, 3);
                            SetPlayerPos(suspect,198.3454,174.7621,1003.0234);
       SetPlayerVirtualWorld(suspect,6);
                            PlayerInfo[suspect][pJailTime] = time * 60;
                            if(bail == 1)
                            {
                                JailPrice[suspect] = bailprice;
                                format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
                                SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
                            }
                            else
                            {
                                JailPrice[suspect] = 0;
                                format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: Desativada", PlayerInfo[suspect][pJailTime]);
                                SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
                            }
                            PlayerInfo[suspect][pJailed] = 5;
                            SetPlayerFree(suspect,playerid, "Foi Preso");
                            WantedPoints[suspect] = 0;
                            SetPlayerWantedLevel(suspect, 0);
                            TogglePlayerControllable(suspect, 1);
                            PlayerInfo[suspect][pMuted] = 0;
                            PlayerCuffed[suspect] = 0;
                            PlayerInfo[suspect][pDrogas] = 0;
                            PlayerInfo[suspect][pDrogas2] = 0;
                            PlayerInfo[suspect][pDrogas3] = 0;
                            PlayerInfo[suspect][pMats] = 0;
                            PlayerInfo[giveplayerid][pAjustado] = 0;
                            //ProcuradoPlayer(suspect);
                            return 1;
                        }
                        if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
                        {
                            GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            if(WantedPoints[suspect] < 1)
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no minimo 1 nível de procura!");
                                return 1;
                            }
                            format(string, sizeof(string), "* Você Prendeu %s !", giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            //GivePlayerMoney(suspect, -moneys);
                            format(string, sizeof(string), "Preso por %s", sendername);
                            GameTextForPlayer(suspect, string, 5000, 5);
                            ResetPlayerWeapons(suspect);
                            if(PlayerInfo[playerid][pMembro]==3||PlayerInfo[playerid][pLider]==3)
                            {
                                format(string, sizeof(string), "<< Exército %s prendeu o suspeito %s >>", sendername, giveplayer);
                                OOCNews(COLOR_LIGHTRED, string);
                            }
                            SetPlayerInterior(suspect, 0);
                            SetPlayerPos(suspect,-1293.2203,490.5885,11.1953);
                            PlayerInfo[suspect][pJailTime] = time * 60;
                            if(bail == 1)
                            {
                                JailPrice[suspect] = bailprice;
                                format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
                                SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
                            }
                            else
                            {
                                JailPrice[suspect] = 0;
                                format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: Desativada", PlayerInfo[suspect][pJailTime]);
                                SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
                            }
                            PlayerInfo[suspect][pJailed] = 7;
                            SetPlayerFree(suspect,playerid, "Foi Preso");
                            WantedPoints[suspect] = 0;
                            SetPlayerWantedLevel(suspect, 0);
                            TogglePlayerControllable(suspect, 1);
                            PlayerInfo[suspect][pMuted] = 0;
                            PlayerCuffed[suspect] = 0;
                            PlayerInfo[suspect][pDrogas] = 0;
                            PlayerInfo[suspect][pDrogas2] = 0;
                            PlayerInfo[suspect][pDrogas3] = 0;
                            PlayerInfo[suspect][pMats] = 0;
                            PlayerInfo[giveplayerid][pAjustado] = 0;
                            //ProcuradoPlayer(suspect);
                            return 1;
                        }
                        if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
                        {
                            GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            if(WantedPoints[suspect] < 1)
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no minimo 1 nível de procura!");
                                return 1;
                            }
                            format(string, sizeof(string), "* Você Prendeu %s !", giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            //GivePlayerMoney(suspect, -moneys);
                            format(string, sizeof(string), "Preso por %s", sendername);
                            GameTextForPlayer(suspect, string, 5000, 5);
                            ResetPlayerWeapons(suspect);
                            if(PlayerInfo[playerid][pMembro]==32||PlayerInfo[playerid][pLider]==32)
                            {
                                format(string, sizeof(string), "<< Polícia Federal %s prendeu o suspeito %s >>", sendername, giveplayer);
                                OOCNews(COLOR_LIGHTRED, string);
                            }
                            //SetPlayerInterior(suspect, 0);
                            //SetPlayerPos(suspect,-1293.2203,490.5885,11.1953);
                            PlayerInfo[suspect][pJailTime] = time * 60;
                            if(bail == 1)
                            {
                                JailPrice[suspect] = bailprice;
                                format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
                                SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
                            }
                            else
                            {
                                JailPrice[suspect] = 0;
                                format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: Desativada", PlayerInfo[suspect][pJailTime]);
                                SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
                            }
                            PlayerInfo[suspect][pJailed] = 40;
                            SetPlayerFree(suspect,playerid, "Foi Preso");
                            WantedPoints[suspect] = 0;
                            SetPlayerWantedLevel(suspect, 0);
                            TogglePlayerControllable(suspect, 1);
                            PlayerInfo[suspect][pMuted] = 0;
                            PlayerCuffed[suspect] = 0;
                            PlayerInfo[suspect][pDrogas] = 0;
                            PlayerInfo[suspect][pDrogas2] = 0;
                            PlayerInfo[suspect][pDrogas3] = 0;
                            PlayerInfo[suspect][pMats] = 0;
                            PlayerInfo[giveplayerid][pAjustado] = 0;
                            SetPlayerSpawn(giveplayerid);
                            //ProcuradoPlayer(suspect);
                            return 1;
                        }
                        if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
                        {
                            GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            if(WantedPoints[suspect] < 1)
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no minimo 1 nível de procura!");
                                return 1;
                            }
                            format(string, sizeof(string), "* Você Prendeu %s !", giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            //GivePlayerMoney(suspect, -moneys);
                            format(string, sizeof(string), "Preso por %s", sendername);
                            GameTextForPlayer(suspect, string, 5000, 5);
                            ResetPlayerWeapons(suspect);
                            if(PlayerInfo[playerid][pMembro]==32||PlayerInfo[playerid][pLider]==32)
                            {
                                format(string, sizeof(string), "<< Policia Civil %s prendeu o suspeito %s >>", sendername, giveplayer);
                                OOCNews(COLOR_LIGHTRED, string);
                            }
                            new rand = random(sizeof(RandomCadeia));
                            SetPlayerPos(suspect, RandomCadeia[rand][0], RandomCadeia[rand][1], RandomCadeia[rand][2]);
                            SetPlayerInterior(suspect, 10);
                            PlayerInfo[suspect][pJailTime] = time * 60;
                            if(bail == 1)
                            {
                                JailPrice[suspect] = bailprice;
                                format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
                                SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
                            }
                            else
                            {
                                JailPrice[suspect] = 0;
                                format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: Desativada", PlayerInfo[suspect][pJailTime]);
                                SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
                            }
                            PlayerInfo[suspect][pJailed] = 69;
                            SetPlayerFree(suspect,playerid, "Foi Preso");
                            WantedPoints[suspect] = 0;
                            SetPlayerWantedLevel(suspect, 0);
                            TogglePlayerControllable(suspect, 1);
                            PlayerInfo[suspect][pMuted] = 0;
                            PlayerCuffed[suspect] = 0;
                            PlayerInfo[suspect][pDrogas] = 0;
                            PlayerInfo[suspect][pDrogas2] = 0;
                            PlayerInfo[suspect][pDrogas3] = 0;
                            PlayerInfo[suspect][pMats] = 0;
                            PlayerInfo[giveplayerid][pAjustado] = 0;
                            //ProcuradoPlayer(suspect);
                            return 1;
                        }
                        if(PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28)
                        {
                            GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            if(WantedPoints[suspect] < 1)
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no minimo 1 nível de procura!");
                                return 1;
                            }
                            format(string, sizeof(string), "* Você Prendeu %s !", giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            //GivePlayerMoney(suspect, -moneys);
                            format(string, sizeof(string), "Preso por %s", sendername);
                            GameTextForPlayer(suspect, string, 5000, 5);
                            ResetPlayerWeapons(suspect);
                            if(PlayerInfo[playerid][pMembro]==29||PlayerInfo[playerid][pLider]==29)
                            {
                                format(string, sizeof(string), "<< GPT %s prendeu o suspeito %s >>", sendername, giveplayer);
                                OOCNews(COLOR_LIGHTRED, string);
                            }
                            SetPlayerInterior(suspect, 6);
                            SetPlayerPos(suspect,264.6288,77.5742,1001.0391);
                            PlayerInfo[suspect][pJailTime] = time * 60;
                            SetPlayerVirtualWorld(suspect,1);
                            if(bail == 1)
                            {
                                JailPrice[suspect] = bailprice;
                                format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
                                SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
                            }
                            else
                            {
                                JailPrice[suspect] = 0;
                                format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: Desativada", PlayerInfo[suspect][pJailTime]);
                                SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
                            }
                            PlayerInfo[suspect][pJailed] = 44;
                            SetPlayerFree(suspect,playerid, "Foi Preso");
                            WantedPoints[suspect] = 0;
                            SetPlayerWantedLevel(suspect, 0);
                            TogglePlayerControllable(suspect, 1);
                            PlayerInfo[suspect][pMuted] = 0;
                            PlayerCuffed[suspect] = 0;
                            PlayerInfo[suspect][pDrogas] = 0;
                            PlayerInfo[suspect][pDrogas2] = 0;
                            PlayerInfo[suspect][pDrogas3] = 0;
                            PlayerInfo[suspect][pMats] = 0;
                            SetPlayerSpawn(suspect);
                            PlayerInfo[giveplayerid][pAjustado] = 0;
                            //ProcuradoPlayer(suspect);
                            return 1;
                        }
                        if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
                        {
                            GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            if(WantedPoints[suspect] < 1)
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no minimo 1 nível de procura!");
                                return 1;
                            }
                            format(string, sizeof(string), "* Você Prendeu %s !", giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            //GivePlayerMoney(suspect, -moneys);
                            format(string, sizeof(string), "Preso por %s", sendername);
                            GameTextForPlayer(suspect, string, 5000, 5);
                            ResetPlayerWeapons(suspect);
                            if(PlayerInfo[playerid][pMembro]==16||PlayerInfo[playerid][pLider]==16)
                            {
                                format(string, sizeof(string), "<< Policial Rodoviário %s prendeu o suspeito %s >>", sendername, giveplayer);
                                OOCNews(COLOR_LIGHTRED, string);
                            }
                            SetPlayerInterior(suspect, 3);
                            SetPlayerPos(suspect,198.3454,174.7621,1003.0234);
                            SetPlayerVirtualWorld(suspect,7);
                            PlayerInfo[suspect][pJailTime] = time * 60;
                            if(bail == 1)
                            {
                                JailPrice[suspect] = bailprice;
                                format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
                                SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
                            }
                            else
                            {
                                JailPrice[suspect] = 0;
                                format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: Desativada", PlayerInfo[suspect][pJailTime]);
                                SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
                            }
                            PlayerInfo[suspect][pJailed] = 3;
                            SetPlayerFree(suspect,playerid, "Foi Preso");
                            WantedPoints[suspect] = 0;
                            SetPlayerWantedLevel(suspect, 0);
                            TogglePlayerControllable(suspect, 1);
                            PlayerInfo[suspect][pMuted] = 0;
                            PlayerCuffed[suspect] = 0;
                            PlayerInfo[suspect][pDrogas] = 0;
                            PlayerInfo[suspect][pDrogas2] = 0;
                            PlayerInfo[suspect][pDrogas3] = 0;
                            PlayerInfo[suspect][pMats] = 0;
                            PlayerInfo[giveplayerid][pAjustado] = 0;
                            //ProcuradoPlayer(suspect);
                            return 1;
                        }
                    }//distance
                }//not connected
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Esse não é um jogador ativo.");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um Oficial !");
                return 1;
            }
        }//not connected
        return 1;
    }
    if(strcmp(cmd, "/contrato", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new money2;
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /contrato [ID/Nome] [Quantia]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /contrato [ID/Nome] [Quantia]");
                return 1;
            }
            moneys = strval(tmp);
            if(moneys < 10000) { SendClientMessage(playerid, COLOR_GREY, "   Seu contrato não pode ser menor que 10000."); return 1; }
            if(PlayerInfo[playerid][pLevel] < 2)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você precisa de no mínimo nível 3 para por um contrato.");
                return 1;
            }
            if (IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(PlayerInfo[giveplayerid][pLevel] == 2)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Você não pode por contrato em novatos!");
                        return 1;
                    }
                    else if(PlayerInfo[giveplayerid][pMembro] == 8||PlayerInfo[giveplayerid][pLider] == 8)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "  Você não pode colocar contrato em assassinos!");
                        return 1;
                    }
                    else if(PlayerInfo[giveplayerid][pMembro] == 24||PlayerInfo[giveplayerid][pLider] == 24)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "  Você não pode colocar contrato em assassinos!");
                        return 1;
                    }
                    else if(PlayerInfo[playerid][pMembro] == 24||PlayerInfo[playerid][pLider] == 24||PlayerInfo[playerid][pMembro] == 8||PlayerInfo[playerid][pLider] == 8)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Você não pode colocar contratos em ninguém!");
                        return 1;
                    }
                    else if(PlayerInfo[giveplayerid][pAdmin] >= 1)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Você não pode colocar contratos em um Administrador!");
                        return 1;
                    }
                    if(gTeam[giveplayerid] == 2 && moneys <= 100000)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Preço minimo de $100000 em oficiais!");
                        return 1;
                    }
                    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você nao pode colocar contrato em si mesmo!"); return 1; }
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    money2 = GetPlayerMoneyEx(playerid);
                    if (moneys > 0 && money2 >= moneys)
                    {
                        GivePlayerMoney(playerid, (0 - moneys));
                        PlayerInfo[giveplayerid][pHeadValue]+=moneys;
                        format(string, sizeof(string), "%s Colocou um contrato em %s, por $%d.",sendername, giveplayer, moneys);
                        SendFamilyMessage(8, COLOR_YELLOW, string);
                        SendFamilyMessage(24, COLOR_YELLOW, string);
                        format(string, sizeof(string), "* Você colocou um contrato em %s, por $%d.",giveplayer, moneys);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "   Você não possui essa grana.");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Esse não é um jogador ativo.");
            }
        }
        return 1;
    }
    if(strcmp(cmd,"/contratar",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(!IsAGang(playerid) && GetPlayerOrg(playerid) != 21 && GetPlayerOrg(playerid) != 22 && GetPlayerOrg(playerid) != 23 && GetPlayerOrg(playerid) != 25)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Você não é o líder de uma gang!");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /contratar [Organização]");
                SendClientMessage(playerid, COLOR_GRAD1,"1 - Hells Angels | 2 - Mongols M.C | 3 - Sons Of Anarchy ");
                return 1;
            }
            if(strcmp(tmp,"1",true) == 0)//Detective
            {
                format(string, sizeof(string), "%s e os %s Está Contratando os Serviços Hells Angels, Para combinar Ligue: %d.",PlayerName(playerid),NomeORG(playerid),PlayerInfo[playerid][pPnumber]);
                SendFamilyMessage(21, GetPlayerColor(playerid), string);
                format(string, sizeof(string), "Você Está Contratando os Hells Angels Para Ajudar, Aguarde uma Resposta.");
                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            else if(strcmp(tmp,"2",true) == 0)//Lawyer
            {
                format(string, sizeof(string), "%s e os %s Está Contratando os Serviços Mongols M.C., Para combinar Ligue: %d.",PlayerName(playerid),NomeORG(playerid),PlayerInfo[playerid][pPnumber]);
                SendFamilyMessage(22, GetPlayerColor(playerid), string);
                format(string, sizeof(string), "Você Está Contratando os Mongols M.C. Para Ajudar, Aguarde uma Resposta.");
                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            else if(strcmp(tmp,"3",true) == 0)//Lawyer
            {
                format(string, sizeof(string), "%s e os %s Está Contratando os Serviços Sons Of Anarchy, Para combinar Ligue: %d.",PlayerName(playerid),NomeORG(playerid),PlayerInfo[playerid][pPnumber]);
                SendFamilyMessage(23, GetPlayerColor(playerid), string);
                format(string, sizeof(string), "Você Está Contratando os Sons Of Anarchy Para Ajudar, Aguarde uma Resposta.");
                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /contratar [Organização]");
                SendClientMessage(playerid, COLOR_GRAD1,"1 - Hells Angels | 2 - Mongols M.C | 3 - Sons Of Anarchy!");
                return 1;
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/serverinfo", true) == 0 || strcmp(cmd, "/serverinfo", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            format(strvinny,sizeof(strvinny),"Servidor Lígado Pela Última Vez: {FFFFFF}Ano:{1E90FF} %d, {FFFFFF}Mes:{1E90FF} %d, {FFFFFF}Dia:{1E90FF} %d, {FFFFFF}Horário:{1E90FF} %d:%d:%d,{FFFFFF} Número de Objetos:{1E90FF} %d",AnoGMX, MesGMX, DiaGMX, HoraGMX, MinutoGMX, SegundoGMX);
            SendClientMessage(playerid,0x1E90FFFF,strvinny);
        }
        return 1;
    }
    if(strcmp(cmdtext,"/painel",true)==0 || strcmp(cmdtext,"/meucarro",true)==0)
    {
        if(PlayerInfo[playerid][pChave]!=0)
        {
            ShowPlayerDialog(playerid,148,DIALOG_STYLE_LIST,"{FFD700}Painel do Veículo","{75DDFF}Estacionar\n{75DDFF}Trancar/Destrancar\n{75DDFF}Pintura\n{75DDFF}Motor\n{75DDFF}Farol\n{75DDFF}Retirar Componentes\n{75DDFF}Localizar Veículo\n{75DDFF}Transferir Veículo\n{FA7373}Fechar Painel","Selecionar","Cancelar");
        }
        else
        {
            SendClientMessage(playerid, 0xFFA8A8FF, "[BPG Veículo] {FFFFFF}Você não tem um Carro, vá Até a Concessionária, use /gps!");
        }
        return 1;
    }
    if(strcmp(cmdtext,"/concessionaria",true)==0)
    {
        if(PlayerToPoint(3, playerid, 2780.4939,-1812.2635,11.8438))
        {
            if(PlayerInfo[playerid][pLevel] < 4)
            {
                SendClientMessage(playerid, COLOR_GRAD5, "   Você precisa ter nivel 4 Para comprar um Veículo!");
                return 1;
            }
            ShowPlayerDialog(playerid,1319,DIALOG_STYLE_LIST,"{00FF40}{FFFF00}Brasil {0000FF}Play {00FF00}Gamer {FFFFFF} - Concessionária","Vender Veículo\nComprar Veículo\n{FF0000}Fechar Menu","Selecionar","Cancelar");
            TogglePlayerControllable(playerid, 1);
            return 1;
        }
        return 1;
    }
    if(strcmp(cmdtext,"/irconce",true)==0)
    {
        if(PlayerInfo[playerid][pAdmin] == 3000)
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Você foi teletransportado para a Concessionária.");
            SetPlayerPos(playerid, 2780.4939,-1812.2635,11.8438);
            return 1;
        }
    }
    if(!strcmp("/admvcarro", cmdtext, true) || !strcmp("/admvcar", cmdtext, true))
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 3000)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
                return 1;
            }
            new counter = 0;
            new result;
            new plyName[MAX_PLAYER_NAME];
            GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
            for(new i; i != MAX_VEHICLES; i++)
            {
                new dist = ChecarveiculoBPG(5, playerid, i);
                if(dist)
                {
                    result = i;
                    counter++;
                }
            }
            switch(counter)
            {
                case 0:
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Não há nenhum carro nesse raio!");
                }
                case 1:
                {
                        for(new i = 0; i < sizeof(Carro); i++)
                        {
                            if(Carro[i][CarroID] == result)
                            {
                                Carro[i][CarroON] = 0;
                                Carro[i][Modelo] = 0;
                                Carro[i][cSpawnX] = 0.000000;
                                Carro[i][cSpawnY] = 0.000000;
                                Carro[i][cSpawnZ] = 0.000000;
                                Carro[i][cAngulo] = 0.000000;
                                Carro[i][CorUm] = 0;
                                Carro[i][CorDois] = 0;
                                Carro[i][Trancado] = 0;
                                Carro[i][CarroON] = 0;
                                DestroyVehicle(Carro[i][CarroID]);
                                LimparTunning(i);
                                Carro[i][CarroID] = 0;
                                Carro[i][cDate] = 0;
                                format(string, sizeof(string), "** Veículo de %s Vendido com Sucesso!", Carro[i][Dono]);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                strmid(Carro[i][Dono], "Ninguem", 0, strlen("Ninguem"), 256);
                                for(new pl;pl<MaiorID;pl++)
                                {
                                    CheckDonoCarro(pl);
                                }
                                SaveCarros();
                                break;
                            }
                        }
                }
                default:
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
                }
            }
        }
        return 1;
    }
    if(!strcmp("/infocarro", cmdtext, true) || !strcmp("/carroinfo", cmdtext, true))
    {
        if(IsPlayerConnected(playerid))
        {
            new counter = 0;
            new result;
            new plyName[MAX_PLAYER_NAME];
            GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
            for(new i; i != MAX_VEHICLES; i++)
            {
                new dist = ChecarveiculoBPG(5, playerid, i);
                if(dist)
                {
                    result = i;
                    counter++;
                }
            }
            switch(counter)
            {
                case 0:
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Não há nenhum carro nesse raio!");
                }
                case 1:
                {
                        for(new i = 0; i < sizeof(Carro); i++)
                        {
                            if(Carro[i][CarroID] == result)
                            {
                                new arquivo[90];
                                format(arquivo, sizeof(arquivo), OpenAccPlayer,Carro[i][Dono]);
                                format(string, sizeof(string), "** Veículo de %s, Login Data: %d/%d/%d - Hora: %d:%d:%d!", Carro[i][Dono],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                break;
                            }
                        }
                }
                default:
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
                }
            }
        }
        return 1;
    }
    if(!strcmp("/abrircarro", cmdtext, true) || !strcmp("/carroabrir", cmdtext, true))
    {
        if(IsPlayerConnected(playerid))
        {
            new counter = 0;
            new result;
            new plyName[MAX_PLAYER_NAME];
            GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
            if (PlayerInfo[playerid][pMembro] != 16 && PlayerInfo[playerid][pLider] != 16) return SendClientMessage(playerid, COLOR_GREY, "   Você não é um Policial Rodoviário!");
            for(new i; i != MAX_VEHICLES; i++)
            {
                new dist = ChecarveiculoBPG(5, playerid, i);
                if(dist)
                {
                    result = i;
                    counter++;
                }
            }
            switch(counter)
            {
                case 0:
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Não há nenhum carro nesse raio!");
                }
                case 1:
                {
                        new Conter = 0;
                        for(new i = 0; i < sizeof(Carro); i++)
                        {
                            if(Carro[i][CarroID] == result)
                            {
                                if(VTrancado[result] != 1) return SendClientMessage(playerid, COLOR_GREY, " Este Veículo não Está trancado!");
                                new arquivo[90];
                                format(arquivo, sizeof(arquivo), OpenAccPlayer,Carro[i][Dono]);
                                format(string, sizeof(string), "** Veículo de %s, Login Data: %d/%d/%d - Hora: %d:%d:%d, Aberto com Sucesso!", Carro[i][Dono],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "* Policial Rodoviário: %s Usou a chave Mestre para abrir Algum Veículo.",PlayerName(playerid));
                                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                VTrancado[result] = 0;
                                UnLockCar(result);
                                Conter++;
                                break;
                            }
                        }
                        if(Conter == 0) SendClientMessage(playerid, COLOR_GREY, "   Comando permitido Apenas para Apreender Veículos Particulares (Concessionária)!");
                }
                default:
                {
                    SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
                }
            }
        }
        return 1;
    }
    if(strcmp(cmdtext,"/mapacarro",true)==0)
    {
        new carro = PlayerInfo[playerid][pChave];
        if(carro != 0)
        {
            for(new i = 0; i < sizeof(Carro); i++)
            {
                if(Carro[i][CarroID] == carro)
                {
                    if(strcmp(PlayerName(playerid),Carro[i][Dono],true)==0)
                    {
                                new Float:X,Float:Y,Float:Z;
                                GetVehiclePos(carro,X,Y,Z);
                                SetPlayerCheckpoint(playerid,X,Y,Z,4.0);
                                GameTextForPlayer(playerid, "~r~~h~~h~Local do Veiculo Marcado!", 5000, 1);
                                gPlayerCheckpointStatus[playerid] = CHECKPOINT_CARRO;
                                format(string, sizeof(string), "[BPG Veículo] {FFFFFF}Seu Veículo: %s Foi Marcado no Mapa.", vehName[GetVehicleModel(carro)-400]);
                                SendClientMessage(playerid, 0x77EEA1FF, string);
                                break;
                        }
                    }
            }
        }
          else
          {
                SendClientMessage(playerid, 0x77EEA1FF, "[BPG Veículo] {FFFFFF}Você não Possui um Veículo, Vá até a Concessionária Comprar o seu!");
                return 1;
          }
          return 1;
    }
    if(strcmp(cmdtext,"/rcomponentes",true)==0)
    {
        new carro = PlayerInfo[playerid][pChave];
        if(carro != 0)
        {
            for(new i = 0; i < sizeof(Carro); i++)
            {
                if(Carro[i][CarroID] == carro)
                {
                    if (!ProxDetectorV(40.0, playerid, carro)) return SendClientMessage(playerid, 0x77EEA1FF, "[BPG Veículo] {FFFFFF}Você Precisa Estar perto do seu Veículo!");
                    new Float:X,Float:Y,Float:Z,Float:A;
                    GetVehicleZAngle(carro,A);
                    GetVehiclePos(carro,X,Y,Z);
                    LimparTunning(i);
                    if(IsPlayerInVehicle(playerid, carro))
                    {
                        SetVehicleToRespawn(carro);
                        SetVehiclePos(carro,X,Y,Z);
                        SetVehicleZAngle(carro, A);
                        LinkVehicleToInterior(carro, GetPlayerInterior(playerid));
                        PutPlayerInVehicle(playerid,carro,0);
                    }
                    else
                    {
                        SetVehicleToRespawn(carro);
                        SetVehiclePos(carro,X,Y,Z);
                        SetVehicleZAngle(carro, A);
                        LinkVehicleToInterior(carro, GetPlayerInterior(playerid));
                    }
                    format(string, sizeof(string), "[BPG Veículo] {FFFFFF}Você tirou todos os Acessórios do Seu Veículo: %s.", vehName[GetVehicleModel(carro)-400]);
                    SendClientMessage(playerid, 0x77EEA1FF, string);
                    break;
                }
            }
        }
        else
        {
            SendClientMessage(playerid, 0x77EEA1FF, "[BPG Veículo] {FFFFFF}Você não Possui um Veículo, Vá até a Concessionária Comprar o seu!");
            return 1;
        }
        return 1;
    }
    if(strcmp(cmdtext,"/carroestacionar",true)==0 || strcmp(cmdtext,"/estacionarcarro",true)==0)
        {
            new carro = PlayerInfo[playerid][pChave];
            new Float:h;
            if(carro != 0)
            {
                new Float:X, Float:Y, Float:Z, Float:A;
                for(new i = 0; i < sizeof(Carro); i++)
                {
                    if(Carro[i][CarroID] == carro)
                    {
                        if(strcmp(PlayerName(playerid),Carro[i][Dono],true)==0)
                        {
                            if(IsPlayerInMorro(playerid) || IsPlayerInShop(playerid) || IsPlayerInPark(playerid) || IsPlayerInCemiterio(playerid)
                            || IsPlayerInPosto(playerid) || IsPlayerInEstacao(playerid) || IsPlayerInCasarao(playerid) || IsCarInPref(carro) || IsCarInConce(carro) || IsCarInPrefouDP(carro))
                            {
                                return SendClientMessage(playerid, COLOR_GRAD1, "Você não pode Estacionar Veículos perto da DP/Centro de Licenças/Prefeitura/Concessionária/Morro/Pista, ETC.");
                            }
                            if (!ProxDetectorV(40.0, playerid, carro)) return SendClientMessage(playerid, 0x77EEA1FF, "[BPG Veículo] {FFFFFF}Você Precisa Estar perto do seu Veículo!");
                            GetVehicleZAngle(carro,A);
                            GetVehiclePos(carro,X,Y,Z);
                            Carro[i][cSpawnX] = X;
                            Carro[i][cSpawnY] = Y;
                            Carro[i][cSpawnZ] = Z;
                            Carro[i][cAngulo] = A;
                            Carro[i][Modelo] = GetVehicleModel(Carro[i][CarroID]);
                            GetVehicleHealth( carro, h );
                            if(IsPlayerInVehicle(playerid, Carro[i][CarroID]))
                            {
                                DestroyVehicle(carro);
                                Carro[i][CarroID] = CreateVehicle(Carro[i][Modelo],Carro[i][cSpawnX], Carro[i][cSpawnY], Carro[i][cSpawnZ],Carro[i][cAngulo],Carro[i][CorUm],Carro[i][CorDois], RESPAWN_TIME);
                                PutPlayerInVehicle(playerid,Carro[i][CarroID],0);
                            }
                            else
                            {
                                DestroyVehicle(carro);
                                Carro[i][CarroID] = CreateVehicle(Carro[i][Modelo],Carro[i][cSpawnX], Carro[i][cSpawnY], Carro[i][cSpawnZ],Carro[i][cAngulo],Carro[i][CorUm],Carro[i][CorDois], RESPAWN_TIME);
                            }
                            Carro[i][CarroON] = 1;
                            SetVehicleHealth( carro, h );
                            format(string, sizeof(string), "[BPG Veículo] {FFFFFF}Seu Veículo: %s Foi Estacionado com Sucesso.", vehName[GetVehicleModel(Carro[i][CarroID])-400]);
                            SendClientMessage(playerid, 0x77EEA1FF, string);
                            format(string, sizeof(string), "BPG %d", Carro[i][CarroID]);
                            SetVehicleNumberPlate(Carro[i][CarroID], string);
                            for(new pl;pl<MaiorID;pl++)
                                {
                                    CheckDonoCarro(pl);
                                }
                            CarregarTunning(i);
                            break;

                        }
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, 0x77EEA1FF, "[BPG Veículo] {FFFFFF}Você não Possui um Veículo, Vá até a Concessionária Comprar o seu!");
            }
        return 1;
    }
    if(strcmp(cmdtext,"/apreendercarro",true)==0 || strcmp(cmdtext,"/prendercarro",true)==0 || strcmp(cmdtext,"/pcarro",true)==0)
        {
            new carro = GetPlayerVehicleID(playerid);
            if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, 0xFFFFFFFF, "ERRO: Você Precisa Estar Dentro do Veículo para Prender!");
            if(PlayerInfo[playerid][pMembro] != 16 && PlayerInfo[playerid][pLider] != 16) return SendClientMessage(playerid, 0xFFFFFFFF, "ERRO: Você não é um Policial Rodoviário!");
            if(!IsPlayerInPRF(playerid)) return SendClientMessage(playerid, 0xFFFFFFFF, "ERRO: Você Precisa Levar o Veículo para a HQ da Polícia para Apreender!");
            if(carro != 0)
            {
                new Float:X,Float:Y,Float:Z,Float:A,NumCarros = 0,id;
                for(new i = 0; i < sizeof(Carro); i++)
                {
                    if(Carro[i][CarroID] == carro)
                    {
                            if(strcmp("Ninguem",Carro[i][Dono],true)==0) return SendClientMessage(playerid, 0x77EEA1FF, "[BPG Veículo] {FFFFFF}Este Veículo não tem Dono!");
                            GetVehicleZAngle(carro,A);
                            GetVehiclePos(carro,X,Y,Z);
                            Carro[i][cSpawnX] = X;
                            Carro[i][cSpawnY] = Y;
                            Carro[i][cSpawnZ] = Z;
                            Carro[i][cAngulo] = A;
                            Carro[i][Modelo] = GetVehicleModel(Carro[i][CarroID]);
                            Carro[i][CarroON] = 1;
                            DestroyVehicle(carro);
                            Carro[i][CarroID] = CreateVehicle(Carro[i][Modelo],Carro[i][cSpawnX], Carro[i][cSpawnY], Carro[i][cSpawnZ],Carro[i][cAngulo],Carro[i][CorUm],Carro[i][CorDois], RESPAWN_TIME);
                            PutPlayerInVehicle(playerid,Carro[i][CarroID],0);
                            format(string, sizeof(string), "BPG %d", Carro[i][CarroID]);
                            SetVehicleNumberPlate(Carro[i][CarroID], string);
                            for(new pl;pl<MaiorID;pl++){CheckDonoCarro(pl);}
                            CarregarTunning(i);
                            format(string, sizeof(string), "[PlayGamer News] Policial Rodoviário %s Apreendeu o Veículo de %s.", PlayerName(playerid), Carro[i][Dono]);
                            OOCNews(COLOR_LIGHTRED, string);
                            format(string, sizeof(string), "Estado: Veículo de %s Apreendido por %s.", Carro[i][Dono],PlayerName(playerid));
                            for(new pla = 0; pla < MaiorID; pla++)
                            {
                                if(IsPlayerConnected(pla))
                                {
                                    if(IsACop(pla))
                                    {
                                        SendClientMessage(pla, TEAM_BLUE_COLOR, string);
                                    }
                                }
                            }
                            if(IsPlayerOnline(Carro[i][Dono]))
                            {
                                id=GetPlayerID(Carro[i][Dono]);
                                SendClientMessage(id, COLOR_LIGHTRED,"Seu Veículo acaba de Ser Apreendido, Vá até a HQ da Polícia para Resolver.");
                            }
                            NumCarros ++;
                            break;
                    }
                }
                if(NumCarros==0) return SendClientMessage(playerid, 0xFFFFFFFF, "ERRO: Você Só pode Apreender Veículos Particulares (Concessionária)!");
            }
            else
            {
                SendClientMessage(playerid, 0xFFFFFFFF, "ERRO: Você Precisa Estar Dentro do Veículo para Prender!");
            }
            return 1;
    }
    if(strcmp(cmd,"/carrocor",true)==0)
    {

                new Cor1,Cor2,carro = PlayerInfo[playerid][pChave];
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD3,"Digite na Caixa, o ID das cores 1 e 2 separados por ESPAÇO.");
                    return 1;
                }
                Cor1 = strval(tmp);
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD3,"Digite na Caixa, o ID das cores 1 e 2 separados por ESPAÇO.");
                }
                Cor2 = strval(tmp);
                if(Cor2 > 225)
                {
                    SendClientMessage(playerid, COLOR_GRAD3,"Máximo é de cor 1 ou 2 é: 225");
                    return 1;
                }
                if(carro == 0)
                {
                SendClientMessage(playerid, 0x77EEA1FF, "[BPG Veículo] {FFFFFF}Você não Possui um Veículo, Vá até a Concessionária Comprar o seu!");
                return 1;
                }

                for(new i = 0; i < sizeof(Carro); i++)
                {
                    if(Carro[i][CarroID] == carro)
                    {
                        ChangeVehicleColorEx(carro, Cor1, Cor2);
                        Carro[i][CorUm] = Cor1;
                        Carro[i][CorDois] = Cor2;
                        format(string, sizeof(string), "[BPG Veículo] {FFFFFF}Seu Veículo: %s Foi Pintado com Sucesso. Nova cor 1: %d, Nova cor 2: %d!", vehName[GetVehicleModel(carro)-400],Cor1,Cor2);
                        SendClientMessage(playerid, 0x77EEA1FF, string);
                        break;

                    }
                }
                return 1;

    }
    if(strcmp(cmdtext,"/destrancar",true)==0 || strcmp(cmdtext,"/trancarcarro",true)==0 || strcmp(cmdtext,"/destrancarcarro",true)==0)
        {
            new carro = PlayerInfo[playerid][pChave];
            if(carro != 0)
            {
                for(new i = 0; i < sizeof(Carro); i++)
                {
                    if(Carro[i][CarroID] == carro)
                    {
                        if(strcmp(PlayerName(playerid),Carro[i][Dono],true)==0)
                        {
                            if (!ProxDetectorV(40.0, playerid, carro)) return SendClientMessage(playerid, 0x77EEA1FF, "[BPG Veículo] {FFFFFF}Você Precisa Estar perto do seu Veículo!");
                            if(VTrancado[carro] != 1)
                            {
                                VTrancado[carro] = 1;
                                Carro[i][Trancado] = VTrancado[carro];
                                LockCar(carro);
                                format(string, sizeof(string), "[BPG Veículo] {FFFFFF}Seu Veículo: %s Foi Trancado com Sucesso.", vehName[GetVehicleModel(carro)-400]);
                                SendClientMessage(playerid, 0x77EEA1FF, string);
                                break;
                            }
                            else
                            {
                                VTrancado[carro] = 0;
                                Carro[i][Trancado] = VTrancado[carro];
                                UnLockCar(carro);
                                format(string, sizeof(string), "[BPG Veículo] {FFFFFF}Seu Veículo: %s Foi Destrancado com Sucesso.", vehName[GetVehicleModel(carro)-400]);
                                SendClientMessage(playerid, 0x77EEA1FF, string);
                                break;
                            }
                        }
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, 0x77EEA1FF, "[BPG Veículo] {FFFFFF}Você não Possui um Veículo, Vá até a Concessionária Comprar o seu!");
                return 1;
            }
            return 1;
    }
    if(strcmp(cmd, "/transferircarro", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Erro: Coloque o ID do Jogador que Deseja Transferir o Veículo");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(giveplayerid == playerid) { return SendClientMessage(playerid, COLOR_GREY, "Você não Transferir o Veículo para Você Mesmo!"); }
                    new carro = PlayerInfo[playerid][pChave], carro2 = PlayerInfo[giveplayerid][pChave];
                    if(carro != 0)
                    {
                        if(carro2 == 0)
                        {
                            for(new i = 0; i < sizeof(Carro); i++)
                            {
                                if(Carro[i][CarroID] == carro)
                                {
                                    if(strcmp(PlayerName(playerid),Carro[i][Dono],true)==0)
                                    {
                                         format(strvinny, sizeof(strvinny), "[BPG Veículo] {FFFFFF} %s Transferiu o Veículo %s, para Seu Nome, Agora ele Pertence a Você.", PlayerName(playerid),vehName[GetVehicleModel(carro)-400]);
                                         SendClientMessage(giveplayerid, 0x77EEA1FF, strvinny);
                                         SendClientMessage(giveplayerid, 0x77EEA1FF, "[BPG Veículo]{FFFFFF}Digite /Painel Para Abrir o Menu de Controle do Seu Veículo!");
                                         format(strvinny, sizeof(strvinny), "[BPG Veículo] {FFFFFF} Você Transferiu seu Veículo %s, para %s, Agora ele não pertence mais a Você.",vehName[GetVehicleModel(carro)-400],PlayerName(giveplayerid));
                                         SendClientMessage(playerid, 0x77EEA1FF, strvinny);
                                         strmid(Carro[i][Dono], PlayerName(giveplayerid), 0, strlen(PlayerName(giveplayerid)), 255);
                                         format(string, sizeof(string), "* %s Transferiu seu Veículo Para %s.",PlayerName(playerid),PlayerName(giveplayerid));
                                         ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                         for(new pl;pl<MaiorID;pl++){CheckDonoCarro(pl);}
                                    }
                                }
                            }
                        }
                        else
                        {
                            return SendClientMessage(playerid, 0x77EEA1FF, "[BPG Veículo] {FFFFFF}Este Jogador ja possui um Veículo!");
                        }
                    }
                    else
                    {
                        return SendClientMessage(playerid, 0x77EEA1FF, "[BPG Veículo] {FFFFFF}Você não Possui um Veículo, Vá até a Concessionária Comprar o seu!");
                    }
                }
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/depositar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Coloque a Quantia a Ser Depositada!");
                return 1;
            }
            if(PlayerToPoint(1.5,playerid,2224.1484,-1141.8772,1025.7969) || PlayerToPoint(1.0,playerid,1929.5409,-1785.1664,13.5469) || PlayerToPoint(1.0,playerid,2232.2886,-1162.6107,25.8906) || PlayerToPoint(1.0,playerid,1550.4796,-1669.7039,13.5624) || PlayerToPoint(1.5,playerid,957.4803,-48.7381,1001.1172) || PlayerToPoint(1.5,playerid,251.3572,120.6987,1010.2188) || PlayerToPoint(1.5,playerid,251.3572,120.6987,1010.2188)
            || PlayerToPoint(1.5,playerid,229.6725,153.8311,1003.0234)  || PlayerToPoint(1.5,playerid,321.4753,305.5962,999.1484) || PlayerToPoint(1.5,playerid,-1347.6376,499.9476,11.1953) || PlayerToPoint(1.5, playerid,2308.9492,-14.1523,26.7422) || PlayerToPoint(1.5,playerid,1467.5273, -1782.6521, 13.1987) || PlayerInBank[ playerid ] == true)
            {
                new GranaViinny = strval(tmp);
                if(GranaViinny <= 0)
                {
                    return SendClientMessage(playerid,COLOR_GREY,"Você não pode Depositar um valor Abaixo de R$ 1!");
                }
                else if(GranaViinny > 500000000)
                {
                    return SendClientMessage(playerid,COLOR_GREY,"Você não pode Depositar mais de 10000000 por Vez!");
                }
                else if( GetPlayerMoneyEx( playerid ) < GranaViinny ){
                    return SendClientMessage( playerid, -1, "Você não possui a quantia informada. " );
                }
                else
                {
                    GivePlayerMoney(playerid,-GranaViinny);
                    PlayerInfo[playerid][pConta] += GranaViinny;
                    format(gstring,sizeof(gstring),"Você depositou: R$[%d], Seu novo saldo é: R$[%d]",GranaViinny, PlayerInfo[playerid][pConta]);
                    SendClientMessage(playerid,COLOR_YELLOW,gstring);
                    ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
                }
            }
            else
            {
                return SendClientMessage(playerid,COLOR_GREY,"Você não está em um Banco/Caixa!");
            }

        }
        return 1;
    }
    if(strcmp(cmd, "/sacar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Coloque a Quantia a Ser Sacada!");
                return 1;
            }
            if(PlayerToPoint(1.5,playerid,2224.1484,-1141.8772,1025.7969) || PlayerToPoint(1.0,playerid,1929.5409,-1785.1664,13.5469) || PlayerToPoint(1.0,playerid,2232.2886,-1162.6107,25.8906) || PlayerToPoint(1.0,playerid,1550.4796,-1669.7039,13.5624) || PlayerToPoint(1.5,playerid,957.4803,-48.7381,1001.1172) || PlayerToPoint(1.5,playerid,251.3572,120.6987,1010.2188)
            || PlayerToPoint(1.5,playerid,229.6725,153.8311,1003.0234)  || PlayerToPoint(1.5,playerid,321.4753,305.5962,999.1484) || PlayerToPoint(1.5,playerid,-1347.6376,499.9476,11.1953) || PlayerToPoint(1.5, playerid,2308.9492,-14.1523,26.7422) || PlayerToPoint(1.5,playerid,1467.5273, -1782.6521, 13.1987)  || PlayerInBank[ playerid ] == true)
            {
                new GranaViinny = strval(tmp);
                if(GranaViinny <= 0)
                {
                    return SendClientMessage(playerid,COLOR_GREY,"Você não pode Sacar um valor Abaixo de R$ 1!");
                }
                else if(GranaViinny > 10000000)
                {
                    return SendClientMessage(playerid,COLOR_GREY,"Você não pode Sacar mais de 10000000 por Vez!");
                }
                else if( GranaViinny > PlayerInfo[playerid][pConta] ){
                    return SendClientMessage( playerid, -1, "Você não possui esta quantia." );
                }
                else
                {
                    GivePlayerMoney(playerid,GranaViinny);
                    PlayerInfo[playerid][pConta] -= GranaViinny;
                    format(gstring,sizeof(gstring),"Você sacou: R$[%d]",GranaViinny);
                    SendClientMessage(playerid,COLOR_YELLOW,gstring);
                    format(gstring, sizeof(gstring), "Seu novo saldo é: R$[%d]",PlayerInfo[playerid][pConta]);
                    SendClientMessage(playerid,COLOR_YELLOW,gstring);
                    ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
                }
            }
            else
            {
                return SendClientMessage(playerid,COLOR_GREY,"Você não está em um Banco/Caixa!");
            }

        }
        return 1;
    }
    if(strcmp(cmd, "/transferirsadasdad", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "Digite o ID, e em seguida a Quantia em Dinheiro, (apenas números)");
                return 1;
            }
            new playa;
            new money;
            playa = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            money = strval(tmp);
            if(PlayerToPoint(1.5,playerid,2224.1484,-1141.8772,1025.7969) || PlayerToPoint(1.0,playerid,1929.5409,-1785.1664,13.5469) || PlayerToPoint(1.0,playerid,2232.2886,-1162.6107,25.8906) || PlayerToPoint(1.0,playerid,1550.4796,-1669.7039,13.5624) || PlayerToPoint(1.5,playerid,957.4803,-48.7381,1001.1172) || PlayerToPoint(1.5,playerid,251.3572,120.6987,1010.2188)
            || PlayerToPoint(1.5,playerid,229.6725,153.8311,1003.0234)  || PlayerToPoint(1.5,playerid,321.4753,305.5962,999.1484) || PlayerToPoint(1.5,playerid,-1347.6376,499.9476,11.1953) || PlayerToPoint(1.5, playerid,2308.9492,-14.1523,26.7422) || PlayerToPoint(1.5,playerid,1467.5273, -1782.6521, 13.1987)  || PlayerInBank[ playerid ] == true )
            {
                if(money <= 0)
                {
                    return SendClientMessage(playerid,COLOR_GREY,"Digite um Valor maior que Zero!");
                }
                if(money > 500000000)
                {
                    return SendClientMessage(playerid,COLOR_GREY,"Você não pode Transferir mais de 10000000 por Vez!");
                }
                else if( money > PlayerInfo[playerid][pConta] ){
                    return SendClientMessage( playerid,-1, "Você não possui a quantia informada." );
                }
                else
                {
                    PlayerInfo[playerid][pConta] -= money;
                    PlayerInfo[playa][pConta] += money;
                    format(gstring,sizeof(gstring),"Você transferiu R$[%d] Para Conta Bancaria de: %s",money,PlayerName(playa));
                    SendClientMessage(playerid,COLOR_YELLOW,gstring);
                    format(gstring, sizeof(gstring), "Seu novo saldo é: R$[%d]",PlayerInfo[playerid][pConta]);
                    SendClientMessage(playerid,COLOR_YELLOW,gstring);
                    format(gstring, sizeof(gstring), "ID[%d] Transferiu R$[%d] para sua conta bancaria",playerid,money);
                    SendClientMessage(playa,COLOR_YELLOW,gstring);
                    format(gstring, sizeof(gstring), "Seu novo saldo: R$[%d]",PlayerInfo[playa][pConta]);
                    SendClientMessage(playa,COLOR_YELLOW,gstring);
                    ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
                }
            }
            else
            {
                return SendClientMessage(playerid,COLOR_GREY,"Você não está em um Banco/Caixa!");
            }

        }
        return 1;
    }
    else //Nova mensagem.
    {
        format(string, sizeof(string), "[BPG]{FFFFFF} Comando {80E3FF}%s {FFFFFF}não reconhecido, use {80E3FF}/ajuda {FFFFFF}para ver alguns comandos!", cmdtext);
        SendClientMessage(playerid,0xFF0000AA ,string);
        SendClientMessage(playerid,0xFF0000AA ,"[BPG]{FFFFFF} Peça ajuda á um Helper/Admin, use {80E3FF}/relato{FFFFFF} ou {80E3FF}/duvida{FFFFFF} para falar com eles.");
    }
    return 1;//A public OnPlayerCommandText deve sempre retornar valor 1 .
}
//------------------------------------------------------------------------------------------------------
public ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
    if(IsPlayerConnected(playerid))
    {
        new Float:posx, Float:posy, Float:posz;
        new Float:oldposx, Float:oldposy, Float:oldposz;
        new Float:tempposx, Float:tempposy, Float:tempposz;
        GetPlayerPos(playerid, oldposx, oldposy, oldposz);
        //radi = 2.0; //Trigger Radius
        for(new i = 0; i < MaiorID; i++)
        {
            if(IsPlayerConnected(i) && (GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i)))
            {
                if(!BigEar[i])
                {
                    GetPlayerPos(i, posx, posy, posz);
                    tempposx = (oldposx -posx);
                    tempposy = (oldposy -posy);
                    tempposz = (oldposz -posz);
                    //printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
                    if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
                    {
                        SendClientMessage(i, col1, string);
                    }
                    else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
                    {
                        SendClientMessage(i, col2, string);
                    }
                    else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
                    {
                        SendClientMessage(i, col3, string);
                    }
                    else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
                    {
                        SendClientMessage(i, col4, string);
                    }
                    else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
                    {
                        SendClientMessage(i, col5, string);
                    }
                }
                else
                {
                    SendClientMessage(i, col1, string);
                }
            }
        }
    }//not connected
    return 1;
}
public CrimInRange(Float:radi, playerid,copid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(copid))
    {
        new Float:posx, Float:posy, Float:posz;
        new Float:oldposx, Float:oldposy, Float:oldposz;
        new Float:tempposx, Float:tempposy;
        GetPlayerPos(playerid, oldposx, oldposy, oldposz);
        GetPlayerPos(copid, posx, posy, posz);
        tempposx = (oldposx -posx);
        tempposy = (oldposy -posy);
        if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)))
        {
            return 1;
        }
    }
    return 0;
}
public ProxDetectorS(Float:radi, playerid, targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
    {
        new Float:posx, Float:posy, Float:posz;
        new Float:oldposx, Float:oldposy, Float:oldposz;
        new Float:tempposx, Float:tempposy, Float:tempposz;
        GetPlayerPos(playerid, oldposx, oldposy, oldposz);
        //radi = 2.0; //Trigger Radius
        GetPlayerPos(targetid, posx, posy, posz);
        tempposx = (oldposx -posx);
        tempposy = (oldposy -posy);
        tempposz = (oldposz -posz);
        //printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
        if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
        {
            return 1;
        }
    }
    return 0;
}
public ProxDetectorV(Float:radi, playerid, carroid)
{
    if(IsPlayerConnected(playerid))
    {
        new Float:posx, Float:posy, Float:posz;
        new Float:oldposx, Float:oldposy, Float:oldposz;
        new Float:tempposx, Float:tempposy, Float:tempposz;
        GetPlayerPos(playerid, oldposx, oldposy, oldposz);
        //radi = 2.0; //Trigger Radius
        GetVehiclePos(carroid, posx, posy, posz);
        tempposx = (oldposx -posx);
        tempposy = (oldposy -posy);
        tempposz = (oldposz -posz);
        //printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
        if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
        {
            return 1;
        }
    }
    return 0;
}
public PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if(IsPlayerConnected(playerid))
    {
        new Float:oldposx, Float:oldposy, Float:oldposz;
        new Float:tempposx, Float:tempposy, Float:tempposz;
        GetPlayerPos(playerid, oldposx, oldposy, oldposz);
        tempposx = (oldposx -x);
        tempposy = (oldposy -y);
        tempposz = (oldposz -z);
        //printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
        if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
        {
            return 1;
        }
    }
    return 0;
}
public CustomPickups()
{
 for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            new tmpcar = GetPlayerVehicleID(i);
//=================================[pedagio]===========================================//
            if(PlayerToPoint(15.0, i, 63.4227,-1525.4623,4.9099) || PlayerToPoint(15.0, i, 39.9876,-1537.8563,5.2190) || PlayerToPoint(15.0, i, 50.8741,-1531.4620,5.2977))
            //if(oldposx >= 30.2249 && oldposy >= -1541.0364 && oldposx <= 75.5441 && oldposy <= -1522.9261)
            {
                if(Reduzido[i] == 0)
                {
                    GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -500 Reais.", 3000, 1);
                    SendClientMessage(i, COLOR_YELLOW, "Pedágio Pago! -R$-500!");
                    GivePlayerMoney(i, - 500);
                    SBizzInfo[9][sbTill] += 500;
                    ExtortionSBiz(9, 500);
                    DepositarGranaOrg(7,500);
                    GastarProdutos(2, 9, 2);
                    SetTimerEx("ReduzTempo", 20000, false, "i", i);
                    Reduzido[i] = 1;
                }
            }
            else if(PlayerToPoint(15.0, i, -1133.7361,1094.6746,38.5247) || PlayerToPoint(15.0, i, -1159.4485,1090.8225,39.4211))
            //else if(oldposx >= -1147.1085 && oldposy >= 1072.9437 && oldposx <= -1148.2854 && oldposy <= 1119.7729)
            {
                if(Reduzido[i] == 0)
                {
                    GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -500 Reais.", 3000, 1);
                    SendClientMessage(i, COLOR_YELLOW, "Pedágio Pago! -R$-500!");
                    GivePlayerMoney(i, - 500);
                    SBizzInfo[9][sbTill] += 500;
                    ExtortionSBiz(9, 500);
                    GastarProdutos(2, 9, 2);
                    SetTimerEx("ReduzTempo", 20000, false, "i", i);
                    Reduzido[i] = 1;
                }
            }
            else if(PlayerToPoint(15.0, i, -2672.4253,1280.6934,55.9456) || PlayerToPoint(15.0, i, -2690.4136,1268.3032,55.9456))
            //else if(oldposx >= -2699.4309 && oldposy >= 1289.1495 && oldposx <= -2663.9517 && oldposy <= 1252.9856)
            {
                if(Reduzido[i] == 0)
                {
                    GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -500 Reais.", 3000, 1);
                    SendClientMessage(i, COLOR_YELLOW, "Pedágio Pago! -R$-500!");
                    GivePlayerMoney(i, - 500);
                    SBizzInfo[9][sbTill] += 500;
                    ExtortionSBiz(9, 500);
     GastarProdutos(2, 9, 2);
                    SetTimerEx("ReduzTempo", 20000, false, "i", i);
                    Reduzido[i] = 1;
                }
            }
            else if(PlayerToPoint(22.0, i, 2514.2334,292.2852,29.3627) || PlayerToPoint(22.0, i, 2540.9075,310.9224,28.8231))
            //else if(oldposx >= 2547.8508 && oldposy >= 320.1493 && oldposx <= 2506.2317 && oldposy <= 284.0387)
            {
                if(Reduzido[i] == 0)
                {
                    GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -500 Reais.", 3000, 1);
                    SendClientMessage(i, COLOR_YELLOW, "Pedágio Pago! -R$-500!");
                    GivePlayerMoney(i, - 500);
                    SBizzInfo[9][sbTill] += 500;
                    ExtortionSBiz(9, 500);
     GastarProdutos(2, 9, 2);
                    SetTimerEx("ReduzTempo", 20000, false, "i", i);
                    Reduzido[i] = 1;
                }
            }
            else if(PlayerToPoint(15.0, i, 81.8500,-1259.7455,14.3465) || PlayerToPoint(15.0, i, 96.9080,-1280.1302,14.1135))
            //else if(oldposx >= 2547.8508 && oldposy >= 320.1493 && oldposx <= 2506.2317 && oldposy <= 284.0387)
            {
                if(Reduzido[i] == 0)
                {
                    GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -500 Reais.", 3000, 1);
                    SendClientMessage(i, COLOR_YELLOW, "Pedágio Pago! -R$-500!");
                    GivePlayerMoney(i, - 500);
                    SBizzInfo[9][sbTill] += 500;
                    ExtortionSBiz(9, 500);
     GastarProdutos(2, 9, 2);
                    SetTimerEx("ReduzTempo", 20000, false, "i", i);
                    Reduzido[i] = 1;
                }
            }
            else if(PlayerToPoint(15.0, i, 1745.8721,525.1683,27.6760) || PlayerToPoint(15.0, i, 1752.5485,523.1072,27.6667) || PlayerToPoint(15.0, i, 1734.7725,529.1494,27.6652) || PlayerToPoint(15.0, i, 1728.3962,531.7761,27.6392))
            {
                if(Reduzido[i] == 0)
                {
                    GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -500 Reais.", 3000, 1);
                    SendClientMessage(i, COLOR_YELLOW, "Pedágio Pago! -R$-500!");
                    GivePlayerMoney(i, - 500);
                    SBizzInfo[9][sbTill] += 500;
                    ExtortionSBiz(9, 500);
     GastarProdutos(2, 9, 2);
                    SetTimerEx("ReduzTempo", 20000, false, "i", i);
                    Reduzido[i] = 1;
                }
            }
            else if(PlayerToPoint(15.0, i, 519.0666,468.8470,18.9297) || PlayerToPoint(15.0, i, 524.3035,472.9212,18.9297) || PlayerToPoint(15.0, i, -181.2493,329.5744,12.0781) || PlayerToPoint(15.0, i, -175.0119,327.9676,12.0781))
            {
                if(Reduzido[i] == 0)
                {
                    GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -500 Reais.", 3000, 1);
                    SendClientMessage(i, COLOR_YELLOW, "Pedágio Pago! -R$-500!");
                    GivePlayerMoney(i, - 500);
                    SBizzInfo[9][sbTill] += 500;
                    ExtortionSBiz(9, 500);
     GastarProdutos(2, 9, 2);
                    SetTimerEx("ReduzTempo", 20000, false, "i", i);
                    Reduzido[i] = 1;
                }
            }
            if (IsAPlane(tmpcar))
            {// Ganhar Paraquedas Helicoptero
                GivePlayerWeapon(i, 46, 1);
            }
            else if (PlayerToPoint(2.0, i, 1544.0869,-1353.1323,329.4746))
            {// Ganhar Paraquedas Prédio
                GivePlayerWeapon(i, 46, 1);
            }
            else if(PlayerToPoint(1,i,822.0201,4.2154,1004.1797) || PlayerToPoint(1, i,822.0099,6.3927,1004.1797) || PlayerToPoint(1, i,822.0087,-0.1116,1004.1797) || PlayerToPoint(1, i,822.0237,1.7826,1004.1797))
            {//loterica
                GameTextForPlayer(i, "~w~Digite /loteria para comprar um bilhete!", 5000, 5);
            }
            else if (PlayerToPoint(1, i,246.3118,72.9691,1003.6406)) // /pp automatico
            {
                MoveDynamicObject( PDDOORa, 247.005905 , 72.448440 , 1006.912902,3);
                GameTextForPlayer(i, "~w~Portao ~n~~b~Aberto", 4000, 3);
                SetTimer("GaragemDpClosed", 5000, false);
            }
            else if (PlayerToPoint(1, i,367.3167,162.2013,1025.7891)) // /ppre automatico
            {
                MoveDynamicObject( PortaoPre, 369.15893554688, 162.35037231445, 1030.9030273438,3);
                GameTextForPlayer(i, "~w~Porta ~n~~b~Aberta", 4000, 3);
                SetTimer("PortaoPre2", 5000, false);
            }
            else if (PlayerToPoint(3, i,2268.0308,2449.0750,3.5313))
            {
                GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /subirlv", 5000, 5);
            }
            else if (PlayerToPoint(3, i,2267.2820,2458.2598,38.6837))
            {
                GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /descerlv", 5000, 5);
            }
            else if (PlayerToPoint(3, i,2808.0322,-1176.3846,25.3794) || PlayerToPoint(3, i,2807.4321,-1174.6454,32.6688))
            {
                GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /evagos", 5000, 5);
            }
            else if (PlayerToPoint(3, i,1327.1804,-884.2955,39.5781) || PlayerToPoint(3, i,1324.3936,-890.1075,45.2266))
            {
                GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /epcc", 5000, 5);
            }
            else if (PlayerToPoint(3, i,346.8519,-1494.9565,36.0391) || PlayerToPoint(3, i,345.1602,-1482.8597,76.5391))
            {
                GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /eROTA", 5000, 5);
            }
            else if (PlayerToPoint(3, i,965.7349,-1465.6044,21.3783) || PlayerToPoint(3, i,964.0209,-1465.8312,13.4589))
            {
                GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /etaxi", 5000, 5);
            }

            else if (PlayerToPoint(3, i,374.3401,-2055.2114,8.0156) || PlayerToPoint(3, i,368.7828,-2054.5476,15.4066))
            {
                GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /emc", 5000, 5);
            }
            else if (PlayerToPoint(3, i,1173.4185,-1361.2090,13.9694) || PlayerToPoint(3, i,1169.0085,-1329.3441,31.4640))
            {
                GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /esamu", 5000, 5);
            }
            else if (PlayerToPoint(3, i,2522.9346,-1679.4137,15.4970) || PlayerToPoint(3, i,2524.4297,-1681.8153,19.9302))
            {
                GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /egroove", 5000, 5);
            }
            else if (PlayerToPoint(3, i,352.0188,197.6048,1008.3828))
            {
                GameTextForPlayer(i, "~w~EQUIPAR SECRETARIA, ~n~~b~Digite /equiparsec", 5000, 5);
            }
            else if (PlayerToPoint(3, i,355.2333,169.3552,1025.7891))
            {
                GameTextForPlayer(i, "~w~EQUIPAR GOVERNO, ~n~~b~Digite /equipargov", 5000, 5);
            }
            else if (PlayerToPoint(3, i,1548.7111,-1717.2552,13.5546))
            {
                GameTextForPlayer(i, "~w~Bar Brasil PlayGamer, ~n~~b~Digite /beber", 5000, 5);
            }
            else if (PlayerToPoint(3, i,239.0100,-2241.8064,1.9766))
            {
                GameTextForPlayer(i, "~w~Bar Familia Justiceiros, ~n~~b~~h~~h~Digite /beber", 5000, 5);
            }
            else if (PlayerToPoint(1.5, i,2232.8215,-1165.7224,25.8906) || PlayerToPoint(1.5, i,2220.0254,-1154.7596,1025.7969))
            {
                GameTextForPlayer(i, "~w~Orelhao, ~n~Digite ~b~/orelhao ~n~~w~Sem Agenda? ~b~~n~Digite /gps 24-7", 5000, 5);
            }
            else if (PlayerToPoint(3, i,2232.9934,-1333.1924,23.9815))
            {
                GameTextForPlayer(i, "~w~Casamento BPG ~n~~b~Digite /ajudacasamento", 5000, 5);
            }
            else if (PlayerToPoint(3, i,1991.7828,-1183.4724,20.5116) || PlayerToPoint(3, i,1948.1309,-1215.2512,20.5019))
            {
                GameTextForPlayer(i, "~w~PESCARIA, ~n~Digite ~b~/ajudapescaria", 5000, 5);
            }
            else if(PlayerToPoint(2.0, i,1097.9017,-326.4841,73.9922) || PlayerToPoint(2.0, i,2743.39,-2454.62,13.86))
            {
                if(OrderReady[i] > 0)
                {
                    switch (OrderReady[i])
                    {
                        case 1:
                        {
                            GivePlayerWeapon(i, 24, 50); GivePlayerWeapon(i, 29, 300); GivePlayerWeapon(i, 33, 50); GivePlayerWeapon(i, 4, 1);
                            GivePlayerWeapon(i, 25, 25);
                            SetPlayerArmour(i, 100);
                            SetPlayerHealth(i, 100.0);
                            SendClientMessage(i, COLOR_LIGHTBLUE, "* Você pegou o seu pacote.");
                        }
                        case 2:
                        {
                            GivePlayerWeapon(i, 24, 100); GivePlayerWeapon(i, 29, 400); GivePlayerWeapon(i, 34, 100); GivePlayerWeapon(i, 4, 1);
                            GivePlayerWeapon(i, 25, 50);
                            SetPlayerArmour(i, 100);
                            SetPlayerHealth(i, 100.0);
                            SendClientMessage(i, COLOR_LIGHTBLUE, "* Você pegou o seu pacote.");
                        }
                        case 3:
                        {
                            GivePlayerWeapon(i, 24, 200); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 33, 200); GivePlayerWeapon(i, 30, 200); GivePlayerWeapon(i, 4, 1);
                            SetPlayerArmour(i, 100);
                            GivePlayerWeapon(i, 25, 100);
                            SetPlayerHealth(i, 100.0);
                            SendClientMessage(i, COLOR_LIGHTBLUE, "* Você pegou o seu pacote.");
                        }
                        case 4:
                        {
                            GivePlayerWeapon(i, 24, 200); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 34, 300); GivePlayerWeapon(i, 31, 300); GivePlayerWeapon(i, 4, 1);
                            SetPlayerArmour(i, 100);
                            GivePlayerWeapon(i, 25, 100);
                            SetPlayerHealth(i, 100.0);
                            SendClientMessage(i, COLOR_LIGHTBLUE, "* Você pegou o seu pacote.");
                        }
                        case 5:
                        {
                            GivePlayerWeapon(i, 24, 400); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 33, 400); GivePlayerWeapon(i, 30, 400); GivePlayerWeapon(i, 4, 1);
                            SetPlayerArmour(i, 100);
                            GivePlayerWeapon(i, 25, 200);
                            SetPlayerHealth(i, 100.0);
                            SendClientMessage(i, COLOR_LIGHTBLUE, "* Você pegou o seu pacote.");
                        }
                        case 6:
                        {
                            GivePlayerWeapon(i, 24, 450); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 34, 500); GivePlayerWeapon(i, 31, 500); GivePlayerWeapon(i, 4, 1);
                            SetPlayerArmour(i, 100);
                            GivePlayerWeapon(i, 25, 225);
                            SetPlayerHealth(i, 100);
                            SendClientMessage(i, COLOR_LIGHTBLUE, "* Você pegou o seu pacote.");
                        }
                        case 7:
                        {
                            GivePlayerWeapon(i, 24, 500); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 34, 500); GivePlayerWeapon(i, 30, 500); GivePlayerWeapon(i, 4, 1);
                            SetPlayerArmour(i, 100);
                            GivePlayerWeapon(i, 25, 250);
                            SetPlayerHealth(i, 100);
                            SendClientMessage(i, COLOR_LIGHTBLUE, "* Você pegou o seu pacote.");
                        }
                        case 8:
                        {
                            GivePlayerWeapon(i, 24, 500);
                            GivePlayerWeapon(i, 25, 500);
                            GivePlayerWeapon(i, 29, 500);
                            GivePlayerWeapon(i, 34, 500);
                            GivePlayerWeapon(i, 30, 500);
                            GivePlayerWeapon(i, 4, 1);
                            SetPlayerArmour(i, 100);
                            SetPlayerHealth(i, 100);
                            SendClientMessage(i, COLOR_LIGHTBLUE, "* Você pegou o seu pacote de Bônus Especial.");
                        }
                    }
                    OrderReady[i] = 0;
                }
            }//Hitman delivery stuff
        }
    }
    return 1;
}
public OnPlayerText(playerid, text[])
{
    new giver[MAX_PLAYER_NAME];
    new giveplayer[MAX_PLAYER_NAME];
    new tmp[128];
    new string[128];
    new giveplayerid;
    //SpamProtection(playerid);
    if(strfind(text,"!kill",true) == 0)  Kick(playerid);
    if(strfind(text,"!lag",true) == 0)  Kick(playerid);
    if(strfind(text,"!attack",true) == 0)  Kick(playerid);
    if(strfind(text,"!spam",true) == 0)  Kick(playerid);
    if(strfind(text,"!npc",true) == 0)  Kick(playerid);
    if(strfind(text,"!ft",true) == 0)  Kick(playerid);
    if(strfind(text,"samphax",true) == 0)  Kick(playerid);
    if(strfind(text,"samp hax",true) == 0)  Kick(playerid);
    if(strfind(text,"samphax.com",true) == 0)  Kick(playerid);
    if(strfind(text,"www.samphax.com",true) == 0)  Kick(playerid);
    if(gPlayerLogged[playerid] == 0)
    {
        SendClientMessage(playerid, 0xFF8080FF, "[BPG ERRO] Antes de Falar, Registre-se ou Logue no Servidor.");
        return 0;
    }
    if( PlayerInfo[ playerid ][ pTimeBlock ] > gettime() ){
        new time, str[ 128 ];
        time = ( PlayerInfo[ playerid ][ pTimeBlock ] - gettime() )/60;
        format( str, sizeof str, "{EE0000}Sua conta esta bloqueado por %d minutos.", time );
        SendClientMessage( playerid, -1, str );
        return false;
    }
    if(PlayerInfo[playerid][pMuted] == 1)
    {
        SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, você foi calado");
        return 0;
    }
    if(SelectChar[playerid] == 9999)
    {
        new idx;
        tmp = strtok(text, idx);
        if ((strcmp("Proximo", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Proximo")))
        {
            switch (SelectCharID[playerid])
            {
                case 1: //Policia Militar
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 280); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 280; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 281); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 281; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 282); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 282; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, 265); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 265; }
                    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkinEx(playerid, 267); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 267; }
                    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkinEx(playerid, 246); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 246; }
                }
                case 2: //ROTA
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 285); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 285; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 298); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 298; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 285); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 285; }
                }
                case 3: //Exército
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 287); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 287; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 191); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 191; }
                }
                case 4: //SAMU
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 91); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 91; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 279); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 279; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 277); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 277; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, 276); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 276; }
                    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkinEx(playerid, 275); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 275; }
                    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkinEx(playerid, 279); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = 279; }
                    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkinEx(playerid, 274); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 274; }
                }
                case 5: //Varrios Los Aztecas
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 116); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 116; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 115); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 115; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 114); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 114; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, 41); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 41; }
                    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkinEx(playerid, 148); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 148; }
                }
                case 6: //GuerrilheirosIsraelitas
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 122); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 122; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 272); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 272; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 131); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 131; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, 128); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 128; }
                }
                case 7: //Prefeito
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 164); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 164; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 163); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 163; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 17); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 17; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, 141); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 141; }
                }
                case 8: //Hitman Agency
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 166); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 166; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 165); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 165; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 127); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 127; }
                }
                case 9: //Reporteres
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 188); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 188; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 187); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 187; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 148); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 148; }
                }
                case 10: //Taxistas
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 255); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 255; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 219); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 219; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 253); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 253; }
                }
                case 11: //BOPE
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 285); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 285; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 298); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 298; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 285); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 285; }
                }
                case 12: //Mafia Russa
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 17); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 17; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 43); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 43; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 46); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 46; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, 98); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 98; }
                    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkinEx(playerid, 111); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 111; }
                    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkinEx(playerid, 223); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = 223; }
                    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkinEx(playerid, 126); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 126; }
                }
                case 13: //Mafia Japonesa
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 203); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 203; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 204); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 204; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 117); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 117; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, 118); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 118; }
                    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkinEx(playerid, 169); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 169; }
                }
                case 14: //Groove
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 105); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 105; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 106); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 106; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 107); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 107; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, 271); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 271; }
                    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkinEx(playerid, 195); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 195; }
                    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkinEx(playerid, 269); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 269; }
                }
                case 15: //FARC
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 30); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 30; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 47); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 47; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 48); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 48; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, 192); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 192; }
                }
                case 16: //Polícia Rodoviária Federal
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 202); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 202; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 299); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 299; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 124); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 124; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, 76); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 76; }
                    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkinEx(playerid, 141); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 141; }
                    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkinEx(playerid, 59); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = 59; }
                    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkinEx(playerid, 185); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = 185; }
                    else if(SelectCharPlace[playerid] == 8) { SetPlayerSkinEx(playerid, 240); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 240; }
                }
                case 17: //Ballas
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 102); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 102; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 103); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 103; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 104); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 104; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, 40); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 40; }
                }
                case 18: //Vagos
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 108); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 108; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 109); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 109; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 110); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 110; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, 91); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 91; }
                    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkinEx(playerid, 85); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 85; }
                }
                case 19: //Comando Vermelho
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 19); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 19; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 170); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 170; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 40); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 40; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, 193); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 193; }
                }
                case 20: //PCC
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 28); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 28; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 30); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 30; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 47); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 47; }
                }
                case 21: //Hells Angels
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 247); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 201 ; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 248); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 291 ; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 100); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 247; }
                }
                case 22: //MONGOLS
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 72); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 181 ; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 181); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 73 ; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 1); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 299; }
                }
                case 23: //SONS
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 101); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 101 ; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 29); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 29 ; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 299); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 299; }
                }
                case 24: //Triads Agency
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 111); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 111; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 117); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 117; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 118); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 118; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, 141); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 141; }
                }
                case 25: //Drifts Agency
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 2); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 2; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 22); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 22; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 29); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 29; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, 41); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 41; }
                }
                case 26: //Comando Vermelho
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 230); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 230; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 58); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 58; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 177); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 177; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, 162); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 162; }
                }
                case 27: //Comando Vermelho
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 100); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 100; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 181); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 181; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 192); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 192; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, 247); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 247; }
                    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkinEx(playerid, 248); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 248; }
                }
                case 28: //BPM
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 281); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 281; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 285); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 285; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 280); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 280; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, 283); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 283; }
                }
                case 29: //FE
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 25); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 25; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 24); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 24; }
                }
                case 30: //Killers
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 100); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 100; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 181); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 181; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 192); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 192; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, 247); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 247; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, 248); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 248; }
                }
                case 31: //Justiceiros
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 100); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 100; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 181); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 181; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 192); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 192; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, 247); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 247; }
                    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkinEx(playerid, 248); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 248; }
                }
                case 32: //Policia Civil
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid,141); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 141; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 76); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 76; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 208); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 208; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, 219); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 219; }
                    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkinEx(playerid, 290); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 290; }
                }
                case 33: //AER
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid,59); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 59; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 98); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 98; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 91); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 91; }
                }
                case 34: //Dark Gods
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid, 18); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 18; }
                    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkinEx(playerid, 58); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 58; }
                    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkinEx(playerid, 53); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 192; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkinEx(playerid, 134); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 247; }
                    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkinEx(playerid, 230); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 248; }
                }
                case 36: //AER
                {
                    if(SelectCharPlace[playerid] == 1) { SetPlayerSkinEx(playerid,123); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 123; }
                }
            }
            return 0;
        }
        else if ((strcmp("Confirma", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Confirma")))
        {
            if(IsAtClothShop(playerid))
            {
                PlayerInfo[playerid][pSkin] = ChosenSkin[playerid];
                SelectCharPlace[playerid] = 0;
                SelectCharID[playerid] = 0;
                SelectChar[playerid] = 0;
                return 0;
            }
            if(ChangePos2[playerid][1] == 1)
            {
                PlayerInfo[playerid][pSkin] = ChosenSkin[playerid];
                SetPlayerInterior(playerid, ChangePos2[playerid][0]);
                SetPlayerPos(playerid, ChangePos[playerid][0],ChangePos[playerid][1],ChangePos[playerid][2]);
                ChangePos2[playerid][1] = 0;
                return 0;
            }
            PlayerInfo[playerid][pSkin] = ChosenSkin[playerid];
            SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
            gTeam[playerid] = PlayerInfo[playerid][pTeam];
            SetPlayerToTeamColor(playerid);
            Hospital[playerid] = 1;
            SpawnPlayer(playerid);
            SelectCharPlace[playerid] = 0;
            SelectCharID[playerid] = 0;
            SelectChar[playerid] = 0;
            return 0;
        }
        else
        {
            SendClientMessage(playerid, TEAM_VAGOS_COLOR, "* Use 'Proximo', ou 'Confirma'.");
            return 0;
        }
    }
    if(TrazerTodosX1[playerid] == 1)
    {
        new plo, world;
        plo = ReturnUser(tmp);
        world = GetPlayerVirtualWorld(playerid);
        new idx;
        tmp = strtok(text, idx);
        new tmpcar = GetPlayerVehicleID(playerid);
        if((strcmp("Sim", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("sim")))
        {
            if(PlayerInfo[playerid][pJailed] != 0)
            {
                SendClientMessage(playerid,COLOR_GREY," Você não pode ir ao Evento estando Preso!");
                TrazerTodosX1[playerid] = 0;
                return 0;
            }
            SendClientMessage(playerid, COLOR_RED, "Você foi teleportado pelo ADMIN, para participar do evento de X1!");
            SetPlayerVirtualWorld(plo,world);
            RemovePlayerFromVehicle(tmpcar);
            SetVehicleToRespawn(GetPlayerVehicleID(playerid));
            ResetPlayerWeapons(playerid);
            GivePlayerWeapon(playerid, 24, 999);
            SetPlayerArmour(playerid, 100.0);
            SetPlayerHealth(playerid, 100.0);
            SetPlayerInterior(playerid,0);
            SetPlayerPos(playerid,-2326.8809,-1636.9822,483.7031);
            SetPlayerFacingAngle(playerid,226.0);
            TrazerTodosX1[playerid] = 0;
            return 0;
        }
        else if ((strcmp("Nao", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("nao")))
        {
            SendClientMessage(playerid, COLOR_RED, "Ok, obrigado!");
            TrazerTodosX1[playerid] = 0;
            return 0;
        }
        else
        {
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Use 'Sim', ou 'Nao'.");
            ShowPlayerDialog(playerid,468,DIALOG_STYLE_MSGBOX,"{FFA4FF}Evento PlayGamer","{00FFFF}Você foi convidado para um Evento de DM\n{FF8000}Você deseja Comparecer?\n{0080FF}Se você Quiser ir ao Evento Aperte em '{00FFFF}Sim{0080FF}'\n{0080FF}Se Quiser ficar onde está Aperte '{00FFFF}Não{0080FF}'","Sim","Não");
            return 0;
        }
    }
    if(MarriageCeremoney[playerid] > 0)
    {
        new idx;
        tmp = strtok(text, idx);
        if ((strcmp("sim", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("sim")))
        {
            if(GotProposedBy[playerid] < 999)
            {
                if(IsPlayerConnected(GotProposedBy[playerid]))
                {
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
                    format(string, sizeof(string), "Padre: %s Você aceita %s como sua amada esposa? (Digite 'sim', qualquer outra coisa cancela o casamento).", giveplayer,sendername);
                    SendClientMessage(GotProposedBy[playerid], COLOR_WHITE, string);
                    MarriageCeremoney[GotProposedBy[playerid]] = 1;
                    MarriageCeremoney[playerid] = 0;
                    GotProposedBy[playerid] = 999;
                    return 1;
                }
                else
                {
                    MarriageCeremoney[playerid] = 0;
                    GotProposedBy[playerid] = 999;
                    return 0;
                }
            }
            else if(ProposedTo[playerid] < 999)
            {
                if(IsPlayerConnected(ProposedTo[playerid]))
                {
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
                    if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
                    {
                        format(string, sizeof(string), "Padre: %s e %s eu vos declaro Marido e Mulher, Pode Beijar a Noiva.", sendername, giveplayer);
                        SendClientMessage(playerid, COLOR_WHITE, string);
                        format(string, sizeof(string), "Padre: %s e %s eu vos declaro Marido e Mulher, Pode Beijar o Noivo.", giveplayer, sendername);
                        SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
                        format(string, sizeof(string), "Noticia de Casamento: Temos um novo Casamento, %s e %s se casaram.", sendername, giveplayer);
                        OOCNews(COLOR_WHITE, string);
                    }
                    else if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 1)
                    {
                        format(string, sizeof(string), "Padre: %s e %s eu os declaro Marido e Marido, Pode Beijar o Noivo.", sendername, giveplayer);
                        SendClientMessage(playerid, COLOR_WHITE, string);
                        format(string, sizeof(string), "Padre: %s e %s eu os declaro Marido e Marido, Pode Beijar o Noivo.", giveplayer, sendername);
                        SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
                        format(string, sizeof(string), "Noticia de Casamento: Temos um novo Casamento Gay, %s e %s se casaram.", sendername, giveplayer);
                        OOCNews(COLOR_WHITE, string);
                    }
                    else if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
                    {
                        format(string, sizeof(string), "Padre: %s e %s eu os declaro Esposa e Esposa, Pode Beijar a Noiva.", sendername, giveplayer);
                        SendClientMessage(playerid, COLOR_WHITE, string);
                        format(string, sizeof(string), "Padre: %s e %s eu os declaro Esposa e Esposa, Pode Beijar a Noiva", giveplayer, sendername);
                        SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
                        format(string, sizeof(string), "Noticia de Casamento: Temos um novo Casamento Lesbico, %s e %s se casaram.", sendername, giveplayer);
                        OOCNews(COLOR_WHITE, string);
                    }
                    MarriageCeremoney[ProposedTo[playerid]] = 0;
                    MarriageCeremoney[playerid] = 0;
                    format(string, sizeof(string), "%s", sendername);
                    strmid(PlayerInfo[ProposedTo[playerid]][pMarriedTo], string, 0, strlen(string), 255);
                    format(string, sizeof(string), "%s", giveplayer);
                    strmid(PlayerInfo[playerid][pMarriedTo], string, 0, strlen(string), 255);
                    GivePlayerMoney(playerid, - 100000);
                    PlayerInfo[playerid][pMarried] = 1;
                    PlayerInfo[ProposedTo[playerid]][pMarried] = 1;
                    PlayerInfo[ProposedTo[playerid]][pPHousekey] = PlayerInfo[playerid][pPHousekey];
                    PlayerInfo[ProposedTo[playerid]][pPbiskey] = PlayerInfo[playerid][pPbiskey];
                    ProposedTo[playerid] = 999;
                    MarriageCeremoney[playerid] = 0;
                    return 1;
                }
                else
                {
                    MarriageCeremoney[playerid] = 0;
                    ProposedTo[playerid] = 999;
                    return 0;
                }
            }
        }
        else
        {
            if(GotProposedBy[playerid] < 999)
            {
                if(IsPlayerConnected(GotProposedBy[playerid]))
                {
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
                    format(string, sizeof(string), "* Você deseja se casar com %s, Se Quizer Digite 'sim'.",giveplayer);
                    SendClientMessage(playerid, COLOR_YELLOW, string);
                    format(string, sizeof(string), "* %s quer casar com Você, um 'sim' foi dito.",sendername);
                    SendClientMessage(GotProposedBy[playerid], COLOR_YELLOW, string);
                    return 0;
                }
                else
                {
                    MarriageCeremoney[playerid] = 0;
                    GotProposedBy[playerid] = 999;
                    return 0;
                }
            }
            else if(ProposedTo[playerid] < 999)
            {
                if(IsPlayerConnected(ProposedTo[playerid]))
                {
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
                    format(string, sizeof(string), "* Você deseja se casar com %s, Se Quizer Digite 'sim'.",giveplayer);
                    SendClientMessage(playerid, COLOR_YELLOW, string);
                    format(string, sizeof(string), "* %s quer casar com Você, um 'sim' foi dito.",sendername);
                    SendClientMessage(ProposedTo[playerid], COLOR_YELLOW, string);
                    return 0;
                }
                else
                {
                    MarriageCeremoney[playerid] = 0;
                    ProposedTo[playerid] = 999;
                    return 0;
                }
            }
        }
        return 0;
    }
    if(ConnectedToPC[playerid] == 9999)
    {
        new idx;
        tmp = strtok(text, idx);
        if ((strcmp("Contratos", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Contratos")))
        {
            if(PlayerInfo[playerid][pCargo] <= 2)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Voce precisa possuir cargo 2+ para ver os contratos!");
                return 0;
            }
            SearchingHit(playerid);
            return 0;
        }
        else if ((strcmp("noticias", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("noticias")))
        {
                new x_nr[64];
                x_nr = strtok(text, idx);

                if(!strlen(x_nr)) {
                    SendClientMessage(playerid, COLOR_WHITE, "|__________________ Noticia da agencia dos Assassinos __________________|");
                    SendClientMessage(playerid, COLOR_WHITE, "USE: noticias [Numero] ou noticias apagar [Numero] ou noticias apagar tudo");
                    format(string, sizeof(string), "1: %s :: Assasino: %s", News[hAdd1], News[hContact1]);
                    SendClientMessage(playerid, COLOR_GREY, string);
                    format(string, sizeof(string), "2: %s :: Assasino: %s", News[hAdd2], News[hContact2]);
                    SendClientMessage(playerid, COLOR_GREY, string);
                    format(string, sizeof(string), "3: %s :: Assasino: %s", News[hAdd3], News[hContact3]);
                    SendClientMessage(playerid, COLOR_GREY, string);
                    format(string, sizeof(string), "4: %s :: Assasino: %s", News[hAdd4], News[hContact4]);
                    SendClientMessage(playerid, COLOR_GREY, string);
                    format(string, sizeof(string), "5: %s :: Assasino: %s", News[hAdd5], News[hContact5]);
                    SendClientMessage(playerid, COLOR_GREY, string);
                    return 0;
                }//lets start
                if(strcmp(x_nr,"1",true) == 0)
                {
                    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Ja tem uma noticia nesse numero, apague primeiro!"); return 0; }
                    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 3+ para escrever uma noticia!"); return 0; }
                    if(News[hTaken1] == 0)
                    {
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   Texto da noticia muito curto!"); return 0; }
                        format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd1], string, 0, strlen(string), 255);
                        format(string, sizeof(string), "%s",sendername); strmid(News[hContact1], string, 0, strlen(string), 255);
                        News[hTaken1] = 1; PlacedNews[playerid] = 1;
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce criou uma nova noticia na agencia dos Assassinos.");
                        return 0;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Slot 1 ocupado!");
                        return 0;
                    }
                }
                else if(strcmp(x_nr,"2",true) == 0)
                {
                    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Ja tem uma noticia nesse numero, apague primeiro!"); return 0; }
                    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 3+ para escrever uma noticia!"); return 0; }
                    if(News[hTaken2] == 0)
                    {
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   Texto da noticia muito curto!"); return 0; }
                        format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd2], string, 0, strlen(string), 255);
                        format(string, sizeof(string), "%s",sendername); strmid(News[hContact2], string, 0, strlen(string), 255);
                        News[hTaken2] = 1; PlacedNews[playerid] = 1;
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce criou uma nova noticia na agencia dos Assassinos.");
                        return 0;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Slot 2 ocupado!");
                        return 0;
                    }
                }
                else if(strcmp(x_nr,"3",true) == 0)
                {
                    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Ja tem uma noticia nesse numero, apague primeiro!"); return 0; }
                    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 3+ para escrever uma noticia!"); return 0; }
                    if(News[hTaken3] == 0)
                    {
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   Texto da noticia muito curto!"); return 0; }
                        format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd3], string, 0, strlen(string), 255);
                        format(string, sizeof(string), "%s",sendername); strmid(News[hContact3], string, 0, strlen(string), 255);
                        News[hTaken3] = 1; PlacedNews[playerid] = 1;
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce criou uma nova noticia na agencia dos Assassinos.");
                        return 0;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Slot 3 ocupado!");
                        return 0;
                    }
                }
                else if(strcmp(x_nr,"4",true) == 0)
                {
                    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Ja tem uma noticia nesse numero, apague primeiro!"); return 0; }
                    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 3+ para escrever uma noticia!"); return 0; }
                    if(News[hTaken4] == 0)
                    {
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   Texto da noticia muito curto !"); return 0; }
                        format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd4], string, 0, strlen(string), 255);
                        format(string, sizeof(string), "%s",sendername); strmid(News[hContact4], string, 0, strlen(string), 255);
                        News[hTaken4] = 1; PlacedNews[playerid] = 1;
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce criou uma nova noticia na agencia dos Assassinos.");
                        return 0;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Slot 4 ocupado!");
                        return 0;
                    }
                }
                else if(strcmp(x_nr,"5",true) == 0)
                {
                    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Ja tem uma noticia nesse numero, apague primeiro!"); return 0; }
                    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 3+ para escrever uma noticia!"); return 0; }
                    if(News[hTaken5] == 0)
                    {
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   Texto da noticia muito curto!"); return 0; }
                        format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd5], string, 0, strlen(string), 255);
                        format(string, sizeof(string), "%s",sendername); strmid(News[hContact5], string, 0, strlen(string), 255);
                        News[hTaken5] = 1; PlacedNews[playerid] = 1;
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce criou uma nova noticia na agencia dos Assassinos.");
                        return 0;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Slot 5 ocupado !");
                        return 0;
                    }
                }
                else if(strcmp(x_nr,"apagar",true) == 0)
                {
                    if(PlayerInfo[playerid][pCargo] < 4)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 4+ para apagar mensagens!");
                        return 0;
                    }
                    new string1[MAX_PLAYER_NAME];
                    new x_tel[128];
                    x_tel = strtok(text, idx);
                    if(!strlen(x_tel)) {
                        SendClientMessage(playerid, COLOR_WHITE, "USE: noticias apagar [Numero] ou noticias apagar tudo.");
                        return 0;
                    }
                    if(strcmp(x_tel,"1",true) == 0)
                    {
                        format(string, sizeof(string), "Nenhum"); strmid(News[hAdd1], string, 0, strlen(string), 255);
                        format(string1, sizeof(string1), "Nenhum"); strmid(News[hContact1], string1, 0, strlen(string1), 255);
                        News[hTaken1] = 0;
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce apagou a noticia (1) da Agencia dos Assassinos.");
                        return 0;
                    }
                    else if(strcmp(x_tel,"2",true) == 0)
                    {
                        format(string, sizeof(string), "Nenhum"); strmid(News[hAdd2], string, 0, strlen(string), 255);
                        format(string1, sizeof(string1), "Nenhum"); strmid(News[hContact2], string1, 0, strlen(string1), 255);
                        News[hTaken2] = 0;
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce apagou a noticia (2) da Agencia dos Assassinos.");
                        return 0;
                    }
                    else if(strcmp(x_tel,"3",true) == 0)
                    {
                        format(string, sizeof(string), "Nenhum"); strmid(News[hAdd3], string, 0, strlen(string), 255);
                        format(string1, sizeof(string1), "Nenhum"); strmid(News[hContact3], string1, 0, strlen(string1), 255);
                        News[hTaken3] = 0;
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce apagou a noticia (3) da Agencia dos Assassinos.");
                        return 0;
                    }
                    else if(strcmp(x_tel,"4",true) == 0)
                    {
                        format(string, sizeof(string), "Nenhum"); strmid(News[hAdd4], string, 0, strlen(string), 255);
                        format(string1, sizeof(string1), "Nenhum"); strmid(News[hContact4], string1, 0, strlen(string1), 255);
                        News[hTaken4] = 0;
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce apagou a noticia (4) da Agencia dos Assassinos.");
                        return 0;
                    }
                    else if(strcmp(x_tel,"5",true) == 0)
                    {
                        format(string, sizeof(string), "Nenhum"); strmid(News[hAdd5], string, 0, strlen(string), 255);
                        format(string1, sizeof(string1), "Nenhum"); strmid(News[hContact5], string1, 0, strlen(string1), 255);
                        News[hTaken5] = 0;
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce apagou a noticia (5) da Agencia dos Assassinos.");
                        return 0;
                    }
                    else if(strcmp(x_tel,"tudo",true) == 0)
                    {
                        format(string, sizeof(string), "Nenhum"); strmid(News[hAdd1], string, 0, strlen(string), 255);
                        format(string1, sizeof(string1), "Nenhum"); strmid(News[hContact1], string1, 0, strlen(string1), 255);
                        News[hTaken1] = 0;
                        format(string, sizeof(string), "Nenhum"); strmid(News[hAdd2], string, 0, strlen(string), 255);
                        format(string1, sizeof(string1), "Nenhum"); strmid(News[hContact2], string1, 0, strlen(string1), 255);
                        News[hTaken2] = 0;
                        format(string, sizeof(string), "Nenhum"); strmid(News[hAdd3], string, 0, strlen(string), 255);
                        format(string1, sizeof(string1), "Nenhum"); strmid(News[hContact3], string1, 0, strlen(string1), 255);
                        News[hTaken3] = 0;
                        format(string, sizeof(string), "Nenhum"); strmid(News[hAdd4], string, 0, strlen(string), 255);
                        format(string1, sizeof(string1), "Nenhum"); strmid(News[hContact4], string1, 0, strlen(string1), 255);
                        News[hTaken4] = 0;
                        format(string, sizeof(string), "Nenhum"); strmid(News[hAdd5], string, 0, strlen(string), 255);
                        format(string1, sizeof(string1), "Nenhum"); strmid(News[hContact5], string1, 0, strlen(string1), 255);
                        News[hTaken5] = 0;
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce apagou todas as mensagens da agencia dos Assassinos.");
                        return 0;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "USE: noticias apagar [Numero] ou noticias apagar tudo.");
                        return 0;
                    }
                }
                else { return 0; }
        }
        else if ((strcmp("darcont", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("darcont")))
        {
            if(PlayerInfo[playerid][pCargo] < 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 2+ para dar contrato!");
                return 0;
            }
            if(hitfound == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Nao há contratos, USE contratos em seu laptop primeiro!");
                return 0;
            }
            tmp = strtok(text, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: darcont [ID/Nome]");
                return 0;
            }
            //giveplayerid = strval(tmp);
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(PlayerInfo[giveplayerid][pMembro] != 8 && PlayerInfo[giveplayerid][pLider] != 8 && PlayerInfo[giveplayerid][pMembro] != 24 && PlayerInfo[giveplayerid][pLider] != 24)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Esse jogador nao e um assasino!");
                        return 0;
                    }
                    if(GoChase[giveplayerid] < 999)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Esse assasino ja possui um contrato!");
                        return 0;
                    }
                    if(IsPlayerConnected(hitidd))
                    {
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        GetPlayerName(giveplayerid, giver, sizeof(giver));
                        GetPlayerName(hitidd, giveplayer, sizeof(giveplayer));
                        format(string, sizeof(string), "*[%s] Assasino %s, deu um contrato para %s matar: %s(ID:%d), por $%d.",NomeORG(playerid), sendername, giver, giveplayer, hitidd, PlayerInfo[hitidd][pHeadValue]);
                        SendFamilyMessage(8, COLOR_YELLOW, string);
                        SendFamilyMessage(24, COLOR_YELLOW, string);
                        GoChase[giveplayerid] = hitidd;
                        GetChased[hitidd] = giveplayerid;
                        GotHit[hitidd] = 1;
                        hitidd = 0;
                        hitfound = 0;
                        return 0;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O contrato saiu do servidor, USE contratos no seu laptop novamente!");
                        return 0;
                    }
                }
                return 0;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Esse nao e um assasino ativo!");
                return 0;
            }
        }
        else if ((strcmp("membros", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("membros")))
        {
            SendClientMessage(playerid, COLOR_WHITE, "|__________________ Membros da Agencia __________________|");
            for(new i=0; i < MaiorID; i++)
            {
                if(IsPlayerConnected(i))
                {
                    if(GetPlayerOrg(playerid) == 8 || GetPlayerOrg(playerid) == 24)
                    {
                        GetPlayerName(i, giveplayer, sizeof(giveplayer));
                        format(string, sizeof(string), "* %s: Cargo %d", giveplayer,PlayerInfo[i][pCargo]);
                        SendClientMessage(playerid, COLOR_GREY, string);
                    }
                }
            }
        }
        else if ((strcmp("pedido", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("pedido")))
        {
            if(OrderReady[playerid] > 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você pediu um pacote, e ele será entregue no meio da sua HQ!");
                return 0;
            }
            tmp = strtok(text, idx);
            if( temphitman[ playerid ] > gettime() ){
                SendClientMessage( playerid, COLOR_GRAD2, "Você comprou um pacote recentemente, aguarde para poder comprar novamente." );
                return false;
            }
            if ((strcmp("1", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("1")))
            {
                if(PlayerInfo[playerid][pCargo] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem cargo suficiente para pegar esse pacote!"); return 0; }
                if(GetPlayerMoneyEx(playerid) > 1)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você pediu o pacote 1, e ele será entregue na porta da HQ.");
                    OrderReady[playerid] = 1;
                    temphitman[ playerid ] = gettime() + 600;
                    return 0;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY,"   Você não possui essa grana!");
                    return 0;
                }
            }
            else if ((strcmp("2", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("2")))
            {
                if(PlayerInfo[playerid][pCargo] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem cargo suficiente para pegar esse pacote!"); return 0; }
                if(GetPlayerMoneyEx(playerid) > 1)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você pediu o pacote 2, e ele será entregue na porta da HQ.");
                    OrderReady[playerid] = 2;
                    temphitman[ playerid ] = gettime() + 600;
                    return 0;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY,"   Você não possui essa grana!");
                    return 0;
                }
            }
            else if ((strcmp("3", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("3")))
            {
                if(PlayerInfo[playerid][pCargo] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem cargo suficiente para pegar esse pacote!"); return 0; }
                if(GetPlayerMoneyEx(playerid) > 1)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você pediu o pacote 3, e ele será entregue na porta da HQ.");
                    OrderReady[playerid] = 3;
                    temphitman[ playerid ] = gettime() + 600;
                    return 0;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY,"   Você não possui essa grana!");
                    return 0;
                }
            }
            else if ((strcmp("4", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("4")))
            {
                if(PlayerInfo[playerid][pCargo] < 2) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem cargo suficiente para pegar esse pacote!"); return 0; }
                if(GetPlayerMoneyEx(playerid) > 1)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você pediu o pacote 4, e ele será entregue na porta da HQ.");
                    OrderReady[playerid] = 4;
                    temphitman[ playerid ] = gettime() + 600;
                    return 0;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY,"   Você não possui essa grana!");
                    return 0;
                }
            }
            else if ((strcmp("5", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("5")))
            {
                if(PlayerInfo[playerid][pCargo] < 2) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem cargo suficiente para pegar esse pacote!"); return 0; }
                if(GetPlayerMoneyEx(playerid) > 1)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você pediu o pacote 5, e ele será entregue na porta da HQ.");
                    OrderReady[playerid] = 5;
                    temphitman[ playerid ] = gettime() + 600;
                    return 0;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY,"   Você não possui essa grana!");
                    return 0;
                }
            }
            else if ((strcmp("6", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("6")))
            {
                if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem cargo suficiente para pegar esse pacote!"); return 0; }
                if(GetPlayerMoneyEx(playerid) > 1)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você pediu o pacote 6, e ele será entregue na porta da HQ.");
                    OrderReady[playerid] = 6;
                    temphitman[ playerid ] = gettime() + 600;
                    return 0;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY,"   Você não possui essa grana!");
                    return 0;
                }
            }
            else if ((strcmp("7", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("7")))
            {
                if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem cargo suficiente para pegar esse pacote!"); return 0; }
                if(GetPlayerMoneyEx(playerid) > 1)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você pediu o pacote 7, e ele será entregue na porta da HQ.");
                    OrderReady[playerid] = 7;
                    temphitman[ playerid ] = gettime() + 600;
                    return 0;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY,"   Você não possui essa grana!");
                    return 0;
                }
            }
            else if ((strcmp("8", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("8")))
            {
                if(VenceuCont == GetPlayerOrg(playerid))
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Sua Org ganhou Bônus por Contratos, Um Pedido Especial será entregue na porta da HQ.");
                    OrderReady[playerid] = 8;
                    temphitman[ playerid ] = gettime() + 600;
                    return 0;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY,"   Sua Org não Ganhou Bônus por contratos Concluidos!");
                    return 0;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_WHITE, "|__________________ Pedidos Disponiveis __________________|");
                if(PlayerInfo[playerid][pCargo] >= 1) { SendClientMessage(playerid, COLOR_GREY, "|(1) Cargo 1 - 6: Knife, Eagle, MP5, Shotgun"); }
                if(PlayerInfo[playerid][pCargo] >= 2) { SendClientMessage(playerid, COLOR_GREY, "|(2) Cargo 2 - 6: Knife, Eagle, M4, MP5, Shotgun"); }
                if(PlayerInfo[playerid][pCargo] >= 2) { SendClientMessage(playerid, COLOR_GREY, "|(3) Cargo 2 - 6: Knife, Eagle, AK47, MP5, Shotgun"); }
                if(PlayerInfo[playerid][pCargo] >= 3) { SendClientMessage(playerid, COLOR_GREY, "|(4) Cargo 3 - 6: Knife, Eagle, M4, MP5, Shotgun, Sniper"); }
                if(PlayerInfo[playerid][pCargo] >= 3) { SendClientMessage(playerid, COLOR_GREY, "|(5) Cargo 3 - 6: Knife, Eagle, AK47, MP5, Shotgun, Sniper"); }
                if(PlayerInfo[playerid][pCargo] >= 4) { SendClientMessage(playerid, COLOR_GREY, "|(6) Cargo 4 - 6: Knife, Eagle, M4, MP5, Shotgun, Sniper"); }
                if(PlayerInfo[playerid][pCargo] >= 4) { SendClientMessage(playerid, COLOR_GREY, "|(7) Cargo 4 - 6: Knife, Eagle, AK47, MP5, Shotgun, Sniper"); }
                return 0;
            }
        }
        else if ((strcmp("sair", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("sair")))
        {
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você desligou seu laptop e se desconectou de sua agencia.");
            ConnectedToPC[playerid] = 0;
            return 0;
        }
        else
        {
                SendClientMessage(playerid, COLOR_WHITE, "|___ Agencia dos Assassinos ___|");
                SendClientMessage(playerid, COLOR_YELLOW2, "|");
                SendClientMessage(playerid, COLOR_YELLOW2, "| - Noticias");
                SendClientMessage(playerid, COLOR_YELLOW2, "| - Contratos");
                SendClientMessage(playerid, COLOR_YELLOW2, "| - DarCont");
                SendClientMessage(playerid, COLOR_YELLOW2, "| - Pedido");
                SendClientMessage(playerid, COLOR_YELLOW2, "| - Membros");
                SendClientMessage(playerid, COLOR_YELLOW2, "| - Sair");
                SendClientMessage(playerid, COLOR_WHITE, "|______________|00:00|");
                return 0;
        }
        return 0;
    }
    if(TalkingLive[playerid] != 9999)
    {
        GetPlayerName(playerid, sendername, sizeof(sendername));
        if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
        {
            format(string, sizeof(string), "%s{9ACD32} AoVivo %s: %s", NomeORG(playerid), sendername, text);
            OOCNews(GetPlayerColor(playerid), string);
            SetPlayerChatBubble(playerid, text, CORS, 20.0, 10000);
        }
        else
        {
            format(string, sizeof(string), "%s{9ACD32} AoVivo %s: %s", NomeORG(playerid), sendername, text);
            OOCNews(GetPlayerColor(playerid), string);
            SetPlayerChatBubble(playerid, text, CORS, 20.0, 10000);
        }
        return 0;
    }
    if(Mobile[playerid] != 9999)
    {
        new idx;
        tmp = strtok(text, idx);
        GetPlayerName(playerid, sendername, sizeof(sendername));
        format(string, sizeof(string), "%s diz (Celular): %s", sendername, text);
        SetPlayerChatBubble(playerid, string, 0xBBFFFFAA, 20.0, 10000);
        ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
        if(Mobile[playerid] == 191)
        {
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, TEAM_CYAN_COLOR, "Denuncia: Desculpe, Nao Entendi");
                return 0;
            }
            new turner[MAX_PLAYER_NAME];
            new wanted[128];
            GetPlayerName(playerid, turner, sizeof(turner));
            SendClientMessage(playerid, TEAM_CYAN_COLOR, "Denuncia: Temos alertado todas as unidades na área.");
            SendClientMessage(playerid, TEAM_CYAN_COLOR, "Obrigado por Relatar o Ocorrido");
            format(wanted, sizeof(wanted), "Denuncia: Todas Unidades IA: Chamador: %s",turner);
            SendFamilyMessage(1, TEAM_CYAN_COLOR, wanted);
            format(wanted, sizeof(wanted), "Denuncia: %s",text);
            SendFamilyMessage(1, TEAM_CYAN_COLOR, wanted);
            SendClientMessage(playerid, COLOR_GRAD2, "   Ninguem na linha...");
            Mobile[playerid] = 9999;
            return 0;
        }
        if(Mobile[playerid] == 191)
        {
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGÊNCIA: Desculpe eu não entendo");
                return 0;
            }
            if ((strcmp("nao", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("nao")))
            {
                new turner[MAX_PLAYER_NAME];
                new wanted[128];
                GetPlayerName(playerid, turner, sizeof(turner));
                SendClientMessage(playerid, COLOR_DBLUE, "COP: Alertamos todos as unidades perto do local.");
                SendClientMessage(playerid, COLOR_DBLUE, "Obrigado por ter relatado o Ocorrido");
                format(wanted, sizeof(wanted), "HQ: Todas as unidades: Denunciante: %s",turner);
                SendFamilyMessage(1, COLOR_DBLUE, wanted);
                format(wanted, sizeof(wanted), "HQ: Crime: %s, Suspeito: Desconhecido",PlayerCrime[playerid][pAccusing]);
                SendFamilyMessage(1, COLOR_DBLUE, wanted);
                SendClientMessage(playerid, COLOR_GRAD2, "   Ninguém na linha.....");
                Mobile[playerid] = 9999;
                return 0;
            }
            new badguy;
            badguy = ReturnUser(tmp);
            if (IsPlayerConnected(badguy))
            {
                if(badguy != INVALID_PLAYER_ID)
                {
                    if (gTeam[badguy] == 2 || gTeam[badguy] == 1)
                    {
                        SendClientMessage(playerid, COLOR_DBLUE, "Polícia HQ: Você terá que entrar em contato com os assuntos internos. Esta é uma linha de emergência");
                        SendClientMessage(playerid, COLOR_GRAD2, "   Ninghem na linha...");
                        Mobile[playerid] = 9999;
                        return 0;
                    }
                    if (WantedPoints[badguy] > 0)
                    {
                        SendClientMessage(playerid, COLOR_DBLUE, "Polícia HQ: Unidades já estão atribuídos a esse caso.");
                        SendClientMessage(playerid, COLOR_DBLUE, "Obrigado por denunciar este crime");
                        SendClientMessage(playerid, COLOR_GRAD2, "   Ninguémm na linha...");
                        Mobile[playerid] = 9999;
                        return 0;
                    }
                    if (badguy == playerid)
                    {
                        SendClientMessage(playerid, COLOR_DBLUE, "Polícia HQ: Esta linha e de emergencia.");
                        SendClientMessage(playerid, COLOR_GRAD2, "   Ninguémm na linha...");
                        Mobile[playerid] = 9999;
                        return 0;
                    }
                    SendClientMessage(playerid, COLOR_DBLUE, "Polícia HQ: Temos alertado todas as unidades na área.");
                    SendClientMessage(playerid, COLOR_DBLUE, "Obrigado por denunciar este crime");
                    SetPlayerCriminal(badguy,playerid, PlayerCrime[playerid][pAccusing]);
                    if(WantedPoints[badguy] > 0) { } else
                    {
                        WantedPoints[badguy] += 1;
                        SetPlayerWantedLevel(badguy, WantedPoints[badguy]);
                        //ProcuradoPlayer(badguy);
                    }
                    SendClientMessage(playerid, COLOR_GRAD2, "   Ninguémm na linha...");
                    Mobile[playerid] = 9999;
                    return 0;
                }
                return 0;
            }
            else
            {
                format(string, sizeof(string), "Police HQ: Nenhuma informação sobre %s, o nome citado esta correto?",tmp);
                SendClientMessage(playerid, COLOR_DBLUE, string);
                return 0;
            }
        }
        if(Mobile[playerid] == 912)
        {
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA: Desculpe, nao entendi.");
                return 0;
            }
            strmid(PlayerCrime[playerid][pAccusing], text, 0, strlen(text), 255);
            SendClientMessage(playerid, COLOR_DBLUE, "Polícia HQ: Se você souber o nome do assaltante ou de parte dele, me fale, ou simplesmente dizer não");
            Mobile[playerid] = 913;
            return 0;
        }
        if(Mobile[playerid] == 190)
        {
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA: Desculpe não entendo... Policia ou SAMU?");
                return 0;
            }
            else if ((strcmp("policia", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("policia")))
            {
                SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA: Você optou por Policia, Espere.");
                Mobile[playerid] = 912;
                SendClientMessage(playerid, COLOR_DBLUE, "Polícia HQ: Por favor me dê uma breve descrição do crime.");
                return 0;
            }
            else if ((strcmp("SAMU", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("SAMU")))
            {
                SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA: Você optou por SAMU, Espere.");
                Mobile[playerid] = 914;
                SendClientMessage(playerid, TEAM_CYAN_COLOR, "Denuncia: Por favor me dê uma breve descrição do Incidente.");
                return 0;
            }
            else
            {
                SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA: Desculpe não entendo... Policia ou SAMU?");
                return 0;
            }
        }
        if(IsPlayerConnected(Mobile[playerid]))
        {
            if(Mobile[Mobile[playerid]] == playerid)
            {
                SendClientMessage(Mobile[playerid], COLOR_YELLOW,string);
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_YELLOW,"Ninguém lá");
        }
        return 0;
    }
    if (realchat)
    {
        if(gPlayerLogged[playerid] == 0)
        {
            return 0;
        }
        if(PlayerInfo[playerid][pMaskuse] == 1)
        {
            format(string, sizeof(string), "Mascarado diz: %s", text);
            ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
            SetPlayerChatBubble(playerid, text, 0xBBFFFFAA, 20.0, 10000);
        }
        else
        {
            if( PlayerInfo[ playerid ][ pAdmin ] > 0 ){//texto admin
                format(string, sizeof(string), "%s diz: %s", PlayerName(playerid), text);
                ProxDetector(20.0, playerid, string,0xffa1ddFF,0xfeb8e5FF,0xfcc9e9FF,0xfbd6edFF,0xffe3f5FF);
                SetPlayerChatBubble(playerid, text, 0xffa1ddAA, 20.0, 10000);// mudar tbm
            }
            else{
                format(string, sizeof(string), "%s diz: %s", PlayerName(playerid), text);
                ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
                SetPlayerChatBubble(playerid, text, 0xA3FFE5AA, 20.0, 10000);
            }
        }
        return 0;
    }
    return 1;
}

public SetCamBack(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new Float:plocx,Float:plocy,Float:plocz;
        GetPlayerPos(playerid, plocx, plocy, plocz);
        SetPlayerPos(playerid, -1863.15, -21.6598, 1060.15); // Warp the player
        SetPlayerInterior(playerid,14);
    }
}
public Fixhour(hora)
{
    hora = timeshift+hora;
    if (hora < 0)
    {
        hora = hora+24;
    }
    else if (hora > 23)
    {
        hora = hora-24;
    }
    shifthour = hora;
    return 1;
}
public IsAHellCar(carid)
{
    for(new i=0;i<sizeof(HellsCar);i++)
    {
        if(carid == HellsCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG H.A.");
            return 1;
        }
    }
    return 0;
}
public IsAStrikerSCar(carid)
{
    for(new i=0;i<sizeof(StrikerSCar);i++)
    {
        if(carid == StrikerSCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG Justiceiros");
            return 1;
        }
    }
    return 0;
}
forward IsAAlugCar(carid);
public IsAAlugCar(carid)
{
    for(new i=0;i<sizeof(CarAlug);i++)
    {
        if(carid == CarAlug[i])
        {
            SetVehicleNumberPlate(carid, "BPG Alug");
            return 1;
        }
    }
    return 0;
}
/*forward IsAVipCar(carid);
public IsAVipCar(carid)
{
    for(new i=0;i<sizeof(VipCar);i++)
    {
        if(carid == VipCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG Alug");
            return 1;
        }
    }
    return 0;
}*/
forward IsAAlugHeli(carid);
public IsAAlugHeli(carid)
{
    for(new i=0;i<sizeof(AlugarHeli);i++)
    {
        if(carid == AlugarHeli[i])
        {
            return 1;
        }
    }
    return 0;
}
public IsASonsCar(carid)
{
    for(new i=0;i<sizeof(SonsCar);i++)
    {
        if(carid == SonsCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG SOA");
            return 1;
        }
    }
    return 0;
}
public IsADriftCar(carid)
{
    for(new i=0;i<sizeof(DriftersCar);i++)
    {
        if(carid == DriftersCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG Drifters");
            return 1;
        }
    }
    return 0;
}
public IsAHam(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==6 || member==6)
        {
            return 1;
        }
        else if(lider==6 || lider==6)
        {
            return 1;
        }
    }
    return 0;
}
public IsAGICar(carid)
{
    for(new i=0;i<sizeof(GICar);i++)
    {
        if(carid == GICar[i])
        {
            SetVehicleNumberPlate(carid, "BPG GI");
            return 1;
        }
    }
    return 0;
}
public IsAYa(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==13|| member==13)
        {
            return 1;
        }
        else if(lider==13 || lider==13)
        {
            return 1;
        }
    }
    return 0;
}
public IsATriad(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==24|| member==24)
        {
            return 1;
        }
        else if(lider==24 || lider==24)
        {
            return 1;
        }
    }
    return 0;
}
public IsAYaCar(carid)
{
    for(new i=0;i<sizeof(YakuzaCar);i++)
    {
        if(carid == YakuzaCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG JP");
            return 1;
        }
    }
    return 0;
}

public IsAMLH(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==12 || member==12)
        {
            return 1;
        }
        else if(lider==12 || lider==12)
        {
            return 1;
        }
    }
    return 0;
}
public IsAGOV(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==7 || lider==7)
        {
            return 1;
        }
    }
    return 0;
}
public IsAGOVCar(carid)//Carros Governo
{
    for(new i=0;i<sizeof(GovCar);i++)
    {
        if(carid == GovCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG Gov");
            return 1;
        }
    }
    return 0;
}
public IsAMLHCar(carid)//Máfia Russa Carros
{
    for(new i=0;i<sizeof(CarCosa);i++)
    {
        if(carid == CarCosa[i])
        {
            SetVehicleNumberPlate(carid, "BPG MF");
            return 1;
        }
    }
    return 0;
}

public IsAAl(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==15 || member==15)
        {
            return 1;
        }
        else if(lider==15 || lider==15)
        {
            return 1;
        }
    }
    return 0;
}
public IsAAlCar(carid)
{
    for(new i=0;i<sizeof(AlCar);i++)
    {
        if(carid == AlCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG Alq");
            return 1;
        }
    }
    return 0;
}
public IsAOni(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new emprego = PlayerInfo[playerid][pEmprego];
        if(emprego==9)
        {
            return 1;
        }
    }
    return 0;
}
public IsAOniCar(carid)
{
    for(new i=0;i<sizeof(BusCar);i++)
    {
        if(carid == BusCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG Bus");
            return 1;
        }
    }
    return 0;
}
public IsAJornal(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==9 || member==9)
        {
            return 1;
        }
        else if(lider==9 || lider==9)
        {
            return 1;
        }
    }
    return 0;
}
public IsAJornalCar(carid)
{
    for(new i=0;i<sizeof(NewsCar);i++)
    {
        if(carid == NewsCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG News");
            return 1;
        }
    }
    return 0;
}
public IsAGroove(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==14 || member==14)
        {
            return 1;
        }
        else if(lider==14 || lider==14)
        {
            return 1;
        }
    }
    return 0;
}
public IsAStrikerS(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==31 || member==31)
        {
            return 1;
        }
        else if(lider==31 || lider==31)
        {
            return 1;
        }
    }
    return 0;
}
public IsAGrooveCar(carid)
{
    for(new i=0;i<sizeof(GrooveCar);i++)
    {
        if(carid == GrooveCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG Groove");
            return 1;
        }
    }
    return 0;
}
public IsATaxi(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==10 || member==10)
        {
            return 1;
        }
        else if(lider==10 || lider==10)
        {
            return 1;
        }
    }
    return 0;
}
public IsAFD(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==36 || member==36)
        {
            return 1;
        }
        else if(lider==36 || lider==36)
        {
            return 1;
        }
    }
    return 0;
}
public IsAPsyco(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==30 || member==30)
        {
            return 1;
        }
        else if(lider==30 || lider==30)
        {
            return 1;
        }
    }
    return 0;
}
forward IsAPsykO(playerid);
public IsAPsykO(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==35 || member==35)
        {
            return 1;
        }
        else if(lider==35 || lider==35)
        {
            return 1;
        }
    }
    return 0;
}
public IsATaxiCar(carid)
{
    for(new i=0;i<sizeof(TaxiCar);i++)
    {
        if(carid == TaxiCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG Taxi");
            return 1;
        }
    }
    return 0;
}
public IsAFDCar(carid)
{
    for(new i=0;i<sizeof(FDCar);i++)
    {
        if(carid == FDCar[i])
        {
            SetVehicleNumberPlate(carid, "Storm");
            return 1;
        }
    }
    return 0;
}
public IsAAdmin(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new admin = PlayerInfo[playerid][pAdmin];
        if(admin>=1 || admin>=1)
        {
      return 1;
        }
    }
    return 0;
}
public IsAHelper(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new helper = PlayerInfo[playerid][pHelper];
        if(helper>=1 || helper>=1)
        {
      return 1;
        }
    }
    return 0;
}
public IsAHelperCar(carid)
{
    for(new i=0;i<sizeof(HelperCar);i++)
    {
        if(carid == HelperCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG Helper");
            return 1;
        }
    }
    return 0;
}
public IsAAdminCar(carid)
{
    for(new i=0;i<sizeof(AdminCar);i++)
    {
        if(carid == AdminCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG Admin");
            return 1;
        }
    }
    return 0;
}
public IsAVagos(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==18 || member==18)
        {
            return 1;
        }
        else if(lider==18 || lider==18)
        {
            return 1;
        }
    }
    return 0;
}
public IsAVagosCar(carid)
{
    for(new i=0;i<sizeof(VagosCar);i++)
    {
        if(carid == VagosCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG Vagos");
            return 1;
        }
    }
    return 0;
}
public IsABallas(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==17 || member==17)
        {
            return 1;
        }
        else if(lider==17 || lider==17)
        {
            return 1;
        }
    }
    return 0;
}
public IsAFakers(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==29 || member==29)
        {
            return 1;
        }
        else if(lider==29 || lider==29)
        {
            return 1;
        }
    }
    return 0;
}
public IsAReggae(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==34 || member==34)
        {
            return 1;
        }
        else if(lider==34 || lider==34)
        {
            return 1;
        }
    }
    return 0;
}
public IsABallasCar(carid)
{
    for(new i=0;i<sizeof(BallasCarros);i++)
    {
        if(carid == BallasCarros[i])
        {
            SetVehicleNumberPlate(carid, "BPG BALLAS");
            return 1;
        }
    }
    return 0;
}
public IsAReggaeCar(carid)
{
    for(new i=0;i<sizeof(ReggaeCar);i++)
    {
        if(carid == ReggaeCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG Dark Gods");
            return 1;
        }
    }
    return 0;
}
public IsAAzteca(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==5 || member==5)
        {
            return 1;
        }
        else if(lider==5 || lider==5)
        {
            return 1;
        }
    }
    return 0;
}
public IsAAztecaCar(carid)
{
    for(new i=0;i<sizeof(AztecasCar);i++)
    {
        if(carid == AztecasCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG Aztecas");
            return 1;
        }
    }
    return 0;
}
public IsAMec(playerid)
{
    if(PlayerInfo[playerid][pEmprego] == 5)
    {
        return 1;
    }
    return 0;
}
public IsAMecCar(carid)
{
    for(new i=0;i<sizeof(MecCar);i++)
    {
        if(carid == MecCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG Mec");
            return 1;
        }
    }
    return 0;
}
public IsAROTAs(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==2 || member==2)
        {
            return 1;
        }
        else if(lider==2 || lider==2)
        {
            return 1;
        }
    }
    return 0;
}
public IsAEx(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==3 || member==3)
        {
            return 1;
        }
        else if(lider==3 || lider==3)
        {
            return 1;
        }
    }
    return 0;
}
public IsAHit(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==8 || member==8)
        {
            return 1;
        }
        else if(lider==8 || lider==8)
        {
            return 1;
        }
    }
    return 0;
}
public IsADrifters(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new lider = PlayerInfo[playerid][pLider];
        new member = PlayerInfo[playerid][pMembro];
        if(member==25 || member==25)
        {
            return 1;
        }
        else if(lider==25 || lider==25)
        {
            return 1;
        }
    }
    return 0;
}
public IsAHitCar(carid)
{
    for(new i=0;i<sizeof(CarrosHit);i++)
    {
        if(carid == CarrosHit[i])
        {
            SetVehicleNumberPlate(carid, "BPG Hit");
            return 1;
        }
    }
    return 0;
}
public IsATriadCar(carid)
{
    for(new i=0;i<sizeof(TriadsCar);i++)
    {
        if(carid == TriadsCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG Triads");
            return 1;
        }
    }
    return 0;
}
public IsACivilCar(carid)
{
    for(new i=0;i<sizeof(CivilCar);i++)
    {
        if(carid == CivilCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG Civil");
            return 1;
        }
    }
    return 0;
}
public IsAVIP(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new vip = PlayerInfo[playerid][pVip];
        if(vip >= 1)
        {
            return 1;
        }
    }
    return 0;
}
/*public IsAVIPCar(carid)
{
    for(new i=0;i<sizeof(VipCar);i++)
    {
        if(carid == VipCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG Vip");
            return 1;
        }
    }
    return 0;
}*/
public GaragemDpClosed2()
{
    MoveDynamicObject(PDDOORb,250.774871 , 60.822799 , 1003.640625, 2);//GaragemClosed
    return 1;
}
public gasolina(playerid)
{
    new string[80];
    new vehicle = GetPlayerVehicleID(playerid);
    new Nick[MAX_PLAYER_NAME];
    GetPlayerName(playerid, Nick, sizeof(Nick));
    new wanted = WantedPoints[playerid];
    SendClientMessage(playerid, COLOR_YELLOW2, "-=Computador De Bordo=-");
    format(string, sizeof(string), "  Motorista: %s", Nick);
    SendClientMessage(playerid, COLOR_WHITE, string);
    format(string, sizeof(string), "  Veiculo: %s", NomeCarro[vehicle]);
    SendClientMessage(playerid, COLOR_WHITE, string);
    format(string, sizeof(string), "  Combustivel: %d", Gas[vehicle]);
    SendClientMessage(playerid, COLOR_WHITE, string);
    format(string, sizeof(string), "  Nivel De Procura: %d", wanted);
    SendClientMessage(playerid, COLOR_WHITE, string);
    format(string, sizeof(string), "  Horas: %d", hour);
    SendClientMessage(playerid, COLOR_WHITE, string);
    Gas[vehicle]--;
    return 1;
}
public GaragemDpClosed()
{
    MoveDynamicObject(PDDOORa,247.005905 , 72.448440 , 1003.640625, 2);//GaragemClosed
    return 1;
}
public pcclosed()
{
    MoveDynamicObject(PDDOORb,248.142105 , 78.125961 , 1003.640625, 2);//CelaClosed
    return 1;
}
public pd1()
{
    MoveDynamicObject(PDDOORc,248.142105 , 78.125961 , 1003.640625, 2);//GaragemClosed
    return 1;
}
forward CopBroadCast(COLOR,const string[]);
public CopBroadCast(COLOR,const string[])
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(IsPlayerConnected(i))
        {
            if (IsACop(i))
            {
                SendClientMessage(i, COLOR, string);
            }
        }
    }
 return 1;
}
forward FecharOnibus();
public FecharOnibus()
{
    MoveDynamicObject(PortaoOnibus,2424.3000488281, -2089.6000976563, 14.60000038147, 2);//GaragemClosed
    return 1;
}
forward PortaoTwOPaCk1F();
public PortaoTwOPaCk1F()
{
    MoveDynamicObject(PortaoTwOPaCk1,2092.5000000,-1579.3000000,15.8000000, 2, 0.0000000,0.0000000,0.0000000);//GaragemClosed
    return 1;
}
forward PortaoFakers1F();
public PortaoFakers1F()
{
    MoveDynamicObject(PortaoFakers1,2877.00000000,-1961.80004883,12.89999962, 2);//GaragemClosed
    return 1;
}
forward PortaoTwOPaCk2F();
public PortaoTwOPaCk2F()
{
    MoveDynamicObject(PortaoTwOPaCk2,851.70001221,-2186.10009766,15.00000000, 2);//GaragemClosed
    return 1;
}

/*forward PortaoFakers1F();
public PortaoFakers1F()
{
    MoveDynamicObject(PortaoFakers1,1368.1999512,-2825.6000977,15.1999998, 2);//GaragemClosed
    return 1;
}
forward PortaoFakers2F();
public PortaoFakers2F()
{
    MoveDynamicObject(PortaoFakers2,1400.5000000,-2719.8000488,15.1999998, 2);//GaragemClosed
    return 1;
}*/
forward PortaoFaTaL_ImperiuM1F();
public PortaoFaTaL_ImperiuM1F()
{
    MoveDynamicObject(PortaoFaTaL_ImperiuM1,79.0996100,-1677.6992200,12.5000000, 2);//GaragemClosed
    return 1;
}
/*forward PortaoFaTaL_ImperiuM2F();
public PortaoFaTaL_ImperiuM2F()
{
    MoveDynamicObject(PortaoFaTaL_ImperiuM2,-28.8994100,-1717.0000000,12.5000000, 2);//GaragemClosed
    return 1;
} */
public pd2()
{
    MoveDynamicObject(PDGATE,1549.5300292969, -1625.1999511719, 13.420000076294, 2);//GaragemClosed
    MoveDynamicObject(PDGATE2,1549.5300292969, -1630.6999511719, 13.420000076294, 2);//GaragemClosed
    return 1;
}
public pint2()
{
    MoveDynamicObject(PINT,1409.10132,420.92920,21.58000, 2);//GaragemClosed
    return 1;
}
public pd3()
{
    MoveDynamicObject(PDGARAGE,1588.195,-1637.969,15.193, 2);//GaragemClosed
    return 1;
}
public pd4()
{
    MoveDynamicObject(PDELEVATOR,1549.049804 , -1697.787109 , 12.5514954, 2);//GaragemClosed
    return 1;
}
public PFIIClosed2()
{
    MoveDynamicObject(gatepf2,2334.757568, 2443.675537, 8.250650, 2);//GateClosed
    return 1;
}
public PFIIClosed3()
{
    MoveDynamicObject(gatepf3,2293.928467, 2499.322021, 5.825822, 2);//GateClosed
    return 1;
}
/*public PortaoTriads()
{
    MoveDynamicObject(portaotriads,-379.4000, -1409.4000, 27.5000, 2);//GateClosed
    return 1;
}*/

forward PortaoCarros();
public PortaoCarros()
{
    MoveDynamicObject(PortaoPRFCarros,917.4000200,-1198.8000500,19.6000000, 2);//GateClosed
    return 1;
}
public PDEx2()
{
    MoveDynamicObject(PDEx,-1531.3978271484, 482.25979614258, 8.9530792236328, 2);//GateClosed
    return 1;
}
forward PYiakin0();
public PYiakin0(){
    MoveDynamicObject( PYiakin[ 0 ],1385.7900400,-1646.5699500,12.7000000, 2 );
}
forward PYiakin1();
public PYiakin1(){
    MoveDynamicObject( PYiakin[ 1 ],1366.5999800,-1610.3000500,12.7000000, 2 );
}
forward PYiakin2();
public PYiakin2(){
    MoveDynamicObject( PYiakin[ 2 ],1368.5996100,-1699.0000000,11.6000000, 2 );
}
public gt3gate2()
{
    MoveDynamicObject(gt3gate,283.095062, -1542.899170, 25.510294, 2);//GateClosed
    return 1;
}
public gt3gate4()
{
    MoveDynamicObject(gt3gate3,321.832672, -1488.615112, 25.527353, 2);//GateClosed
    return 1;
}
public PortaoGov2()
{
    MoveDynamicObject(PortaoGov,1539.2235107422, -1838.2176513672, 15.320266723633, 2);//Portao Gov Closed
    return 1;
}
public PortaoPre2()
{
    MoveDynamicObject(PortaoPre,369.15893554688, 162.35037231445, 1028.6030273438, 2);//Portao Prefeitura Closed
    return 1;
}
public PortaoReporter2() {
    MoveDynamicObject(PortaoReporter,777.80017089844, -1330.2664794922, 14.200000762939, 2);//Portao Reporter Closed
    return 1;
}
public PortaoReporterr2() {
    MoveDynamicObject(PortaoReporterr,777.97308349609, -1384.7303466797, 14.299999237061, 2);//Portao Reporter 2 Closed
    return 1;
}
public PortaoRally2() {
    MoveDynamicObject(PortaoRally,-2368.4670410156, -2192.6381835938, 36.037666320801, 2);//Portao Rally Closed
    return 1;
}
public PortaoTaxi2() {
    MoveDynamicObject(PortaoTaxi,958.840,-1415.794,15.151, 2);//Portao Taxi Closed
    return 1;
}
public PoliciaFederalClosed()
{
    MoveDynamicObject( pfdoor, -2433.97338867,496.39559937,31.70938301,3);
    MoveDynamicObject( pfdoor2, -2424.72973633,500.50247192,30.89804077,3);
    return 1;
}
public PortaoFD2() {
    MoveDynamicObject(PortaoFD,-75.8000000,-353.2999900,3.2000000, 2);//Portao Storm Closed
    return 1;
}
public PortaoJn2() {
    MoveDynamicObject(PortaoJn,708.7999900,-1416.0000000,16.1000000, 2);//Portao Taxi Closed
    MoveDynamicObject(PortaoJn3,767.5999800,-1415.9000200,16.1000000, 2);//Portao Taxi Closed
    return 1;
}
public PortaoJn5() {
    MoveDynamicObject(PortaoJn4,724.7999900,-1595.3000500,1.5000000, 2);//Portao Taxi Closed
    return 1;
}
public PortaoPf2() {
    MoveDynamicObject(PortaoPf,923.567382,-1227.334716,15.976562, 2);//Portao Taxi Closed
    return 1;
}
/*public PortaoKillers12() {
    MoveDynamicObject(PortaoKillers1,2981.1001,-313.2000,9.6000, 2);//Portao Taxi Closed
    return 1;
}*/
public PortaoKillers22() {
    MoveDynamicObject(PortaoKillers2,2879.5000,-306.1000,9.7000, 2);//Portao Taxi Closed
    return 1;
}
public PortaoStrikerS12() {
    MoveDynamicObject(PortaoStrikerS1,247.0000000,-1965.3000500,3.8000000, 2);//Portao Taxi Closed
    return 1;
}
/*public PortaoStrikerS22() {
    MoveDynamicObject(PortaoStrikerS2,245.8000000,-2142.3000500,3.8000000, 2);//Portao Taxi Closed
    return 1;
}*/
public PortaoPcc2() {
    MoveDynamicObject(PortaoPcc,1338.0000000,-876.3994100,42.0000000, 2);//Portao Taxi Closed
    return 1;
}
public PortaoDS1() {
    MoveDynamicObject(PortaoDS,2441.3999000,-1549.5000000,25.8000000, 2);//Portao Storm Closed
    return 1;
}
public PortaoPF12() {
    MoveDynamicObject(PortaoPF1,927.2998000,-1717.8000500,13.6000000, 2);//Portao Taxi Closed
    return 1;
}
public PortaoPF22() {
    MoveDynamicObject(PortaoPF2,927.2998000,-1723.3000500,13.6000000, 2);//Portao Taxi Closed
    return 1;
}
public PortaoFECHADO99() {
    MoveDynamicObject(PortaoPF4,217.7000000,124.3000000,1009.0399800, 2);//Portao Taxi Closed
    return 1;
}
public PortaoFECHADO98() {
    MoveDynamicObject(PortaoPF5,227.3994100,126.7998000,1004.8499800, 2);//Portao Taxi Closed
    return 1;
}
public PortaoTriads12() {
    MoveDynamicObject(PortaoTriads1,2720.5300300,-2503.8000500,16.1000000, 2);//Portao Taxi Closed
    return 1;
}
public PortaoTriads22() {
    MoveDynamicObject(PortaoTriads2,2720.5293000,-2405.6001000,16.0400000, 2);//Portao Taxi Closed
    return 1;
}
public PortaoBope2() {
    MoveDynamicObject(PortaoBope,939.4500100,-1013.0999800,32.6000000, 2);//Portao Taxi Closed
    return 1;
}
public PortaoDrifters2() {
    MoveDynamicObject(PortaoDrifters,836.2000100,-1899.0799600,14.6000000, 2);//Portao Taxi Closed
    return 1;
}
public PortaoX12() {
    MoveDynamicObject(PortaoX1,-2321.5114746094, -1619.4454345703, 484.98388671875, 2);//Portao X1 Closed
    return 1;
}
public OnPlayerKeyStateChange(playerid,newkeys,oldkeys)
{
    new string[128];
    if( newkeys == 16 && IsPlayerInAnyVehicle( playerid ) ){
        if( Gas[ GetPlayerVehicleID( playerid ) ]  < 1 ){
            RemovePlayerFromVehicle( playerid );
            TogglePlayerControllable( playerid, 1 );
        }
    }
    if( !( newkeys & 128  == 128 ) ){
        if( GetPlayerWeapon( playerid ) == 34 ){
            TextDrawSetString(____[playerid],"_");
            TextDrawHideForPlayer(playerid,____[playerid]);
        }
    }
    if(newkeys & KEY_CROUCH)
        fAutoC[playerid] = 0;
    if( ( newkeys & 128  == 128 ) ){
        if( GetPlayerWeapon( playerid ) == 34 ){
            TextDrawSetString(____[playerid],"_");
            TextDrawShowForPlayer(playerid,____[playerid]);
        }
    }
    if(newkeys == 16 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
    {
            OnPlayerCommandText(playerid,"/entrar");
            OnPlayerCommandText(playerid,"/sair");
            for(new fz = 0; fz < sizeof(FazendaInfo); fz++)
            {
                if (PlayerToPoint(3, playerid,FazendaInfo[fz][ffX], FazendaInfo[fz][ffY], FazendaInfo[fz][ffZ]))
                {

                    if(FazendaInfo[fz][fAtiva] == 1 &&  FazendaInfo[fz][fOwned] == 0)
                    {
                        new location[MAX_ZONE_NAME],strvinnydialog[400];
                        Get2DZone(location, FazendaInfo[fz][ffX], FazendaInfo[fz][ffY], MAX_ZONE_NAME);
                        format(strvinny, sizeof(strvinny), "{80FF80}Tem certeza que Deseja comprar esta Fazenda?");
                        strcat(strvinnydialog, strvinny);
                        format(strvinny, sizeof(strvinny), "{FFFFFF}\n\nFazenda ID: %d\nLocal: %s\nValor: R$ %d\nNivel: %d\nProdutos: %d|%d\nEstimativa de Lucro por Dia: %d",
                        fz,location,FazendaInfo[fz][fValor],FazendaInfo[fz][fLevel],FazendaInfo[fz][fProd],FazendaInfo[fz][fMaxProd],FazendaInfo[fz][fLucro]);
                        strcat(strvinnydialog, strvinny);
                        strcat(strvinnydialog, "\n\n{1E90FF}ATENÇÃO: {FFFFFF}Apenas um Player SUPER VIP poderá adquirir esta Propriedade! \n");
                        strcat(strvinnydialog, "{FFFFFF}Caso queira Comprar esta Fazenda, Clique em 'Comprar', Caso contrário cancele a Operação!\n");
                        ShowPlayerDialog(playerid, DialVinny(34), DIALOG_STYLE_MSGBOX, "{33CCFF}Fazendas - Compra", strvinnydialog, "Comprar", "Cancelar");
                        casaid[playerid] = fz;
                        break;
                    }
                    if(FazendaInfo[fz][fAtiva] == 1 &&  FazendaInfo[fz][fOwned] == 1)
                    {
                        if(CheckFazDono(playerid) != fz) return SendClientMessage(playerid, -1, "ERRO: Apenas o Proprietário desta Fazenda pode Gerenciar!");
                        new location[MAX_ZONE_NAME],strvinnydialog[730];
                        Get2DZone(location, FazendaInfo[fz][ffX], FazendaInfo[fz][ffY], MAX_ZONE_NAME);
                        format(string, sizeof(string), "{80FF80}Olá %s, Bem vindo ao Menu de Gerenciamento de sua Fazenda!",PlayerName(playerid));
                        strcat(strvinnydialog, string);
                        format(strvinny, sizeof(strvinny), "{FFFFFF}\n\nFazenda: %s\nID: %d\nLocal: %s\nValor: R$ %d\nNivel: %d\nCofre: R$ %d\nProdutos: %d|%d\nEstimativa de Lucro por Dia: %d",
                        FazendaInfo[fz][fDescricao],fz,location,FazendaInfo[fz][fValor],FazendaInfo[fz][fLevel],FazendaInfo[fz][fFundos],FazendaInfo[fz][fProd],FazendaInfo[fz][fMaxProd],FazendaInfo[fz][fLucro]);
                        strcat(strvinnydialog, strvinny);
                        strcat(strvinnydialog, "\n\n{1E90FF}ATENÇÃO: {FFFFFF}Para gerenciar, Abra o menu de sua Fazenda clicando em 'Menu'! \n");
                        strcat(strvinnydialog, "{FFFFFF}Para fechar as Informações, aperte em 'Cancelar'!");
                        strcat(strvinnydialog, "\n\n{FF8080}AVISO: {FFFFFF}O lucro diário pode variar de acordo com seu Abastecimento e Venda de Produtos!\n");
                        strcat(strvinnydialog, "{FFFFFF}Deixe sempre sua fazenda Abastecida, e Tente vender o máximo de produtos possivel, para obter um melhor LUCRO!\n");
                        strcat(strvinnydialog, "{FFFFFF}Seja ativo em nosso servidor! O tempo de Atividade também conta nos Lucros de fazendas e empresas!\n");
                        ShowPlayerDialog(playerid, DialVinny(35), DIALOG_STYLE_MSGBOX, "{33CCFF}Fazendas - Gerenciamento", strvinnydialog, "Menu", "Cancelar");
                        casaid[playerid] = fz;
                        break;
                    }
                }
            }
            for(new fz = 0; fz < sizeof(SBizzInfo); fz++)
            {
                if (PlayerToPoint(3, playerid,SBizzInfo[fz][sbEntranceX], SBizzInfo[fz][sbEntranceY], SBizzInfo[fz][sbEntranceZ]))
                {
                    if(SBizzInfo[fz][sbAtiva] == 1 &&  SBizzInfo[fz][sbOwned] == 1)
                    {
                        new alsdja = PlayerInfo[playerid][pPbiskey]-100;
                        if(alsdja != fz) return SendClientMessage(playerid, -1, "ERRO: Apenas o Proprietário desta Empresa pode Gerenciar!");
                        //if(CheckFazDono(playerid) != fz) return SendClientMessage(playerid, -1, "ERRO: Apenas o Proprietário desta Fazenda pode Gerenciar!");
                        new location[MAX_ZONE_NAME],strvinnydialog[700];
                        Get2DZone(location, SBizzInfo[fz][sbEntranceX], SBizzInfo[fz][sbEntranceY], MAX_ZONE_NAME);
                        format(string, sizeof(string), "{80FF80}Olá %s, Bem vindo ao Menu de Gerenciamento de sua Empresa!",PlayerName(playerid));
                        strcat(strvinnydialog, string);
                        format(strvinny, sizeof(strvinny), "{FFFFFF}\n\nEmpresa: %s\nID: %d\nLocal: %s\nValor: R$ %d\nNivel: %d\nCofre: R$ %d\nProdutos: %d|%d\nEstimativa de Lucro por Dia: %d",
                        SBizzInfo[fz][sbMessage],fz,location,SBizzInfo[fz][sbBuyPrice],SBizzInfo[fz][sbLevel],SBizzInfo[fz][sbTill],SBizzInfo[fz][sbProd],SBizzInfo[fz][sbMaxProd],SBizzInfo[fz][sbLucro]);
                        strcat(strvinnydialog, strvinny);
                        strcat(strvinnydialog, "\n\n{1E90FF}ATENÇÃO: {FFFFFF}Para gerenciar, Abra o menu de sua Empresa clicando em 'Menu'! \n");
                        strcat(strvinnydialog, "{FFFFFF}Para fechar as Informações, aperte em 'Cancelar'!");
                        strcat(strvinnydialog, "\n\n{FF8080}AVISO: {FFFFFF}O lucro diário pode variar de acordo com seu Abastecimento de Produtos!\n");
                        strcat(strvinnydialog, "{FFFFFF}Deixe sempre sua Empresa Abastecida, e Seja Ativo no servidor, Tempo de atividade também conta nos Lucros!\n");
                        ShowPlayerDialog(playerid, DialVinny(39), DIALOG_STYLE_MSGBOX, "{33CCFF}Empresas - Gerenciamento", strvinnydialog, "Menu", "Cancelar");
                        casaid[playerid] = fz;
                        break;
                    }
                }
            }
        if( GetPlayerOrg( playerid ) == 8 ){//Yiakin fez!!
            if( IsPlayerInRangeOfPoint( playerid, 10.0, 1023.9850000,-366.7998000,74.0000000 ) ){
                MoveObject( gatehit, 1019.6000000,-366.7998000,73.8000000, 3 );
                SetTimer( "FechandoHit", 5000, false );
            }
        }
        if( GetPlayerOrg( playerid ) == 4 ){//Yiakin FEZ!!
            OnPlayerCommandText( playerid, "/portaomedico" );
        }
        // YIAKIN FEZ!!
        if( IsPlayerInRangeOfPoint( playerid, 5.0, 2037.2682,-1404.5232,17.2572 ) )
        {
            SetPlayerPos( playerid, 2042.4469,-1395.6266,48.3359 );
            SetPlayerFacingAngle( playerid, 184.3755 );
        }
        if( IsPlayerInRangeOfPoint( playerid, 5.0, 2042.4469,-1395.6266,48.3359 ) )
        {
            SetPlayerPos( playerid, 2037.2682,-1404.5232,17.2572 );
            SetPlayerFacingAngle( playerid, 354.2196 );
        }
        //---
        if(IsACop(playerid) || IsAGOV(playerid) || IsAGang(playerid) || GetPlayerOrg(playerid) == 13 || GetPlayerOrg(playerid) == 12 || PlayerInfo[playerid][pEmprego] == 11 || PlayerInfo[playerid][pEmprego] == 5)
        {
            OnPlayerCommandText(playerid,"/pe");
            OnPlayerCommandText(playerid,"/pg");
            OnPlayerCommandText(playerid,"/abrirgn");
            OnPlayerCommandText(playerid,"/pb2");
            OnPlayerCommandText(playerid,"/pb");
            OnPlayerCommandText(playerid,"/pce");
            OnPlayerCommandText(playerid,"/pcg");
            OnPlayerCommandText(playerid,"/ppr");
            OnPlayerCommandText(playerid,"/pprc");
            OnPlayerCommandText(playerid,"/pbope");
            OnPlayerCommandText(playerid,"/ppf");
            OnPlayerCommandText(playerid,"/pPF1");
            OnPlayerCommandText(playerid,"/portaoyiakin");
            OnPlayerCommandText(playerid,"/portaoyiakin2");
            OnPlayerCommandText(playerid,"/portaoyiakin3");
            OnPlayerCommandText(playerid,"/pmo2");
            //OnPlayerCommandText(playerid,"/pmo1");
            OnPlayerCommandText(playerid,"/pbr1");
            //OnPlayerCommandText(playerid,"/pbr2");
            OnPlayerCommandText(playerid,"/pfd1");
            OnPlayerCommandText(playerid,"/pfd2");

            OnPlayerCommandText(playerid,"/pyakuza");


            OnPlayerCommandText(playerid,"/acn");
            OnPlayerCommandText(playerid,"/pmec");

            OnPlayerCommandText(playerid,"/pld1");
        }
        if(PlayerToPoint( 3, playerid, 2425.3486,-2089.3240,13.5469 ) ){
            OnPlayerCommandText(playerid,"/ponibus");
        }
        if(PlayerToPoint( 3, playerid, 1385.2656,-1661.7928,13.4636 ) ){
            if( IsACop( playerid ) ){
                SetPlayerPos( playerid, 1390.8943,-1661.2303,39.5469 );
                SetPlayerFacingAngle( playerid, 271.0464 );
                SetCameraBehindPlayer( playerid );
            }
        }
        if(PlayerToPoint( 3, playerid, 217.7000000,124.3000000,1009.0399800 ) ){
            {
                OnPlayerCommandText(playerid,"/pPF3");
            }
        }
        if(PlayerToPoint( 3, playerid, 227.3994100,126.7998000,1004.8499800 ) ){
            {
                OnPlayerCommandText(playerid,"/pPF4");
            }
        }
        if(PlayerToPoint( 3, playerid, 932.1405,-1726.4769,13.5467 ) ){
            {
                OnPlayerCommandText(playerid,"/pPF7");
            }
        }
        if(PlayerToPoint( 3, playerid, 1390.8943,-1661.2303,39.5469 ) ){
            if( IsACop( playerid ) ){
                SetPlayerPos( playerid, 1385.2656,-1661.7928,13.4636 );
                SetPlayerFacingAngle( playerid, 270.4823 );
                SetCameraBehindPlayer( playerid );
            }
        }
        if(PlayerToPoint(3, playerid, 2780.4939,-1812.2635,11.8438))
        {
            OnPlayerCommandText(playerid,"/concessionaria");
        }
        if(PlayerAnim[playerid] == true)
        {
            ClearAnimations(playerid);
            PlayerAnim[playerid] = false;
        }
        if(PlayerToPoint(2,playerid,237.7438,108.0919,1010.2188) || PlayerToPoint(2,playerid,226.8586,127.6783,1010.2188) || PlayerToPoint(2,playerid,215.5024,125.1288,1003.2188))
        {
            if(GetPlayerVirtualWorld(playerid) == 1)
            {
                OnPlayerCommandText(playerid,"/cameras");
            }
        }
        if (PlayerToPoint(1.1, playerid, 247.2936,77.4821,1003.6406)) // portao vest fora
        {
            if(IsACop(playerid))
            {
                SetPlayerPos(playerid,247.2936,77.4821,1003.6406);
                SetPlayerFacingAngle(playerid, 266.9180);
                ApplyAnimation(playerid, "CRIB","CRIB_Use_Switch",4.1,0,0,0,0,0);
                OnPlayerCommandText(playerid,"/pv");
            }
        }
        if (PlayerToPoint(1.1, playerid, 249.3107,74.2571,1003.6406)) // portao vest dentro
        {
            if(IsACop(playerid))
            {
                SetPlayerPos(playerid,249.3107,74.2571,1003.6406);
                SetPlayerFacingAngle(playerid, 93.4574);
                ApplyAnimation(playerid, "CRIB","CRIB_Use_Switch",4.1,0,0,0,0,0);
                OnPlayerCommandText(playerid,"/pv");
            }
        }
        if (PlayerToPoint(1.1, playerid, 245.0195,71.3762,1003.6406)) // pp fora
        {
            if(IsACop(playerid) || PlayerInfo[playerid][pEmprego] == 2)
            {
                SetPlayerPos(playerid,245.0195,71.3762,1003.6406);
                SetPlayerFacingAngle(playerid, 1.7752);
                ApplyAnimation(playerid, "CRIB","CRIB_Use_Switch",4.1,0,0,0,0,0);
                OnPlayerCommandText(playerid,"/pp");
            }
        }
        if (PlayerToPoint(1.1, playerid, 249.8460,64.8226,1003.6406)) // pr fora
        {
            if(IsACop(playerid))
            {
                SetPlayerPos(playerid,249.8460,64.8226,1003.6406);
                SetPlayerFacingAngle(playerid, 273.2498);
                ApplyAnimation(playerid, "CRIB","CRIB_Use_Switch",4.1,0,0,0,0,0);
                OnPlayerCommandText(playerid,"/pr");
            }
        }
        if (PlayerToPoint(1.1, playerid, 251.5490,64.8285,1003.6406)) // pr dentro
        {
            if(IsACop(playerid))
            {
                SetPlayerPos(playerid,251.5490,64.8285,1003.6406);
                SetPlayerFacingAngle(playerid, 91.4545);
                ApplyAnimation(playerid, "CRIB","CRIB_Use_Switch",4.1,0,0,0,0,0);
                OnPlayerCommandText(playerid,"/pr");
            }
        }
        if (PlayerToPoint(1.1, playerid, 319.0898,-1485.6914,24.6590)) // pb3 fora
        {
            if(IsACop(playerid))
            {
                SetPlayerPos(playerid,319.0898,-1485.6914,24.6590);
                SetPlayerFacingAngle(playerid, 58.0972);
                ApplyAnimation(playerid, "CRIB","CRIB_Use_Switch",4.1,0,0,0,0,0);
                OnPlayerCommandText(playerid,"/pb");
            }
        }
        if (PlayerToPoint(1.1, playerid, 324.1216,-1491.6272,24.5938)) // pb3 dentro
        {
            if(IsACop(playerid))
            {
                SetPlayerPos(playerid,324.1216,-1491.6272,24.5938);
                SetPlayerFacingAngle(playerid, 313.2777);
                ApplyAnimation(playerid, "CRIB","CRIB_Use_Switch",4.1,0,0,0,0,0);
                OnPlayerCommandText(playerid,"/pb");
            }
        }
        if (PlayerToPoint(1.1, playerid, 285.2658,-1545.6089,24.8703)) // pb2 fora
        {
            if(IsACop(playerid))
            {
                SetPlayerPos(playerid,285.2658,-1545.6089,24.8703);
                SetPlayerFacingAngle(playerid, 243.4251);
                ApplyAnimation(playerid, "CRIB","CRIB_Use_Switch",4.1,0,0,0,0,0);
                OnPlayerCommandText(playerid,"/pb2");
            }
        }
        if (PlayerToPoint(1.1, playerid, 280.3053,-1539.2838,24.5934)) // pb2 dentro
        {
            if(IsACop(playerid))
            {
                SetPlayerPos(playerid,280.3053,-1539.2838,24.5934);
                SetPlayerFacingAngle(playerid, 148.1709);
                ApplyAnimation(playerid, "CRIB","CRIB_Use_Switch",4.1,0,0,0,0,0);
                OnPlayerCommandText(playerid,"/pb2");
            }
        }
        if (PlayerToPoint(1.1, playerid, 941.6736,-1013.3484,32.4650)) // ppf fora
        {
            if(IsACop(playerid))
            {
                SetPlayerPos(playerid,941.6736,-1013.3484,32.4650);
                SetPlayerFacingAngle(playerid, 271.6808);
                ApplyAnimation(playerid, "CRIB","CRIB_Use_Switch",4.1,0,0,0,0,0);
                OnPlayerCommandText(playerid,"/ppf");
            }
        }
        if (PlayerToPoint(1.1, playerid, 925.7493,-1211.3282,16.9764)) // ppc fora
        {
            if(IsACop(playerid) || PlayerInfo[playerid][pEmprego] == 2)
            {
                SetPlayerPos(playerid,925.7493,-1211.3282,16.9764);
                SetPlayerFacingAngle(playerid, 91.0763);
                ApplyAnimation(playerid, "CRIB","CRIB_Use_Switch",4.1,0,0,0,0,0);
                OnPlayerCommandText(playerid,"/ppr");
            }
        }

        if (PlayerToPoint(5.0, playerid, 1447.0576,-1781.6187,13.6468))
        {
            if(Presente[playerid] == 1)
            {
                new moneey, repect;
                moneey = ContarJogadores()*1000;
                repect = random(3);
                format(string, sizeof(string), "[BPG PRESENTE]{C1FFFF} Você Pegou seu Bônus por players online: %d de Dinheiro e %d De Respeito!", moneey, repect);
                SendClientMessage(playerid, 0xFF9FFFFF, string);
                SendClientMessage(playerid,0xFF9FFFFF,"[BPG PRESENTE]{FFFFFF} Volte para pegar mais no payday quando tiver 75 players online novamente!");
                GivePlayerMoney(playerid, moneey);
                PlayerInfo[playerid][pExp] += repect;
                Presente[playerid] = 0;
                return 1;
            }
            else
            {
                SendClientMessage(playerid,0xB0B0B0AA,"[BPG PRESENTE] Você não pode pegar mais Presente, Volte no proximo Payday Quando der 75 Players online!");
                return 1;
            }
        }
        if (PlayerToPoint(4.0, playerid, 1722.2274,-1625.4542,20.2117))
        {
            if(IsPlayerConnected(playerid))
            {
                SendClientMessage(playerid, -1, "|_______|{1E90FF}B{FFFFFF}.P.{FF0000}N{FFFFFF}| Ajuda Para Novatos |{1E90FF}B{FFFFFF}.P.{FF0000}N{FFFFFF}|_______|");
                SendClientMessage(playerid, -1,"Olá Novato, Aqui você Irá Visualizar todas as Regras Básicas do Servidor!");
                SendClientMessage(playerid, -1,"É Proibido cometer DB (Drive By) e DM (Death Math)!");
                SendClientMessage(playerid, -1,"Caso encontre algum Bug no Servidor, Avise a um Administrador Online /relatorio [texto]!");
                SendClientMessage(playerid, -1,"Jamais abuse de bugs, Ou cometa atos Racistas contra os demais jogadores!");
                SendClientMessage(playerid, -1,"Caso esteja perdido, e Não saiba a Onde ir, Pessa ajuda a um Helper usando /duvida.");
                SendClientMessage(playerid, -1,"Este Servidor tem Sistema de Guerra de Pontos, Caso não saiba como Funciona digite /ajudaguerra.");
                SendClientMessage(playerid, -1,"Ajude a Divulgar o Nosso Servidor e faça com que ele Seja Mais Divertido!");
                SendClientMessage(playerid, -1,"Tenha um Bom Jogo.");
            }
            return 1;
        }
                if(PlayerToPoint(2, playerid,255.3,77.4,1003.6) || PlayerToPoint(2,playerid,-1616.1294,681.1594,7.1875) || PlayerToPoint(2,playerid,230.1107,165.2237,1003.0234)  || PlayerToPoint(2, playerid,1530.5187,-1702.5320,6.2252) || PlayerToPoint(2, playerid,302.7606,-1529.7537,24.9219) || PlayerToPoint(2, playerid,-1345.8823,492.5301,11.2027)
        || PlayerToPoint(2, playerid,326.4911,307.0710,999.1484) || PlayerToPoint(2, playerid,1391.5026,-1623.0095,13.5469) ||PlayerToPoint(2, playerid,629.1463,-581.5966,16.9337) || PlayerToPoint(2, playerid,-2446.4824,516.1896,30.2254) || PlayerToPoint(2, playerid,1709.7542,-1642.8513,20.2188) || PlayerToPoint(2, playerid,-2446.4824,516.1896,30.2254) || PlayerToPoint(2,playerid,234.3249,111.4311,1003.2257))
        {
            OnPlayerCommandText(playerid,"/menucop");
        }
        if (InAFoodPlace[playerid] != 0)
        {
                if(PlayerToPoint(1.5,playerid,368.9714,-6.2486,1001.8516))
                {
                    ShowPlayerDialog(playerid, 28, DIALOG_STYLE_LIST, "Cluckin' Bell", "Coração no Espeto R$2\nCarne de Vaca R$4\nCarne de Jacaré R$5\nCarne de Frango R$3\nAgua R$1\nSuco R$1", "Selecionar", "Cancelar");
                    SetPlayerPos(playerid,368.9714,-6.2486,1001.8516);
                    SetPlayerFacingAngle(playerid, 357.0132);
                }
                if(PlayerToPoint(1.5,playerid,376.8571,-67.6620,1001.5151) || PlayerToPoint(1.5,playerid,683.9015,-456.7076,-25.6099))
                {
                    ShowPlayerDialog(playerid, 29, DIALOG_STYLE_LIST, "Burger Shot", "X-Simples R$2\nX-Tudo R$4\nX-Especial R$5\nX-Frango R$3\nAgua R$1\nSuco R$1", "Selecionar", "Cancelar");
                    SetPlayerPos(playerid,376.8571,-67.6620,1001.5151);
                    SetPlayerFacingAngle(playerid, 357.0132);
                }
                if(PlayerToPoint(1.5,playerid,375.6895,-118.9683,1001.4995))
                {
                    ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "Well Stacked Pizza", "Presunto e Mussarela - Pequena R$2\nPresunto e Mussarela - Grande R$4\nFrango e Azeitona R$5\nBacon e Chocolate R$3\nAgua R$1\nSuco R$1", "Selecionar", "Cancelar");
                    SetPlayerPos(playerid,375.6895,-118.9683,1001.4995);
                    SetPlayerFacingAngle(playerid, 357.0132);
                }
                if(PlayerToPoint(1.5,playerid,379.0611,-186.6032,1000.6328))
                {
                    ShowPlayerDialog(playerid, 31, DIALOG_STYLE_LIST, "Jim's sticky ring", "Rosquinha Pequena R$2\nRosquinha Normal R$4\nRosquinha de Chefe R$5\nSuper Rosquinha R$4\nAgua R$1\nSuco R$1", "Selecionar", "Cancelar");
                    SetPlayerPos(playerid,379.0611,-186.6032,1000.6328);
                    SetPlayerFacingAngle(playerid, 280);
                }
                SetCameraBehindPlayer(playerid);
           }
        if(PlayerToPoint(1.5,playerid,2224.1484,-1141.8772,1025.7969) || PlayerToPoint(1.0,playerid,1929.5409,-1785.1664,13.5469) || PlayerToPoint(1.0,playerid,2232.2886,-1162.6107,25.8906) || PlayerToPoint(1.0,playerid,1550.4796,-1669.7039,13.5624) || PlayerToPoint(1.5,playerid,957.4803,-48.7381,1001.1172) || PlayerToPoint(1.5,playerid,251.4170,120.7698,1010.2188)
        || PlayerToPoint(2,playerid,229.6725,153.8311,1003.0234)  || PlayerToPoint(1.5,playerid,321.4753,305.5962,999.1484) || PlayerToPoint(1.5,playerid,-1347.6376,499.9476,11.1953) || PlayerToPoint(1.5, playerid,2308.9492,-14.1523,26.7422) || PlayerToPoint(1.5,playerid,1467.5273, -1782.6521, 13.1987))
        {
            OnPlayerCommandText(playerid,"/banco");
        }
        if (PlayerToPoint(2, playerid, 361.8300,173.5202,1008.3828))
        {
            OnPlayerCommandText(playerid,"/getemprego");
        }
        if (PlayerToPoint(2, playerid, 1490.2411,1307.2179,1093.2891))
        {
            OnPlayerCommandText(playerid,"/licencas");
        }
        if (PlayerToPoint(2.0, playerid, -26.8819,-89.6936,1003.5469) || PlayerToPoint(2.0, playerid, -22.2540,-55.6456,1003.5469)
        || PlayerToPoint(2.0, playerid, -22.3265,-138.4765,1003.5469) || PlayerToPoint(2.0, playerid, -30.3140,-28.3121,1003.5573)
        || PlayerToPoint(2.0, playerid, 1508.4419,-1703.4607,14.0469))
        {
            TogglePlayerControllable(playerid, 0);
            ShowPlayerDialog(playerid, 5, DIALOG_STYLE_LIST, "Loja 24/7", "Celular\nAgenda\nDados\nCamisinha\nCD-Player\nFrango\nHamburguer\nPizza", "Confirmar", "Cancelar");
        }
        if (PlayerToPoint(2.0, playerid, 312.5540,-168.7472,999.5938) || PlayerToPoint(2.0, playerid, 295.5530,-84.1116,1001.5156) || PlayerToPoint(2.0, playerid, 296.1042,-38.0026,1001.5156) || PlayerToPoint(2.0, playerid, 316.3512,-133.7587,999.6016))
        {
            TogglePlayerControllable(playerid, 0);
            ShowPlayerDialog(playerid, 6, DIALOG_STYLE_LIST, "Loja de Armas", "Kitvip\nEagle\nMP5\nShotgun\nAk-47\nM4\nRifle\nParaquedas\nTaco de Golfe\nCaceteti\nTaco de Baseball\nPá\nTaco de Sinuca\nVibrador 1\nVibrador 2\nVibrador 3\nVibrador 4\nBuque de Flores\nCano", "Confirmar", "Cancelar");
        }
        if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32 && PlayerToPoint(15.0, playerid, 256.6183,126.0865,1010.2188) || PlayerToPoint(15.0, playerid, 960.1323,-1727.9789,23.4883) || PlayerToPoint(15.0, playerid, 239.1693,117.6838,1003.2188))
        {
         OnPlayerCommandText(playerid,"/elevadorPF");
         }
        if(IsPlayerInRangeOfPoint(playerid, 2.0, 768.2192,-3.9873,1000.7203))
        {
            TogglePlayerControllable(playerid, 0);
            ShowPlayerDialog(playerid, DIALOGID2, DIALOG_STYLE_LIST, "BPG Estilos De Luta", "Cotoveladas\nBoxe\nRua\nKickBoxing\nKarate\nNormal", "confirma", "Cancela");
        }
        if(PlayerToPoint(2.0, playerid, 1450.4479,-2287.0803,13.5469) || PlayerToPoint(2.0, playerid, 1919.1384,-1415.4775,13.5703) || PlayerToPoint(2.0, playerid, 1123.7664,-1506.4692,15.7869))
        {
            if (PlayerInfo[playerid][pEmprego] == 4 || IsAGang(playerid))
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela");
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "  Você não é um vendedor de drogas");
            }
        }
        if(PlayerToPoint(2.0,playerid,1615.9785,1687.5527,11.2184) || PlayerToPoint(2.0,playerid,2626.9204,1815.5192,11.0234) || PlayerToPoint(2.0,playerid,675.0947,-1275.7603,13.6334) || PlayerToPoint(2.0,playerid,1738.6844,-1944.9553,13.5647))
        {
            if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 2582, DIALOG_STYLE_LIST, "Mafia Menu", "Equipar\nPegar Pacotes\nPegar Materiais\nEsconder Materiais", "Confirma", "Cancela");
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "  Você não é um mafioso");
            }
        }
        if(PlayerToPoint(2.0,playerid,2441.8137,-1549.5906,23.9969))//Portao FD
       {
       if(PlayerInfo[playerid][pMembro] == 36 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 36 || PlayerInfo[playerid][pLider] == 36)
            {
        OnPlayerCommandText(playerid,"/pds");
            }
        else
            {
                SendClientMessage(playerid, COLOR_GREY, "  Você não é um Desaster");
            }
        }
        if(PlayerToPoint(3.0,playerid,2026.2104,-1896.1097,13.5469) || PlayerToPoint(3.0,playerid,1240.5569,-2036.9919,59.9709))
        {
            if (PlayerInfo[playerid][pEmprego] == 7)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 2586, DIALOG_STYLE_INPUT, "Pegar Materiais", "Digite a quantidade de materiais/nque deseja pegar", "Pegar", "Cancelar");
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "  Você não é um vendedor de armas");
            }
        }
        if (PlayerToPoint(2.0, playerid, 1524.4977,-1677.9469,6.2188) || PlayerToPoint(2.0, playerid, 1565.1235,-1666.9944,28.3956) || PlayerToPoint(2.0, playerid, 246.2975,87.4735,1003.6406))
        {
            TogglePlayerControllable(playerid, 0);
            ShowPlayerDialog(playerid, 2585, DIALOG_STYLE_LIST, "Elevador Policial", "Garagem\nDepartamento\nCobertura", "Confirma", "Cancela");
        }
        if(PlayerToPoint(3.0,playerid,1990.8590,-1996.3722,13.5469) || PlayerToPoint(3.0,playerid,1240.5569,-2036.9919,59.9709) || PlayerToPoint(3.0,playerid,1240.3546,-2067.5168,59.9752))
        {
            if(MatsHolding[playerid] > 0)
            {
                new payout = (100)*(MatsHolding[playerid]);
                format(gstring, sizeof(gstring), "* A Boca comprou %d Pacotes de você e te deu %d Materiais.", payout, MatsHolding[playerid]);
                SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
                PlayerInfo[playerid][pMats] += payout;
                MatsHolding[playerid] = 0;
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não tem nenhum pacote!");
            }
        }
        if(PlayerToPoint(2, playerid, 1002.0766,-1463.7814,13.5533))
        {
            if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)
            {
                SetPlayerArmour(playerid, 100.0);
                SetPlayerHealth(playerid, 100.0);
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não é um taxista!"); }
        }
        if(PlayerToPoint(2, playerid, 1568.6442,-1689.9729,6.2188) || PlayerToPoint(2, playerid, -1341.1760,500.5289,11.1953) || PlayerToPoint(1.5,playerid,238.5762,111.9725,1010.2188)
        || PlayerToPoint(2, playerid, 320.8083,307.5377,999.1484) || PlayerToPoint(2, playerid, 208.8036,145.8378,1003.0234) || PlayerToPoint(2, playerid, 629.0273,-575.9557,16.9614)
        || PlayerToPoint(2, playerid, -2446.4119,529.9799,30.2148) || PlayerToPoint(2, playerid, -65.199996948242,-2295.3000488281,11.10000038147))
        {
            if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Polícia Militar", "Dinheiro", "Confirmar", "Cancelar");
            }
            else if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre ROTA", "Dinheiro", "Confirmar", "Cancelar");
            }
            else if(PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre BPM ", "Dinheiro", "Confirmar", "Cancelar");
            }
            else if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Polícia B.O.P.E", "Dinheiro", "Confirmar", "Cancelar");
            }
            else if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Exército ", "Dinheiro", "Confirmar", "Cancelar");
            }
            else if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Polícia Rodoviária Federal", "Dinheiro", "Confirmar", "Cancelar");
            }
            else if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Polícia Federal", "Dinheiro", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial !"); }
        }
        if(PlayerToPoint(2, playerid, 752.9537,1443.1010,1102.7031))
        {
            if(PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Snake", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não é da Snake !"); }
        }
        if(PlayerToPoint(2, playerid, -2242.7534,2359.0886,4.9809))
        {
            if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Guerrilheiros Israelitas", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não é do Guerrilheiros Israelitas !"); }
        }
        if(PlayerToPoint(2, playerid, 400.0611,2539.5366,16.5448))
        {
            if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre FARC", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não é da FARC !"); }
        }
        if(PlayerToPoint(2, playerid, 2811.7102,-1166.1824,1025.5703))
        {
            if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Aztecas", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não é dos Aztecas !"); }
        }
        if(PlayerToPoint(2, playerid, 2514.1301,-1691.2979,14.0460))
        {
            if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Groove Street", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não é da Groove Street !"); }
        }
        if(PlayerToPoint(2, playerid, 1151.1399,-1197.9670,32.0275))
        {
            if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Ballas", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não é dos Ballas !"); }
        }
        if(PlayerToPoint(2, playerid, 792.5604,-2215.7935,14.9078))
        {
            if(PlayerInfo[playerid][pMembro] == 35 || PlayerInfo[playerid][pLider] == 35)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Pyschopath", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não é dos Pyschopath !"); }
        }
        if(PlayerToPoint(2, playerid, 273.4333,-2169.5715,2.7978))
        {
            if(PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Justiceiros", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não é dos Justiceiros !"); }
        }
        if(PlayerToPoint(2, playerid, 2341.6677,-1186.3137,1027.9766))
        {
            if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Vagos", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não é dos Vagos !"); }
        }
        if(PlayerToPoint(2, playerid, 2151.3218,-1789.1669,13.5097))
        {
            if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Comando Vermelho", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não é do Comando Vermelho !"); }
        }
        if(PlayerToPoint(2, playerid, 2472.9619,-1524.3949,24.1870))
        {
            if(PlayerInfo[playerid][pMembro] == 36 || PlayerInfo[playerid][pLider] == 36)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Storm", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não é da ExKilles !"); }
        }
        if(PlayerToPoint(2, playerid, 1304.62,-866.76,39.58))
        {
            if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre PCC", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não é do PCC !"); }
        }
        if(PlayerToPoint(2, playerid, 509.7744,-73.3584,998.7578))
        {
            if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Hells Angels", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não faz parte dos Hells Angels !"); }
        }
        if(PlayerToPoint(2, playerid, 684.7512,-461.8790,-25.6098))
        {
            if(PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Mongols", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não faz parte dos Mongols !"); }
        }
        if(PlayerToPoint(2, playerid, -223.7290,1410.9444,27.7734))
        {
            if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Sons Of Anarchy", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não faz parte dos Sons Of Anarchy !"); }
        }
        if(PlayerToPoint(2, playerid, 2743.39,-2454.62,13.86))
        {
            if(PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Triads", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não faz parte dos Triads !"); }
        }
        if(PlayerToPoint(2, playerid, 827.9384,-2035.7565,12.8672))
        {
            if(PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Drifters", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não faz parte dos Drifters !"); }
        }
        if(PlayerToPoint(2, playerid, 2069.0581,-1567.3153,14.9078))
        {
            if(PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre HunTerS", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não faz parte dos HunTerS !"); }
        }
        if(PlayerToPoint(2, playerid, -77.4083,-1729.6631,10.8547))
        {
            if(PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre FaTal DangeR", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não faz parte dos FaTal DangeR !"); }
        }
        if(PlayerToPoint(2, playerid, 1703.7823,1174.0271,34.8259))
        {
            if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Médicos", "Dinheiro", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não é um Médico !"); }
        }
        if(PlayerToPoint(2, playerid, 356.3957,152.4393,1025.7891))
        {
            if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Prefeitura", "Dinheiro", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não é um Servidor Público !"); }
        }
        if(PlayerToPoint(2, playerid, 1097.9017,-326.4841,73.9922))
        {
            if(PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Hitmans", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não é um Hitman !"); }
        }
        if(PlayerToPoint(2, playerid, 752.1580,-1358.9927,13.5000))
        {
            if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Repórteres", "Dinheiro", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não é um Repórter !"); }
        }
        if(PlayerToPoint(2, playerid, 992.5768,-1460.1726,13.5469))
        {
            if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Taxistas", "Dinheiro", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não é um Taxista !"); }
        }
        if(PlayerToPoint(2, playerid, -2634.2791,1409.7692,906.4647))
        {
            if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Mafia Russa", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não é da Mafia Russa !"); }
        }
        if(PlayerToPoint(2, playerid, -2167.5757,644.8060,1057.7687))
        {
            if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Mafia Japonesa", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não é da Mafia Japonesa !"); }
        }
        if(PlayerToPoint(2, playerid, 961.2562,-0.0548,1001.1558))
        {
            if(PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre PsyCo", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não é da PsyCo !"); }
        }
        if(PlayerToPoint(2, playerid, 725.6419,-1451.0293,17.6953))
        {
            if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)
            {
                TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Dark Gods", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
            }
            else
            { SendClientMessage(playerid, COLOR_GREY, "   Você não é da PsyCo !"); }
        }
        if(PlayerToPoint(15.0, playerid, 708.7999900,-1416.0000000,16.1000000) || PlayerToPoint(15.0, playerid, 767.5999800,-1415.9000200,16.1000000) || PlayerToPoint(30.0, playerid, 724.7999900,-1595.3000500,1.5000000))
        {
            OnPlayerCommandText(playerid,"/pjn");
            OnPlayerCommandText(playerid,"/pjn2");
            OnPlayerCommandText(playerid,"/pjn3");
        }
    }
    if((newkeys == KEY_HORN) && (IsPlayerInAnyVehicle(playerid)))
    {
        if(gTeam[playerid] == 2  || IsACop(playerid) || IsAGOV(playerid))
        {
            OnPlayerCommandText(playerid,"/pe");
            OnPlayerCommandText(playerid,"/pg");
            OnPlayerCommandText(playerid,"/abrirgn");
            OnPlayerCommandText(playerid,"/pb2");
            OnPlayerCommandText(playerid,"/pb");
            OnPlayerCommandText(playerid,"/pce");
            OnPlayerCommandText(playerid,"/pcg");
            OnPlayerCommandText(playerid,"/ppf");
            OnPlayerCommandText(playerid,"/ppr");
            OnPlayerCommandText(playerid,"/pbope");
            OnPlayerCommandText(playerid,"/pPF1");
            OnPlayerCommandText(playerid,"/pprc");
            OnPlayerCommandText(playerid,"/portaoyiakin");
            OnPlayerCommandText(playerid,"/portaoyiakin2");
            OnPlayerCommandText(playerid,"/portaoyiakin3");
        }
        if(GetPlayerOrg(playerid) == 29)
        {
            OnPlayerCommandText(playerid,"/ps1");
        }
        if( GetPlayerOrg( playerid ) == 8 ){///Yiakin fez!!
            if( IsPlayerInRangeOfPoint( playerid, 10.0, 1023.9850000,-366.7998000,74.0000000 ) ){
                MoveObject( gatehit, 1019.6000000,-366.7998000,73.8000000, 3 );
                SetTimer( "FechandoHit", 5000, false );
            }
        }
        if( GetPlayerOrg( playerid ) == 4 ){
            OnPlayerCommandText( playerid, "/portaomedico" );
        }
        if(GetPlayerFamy(playerid) == 2)
        {
            OnPlayerCommandText(playerid,"/pc1");
            OnPlayerCommandText(playerid,"/pc2");
        }
        if(IsAPsykO(playerid))
        {
            OnPlayerCommandText(playerid,"/pfd2");
            OnPlayerCommandText(playerid,"/pfd1");
        }
        if(GetPlayerOrg(playerid) == 26)
        {
            OnPlayerCommandText(playerid,"/pfd2");
        }
        if(GetPlayerOrg(playerid) == 27)
        {
            OnPlayerCommandText(playerid,"/pld1");
        }
         if(GetPlayerOrg(playerid) == 29)
        {
            OnPlayerCommandText(playerid,"/ps1");
        }
        if(IsAGOV(playerid))
        {
            OnPlayerCommandText(playerid,"/pgov");
        }
        if(PlayerInfo[playerid][pEmprego] == 9)
        {
            OnPlayerCommandText(playerid,"/ponibus");
        }
        if(IsAJornal(playerid))
        {
            OnPlayerCommandText(playerid,"/portaoreporter");
            OnPlayerCommandText(playerid,"/portaoreporter2");
        }
        if(IsATaxi(playerid))
        {
            OnPlayerCommandText(playerid,"/ptaxi");
        }
        if(IsAFD(playerid))
        {
            OnPlayerCommandText(playerid,"/pds");
        }
        if(IsAReggae(playerid))
        {
            OnPlayerCommandText(playerid,"/pjn");
            OnPlayerCommandText(playerid,"/pjn2");
            OnPlayerCommandText(playerid,"/pjn3");
        }
        if(IsATriad(playerid))
        {
            OnPlayerCommandText(playerid,"/pt1");
            OnPlayerCommandText(playerid,"/pt2");
        }
        if(IsADrifters(playerid))
        {
            OnPlayerCommandText(playerid,"/pd");
        }
        /*if(PlayerInfo[playerid][pMembro] == 36 || PlayerInfo[playerid][pLider] == 36)
        {
            OnPlayerCommandText(playerid,"/psmi");
        }*/
        if(PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31)
        {
            OnPlayerCommandText(playerid,"/pbr1");
            //OnPlayerCommandText(playerid,"/pbr2");
        }
        if(PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30)
        {
            //OnPlayerCommandText(playerid,"/pmo1");
            OnPlayerCommandText(playerid,"/pmo2");
        }
        if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)
        {
            OnPlayerCommandText(playerid,"/ppcc");
        }
        if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
        {
            OnPlayerCommandText(playerid,"/pyakuza");
        }
        if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
        {
            OnPlayerCommandText(playerid,"/acn");
        }
        if(PlayerInfo[playerid][pEmprego] == 5)
        {
            OnPlayerCommandText(playerid,"/pmec");
        }

        if (IsAAdmin(playerid))
        {
            if(PlayerToPoint(15.0, playerid, 1535.0999756, -1451.4000244, 15.1999998))
            {
                OnPlayerCommandText(playerid,"/portaoadmin");
            }
        }
    }
    if(PondoOculos[playerid] == true)
    {
        new skin = GetPlayerSkin(playerid);
        if((newkeys == 32))
        {
            new
                Float:X,
                Float:Y,
                Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            SetPlayerFacingAngle(playerid, 0);
            SetPlayerPos(playerid, X, Y, Z);
            PlayerPlaySound(playerid, 1056, X, Y, Z);
            if(Oculos[playerid] == 0)
            {
                SetPlayerHoldingObject(playerid, CommonRed, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 1)
            {
                SetPlayerHoldingObject(playerid, CommonOrange, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 2)
            {
                SetPlayerHoldingObject(playerid, CommonGreen, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 3)
            {
                SetPlayerHoldingObject(playerid, CommonBlue, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 4)
            {
                SetPlayerHoldingObject(playerid, CommonPurple, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 5)
            {
                SetPlayerHoldingObject(playerid, CommonEspiral, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 6)
            {
                SetPlayerHoldingObject(playerid, CommonBlack, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 7)
            {
                SetPlayerHoldingObject(playerid, RayBanGray, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 8)
            {
                SetPlayerHoldingObject(playerid, CommonEyes, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 9)
            {
                SetPlayerHoldingObject(playerid, CommonXadrex, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 10)
            {
                SetPlayerHoldingObject(playerid, CommonTransparent, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 11)
            {
                SetPlayerHoldingObject(playerid, CommonXRayVision, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 12)
            {
                SetPlayerHoldingObject(playerid, SquareFormatYellow, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 13)
            {
                SetPlayerHoldingObject(playerid, SquareFormatOrange, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 14)
            {
                SetPlayerHoldingObject(playerid, SquareFormatRed, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 15)
            {
                SetPlayerHoldingObject(playerid, SquareFormatBlue, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 16)
            {
                SetPlayerHoldingObject(playerid, SquareFormatGreen, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 17)
            {
                SetPlayerHoldingObject(playerid, RayBanBlue, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 18)
            {
                SetPlayerHoldingObject(playerid, RayBanPurple, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 19)
            {
                SetPlayerHoldingObject(playerid, RayBanPink, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 20)
            {
                SetPlayerHoldingObject(playerid, RayBanRed, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 21)
            {
                SetPlayerHoldingObject(playerid, RayBanOrange, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 22)
            {
                SetPlayerHoldingObject(playerid, RayBanYellow, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 23)
            {
                SetPlayerHoldingObject(playerid, RayBanGreen, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 24)
            {
                SetPlayerHoldingObject(playerid, CircularNormal, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 25)
            {
                SetPlayerHoldingObject(playerid, CircularYellow, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 26)
            {
                SetPlayerHoldingObject(playerid, CircularRed, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 27)
            {
                SetPlayerHoldingObject(playerid, CircularBlack, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 28)
            {
                SetPlayerHoldingObject(playerid, CircularXadrex, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid]++;
                return 0;
            }
            if(Oculos[playerid] == 29)
            {
                SetPlayerHoldingObject(playerid, CircularThunders, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
                Oculos[playerid] = 0;
                return 0;
            }

        }
        else if((newkeys == 8))
        {
            new
                Float:X,
                Float:Y,
                Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            PlayerPlaySound(playerid, 5203, X, Y, Z);
            SetCameraBehindPlayer(playerid);
            SendClientMessage(playerid, 0xFFFFFFFF, "Oculos colocado! Para tirar use /toculos!");
            PondoOculos[playerid] = false;
            TogglePlayerControllable(playerid, true);
            TextDrawDestroy(TOculos);
            TextDrawDestroy(TOculos2);
        }
    }
    return 1;
}
public ScoreLevel(playerid)
{
    new LevScore;
    LevScore = PlayerInfo[playerid][pLevel];
    SetPlayerScore(playerid, LevScore);
}
public Velocimetro()
{
    new Float:Speedo_HP;
    new str1[128],str2[128],str3[128],str4[128];
    new GasEtempo[MAX_PLAYERS],ResultOwn[MAX_PLAYERS];
    for(new i=0; i<MaiorID; i++)
    {
        new vehicle = GetPlayerVehicleID(i);
        GetVehicleHealth(vehicle, Speedo_HP);
        if(gPlayerLogged[i] == 1 && IsPlayerInAnyVehicle(i))
        {
            if(TextShow[i] == false)
            {
                TextDrawHideForPlayer(i, forum);
                TextDrawShowForPlayer(i, box);
                TextDrawShowForPlayer(i, TextData);
                TextDrawShowForPlayer(i, TextHora);
                TextDrawShowForPlayer(i, VeInfo[i]);
                TextDrawShowForPlayer(i, kmhor[i]);
                TextDrawShowForPlayer(i, GazoInfo[i]);
                TextDrawShowForPlayer(i, LataInfo[i]);
                TextDrawShowForPlayer(i, TempoGasInfo[i]);
                TextDrawShowForPlayer(i, LocalInf[i]);
                TextDrawShowForPlayer(i, SpedUrl);
                TextShow[i] = true;
            }
            //veiculo
            format(str1,sizeof(str1),"~g~~h~~h~~h~Veiculo:~w~~h~~h~ %s",vehName[GetVehicleModel(GetPlayerVehicleID(i))-400]);
            TextDrawSetString(VeInfo[i], str1);
            /*if(GetPlayerSpeed(i, true) >= 150)
            {
                format(str2,sizeof(str2),"~>~~w~Velocidade: ~r~%d KM/H",GetPlayerSpeed(i, true));
                TextDrawSetString(kmhor[i], str2);
            }  */
            //velocidade
            if(GetPlayerSpeed(i, true) >= 150)
            {
                format(str2,sizeof(str2),"~g~~h~~h~~h~Velocidade:~w~ %d ~r~~h~Km/h",GetPlayerSpeed(i, true));
                TextDrawSetString(kmhor[i], str2);
            }
            else
            {
                format(str2,sizeof(str2),"~g~~h~~h~~h~Velocidade:~w~ %d ~b~~h~~h~Km/h",GetPlayerSpeed(i, true));
                TextDrawSetString(kmhor[i], str2);
            }
            // life do carro
            if(Speedo_HP >= 551)
            {
                format(str4,sizeof(str4),"~g~~h~~h~~h~Lataria:~w~ %0.0f%%", Speedo_HP/10);
                TextDrawSetString(LataInfo[i], str4);
            }
            else if(Speedo_HP >= 361)
            {
                format(str4,sizeof(str4),"~g~~h~~h~~h~Lataria:~w~ %0.0f%%", Speedo_HP/10);
                TextDrawSetString(LataInfo[i], str4);
            }
            else
            {
                format(str4,sizeof(str4),"~b~~h~~h~~h~Lataria:~r~~h~ %0.0f%%", Speedo_HP/10);
                TextDrawSetString(LataInfo[i], str4);
            }
            // inf tempo gas
            GasEtempo[i] = Gas[vehicle]*18;
            ResultOwn[i] = GasEtempo[i]/60;
            if(ResultOwn[i] > 5)
            {
                format(str4,sizeof(str4),"~g~~h~~h~~h~Gas Tempo:~w~ %d ~b~~h~~h~Min", ResultOwn[i]);
                TextDrawSetString(TempoGasInfo[i], str4);
            }
            else
            {
                format(str4,sizeof(str4),"~g~~h~~h~~h~Gas Tempo:~w~ %d ~b~~h~~h~Min", ResultOwn[i]);
                TextDrawSetString(TempoGasInfo[i], str4);
            }
            // combustivel
            if(Gas[vehicle] >= 20)
            {
                format(str3,sizeof(str3),"~g~~h~~h~~h~Combustivel:~w~ %d", Gas[vehicle]);
                TextDrawSetString(GazoInfo[i], str3);
            }
            else if(Gas[vehicle] < 20)
            {
                format(str3,sizeof(str3),"~g~~h~~h~~h~Combustivel:~w~ %d", Gas[vehicle]);
                TextDrawSetString(GazoInfo[i], str3);
            }
            else
            {
                format(str3,sizeof(str3),"~g~~h~~h~~h~Combustivel:~r~~h~ %d", Gas[vehicle]);
                TextDrawSetString(GazoInfo[i], str3);
            }
            format(str4,sizeof(str4),"~g~~h~~h~~h~Local: ~w~%s",ReturnPlayerZone(i));
            TextDrawSetString(LocalInf[i], str4);
        }
        else
        {
            if(TextShow[i] == true)
            {
                TextDrawHideForPlayer(i, box);
                TextDrawHideForPlayer(i, tacho[i]);
                TextDrawHideForPlayer(i, VeInfo[i]);
                TextDrawHideForPlayer(i, kmhor[i]);
                TextDrawHideForPlayer(i, GazoInfo[i]);
                TextDrawHideForPlayer(i, LataInfo[i]);
                TextDrawHideForPlayer(i, TempoGasInfo[i]);
                TextDrawHideForPlayer(i, LocalInf[i]);
                TextDrawHideForPlayer(i, SpedUrl);
                TextDrawShowForPlayer(i, TextData);
                TextDrawShowForPlayer(i, TextHora);
                TextDrawShowForPlayer(i, forum);
                TextShow[i] = false;
            }
        }
    }
}
public RemoveRoadblock(playerid)
{
    DestroyDynamicObject(pRoadblock[playerid]);
    pRoadblock[playerid] = 0;
}
forward CheckGB(playerid);
public CheckGB(playerid)
{
    if(PlayerInfo[playerid][pConta] > 999999999)
    {
        PlayerInfo[playerid][pConta] -= 500000;
        PlayerInfo[playerid][pGold] += 5;
        if(IniciouGB[playerid] == 0)
        {
            SendClientMessage(playerid,COLOR_WHITE,"Você está com mais de 1kkk em sua conta bancária, e iniciou uma conversão do resto para GB!");
            IniciouGB[playerid] = 1;
        }
    }
    if(PlayerInfo[playerid][pConta] < 999990999)
    {
        if(TerminouGB[playerid] == 0)
        {
            SendClientMessage(playerid,COLOR_WHITE,"A conversão do seu dinheiro no banco acima de 1kkk para GB terminou. USE: /ajudaGB");
            SendClientMessage(playerid,COLOR_LIGHTRED,"Tome cuidado para que seu dinheiro no banco fique acima de 1kkk(R$1000000000) evitando BUGs.");
            TerminouGB[playerid] = 1;
            ComecouConversao[playerid] = 0;
            KillTimer(TempoCheckGB[playerid]);
        }
    }
 return 1;
}

forward CheckCashGB(playerid);
public CheckCashGB(playerid)
{
    if(GetPlayerMoney(playerid) > 9999998)
    {
        GivePlayerMoney(playerid, -100000);
        PlayerInfo[playerid][pGold] += 1;
        if(IniciouGB2[playerid] == 0)
        {
            SendClientMessage(playerid,COLOR_WHITE,"Você está com mais de 10kk(R$10000000) em mãos, e iniciou uma conversão do resto para GB!");
            IniciouGB2[playerid] = 1;
        }
    }
    if(GetPlayerMoney(playerid) < 9999999)
    {
        if(TerminouGB2[playerid] == 0)
        {
            SendClientMessage(playerid,COLOR_WHITE,"A conversão do seu dinheiro em mãos acima de 10kk para GB terminou.");
            SendClientMessage(playerid,COLOR_DBLUE,"Tome cuidado para que seu dinheiro fique abaixo de 10kk(R$10000000) evitando BUGs.");
            TerminouGB2[playerid] = 1;
            ComecouConversao2[playerid] = 0;
            KillTimer(TempoCheckGB2[playerid]);
        }
    }
 return 1;
}
forward RemovePlataforma(playerid);
public RemovePlataforma(playerid)
{
    DestroyDynamicObject(pRoadRampa[playerid][0]);
    DestroyDynamicObject(pRoadRampa[playerid][1]);
    DestroyDynamicObject(pRoadRampa[playerid][2]);
    DestroyDynamicObject(pRoadRampa[playerid][3]);
    DestroyDynamicObject(pRoadRampa[playerid][4]);
    DestroyDynamicObject(pRoadRampa[playerid][5]);
    DestroyDynamicObject(pRoadRampa[playerid][6]);
    DestroyDynamicObject(pRoadRampa[playerid][7]);
    pRoadRampa[playerid][0] = 0;
    pRoadRampa[playerid][1] = 0;
    pRoadRampa[playerid][2] = 0;
    pRoadRampa[playerid][3] = 0;
    pRoadRampa[playerid][4] = 0;
    pRoadRampa[playerid][5] = 0;
    pRoadRampa[playerid][6] = 0;
    pRoadRampa[playerid][7] = 0;
}
public RemoveParedao(playerid)
{
    DestroyDynamicObject(PlayerInfo[playerid][pParedao]);
    PlayerInfo[playerid][pParedao] = 0;
}
public RemoveRoadPregos(playerid)
{
    SpikeInfo[playerid][sCreated]=0;
    SpikeInfo[playerid][sX]=0.0;
    SpikeInfo[playerid][sY]=0.0;
    SpikeInfo[playerid][sZ]=0.0;
    DestroyDynamicObject(SpikeInfo[playerid][sObject]);
}
public RemoveRoadBloq(playerid)
{
    DestroyDynamicObject(pRoadBloq[playerid]);
    pRoadBloq[playerid] = 0;
}
public RemoveBarraca(playerid)
{
    DestroyDynamicObject(PlayerInfo[playerid][pBarraca]);
    PlayerInfo[playerid][pBarraca] = 0;
}
public ClearChatbox(playerid, lines)
{
    if (IsPlayerConnected(playerid))
    {
        for(new i=0; i<lines; i++)
        {
            SendClientMessage(playerid, COLOR_GREY, " ");
        }
    }
    return 1;
}
public NRouco(playerid)
{
    Rouco[playerid] = 0;
    SendClientMessage(playerid, CINZA, "Agora você já pode gritar novamente.");
}
public NSemAn(playerid)
{
    SemAn[playerid] = 0;
    SendClientMessage(playerid, CINZA, "Agora você já usar o /an.");
}
public BackupClear(playerid, calledbytimer)
{
    if(IsPlayerConnected(playerid))
    {
        if(IsACop(playerid))
        {
            if (PlayerInfo[playerid][pRequestingBackup] == 1)
            {
            for(new i = 0; i < MaiorID; i++)
                {
                    if(IsPlayerConnected(i))
                    {
                    if(IsACop(playerid))
                        {
                            SetPlayerMarkerForPlayer(i, playerid, TEAM_HIT_COLOR);
                        }
                    }
                }
                if (calledbytimer != 1)
                {
                    SendClientMessage(playerid, TEAM_BLUE_COLOR, "Seu pedido de reforço foi cancelado.");
                }
                else
                {
                    SendClientMessage(playerid, TEAM_BLUE_COLOR, "Seu pedido de reforço foi cancelado automaticamente.");
                }
                PlayerInfo[playerid][pRequestingBackup] = 0;
            }
            else
            {
                if (calledbytimer != 1)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Você ainda não pediu reforço.");
                }
            }
        }
        else
        {
            if (calledbytimer != 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "Você não é COP");
            }
        }
    }
    return 1;
}
public CheckHack() // Anti Xiter money, Armas e Jet Pack
{
    if(FakeKillOn == 1) { KillTimer(TempoCheckHack); return 1; }
    new giveplayer[MAX_PLAYER_NAME], string[128];
    new ano, mes, dia;
    new hora, minuto, segundo;
    getdate(ano, mes, dia);
    gettime(hora, minuto, segundo);
    for(new i = 0; i < MaiorID; i++)
    {
    if(IsPlayerConnected(i) && gPlayerLogged[i] == 1 && !IsPlayerNPC(i) && spawnado[i] > 0 && PlayerInfo[i][pAdmin] != 3000)
    {
// JetPack
    if(GetPlayerWeapon(i) == 35)
                {
                GetPlayerName(i, giveplayer, sizeof(giveplayer));
                format(string, sizeof(string), "ANTICHEAT: %s[ID %d] está usando um Rocket Launcher /tv nele rapido", giveplayer,i);
                ABroadCast(COLOR_LIGHTRED,string,1);
                SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
                SetPlayerArmedWeapon(i, 0);
                IsXiter[i] ++;
                }

// Lança chamas
    else if(GetPlayerWeapon(i) == 37)
                {
                GetPlayerName(i, giveplayer, sizeof(giveplayer));
                format(string, sizeof(string), "ANTICHEAT: %s[ID %d] está usando um Lança Chamas /tv nele rapido", giveplayer,i);
                ABroadCast(COLOR_LIGHTRED,string,1);
                SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
                SetPlayerArmedWeapon(i, 0);
                IsXiter[i] ++;
                }
else if(GetPlayerWeapon(i) == 38)
                {
                GetPlayerName(i, giveplayer, sizeof(giveplayer));
                format(string, sizeof(string), "ANTICHEAT: %s[ID %d] está usando uma Minigun /tv nele rapido", giveplayer,i);
                ABroadCast(COLOR_LIGHTRED,string,1);
                SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
                SetPlayerArmedWeapon(i, 0);
                IsXiter[i] ++;
                }
// Visão Noturna
else if(GetPlayerWeapon(i) == 44)
                {
                GetPlayerName(i, giveplayer, sizeof(giveplayer));
                format(string, sizeof(string), "%s ANTICHEAT: %s[ID %d] está usando uma Visão Noturna /tv nele rapido", giveplayer,i);
                ABroadCast(COLOR_LIGHTRED,string,1);
                SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
                SetPlayerArmedWeapon(i, 0);
                IsXiter[i] ++;
                }
// Visão de Calor
else if(GetPlayerWeapon(i) == 45)
                {
                GetPlayerName(i, giveplayer, sizeof(giveplayer));
                format(string, sizeof(string), "ANTICHEAT: %s[ID %d] está usando uma Visão de Calor /tv nele rapido", giveplayer,i);
                ABroadCast(COLOR_LIGHTRED,string,1);
                SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
                SetPlayerArmedWeapon(i, 0);
                IsXiter[i] ++;
                }
//Serra Eletrica
else if(GetPlayerWeapon(i) == 9)
                {
                GetPlayerName(i, giveplayer, sizeof(giveplayer));
                format(string, sizeof(string), "ANTICHEAT: %s[ID %d] está usando uma Serra Eletrica /tv nele rapido", giveplayer,i);
                ABroadCast(COLOR_LIGHTRED,string,1);
                SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
                SetPlayerArmedWeapon(i, 0);
                IsXiter[i] ++;
                }
//Sawn-off
else if(GetPlayerWeapon(i) == 26)
                {
                GetPlayerName(i, giveplayer, sizeof(giveplayer));
                format(string, sizeof(string), "ANTICHEAT: %s[ID %d] está usando uma Sawn-off /tv nele rapido", giveplayer,i);
                ABroadCast(COLOR_LIGHTRED,string,1);
                SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
                SetPlayerArmedWeapon(i, 0);
                IsXiter[i] ++;
                }
//Combat shotgun
else if(GetPlayerWeapon(i) == 27 && GetPlayerOrg(i) != 8 && GetPlayerOrg(i) != 24 && GetPlayerOrg(i) != 26 && GetPlayerFamy(i) != 6)
                {
                GetPlayerName(i, giveplayer, sizeof(giveplayer));
                format(string, sizeof(string), "ANTICHEAT: %s[ID %d] está usando uma Combat shotgun /tv nele rapido", giveplayer,i);
                ABroadCast(COLOR_LIGHTRED,string,1);
                SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
                SetPlayerArmedWeapon(i, 0);
                IsXiter[i] ++;
                }
//Molotov
else if(GetPlayerWeapon(i) == 18)
                {
                GetPlayerName(i, giveplayer, sizeof(giveplayer));
                format(string, sizeof(string), "ANTICHEAT: %s[ID %d] está usando um Molotov /tv nele rapido", giveplayer,i);
                ABroadCast(COLOR_LIGHTRED,string,1);
                SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
                SetPlayerArmedWeapon(i, 0);
                IsXiter[i] ++;
                }
//Micro Uzi
else if(GetPlayerWeapon(i) == 28)
                {
                GetPlayerName(i, giveplayer, sizeof(giveplayer));
                format(string, sizeof(string), "ANTICHEAT: %s[ID %d] está usando uma Micro Uzi /tv nele rapido", giveplayer,i);
                ABroadCast(COLOR_LIGHTRED,string,1);
                SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
                SetPlayerArmedWeapon(i, 0);
                IsXiter[i] ++;
                }
//Tec 9
else if(GetPlayerWeapon(i) == 32)
                {
                GetPlayerName(i, giveplayer, sizeof(giveplayer));
                format(string, sizeof(string), "ANTICHEAT: %s[ID %d] está usando uma TEC-9 /tv nele rapido", giveplayer,i);
                ABroadCast(COLOR_LIGHTRED,string,1);
                SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
                SetPlayerArmedWeapon(i, 0);
                IsXiter[i] ++;
                }
//Bazooca
else if(GetPlayerWeapon(i) == 36)
                {
                GetPlayerName(i, giveplayer, sizeof(giveplayer));
                format(string, sizeof(string), "ANTICHEAT: %s[ID %d] está usando uma Bazooca  /tv nele rapido", giveplayer,i);
                ABroadCast(COLOR_LIGHTRED,string,1);
                SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
                SetPlayerArmedWeapon(i, 0);
                IsXiter[i] ++;
                }
            }
            if(IsXiter[i] >= 3)
            {
                GetPlayerName(i, giveplayer, sizeof(giveplayer));
                IsXiter[i] = 0;
                format(gstring, sizeof(gstring), "AntiAttack:%s[ID: %d] Foi acusado ser ser Um Weapon Hack e Foi banido!",giveplayer,i);
                ABroadCast(COLOR_LIGHTRED,gstring,1);
                SBan(i, "Weapon Hack", "Anti-Xiter");
            }
    }
    TempoGuerraP();
    return 1;
}
public GuerraCasarao(playerid)
{
        new string[128], playername[MAX_PLAYER_NAME], OrgID = GetPlayerOrg(playerid);
        if(ProvocoCasarao[playerid] == 1)
        {
            if(IsPlayerInCasarao(playerid))
            {
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s Dominaram o Casarão Abandonado!",playername,NomeORGTr(OrgID));
                SendClientMessageToAll(OrgCor(OrgID), string);
                SendClientMessage(playerid, COLOR_GRAD5, "Você dominou o Shopping Center, Mantenha ele em Controle e Ganhará Grana.");
                GangZoneStopFlashForAll(GZCasarao);
                GangZoneShowForAll(GZCasarao,OrgCor(OrgID));
                Dominando[playerid] = 0;
                ProvocoCasarao[playerid] = 0;
                GuerranoCasarao = 0;
                donocasarao = OrgID;
                KillTimer(TempoGuerraCasarao);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COR_COSA, "Você não está no casarão.");
                Dominando[playerid] = 0;
                GangZoneStopFlashForAll(GZCasarao);
                GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
                ProvocoCasarao[playerid] = 0;
                GuerranoCasarao = 0;
                donocasarao = 0;
                KillTimer(TempoGuerraCasarao);
                return 1;
            }
        }
       return 1;
}
public GuerraEstacao(playerid)
{
        new string[128], playername[MAX_PLAYER_NAME], OrgID = GetPlayerOrg(playerid);
        if(ProvocoEstacao[playerid] == 1)
        {
            if(IsPlayerInEstacao(playerid))
            {
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s Dominaram a Estação Unity!",playername,NomeORGTr(OrgID));
                SendClientMessageToAll(COR_COSA, string);
                SendClientMessage(playerid, COLOR_GRAD5, "Você dominou a estação, Mantenha ele em Controle e Ganhará Grana.");
                GangZoneStopFlashForAll(GZEstacao);
                GangZoneShowForAll(GZEstacao,OrgCor(OrgID));
                Dominando[playerid] = 0;
                ProvocoEstacao[playerid] = 0;
                GuerranaEstacao = 0;
                donoestacao = OrgID;
                KillTimer(TempoGuerraEstacao);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COR_COSA, "Você não está na estação.");
                Dominando[playerid] = 0;
                GangZoneStopFlashForAll(GZEstacao);
                GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
                ProvocoEstacao[playerid] = 0;
                GuerranaEstacao = 0;
                donoestacao = 0;
                KillTimer(TempoGuerraEstacao);
                return 1;
            }
        }
        return 1;
}
public GuerraShop(playerid)
{
    new string[128], playername[MAX_PLAYER_NAME], OrgID = GetPlayerOrg(playerid);
    if(ProvocoShop[playerid] == 1)
    {
        if(IsPlayerInShop(playerid))
        {
            GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            format(string, sizeof(string), "%s %s Dominaram o Shopping Center!",playername,NomeORGTr(OrgID));
            SendClientMessageToAll(OrgCor(OrgID), string);
            SendClientMessage(playerid, COLOR_GRAD5, "Você dominou o Shopping Center, Mantenha ele em Controle e Ganhará Grana.");
            GangZoneStopFlashForAll(GZShop);
            GangZoneShowForAll(GZShop,OrgCor(OrgID));
            Dominando[playerid] = 0;
            ProvocoShop[playerid] = 0;
            GuerranoShop = 0;
            donoShop = OrgID;
            KillTimer(TempoGuerraShop);
            return 1;
        }
        else
        {
            SendClientMessage(playerid, COR_GRO, "Você não está no Shopping Center.");
            Dominando[playerid] = 0;
            GangZoneStopFlashForAll(GZShop);
            GangZoneShowForAll(GZShop, 0xFFFFFF96);
            ProvocoShop[playerid] = 0;
            GuerranoShop = 0;
            donoShop = 0;
            KillTimer(TempoGuerraShop);
            return 1;
        }
    }
    return 1;
}
public GuerraCemiterio(playerid)
{
        new string[128], playername[MAX_PLAYER_NAME], OrgID = GetPlayerOrg(playerid);
        if(ProvocoCemiterio[playerid] == 1)
        {
            if(IsPlayerInCemiterio(playerid))
            {
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s Dominaram o Cemitério!",playername,NomeORGTr(OrgID));
                SendClientMessageToAll(OrgCor(OrgID), string);
                SendClientMessage(playerid, COLOR_GRAD5, "Você dominou o Cemitério, Mantenha ele em Controle e Ganhará Grana.");
                GangZoneStopFlashForAll(GZCemiterio);
                GangZoneShowForAll(GZCemiterio,OrgCor(OrgID));
                Dominando[playerid] = 0;
                ProvocoCemiterio[playerid] = 0;
                GuerranoCemiterio = 0;
                donoCemiterio = OrgID;
                KillTimer(TempoGuerraCemiterio);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COR_HELLS, "Você não está no Cemiterio.");
                Dominando[playerid] = 0;
                GangZoneStopFlashForAll(GZCemiterio);
                GangZoneShowForAll(GZCemiterio, 0xFFFFFF96);
                ProvocoCemiterio[playerid] = 0;
                GuerranoCemiterio = 0;
                donoCemiterio = 0;
                KillTimer(TempoGuerraCemiterio);
                return 1;
            }
        }
        return 1;
}
public GuerraPosto(playerid)
{
        new string[128], playername[MAX_PLAYER_NAME], OrgID = GetPlayerOrg(playerid);
        if(ProvocoPosto[playerid] == 1)
        {
            if(IsPlayerInPosto(playerid))
            {
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s Dominaram o Posto de Gasolina Abandonado!",playername,NomeORGTr(OrgID));
                SendClientMessageToAll(OrgCor(OrgID), string);
                SendClientMessage(playerid, COLOR_GRAD5, "Você dominou o Posto de Gasolina, Mantenha ele em Controle e Ganhe Grana e Gasolina.");
                GangZoneStopFlashForAll(GZPosto);
                GangZoneShowForAll(GZPosto,OrgCor(OrgID));
                Dominando[playerid] = 0;
                ProvocoPosto[playerid] = 0;
                GuerranoPosto = 0;
                donoPosto = OrgID;
                KillTimer(TempoGuerraPosto);
                TomouPosto = 1;
                SetTimerEx("TomarNovamente",700000,0,"d",playerid);
                a3d();
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COR_HELLS, "Você não está no Posto de Gasolina.");
                Dominando[playerid] = 0;
                GangZoneStopFlashForAll(GZPosto);
                GangZoneShowForAll(GZPosto, 0xFFFFFF96);
                ProvocoPosto[playerid] = 0;
                GuerranoPosto = 0;
                donoPosto = 0;
                KillTimer(TempoGuerraPosto);
                TomouPosto = 0;   //desbuga o tempo '-' XD
                a3d();
                return 1;
            }
        }
        return 1;
}
public GuerraGamer(playerid)
{
        new string[128], playername[MAX_PLAYER_NAME], OrgID = GetPlayerOrg(playerid);
        if(ProvocoGamer[playerid] == 1)
        {
            if(IsPlayerInGamer(playerid))
            {
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s Tomaram o Palominio Creek!",playername,NomeORGTr(OrgID));
                SendClientMessageToAll(OrgCor(OrgID), string);
                SendClientMessage(playerid, COLOR_GRAD5, "Você tomou o Palominio Creek, Mantenha ele sobre Controle e Ganhará Grana.");
                Dominando[playerid] = 0;
                ProvocoGamer[playerid] = 0;
                GuerranoGamer = 0;
                DonoGamer = OrgID;
                KillTimer(TempoGuerraGamer);
                TomouGamer = 1;
                SetTimerEx("TomarNovamente2",700000,0,"d",playerid);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COR_HELLS, "Você não está no Palominio Creek.");
                Dominando[playerid] = 0;
                ProvocoGamer[playerid] = 0;
                GuerranoGamer = 0;
                DonoGamer = 0;
                KillTimer(TempoGuerraGamer);
                TomouGamer = 0;   //desbuga o tempo '-' XD
                return 1;
            }
        }
        return 1;
}
public GuerraPark(playerid)
{
        new string[128], playername[MAX_PLAYER_NAME], OrgID = GetPlayerOrg(playerid);
        if(ProvocoPark[playerid] == 1)
        {
            if(IsPlayerInPark(playerid))
            {
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s Dominaram o Parque Gleen!",playername,NomeORGTr(OrgID));
                SendClientMessageToAll(OrgCor(OrgID), string);
                SendClientMessage(playerid, COLOR_GRAD5, "Você dominou o Parque Gleen, Mantenha ele em Controle e Ganhará Grana.");
                GangZoneStopFlashForAll(GZPark);
                GangZoneShowForAll(GZPark,OrgCor(OrgID));
                Dominando[playerid] = 0;
                ProvocoPark[playerid] = 0;
                GuerranoPark = 0;
                donoPark = OrgID;
                KillTimer(TempoGuerraPark);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COR_GRO, "Você não está no Parque Gleen.");
                Dominando[playerid] = 0;
                GangZoneStopFlashForAll(GZPark);
                GangZoneShowForAll(GZPark, 0xFFFFFF96);
                ProvocoPark[playerid] = 0;
                GuerranoPark = 0;
                donoPark = 0;
                KillTimer(TempoGuerraPark);
                return 1;
            }
        }
        return 1;
}
public GuerraSkate(playerid)
{
        new string[128], playername[MAX_PLAYER_NAME], OrgID = GetPlayerOrg(playerid);
        if(ProvocoSkate[playerid] == 1)
        {
            if(IsPlayerInSkate(playerid))
            {
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s Dominaram a Pista de Skate!",playername,NomeORGTr(OrgID));
                SendClientMessageToAll(OrgCor(OrgID), string);
                SendClientMessage(playerid, COLOR_GRAD5, "Você dominou a pista de skate, Mantenha ele em Controle e Ganhará Grana.");
                GangZoneStopFlashForAll(GZSkate);
                GangZoneShowForAll(GZSkate,OrgCor(OrgID));
                Dominando[playerid] = 0;
                ProvocoSkate[playerid] = 0;
                GuerranoSkate = 0;
                donoskate = OrgID;
                KillTimer(TempoGuerraSkate);
                return 1;
            }
            else
            {
                SendClientMessage(playerid, COR_GRO, "Você não está na pista de skate.");
                Dominando[playerid] = 0;
                GangZoneStopFlashForAll(GZSkate);
                GangZoneShowForAll(GZSkate, 0xFFFFFF96);
                ProvocoSkate[playerid] = 0;
                GuerranoSkate = 0;
                donoskate = 0;
                KillTimer(TempoGuerraSkate);
                return 1;
            }
        }
        return 1;
}
public SBan(playerid, string[], string2[])
{
    new arquivo[64], tmp[20], tmp2[20], stri[64], ip[16];
    GetPlayerIp(playerid, ip, sizeof ip);
    format(arquivo, sizeof(arquivo), "Banidos/%s.ini",PlayerName(playerid));
    getdate(Ano, Mes, Dia);
    format(tmp, 20, "%d/%d/%d", Dia, Mes, Ano);
    gettime(Hora, Minuto, Segundo);
    format(tmp2, 20, "%d:%d:%d", Hora, Minuto, Segundo);
    format(gstring,sizeof(gstring), "[%d/%d/%d] [%d:%d:%d] %s IP:%s foi banido pelo admin %s, motivo: %s", v[2], v[1], v[0], v[3], v[4], v[5], PlayerName(playerid),
    ip, string2, string);
    SBanLog(gstring);
    if(dini_Exists(arquivo))
    {
        StatusPlayer(5, playerid);
    }
    else
    {
        dini_Create(arquivo);
        dini_Set(arquivo,"Motivo",string);
        dini_Set(arquivo,"Admin",string2);
        dini_Set(arquivo,"Data",tmp);
        dini_Set(arquivo,"Hora",tmp2);
        dini_Set(arquivo,"IP",ip );
        format(stri, sizeof(stri), "IPsBanidos/%s.ini",ip);
        dini_Create(stri);
        dini_Set(stri,"Motivo",string);
        dini_Set(stri,"Admin",string2);
        dini_Set(stri,"Data",tmp);
        dini_Set(stri,"Hora",tmp2);
        dini_Set(stri,"Nick",PlayerName(playerid));
        StatusPlayer(5, playerid);
    }
    return 1;
}

public GranaTerritorios()
{
    new string[128];
    for(new i=0; i<MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(PlayerInfo[i][pMembro] != 0 || PlayerInfo[i][pLider] != 0)
            {
                new RandInicio = 600;
                new RandPark = RandInicio + random(GranadoPark);
                new RandCem = RandInicio + random(GranadoCemiterio);
                new RandSkate = RandInicio + random(GranadoSkate);
                new Randestacao = RandInicio + random(GranadaEstacao);
                new RandCasa = RandInicio + random(GranadoCasarao);
                new RandPosto = RandInicio + random(GranadoPosto);
                new RandShop = RandInicio + random(GranadoShop);
                if(donoPark == GetPlayerOrg(i)) // GROOVE
                {
                    GivePlayerMoney(i, RandPark);
                    format(string, sizeof(string), "Agência %s: Você recebeu R$%d, Por manter o Parque Gleen Sobre Controle.",NomeORG(i),RandPark);
                    SendClientMessage(i, 0x77EEA1FF, string);
                }
                if(donoCemiterio == GetPlayerOrg(i)) // GROOVE
                {
                    GivePlayerMoney(i, RandCem);
                    format(string, sizeof(string), "Agência %s: Você recebeu R$%d, Por manter o Cemitério Sobre Controle.",NomeORG(i),RandCem);
                    SendClientMessage(i, 0x77EEA1FF, string);
                }
                if(donoskate == GetPlayerOrg(i)) // GROOVE
                {
                    GivePlayerMoney(i, RandSkate);
                    format(string, sizeof(string), "Agência %s: Você recebeu R$%d, Por manter a Pista de Skate Sobre Controle.",NomeORG(i),RandSkate);
                    SendClientMessage(i, 0x77EEA1FF, string);
                }
                if(donoestacao == GetPlayerOrg(i)) // GROOVE
                {
                    GivePlayerMoney(i, Randestacao);
                    format(string, sizeof(string), "Agência %s: Você recebeu R$%d, Por manter a Estação Sobre Controle.",NomeORG(i),Randestacao);
                    SendClientMessage(i, 0x77EEA1FF, string);
                }
                if(donocasarao == GetPlayerOrg(i)) // GROOVE
                {
                    GivePlayerMoney(i, RandCasa);
                    format(string, sizeof(string), "Agência %s: Você recebeu R$%d, Por manter o Casarão Sobre Controle.",NomeORG(i),RandCasa);
                    SendClientMessage(i, 0x77EEA1FF, string);
                }
                if(donoPosto == GetPlayerOrg(i)) // GROOVE
                {
                    GivePlayerMoney(i, RandPosto);
                    format(string, sizeof(string), "Agência %s: Você recebeu R$%d, Por manter o Posto de Gasolina Sobre Controle.",NomeORG(i),RandPosto);
                    SendClientMessage(i, 0x77EEA1FF, string);
                }
                if(donoShop == GetPlayerOrg(i)) // GROOVE
                {
                    GivePlayerMoney(i, RandShop);
                    format(string, sizeof(string), "Agência %s: Você recebeu R$%d, Por manter o Shopping Center Sobre Controle.",NomeORG(i),RandShop);
                    SendClientMessage(i, 0x77EEA1FF, string);
                }
            }
        }
    }
    return 1;
}
public LoginAgora(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        logouagora[playerid] = 0;
        KillTimer(TempoLogin);
    }
}
public CorridaOni()
{
    if(pcorridaoni > 0)
    {
            pcorridaoni = 0;
    }
}
public hbomba()
{
    if(phbomba > 0)
    {
            phbomba = 0;
    }
}
public cbomba()
{
    if(pcbomba > 0)
    {
            pcbomba = 0;
    }
}
public Sinc()
{
    if(psinc > 0)
    {
            psinc = 0;
    }
}
public AdmCheck(playerid)
{
    if(PlayerInfo[playerid][pAdmin] != 0)
    {
        new idx = 0;
        vinnyAdmin[playerid] = 0;
        while(idx < sizeof(AdmInfo))
        {
            if(strcmp(AdmInfo[idx][gMembro],PlayerName(playerid), true ) == 0 )
            {
                vinnyAdmin[playerid] ++;
            }
            idx++;
        }
        if(vinnyAdmin[playerid] == 0)
        {
            //SendClientMessage(playerid, 0xFF8080AA,"[BPG]: {FFFFFF}Você Não faz mais Parte da Administração.");
            PlayerInfo[playerid][pAdmin] = 0;
        }
        else if(PlayerInfo[playerid][pAdmin] != 3000)
        {
            ModoTrabalho(playerid, 1);
        }
    }
    return 0;
}
public HelpCheck(playerid)
{
    if(PlayerInfo[playerid][pHelper] != 0)
    {
        new idx = 0;
        vinnyHelper[playerid] = 0;
        while(idx < sizeof(HelpInfo))
        {
            if(strcmp(HelpInfo[idx][gMembro],PlayerName(playerid), true ) == 0 )
            {
                vinnyHelper[playerid] ++;
            }
            idx++;
        }
        if(vinnyHelper[playerid] == 0)
        {
            //SendClientMessage(playerid, 0xFF8080AA,"[BPG]: {FFFFFF}Você Não faz mais Parte dos Helpers.");
            PlayerInfo[playerid][pHelper] = 0;
        }
        else
        {
            format(gstring, sizeof(gstring), "[BPG SERVER]:{FFFFFF} Você Logou Como Helper Nivel: {0000FF}%d.",PlayerInfo[playerid][pHelper]);
            SendClientMessage(playerid, 0x0000FFAA,gstring);
        }
    }
    return 0;
}
public CheckOwnerb(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        // Empresas Com interiores
            for(new i = 0; i < sizeof(BizzInfo); i++)
            {
                new playername[MAX_PLAYER_NAME];
                GetPlayerName(playerid,playername,sizeof(playername));
                if(strcmp(playername,BizzInfo[i][bOwner],true)==0)
                {
                    PlayerInfo[playerid][pPbiskey] = i;
                    return 1;
                }
            }
            // Empresas sem interiores
            for(new i = 0; i < sizeof(SBizzInfo); i++)
            {
                new playername[MAX_PLAYER_NAME];
                GetPlayerName(playerid,playername,sizeof(playername));
                if(strcmp(playername,SBizzInfo[i][sbOwner],true)==0)
                {
                    PlayerInfo[playerid][pPbiskey] = i+100;
                    return 1;
                }
            }
            PlayerInfo[playerid][pPbiskey] = 9999;
            return 1;
    }
    return 1;
}
public CheckOwnerh(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        // Casas
        for(new h = 0; h < sizeof(HouseInfo); h++)
        {
            new playername[MAX_PLAYER_NAME];
            GetPlayerName(playerid,playername,sizeof(playername));
            if(strcmp(playername,HouseInfo[h][hOwner],true)==0)
            {
                PlayerInfo[playerid][pPHousekey] = h;
                PlayerInfo[playerid][pPHouseCarkey] = HouseInfo[h][hVeiculo];
                return 1;
            }
        }
        PlayerInfo[playerid][pPHousekey] = 9999;
        return 1;
    }
    return 1;
}

public Administrador(playerid)
{
    if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pAdmin] > 0 && admtrampando[playerid] > 0)
    {
        ResetPlayerWeapons(playerid);
        SetPlayerHealth(playerid,1500);
    }
}
public Helpert(playerid)
{
    if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pHelper] > 0 && helptrampando[playerid] > 0)
    {
        ResetPlayerWeapons(playerid);
        SetPlayerHealth(playerid,1500);
    }
}
public Sincronizar(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        SetPlayerPos(playerid,xx[playerid],yy[playerid],zz[playerid]);
        SetPlayerFacingAngle(playerid,FaceAngle[playerid]);
        SetPlayerHealth(playerid,PlayerHPP[playerid]);
        SetPlayerVirtualWorld(playerid,virt[playerid]);
        SetPlayerInterior(playerid,interior[playerid]);
        SetPlayerSkinEx(playerid,skinneg[playerid]);
        SetPlayerArmour(playerid,APP[playerid]);
        ResetPlayerWeapons(playerid);
        GivePlayerWeapon(playerid,gunsinc[1][playerid],ammoo[1][playerid]);
        GivePlayerWeapon(playerid,gunsinc[2][playerid],ammoo[2][playerid]);
        GivePlayerWeapon(playerid,gunsinc[3][playerid],ammoo[3][playerid]);
        GivePlayerWeapon(playerid,gunsinc[4][playerid],ammoo[4][playerid]);
        GivePlayerWeapon(playerid,gunsinc[5][playerid],ammoo[5][playerid]);
        GivePlayerWeapon(playerid,gunsinc[6][playerid],ammoo[6][playerid]);
        GivePlayerWeapon(playerid,gunsinc[7][playerid],ammoo[7][playerid]);
        GivePlayerWeapon(playerid,gunsinc[8][playerid],ammoo[8][playerid]);
        GivePlayerWeapon(playerid,gunsinc[9][playerid],ammoo[9][playerid]);
        GivePlayerWeapon(playerid,gunsinc[10][playerid],ammoo[10][playerid]);
        GivePlayerWeapon(playerid,gunsinc[11][playerid],ammoo[11][playerid]);
        GivePlayerWeapon(playerid,gunsinc[12][playerid],ammoo[12][playerid]);
        if(vehicledd[playerid] == 1) { PutPlayerInVehicle(playerid,VehicleIDD[playerid],1); vehicledd[playerid] = 0; }
        sincronizando[playerid] = 0;
        KillTimer(TempoSinc);
        SendClientMessage(playerid,COLOR_YELLOW," Sincronizado com sucesso!");
    }
}
public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
    new string[128];
    new pstring[128];
    new plname[MAX_PLAYER_NAME];
    if(gPlayerLogged[playerid] == 0) { return SendClientMessage(playerid, 0xFF8080FF, "[BPG ERRO] Registre-se ou Logue no Servidor."); }
    vinnyInfo[playerid][Tels] = 0;
    GetPlayerName(clickedplayerid, plname, sizeof(plname));
    format(string, sizeof(string), "Menu do(a) %s", plname);
    format(pstring, sizeof(pstring), "Ligar para %s\nMandar SMS para %s", plname,plname);
    ShowPlayerDialog(playerid, 3, DIALOG_STYLE_LIST, string, pstring, "Confirmar", "Cancelar");
    vinnyInfo[playerid][Tels] = PlayerInfo[clickedplayerid][pPnumber];
    return 1;
}
public UsarNovamente(playerid)
{
    UsouComando[playerid] = 0;
}
public BaterNovamente(playerid)
{
    BateuCartao[playerid] = 0;
}
public TomarNovamente()
{
    TomouPosto = 0;
}
public TomarNovamente2()
{
    TomouGamer = 0;
}
public RemovePlayerWeapon(playerid, weaponid)
{
    new plyWeapons[12] = 0;
    new plyAmmo[12] = 0;
    for(new slot = 0; slot != 12; slot++)
    {
        new wep, ammo;
        GetPlayerWeaponData(playerid, slot, wep, ammo);

        if(wep != weaponid && ammo != 0)
        {
            GetPlayerWeaponData(playerid, slot, plyWeapons[slot], plyAmmo[slot]);
        }
    }

    ResetPlayerWeapons(playerid);
    for(new slot = 0; slot != 12; slot++)
    {
        if(plyAmmo[slot] != 0)
        {
            GivePlayerWeapon(playerid, plyWeapons[slot], plyAmmo[slot]);
        }
    }
    return 1;
}
public ReduceTimer(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(ReduceTime[playerid] == 1)
        {
            ReduceTime[playerid] = 0;
        }
    }
}
public VoltarBombas(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(SemBombas[playerid] == 1)
        {
            SemBombas[playerid] = 0;
        }
    }
}
stock BanTemp( playerid, razao[], tempo, admin ){
    new
        file[ 64 ],
        pName[ 25 ],
        time[ 3 ],
        yday[ 3 ],
        str[ 50 ]
    ;
    GetPlayerName( playerid, pName, sizeof pName );
    format( file, sizeof file, "TempBan/%s.ini", pName );
    if( !DOF2_FileExists( file ) ){
        DOF2_CreateFile( file );
        DOF2_SetString( file, "Nome", pName );
        DOF2_SetString( file, "Razao", razao );
        DOF2_SetInt( file, "Tempo", gettime() + tempo );
        GetPlayerName( admin, pName, sizeof pName );
        DOF2_SetString( file, "Administrador", pName );
        getdate( yday[ 0 ], yday[ 1 ], yday[ 2 ] );
        gettime( time[ 0 ], time[ 1 ], time[ 2 ] );
        format( str, sizeof str, "%02d|%02d|%04d - %02d:%02d:%02d ", yday[ 2 ], yday[ 1 ], yday[ 0 ], time[ 0 ], time[ 1 ], time[ 2 ] );
        DOF2_SetString( file, "Data", str );
        DOF2_SaveFile();
    }
    Kick( playerid );
}
stock AdminCheckBanTemp( playerid, pName[] ){

    new
        file[ 64 ],
        str[ 350 ],
        dias,
        horas,
        minutos
    ;
    format( file, sizeof file, "TempBan/%s.ini", pName );
    if( DOF2_FileExists( file ) ){
        if( gettime() < DOF2_GetInt( file, "Tempo" ) ){
            dias = ( DOF2_GetInt( file, "Tempo" ) - gettime() ) / 86400;
            horas = ( DOF2_GetInt( file, "Tempo" ) - gettime() - ( dias * 86400 ) ) / 3600;
            minutos = ( DOF2_GetInt( file, "Tempo" ) - gettime() - ( horas * 3600 ) ) / 60;
            if( dias > 0 ){
                format( str, sizeof str, "{FFFFFF}Sistema de Ban Temporário\n\n{CD0000}Conta: {FFFFFF}%s\n{CD0000}Razão: {FFFFFF}%s\n{CD0000}Administrador: {FFFFFF}%s\n{CD0000}Tempo restante: {FFFFFF}%02d dia(s) - %02dhora(s)\n{CD0000}Data do ban: {FFFFFF}%s", DOF2_GetString( file, "Nome" ), DOF2_GetString( file, "Razao" ), DOF2_GetString( file, "Administrador" ), dias, horas, DOF2_GetString( file, "Data" ) );
            }
            else{
                if( horas > 0 ){
                    format( str, sizeof str, "{FFFFFF}Sistema de Ban Temporário\n\n{CD0000}Conta: {FFFFFF}%s\n{CD0000}Razão: {FFFFFF}%s\n{CD0000}Administrador: {FFFFFF}%s\n{CD0000}Tempo restante: {FFFFFF}%02dhora(s)\n{CD0000}Data do ban: {FFFFFF}%s", DOF2_GetString( file, "Nome" ), DOF2_GetString( file, "Razao" ), DOF2_GetString( file, "Administrador" ), horas, DOF2_GetString( file, "Data" ) );
                }
                else{
                    format( str, sizeof str, "{FFFFFF}Sistema de Ban Temporário\n\n{CD0000}Conta: {FFFFFF}%s\n{CD0000}Razão: {FFFFFF}%s\n{CD0000}Administrador: {FFFFFF}%s\n{CD0000}Tempo restante: {FFFFFF}%02dminuto(s)\n{CD0000}Data do ban: {FFFFFF}%s", DOF2_GetString( file, "Nome" ), DOF2_GetString( file, "Razao" ), DOF2_GetString( file, "Administrador" ), minutos, DOF2_GetString( file, "Data" ) );
                }
            }
            ShowPlayerDialog( playerid, 1654, DIALOG_STYLE_MSGBOX,"{CD0000}Temp Ban", str, "BPG", "" );
        }
        else DOF2_RemoveFile( file );
    }
}
stock CheckBanTemp( playerid ){

    new
        file[ 64 ],
        pName[ 25 ],
        str[ 350 ],
        dias,
        horas,
        minutos
    ;
    GetPlayerName( playerid, pName, sizeof pName );
    format( file, sizeof file, "TempBan/%s.ini", pName );
    if( DOF2_FileExists( file ) ){
        if( gettime() < DOF2_GetInt( file, "Tempo" ) ){
            dias = ( DOF2_GetInt( file, "Tempo" ) - gettime() ) / 86400;
            horas = ( DOF2_GetInt( file, "Tempo" ) - gettime() - ( dias * 86400 ) ) / 3600;
            minutos = ( DOF2_GetInt( file, "Tempo" ) - gettime() - ( horas * 3600 ) ) / 60;
            if( dias > 0 ){
                format( str, sizeof str, "{FFFFFF}Sua conta esta temporariamente {CD0000}banida!\n\nConta: {FFFFFF}%s\n{CD0000}Razão: {FFFFFF}%s\n{CD0000}Administrador: {FFFFFF}%s\n{CD0000}Tempo restante: {FFFFFF}%02d dia(s) - %02dhora(s)\n{CD0000}Data do ban: {FFFFFF}%s", DOF2_GetString( file, "Nome" ), DOF2_GetString( file, "Razao" ), DOF2_GetString( file, "Administrador" ), dias, horas, DOF2_GetString( file, "Data" ) );
            }
            else{
                if( horas > 0 ){
                    format( str, sizeof str, "{FFFFFF}Sua conta esta temporariamente {CD0000}banida!\n\nConta: {FFFFFF}%s\n{CD0000}Razão: {FFFFFF}%s\n{CD0000}Administrador: {FFFFFF}%s\n{CD0000}Tempo restante: {FFFFFF}%02dhora(s)\n{CD0000}Data do ban: {FFFFFF}%s", DOF2_GetString( file, "Nome" ), DOF2_GetString( file, "Razao" ), DOF2_GetString( file, "Administrador" ), horas, DOF2_GetString( file, "Data" ) );
                }
                else{
                    format( str, sizeof str, "{FFFFFF}Sua conta esta temporariamente {CD0000}banida!\n\nConta: {FFFFFF}%s\n{CD0000}Razão: {FFFFFF}%s\n{CD0000}Administrador: {FFFFFF}%s\n{CD0000}Tempo restante: {FFFFFF}%02dminuto(s)\n{CD0000}Data do ban: {FFFFFF}%s", DOF2_GetString( file, "Nome" ), DOF2_GetString( file, "Razao" ), DOF2_GetString( file, "Administrador" ), minutos, DOF2_GetString( file, "Data" ) );
                }
            }
            ShowPlayerDialog( playerid, 1654, DIALOG_STYLE_MSGBOX,"{CD0000}Temp Ban", str, "BPG", "" );
            Kick( playerid );
        }
        else DOF2_RemoveFile( file );
    }
}
public PresoMulta(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(TicketOffer[playerid] < 999)
        {
            TicketOffer[playerid] = 999;
            TicketMoney[playerid] = 0;
            PlayerInfo[playerid][pJailed] = 1;
            SetPlayerWantedLevel(playerid, 0);
            WantedPoints[playerid] = 0;
            SetPlayerWantedLevel(playerid, 0);
            PlayerInfo[playerid][pJailTime] = 320;
            //ProcuradoPlayer(playerid);
        }
    }
}
public OnPlayerExitedMenu(playerid)
{
    TogglePlayerControllable(playerid, 1);
    return 1;
}
//=================[NOVO ROUBAR]================
public RouboBanco(playerid)
{
    KillTimer(tempobanco);
    if(!PlayerToPoint(8.0,playerid,2306.5127,-6.1166,26.7422))
    {
        //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayGamer Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
        format(gstring, sizeof(gstring), "%s e os %s não conseguiram roubar o cofre do Banco! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
        SendClientMessageToAll(GetPlayerColor(playerid), gstring);
        SendClientMessage(playerid, COLOR_GREY, "Você não está no cofre do banco.");
        ProvocoBanco[playerid] = 0; roubando[playerid] = 0; roubobanco = 0; KillTimer(tempobanco); temporoubobanco = 0;
        return 1;
    }
    ForPlayers(i)
    {

        if(PlayerToPoint(10.0,i,2306.5127,-6.1166,26.7422))
        {
            new var032=0;
            if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
            else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
            if(ProvocoBanco[playerid] == 1)
            {
                //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayGamer Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
                format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar o cofre do Banco! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
                SendClientMessageToAll(GetPlayerColor(playerid), gstring);
                roubando[playerid] = 0; roubobanco = 0; ProvocoBanco[playerid] = 0;
            }
            if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
            {
                SetPlayerCriminal(i,255, "Assalto ao Banco");
                GivePlayerMoney(i, GranaBanco);
                format(gstring, sizeof(gstring), "Você e os %s roubaram $%d do cofre do Banco!",NomeORG(playerid), GranaBanco);
                SendClientMessage(i, COLOR_YELLOW, gstring);
                a3d();
            }
        }
    }
    return 1;
}
public RouboLot(playerid)
{
    KillTimer(tempolot);
    if(!PlayerToPoint(8.0,playerid,820.6042,8.3990,1004.1962))
    {
        //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayGamer Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
        format(gstring, sizeof(gstring), "%s e os %s não conseguiram roubar o cofre da Lotérica! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
        SendClientMessageToAll(GetPlayerColor(playerid), gstring);
        SendClientMessage(playerid, COLOR_GREY, "Você não está no cofre da Lotérica.");
        ProvocoLot[playerid] = 0; roubando[playerid] = 0; roubolot = 0; KillTimer(tempolot); temporoubolot = 0;
        return 1;
    }
    ForPlayers(i)
    {

        if(PlayerToPoint(5.0,i,820.6042,8.3990,1004.1962))
        {
            new var032=0;
            if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
            else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
            if(ProvocoLot[playerid] == 1)
            {
                //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayGamer Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
                format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar o cofre da Lotérica! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
                SendClientMessageToAll(GetPlayerColor(playerid), gstring);
                roubando[playerid] = 0; roubolot = 0; ProvocoLot[playerid] = 0;
            }
            if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
            {
                SetPlayerCriminal(i,255, "Assalto a Lotérica");
                GivePlayerMoney(i, GranaLot);
                format(gstring, sizeof(gstring), "Você e os %s roubaram $%d do cofre da Lotérica!",NomeORG(playerid), GranaLot);
                SendClientMessage(i, COLOR_YELLOW, gstring);
                a3d();
            }
        }
    }
    return 1;
}
public RouboPosto(playerid)
{
    KillTimer(tempoposto);
    if(!PlayerToPoint(8.0,playerid,381.5648,-188.1646,1000.6328))
    {
        //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayGamer Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
        format(gstring, sizeof(gstring), "%s e os %s não conseguiram roubar o cofre do Posto de Gasolina Abandonado! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
        SendClientMessageToAll(GetPlayerColor(playerid), gstring);
        SendClientMessage(playerid, COLOR_GREY, "Você não está no cofre do Posto.");
        ProvocoPostoGas[playerid] = 0; roubando[playerid] = 0; rouboposto = 0; KillTimer(tempoposto); temporouboposto = 0;
        return 1;
    }
    ForPlayers(i)
    {

        if(PlayerToPoint(5.0,i,381.5648,-188.1646,1000.6328))
        {
            new var032=0;
            if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
            else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
            if(ProvocoPostoGas[playerid] == 1)
            {
                //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayGamer Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
                format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar o cofre do Posto de Gasolina Abandonado! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
                SendClientMessageToAll(GetPlayerColor(playerid), gstring);
                roubando[playerid] = 0; rouboposto = 0; ProvocoPostoGas[playerid] = 0;
            }
            if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
            {
                SetPlayerCriminal(i,255, "Assalto ao Posto");
                GivePlayerMoney(i, GranaPosto);
                format(gstring, sizeof(gstring), "Você e os %s roubaram $%d do cofre do Posto Abandonado!",NomeORG(playerid), GranaPosto);
                SendClientMessage(i, COLOR_YELLOW, gstring);
                a3d();
            }
        }
    }
    return 1;
}
public RouboLoja1(playerid)
{
    KillTimer(tempoloja1);
    if(!PlayerToPoint(8.0,playerid,2169.1516,1589.9265,999.9713))
    {
        //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayGamer Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
        format(gstring, sizeof(gstring), "%s e os %s não conseguiram roubar a Loja de Armas 1! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
        SendClientMessageToAll(GetPlayerColor(playerid), gstring);
        SendClientMessage(playerid, COLOR_GREY, "Você não está na Loja de Armas 1.");
        ProvocoLoja1[playerid] = 0; roubando[playerid] = 0; rouboloja1 = 0; KillTimer(tempoloja1); temporouboloja1 = 0;
        return 1;
    }
    ForPlayers(i)
    {
        if(PlayerToPoint(8.0,i,2169.1516,1589.9265,999.9713))
        {
            new var032=0;
            if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
            else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
            if(ProvocoLoja1[playerid] == 1)
            {
                //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayGamer Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
                format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar a Loja de Armas 1! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
                SendClientMessageToAll(GetPlayerColor(playerid), gstring);
                roubando[playerid] = 0; rouboloja1 = 0; ProvocoLoja1[playerid] = 0;
            }

            if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
            {
                SetPlayerCriminal(i,255, "Assalto a Loja de Armas 1");
                GivePlayerWeapon(i, 4, 1);
                GivePlayerWeapon(i, 10, 100);
                GivePlayerWeapon(i, 17, 100);
                GivePlayerWeapon(i, 24, 100);
                GivePlayerWeapon(i, 25, 100);
                GivePlayerWeapon(i, 31, 100);
                GivePlayerWeapon(i, 29, 100);
                GivePlayerMoney(i, GranaLoja1);
                format(gstring, sizeof(gstring), "Você e os %s roubaram R$%d da Loja de Armas 1!",NomeORG(playerid), GranaLoja1);
                SendClientMessage(i, COLOR_YELLOW, gstring);
                a3d();
            }
        }
    }
    return 1;
}
public RouboLoja2(playerid)
{
    KillTimer(tempoloja2);
    if(!PlayerToPoint(8.0,playerid,451.3090,-79.8603,999.5547))
    {
        //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayGamer Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
        format(gstring, sizeof(gstring), "%s e os %s não conseguiram roubar a Loja de Armas 2! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
        SendClientMessageToAll(GetPlayerColor(playerid), gstring);
        SendClientMessage(playerid, COLOR_GREY, "Você não está na Loja de Armas 2.");
        ProvocoLoja2[playerid] = 0; roubando[playerid] = 0; rouboloja2 = 0; KillTimer(tempoloja2); temporouboloja2 = 0;
        return 1;
    }
    ForPlayers(i)
    {
        if(PlayerToPoint(8.0,i,451.3090,-79.8603,999.5547))
        {
            new var032=0;
            if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
            else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
            if(ProvocoLoja2[playerid] == 1)
            {
                //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayGamer Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
                format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar a Loja de Armas 2! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
                SendClientMessageToAll(GetPlayerColor(playerid), gstring);
                roubando[playerid] = 0; rouboloja2 = 0; ProvocoLoja2[playerid] = 0;
            }

            if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
            {
                SetPlayerCriminal(i,255, "Assalto a Loja de Armas 2");
                GivePlayerWeapon(i, 4, 1);
                GivePlayerWeapon(i, 10, 100);
                GivePlayerWeapon(i, 17, 100);
                GivePlayerWeapon(i, 24, 100);
                GivePlayerWeapon(i, 25, 100);
                GivePlayerWeapon(i, 31, 100);
                GivePlayerWeapon(i, 29, 100);
                GivePlayerMoney(i, GranaLoja2);
                format(gstring, sizeof(gstring), "Você e os %s roubaram R$%d da Loja de Armas 2!",NomeORG(playerid), GranaLoja2);
                SendClientMessage(i, COLOR_YELLOW, gstring);
                a3d();
            }
        }
    }
    return 1;
}
public RouboPrefe(playerid)
{
    KillTimer(tempoprefe);
    if(!PlayerToPoint(8.0,playerid,354.6608,172.0170,1008.3802))
    {
        //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayGamer Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
        format(gstring, sizeof(gstring), "%s e os %s não conseguiram roubar a Prefeitura! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
        SendClientMessageToAll(GetPlayerColor(playerid), gstring);
        SendClientMessage(playerid, COLOR_GREY, "Você não está na Prefeitura.");
        return 1;
    }
    ForPlayers(i)
    {
        if(PlayerToPoint(8.0,i,354.6608,172.0170,1008.3802))
        {
            new var032=0;
            if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
            else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
            if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
            {
                SetPlayerCriminal(i,255, "Assalto a Prefeitura");
                GivePlayerMoney(i, GranaPref);
                format(gstring, sizeof(gstring), "Você e os %s roubaram R$%d da Prefeitura!",NomeORG(playerid), GranaPref);
                SendClientMessage(i, COLOR_YELLOW, gstring);
                a3d();
            }
        }
    }
    return 1;
}
public Aroubo()
{
    temporoubobanco = 0;
    GranaBanco = 10000 + random(8000);
    SendClientMessageToAll(0x1583F0FF, "[PlayGamer News] O Banco Central de Los Santos se Recuperou do Último Roubo.");
    a3d();
}
public Aroubo2()
{
    temporoubolot = 0;
    GranaLot = 3000 + random(9000);
    SendClientMessageToAll(0x1583F0FF, "[PlayGamer News] A Loteria de Los Santos se Recuperou do Último Roubo.");
    a3d();
}
public Aroubo6()
{
    temporouboposto = 0;
    GranaPosto = 2000 + random(8000);
    SendClientMessageToAll(0x1583F0FF, "[PlayGamer News] O Posto de Gasolina se Recuperou do Último Roubo.");
    a3d();
}
public Aroubo3()
{
    temporouboloja1 = 0;
    GranaLoja1 = 2000 + random(7000);
    SendClientMessageToAll(0x1583F0FF, "[PlayGamer News] A Loja de Armas 1 se Recuperou do Último Roubo.");
    a3d();
}
public Aroubo4()
{
    temporouboloja2 = 0;
    GranaLoja2 = 1500 + random(7000);
    SendClientMessageToAll(0x1583F0FF, "[PlayGamer News] A Loja de Armas 2 se Recuperou do Último Roubo.");
    a3d();
}
public OnObjectMoved(objectid)
{
    if(objectid==FerrisWheelObjects[10])SetTimer("RotateFerrisWheel",FERRIS_WHEEL_WAIT_TIME,false);
    return 1;
}
public RotateFerrisWheel()
{
    FerrisWheelAngle+=36;
    if(FerrisWheelAngle>=360)FerrisWheelAngle=0;
    if(FerrisWheelAlternate)FerrisWheelAlternate=0;
    else FerrisWheelAlternate=1;
    new Float:FerrisWheelModZPos=0.0;
    if(FerrisWheelAlternate)FerrisWheelModZPos=0.05;
    MoveDynamicObject(FerrisWheelObjects[10],389.7734,-2028.4688,22.0+FerrisWheelModZPos,FERRIS_WHEEL_SPEED,0,FerrisWheelAngle,90);
}
public OnGameModeExit()
{
    ServerMoneyExit();
    forEx(sizeof FerrisWheelObjects,x)DestroyObject(FerrisWheelObjects[x]);
    for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        { SalvarPlayer(i); }
    }
    for(new i = 0; i < MaiorID; i++)
    {
        tirohitman[ i ] = 9999;
        tirotime[ i ] = 0;
        if(Infoa[i][Arara]) { RemovePlayerAttachedObject(i, 0); }
    }
    SalvarMorro();
    TextDrawDestroy( TextoG );
    TextDrawDestroy( TextoG2 );
    SaveAdm();
    SalvarTudo();
    DestroyMenu(Principal);
    DestroyMenu(Coresvinny);
    DestroyMenu(Rodas);
    DestroyMenu(VolumedoCarro);
    DestroyMenu(Componentes);
    SalvarPassword();
    SaveVip();
    EleicoesOnSave();
    SaveEleicoes();
    DOF2_Exit();
    getdate(v[0], v[1], v[2]);
    gettime(v[3], v[4], v[5]);
    print("\n---------------------------------------------------------");
    printf("Server Desligado: [%02d/%02d/%d %02d:%02d:%02d]", v[2], v[1], v[0], v[3], v[4], v[5]);
    print("---------------------------------------------------------\n");
    return 1;
}
//=================================[pedagio]===========================================//
public ReduzTempo(playerid)
{
    Reduzido[playerid] = 0;
}
stock ReturnPlayerZone(playerid)
{
    new location[MAX_ZONE_NAME];
    GetPlayer2DZone(playerid, location, MAX_ZONE_NAME);
    return location;
}

stock NomeORG(playerid)
{
    new gangtext[64];
    if(PlayerInfo[playerid][pMembro] == 0 && PlayerInfo[playerid][pLider] == 0) { gangtext = "Civil"; }
    else if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1) { gangtext = "Polícia Militar"; }
    else if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2) { gangtext = "ROTA"; }
    else if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3) { gangtext = "Exército "; }
    else if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4) { gangtext = "Medicos"; }
    else if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5) { gangtext = "Los Aztecas"; }
    else if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6) { gangtext = "Guerrilheiros Israelitas"; }
    else if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7) { gangtext = "Prefeitura"; }
    else if(PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8) { gangtext = "Hitmans"; }
    else if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9) { gangtext = "Repórter"; }
    else if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10) { gangtext = "Taxistas"; }
    else if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11) { gangtext = "B.O.P.E"; }
    else if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12) { gangtext = "Mafia Russa"; }
    else if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13) { gangtext = "Mafia Japonesa"; }
    else if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14) { gangtext = "Groove Street"; }
    else if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15) { gangtext = "FARC"; }
    else if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16) { gangtext = "Polícia Rodoviária Federal"; }
    else if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17) { gangtext = "Ballas"; }
    else if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18) { gangtext = "Los Vagos"; }
    else if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19) { gangtext = "Comando Vermelho"; }
    else if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20) { gangtext = "PCC"; }
    else if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21) { gangtext = "Hells Angels"; }
    else if(PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22) { gangtext = "Mongols"; }
    else if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23) { gangtext = "Sons Of Anarchy"; }
    else if(PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24) { gangtext = "The Triads"; }
    else if(PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25) { gangtext = "Drifters"; }
    else if(PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26) { gangtext = "HunTerS"; }
    else if(PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27) { gangtext = "FaTal DangeR"; }
    else if(PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28) { gangtext = "BPM "; }
    else if(PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29) { gangtext = "Snake"; }
    else if(PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30) { gangtext = "DesTroyeR"; }
    else if(PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31) { gangtext = "Justiceiros"; }
    else if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32) { gangtext = "Polícia Federal"; }
    else if(PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33) { gangtext = "EM BREVE"; }
    else if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34) { gangtext = "Dark Gods"; }
    else if(PlayerInfo[playerid][pMembro] == 35 || PlayerInfo[playerid][pLider] == 35) { gangtext = "KiLLeRs"; }
    else if(PlayerInfo[playerid][pMembro] == 36 || PlayerInfo[playerid][pLider] == 36) { gangtext = "Storm"; }
    return gangtext;
}
stock SendMessageToOthersAdmins(playerid, color, const message[])
{
    new ret=0;
    for (new i=0; i<MaiorID; i++)
    {
        if (IsPlayerConnected(i) && i!=playerid && PlayerInfo[i][pAdmin] > 0)
        {
            SendClientMessage(i, color, message);
            ret++;
        }
    }
    return ret;
}
public Clock()
{
    new str[128], str2[128], ano,
    mes, dia, hora, minuto, segundo;
    getdate(ano, mes, dia);
    gettime(hora, minuto, segundo);
    new myeggtext[20];
    if(mes == 1) { myeggtext = "Janeiro"; }
    else if(mes == 2) { myeggtext = "Fevereiro"; }
    else if(mes == 3) { myeggtext = "Marco"; }
    else if(mes == 4) { myeggtext = "Abril"; }
    else if(mes == 5) { myeggtext = "Maio"; }
    else if(mes == 6) { myeggtext = "Junho"; }
    else if(mes == 7) { myeggtext = "Julho"; }
    else if(mes == 8) { myeggtext = "Agosto"; }
    else if(mes == 9) { myeggtext = "Setembro"; }
    else if(mes == 10) { myeggtext = "Outubro"; }
    else if(mes == 11) { myeggtext = "Novembro"; }
    else if(mes == 12) { myeggtext = "Dezembro"; }
    format(str, sizeof(str), "~w~%d de %s", dia, myeggtext);
    TextDrawSetString(TextData, str);
    format(str2, sizeof(str2), "~w~%d:%d:%d", hora, minuto, segundo);
    TextDrawSetString(TextHora, str2);
}
public OnVehicleStreamIn(vehicleid, forplayerid)
{
    if (VTrancado[vehicleid] >= 1)
    {
        SetVehicleParamsForPlayer(vehicleid,forplayerid,0,1);
    }
    else
    {
        SetVehicleParamsForPlayer(vehicleid,forplayerid,0,0);
    }
    return 1;
}
forward LockCar(carid);
public LockCar(carid)
{
 for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            SetVehicleParamsForPlayer(carid,i,0,1);
        }
    }
}
forward UnLockCar(carid);
public UnLockCar(carid)
{
 for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            SetVehicleParamsForPlayer(carid,i,0,0);
        }
    }
}
encode_tires(tires1, tires2, tires3, tires4)
{
    return tires1 | (tires2 << 1) | (tires3 << 2) | (tires4 << 3);
}

//=====================================[INFOORG]================================//
forward ConviteInfoOrg(nome[], org, cargo);
public ConviteInfoOrg(nome[], org, cargo)
{
    new arquivo[64];
    format(arquivo, sizeof(arquivo), "InfoOrg/Org%d.cfg",org);
    if(cargo >= 6)
    {
        strmid(InfoOrg[org][Lider], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Lider",nome);
        return 1;
    }
    if(cargo == 5)
    {
        if(strcmp(InfoOrg[org][SubLider],"Ninguem",true)==0)
        {
            strmid(InfoOrg[org][SubLider], nome, 0, strlen(nome), MAX_PLAYER_NAME);
            dini_Set(arquivo,"SubLider",nome);
            return 1;
        }
    }
    if(strcmp(InfoOrg[org][Membro1],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro1], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro1",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro2],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro2], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro2",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro3],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro3], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro3",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro4],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro4], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro4",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro5],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro5], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro5",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro6],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro6], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro6",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro7],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro7], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro7",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro8],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro8], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro8",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro9],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro9], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro9",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro10],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro10], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro10",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro11],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro11], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro11",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro12],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro12], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro12",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro13],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro13], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro13",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro14],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro14], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro14",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro15],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro15], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro15",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro16],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro16], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro16",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro17],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro17], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro17",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro18],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro18], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro18",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro19],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro19], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro19",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro20],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro20], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro20",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro21],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro21], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro21",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro22],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro22], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro22",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro23],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro23], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro23",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro24],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro24], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro24",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro25],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro25], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro25",nome);
        return 1;
    }
        if(strcmp(InfoOrg[org][Membro26],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro26], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro26",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro27],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro27], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro27",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro28],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro28], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro28",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro29],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro29], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro29",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro30],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro30], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro30",nome);
        return 1;
    }


    if(strcmp(InfoOrg[org][Membro31],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro31], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro31",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro32],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro32], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro32",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro33],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro33], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro33",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro34],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro34], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro34",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro35],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro35], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro35",nome);
        return 1;
    }
        if(strcmp(InfoOrg[org][Membro36],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro36], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro36",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro37],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro37], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro37",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro38],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro38], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro38",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro39],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro39], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro39",nome);
        return 1;
    }
    if(strcmp(InfoOrg[org][Membro40],"Ninguem",true)==0)
    {
        strmid(InfoOrg[org][Membro40], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro40",nome);
        return 1;
    }
    return 0;
}
forward LoadOrgs();
public LoadOrgs()
{
    new arquivo[64];
    new idx = 1;
    while (idx < sizeof(InfoOrg))
    {
        format(arquivo, sizeof(arquivo), "InfoOrg/Org%d.cfg",idx);
        if(!dini_Exists(arquivo))
        {
            dini_Create(arquivo);
            dini_Set(arquivo,"Lider","Ninguem");
            dini_Set(arquivo,"SubLider","Ninguem");
            dini_Set(arquivo,"Membro1","Ninguem");
            dini_Set(arquivo,"Membro2","Ninguem");
            dini_Set(arquivo,"Membro3","Ninguem");
            dini_Set(arquivo,"Membro4","Ninguem");
            dini_Set(arquivo,"Membro5","Ninguem");
            dini_Set(arquivo,"Membro6","Ninguem");
            dini_Set(arquivo,"Membro7","Ninguem");
            dini_Set(arquivo,"Membro8","Ninguem");
            dini_Set(arquivo,"Membro9","Ninguem");
            dini_Set(arquivo,"Membro10","Ninguem");
            dini_Set(arquivo,"Membro11","Ninguem");
            dini_Set(arquivo,"Membro12","Ninguem");
            dini_Set(arquivo,"Membro13","Ninguem");
            dini_Set(arquivo,"Membro14","Ninguem");
            dini_Set(arquivo,"Membro15","Ninguem");
            dini_Set(arquivo,"Membro16","Ninguem");
            dini_Set(arquivo,"Membro17","Ninguem");
            dini_Set(arquivo,"Membro18","Ninguem");
            dini_Set(arquivo,"Membro19","Ninguem");
            dini_Set(arquivo,"Membro20","Ninguem");
            dini_Set(arquivo,"Membro21","Ninguem");
            dini_Set(arquivo,"Membro22","Ninguem");
            dini_Set(arquivo,"Membro23","Ninguem");
            dini_Set(arquivo,"Membro24","Ninguem");
            dini_Set(arquivo,"Membro25","Ninguem");
            dini_Set(arquivo,"Membro26","Ninguem");
            dini_Set(arquivo,"Membro27","Ninguem");
            dini_Set(arquivo,"Membro28","Ninguem");
            dini_Set(arquivo,"Membro29","Ninguem");
            dini_Set(arquivo,"Membro30","Ninguem");


            dini_Set(arquivo,"Membro31","Ninguem");
            dini_Set(arquivo,"Membro32","Ninguem");
            dini_Set(arquivo,"Membro33","Ninguem");
            dini_Set(arquivo,"Membro34","Ninguem");
            dini_Set(arquivo,"Membro35","Ninguem");
            dini_Set(arquivo,"Membro36","Ninguem");
            dini_Set(arquivo,"Membro37","Ninguem");
            dini_Set(arquivo,"Membro38","Ninguem");
            dini_Set(arquivo,"Membro39","Ninguem");
            dini_Set(arquivo,"Membro40","Ninguem");
        }
        strmid(InfoOrg[idx][Lider], dini_Get(arquivo,"Lider"), 0, strlen(dini_Get(arquivo,"Lider")), 255);
        strmid(InfoOrg[idx][SubLider], dini_Get(arquivo,"SubLider"), 0, strlen(dini_Get(arquivo,"SubLider")), 255);
        strmid(InfoOrg[idx][Membro1], dini_Get(arquivo,"Membro1"), 0, strlen(dini_Get(arquivo,"Membro1")), 255);
        strmid(InfoOrg[idx][Membro2], dini_Get(arquivo,"Membro2"), 0, strlen(dini_Get(arquivo,"Membro2")), 255);
        strmid(InfoOrg[idx][Membro3], dini_Get(arquivo,"Membro3"), 0, strlen(dini_Get(arquivo,"Membro3")), 255);
        strmid(InfoOrg[idx][Membro4], dini_Get(arquivo,"Membro4"), 0, strlen(dini_Get(arquivo,"Membro4")), 255);
        strmid(InfoOrg[idx][Membro5], dini_Get(arquivo,"Membro5"), 0, strlen(dini_Get(arquivo,"Membro5")), 255);
        strmid(InfoOrg[idx][Membro6], dini_Get(arquivo,"Membro6"), 0, strlen(dini_Get(arquivo,"Membro6")), 255);
        strmid(InfoOrg[idx][Membro7], dini_Get(arquivo,"Membro7"), 0, strlen(dini_Get(arquivo,"Membro7")), 255);
        strmid(InfoOrg[idx][Membro8], dini_Get(arquivo,"Membro8"), 0, strlen(dini_Get(arquivo,"Membro8")), 255);
        strmid(InfoOrg[idx][Membro9], dini_Get(arquivo,"Membro9"), 0, strlen(dini_Get(arquivo,"Membro9")), 255);
        strmid(InfoOrg[idx][Membro10], dini_Get(arquivo,"Membro10"), 0, strlen(dini_Get(arquivo,"Membro10")), 255);
        strmid(InfoOrg[idx][Membro11], dini_Get(arquivo,"Membro11"), 0, strlen(dini_Get(arquivo,"Membro11")), 255);
        strmid(InfoOrg[idx][Membro12], dini_Get(arquivo,"Membro12"), 0, strlen(dini_Get(arquivo,"Membro12")), 255);
        strmid(InfoOrg[idx][Membro13], dini_Get(arquivo,"Membro13"), 0, strlen(dini_Get(arquivo,"Membro13")), 255);
        strmid(InfoOrg[idx][Membro14], dini_Get(arquivo,"Membro14"), 0, strlen(dini_Get(arquivo,"Membro14")), 255);
        strmid(InfoOrg[idx][Membro15], dini_Get(arquivo,"Membro15"), 0, strlen(dini_Get(arquivo,"Membro15")), 255);
        strmid(InfoOrg[idx][Membro16], dini_Get(arquivo,"Membro16"), 0, strlen(dini_Get(arquivo,"Membro16")), 255);
        strmid(InfoOrg[idx][Membro17], dini_Get(arquivo,"Membro17"), 0, strlen(dini_Get(arquivo,"Membro17")), 255);
        strmid(InfoOrg[idx][Membro18], dini_Get(arquivo,"Membro18"), 0, strlen(dini_Get(arquivo,"Membro18")), 255);
        strmid(InfoOrg[idx][Membro19], dini_Get(arquivo,"Membro19"), 0, strlen(dini_Get(arquivo,"Membro19")), 255);
        strmid(InfoOrg[idx][Membro20], dini_Get(arquivo,"Membro20"), 0, strlen(dini_Get(arquivo,"Membro20")), 255);
        strmid(InfoOrg[idx][Membro21], dini_Get(arquivo,"Membro21"), 0, strlen(dini_Get(arquivo,"Membro21")), 255);
        strmid(InfoOrg[idx][Membro22], dini_Get(arquivo,"Membro22"), 0, strlen(dini_Get(arquivo,"Membro22")), 255);
        strmid(InfoOrg[idx][Membro23], dini_Get(arquivo,"Membro23"), 0, strlen(dini_Get(arquivo,"Membro23")), 255);
        strmid(InfoOrg[idx][Membro24], dini_Get(arquivo,"Membro24"), 0, strlen(dini_Get(arquivo,"Membro24")), 255);
        strmid(InfoOrg[idx][Membro25], dini_Get(arquivo,"Membro25"), 0, strlen(dini_Get(arquivo,"Membro25")), 255);
        strmid(InfoOrg[idx][Membro26], dini_Get(arquivo,"Membro26"), 0, strlen(dini_Get(arquivo,"Membro26")), 255);
        strmid(InfoOrg[idx][Membro27], dini_Get(arquivo,"Membro27"), 0, strlen(dini_Get(arquivo,"Membro27")), 255);
        strmid(InfoOrg[idx][Membro28], dini_Get(arquivo,"Membro28"), 0, strlen(dini_Get(arquivo,"Membro28")), 255);
        strmid(InfoOrg[idx][Membro29], dini_Get(arquivo,"Membro29"), 0, strlen(dini_Get(arquivo,"Membro29")), 255);
        strmid(InfoOrg[idx][Membro30], dini_Get(arquivo,"Membro30"), 0, strlen(dini_Get(arquivo,"Membro30")), 255);


        strmid(InfoOrg[idx][Membro31], dini_Get(arquivo,"Membro31"), 0, strlen(dini_Get(arquivo,"Membro31")), 255);
        strmid(InfoOrg[idx][Membro32], dini_Get(arquivo,"Membro32"), 0, strlen(dini_Get(arquivo,"Membro32")), 255);
        strmid(InfoOrg[idx][Membro33], dini_Get(arquivo,"Membro33"), 0, strlen(dini_Get(arquivo,"Membro33")), 255);
        strmid(InfoOrg[idx][Membro34], dini_Get(arquivo,"Membro34"), 0, strlen(dini_Get(arquivo,"Membro34")), 255);
        strmid(InfoOrg[idx][Membro35], dini_Get(arquivo,"Membro35"), 0, strlen(dini_Get(arquivo,"Membro35")), 255);
        strmid(InfoOrg[idx][Membro36], dini_Get(arquivo,"Membro36"), 0, strlen(dini_Get(arquivo,"Membro36")), 255);
        strmid(InfoOrg[idx][Membro37], dini_Get(arquivo,"Membro37"), 0, strlen(dini_Get(arquivo,"Membro37")), 255);
        strmid(InfoOrg[idx][Membro38], dini_Get(arquivo,"Membro38"), 0, strlen(dini_Get(arquivo,"Membro38")), 255);
        strmid(InfoOrg[idx][Membro39], dini_Get(arquivo,"Membro39"), 0, strlen(dini_Get(arquivo,"Membro39")), 255);
        strmid(InfoOrg[idx][Membro40], dini_Get(arquivo,"Membro40"), 0, strlen(dini_Get(arquivo,"Membro40")), 255);

        idx ++;
    }
    printf("[BPG]: %d Orgs Carregadas", idx);
    return 1;
}
forward DemitirInfoOrg(nome[]);
public DemitirInfoOrg(nome[])
{
    new arquivo[64];
    for(new i = 1; i < sizeof(InfoOrg); i++)
    {
        format(arquivo, sizeof(arquivo), "InfoOrg/Org%d.cfg",i);
        if(strcmp(nome,InfoOrg[i][Lider],true)==0)
        {
            strmid(InfoOrg[i][Lider], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Lider","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][SubLider],true)==0)
        {
            strmid(InfoOrg[i][SubLider], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"SubLider","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro1],true)==0)
        {
            strmid(InfoOrg[i][Membro1], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro1","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro2],true)==0)
        {
            strmid(InfoOrg[i][Membro2], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro2","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro3],true)==0)
        {
            strmid(InfoOrg[i][Membro3], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro3","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro4],true)==0)
        {
            strmid(InfoOrg[i][Membro4], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro4","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro5],true)==0)
        {
            strmid(InfoOrg[i][Membro5], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro5","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro6],true)==0)
        {
            strmid(InfoOrg[i][Membro6], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro6","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro7],true)==0)
        {
            strmid(InfoOrg[i][Membro7], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro7","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro8],true)==0)
        {
            strmid(InfoOrg[i][Membro8], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro8","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro9],true)==0)
        {
            strmid(InfoOrg[i][Membro9], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro9","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro10],true)==0)
        {
            strmid(InfoOrg[i][Membro10], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro10","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro11],true)==0)
        {
            strmid(InfoOrg[i][Membro11], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro11","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro12],true)==0)
        {
            strmid(InfoOrg[i][Membro12], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro12","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro13],true)==0)
        {
            strmid(InfoOrg[i][Membro13], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro13","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro14],true)==0)
        {
            strmid(InfoOrg[i][Membro14], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro14","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro15],true)==0)
        {
            strmid(InfoOrg[i][Membro15], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro15","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro16],true)==0)
        {
            strmid(InfoOrg[i][Membro16], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro16","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro17],true)==0)
        {
            strmid(InfoOrg[i][Membro17], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro17","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro18],true)==0)
        {
            strmid(InfoOrg[i][Membro18], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro18","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro19],true)==0)
        {
            strmid(InfoOrg[i][Membro19], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro19","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro20],true)==0)
        {
            strmid(InfoOrg[i][Membro20], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro20","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro21],true)==0)
        {
            strmid(InfoOrg[i][Membro21], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro21","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro22],true)==0)
        {
            strmid(InfoOrg[i][Membro22], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro22","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro23],true)==0)
        {
            strmid(InfoOrg[i][Membro23], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro23","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro24],true)==0)
        {
            strmid(InfoOrg[i][Membro24], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro24","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro25],true)==0)
        {
            strmid(InfoOrg[i][Membro25], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro25","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro26],true)==0)
        {
            strmid(InfoOrg[i][Membro26], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro26","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro27],true)==0)
        {
            strmid(InfoOrg[i][Membro27], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro27","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro28],true)==0)
        {
            strmid(InfoOrg[i][Membro28], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro28","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro29],true)==0)
        {
            strmid(InfoOrg[i][Membro29], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro29","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro30],true)==0)
        {
            strmid(InfoOrg[i][Membro30], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro30","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro31],true)==0)
        {
            strmid(InfoOrg[i][Membro31], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro31","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro32],true)==0)
        {
            strmid(InfoOrg[i][Membro32], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro32","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro33],true)==0)
        {
            strmid(InfoOrg[i][Membro33], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro33","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro34],true)==0)
        {
            strmid(InfoOrg[i][Membro34], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro34","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro35],true)==0)
        {
            strmid(InfoOrg[i][Membro35], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro35","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro36],true)==0)
        {
            strmid(InfoOrg[i][Membro36], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro36","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro37],true)==0)
        {
            strmid(InfoOrg[i][Membro37], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro37","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro38],true)==0)
        {
            strmid(InfoOrg[i][Membro38], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro38","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro39],true)==0)
        {
            strmid(InfoOrg[i][Membro39], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro39","Ninguem");
            return 1;
        }
        if(strcmp(nome,InfoOrg[i][Membro40],true)==0)
        {
            strmid(InfoOrg[i][Membro40], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
            dini_Set(arquivo,"Membro40","Ninguem");
            return 1;
        }
    }
    return 0;
}
stock Demitir(playerid, para1)
{
    format(gstring, sizeof(gstring), "* Você foi demitido pelo líder %s Motivo: Limpou sua Vaga.", PlayerName(playerid));
    SendClientMessage(para1, COLOR_LIGHTRED, gstring);
    SendClientMessage(para1, COLOR_LIGHTRED, "* Agora você é um civil novamente.");
    gTeam[para1] = 3;
    PlayerInfo[para1][pTeam] = 3;
    PlayerInfo[para1][pMembro] = 0;
    PlayerInfo[para1][pCargo] = 0;
    if(PlayerInfo[para1][pSex] == 1) { PlayerInfo[para1][pSkin] = 23; } else { PlayerInfo[para1][pSkin] = 216; }
    SetSpawnInfo(para1, gTeam[para1], PlayerInfo[para1][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
    Hospital[para1] = 1;
    SpawnPlayer(para1);
}
stock DemitirLider(playerid)
{
    SendClientMessage(playerid, COLOR_LIGHTRED, "Você foi demitido de líder por um admin, agora você é um Civil !");
    gTeam[playerid] = 3;
    PlayerInfo[playerid][pTeam] = 3;
    PlayerInfo[playerid][pMembro] = 0;
    PlayerInfo[playerid][pLider] = 0;
    PlayerInfo[playerid][pCargo] = 0;
    if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
    SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
    Hospital[playerid] = 1;
    SpawnPlayer(playerid);
}
forward TemVaga(family);
public TemVaga(family)
{
    if(strcmp(InfoOrg[family][Membro1], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro2], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro3], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro4], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro5], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro6], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro7], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro8], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro9], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro10], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro11], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro12], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro13], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro14], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro15], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro16], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro17], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro18], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro19], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro20], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro21], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro22], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro23], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro24], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro25], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro26], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro27], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro28], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro29], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro30], "Ninguem", true) == 0)
    {
        return 1;
    }


    if(strcmp(InfoOrg[family][Membro31], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro32], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro33], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro34], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro35], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro36], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro37], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro38], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro39], "Ninguem", true) == 0)
    {
        return 1;
    }
    if(strcmp(InfoOrg[family][Membro40], "Ninguem", true) == 0)
    {
        return 1;
    }
    return 0;
}
forward IsPlayerOnline(name[]);
public IsPlayerOnline(name[])
{
    new PlayerName2[MAX_PLAYER_NAME];
    for(new i=0; i<MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            GetPlayerName(i, PlayerName2, sizeof(PlayerName2));
            if(strcmp(name,PlayerName2,true)==0)
            {
                return 1;
            }
        }
    }
    return 0;
}
forward GetPlayerID(string[]);
public GetPlayerID(string[])
{
    for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            new testname[MAX_PLAYER_NAME];
            GetPlayerName(i, testname, sizeof(testname));
            if(strcmp(testname,string,true)==0)
            {
                return i;
            }
        }
    }
    return INVALID_PLAYER_ID;
}
//==============================================================================//
stock IsNumero(string[])
{
    for (new i = 0, j = strlen(string); i < j; i++)
    {
        if (string[i] > '9' || string[i] < '0') return 0;
    }
    return 1;
}
stock CrashPlayer(playerid)
{
    for(new i=0;i<=1000;i++) CreatePlayerObject(playerid,4108,0,0,0,0,0,0);
    return 1;
}
stock IsPlayerInTerritorio(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= Territorio[MinX] && y >= Territorio[MinY] && x <= Territorio[MaxX] && y <= Territorio[MaxY]) return 1;
    return 0;
}
forward AtualizarTv( playerid );
public AtualizarTv( playerid ){
    for( new i; i < MAX_PLAYERS; i ++ ){
        if( IsPlayerConnected( i ) ) {
            if( i ^ playerid ){
                if( Espiando[ i ] == playerid ){
                    if( PlayerInfo[ i ][ pAdmin ] > 0 ){
                        PlayerSpectatePlayer( i, playerid, SPECTATE_MODE_NORMAL );
                        SetPlayerInterior( i, GetPlayerInterior( playerid ) );
                        SetPlayerVirtualWorld( i, GetPlayerVirtualWorld( playerid ) );
                        printf( "player: %d | admin: %d | interior: %d | interior: %d", playerid, i, GetPlayerInterior( playerid ), GetPlayerInterior( i ) );
                    }
                }
            }
        }
    }
}
public fecharyakuza1()
{
    MoveDynamicObject(pyakuza1, 2516.7102, 1822.7935, 12.5000,3);
}
public fecharportaomec2()
{
    MoveDynamicObject(portaomec2, 952.8893400,-1559.7905300,15.4121800,3);
}
public portaomecf()
{
    MoveDynamicObject(portaomec, 952.9434800,-1501.3525400,15.4121800,3);
}

forward fecharacn();
public fecharacn()
{
    MoveDynamicObject( acn, 1645.19995, 1669.30005, 12.60000,3);
}
stock IsVehicleValid(id)
{
    new type=GetVehicleModel(id);
    new blocked[]={ 548, 425, 417, 487, 488, 497, 563, 447, 469, 520 };
    for(new i;i<sizeof(blocked);i++)
    {
        if(type == blocked[i])
        {
            return 0;
        }
    }
    return 1;
}
stock SetHora()
{
    gettime(hour, minute, second);
    if(hour == 0 && minute >= 0 && minute <= 59) { SetWorldTime(0); }
    if(hour == 1 && minute >= 0 && minute <= 59) { SetWorldTime(1); }
    if(hour == 2 && minute >= 0 && minute <= 59) { SetWorldTime(2); }
    if(hour == 3 && minute >= 0 && minute <= 59) { SetWorldTime(3); }
    if(hour == 4 && minute >= 0 && minute <= 59) { SetWorldTime(4); }
    if(hour == 5 && minute >= 0 && minute <= 39) { SetWorldTime(5); }
    if(hour == 5 && minute >= 40 && minute <= 49) { SetWorldTime(23); }
    if(hour == 5 && minute >= 50 && minute <= 59) { SetWorldTime(22); }
    if(hour == 6 && minute >= 0 && minute <= 9) { SetWorldTime(21); }
    if(hour == 6 && minute >= 30 && minute <= 59) { SetWorldTime(7); }
    if(hour == 7 && minute >= 0 && minute <= 59) { SetWorldTime(7); }
    if(hour == 8 && minute >= 0 && minute <= 59) { SetWorldTime(8); }
    if(hour == 9 && minute >= 0 && minute <= 59) { SetWorldTime(9); }
    if(hour == 10 && minute >= 0 && minute <= 59) { SetWorldTime(10); }
    if(hour == 11 && minute >= 0 && minute <= 59) { SetWorldTime(11); }
    if(hour == 12 && minute >= 0 && minute <= 59) { SetWorldTime(12); }
    if(hour == 13 && minute >= 0 && minute <= 59) { SetWorldTime(13); }
    if(hour == 14 && minute >= 0 && minute <= 59) { SetWorldTime(14); }
    if(hour == 15 && minute >= 0 && minute <= 59) { SetWorldTime(15); }
    if(hour == 16 && minute >= 0 && minute <= 59) { SetWorldTime(16); }
    if(hour == 17 && minute >= 0 && minute <= 59) { SetWorldTime(17); }
    if(hour == 17 && minute >= 35 && minute <= 39) { SetWorldTime(20); }
    if(hour == 17 && minute >= 40 && minute <= 49) { SetWorldTime(21); }
    if(hour == 17 && minute >= 55 && minute <= 59) { SetWorldTime(23); }
    if(hour == 18 && minute >= 0 && minute <= 29) { SetWorldTime(6); }
    if(hour == 19 && minute >= 0 && minute <= 59) { SetWorldTime(5); }
    if(hour == 20 && minute >= 0 && minute <= 59) { SetWorldTime(4); }
    if(hour == 21 && minute >= 0 && minute <= 59) { SetWorldTime(2); }
    if(hour == 22 && minute >= 0 && minute <= 59) { SetWorldTime(1); }
    if(hour == 23 && minute >= 0 && minute <= 59) { SetWorldTime(0); }
}
stock GetPlayerSpeed(playerid,bool:kmh)
{
    new Float:Vx,Float:Vy,Float:Vz,Float:rtn;
    if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid),Vx,Vy,Vz); else GetPlayerVelocity(playerid,Vx,Vy,Vz);
    rtn = floatsqroot(floatabs(floatpower(Vx + Vy + Vz,2)));
    return kmh?floatround(rtn * 100 * 1.61):floatround(rtn * 100);
}
forward ContarJogadores();
public ContarJogadores()
{
    new Jogadores = 0,AdmOn = 0,IdCounter = 0;
    for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i) && !IsPlayerNPC(i))
        {
            Jogadores++;
            if(i > IdCounter)
            {
                IdCounter = i;
            }
            if(PlayerInfo[i][pAdmin] >= 1 && admtrampando[i] > 0)
            {
                AdmOn ++;
            }
        }
    }
    MaiorID = IdCounter+3;
    return Jogadores;
}
forward Anuncio();
public Anuncio()
{
    if(panuncio > 0)
    {
        panuncio = 0;
    }
}
stock RemovePlayerFromVehicleEx(playerid)
{
    RemovePlayerFromVehicle(playerid);
    TogglePlayerControllable(playerid, 1);
}
stock GetPlayerOrg(playerid)
{
    new org;
    if(PlayerInfo[playerid][pLider] > 0)
    {
        org = PlayerInfo[playerid][pLider];
        return org;
    }
    if(PlayerInfo[playerid][pMembro] > 0)
    {
        org = PlayerInfo[playerid][pMembro];
        return org;
    }
    return 0;
}

//=======================[COFRE ORG]======================//
forward LoadCofreOrg();
public LoadCofreOrg()
{
    new arquivo[64];
    new idx = 1;
    while (idx < sizeof(CofreOrg))
    {
        format(arquivo, sizeof(arquivo), "CofreOrg/Org%d.cfg",idx);
        if(!dini_Exists(arquivo))
        {
            dini_Create(arquivo);
            dini_IntSet(arquivo,"Dinheiro",0);
            dini_IntSet(arquivo,"Materiais",0);
            dini_IntSet(arquivo,"Maconha",0);
            dini_IntSet(arquivo,"Cocaina",0);
            dini_IntSet(arquivo,"Crack",0);

        }
        CofreOrg[idx][Dinheiro] = dini_Int(arquivo,"Dinheiro");
        CofreOrg[idx][Materiais] = dini_Int(arquivo,"Materiais");
        CofreOrg[idx][Maconha] = dini_Int(arquivo,"Maconha");
        CofreOrg[idx][Cocaina] = dini_Int(arquivo,"Cocaina");
        CofreOrg[idx][Crack] = dini_Int(arquivo,"Crack");
        idx ++;
    }
    return 1;
}
stock DepositarGranaOrg(org,valor)
{
    new antes = CofreOrg[org][Dinheiro];
    CofreOrg[org][Dinheiro] = antes+valor;
    new arquivo[64];
    format(arquivo, sizeof(arquivo), "CofreOrg/Org%d.cfg",org);
    dini_IntSet(arquivo,"Dinheiro",CofreOrg[org][Dinheiro]);
    return 1;
}
stock SacarGranaOrg(org,valor)
{
    new antes = CofreOrg[org][Dinheiro];
    CofreOrg[org][Dinheiro] = antes-valor;
    new arquivo[64];
    format(arquivo, sizeof(arquivo), "CofreOrg/Org%d.cfg",org);
    dini_IntSet(arquivo,"Dinheiro",CofreOrg[org][Dinheiro]);
    return 1;
}
stock DepositarMaterialOrg(org,valor)
{
    new antes = CofreOrg[org][Materiais];
    CofreOrg[org][Materiais] = antes+valor;
    new arquivo[64];
    format(arquivo, sizeof(arquivo), "CofreOrg/Org%d.cfg",org);
    dini_IntSet(arquivo,"Materiais",CofreOrg[org][Materiais]);
    return 1;
}
stock SacarMaterialOrg(org,valor)
{
    new antes = CofreOrg[org][Materiais];
    CofreOrg[org][Materiais] = antes-valor;
    new arquivo[64];
    format(arquivo, sizeof(arquivo), "CofreOrg/Org%d.cfg",org);
    dini_IntSet(arquivo,"Materiais",CofreOrg[org][Materiais]);
    return 1;
}

stock DepositarMaconhaOrg(org,valor)
{
    new antes = CofreOrg[org][Maconha];
    CofreOrg[org][Maconha] = antes+valor;
    new arquivo[64];
    format(arquivo, sizeof(arquivo), "CofreOrg/Org%d.cfg",org);
    dini_IntSet(arquivo,"Maconha",CofreOrg[org][Maconha]);
    return 1;
}
stock SacarMaconhaOrg(org,valor)
{
    new antes = CofreOrg[org][Maconha];
    CofreOrg[org][Maconha] = antes-valor;
    new arquivo[64];
    format(arquivo, sizeof(arquivo), "CofreOrg/Org%d.cfg",org);
    dini_IntSet(arquivo,"Maconha",CofreOrg[org][Maconha]);
    return 1;
}
stock DepositarCocainaOrg(org,valor)
{
    new antes = CofreOrg[org][Cocaina];
    CofreOrg[org][Cocaina] = antes+valor;
    new arquivo[64];
    format(arquivo, sizeof(arquivo), "CofreOrg/Org%d.cfg",org);
    dini_IntSet(arquivo,"Cocaina",CofreOrg[org][Cocaina]);
    return 1;
}
stock SacarCocainaOrg(org,valor)
{
    new antes = CofreOrg[org][Cocaina];
    CofreOrg[org][Cocaina] = antes-valor;
    new arquivo[64];
    format(arquivo, sizeof(arquivo), "CofreOrg/Org%d.cfg",org);
    dini_IntSet(arquivo,"Cocaina",CofreOrg[org][Cocaina]);
    return 1;
}
stock DepositarCrackOrg(org,valor)
{
    new antes = CofreOrg[org][Crack];
    CofreOrg[org][Crack] = antes+valor;
    new arquivo[64];
    format(arquivo, sizeof(arquivo), "CofreOrg/Org%d.cfg",org);
    dini_IntSet(arquivo,"Crack",CofreOrg[org][Crack]);
    return 1;
}
stock SacarCrackOrg(org,valor)
{
    new antes = CofreOrg[org][Crack];
    CofreOrg[org][Crack] = antes-valor;
    new arquivo[64];
    format(arquivo, sizeof(arquivo), "CofreOrg/Org%d.cfg",org);
    dini_IntSet(arquivo,"Crack",CofreOrg[org][Crack]);
    return 1;
}
//=========================================================//
forward IsAGMOBCar(carid);
public IsAGMOBCar(carid)
{
    for(new i=0;i<sizeof(CvCarros);i++)
    {
        if(carid == CvCarros[i])
        {
            SetVehicleNumberPlate(carid, "BPG CV");
            return 1;
        }
    }
    return 0;
}
forward IsAPCCCar(carid);
public IsAPCCCar(carid)
{
    for(new i=0;i<sizeof(PccCar);i++)
    {
        if(carid == PccCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG PCC");
            return 1;
        }
    }
    return 0;
}
forward IsASmiCar(carid);
public IsASmiCar(carid)
{
    for(new i=0;i<sizeof(SmiCar);i++)
    {
        if(carid == SmiCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG Family");
            return 1;
        }
    }
    return 0;
}
forward IsAPsykOCar(carid);
public IsAPsykOCar(carid)
{
    for(new i=0;i<sizeof(PsykOCar);i++)
    {
        if(carid == PsykOCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG KiLLeRs");
            return 1;
        }
    }
    return 0;
}
forward IsAFaTaL_ImperiuMCarCar(carid);
public IsAFaTaL_ImperiuMCarCar(carid)
{
    for(new i=0;i<sizeof(FaTaL_ImperiuMCar);i++)
    {
        if(carid == FaTaL_ImperiuMCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG FaTal DangeR");
            return 1;
        }
    }
    return 0;
}
forward IsAFakersCar(carid);
public IsAFakersCar(carid)
{
    for(new i=0;i<sizeof(CarFakers);i++)
    {
        if(carid == CarFakers[i])
        {
            SetVehicleNumberPlate(carid, "BPG Snake");
            return 1;
        }
    }
    return 0;
}
forward IsAPsycoCar(carid);
public IsAPsycoCar(carid)
{
    for(new i=0;i<sizeof(PsycoCars);i++)
    {
        if(carid == PsycoCars[i])
        {
            SetVehicleNumberPlate(carid, "BPG Killers");
            return 1;
        }
    }
    return 0;
}
forward IsACaminhoneiroCar(carid);
public IsACaminhoneiroCar(carid)
{
    if((carid >= 99999) && (carid <= 99999))
    {
        return 1;
    }
    return 0;
}
forward BusrouteEnd(playerid);
public BusrouteEnd(playerid)
{
    if (gPlayerTerminal[playerid] == 13)
    {
        PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
        TransportMoney[playerid] += 3900;
        DisablePlayerCheckpoint(playerid);
        gPlayerTerminal[playerid] = 0;
    }
    else
    {
        new conta;
        conta = gPlayerTerminal[playerid]*300;
        format(gstring,sizeof(gstring), "Você encerrou seu serviço de ônibus e ganhou R$%d.", conta-300);
        SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
        PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
        TransportMoney[playerid] += conta-300;
        DisablePlayerCheckpoint(playerid);
        gPlayerTerminal[playerid] = 0;
    }
    return 1;
}
forward busstoptimer(playerid);
public busstoptimer(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        TogglePlayerControllable(playerid, 1);
        SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Agora você pode seguir até a próxima parada de ônibus!");
    }
}
forward IsABus(carid);
public IsABus(carid)
{
    if(carid >= 380 && carid <= 383)
    {
        return 1;
    }
    return 0;
}
forward Crescimento(playerid);
public Crescimento(playerid)
{
    if(!Infoa[playerid][Arara])
    {
        KillTimer(Infoa[playerid][Tempo]);
        return 0;
    }
    if(!Infoa[playerid][Racao] && Infoa[playerid][Grande] < 5)
    {
        SendClientMessage(playerid, BRANCO, "Você não alimentou sua Arara e Ela Morreu!");
        RemovePlayerAttachedObject(playerid, 0);
        Infoa[playerid][Arara] = false;
        Infoa[playerid][Grande] = 0;
        KillTimer(Infoa[playerid][Tempo]);
        return 1;
    }
    new str[30];
    Infoa[playerid][Grande]++;
    Infoa[playerid][Racao] = false;
    format(str, sizeof str, "Sua Arara Cresceu! (%d/5)", Infoa[playerid][Grande]);
    SendClientMessage(playerid, BRANCO, str);
    if(Infoa[playerid][Grande] >= 5)
    {
        SendClientMessage(playerid, BRANCO, "Sua Arara Está Grande e Pronta para ser vendida, Para vender digite /VenderArara !");
        KillTimer(Infoa[playerid][Tempo]);
    }
    return 1;
}
forward AnuncioHitmans();
public AnuncioHitmans()
{
    if(panunciohitmans > 0)
    {
        panunciohitmans = 0;
    }
}
forward AnuncioMc();
public AnuncioMc()
{
    if(panuncioMc > 0)
    {
        panuncioMc = 0;
    }
}
forward AnuncioMafia();
public AnuncioMafia()
{
    if(panunciomafia > 0)
    {
        panunciomafia = 0;
    }
}
forward AnuncioGang();
public AnuncioGang()
{
    if(panunciogang > 0)
    {
        panunciogang = 0;
    }
}
forward AnuncioTaxi();
public AnuncioTaxi()
{
    if(panunciotaxi > 0)
    {
        panunciotaxi = 0;
    }
}
forward AnuncioFarc();
public AnuncioFarc()
{
    if(panunciofarc > 0)
    {
        panunciofarc = 0;
    }
}
forward AnuncioGuerrilheirosIsraelitas();
public AnuncioGuerrilheirosIsraelitas()
{
    if(panuncioGuerrilheirosIsraelitas > 0)
    {
        panuncioGuerrilheirosIsraelitas = 0;
    }
}
forward AnuncioFamilia();
public AnuncioFamilia()
{
    if(panunciofamilia > 0)
    {
        panunciofamilia = 0;
    }
}
forward IsACaminhoneiro(playerid);
public IsACaminhoneiro(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new emprego = PlayerInfo[playerid][pEmprego];
        if(emprego==11)
        {
            return 1;
        }
    }
    return 0;
}
forward ZerarRecarga(playerid);
public ZerarRecarga(playerid)
{
    if(var1[playerid] != 0) var1[playerid] = 0;
}
public RandomServerNames()
{
    SyncTime();
    new string[64];
    new random1 = random(sizeof(SVNAMES));
    format(string, sizeof(string), "hostname %s", SVNAMES[random1]);
    SendRconCommand(string);
}
public OnRconLoginAttempt(ip[], password[], success)
{
    if(success)
    {
        new pip[16];
        for(new i=0; i<MaiorID; i++)
        {
            GetPlayerIp(i, pip, sizeof(pip));
            if(!strcmp(ip, pip, true))
            {
                SendClientMessage(i, COLOR_YELLOW, "OPA!!!!!!!!!!!!!!!!!!");
                if(ServerOwner[i] != 1)
                {
                    ClearChatbox(i, 100);
                    SendClientMessage(i, COLOR_YELLOW, "Vaza daki seu nego fdp, volta pra merda dakele seu servidor!");
                    SendClientMessage(i, COLOR_YELLOW, "A culpa não eh minha seu invejoso, sua inveja eh minha fama caralho!");
                    getdate(year, month, day);
                    gettime(hour,minute);
                    format(gstring,sizeof(gstring), "%s foi banido por ser Admin Rcon [%d/%d/%d - %d:%d]",PlayerName(i),day, month, year,hour, minute);
                    fdplog(gstring);
                    SBan(i, "Admin Rcon", "Automatico");
                    break;
                }
            }
        }
    }
    return 1;
}
stock IPlog(playerid)
{
    new PlayerIP[17];
    GetPlayerIp(playerid,PlayerIP, sizeof(PlayerIP));
    getdate(year, month, day);
    gettime(hour,minute);
    format(gstring, sizeof(gstring), "[%d/%d/%d - %d:%d] IP: %s - %s[%d]\n", day, month, year, hour, minute, PlayerIP, PlayerName(playerid), playerid);
    new File:hFile;
    hFile = fopen("Logs/IP.log", io_append);
    fwrite(hFile, gstring);
    fclose(hFile);
}
forward Checkprop();
public Checkprop()
{
    new olddate;
    new curdate = getdate();
    new string[128];
    for(new h = 0; h < sizeof(HouseInfo); h++)
    {
        /*if(HouseInfo[h][hOwned] == 1 && HouseInfo[h][hDate] == 0)
        {
                gettime(v[3], v[4], v[5]);
                format(string, sizeof(string), "[%d/%d/%d] [%d:%d:%d] Casa ID:%d vendida, Dono:%s, Tempo:%d\n", v[2], v[1], v[0], v[3], v[4], v[5], h, HouseInfo[h][hOwner], curdate-olddate);
                new File:hFile;
                hFile = fopen("Logs/CheckProp.log", io_append);
                fwrite(hFile, string);
                fclose(hFile);
                new location[MAX_ZONE_NAME];
                Get2DZone(location, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], MAX_ZONE_NAME);
                format(string,sizeof(string),"Uma Propriedade em %s, Foi Liberada para Venda, Preço: R$ %d, Nível: %d.", location,HouseInfo[h][hValue],HouseInfo[h][hLevel]);
                OOCNews(0xFF8080FF,string);
                HouseInfo[h][hHel] = 0;
                HouseInfo[h][hArm] = 0;
                HouseInfo[h][hHealthx] = 0;
                HouseInfo[h][hHealthy] = 0;
                HouseInfo[h][hHealthz] = 0;
                HouseInfo[h][hArmorrx] = 0;
                HouseInfo[h][hArmorry] = 0;
                HouseInfo[h][hArmorrz] = 0;
                HouseInfo[h][hLock] = 1;
                HouseInfo[h][hOwned] = 0;
                HouseInfo[h][hVec] = 475;
                HouseInfo[h][hVcol1] = -1;
                HouseInfo[h][hVcol2] = -1;
                strmid(HouseInfo[h][hOwner], "O estado", 0, strlen("O estado"), 255);
        } */
        if(HouseInfo[h][hOwned] == 1 && HouseInfo[h][hDate] > 3)
        {
            olddate = HouseInfo[h][hDate];
            if(curdate-olddate >= 4)
            {
                gettime(v[3], v[4], v[5]);
                format(string, sizeof(string), "[%d/%d/%d] [%d:%d:%d] Casa ID:%d vendida, Dono:%s, Tempo:%d\n", v[2], v[1], v[0], v[3], v[4], v[5], h, HouseInfo[h][hOwner], curdate-olddate);
                new File:hFile;
                hFile = fopen("Logs/CheckProp.log", io_append);
                fwrite(hFile, string);
                fclose(hFile);
                new location[MAX_ZONE_NAME];
                Get2DZone(location, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], MAX_ZONE_NAME);
                format(string,sizeof(string),"Uma Propriedade em %s, Foi Liberada para Venda, Preço: R$ %d, Nível: %d.", location,HouseInfo[h][hValue],HouseInfo[h][hLevel]);
                OOCNews(0xFF8080FF,string);
                HouseInfo[h][hHel] = 0;
                HouseInfo[h][hArm] = 0;
                HouseInfo[h][hHealthx] = 0;
                HouseInfo[h][hHealthy] = 0;
                HouseInfo[h][hHealthz] = 0;
                HouseInfo[h][hArmorrx] = 0;
                HouseInfo[h][hArmorry] = 0;
                HouseInfo[h][hArmorrz] = 0;
                HouseInfo[h][hLock] = 1;
                HouseInfo[h][hOwned] = 0;
                HouseInfo[h][hVec] = 475;
                HouseInfo[h][hVcol1] = -1;
                HouseInfo[h][hVcol2] = -1;
                strmid(HouseInfo[h][hOwner], "O estado", 0, strlen("O estado"), 255);
                SalvarCasa(h);
            }
        }
        if(HouseInfo[h][hOwned] == 0)
        {
            HouseInfo[h][hDate] = 0;
        }

    }
    a3d();
    SetTimer("CheckCarros", 3000, 0);
    return 1;
}
stock OrgPodeGuerriarMorro(playerid,org)
{
    new porg;
    if(PlayerInfo[playerid][pMembro] > 0)
    {
        porg = PlayerInfo[playerid][pMembro];
    }
    if(PlayerInfo[playerid][pLider] > 0)
    {
        porg = PlayerInfo[playerid][pLider];
    }
    if(org == 2) { if(porg == org) { return 1; } }
    if(org == 5) { if(porg == org) { return 1; } }
    if(org == 14) { if(porg == org) { return 1; } }
    if(org == 17) { if(porg == org) { return 1; } }
    if(org == 18) { if(porg == org) { return 1; } }
    if(org == 19) { if(porg == org) { return 1; } }
    if(org == 20) { if(porg == org) { return 1; } }
    if(org == 27) { if(porg == org) { return 1; } }
    if(org == 30) { if(porg == org) { return 1; } }
    if(org == 31) { if(porg == org) { return 1; } }
    if(org == 26) { if(porg == org) { return 1; } }
    if(org == 35) { if(porg == org) { return 1; } }
    if(org == 36) { if(porg == org) { return 1; } }
    if(org == 28) { if(porg == org) { return 1; } }
    if(org == 11) { if(porg == org) { return 1; } }
    if(org == 34) { if(porg == org) { return 1; } }
    if(org == 29) { if(porg == org) { return 1; } }
    return 0;
}
forward RespawnCarMorro();
public RespawnCarMorro()
{
    new UsandoCar[MAX_VEHICLES];
    for(new i=0; i<MaiorID; i++)
    {
        if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
        {
            UsandoCar[GetPlayerVehicleID(i)]= 1;
        }
    }
    for(new c = 0; c < MAX_VEHICLES; c++)
    {
        if(UsandoCar[c] != 1 && IsCarInMorro(c))
        {
            SetVehicleToRespawn(c);
        }
    }
}
stock IsPlayerInMorro(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 2202.403320 && y >= -1131.981933 && x <= 2322.403320 && y <= -1107.981933) return 1; // morro 1
    else if(x >= 2041.285644 && y >= -1075.884277 && x <= 2320.285644 && y <= -940.884277) return 1; // morro 2
    else if(x >= 2106.894042 && y >= -1108.459472 && x <= 2319.894042 && y <= -1075.459472) return 1; // morro 3
    else if(x >= 2320.003906 && y >= -1108.388183 && x <= 2494.003906 && y <= -942.388183) return 1; // morro 4
    else return 0;
}
stock MorroFlashForAll()
{
    for(new m=1; m<sizeof(GZMorro); m++)
    {
        GangZoneHideForAll(GZMorro[m]);
        GangZoneShowForAll(GZMorro[m],CORTR_NINGUEM);
        GangZoneFlashForAll(GZMorro[m], CORTR_GUERRA);
    }
}
stock MorroFlashForPlayer(playerid)
{
    for(new m=1; m<sizeof(GZMorro); m++)
    {
        GangZoneHideForPlayer(playerid,GZMorro[m]);
        GangZoneShowForPlayer(playerid,GZMorro[m],CORTR_NINGUEM);
        GangZoneFlashForPlayer(playerid,GZMorro[m], CORTR_GUERRA);
    }
}
stock MorroShowForAll()
{
    DefinirCorMorro();
    for(new m=1; m<sizeof(GZMorro); m++)
    {
        GangZoneHideForAll(GZMorro[m]);
        GangZoneShowForAll(GZMorro[m],Morro[Cor]);
    }
}
stock MorroShowForPlayer(playerid)
{
    DefinirCorMorro();
    for(new m=1; m<sizeof(GZMorro); m++)
    {
        GangZoneHideForPlayer(playerid,GZMorro[m]);
        GangZoneShowForPlayer(playerid,GZMorro[m],Morro[Cor]);
    }
}
stock MorroHideForAll()
{
    for(new m=1; m<sizeof(GZMorro); m++)
    {
        GangZoneHideForAll(GZMorro[m]);
    }
}
stock MorroHideForPlayer(playerid)
{
    for(new m=1; m<sizeof(GZMorro); m++)
    {
        GangZoneHideForPlayer(playerid,GZMorro[m]);
    }
}

public DefinirCorMorro()
{
    if(Morro[Dono] == 0)
    {
        Morro[Cor] = 0xFFFFFF96;
    }
    if(Morro[Dono] == 2)
    {
        Morro[Cor] = 0x807FFEAA;
    }
    if(Morro[Dono] == 28)
    {
        Morro[Cor] = COR_GPT;
    }
    if(Morro[Dono] == 5)
    {
        Morro[Cor] = 0x1774FFAA;
    }
    if(Morro[Dono] == 14)
    {
        Morro[Cor] = 0x00FF00C8;
    }
    if(Morro[Dono] == 17)
    {
        Morro[Cor] = TEAM_BALLAS_COLOR;
    }
    if(Morro[Dono] == 18)
    {
        Morro[Cor] = 0xFFFF00C8;
    }
    if(Morro[Dono] == 19)
    {
        Morro[Cor] = 0xc20916AA;
    }
    if(Morro[Dono] == 20)
    {
        Morro[Cor] = COLOR_LIGHTGREEN;
    }
    if(Morro[Dono] == 26)
    {
        Morro[Cor] = 0xCCFF99FF;
    }
    if(Morro[Dono] == 27)
    {
        Morro[Cor] = COR_FaTal_DangeR;
    }
    if(Morro[Dono] == 30)
    {
        Morro[Cor] = COR_Killers;
    }
    if(Morro[Dono] == 31)
    {
        Morro[Cor] = COR_StrikerS;
    }
    if(Morro[Dono] == 34)
    {
        Morro[Cor] = COR_Reggae;
    }
    if(Morro[Dono] == 35)
    {
        Morro[Cor] = COR_PsykO;
    }
    if(Morro[Dono] == 36)
    {
        Morro[Cor] = COR_FD;
    }
    if(Morro[Dono] == 29)
    {
        Morro[Cor] = cor_fak;
    }
    /*if(Morro[Dono] == 21)
    {
        Morro[Cor] = COR_HELLS;
    }
    if(Morro[Dono] == 22)
    {
        Morro[Cor] = COR_MONGOLS;
    }
    if(Morro[Dono] == 23)
    {
        Morro[Cor] = COR_SONS;
    }*/
}
public CarregarMorro()
{
    new arquivo[64];
    format(arquivo, sizeof(arquivo), "/PlayGamer/Morro.ini");
    Morro[Dono] = dini_Int(arquivo,"Dono");
    Territorio[Vencedor] = dini_Int(arquivo,"Terrorista");
    DefinirCorMorro();
    printf("[MORRO] Dono do Morro = %d",Morro[Dono]);
    return 1;
}
public SalvarMorro()
{
    new arquivo[64];
    format(arquivo, sizeof(arquivo), "/PlayGamer/Morro.ini");
    dini_IntSet(arquivo,"Dono",Morro[Dono]);
    dini_IntSet(arquivo,"Terrorista",Territorio[Vencedor]);
    DefinirCorMorro();
    printf("[MORRO] Dono do Morro = %d",Morro[Dono]);
    return 1;
}
public IniciarGuerraMorro()
{
    KillTimer(IniciandoGuerra);
    TextosGuerraIniciar();
    SetTimer( "TerminarTextosGuerra", 8000, false );
    if(Morro[Guerra] >= 1)
    {
        return 1;
    }
    for(new o=0; o<MAX_ORGS; o++)
    {
        MorroPontos[o] = 0;
    }
    Morro[Guerra] = 1;
    Morro[Dono] = 0;
    MorroFlashForAll();
    for(new i=0; i<MaiorID; i++)
    {
            if(OrgPodeGuerriarMorro(i,GetPlayerOrg(i)))
            {
                format(gstring, sizeof(gstring), "** [LEMBRETE] %s, vocês participam da GUERRA DO MORRO. .",NomeORG(i));
                SendClientMessage(i, 0xfcb118FF, gstring);
                //SendClientMessageToAll(0xfcb118FF,"[LEMBRETE] A guerra do morro foi iniciada, boa sorte aos participantes!");
            }
    }
    SendClientMessageToAll(0xfcb118FF,"[LEMBRETE] A guerra do morro foi iniciada, boa sorte aos participantes!");
    CheckMTempo = SetTimer("CheckMorroArea",5000,1);
    MorrPtempo = SetTimer("MorroP",5000,1);
    RespawnMorroAuto = SetTimer("RespawnCarMorro",RESPAWN_MORRO,1);
    return 1;
}
public FinalizarGuerraMorro()
{
    new vencedorpontosmorro = 0;
    TerminarTextosGuerra();
    KillTimer(CheckMTempo);
    KillTimer(MorrPtempo);
    KillTimer(FinalizandoGuerra);
    KillTimer(RespawnMorroAuto);
    if(Morro[Guerra] >= 1)
    {
        for(new o=0; o<MAX_ORGS; o++)
        {
            if(MorroPontos[o] >= vencedorpontosmorro)
            {
                vencedorpontosmorro = MorroPontos[o];
           }
        }
        for(new opt=0; opt<MAX_ORGS; opt++)
        {
        if(MorroPontos[opt] == vencedorpontosmorro)
            {
                new NomeOrgMorro[64];
                new GranaMorro;
                OrgNome(opt, NomeOrgMorro, 64);
                Morro[Dono] = opt;
                GranaMorro = vencedorpontosmorro*227;
                if(Morro[Dono] == 0)
                {
                    SendClientMessageToAll(0xfcb118AA,"-");
                    SendClientMessageToAll(0xfcb118AA,"{ffffff}[GUERRA] {fcb118}NENHUMA ORGANIZAÇÃO VENCEU A GUERRA DO MORRO!");
                    SendClientMessageToAll(0xfcb118AA,"-");
                }
                if(Morro[Dono] == 2 && Morro[Dono] != 0)
                {
                    SendClientMessageToAll(0xfcb118AA,"-");
                    format(strvinny, sizeof(strvinny), "{fcb118}[GUERRA] {ffffff}Os policiais venceram a guerra do morro e receberão R$ %d como bonificação em seus cofres.", GranaMorro);
                    SendClientMessageToAll(0xFFFFFFFF, strvinny);
                    SendClientMessageToAll(0xfcb118AA,"{fcb118}[GUERRA] {ffffff}O tráfico no morro foi controlado e os traficantes foram abatidos.");
                    SendClientMessageToAll(0xfcb118AA,"-");
                    DepositarGranaOrg(1,GranaMorro);
                    DepositarGranaOrg(2,GranaMorro);
                    DepositarGranaOrg(3,GranaMorro);
                    DepositarGranaOrg(16,GranaMorro);
                    DepositarGranaOrg(7,GranaMorro+10000);
                    DepositarGranaOrg(11,GranaMorro);
                    DepositarGranaOrg(4,GranaMorro);
                }
                if(Morro[Dono] != 2 && Morro[Dono] != 0)
                {
                    SendClientMessageToAll(0xfcb118AA,"-");
                    format(strvinny, sizeof(strvinny), "{fcb118}[GUERRA] {FFFFFF}A organização %s venceu a guerra do morro e receberá R$ %d como bonificação em seu cofre.",NomeOrgMorro, GranaMorro);
                    SendClientMessageToAll(0xFFFFFFFF, strvinny);
                    SendClientMessageToAll(0xfcb118AA,"{fcb118}[GUERRA] {FFFFFF}Os vencedores receberão materiais gratuitos até a próxima guerra.");
                    SendClientMessageToAll(0xfcb118AA,"-");
                    DepositarGranaOrg(Morro[Dono],GranaMorro);
                }
                SendClientMessageToAll(COLOR_GREEN," ");
                Morro[Guerra] = 0;
                MorroP();
                MorroShowForAll();
                SalvarMorro();
                for(new o=0; o<MAX_ORGS; o++)
                {
                    MorroPontos[o] = 0;
                }
                for(new i=0; i<MaiorID; i++)
                {
                    if(Morro[Dono] != 0)
                    {
                        if(GetPlayerOrg(i) == Morro[Dono])
                        {
                            format(strvinny, sizeof(strvinny), "** %s, vocês foram os vencedores da guerra do morro, parabéns! ",NomeORG(i));
                            SendClientMessage(i, 0xfcb118FF, strvinny);
                            GameTextForPlayer(i, "~g~~h~~h~]]~b~~h~~h~ Play~p~~h~Gamer~g~~h~~h~]]~n~ ~y~Parabens Sua Org ~r~~h~Venceu ~y~a Guerra", 5000, 3);
                        }
                    }
                }
                SaveAdm();
                SaveHelp();
                return 1;
            }
        }
    }
    return 1;
}
forward TerminarTextosGuerra();
public TerminarTextosGuerra(){
    TextDrawHideForAll(TextoG);
    TextDrawHideForAll(TextoG2);
}
stock CriarTextoGuerra(){

    TextoG = TextDrawCreate(236.000000, 116.000000, "Guerra do Morro");
    TextDrawBackgroundColor(TextoG, 255);
    TextDrawFont(TextoG, 0);
    TextDrawLetterSize(TextoG, 0.800000, 2.900002);
    TextDrawColor(TextoG, -55502593);
    TextDrawSetOutline(TextoG, 0);
    TextDrawSetProportional(TextoG, 1);
    TextDrawSetShadow(TextoG, 1);
    TextDrawSetSelectable(TextoG, 0);

    TextoG2 = TextDrawCreate(319.000000, 145.000000, "_");
    TextDrawAlignment(TextoG2, 2);
    TextDrawBackgroundColor(TextoG2, 255);
    TextDrawFont(TextoG2, 2);
    TextDrawLetterSize(TextoG2, 0.230000, 1.200001);
    TextDrawColor(TextoG2, -1);
    TextDrawSetOutline(TextoG2, 0);
    TextDrawSetProportional(TextoG2, 1);
    TextDrawSetShadow(TextoG2, 1);
    TextDrawSetSelectable(TextoG2, 0);

}
stock IniciarMusica(){
    for( new i; i < MAX_PLAYERS; i++ ){
        if( IsPlayerConnected( i ) ){
            PlayerPlaySound(i, 1159, 0.0, 0.0, 0.0);
            PlayerPlaySound(i, 1159, 0.0, 0.0, 0.0);
            PlayerPlaySound(i, 1159, 0.0, 0.0, 0.0);
            PlayerPlaySound(i, 1159, 0.0, 0.0, 0.0);
        }
    }
}
stock TextosGuerraIniciar(){
    if( Morro[Guerra] <= 0 ){
        TextDrawSetString( TextoG2, "Iniciada" );
        TextDrawShowForAll( TextoG );
        TextDrawShowForAll( TextoG2 );
    }
    else{
        TextDrawSetString( TextoG2, "Finalizada" );
        TextDrawShowForAll( TextoG );
        TextDrawShowForAll( TextoG2 );
    }
}
public TempoGuerraP()
{
    new horaa,minutoo;
    gettime(horaa,minutoo);
    if(Morro[Guerra] <= 0)
    {
        if(horaa == 10)
        {
            if(minutoo == 0)
            {
                IniciandoGuerra = SetTimer("IniciarGuerraMorro", 5000, false);
                IniciarMusica();

            }
        }
        if(horaa == 14)
        {
            if(minutoo == 0)
            {
                IniciandoGuerra = SetTimer("IniciarGuerraMorro", 5000, false);
                IniciarMusica();
            }
        }
        if(horaa == 17)
        {
            if(minutoo == 0)
            {
                IniciandoGuerra = SetTimer("IniciarGuerraMorro", 5000, false);
                IniciarMusica();
            }
        }
        if(horaa == 21)
        {
            if(minutoo == 0)
            {
                IniciandoGuerra = SetTimer("IniciarGuerraMorro", 5000, false);
                IniciarMusica();
            }
        }
        if(horaa == 0)
        {
            if(minutoo == 0)
            {
                IniciandoGuerra = SetTimer("IniciarGuerraMorro", 5000, false);
                IniciarMusica();
            }
        }
    }
    if(Morro[Guerra] >= 1)
    {
        if(horaa == 11)
        {
            if(minutoo == 0)
            {
                FinalizandoGuerra = SetTimer("FinalizarGuerraMorro", 8000, false);
                TextosGuerraIniciar();
            }
        }
        if(horaa == 15)
        {
            if(minutoo == 0)
            {
                FinalizandoGuerra = SetTimer("FinalizarGuerraMorro", 8000, false);
                TextosGuerraIniciar();
            }
        }
        if(horaa == 18)
        {
            if(minutoo == 0)
            {
                FinalizandoGuerra = SetTimer("FinalizarGuerraMorro", 8000, false);
                TextosGuerraIniciar();
            }
        }
        if(horaa == 22)
        {
            if(minutoo == 0)
            {
                FinalizandoGuerra = SetTimer("FinalizarGuerraMorro", 8000, false);
                TextosGuerraIniciar();
            }
        }
        if(horaa == 1)
        {
            if(minutoo == 0)
            {
                FinalizandoGuerra = SetTimer("FinalizarGuerraMorro", 8000, false);
                TextosGuerraIniciar();
            }
        }
    }
}
stock OrgNome(orgid, Nome[], len)
{
    if(orgid == 1) return format(Nome, len, "Policia Militar", 0);
    if(orgid == 2) return format(Nome, len, "ROTA", 0);
    if(orgid == 3) return format(Nome, len, "Exército ", 0);
    if(orgid == 4) return format(Nome, len, "Medicos", 0);
    if(orgid == 5) return format(Nome, len, "Los Aztecas", 0);
    if(orgid == 6) return format(Nome, len, "Guerrilheiros Israelitas", 0);
    if(orgid == 7) return format(Nome, len, "Prefeitura", 0);
    if(orgid == 8) return format(Nome, len, "Hitmans", 0);
    if(orgid == 9) return format(Nome, len, "Reporteres", 0);
    if(orgid == 10) return format(Nome, len, "Taxistas", 0);
    if(orgid == 11) return format(Nome, len, "Policia B.O.P.E", 0);
    if(orgid == 12) return format(Nome, len, "Mafia Russa", 0);
    if(orgid == 13) return format(Nome, len, "Mafia Japonesa", 0);
    if(orgid == 14) return format(Nome, len, "Groove Street", 0);
    if(orgid == 15) return format(Nome, len, "FARC ", 0);
    if(orgid == 16) return format(Nome, len, "Polícia Rodoviária Federal", 0);
    if(orgid == 17) return format(Nome, len, "Ballas", 0);
    if(orgid == 18) return format(Nome, len, "Los Vagos", 0);
    if(orgid == 19) return format(Nome, len, "Comando Vermelho", 0);
    if(orgid == 20) return format(Nome, len, "PCC", 0);
    if(orgid == 21) return format(Nome, len, "Hells Angels", 0);
    if(orgid == 22) return format(Nome, len, "Mongols", 0);
    if(orgid == 23) return format(Nome, len, "Sons Of Anarchy", 0);
    if(orgid == 24) return format(Nome, len, "The Triads", 0);
    if(orgid == 25) return format(Nome, len, "Drifters", 0);
    if(orgid == 26) return format(Nome, len, "HunTerS", 0);
    if(orgid == 27) return format(Nome, len, "FaTal DangeR", 0);
    if(orgid == 28) return format(Nome, len, "BPM ", 0);
    if(orgid == 29) return format(Nome, len, "Snake", 0);
    if(orgid == 30) return format(Nome, len, "DesTroyeR", 0);
    if(orgid == 31) return format(Nome, len, "Justiceiros", 0);
    if(orgid == 32) return format(Nome, len, "Polícia Federal", 0);
    if(orgid == 33) return format(Nome, len, "EM BREVE", 0);
    if(orgid == 33) return format(Nome, len, "Dark Gods", 0);
    if(orgid == 35) return format(Nome, len, "KiLLeRs", 0);
    if(orgid == 36) return format(Nome, len, "Storm", 0);
    return format(Nome, len, "Ninguem", 0);
}
stock OrgCor(orgid)
{
    if(orgid == 1) { return COR_PM; }
    if(orgid == 2) { return 0x807FFEAA; }
    if(orgid == 3) { return 0xFFFFFFAA; }
    if(orgid == 4) { return 0xFFFFFFAA; }
    if(orgid == 5) { return 0x2641FEAA; }
    if(orgid == 6) { return 0xFFFFFFAA; }
    if(orgid == 7) { return 0xFFFFFFAA; }
    if(orgid == 8) { return 0xFFFFFFAA; }
    if(orgid == 9) { return 0xFFFFFFAA; }
    if(orgid == 10) { return 0xFFFFFFAA; }
    if(orgid == 11) { return 0x999966AA; }
    if(orgid == 12) { return COLORGZ_LH; }
    if(orgid == 13) { return COLORGZ_YAKUZA; }
    if(orgid == 14) { return 0x00FF00AA; }
    if(orgid == 15) { return COR_FARC; }
    if(orgid == 16) { return 0xFFFFFFAA; }
    if(orgid == 17) { return 0x934FF6F6; }
    if(orgid == 18) { return 0xFFC801C8; }
    if(orgid == 19) { return 0xCD0000FF; }
    if(orgid == 20) { return 0xCCFF99AA; }
    if(orgid == 21) { return COR_HELLS; }
    if(orgid == 22) { return COR_MONGOLS; }
    if(orgid == 23) { return COR_SONS; }
    if(orgid == 25) { return COR_DRIFT; }
    if(orgid == 26) { return COR_DESTRO; }
    if(orgid == 27) { return COR_FaTal_DangeR; }
    if(orgid == 28) { return COR_GPT; }
    if(orgid == 29) { return cor_fak; }
    if(orgid == 30) { return COR_Killers; }
    if(orgid == 31) { return COR_StrikerS; }
    if(orgid == 32) { return COR_PF; }
    if(orgid == 33) { return COR_Federal; }
    if(orgid == 34) { return COR_Reggae; }
    if(orgid == 35) { return COR_PsykO; }
    if(orgid == 36) { return COR_FD; }
    return COLOR_WHITE;
}
forward CheckMorroArea();
public CheckMorroArea()
{
    for(new i=0; i<MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(Morro[Guerra] >= 1)
            {
                new org = GetPlayerOrg(i);
                if(OrgPodeGuerriarMorro(i,org))
                {
                    if(IsPlayerInMorro(i))
                    {
                       MorroPontos[org] += 1;
                    }
                }
            }
        }
    }
    return 1;
}
forward MorroP();
public MorroP()
{
    new GDPstring[128];
 for(new i=0; i<MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(IsPlayerInMorro(i) && Morro[Guerra] >= 1)
            {
           format(GDPstring,sizeof(GDPstring),"~b~~h~ROTA: ~w~%d",MorroPontos[2]);
                    TextDrawSetString(TextMorro1, GDPstring);
                    format(GDPstring,sizeof(GDPstring),"~b~~h~Groove: ~w~%d",MorroPontos[14]);
                    TextDrawSetString(TextMorro3, GDPstring);
                    format(GDPstring,sizeof(GDPstring),"~b~~h~Vagos: ~w~%d",MorroPontos[18]);
                    TextDrawSetString(TextMorro4, GDPstring);
                    format(GDPstring,sizeof(GDPstring),"~b~~h~CV: ~w~%d",MorroPontos[19]);
                    TextDrawSetString(TextMorro5, GDPstring);
                    format(GDPstring,sizeof(GDPstring),"~b~~h~Aztecas: ~w~%d",MorroPontos[5]);
                    TextDrawSetString(TextMorro6, GDPstring);
                    /*format(GDPstring,sizeof(GDPstring),"~r~Hells Angels~n~~w~Pontos:: ~w~%d",MorroPontos[21]);
                    TextDrawSetString(TextMorro7, GDPstring);
                    format(GDPstring,sizeof(GDPstring),"Mongols M.C.~n~~w~Pontos:: ~w~%d",MorroPontos[22]);
                    TextDrawSetString(TextMorro8, GDPstring);
                    format(GDPstring,sizeof(GDPstring),"Sons Of Anarchy~n~~w~Pontos:: ~w~%d",MorroPontos[23]);
                    TextDrawSetString(TextMorro9, GDPstring);*/
                    format(GDPstring,sizeof(GDPstring),"~b~~h~Ballas: ~w~%d",MorroPontos[17]);
                    TextDrawSetString(TextMorro10, GDPstring);
                    format(GDPstring,sizeof(GDPstring),"~b~~h~PCC: ~w~%d",MorroPontos[20]);
                    TextDrawSetString(TextMorro11, GDPstring);
                    format(GDPstring,sizeof(GDPstring),"~b~~h~Snake: ~w~%d",MorroPontos[29]);
                    TextDrawSetString(TextMorro12, GDPstring);
                    format(GDPstring,sizeof(GDPstring),"~b~~h~DesTroyeR: ~w~%d",MorroPontos[30]);
                    TextDrawSetString(TextMorro13, GDPstring);
                    format(GDPstring,sizeof(GDPstring),"~b~~h~Dark Gods: ~w~%d",MorroPontos[34]);
                    TextDrawSetString(TextMorro14, GDPstring);
                    format(GDPstring,sizeof(GDPstring),"~b~~h~KiLLeRs: ~w~%d",MorroPontos[35]);
                    TextDrawSetString(TextMorro15, GDPstring);
                    format(GDPstring,sizeof(GDPstring),"~b~~h~Storm: ~w~%d",MorroPontos[36]);
                    TextDrawSetString(TextMorro16, GDPstring);
                    format(GDPstring,sizeof(GDPstring),"~b~~h~B.O.P.E: ~w~%d",MorroPontos[11]);
                    TextDrawSetString(TextMorro17, GDPstring);
                    format(GDPstring,sizeof(GDPstring),"~b~~h~55 BPM : ~w~%d",MorroPontos[28]);
                    TextDrawSetString(TextMorro18, GDPstring);
                    format(GDPstring,sizeof(GDPstring),"~b~~h~HunTerS: ~w~%d",MorroPontos[26]);
                    TextDrawSetString(TextMorro19, GDPstring);
                    format(GDPstring,sizeof(GDPstring),"~b~~h~Justiceiros: ~w~%d",MorroPontos[31]);
                    TextDrawSetString(TextMorro20, GDPstring);
                    format(GDPstring,sizeof(GDPstring),"~b~~h~FaTal DangeR: ~w~%d",MorroPontos[27]);
                    TextDrawSetString(TextMorro21, GDPstring);
                    //TextDrawShowForPlayer(i, TextMorro2);
                    TextDrawShowForPlayer(i, TextMorro1);
                    TextDrawShowForPlayer(i, TextMorro3);
                    TextDrawShowForPlayer(i, TextMorro4);
                    TextDrawShowForPlayer(i, TextMorro5);
                    TextDrawShowForPlayer(i, TextMorro6);
                    /*TextDrawShowForPlayer(i, TextMorro7);
                    TextDrawShowForPlayer(i, TextMorro8);
                    TextDrawShowForPlayer(i, TextMorro9);*/
                    TextDrawShowForPlayer(i, TextMorro10);
                    TextDrawShowForPlayer(i, TextMorro11);
                    TextDrawShowForPlayer(i, TextMorro12);
                    TextDrawShowForPlayer(i, TextMorro13);
                    TextDrawShowForPlayer(i, TextMorro14);
                    TextDrawShowForPlayer(i, TextMorro15);
                    TextDrawShowForPlayer(i, TextMorro16);
                    TextDrawShowForPlayer(i, TextMorro17);
                    TextDrawShowForPlayer(i, TextMorro18);
                    TextDrawShowForPlayer(i, TextMorro19);
                    TextDrawShowForPlayer(i, TextMorro20);
                    TextDrawShowForPlayer(i, TextMorro21);
            }
            else
            {
                    //TextDrawHideForPlayer(i, TextMorro2);
                    TextDrawHideForPlayer(i, TextMorro1);
                    TextDrawHideForPlayer(i, TextMorro3);
                    TextDrawHideForPlayer(i, TextMorro4);
                    TextDrawHideForPlayer(i, TextMorro5);
                    TextDrawHideForPlayer(i, TextMorro6);
                    ///TextDrawHideForPlayer(i, TextMorro7);
                    /*TextDrawHideForPlayer(i, TextMorro8);
                    TextDrawHideForPlayer(i, TextMorro9);*/
                    TextDrawHideForPlayer(i, TextMorro10);
                    TextDrawHideForPlayer(i, TextMorro11);
                    TextDrawHideForPlayer(i, TextMorro12);
                    TextDrawHideForPlayer(i, TextMorro13);
                    TextDrawHideForPlayer(i, TextMorro14);
                    TextDrawHideForPlayer(i, TextMorro15);
                    TextDrawHideForPlayer(i, TextMorro16);
                    TextDrawHideForPlayer(i, TextMorro17);
                    TextDrawHideForPlayer(i, TextMorro18);
                    TextDrawHideForPlayer(i, TextMorro19);
                    TextDrawHideForPlayer(i, TextMorro20);
                    TextDrawHideForPlayer(i, TextMorro21);
                    TextDrawHideForPlayer(i, TextMorro22);
            }
        }
    }
    return 1;
}
/*forward ProcuradoPlayer();
public ProcuradoPlayer()
{
    new StrProc[70];
 for(new i;i<MaiorID;i++)
    {
        new gWanted = GetPlayerWanteDLevel(i);
        if(gWanted >= 1)
        {
            format(StrProc, sizeof(StrProc), "*PROCURADO: [{00FF80}%d{FFD700}]", gWanted);
            SetPlayerChatBubble(i, StrProc, 0xFFD700FF, 40.0, TEMPO_PROCTEXT);
            return 1;
        }
    }
    return 1;
}                   */
public TempoAvalieHelper(playerid)
{
    if(meavaliehelper[playerid] != 0)
    {
       // KillTimer(TempoDoHelper[playerid]);
        meavaliehelper[playerid] = 0;
    }
    return 1;
}
forward TunarCarro(carid);
public TunarCarro(carid)
{
    if(GetVehicleModel(carid) == 562)
    {
        AddVehicleComponentEx(carid, 1046);
        AddVehicleComponentEx(carid, 1171);
        AddVehicleComponentEx(carid, 1149);
        AddVehicleComponentEx(carid, 1035);
        AddVehicleComponentEx(carid, 1147);
        AddVehicleComponentEx(carid, 1036);
        AddVehicleComponentEx(carid, 1040);
        ChangeVehiclePaintjobEx(carid, 4);
        ChangeVehicleColorEx(carid, 6, 6);
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1087);
    }
    if(GetVehicleModel(carid) == 560)
    {
        AddVehicleComponentEx(carid, 1028);
        AddVehicleComponentEx(carid, 1169);
        AddVehicleComponentEx(carid, 1141);
        AddVehicleComponentEx(carid, 1032);
        AddVehicleComponentEx(carid, 1138);
        AddVehicleComponentEx(carid, 1026);
        AddVehicleComponentEx(carid, 1027);
        ChangeVehiclePaintjobEx(carid, 0);
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1087);
    }
    if(GetVehicleModel(carid) == 565)
    {
        AddVehicleComponentEx(carid, 1046);
        AddVehicleComponentEx(carid, 1153);
        AddVehicleComponentEx(carid, 1150);
        AddVehicleComponentEx(carid, 1054);
        AddVehicleComponentEx(carid, 1049);
        AddVehicleComponentEx(carid, 1047);
        AddVehicleComponentEx(carid, 1051);
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1087);
        ChangeVehiclePaintjobEx(carid, 4);
    }
    if(GetVehicleModel(carid) == 559)
    {
        AddVehicleComponentEx(carid, 1065);
        AddVehicleComponentEx(carid, 1160);
        AddVehicleComponentEx(carid, 1159);
        AddVehicleComponentEx(carid, 1067);
        AddVehicleComponentEx(carid, 1162);
        AddVehicleComponentEx(carid, 1069);
        AddVehicleComponentEx(carid, 1071);
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1087);
        ChangeVehiclePaintjobEx(carid, 4);
    }
    if(GetVehicleModel(carid) == 561)
    {
        AddVehicleComponentEx(carid, 1064);
        AddVehicleComponentEx(carid, 1155);
        AddVehicleComponentEx(carid, 1154);
        AddVehicleComponentEx(carid, 1055);
        AddVehicleComponentEx(carid, 1158);
        AddVehicleComponentEx(carid, 1056);
        AddVehicleComponentEx(carid, 1062);
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1087);
        ChangeVehiclePaintjobEx(carid, 4);
    }
    if(GetVehicleModel(carid) == 558)
    {
        AddVehicleComponentEx(carid, 1089);
        AddVehicleComponentEx(carid, 1166);
        AddVehicleComponentEx(carid, 1168);
        AddVehicleComponentEx(carid, 1088);
        AddVehicleComponentEx(carid, 1164);
        AddVehicleComponentEx(carid, 1090);
        AddVehicleComponentEx(carid, 1094);
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1087);
        ChangeVehiclePaintjobEx(carid, 4);
    }
    if(GetVehicleModel(carid) == 575)
    {
        AddVehicleComponentEx(carid, 1044);
        AddVehicleComponentEx(carid, 1174);
        AddVehicleComponentEx(carid, 1176);
        AddVehicleComponentEx(carid, 1042);
        AddVehicleComponentEx(carid, 1099);
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1087);
        ChangeVehiclePaintjobEx(carid, 4);
    }
    if(GetVehicleModel(carid) == 534)
    {
        AddVehicleComponentEx(carid, 1126);
        AddVehicleComponentEx(carid, 1179);
        AddVehicleComponentEx(carid, 1180);
        AddVehicleComponentEx(carid, 1122);
        AddVehicleComponentEx(carid, 1101);
        AddVehicleComponentEx(carid, 1125);
        AddVehicleComponentEx(carid, 1123);
        AddVehicleComponentEx(carid, 1100);
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1087);
        ChangeVehiclePaintjobEx(carid, 4);
    }
    if(GetVehicleModel(carid) == 536)
    {
        AddVehicleComponentEx(carid, 1104);
        AddVehicleComponentEx(carid, 1182);
        AddVehicleComponentEx(carid, 1184);
        AddVehicleComponentEx(carid, 1108);
        AddVehicleComponentEx(carid, 1107);
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1087);
        ChangeVehiclePaintjobEx(carid, 4);
    }
    if(GetVehicleModel(carid) == 567)
    {
        AddVehicleComponentEx(carid, 1129);
        AddVehicleComponentEx(carid, 1189);
        AddVehicleComponentEx(carid, 1187);
        AddVehicleComponentEx(carid, 1102);
        AddVehicleComponentEx(carid, 1133);
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1087);
        ChangeVehiclePaintjobEx(carid, 4);
    }
    if(GetVehicleModel(carid) == 420)
    {
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1087);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1139);
        AddVehicleComponentEx(carid, 1147);
    }
    if(GetVehicleModel(carid) == 400)
    {
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1087);
        AddVehicleComponentEx(carid, 1018);
        AddVehicleComponentEx(carid, 1013);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1086);
    }
    if(GetVehicleModel(carid) == 444)
    {
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
    }
    if(GetVehicleModel(carid) == 556)
    {
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
    }
    if(GetVehicleModel(carid) == 557)
    {
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
    }
    if(GetVehicleModel(carid) == 401)
    {
        AddVehicleComponentEx(carid, 1086);
        AddVehicleComponentEx(carid, 1139);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1087);
        AddVehicleComponentEx(carid, 1012);
        AddVehicleComponentEx(carid, 1013);
        AddVehicleComponentEx(carid, 1042);
        AddVehicleComponentEx(carid, 1043);
        AddVehicleComponentEx(carid, 1018);
        AddVehicleComponentEx(carid, 1006);
        AddVehicleComponentEx(carid, 1007);
        AddVehicleComponentEx(carid, 1017);
    }
    if(GetVehicleModel(carid) == 576)
    {
        ChangeVehiclePaintjobEx(carid, 0);
        AddVehicleComponentEx(carid, 1191);
        AddVehicleComponentEx(carid, 1193);
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1018);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1087);
        AddVehicleComponentEx(carid, 1134);
        AddVehicleComponentEx(carid, 1137);
    }
    else
    {
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1087);
    }
    return 0;
}
stock GetPlayerFamy(playerid)
{
    new Famy;
    if(PlayerInfo[playerid][pFamyLider] > 0)
    {
        Famy = PlayerInfo[playerid][pFamyLider];
        return Famy;
    }
    if(PlayerInfo[playerid][pFamyMember] > 0)
    {
        Famy = PlayerInfo[playerid][pFamyMember];
        return Famy;
    }
    return 0;
}
stock NomeFamy(playerid)
{
    new FamyText[64];
    if(PlayerInfo[playerid][pFamyMember] == 2 || PlayerInfo[playerid][pFamyLider] == 2)
    {
        FamyText = "DESATIVADA";
    }
    if(PlayerInfo[playerid][pFamyMember] == 3 || PlayerInfo[playerid][pFamyLider] == 3)
    {
        FamyText = "DESATIVADA";
    }
    if(PlayerInfo[playerid][pFamyMember] == 4 || PlayerInfo[playerid][pFamyLider] == 4)
    {
        FamyText = "DESATIVADA";
    }
    if(PlayerInfo[playerid][pFamyMember] == 5 || PlayerInfo[playerid][pFamyLider] == 5)
    {
        FamyText = "DESATIVADA";
    }
    if(PlayerInfo[playerid][pFamyMember] == 6 || PlayerInfo[playerid][pFamyLider] == 6)
    {
        FamyText = "DESATIVADA";
    }
    return FamyText;
}
stock OrgName(orgid, Nome[], Own)
{
    if(orgid == 1) return format(Nome, Own, "Policia Militar", 0);
    if(orgid == 2) return format(Nome, Own, "ROTA", 0);
    if(orgid == 3) return format(Nome, Own, "Exército ", 0);
    if(orgid == 4) return format(Nome, Own, "Medicos", 0);
    if(orgid == 5) return format(Nome, Own, "Los Aztecas", 0);
    if(orgid == 6) return format(Nome, Own, "Guerrilheiros Israelitas", 0);
    if(orgid == 7) return format(Nome, Own, "Prefeitura", 0);
    if(orgid == 8) return format(Nome, Own, "Hitmans", 0);
    if(orgid == 9) return format(Nome, Own, "Reporteres", 0);
    if(orgid == 10) return format(Nome, Own, "Taxistas", 0);
    if(orgid == 12) return format(Nome, Own, "Mafia Russa", 0);
    if(orgid == 13) return format(Nome, Own, "Mafia Japonesa", 0);
    if(orgid == 14) return format(Nome, Own, "Groove Street", 0);
    if(orgid == 15) return format(Nome, Own, "FARC ", 0);
    if(orgid == 16) return format(Nome, Own, "Polícia Rodoviária Federal", 0);
    if(orgid == 17) return format(Nome, Own, "Ballas", 0);
    if(orgid == 18) return format(Nome, Own, "Los Vagos", 0);
    if(orgid == 19) return format(Nome, Own, "Comando Vermelho", 0);
    if(orgid == 20) return format(Nome, Own, "PCC", 0);
    if(orgid == 21) return format(Nome, Own, "Hells Angels", 0);
    if(orgid == 22) return format(Nome, Own, "Mongols", 0);
    if(orgid == 23) return format(Nome, Own, "Sons Of Anarchy", 0);
    if(orgid == 24) return format(Nome, Own, "The Triads", 0);
    if(orgid == 25) return format(Nome, Own, "Drifters", 0);
    if(orgid == 26) return format(Nome, Own, "HunTerS", 0);
    if(orgid == 28) return format(Nome, Own, "BPM ", 0);
    return format(Nome, Own, "Civil", 0);
}
/*forward DesPlayerCarSpam(playerid);
public DesPlayerCarSpam(playerid)
{
    PlayerCarSpam[playerid] --;
    if(PlayerCarSpam[playerid] > 9)
    {
        GetPlayerPos(playerid, xpoz, ypoz, zpoz);
        //SendClientMessage(playerid, 0x00F2F2AA, "Você foi banido do servidor acusado de Car Spam, Se isto for um erro, Reclame no fórum!");
        format(gstring,sizeof(gstring), "AntiAttack:%s[ID: %d] Foi acusado ser ser Um Car Spam e Foi banido!",PlayerName(playerid),playerid);
        SoEuVejoMsm(COLOR_LIGHTRED, gstring);
        format(gstring,sizeof(gstring),"Informações: Coordenadas, X:%f Y:%f Z:%f, Ant Xiter: 2, Digite /irxiter",xpoz,ypoz,zpoz);
        SoEuVejoMsm(0x00F2F2FF, gstring);
        getdate(year, month, day);
        format(gstring, sizeof(gstring), "AdmAviso: %s foi kickado automaticamente acusado de Car Spam (%d-%d-%d)", PlayerName(playerid),day,month,year);
        AtackLog(gstring);
        Kick(playerid);
    }
    return 1;
}*/
stock IsCarInMorro(carid)
{
    new Float:x,Float:y,Float:z;
    GetVehiclePos(carid, x, y, z);
    if(x >= 2202.403320 && y >= -1131.981933 && x <= 2322.403320 && y <= -1107.981933) return 1; // morro 1
    else if(x >= 2041.285644 && y >= -1075.884277 && x <= 2320.285644 && y <= -940.884277) return 1; // morro 2
    else if(x >= 2106.894042 && y >= -1108.459472 && x <= 2319.894042 && y <= -1075.459472) return 1; // morro 3
    else return 0;
}
stock IsCarInPref(carid)
{
    new Float:x,Float:y,Float:z;
    GetVehiclePos(carid, x, y, z);
    if(x >= 1396.344360 && y >= -1864.869140 && x <= 1558.344360 && y <= -1747.869140) return 1; // morro 1
    else return 0;
}
stock RespawnCarPref()
{
    new UsandoCar[MAX_VEHICLES];
    for(new i=0; i<MaiorID; i++)
    {
        if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
        {
            UsandoCar[GetPlayerVehicleID(i)]= 1;
        }
    }
    for(new c = 0; c < MAX_VEHICLES; c++)
    {
        if(UsandoCar[c] != 1 && IsCarInPref(c))
        {
            SetVehicleToRespawn(c);
        }
    }
}
stock RespawnCarros()
{
    new UsandoCar[MAX_VEHICLES];
    for(new i=0; i<MaiorID; i++)
    {
        if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
        {
            UsandoCar[GetPlayerVehicleID(i)]= 1;
        }
    }
    for(new c = 0; c < MAX_VEHICLES; c++)
    {
        if(UsandoCar[c] != 1)
        {
            SetVehicleToRespawn(c);
        }
    }
}
public CheckPlayGamer()
{
    new string[128];
    for(new k=0; k<MaiorID; k++)
    {
        if(ContarJogadores() >= 75)
        {
            format(string, sizeof(string), "O Servidor Recebeu Bônus por Players Online: %d.", ContarJogadores());
            SendClientMessage(k, 0xFF9DFFFF, string);
            SendClientMessage(k, -1, "** Vá até a Prefeitura pegar Seu Presente!");
            Presente[k] = 1;
        }
        else
        {
            format(string, sizeof(string), "O Servidor Não Receberá Bônus por Players Online: %d.", ContarJogadores());
            SendClientMessage(k, 0xFF8080FF, string);
            SendClientMessage(k, -1, "** Número Mínimo de Players Necessários: 75!");
            Presente[k] = 0;
        }
        if(InfoCont[1] > InfoCont[2])     // hit wins
        {
            VenceuCont = 8;
            SendClientMessage(k, 0x77D3EEFF, "Os Hitmans Cumpriram Mais Contratos Que os Triads, E Ganhou Recompensa em Armamento!");
            format(string, sizeof(string), "Hitmans: %d Pontos, The Triads: %d Pontos", InfoCont[1], InfoCont[2]);
            SendClientMessage(k, 0x77EEA1FF, string);
        }
        else if(InfoCont[1] < InfoCont[2])     // triads wins
        {
            VenceuCont = 24;
            SendClientMessage(k, 0x77D3EEFF, "Os Triads Cumpriram Mais Contratos Que os Hitmans, E Ganhou Recompensa em Armamento!");
            format(string, sizeof(string), "Hitmans: %d Pontos, The Triads: %d Pontos", InfoCont[1], InfoCont[2]);
            SendClientMessage(k, 0x77EEA1FF, string);
        }
        else if(InfoCont[1] == InfoCont[2])
        {
            VenceuCont = 0;
            SendClientMessage(k, 0x77D3EEFF, "Os Hitmans e Triads Cumpriram o Mesmo Número de Contratos, Portanto Não ganharão Armamentos!");
            format(string, sizeof(string), "Hitmans: %d Pontos, The Triads: %d Pontos", InfoCont[1], InfoCont[2]);
            SendClientMessage(k, 0x77EEA1FF, string);
        }
        if(VenceuCont != 0)     // Aviso wins
        {
            if(GetPlayerOrg(k) == VenceuCont)
            {
                new NomedaOrg[64];
                OrgName(VenceuCont, NomedaOrg, 64);
                format(string, sizeof(string), "** Agência %s: Sua Organização Ganhou Armamento Especial por Maior Numero de Contratos. (Pedido 8).",NomedaOrg);
                SendClientMessage(k, 0x77EEA1FF, string);
            }
        }
        VehPreso(k);
    }
    InfoCont[1] = 0;
    InfoCont[2] = 0;
    RespawnCarPref();
    getdate(year, month, day);
    gettime(hour,minute);
    format(DataServidor, sizeof(DataServidor), "%d/%d/%d", day,month,year);
    SetTimer("Checkprop", 5000, 0);
    SetTimer("CheckVip", 3000, 0);
    if(hour == 5 && minute <= 3 )
    {
        if(GMXPROIBIDO == 1)
        {
            SendClientMessageToAll(-1,"|BPG| PlayGamer RPG - Servidor Reiniciando em Instantes!");
            SendClientMessageToAll(COLOR_LIGHTRED,"ATENÇÃO: Reinicialização progamada sendo efetuada em 10 segundos!");
            SendClientMessageToAll(-1,"GMX: NÃO SAIAM, VOLTAMOS EM ALGUNS SEGUNDOS...");
            SetTimer("RestartServer", 10000, 0);
        }
    }
    //SalvarTudo();
}
stock OrgCargo(playerid)
{
        new rtext[64];
        if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1
        || PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
        {
            if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Soldado"; }
            else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Cabo"; }
            else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Sargento"; }
            else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Tenente"; }
            else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Capitão"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Comandante"; }
            else { rtext = "Soldado"; }
        }
        if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
        {
            if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Cadete"; }
            else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Recruta"; }
            else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Capitao"; }
            else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Major"; }
            else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Ten.Coronel"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "General"; }
            else { rtext = "Cadete"; }
        }
        else if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2
        || PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28)//ROTA Ranks
        {
            if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Recruta"; }
            else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Soldado"; }
            else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Cabo"; }
            else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Sargento"; }
            else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Tenente"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Capitão"; }
            else { rtext = "Recruta"; }
        }
        else if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)//ROTA Ranks
        {
            if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Recruta"; }
            else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Soldado"; }
            else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Atirador de Elite"; }
            else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Cabo"; }
            else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Tenente"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Capitão"; }
            else { rtext = "Recruta"; }
        }
        else if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)//Polícia Federall Ranks
        {
            if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Arquivista"; }
            else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Contador"; }
            else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Agente"; }
            else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Escrivão"; }
            else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Perito Criminal"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Delegado"; }
            else { rtext = "Soldado"; }
        }
        else if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)//Medicos Ranks
        {
            if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Socorrista"; }
            else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Auxiliar"; }
            else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Enfermeiro"; }
            else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Médico"; }
            else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Vice-Diretor"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Diretor"; }
            else { rtext = "Auxiliar de Enfermeiro"; }
        }
        else if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)//GuerrilheirosIsraelitas Ranks
        {
            if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Aprendiz"; }
            else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Homem-Bomba"; }
            else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Terrorista"; }
            else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Bombadeador"; }
            else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Sub-Chefe"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Líder"; }
            else { rtext = "Homem-Bomba"; }
        }
        else if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)//Prefeito Ranks
        {
            if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Motorista"; }
            else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Segurança"; }
            else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Vereador"; }
            else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Acessor"; }
            else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Vice-Prefeito"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Prefeito"; }
            else { rtext = "Motorista"; }
        }
        else if(PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8
        || PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)//Hitman Ranks
        {
            if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Matador"; }
            else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Assasino Frio"; }
            else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Agente"; }
            else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Agente Especial"; }
            else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Vice-Diretor"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Diretor"; }
            else { rtext = "Matador"; }
        }
        else if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)//NR Ranks
        {
            if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Humorista"; }
            else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Repórter Local"; }
            else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Repórter Nacional"; }
            else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Editor Local"; }
            else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Fotografo Paparazzi"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Diretor de Produção"; }
            else { rtext = "Humorista"; }
        }
        else if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)//Taxi Company Ranks
        {
            if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Taxista Em Treinamento"; }
            else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Taxista Novato"; }
            else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Taxista Experiente"; }
            else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Taxista Profissional"; }
            else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Sub-Chefe"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Chefe"; }
            else { rtext = "Taxista Em Treinamento"; }
        }
        else if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)//Secretária de Segurança
        {
            if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Estagiário"; }
            else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Secretário"; }
            else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Assistente de Departamento"; }
            else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Acessor Jurídico"; }
            else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Sub-Chefe"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Chefe"; }
            else { rtext = "S.S.P"; }
        }
        else if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14 || PlayerInfo[playerid][pMembro] == 17
        || PlayerInfo[playerid][pLider] == 17 || PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18
        || PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 20
        || PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30
        || PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31 || PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29
        || PlayerInfo[playerid][pLider] == 20 || PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5
        || PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pMembro] == 36 || PlayerInfo[playerid][pLider] == 36
        || PlayerInfo[playerid][pLider] == 22 || PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23 || PlayerInfo[playerid][pMembro] == 35 || PlayerInfo[playerid][pLider] == 35
        || PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27 || PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)//GANG'S Ranks
        {
            if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Novato"; }
            else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Membro"; }
            else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Fogueteiro"; }
            else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Capanga"; }
            else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Sub-Chefe"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Chefão"; }
            else { rtext = "Novato"; }
        }
        else if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)//FARC Ranks
        {
            if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Homem-Bomba"; }
            else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Membro"; }
            else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Terrorista"; }
            else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Bombardeador"; }
            else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Sub-Chefe"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Osama Bin Laden"; }
            else { rtext = "Homem-Bomba"; }
        }
        else if(PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25)//DRIFT Ranks
        {
            if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Matador"; }
            else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Assassino Frio"; }
            else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Agente"; }
            else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Agente Especial"; }
            else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Vice-Diretor"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Diretor"; }
            else { rtext = "Matador"; }
        }
        else if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13
        || PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)//Máfias Ranks
        {
            if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Novato"; }
            else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Membro"; }
            else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Associado"; }
            else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Braço-Direito"; }
            else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Sub-Lider"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Líder"; }
            else
            {
                rtext = "Novato";
            }
        }
        else if(PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)//FARC Ranks
        {
            if(PlayerInfo[playerid][pCargo] == 1) { rtext = "App"; }
            else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Membro"; }
            else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Membro avançado"; }
            else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Membro de elite"; }
            else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Sub-lider"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Líder"; }
            else { rtext = "App"; }
        }
        return rtext;
}
forward MandarRelato(playerid);
public MandarRelato(playerid)
{
    RelatoEntregue[playerid] = 0;
    return 1;
}
public StatusPlayer(idcheck, playerid)
{
    new arquivo[64], vinnyownamt, NomedaOrg[64], DemitiuMotivo[64],
    DemitiuNome[64], PresoMotivo[64], PresoNome[64];
    if(idcheck == 1)
    {
        format(arquivo, sizeof(arquivo), "Agendados/JAIL%s.ini",PlayerName(playerid));
        if(dini_Exists(arquivo))
        {
            strmid(PresoNome, dini_Get(arquivo,"Admin"), 0, strlen(dini_Get(arquivo,"Admin")), 255);
            strmid(PresoMotivo, dini_Get(arquivo,"Motivo"), 0, strlen(dini_Get(arquivo,"Motivo")), 255);
            vinnyownamt = dini_Int(arquivo,"Tempo");
            format(gstring, sizeof(gstring), "* Admin %s Agendou Sua Prisão, Motivo: %s.", PresoNome,PresoMotivo);
            SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
            format(gstring, sizeof(gstring), "Você foi preso por %d minutos Automaticamente, Agendado pelo Admin.", vinnyownamt);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
            GameTextForPlayer(playerid, "~b~Bem Vindo a ~n~~r~~h~Cadeia Admin", 5000, 3);
            WantedPoints[playerid] = 0;
            ResetPlayerWeapons(playerid);
            SetPlayerWantedLevel(playerid, 0);
            PlayerInfo[playerid][pJailed] = 2;
            PlayerInfo[playerid][pJailTime] = vinnyownamt * 60;
            SetPlayerPos(playerid, 346.5848, 306.1026, 999.1484);
            SetPlayerInterior(playerid,6);
            SetPlayerVirtualWorld(playerid,random(20));
            format(gstring, sizeof(gstring), "SERVER: %s Está Agendado e Foi preso, Motivo: %s",PlayerName(playerid) ,PresoMotivo);
            SendClientMessageToAll(COLOR_LIGHTRED,gstring);
            dini_Remove(arquivo);
        }
        return 1;
    }
    else if(idcheck == 2)
    {
        format(arquivo, sizeof(arquivo), "Agendados/ORG%s.ini",PlayerName(playerid));
        if(dini_Exists(arquivo))
        {
            vinnyownamt = dini_Int(arquivo,"Org");
            OrgName(vinnyownamt, NomedaOrg, 64);
            strmid(DemitiuNome, dini_Get(arquivo,"Nome"), 0, strlen(dini_Get(arquivo,"Nome")), 255);
            strmid(DemitiuMotivo, dini_Get(arquivo,"Motivo"), 0, strlen(dini_Get(arquivo,"Motivo")), 255);
            if(PlayerInfo[playerid][pLider] > 0)
            {
                format(gstring, sizeof(gstring), "Você Foi Tirado De Líder da Organização %s Pelo Admin %s, Motivo: %s", NomedaOrg, DemitiuNome, DemitiuMotivo);
                SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
            }
            else
            {
                format(gstring, sizeof(gstring), "Você Foi demitido da Organização %s Pelo Líder %s, Motivo: %s", NomedaOrg, DemitiuNome, DemitiuMotivo);
                SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
            }
            gTeam[playerid] = 3;
            Hospital[playerid] = 1;
            PlayerInfo[playerid][pTeam] = 3;
            PlayerInfo[playerid][pMembro] = 0;
            PlayerInfo[playerid][pLider] = 0;
            PlayerInfo[playerid][pCargo] = 0;
            if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
            SpawnPlayer(playerid);
            dini_Remove(arquivo);
        }
        return 1;
    }
    else if(idcheck == 3)
    {
        format(arquivo, sizeof(arquivo), "Agendados/ADM%s.ini",PlayerName(playerid));
        if(dini_Exists(arquivo))
        {
            strmid(DemitiuNome, dini_Get(arquivo,"Nome"), 0, strlen(dini_Get(arquivo,"Nome")), 255);
            strmid(DemitiuMotivo, dini_Get(arquivo,"Motivo"), 0, strlen(dini_Get(arquivo,"Motivo")), 255);
            format(gstring, sizeof(gstring), "[BPG SERVER]:{FF0000} Você Foi Retirado da Staff Pelo Admin %s, Motivo: %s",DemitiuNome,DemitiuMotivo);
            SendClientMessage(playerid, 0x0000FFAA, gstring);
            dini_Remove(arquivo);
        }
        return 1;
    }
    else if(idcheck == 4)
    {
        format(arquivo, sizeof(arquivo), "Agendados/HELP%s.ini",PlayerName(playerid));
        if(dini_Exists(arquivo))
        {
            strmid(DemitiuNome, dini_Get(arquivo,"Nome"), 0, strlen(dini_Get(arquivo,"Nome")), 255);
            strmid(DemitiuMotivo, dini_Get(arquivo,"Motivo"), 0, strlen(dini_Get(arquivo,"Motivo")), 255);
            format(gstring, sizeof(gstring), "[BPG SERVER]:{FF0000} Você Foi Retirado dos Helpers Pelo Admin %s, Motivo: %s",DemitiuNome,DemitiuMotivo);
            SendClientMessage(playerid, 0x0000FFAA, gstring);
            dini_Remove(arquivo);
        }
        return 1;
    }
    else if(idcheck == 5)
    {
        new string[380], string3[128], ip[16];
        GetPlayerIp(playerid, ip, sizeof ip);
        format(string3, sizeof(string3), "Banidos/%s.ini", PlayerName(playerid));
        if(dini_Exists(string3))
        {
            ClearChatbox(playerid, 10);
            strmid(Infovinny[playerid][pMotivo], dini_Get(string3,"Motivo"), 0, strlen(dini_Get(string3,"Motivo")), 255);
            strmid(Infovinny[playerid][pAdmBan], dini_Get(string3,"Admin"), 0, strlen(dini_Get(string3,"Admin")), 255);
            strmid(Infovinny[playerid][pData], dini_Get(string3,"Data"), 0, strlen(dini_Get(string3,"Data")), 255);
            strmid(Infovinny[playerid][pHora], dini_Get(string3,"Hora"), 0, strlen(dini_Get(string3,"Hora")), 255);
            SendClientMessage(playerid, COLOR_WHITE, "- {ff3535}LEIA COM ATENÇÃO!");
            format(string, sizeof(string), "{ff3535}[!]{FFFFFF} O nick [%s] encontra-se banido no {1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer", PlayerName(playerid));
            SendClientMessage(playerid, COLOR_LIGHTRED, string);
            SendClientMessage(playerid, COLOR_WHITE, "A conta e/ou IP que você está tentando utilizar está banida.");
            SendClientMessage(playerid, COLOR_WHITE, "Se você desconhece o motivo deste banimento ou está tentando conectar-se");
            SendClientMessage(playerid, COLOR_WHITE, "através de outra conta, procure um Administrador no fórum ou Raidcall [7583826].");
            SendClientMessage(playerid, COLOR_WHITE, "Os motivos que levam uma conta a ser banida permanentemente são muitos. ");
            SendClientMessage(playerid, COLOR_WHITE, "Hacks, Mods, Desrespeito, Divulgação Indevida ou possuir 3 Avisos Administrativos");
            SendClientMessage(playerid, COLOR_WHITE, "são a causa da maioria dos banimentos, procure manter-se de acordo com as regras do");
            SendClientMessage(playerid, COLOR_WHITE, "Brasil Play Gamer,evite constrangimentos.");
            format(string,sizeof(string),"                  {FFFFFF}CONTA BANIDA!\n\n\n{FFFFFF}Conta:{55aafd} %s\n\n{FFFFFF}IP: {55aafd}%s\n\n{FFFFFF}Admin: {55aafd}%s\n\n{FFFFFF}Motivo: {55aafd}%s \n\n{FFFFFF}Data:{55aafd} %s \n\n{FFFFFF}Hora:{55aafd} %s\n\n{FFFFFF} Para mais detalhes, solicite sua revisão!\n\n{FFFFFF}",PlayerName(playerid),ip,Infovinny[playerid][pAdmBan],Infovinny[playerid][pMotivo],Infovinny[playerid][pData],Infovinny[playerid][pHora]);
            ShowPlayerDialog(playerid,1339,DIALOG_STYLE_MSGBOX,"               {1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer v1.0", string, "Sair","");
            new stri[64], tmp[20], tmp2[20];
            format(stri, sizeof(stri), "IPsBanidos/%s.ini",ip);
            getdate(Ano, Mes, Dia);
            format(tmp, sizeof(tmp), "%d/%d/%d", Dia, Mes, Ano);
            gettime(Hora, Minuto, Segundo);
            format(tmp2, sizeof(tmp2), "%d:%d:%d", Hora, Minuto, Segundo);
            if(dini_Exists(stri))
            {
                Kick(playerid);
            }
            else
            {
                dini_Create(stri);
                dini_Set(stri,"Motivo",Infovinny[playerid][pMotivo]);
                dini_Set(stri,"Admin",Infovinny[playerid][pAdmBan]);
                dini_Set(stri,"Data",Infovinny[playerid][pData]);
                dini_Set(stri,"Hora",Infovinny[playerid][pHora]);
                dini_Set(stri,"Nick",PlayerName(playerid));
            }
            Kick(playerid);
        }
        format(string3, sizeof(string3), "IPsBanidos/%s.ini", ip);
        if(dini_Exists(string3))
        {
            ClearChatbox(playerid, 10);
            strmid(Infovinny[playerid][pMotivo], dini_Get(string3,"Motivo"), 0, strlen(dini_Get(string3,"Motivo")), 255);
            strmid(Infovinny[playerid][pAdmBan], dini_Get(string3,"Admin"), 0, strlen(dini_Get(string3,"Admin")), 255);
            strmid(Infovinny[playerid][pData], dini_Get(string3,"Data"), 0, strlen(dini_Get(string3,"Data")), 255);
            strmid(Infovinny[playerid][pHora], dini_Get(string3,"Hora"), 0, strlen(dini_Get(string3,"Hora")), 255);
            strmid(Infovinny[playerid][pNick], dini_Get(string3,"Nick"), 0, strlen(dini_Get(string3,"Nick")), 255);
            SendClientMessage(playerid, COLOR_WHITE, "- {ff3535}LEIA COM ATENÇÃO!");
            format(string, sizeof(string), "{ff3535}[!]{FFFFFF} O IP [%s] encontra-se banido no {1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer", ip);
            SendClientMessage(playerid, COLOR_LIGHTRED, string);
            if(strcmp(Infovinny[playerid][pNick],"", true ) == 0)
            {
                format(string, sizeof(string), "Admin: %s", Infovinny[playerid][pAdmBan]);
            }
            else
            {
                format(string, sizeof(string), "Admin: %s, Nick Fake: %s", Infovinny[playerid][pAdmBan], Infovinny[playerid][pNick]);
            }
            SendClientMessage(playerid, COLOR_WHITE, "A conta e/ou IP que você está tentando utilizar está banida.");
            SendClientMessage(playerid, COLOR_WHITE, "Se você desconhece o motivo deste banimento ou está tentando conectar-se");
            SendClientMessage(playerid, COLOR_WHITE, "através de outra conta, procure um Administrador no fórum ou Raidcall [7583826].");
            SendClientMessage(playerid, COLOR_WHITE, "Os motivos que levam uma conta a ser banida permanentemente são muitos. ");
            SendClientMessage(playerid, COLOR_WHITE, "Hacks, Mods, Desrespeito, Divulgação Indevida ou possuir 3 Avisos Administrativos");
            SendClientMessage(playerid, COLOR_WHITE, "são a causa da maioria dos banimentos, procure manter-se de acordo com as regras do");
            SendClientMessage(playerid, COLOR_WHITE, "Brasil Play Gamer, evite constrangimentos.");
       format(string,sizeof(string),"{FFFFFF}CONTA BANIDA!\n\n\n{FFFFFF}Conta:{55aafd} %s\n\n{FFFFFF}IP: {55aafd}%s\n\n{FFFFFF}Admin: {55aafd}%s\n\n{FFFFFF}Motivo: {55aafd}%s \n\n{FFFFFF}Data:{55aafd} %s \n\n{FFFFFF}Hora:{55aafd} %s\n\n{FFFFFF} Para mais detalhes, solicite sua revisão!\n\n{FFFFFF} bpg-rapidosemortais.forumeiros.com",PlayerName(playerid),ip,Infovinny[playerid][pAdmBan],Infovinny[playerid][pMotivo],Infovinny[playerid][pData],Infovinny[playerid][pHora]);
            ShowPlayerDialog(playerid,1339,DIALOG_STYLE_MSGBOX,"               {1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer v1.0", string, "Sair","");
            Kick(playerid);
        }
        return 1;
    }
    else if(idcheck == 6) // status vip
    {
        if(PlayerInfo[playerid][pVip] != 0)
        {
            new tess=0;
            format(arquivo, sizeof(arquivo), "Agendados/VIP%s.ini",PlayerName(playerid));
            if(dini_Exists(arquivo))
            {
                new niveldoviprenov = PlayerInfo[playerid][pVip],Texst[24];
                if(niveldoviprenov == 1) {Texst="Vip Normal";}
                else if(niveldoviprenov == 2) {Texst="Super Vip";}

                format(gstring, sizeof(gstring), "Sua conta VIP expirou, Renove para continuar tendo os Benefícios!");
                SendClientMessage(playerid, 0xFF7777FF, gstring);
                format(gstring, sizeof(gstring), "Sua conta %s expirou, e você Perdeu TODOS os beneficios e bens de um Jogador VIP!",Texst);
                SendClientMessage(playerid, -1,gstring);

                SendClientMessage(playerid, 0xFF8080FF,"<!> Bens VIP Perdidos:");

                if(dini_Int(arquivo,"Casa") != 9999) {format(gstring, sizeof(gstring), "Casa: {FF9797}Removida");}
                else {format(gstring, sizeof(gstring), "Casa: {94FE99}Não Removida");}
                SendClientMessage(playerid, -1,gstring);

                if(dini_Int(arquivo,"Empresa") != 9999) {format(gstring, sizeof(gstring), "Empresa: {FF9797}Removido");}
                else {format(gstring, sizeof(gstring), "Empresa: {94FE99}Sem Propriedade");}
                SendClientMessage(playerid, -1,gstring);

                if(dini_Int(arquivo,"Fazenda") != 9999) {format(gstring, sizeof(gstring), "Fazenda: {FF9797}Removido");}
                else {format(gstring, sizeof(gstring), "Fazenda: {94FE99}Sem Propriedade");}
                SendClientMessage(playerid, -1,gstring);
                SendClientMessage(playerid, -1,"Privilégios e Beneficios: {FF9797}Removidos");

                SendClientMessage(playerid, -1,"** Para continuar sendo um player VIP, Obtenha Moedas verdes no /Forum.");
                //SendClientMessage(playerid, -1,"Logo em seguida compre seu Vip in-game, com o comando /menuvip. **");
                SendClientMessage(playerid, 0x6AB5FFFF,"** Agradecemos a preferência!!");
                PlayerInfo[playerid][pVip] = 0;
                CheckOwnerh(playerid);
                CheckOwnerb(playerid);
                dini_Remove(arquivo);
            }
            else
            {
                for(new x=0; x<sizeof(VipInfo); x++)
                {
                    if(strcmp(VipInfo[x][vNick],PlayerName(playerid),true) == 0)
                    {
                        tess=1;
                        break;
                    }
                }
                if(tess == 0) PlayerInfo[playerid][pVip] = 0;
            }
        }
        return 1;
    }
    return 1;
}
public OnVehicleMod(playerid,vehicleid,componentid)
{
    new orglolz = GetPlayerOrg(playerid);
    new admlolz = PlayerInfo[playerid][pAdmin];
    new viplolz = PlayerInfo[playerid][pVip];
    //new Varz=InitComponents(componentid);
    if(orglolz != 25 && admlolz == 0 && viplolz == 0)
    {
        XiterCrashando[playerid] ++;
        SetTimerEx("AntCrash", 2000,false,"i",playerid);
    }
    /*for(new c = 0; c < sizeof(Carro); c++)
    {
        if(Carro[c][CarroID] == vehicleid)
        {
            switch (Varz)
            {
                case 1: { Carro[c][mod1]=componentid; }
                case 2: { Carro[c][mod2]=componentid; }
                case 3: { Carro[c][mod3]=componentid; }
                case 4: { Carro[c][mod4]=componentid; }
                case 5: { Carro[c][mod5]=componentid; }
                case 6: { Carro[c][mod6]=componentid; }
                case 7: { Carro[c][mod7]=componentid; }
                case 8: { Carro[c][mod8]=componentid; }
                case 9: { Carro[c][mod9]=componentid; }
                case 10: { Carro[c][mod10]=componentid; }
                case 11: { Carro[c][mod11]=componentid; }
                case 12: { Carro[c][mod12]=componentid; }
                case 13: { Carro[c][mod13]=componentid; }
                case 14: { Carro[c][mod14]=componentid; }
                case 15: { Carro[c][mod15]=componentid; }
                case 16: { Carro[c][mod16]=componentid; }
                case 17: { Carro[c][mod17]=componentid; }
            }
            break;
        }
    }*/
    return 1;
}
public OnVehiclePaintjob(playerid,vehicleid, paintjobid)
{
    /*for(new c = 0; c < sizeof(Carro); c++)
    {
        if(Carro[c][CarroID] == vehicleid)
        {
            Carro[c][paintjob]=paintjobid;
            Carro[c][PaintJobOn]=1;
            break;
        }
    }*/
    return 1;
}
public OnVehicleRespray(playerid,vehicleid, color1, color2)
{
    /*for(new c = 0; c < sizeof(Carro); c++)
    {
        if(Carro[c][CarroID] == vehicleid)
        {
            Carro[c][CorUm] = color1;
            Carro[c][CorDois] = color2;
            break;
        }
    }*/
    return 1;
}
forward AntCrash(playerid);
public AntCrash(playerid)
{
    XiterCrashando[playerid] --;
    if(XiterCrashando[playerid] > 4)
    {
        format(gstring,sizeof(gstring), "AntiAttack:%s[ID: %d] Foi Banido Pelo Anti Crash Player!",PlayerName(playerid),playerid);
        ABroadCast(COLOR_LIGHTRED,gstring,1);
        Ban(playerid);
    }
}
forward FakeKillAtivo(playerid);
public FakeKillAtivo(playerid)
{
    if(FakeKillOn == 1)
    {
        antifakekill[playerid] --;
        if(antifakekill[playerid] > 2)
        {
            new NomePlayer[MAX_PLAYER_NAME];
            GetPlayerName(playerid,NomePlayer,sizeof(NomePlayer));
            format(gstring,sizeof(gstring), "AntiAttack:%s[ID: %d] Foi acusado ser Fake Kill e Foi desconectado(Anti Xiter 2)!",NomePlayer,playerid);
            ABroadCast(COLOR_LIGHTRED,gstring,1);
            getdate(year, month, day);
            format(gstring, sizeof(gstring), "FakeKill: %s foi desconectado automaticamente acusado de Fake Kill (%d-%d-%d)", PlayerName(playerid),day,month,year);
            AtackLog(gstring);
            Kick(playerid);
            SetTimer("DesligarFakeKill", 15000, false);
        }
    }
    return 1;
}
forward LigarFakeKill(playerid);
public LigarFakeKill(playerid)
{
    if(FakeKillOn == 0)
    {
        antifakekill[playerid] --;
        if(antifakekill[playerid] > 2)
        {
            antifakekill[playerid] = 0;
            KillTimer(TempoCheckHack);
            format(gstring,sizeof(gstring), "AntiAttack: %s Pode Ser Fake Kill, Anti Xiter Flood Ligado Automaticamente!",PlayerName(playerid));
            ABroadCast(COLOR_LIGHTRED,gstring,1);
            FakeKillOn = 1;
            SetTimer("DesligarFakeKill", 15000, false);
        }
    }
    return 1;
}
forward DesligarFakeKill();
public DesligarFakeKill()
{
    FakeKillOn = 0;
    format(gstring,sizeof(gstring), "AntiAttack: Anti Fake Kill Desligado Automaticamente!");
    ABroadCast(COLOR_LIGHTRED,gstring,1);
    TempoCheckHack = SetTimer("CheckHack", 4000, 1);
    return 1;
}
forward ShowMessageDB(playerid);
public ShowMessageDB(playerid)
{
    format(strvinny,sizeof(strvinny),"{FF8000}Player:{00FFFF} %s {FF8000}Foi Acusado de Cometer DB em Você\nCaso Seja Verdade Aperte em '{00FFFF}Acusar{FF8000}'!\nCaso contrário aperte em '{00FFFF}Não Acusar{FF8000}'!",kickname);
    ShowPlayerDialog(playerid,1643,DIALOG_STYLE_MSGBOX,"Acusação Driver-By",strvinny,"Acusar","Nao Acusar");
    return 1;
}
public RemoveCone(playerid)
{
    for(new i = 0; i < MaiorID; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(IsACop(playerid))
            {
                DisablePlayerCheckpoint(i);
            }
        }
    }
    for(new x=0;x<sizeof(Cone);x++)
    {
       DestroyDynamicObject(Cone[x]);
    }
    PlayerInfo[playerid][pCone] = 0;
    return 1;
}
SetPlayerAttachedObjectEx(playerid, slot, model, bone, Float:X, Float:Y, Float:Z, Float:RX, Float:RY, Float:RZ)
{
    if(!pObject[playerid][slotreserved])
    {
        pObject[playerid][slotreserved] = true;
        pObject[playerid][omodel] = model;
        pObject[playerid][oslot] = slot;
        SetPlayerAttachedObject(playerid, slot, model, bone, X, Y, Z, RX, RY, RZ);
    }
    else
    {
        SetPlayerAttachedObject(playerid, pObject[playerid][oslot], model, bone, X, Y, Z, RX, RY, RZ);
    }
    return 1;
}
GetEmptySlot(playerid)
{
    for(new i = 0; i < MAX_PLAYER_ATTACHED_OBJECTS; ++i)
    {
        if(!IsPlayerAttachedObjectSlotUsed(playerid, i))
        {
            return i;
        }
    }
    return -1;
}
forward FuncoesBPG(playerid);
public FuncoesBPG(playerid)
{
    new hora,minuto,segundo;
    gettime(hora, minuto, segundo);
    if(minuto == 55 && segundo == 1) { SendClientMessageToAll(0xf5f75dFF, "Faltam 5 minutos para iniciar o sorteio da loteria, corra e compre seu bilhete!"); }
    if(hora == 9 && minuto == 30 && segundo == 0) { SendClientMessageToAll(0xfaad51FF, "[GUERRA] Faltam apenas 30 minutos para iniciar a GUERRA DO MORRO!"); }
    if(hora == 9 && minuto == 45 && segundo == 0) { SendClientMessageToAll(0xfaad51FF, "[GUERRA] Faltam apenas 15 minutos para iniciar a GUERRA DO MORRO!"); }
    if(hora == 9 && minuto == 55 && segundo == 0) { SendClientMessageToAll(0xfaad51FF, "[GUERRA] Daqui 5 minutos começará a Guerra no Morro, Participantes dirijam-se ao Local!"); }
    if(hora == 13 && minuto == 30 && segundo == 0) { SendClientMessageToAll(0xfaad51FF, "[GUERRA] Faltam apenas 30 minutos para iniciar a GUERRA DO MORRO!"); }
    if(hora == 13 && minuto == 45 && segundo == 0) { SendClientMessageToAll(0xfaad51FF, "[GUERRA] Faltam apenas 15 minutos para iniciar a GUERRA DO MORRO!"); }
    if(hora == 13 && minuto == 55 && segundo == 0) { SendClientMessageToAll(0xfaad51FF, "[GUERRA] Em 5 minutos começará a GUERRA DO MORRO, participantes dirijam-se ao ao morro!"); }
    if(hora == 16 && minuto == 30 && segundo == 0) { SendClientMessageToAll(0xfaad51FF, "[GUERRA] Faltam apenas 30 minutos para iniciar a GUERRA DO MORRO!"); }
    if(hora == 16 && minuto == 45 && segundo == 0) { SendClientMessageToAll(0xfaad51FF, "[GUERRA] Faltam apenas 15 minutos para iniciar a GUERRA DO MORRO!"); }
    if(hora == 16 && minuto == 55 && segundo == 0) { SendClientMessageToAll(0xfaad51FF, "[GUERRA] Daqui 5 minutos começará a GUERRA DO MORRO, participantes dirijam-se ao local!"); }
    if(hora == 20 && minuto == 30 && segundo == 0) { SendClientMessageToAll(0xfaad51FF, "[GUERRA] Faltam apenas 30 minutos para iniciar a GUERRA DO MORRO!"); }
    if(hora == 20 && minuto == 45 && segundo == 0) { SendClientMessageToAll(0xfaad51FF, "[GUERRA] Faltam apenas 15 minutos para iniciar a GUERRA DO MORRO!"); }
    if(hora == 20 && minuto == 55 && segundo == 0) { SendClientMessageToAll(0xfaad51FF, "[GUERRA] Daqui 5 minutos começará a GUERRA DO MORRO, participantes dirijam-se ao morro!"); }
    if(hora == 23 && minuto == 30 && segundo == 0) { SendClientMessageToAll(0xfaad51FF, "[GUERRA] Faltam apenas 30 minutos para iniciar a GUERRA DO MORRO!"); }
    if(hora == 23 && minuto == 45 && segundo == 0) { SendClientMessageToAll(0xfaad51FF, "[GUERRA] Faltam apenas 15 minutos para iniciar a GUERRA DO MORRO!"); }
    if(hora == 23 && minuto == 55 && segundo == 0) { SendClientMessageToAll(0xfaad51FF, "[GUERRA] Em 5 minutos começará a GUERRA DO MORRO, participantes dirijam-se ao morro!"); }
    for(new i = 0; i < MaiorID; i++)
    {
        if(MiraInfo[i] == 1)
        {
            if(GetPlayerTargetPlayer(i) != INVALID_PLAYER_ID)
            {
                format(gstring, sizeof(gstring), "~n~~n~~n~~n~~n~~n~~n~~n~~r~~h~Armas Info~n~~b~~h~~h~Nome: ~w~%s, ~g~~h~~h~Org: ~w~%s!",PlayerName(GetPlayerTargetPlayer(i)),NomeORG(GetPlayerTargetPlayer(i)));
                GameTextForPlayer(i, gstring, 1070, 3);
            }
        }
    }
    return 1;
}
public ModoTrabalho(playerid, modo)
{
    if(modo == 1)
    {
        if(admtrampando[playerid] > 0)
        {
            admtrampando[playerid] = 0;
            GetPlayerName(playerid,sendername,sizeof(sendername));
            format(gstring, sizeof(gstring), "Admin: %s Está Jogando, para mais informações /admins.", PlayerName(playerid));
            SendClientMessageToAll(0xFF8080FF, gstring);
            KillTimer(TempoAdministrador);
            SetPlayerToTeamColor(playerid);
            ResetPlayerWeapons(playerid);
            SetPlayerHealth(playerid,100);
            PhoneOnline[playerid] = 0;
            SendClientMessage(playerid, 0x808080AA, "Você Saiu de modo Trabalho, e seu celular foi Ligado Automaticamente!");
        }
        else
        {
            admtrampando[playerid] = 1;
            GetPlayerName(playerid,sendername,sizeof(sendername));
            format(gstring, sizeof(gstring), "Admin: %s Está Trabalhando, para mais informações /admins.", PlayerName(playerid));
            SendClientMessageToAll(0xFF8080FF, gstring);
            SetPlayerToTeamColor(playerid);
            TempoAdministrador = SetTimerEx("Administrador", 100, true, "i", playerid);
            PhoneOnline[playerid] = 1;
            SendClientMessage(playerid, 0x808080AA, "Você Entrou em modo Trabalho, e seu Celular foi Desligado Automaticamente!");
        }
    }
    else if(modo == 2)
    {
        if(admtrampando[playerid] > 0)
        {
            admtrampando[playerid] = 0;
            GetPlayerName(playerid,sendername,sizeof(sendername));
            format(gstring, sizeof(gstring), "Admin: %s Está Jogando, para mais informações /admins.", PlayerName(playerid));
            SendClientMessageToAll(0xFF8080FF, gstring);
            KillTimer(TempoAdministrador);
            SetPlayerToTeamColor(playerid);
            ResetPlayerWeapons(playerid);
            SetPlayerHealth(playerid,100);
            PhoneOnline[playerid] = 0;
            SendClientMessage(playerid, 0x808080AA, "Você Saiu de modo Trabalho, e seu celular foi Ligado Automaticamente!");
        }
    }
    else if(modo == 3000)
    {
        if(admtrampando[playerid] > 0)
        {
            admtrampando[playerid] = 0;
            KillTimer(TempoAdministrador);
            SetPlayerToTeamColor(playerid);
            ResetPlayerWeapons(playerid);
            SetPlayerHealth(playerid,100);
            PhoneOnline[playerid] = 0;
            SendClientMessage(playerid, 0x808080AA, "Você Saiu de modo Trabalho, e seu celular foi Ligado Automaticamente!");
        }
        else
        {
            admtrampando[playerid] = 1;
            SetPlayerToTeamColor(playerid);
            TempoAdministrador = SetTimerEx("Administrador", 100, true, "i", playerid);
            PhoneOnline[playerid] = 1;
            SendClientMessage(playerid, 0x808080AA, "Você Entrou em modo Trabalho, e seu Celular foi Desligado Automaticamente!");
        }
    }
    return 1;
}
forward ShowGz(playerid);
public ShowGz(playerid)
{
    if(donoestacao == 0)
    {
        GangZoneShowForPlayer(playerid, GZEstacao, 0xC0C0C0AA);
    }
    if(donoestacao == 12)
    {
        GangZoneShowForPlayer(playerid, GZEstacao, COLORGZ_LH);
    }
    if(donoestacao == 13)
    {
        GangZoneShowForPlayer(playerid, GZEstacao, COLORGZ_YAKUZA);
    }
    if(donoestacao == 11)
    {
        GangZoneShowForPlayer(playerid, GZEstacao, COLORGZ_PFII);
    }
    if(donocasarao == 0)
    {
        GangZoneShowForPlayer(playerid, GZCasarao, 0xC0C0C0AA);
    }
    if(donocasarao == 12)
    {
        GangZoneShowForPlayer(playerid, GZCasarao, COLORGZ_LH);
    }
    if(donocasarao == 13)
    {
        GangZoneShowForPlayer(playerid, GZCasarao, COLORGZ_YAKUZA);
    }
    if(donocasarao == 11)
    {
        GangZoneShowForPlayer(playerid, GZCasarao, COLORGZ_PFII);
    }
    if(donoPark == 0)
    {
        GangZoneShowForPlayer(playerid, GZPark, 0xC0C0C0AA);
    }
    if(donoPark == 25)
    {
        GangZoneShowForPlayer(playerid, GZPark, COR_DRIFT);
    }
    if(donoPark == 1)
    {
        GangZoneShowForPlayer(playerid, GZPark, COR_PM);
    }
    if(donoPark == 14)
    {
        GangZoneShowForPlayer(playerid, GZPark, TEAM_GROVE_COLOR);
    }
    if(donoPark == 17)
    {
        GangZoneShowForPlayer(playerid, GZPark, TEAM_BALLAS_COLOR);
    }
    if(donoPark == 18)
    {
        GangZoneShowForPlayer(playerid, GZPark, TEAM_VAGOS_COLOR);
    }
    if(donoPark == 5)
    {
        GangZoneShowForPlayer(playerid, GZPark, TEAM_AZTECAS_COLOR);
    }
    if(donoPark == 2)
    {
        GangZoneShowForPlayer(playerid, GZPark, COR_ROTA);
    }
    if(donoPark == 28)
    {
        GangZoneShowForPlayer(playerid, GZPark, COR_GPT);
    }
    if(donoPark == 35)
    {
        GangZoneShowForPlayer(playerid, GZPark, COR_PsykO);
    }
    if(donoPark == 21)
    {
        GangZoneShowForPlayer(playerid, GZPark, GCOP_COLOR);
    }
    if(donoPark == 21)
    {
        GangZoneShowForPlayer(playerid, GZPark, COR_HELLS);
    }
    if(donoPark == 22)
    {
        GangZoneShowForPlayer(playerid, GZPark, COR_MONGOLS);
    }
    if(donoPark == 23)
    {
        GangZoneShowForPlayer(playerid, GZPark, COR_SONS);
    }
    if(donoPark == 20)
    {
        GangZoneShowForPlayer(playerid, GZPark, 0xCCFF99AA);
    }
    if(donoCemiterio == 0)
    {
        GangZoneShowForPlayer(playerid, GZPark, 0xC0C0C0AA);
    }
    if(donoCemiterio == 2)
    {
        GangZoneShowForPlayer(playerid, GZPark, COR_ROTA);
    }
    if(donoCemiterio == 28)
    {
        GangZoneShowForPlayer(playerid, GZPark, COR_GPT);
    }
    if(donoCemiterio == 35)
    {
        GangZoneShowForPlayer(playerid, GZPark, COR_PsykO);
    }
    if(donoCemiterio == 1)
    {
        GangZoneShowForPlayer(playerid, GZPark, COR_PM);
    }
    if(donoCemiterio == 14)
    {
        GangZoneShowForPlayer(playerid, GZPark, TEAM_GROVE_COLOR);
    }
    if(donoCemiterio == 17)
    {
        GangZoneShowForPlayer(playerid, GZPark, TEAM_BALLAS_COLOR);
    }
    if(donoCemiterio == 18)
    {
        GangZoneShowForPlayer(playerid, GZPark, TEAM_VAGOS_COLOR);
    }
    if(donoCemiterio == 5)
    {
        GangZoneShowForPlayer(playerid, GZPark, TEAM_AZTECAS_COLOR);
    }
    if(donoCemiterio == 2)
    {
        GangZoneShowForPlayer(playerid, GZPark, COR_ROTA);
    }
    if(donoCemiterio == 28)
    {
        GangZoneShowForPlayer(playerid, GZPark, COR_GPT);
    }
    if(donoCemiterio == 21)
    {
        GangZoneShowForPlayer(playerid, GZPark, GCOP_COLOR);
    }
    if(donoCemiterio == 21)
    {
        GangZoneShowForPlayer(playerid, GZPark, COR_HELLS);
    }
    if(donoCemiterio == 22)
    {
        GangZoneShowForPlayer(playerid, GZPark, COR_MONGOLS);
    }
    if(donoCemiterio == 23)
    {
        GangZoneShowForPlayer(playerid, GZPark, COR_SONS);
    }
    if(donoCemiterio == 20)
    {
        GangZoneShowForPlayer(playerid, GZPark, 0xCCFF99AA);
    }
    if(donoPosto == 0)
    {
        a3d();//desbuga as inf de dono do posto
        GangZoneShowForPlayer(playerid, GZPosto, 0xC0C0C0AA);
    }
    if(donoPosto == 1)
    {
        a3d();//desbuga as inf de dono do posto
        GangZoneShowForPlayer(playerid, GZPosto, COR_PM);
    }
    if(donoPosto == 21)
    {
        a3d();//desbuga as inf de dono do posto
        GangZoneShowForPlayer(playerid, GZPosto, COR_HELLS);
    }
    if(donoPosto == 22)
    {
        a3d();//desbuga as inf de dono do posto
        GangZoneShowForPlayer(playerid, GZPosto, COR_MONGOLS);
    }
    if(donoPosto == 23)
    {
        a3d();//desbuga as inf de dono do posto
        GangZoneShowForPlayer(playerid, GZPosto, COR_SONS);
    }
    if(donoPosto == 2)
    {
        a3d();//desbuga as inf de dono do posto
        GangZoneShowForPlayer(playerid, GZPosto, COR_ROTA);
    }
    if(donoPosto == 28)
    {
        a3d();//desbuga as inf de dono do posto
        GangZoneShowForPlayer(playerid, GZPosto, COR_GPT);
    }
    if(donoPosto == 35)
    {
        a3d();//desbuga as inf de dono do posto
        GangZoneShowForPlayer(playerid, GZPosto, COR_PsykO);
    }
    if(donoPosto == 25)
    {
        a3d();//desbuga as inf de dono do posto
        GangZoneShowForPlayer(playerid, GZPosto, COR_TRIAD);
    }
    if(donoShop == 0)
    {
        GangZoneShowForPlayer(playerid, GZShop, 0xC0C0C0AA);
    }
    if(donoShop == 1)
    {
        GangZoneShowForPlayer(playerid, GZShop, COR_PM);
    }
    if(donoShop == 14)
    {
        GangZoneShowForPlayer(playerid, GZShop, TEAM_GROVE_COLOR);
    }
    if(donoShop == 17)
    {
        GangZoneShowForPlayer(playerid, GZShop, TEAM_BALLAS_COLOR);
    }
    if(donoShop == 18)
    {
        GangZoneShowForPlayer(playerid, GZShop, TEAM_VAGOS_COLOR);
    }
    if(donoShop == 5)
    {
        GangZoneShowForPlayer(playerid, GZShop, TEAM_AZTECAS_COLOR);
    }
    if(donoShop == 2)
    {
        GangZoneShowForPlayer(playerid, GZShop, COR_ROTA);
    }
    if(donoShop == 28)
    {
        GangZoneShowForPlayer(playerid, GZShop, COR_GPT);
    }
    if(donoShop == 35)
    {
        GangZoneShowForPlayer(playerid, GZShop, COR_PsykO);
    }
    if(donoShop == 21)
    {
        GangZoneShowForPlayer(playerid, GZShop, COR_HELLS);
    }
    if(donoShop == 22)
    {
        GangZoneShowForPlayer(playerid, GZShop, COR_MONGOLS);
    }
    if(donoShop == 23)
    {
        GangZoneShowForPlayer(playerid, GZShop, COR_SONS);
    }
    if(donoShop == 19)
    {
        GangZoneShowForPlayer(playerid, GZShop, 0xc20916AA);
    }
    if(donoShop == 20)
    {
        GangZoneShowForPlayer(playerid, GZShop, 0xCCFF99AA);
    }
    if(donoShop == 25)
    {
        GangZoneShowForPlayer(playerid, GZShop, COR_DRIFT);
    }
    if(donoskate == 0)
    {
        GangZoneShowForPlayer(playerid, GZSkate, 0xC0C0C0AA);
    }
    if(donoskate == 14)
    {
        GangZoneShowForPlayer(playerid, GZSkate, TEAM_GROVE_COLOR);
    }
    if(donoskate == 17)
    {
        GangZoneShowForPlayer(playerid, GZSkate, TEAM_BALLAS_COLOR);
    }
    if(donoskate == 18)
    {
        GangZoneShowForPlayer(playerid, GZSkate, TEAM_VAGOS_COLOR);
    }
    if(donoskate == 5)
    {
        GangZoneShowForPlayer(playerid, GZSkate, TEAM_AZTECAS_COLOR);
    }
    if(donoskate == 2)
    {
        GangZoneShowForPlayer(playerid, GZSkate, COR_ROTA);
    }
    if(donoskate == 28)
    {
        GangZoneShowForPlayer(playerid, GZSkate, COR_GPT);
    }
    if(donoShop == 35)
    {
        GangZoneShowForPlayer(playerid, GZShop, COR_PsykO);
    }
    if(donoskate == 1)
    {
        GangZoneShowForPlayer(playerid, GZSkate, GCOP_COLOR);
    }
    if(donoskate == 21)
    {
        GangZoneShowForPlayer(playerid, GZSkate, COR_HELLS);
    }
    if(donoskate == 22)
    {
        GangZoneShowForPlayer(playerid, GZSkate, COR_MONGOLS);
    }
    if(donoskate == 23)
    {
        GangZoneShowForPlayer(playerid, GZSkate, COR_SONS);
    }
    if(donoskate == 19)
    {
        GangZoneShowForPlayer(playerid, GZSkate, 0xc20916AA);
    }
    if(donoskate == 20)
    {
        GangZoneShowForPlayer(playerid, GZSkate, 0xCCFF99AA);
    }
    if(donoskate == 25)
    {
        GangZoneShowForPlayer(playerid, GZSkate, COR_DRIFT);
    }
 return 1;
}
stock IsPlayerInArea(playerid, Float:max_x, Float:min_x, Float:max_y, Float:min_y)
{
    new Float:X, Float:Y, Float:Z;
    GetPlayerPos(playerid, X, Y, Z);
    if(X <= max_x && X >= min_x && Y <= max_y && Y >= min_y) return 1;
    return 0;
}

stock IsPlayerInWater(playerid)
{
    new Float:x,Float:y,Float:pz;
    GetPlayerPos(playerid,x,y,pz);
    if (
    (IsPlayerInArea(playerid, 2032.1371, 1841.2656, 1703.1653, 1467.1099) && pz <= 9.0484) //lv piratenschiff
    || (IsPlayerInArea(playerid, 2109.0725, 2065.8232, 1962.5355, 10.8547) && pz <= 10.0792) //lv visage
    || (IsPlayerInArea(playerid, -492.5810, -1424.7122, 2836.8284, 2001.8235) && pz <= 41.06) //lv staucamm
    || (IsPlayerInArea(playerid, -2675.1492, -2762.1792, -413.3973, -514.3894) && pz <= 4.24) //sf südwesten kleiner teich
    || (IsPlayerInArea(playerid, -453.9256, -825.7167, -1869.9600, -2072.8215) && pz <= 5.72) //sf gammel teich
    || (IsPlayerInArea(playerid, 1281.0251, 1202.2368, -2346.7451, -2414.4492) && pz <= 9.3145) //ls neben dem airport
    || (IsPlayerInArea(playerid, 2012.6154, 1928.9028, -1178.6207, -1221.4043) && pz <= 18.45) //ls mitte teich
    || (IsPlayerInArea(playerid, 2326.4858, 2295.7471, -1400.2797, -1431.1266) && pz <= 22.615) //ls weiter südöstlich
    || (IsPlayerInArea(playerid, 2550.0454, 2513.7588, 1583.3751, 1553.0753) && pz <= 9.4171) //lv pool östlich
    || (IsPlayerInArea(playerid, 1102.3634, 1087.3705, -663.1653, -682.5446) && pz <= 112.45) //ls pool nordwestlich
    || (IsPlayerInArea(playerid, 1287.7906, 1270.4369, -801.3882, -810.0527) && pz <= 87.123) //pool bei maddog's haus oben
    || (pz < 1.5)
    )
    {
        return 1;
    }
    return 0;
}
stock IsPlayerInPref(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 1396.344360 && y >= -1864.869140 && x <= 1558.344360 && y <= -1747.869140) return 1; // morro 1
    else return 0;
}
forward GetPlayerWanteDLevel(playerid);
public GetPlayerWanteDLevel(playerid)
{
    new nivel = 0;
    if(WantedPoints[playerid] > 0)
    {
        nivel = WantedPoints[playerid];
    }
    return nivel;
}
forward CarregarPlayer(playerid);
public CarregarPlayer(playerid)
{
    new file[128];
    format(file, sizeof(file), OpenAccPlayer, PlayerName(playerid));
                new key[ 128 ] , val[ 128 ], Data[ 128 ];
                new File: UserFile = fopen(file, io_read);
                if ( UserFile )
                {
                    while ( fread( UserFile , Data , sizeof( Data ) ) )
                    {
                        key = ini_GetKey( Data );
                        if( strcmp( key , "Level" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLevel] = strval( val ); }
                        if( strcmp( key , "Respeito" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pExp] = strval( val ); }
                        if( strcmp( key , "Online" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pOnline] = strval( val ); }
                        if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmin] = strval( val ); }
                        if( strcmp( key , "HelpLevel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHelper] = strval( val ); }
                        if( strcmp( key , "DonateRank" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pVip] = strval( val ); }
                        if( strcmp( key , "UpgradePoints" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][gPupgrade] = strval( val ); }
                        if( strcmp( key , "ConnectedTime" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pConnectTime] = strval( val ); }
                        if( strcmp( key , "Registrado" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pReg] = strval( val ); }
                        if( strcmp( key , "Sex" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSex] = strval( val ); }
                        if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCash] = strval( val ); }
                        if( strcmp( key , "Bank" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pConta] = strval( val ); }
                        if( strcmp( key , "Crimes" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCrimes] = strval( val ); }
                        if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][Rufflesills] = strval( val ); }
                        if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDeaths] = strval( val ); }
                        if( strcmp( key , "Phonebook" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPhoneBook] = strval( val ); }
                        if( strcmp( key , "LottoNr" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLottoNr] = strval( val ); }
                        if( strcmp( key , "Fishes" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFishes] = strval( val ); }
                        if( strcmp( key , "BiggestFish" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBiggestFish] = strval( val ); }
                        if( strcmp( key , "Emprego" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pEmprego] = strval( val ); }
                        if( strcmp( key , "Paycheck" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSalario] = strval( val ); }
                        if( strcmp( key , "HeadValue" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHeadValue] = strval( val ); }
                        if( strcmp( key , "Jailed" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pJailed] = strval( val ); }
                        if( strcmp( key , "JailTime" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pJailTime] = strval( val ); }
                        if( strcmp( key , "Materiais" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMats] = strval( val ); }
                        if( strcmp( key , "Maconha" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrogas] = strval( val ); }
                        if( strcmp( key , "Cocaina" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrogas2] = strval( val ); }
                        if( strcmp( key , "Crack" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrogas3] = strval( val ); }
                        if( strcmp( key , "Lider" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLider] = strval( val ); }
                        if( strcmp( key , "FamyLider" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFamyLider] = strval( val ); }
                        if( strcmp( key , "Member" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMembro] = strval( val ); }
                        if( strcmp( key , "MemberF" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFamyMember] = strval( val ); }
                        if( strcmp( key , "Rank" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCargo] = strval( val ); }
                        if( strcmp( key , "Char" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSkin] = strval( val ); }
                        if( strcmp( key , "Gold" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGold] = strval( val ); }
                        if( strcmp( key , "MV" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMV] = strval( val ); }
                        if( strcmp( key , "ContractTime" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pContractTime] = strval( val ); }
                        if( strcmp( key , "DetSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDetSkill] = strval( val ); }
                        if( strcmp( key , "SexSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSexSkill] = strval( val ); }
                        if( strcmp( key , "BoxSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBoxSkill] = strval( val ); }
                        if( strcmp( key , "LawSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLawSkill] = strval( val ); }
                        if( strcmp( key , "MechSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMechSkill] = strval( val ); }
                        if( strcmp( key , "NewsSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pNewsSkill] = strval( val ); }
                        if( strcmp( key , "DrogasSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrogasSkill] = strval( val ); }
                        if( strcmp( key , "CookSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCookSkill] = strval( val ); }
                        if( strcmp( key , "FishSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFishSkill] = strval( val ); }
                        if( strcmp( key , "pSHealth" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSHealth] = floatstr( val ); }
                        if( strcmp( key , "Team" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pTeam] = strval( val ); }
                        if( strcmp( key , "PhoneNr" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPnumber] = strval( val ); }
                        if( strcmp( key , "House" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPHousekey] = strval( val ); }
                        if( strcmp( key , "Bizz" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPbiskey] = strval( val ); }
                        if( strcmp( key , "CarLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCarLic] = strval( val ); }
                        if( strcmp( key , "FlyLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFlyLic] = strval( val ); }
                        if( strcmp( key , "BoatLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBoatLic] = strval( val ); }
                        if( strcmp( key , "FishLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFishLic] = strval( val ); }
                        if( strcmp( key , "GunLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGunLic] = strval( val ); }
                        if( strcmp( key , "PayDay" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPayDay] = strval( val ); }
                        if( strcmp( key , "CDPlayer" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCDPlayer] = strval( val ); }
                        if( strcmp( key , "Wins" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWins] = strval( val ); }
                        if( strcmp( key , "Loses" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLoses] = strval( val ); }
                        if( strcmp( key , "AlcoholPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAlcoholPerk] = strval( val ); }
                        if( strcmp( key , "DrugPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrugPerk] = strval( val ); }
                        if( strcmp( key , "MiserPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMiserPerk] = strval( val ); }
                        if( strcmp( key , "PainPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPainPerk] = strval( val ); }
                        if( strcmp( key , "TraderPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pTraderPerk] = strval( val ); }
                        if( strcmp( key , "Tutorial" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pTut] = strval( val ); }
                        if( strcmp( key , "Avisos" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWarns] = strval( val ); }
                        if( strcmp( key , "Married" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMarried] = strval( val ); }
                        if( strcmp( key , "Spawn" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSpawn] = strval( val ); }
                        if( strcmp( key , "SafeMaconha" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSafeDrogas] = strval( val ); }
                        if( strcmp( key , "SafeCocaina" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSafeDrogas2] = strval( val ); }
                        if( strcmp( key , "SafeCrack" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSafeDrogas3] = strval( val ); }
                        if( strcmp( key , "NivelProcurado" , true ) == 0 ) { val = ini_GetValue( Data ); WantedPoints[playerid] = strval( val ); }
                        if( strcmp( key , "SafeMateriais" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][psMats] = strval( val ); }
                        if( strcmp( key , "Luta" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLuta] = strval( val ); }
                        if( strcmp( key , "Dorgado" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDorgado] = strval( val ); }
                        if( strcmp( key , "Dorgado2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDorgado2] = strval( val ); }
                        if( strcmp( key , "Doenca" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDoenca] = strval( val ); }
                        if( strcmp( key , "HoraLogin" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLastHora] = strval( val ); }
                        if( strcmp( key , "MinutoLogin" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLastMinuto] = strval( val ); }
                        if( strcmp( key , "SegundoLogin" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLastSegundo] = strval( val ); }
                        if( strcmp( key , "DiaLogin" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLastDia] = strval( val ); }
                        if( strcmp( key , "MesLogin" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLastMes] = strval( val ); }
                        if( strcmp( key , "AnoLogin" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLastAno] = strval( val ); }
                        if( strcmp( key , "Votei" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pVotou] = strval( val ); }
                        if( strcmp( key , "BlockTime" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pTimeBlock] = strval( val ); }
                        if( strcmp( key , "Hospital" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHosp] = strval( val ); }
                        if( strcmp( key , "HospitalTime" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHospTime] = strval( val );  }
                        if( strcmp( key , "MarriedTo" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pMarriedTo], val, 0, strlen(val)-1, 255); }
                        if( strcmp( key , "Work" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWorkFree] = strval( val ); }
                        if( strcmp( key , "BlockLider" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLiderBlock] = strval( val ); }
                        if( strcmp( key , "BlockNome" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pNomeBlock] = strval( val ); }
                    }//end while
                    fclose(UserFile);//close the file after everything has been read in the while
                    //format(PlayerInfo[playerid][pMarriedTo], 128, "%s", dini_Get(file, "MarriedTo"));
                }
    ResetPlayerMoney(playerid);
    GivePlayerMoney(playerid,PlayerInfo[playerid][pCash]);
    CurrentMoney[playerid] = PlayerInfo[playerid][pCash];
    return 1;
}
forward SalvarContas();
public SalvarContas(){ for(new i = 0; i < MaiorID; i++) { SalvarPlayer(i); } return 1; }
stock frename(oldname[],newname[])
{

    if(fexist(oldname) && !fexist(newname))
    {

        new File: oldfile, File: newfile, str[0x800];
        oldfile = fopen(oldname, io_read);
        newfile = fopen(newname, io_write);
        fread(oldfile, str);
        fclose(oldfile);
        fremove(oldname);
        fwrite(newfile, str);
        fclose(newfile);
        return 1;
    }
    return 0;
}
#pragma unused frename
forward SaveCarros();
public SaveCarros()
{
    new idx;
    new File: file2;
    while (idx < sizeof(Carro))
    {

        //if(Carro[idx][CarroON] == 0) strmid(Carro[idx][Dono], "Ninguem", 0, strlen("Ninguem"), 64);
        new coordsstring[512];
        format(coordsstring, sizeof(coordsstring), "%s|%d|%f|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d\n",
        Carro[idx][Dono],Carro[idx][Modelo],Carro[idx][cSpawnX],Carro[idx][cSpawnY],Carro[idx][cSpawnZ],Carro[idx][cAngulo],Carro[idx][CarroON],
        Carro[idx][CorUm],Carro[idx][CorDois],Carro[idx][Trancado],Carro[idx][mod1],Carro[idx][mod2],Carro[idx][mod3],Carro[idx][mod4],Carro[idx][mod5],
        Carro[idx][mod6],Carro[idx][mod7],Carro[idx][mod8],Carro[idx][mod9],Carro[idx][mod10],Carro[idx][mod11],Carro[idx][mod12],Carro[idx][mod13],Carro[idx][mod14],
        Carro[idx][mod15],Carro[idx][mod16],Carro[idx][mod17],Carro[idx][paintjob],Carro[idx][PaintJobOn],Carro[idx][cDate]);
        printf("Carro Dono: %s, Salvo!", Carro[idx][Dono]);
        if(idx == 0)
        {

            file2 = fopen("PlayGamer/Carros.cfg", io_write);
        }
        else
        {

            file2 = fopen("PlayGamer/Carros.cfg", io_append);
        }
        fwrite(file2, coordsstring);
        idx++;
        fclose(file2);
    }
    return 1;
}
forward LoadCarros();
public LoadCarros()
{
    new arrCoords[30][64];
    new strFromFile2[512];
    new File: file = fopen("PlayGamer/Carros.cfg", io_read);
    if (file)
    {

        new idx = 0;
        while(idx < sizeof(Carro))
        {

            fread(file, strFromFile2);
            split(strFromFile2, arrCoords, '|');
            strmid(Carro[idx][Dono], arrCoords[0], 0, strlen(arrCoords[0]), 255);
            Carro[idx][Modelo] = strval(arrCoords[1]);
            Carro[idx][cSpawnX] = floatstr(arrCoords[2]);
            Carro[idx][cSpawnY] = floatstr(arrCoords[3]);
            Carro[idx][cSpawnZ] = floatstr(arrCoords[4]);
            Carro[idx][cAngulo] = floatstr(arrCoords[5]);
            Carro[idx][CarroON] = strval(arrCoords[6]);
            Carro[idx][CorUm] = strval(arrCoords[7]);
            Carro[idx][CorDois] = strval(arrCoords[8]);
            Carro[idx][Trancado] = strval(arrCoords[9]);
            Carro[idx][mod1] = strval(arrCoords[10]);
            Carro[idx][mod2] = strval(arrCoords[11]);
            Carro[idx][mod3] = strval(arrCoords[12]);
            Carro[idx][mod4] = strval(arrCoords[13]);
            Carro[idx][mod5] = strval(arrCoords[14]);
            Carro[idx][mod6] = strval(arrCoords[15]);
            Carro[idx][mod7] = strval(arrCoords[16]);
            Carro[idx][mod8] = strval(arrCoords[17]);
            Carro[idx][mod9] = strval(arrCoords[18]);
            Carro[idx][mod10] = strval(arrCoords[19]);
            Carro[idx][mod11] = strval(arrCoords[20]);
            Carro[idx][mod12] = strval(arrCoords[21]);
            Carro[idx][mod13] = strval(arrCoords[22]);
            Carro[idx][mod14] = strval(arrCoords[23]);
            Carro[idx][mod15] = strval(arrCoords[24]);
            Carro[idx][mod16] = strval(arrCoords[25]);
            Carro[idx][mod17] = strval(arrCoords[26]);
            Carro[idx][paintjob] = strval(arrCoords[27]);
            Carro[idx][PaintJobOn] = strval(arrCoords[28]);
            Carro[idx][cDate] = strval(arrCoords[29]);
            idx++;
        }
    }
    fclose(file);
    return 1;
}
forward CheckDonoCarro(playerid);
public CheckDonoCarro(playerid)
{
    if(IsPlayerConnected(playerid))
    {

        // carros
        new contarchave = 0;
        for(new h = 0; h < sizeof(Carro); h++)
        {

            if(strcmp(PlayerName(playerid),Carro[h][Dono],true)==0)
            {

                PlayerInfo[playerid][pChave] = Carro[h][CarroID];
                contarchave ++;
                break;
            }
        }
        if(contarchave == 0) PlayerInfo[playerid][pChave] = 0;
    }
    return 1;
}
forward CheckCarros();
public CheckCarros()
{
    new olddate;
    new curdate = getdate();
    new string[128];
    new CountarVendidos = 0;
    for(new i = 0; i < sizeof(Carro); i++)
    {

        /*if(Carro[i][CarroON] == 1 && Carro[i][cDate] > 200)
        {

            gettime(v[3], v[4], v[5]);
            format(string, sizeof(string), "[%d/%d/%d] [%d:%d:%d] Carro ID:%d vendido, Dono:%s, Tempo:%d\n", v[2], v[1], v[0], v[3], v[4], v[5], Carro[i][CarroID], Carro[i][Dono], curdate-olddate);
            new File:hFile;
            hFile = fopen("Logs/CheckCarros.log", io_append);
            fwrite(hFile, string);
            fclose(hFile);
            Carro[i][CarroON] = 0;
            Carro[i][Modelo] = 0;
            Carro[i][cSpawnX] = 0.000000;
            Carro[i][cSpawnY] = 0.000000;
            Carro[i][cSpawnZ] = 0.000000;
            Carro[i][cAngulo] = 0.000000;
            Carro[i][CorUm] = 0;
            Carro[i][CorDois] = 0;
            Carro[i][Trancado] = 0;
            Carro[i][CarroON] = 0;
            DestroyVehicle(Carro[i][CarroID]);
            LimparTunning(i);
            Carro[i][CarroID] = 0;
            strmid(Carro[i][Dono], "Ninguem", 0, strlen("Ninguem"), 256);
            CountarVendidos++;
        }   */
        if(Carro[i][CarroON] == 1 && Carro[i][cDate] > 3)
        {

            olddate = Carro[i][cDate];
            if(curdate-olddate >= 4)
            {

                gettime(v[3], v[4], v[5]);
                format(string, sizeof(string), "[%d/%d/%d] [%d:%d:%d] Carro ID:%d vendido, Dono:%s, Tempo:%d\n", v[2], v[1], v[0], v[3], v[4], v[5], Carro[i][CarroID], Carro[i][Dono], curdate-olddate);
                new File:hFile;
                hFile = fopen("Logs/CheckCarros.log", io_append);
                fwrite(hFile, string);
                fclose(hFile);

                Carro[i][CarroON] = 0;
                Carro[i][Modelo] = 0;
                Carro[i][cSpawnX] = 0.000000;
                Carro[i][cSpawnY] = 0.000000;
                Carro[i][cSpawnZ] = 0.000000;
                Carro[i][cAngulo] = 0.000000;
                Carro[i][CorUm] = 0;
                Carro[i][CorDois] = 0;
                Carro[i][Trancado] = 0;
                Carro[i][CarroON] = 0;
                DestroyVehicle(Carro[i][CarroID]);
                LimparTunning(i);
                Carro[i][CarroID] = 0;
                strmid(Carro[i][Dono], "Ninguem", 0, strlen("Ninguem"), 256);
                CountarVendidos++;
            }
        }
        if(Carro[i][CarroON] == 0) Carro[i][cDate] = 0;
    }
    SaveCarros();
    format(string,sizeof(string),"[PlayGamer Concessionária] {FFFFFF}Foram Liberados %d Carros para a Venda.", CountarVendidos);
    if(CountarVendidos!=0) { OOCNews(0xFF8080FF,string); }
    return 1;
}
forward ComprarCarro(playerid);
public ComprarCarro(playerid)
{
    new NumCarros = 0,string[128];
    if(ModeloCarro[playerid] >= 1)
    {
        if(PlayerInfo[playerid][pChave] == 0)
        {
            if(GetPlayerMoneyEx(playerid) >= CalcularPrecoCar(playerid))
            {
                for(new idx = 0; idx < sizeof(Carro); idx++)
                {
                    if(strcmp(Carro[idx][Dono],"Ninguem",true)==0)
                    {
                        new rand = random(sizeof(ConceSpawn));
                        strmid(Carro[idx][Dono], PlayerName(playerid), 0, strlen(PlayerName(playerid)), MAX_PLAYER_NAME);
                        Carro[idx][CarroID] = CreateVehicle(ModeloCarro[playerid],ConceSpawn[rand][0], ConceSpawn[rand][1], ConceSpawn[rand][2],ConceSpawn[rand][3],0,0, RESPAWN_TIME);
                        PutPlayerInVehicle(playerid, Carro[idx][CarroID], 0);
                        Carro[idx][CarroON] = 0;
                        Carro[idx][Modelo] = ModeloCarro[playerid];
                        format(string, sizeof(string), "[BPG Concessionária] {FFFFFF}Parabéns! Você Comprou um Carro Novo no Valor de R$ 6000000!", Carro[idx][CarroID]);
                        SendClientMessage(playerid, 0x77EEA1FF, string);
                        GivePlayerMoney(playerid, -CalcularPrecoCar(playerid));
                        SBizzInfo[24][sbTill] += CalcularPrecoCar(playerid);
                        GastarProdutos(2, 24, 10);
                        SendClientMessage(playerid, 0xFFA8A8FF, "[BPG Concessionária] {FFFFFF}Estacione Seu carro ou Ele será Vendido automaticamente, Quando Reiniciar o Servidor!");
                        SendClientMessage(playerid, 0xFFA8A8FF, "[BPG Concessionária] {FFFFFF}Estacione Seu carro ou Ele será Vendido automaticamente, Quando Reiniciar o Servidor!");
                        SendClientMessage(playerid, 0x77EEA1FF, "[BPG Concessionária]{FFFFFF}Digite /Painel Para Abrir o Menu de Controle do Seu Veículo!");
                        PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
                        PlayerInfo[playerid][pChave] = Carro[idx][CarroID];
                        format(gstring, sizeof(gstring), "BPG %d", Carro[idx][CarroID]);
                        SetVehicleNumberPlate(Carro[idx][CarroID], gstring);
                        for(new i;i<MaiorID;i++) {CheckDonoCarro(i);}
                        SaveCarros();
                        new curdate = getdate();
                        for(new h = 0; h < sizeof(Carro); h++)
                        {
                            if (strcmp(PlayerName(playerid), Carro[h][Dono], true) == 0)
                            {
                                Carro[h][cDate] = curdate;
                                break;
                            }
                        }
                        NumCarros++;
                        break;
                   }
                }
                if(NumCarros==0) return SendClientMessage(playerid, 0xFFA8A8FF, "[BPG Concessionária] {FFFFFF}Todos os Veículos ja Foram Vendidos, Compre Usado ou Volte mais tarde!");
            }
            else
            {
                format(string,sizeof(string),"[BPG Concessionária] {FFFFFF} Você Não tem Dinheiro suficiente (R$ %d)!", CalcularPrecoCar(playerid));
                SendClientMessage(playerid, 0x77EEA1FF, string);
    return 1;
            }
        }
        else
        {
            SendClientMessage(playerid, 0x77EEA1FF, "[BPG Concessionária] {FFFFFF}Você Ja possui um Veículo!");
            SendClientMessage(playerid, 0x77EEA1FF, "[BPG Concessionária] {FFFFFF}Para Vender Vá a Concessionária, Selecione a Opção 'Vender Veículo'!");
        }
    }
    return 1;
}
public CalcularPrecoCar(playerid)
{
    new ViiinnnyOWneD = 0;
    switch (ModeloCarro[playerid])
    {
    case 400:ViiinnnyOWneD = 700000;
    case 401:ViiinnnyOWneD = 550000;
    case 402:ViiinnnyOWneD = 3000000;
    case 403:ViiinnnyOWneD = 1200000;
    case 404:ViiinnnyOWneD = 500000;
    case 405:ViiinnnyOWneD = 550000;
    case 409:ViiinnnyOWneD = 3500000;
    case 410:ViiinnnyOWneD = 250000;
    case 411:ViiinnnyOWneD = 4000000;
    case 412:ViiinnnyOWneD = 250000;
    case 415:ViiinnnyOWneD = 2000000;
    case 418:ViiinnnyOWneD = 200000;
    case 419:ViiinnnyOWneD = 200000;
    case 421:ViiinnnyOWneD = 250000;
    case 422:ViiinnnyOWneD = 150000;
    case 424:ViiinnnyOWneD = 100000;
    case 426:ViiinnnyOWneD = 300000;
    case 429:ViiinnnyOWneD = 2000000;
    case 434:ViiinnnyOWneD = 250000;
    case 436:ViiinnnyOWneD = 120000;
    case 439:ViiinnnyOWneD = 120000;
    case 445:ViiinnnyOWneD = 180000;
    case 451:ViiinnnyOWneD = 4500000;
    case 457:ViiinnnyOWneD = 100000;
    case 458:ViiinnnyOWneD = 180000;
    case 461:ViiinnnyOWneD = 80000;
    case 462:ViiinnnyOWneD = 50000;
    case 463:ViiinnnyOWneD = 130000;
    case 466:ViiinnnyOWneD = 150000;
    case 467:ViiinnnyOWneD = 180000;
    case 468:ViiinnnyOWneD = 150000;
    case 471:ViiinnnyOWneD = 100000;
    case 474:ViiinnnyOWneD = 250000;
    case 475:ViiinnnyOWneD = 300000;
    case 477:ViiinnnyOWneD = 400000;
    case 478:ViiinnnyOWneD = 80000;
    case 479:ViiinnnyOWneD = 140000;
    case 480:ViiinnnyOWneD = 500000;
    case 481:ViiinnnyOWneD = 5000;
    case 483:ViiinnnyOWneD = 160000;
    case 489:ViiinnnyOWneD = 270000;
    case 491:ViiinnnyOWneD = 170000;
    case 492:ViiinnnyOWneD = 190000;
    case 495:ViiinnnyOWneD = 320000;
    case 496:ViiinnnyOWneD = 250000;
    case 500:ViiinnnyOWneD = 290000;
    case 502:ViiinnnyOWneD = 5000000;
    case 505:ViiinnnyOWneD = 270000;
    case 506:ViiinnnyOWneD = 800000;
    case 507:ViiinnnyOWneD = 220000;
    case 508:ViiinnnyOWneD = 300000;
    case 509:ViiinnnyOWneD = 5000;
    case 510:ViiinnnyOWneD = 130000;
    case 514:ViiinnnyOWneD = 600000;
    case 515:ViiinnnyOWneD = 600000;
    case 516:ViiinnnyOWneD = 200000;
    case 517:ViiinnnyOWneD = 150000;
    case 518:ViiinnnyOWneD = 175000;
    case 521:ViiinnnyOWneD = 700000;
    case 522:ViiinnnyOWneD = 1000000;
    case 526:ViiinnnyOWneD = 200000;
    case 527:ViiinnnyOWneD = 200000;
    case 529:ViiinnnyOWneD = 220000;
    case 533:ViiinnnyOWneD = 235000;
    case 534:ViiinnnyOWneD = 320000;
    case 535:ViiinnnyOWneD = 350000;
    case 536:ViiinnnyOWneD = 350000;
    case 540:ViiinnnyOWneD = 327000;
    case 541:ViiinnnyOWneD = 3500000;
    case 542:ViiinnnyOWneD = 280000;
    case 543:ViiinnnyOWneD = 200000;
    case 545:ViiinnnyOWneD = 200000;
    case 546:ViiinnnyOWneD = 280000;
    case 547:ViiinnnyOWneD = 270000;
    case 549:ViiinnnyOWneD = 220000;
    case 550:ViiinnnyOWneD = 350000;
    case 551:ViiinnnyOWneD = 320000;
    case 554:ViiinnnyOWneD = 250000;
    case 555:ViiinnnyOWneD = 200000;
    case 558:ViiinnnyOWneD = 750000;
    case 559:ViiinnnyOWneD = 800000;
    case 560:ViiinnnyOWneD = 1000000;
    case 561:ViiinnnyOWneD = 650000;
    case 562:ViiinnnyOWneD = 600000;
    case 565:ViiinnnyOWneD = 500000;
    case 566:ViiinnnyOWneD = 300000;
    case 567:ViiinnnyOWneD = 350000;
    case 571:ViiinnnyOWneD = 50000;
    case 572:ViiinnnyOWneD = 50000;
    case 575:ViiinnnyOWneD = 130000;
    case 576:ViiinnnyOWneD = 350000;
    case 579:ViiinnnyOWneD = 400000;
    case 580:ViiinnnyOWneD = 300000;
    case 581:ViiinnnyOWneD = 380000;
    case 585:ViiinnnyOWneD = 235000;
    case 586:ViiinnnyOWneD = 150000;
    case 587:ViiinnnyOWneD = 370000;
    case 589:ViiinnnyOWneD = 300000;
    case 600:ViiinnnyOWneD = 120000;
    case 602:ViiinnnyOWneD = 370000;
    case 603:ViiinnnyOWneD = 450000;
    case 604:ViiinnnyOWneD = 70000;
    case 605:ViiinnnyOWneD = 80000;
    }
    return ViiinnnyOWneD;
}
forward PrecoCarVenda(playerid,soufodapakas);
public PrecoCarVenda(playerid,soufodapakas)
{
    new ViiinnnyOWneD = 0;
    switch (soufodapakas)
    {
    case 400:ViiinnnyOWneD = 700000;
    case 401:ViiinnnyOWneD = 550000;
    case 402:ViiinnnyOWneD = 3000000;
    case 403:ViiinnnyOWneD = 1200000;
    case 404:ViiinnnyOWneD = 500000;
    case 405:ViiinnnyOWneD = 550000;
    case 409:ViiinnnyOWneD = 3500000;
    case 410:ViiinnnyOWneD = 250000;
    case 411:ViiinnnyOWneD = 4000000;
    case 412:ViiinnnyOWneD = 250000;
    case 415:ViiinnnyOWneD = 2000000;
    case 418:ViiinnnyOWneD = 200000;
    case 419:ViiinnnyOWneD = 200000;
    case 421:ViiinnnyOWneD = 250000;
    case 422:ViiinnnyOWneD = 150000;
    case 424:ViiinnnyOWneD = 100000;
    case 426:ViiinnnyOWneD = 300000;
    case 429:ViiinnnyOWneD = 2000000;
    case 434:ViiinnnyOWneD = 250000;
    case 436:ViiinnnyOWneD = 120000;
    case 439:ViiinnnyOWneD = 120000;
    case 445:ViiinnnyOWneD = 180000;
    case 451:ViiinnnyOWneD = 4500000;
    case 457:ViiinnnyOWneD = 100000;
    case 458:ViiinnnyOWneD = 180000;
    case 461:ViiinnnyOWneD = 80000;
    case 462:ViiinnnyOWneD = 50000;
    case 463:ViiinnnyOWneD = 130000;
    case 466:ViiinnnyOWneD = 150000;
    case 467:ViiinnnyOWneD = 180000;
    case 468:ViiinnnyOWneD = 150000;
    case 471:ViiinnnyOWneD = 100000;
    case 474:ViiinnnyOWneD = 250000;
    case 475:ViiinnnyOWneD = 300000;
    case 477:ViiinnnyOWneD = 400000;
    case 478:ViiinnnyOWneD = 80000;
    case 479:ViiinnnyOWneD = 140000;
    case 480:ViiinnnyOWneD = 500000;
    case 481:ViiinnnyOWneD = 5000;
    case 483:ViiinnnyOWneD = 160000;
    case 489:ViiinnnyOWneD = 270000;
    case 491:ViiinnnyOWneD = 170000;
    case 492:ViiinnnyOWneD = 190000;
    case 495:ViiinnnyOWneD = 320000;
    case 496:ViiinnnyOWneD = 250000;
    case 500:ViiinnnyOWneD = 290000;
    case 502:ViiinnnyOWneD = 5000000;
    case 505:ViiinnnyOWneD = 270000;
    case 506:ViiinnnyOWneD = 800000;
    case 507:ViiinnnyOWneD = 220000;
    case 508:ViiinnnyOWneD = 300000;
    case 509:ViiinnnyOWneD = 5000;
    case 510:ViiinnnyOWneD = 130000;
    case 514:ViiinnnyOWneD = 600000;
    case 515:ViiinnnyOWneD = 600000;
    case 516:ViiinnnyOWneD = 200000;
    case 517:ViiinnnyOWneD = 150000;
    case 518:ViiinnnyOWneD = 175000;
    case 521:ViiinnnyOWneD = 700000;
    case 522:ViiinnnyOWneD = 1000000;
    case 526:ViiinnnyOWneD = 200000;
    case 527:ViiinnnyOWneD = 200000;
    case 529:ViiinnnyOWneD = 220000;
    case 533:ViiinnnyOWneD = 235000;
    case 534:ViiinnnyOWneD = 320000;
    case 535:ViiinnnyOWneD = 350000;
    case 536:ViiinnnyOWneD = 350000;
    case 540:ViiinnnyOWneD = 327000;
    case 541:ViiinnnyOWneD = 3500000;
    case 542:ViiinnnyOWneD = 280000;
    case 543:ViiinnnyOWneD = 200000;
    case 545:ViiinnnyOWneD = 200000;
    case 546:ViiinnnyOWneD = 280000;
    case 547:ViiinnnyOWneD = 270000;
    case 549:ViiinnnyOWneD = 220000;
    case 550:ViiinnnyOWneD = 350000;
    case 551:ViiinnnyOWneD = 320000;
    case 554:ViiinnnyOWneD = 250000;
    case 555:ViiinnnyOWneD = 200000;
    case 558:ViiinnnyOWneD = 750000;
    case 559:ViiinnnyOWneD = 800000;
    case 560:ViiinnnyOWneD = 1000000;
    case 561:ViiinnnyOWneD = 650000;
    case 562:ViiinnnyOWneD = 600000;
    case 565:ViiinnnyOWneD = 500000;
    case 566:ViiinnnyOWneD = 300000;
    case 567:ViiinnnyOWneD = 350000;
    case 571:ViiinnnyOWneD = 50000;
    case 572:ViiinnnyOWneD = 50000;
    case 575:ViiinnnyOWneD = 130000;
    case 576:ViiinnnyOWneD = 350000;
    case 579:ViiinnnyOWneD = 400000;
    case 580:ViiinnnyOWneD = 300000;
    case 581:ViiinnnyOWneD = 380000;
    case 585:ViiinnnyOWneD = 235000;
    case 586:ViiinnnyOWneD = 150000;
    case 587:ViiinnnyOWneD = 370000;
    case 589:ViiinnnyOWneD = 300000;
    case 600:ViiinnnyOWneD = 120000;
    case 602:ViiinnnyOWneD = 370000;
    case 603:ViiinnnyOWneD = 450000;
    case 604:ViiinnnyOWneD = 70000;
    case 605:ViiinnnyOWneD = 80000;
    }
    return ViiinnnyOWneD;
}
forward CarregarTunning(vehicleid);
public CarregarTunning(vehicleid)
{
            if(Carro[vehicleid][mod1]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod1]); }
            if(Carro[vehicleid][mod2]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod2]); }
            if(Carro[vehicleid][mod3]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod3]); }
            if(Carro[vehicleid][mod4]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod4]); }
            if(Carro[vehicleid][mod5]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod5]); }
            if(Carro[vehicleid][mod6]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod6]); }
            if(Carro[vehicleid][mod7]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod7]); }
            if(Carro[vehicleid][mod8]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod8]); }
            if(Carro[vehicleid][mod9]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod9]); }
            if(Carro[vehicleid][mod10]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod10]); }
            if(Carro[vehicleid][mod11]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod11]); }
            if(Carro[vehicleid][mod12]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod12]); }
            if(Carro[vehicleid][mod13]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod13]); }
            if(Carro[vehicleid][mod14]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod14]); }
            if(Carro[vehicleid][mod15]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod15]); }
            if(Carro[vehicleid][mod16]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod16]); }
            if(Carro[vehicleid][mod17]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod17]); }
            ChangeVehicleColorEx(Carro[vehicleid][CarroID],Carro[vehicleid][CorUm],Carro[vehicleid][CorDois]);
            if(Carro[vehicleid][PaintJobOn]==1)
            {
                ChangeVehiclePaintjobEx(Carro[vehicleid][CarroID],Carro[vehicleid][paintjob]);
            }
            return 1;
}
stock LimparTunning(vehicleid)
{
    Carro[vehicleid][mod1] = 0;
    Carro[vehicleid][mod2] = 0;
    Carro[vehicleid][mod3] = 0;
    Carro[vehicleid][mod4] = 0;
    Carro[vehicleid][mod5] = 0;
    Carro[vehicleid][mod6] = 0;
    Carro[vehicleid][mod7] = 0;
    Carro[vehicleid][mod8] = 0;
    Carro[vehicleid][mod9] = 0;
    Carro[vehicleid][mod10] = 0;
    Carro[vehicleid][mod11] = 0;
    Carro[vehicleid][mod12] = 0;
    Carro[vehicleid][mod13] = 0;
    Carro[vehicleid][mod14] = 0;
    Carro[vehicleid][mod15] = 0;
    Carro[vehicleid][mod16] = 0;
    Carro[vehicleid][mod17] = 0;
    Carro[vehicleid][paintjob] = 0;
    Carro[vehicleid][PaintJobOn] = 0;

}
InitComponents(componentid)
{
            new i;
            for(i=0; i<20; i++)
            {
                if(spoiler[i][0]==componentid) { return 1; }
            }
            for(i=0; i<3; i++)
            {
                if(nitro[i][0]==componentid) { return 2; }
            }
            for(i=0; i<23; i++)
            {
                if(fbumper[i][0]==componentid) { return 3; }
            }
            for(i=0; i<22; i++)
            {
                if(rbumper[i][0]==componentid) { return 4; }
            }
            for(i=0; i<28; i++)
            {
                if(exhaust[i][0]==componentid) { return 5; }
            }
            for(i=0; i<2; i++)
            {
                if(bventr[i][0]==componentid) { return 6; }
            }
            for(i=0; i<2; i++)
            {
                if(bventl[i][0]==componentid) { return 7; }
            }
            for(i=0; i<4; i++)
            {
                if(bscoop[i][0]==componentid) { return 8; }
            }
            for(i=0; i<13; i++)
            {
                if(rscoop[i][0]==componentid) { return 9; }
            }
            for(i=0; i<21; i++)
            {
                if(lskirt[i][0]==componentid) { return 10; }
            }
            for(i=0; i<21; i++)
            {
                if(rskirt[i][0]==componentid) { return 11; }
            }
            if(hydraulics[0][0]==componentid) { return 12; }
            if(base[0][0]==componentid) { return 13; }
            for(i=0; i<2; i++)
            {
                if(rbbars[i][0]==componentid) { return 14; }
            }
            for(i=0; i<2; i++)
            {
                if(fbbars[i][0]==componentid) { return 15; }
            }
            for(i=0; i<17; i++)
            {
                if(wheels[i][0]==componentid) { return 16; }
            }
            for(i=0; i<2; i++)
            {
                if(lights[i][0]==componentid) { return 17; }
            }
            return 0;
}
public OnVehicleSpawn(vehicleid)
{
    for(new c = 0; c < sizeof(Carro); c++)
    {
        if(Carro[c][CarroID] == vehicleid)
        {
            CarregarTunning(c);
        }
    }
    if(VeiculoNeon[vehicleid] != 0) DestroyDynamicObject(VeiculoNeon[vehicleid]);
    return 1;
}
stock AddVehicleComponentEx(vehicleid,componentid)
{
    new Varz=InitComponents(componentid);
    for(new c = 0; c < sizeof(Carro); c++)
    {
        if(Carro[c][CarroID] == vehicleid)
        {
            switch (Varz)
            {
                case 1: { Carro[c][mod1]=componentid; }
                case 2: { Carro[c][mod2]=componentid; }
                case 3: { Carro[c][mod3]=componentid; }
                case 4: { Carro[c][mod4]=componentid; }
                case 5: { Carro[c][mod5]=componentid; }
                case 6: { Carro[c][mod6]=componentid; }
                case 7: { Carro[c][mod7]=componentid; }
                case 8: { Carro[c][mod8]=componentid; }
                case 9: { Carro[c][mod9]=componentid; }
                case 10: { Carro[c][mod10]=componentid; }
                case 11: { Carro[c][mod11]=componentid; }
                case 12: { Carro[c][mod12]=componentid; }
                case 13: { Carro[c][mod13]=componentid; }
                case 14: { Carro[c][mod14]=componentid; }
                case 15: { Carro[c][mod15]=componentid; }
                case 16: { Carro[c][mod16]=componentid; }
                case 17: { Carro[c][mod17]=componentid; }
            }
            break;
        }
    }
    AddVehicleComponent(vehicleid,componentid);
}
stock ChangeVehicleColorEx(vehicleid, Cor1, Cor2)
{
    for(new c = 0; c < sizeof(Carro); c++)
    {
        if(Carro[c][CarroID] == vehicleid)
        {
            Carro[c][CorUm] = Cor1;
            Carro[c][CorDois] = Cor2;
            break;
        }
    }
    ChangeVehicleColor(vehicleid, Cor1, Cor2);
}
stock ChangeVehiclePaintjobEx(vehicleid,paintjobid)
{
    for(new c = 0; c < sizeof(Carro); c++)
    {
        if(Carro[c][CarroID] == vehicleid)
        {
            Carro[c][paintjob]=paintjobid;
            Carro[c][PaintJobOn]=1;
            break;
        }
    }
    ChangeVehiclePaintjob(vehicleid,paintjobid);
}
stock AttachNeonToVehicle(objectid, vehicleid, Float:OffsetX, Float:OffsetY, Float:OffsetZ, Float:RotX, Float:RotY, Float:RotZ)
{
    VeiculoNeon[vehicleid] = AttachDynamicObjectToVehicle(objectid, vehicleid, Float:OffsetX, Float:OffsetY, Float:OffsetZ, Float:RotX, Float:RotY, Float:RotZ);
}
stock IsPlayerInPRF(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 804.262695 && y >= -1314.935180 && x <= 932.262695 && y <= -1164.935180) return 1; // morro 1
    else return 0;
}
stock IsCarroInPRF(carid)
{
    new Float:x,Float:y,Float:z;
    GetVehiclePos(carid, x, y, z);
    if(x >= 804.262695 && y >= -1314.935180 && x <= 932.262695 && y <= -1164.935180) return 1; // morro 1
    else return 0;
}
forward VehPreso(playerid);
public VehPreso(playerid)
{
    if(!IsACop(playerid))
    {
        if(PlayerInfo[playerid][pChave] != 0)
        {
            for(new i = 0; i < sizeof(Carro); i++)
            {
                if(Carro[i][CarroID] == PlayerInfo[playerid][pChave])
                {
                    if(IsCarroInPRF(Carro[i][CarroID]))
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED,"* Seu Veículo está Apreendido, Vá até a DP da Polícia para Resolver.");
                        break;
                    }
                }
            }
        }
    }
    return 1;
}
forward a3d();
public a3d()
{
    Delete3DTextLabel(CofrePrefeitura);
    Delete3DTextLabel(LabelOrg1);
    Delete3DTextLabel(LabelOrg2);
    Delete3DTextLabel(LabelOrg4);
    Delete3DTextLabel(LabelOrg5);
    Delete3DTextLabel(LabelOrg6);
    Delete3DTextLabel(LabelOrg7);
    Delete3DTextLabel(LabelOrg8);
    Delete3DTextLabel(LabelOrg9);
    Delete3DTextLabel(LabelOrg10);
    Delete3DTextLabel(LabelOrg11);
    Delete3DTextLabel(LabelOrg12);
    Delete3DTextLabel(LabelOrg13);
    Delete3DTextLabel(LabelOrg14);
    Delete3DTextLabel(LabelOrg15);
    Delete3DTextLabel(LabelOrg16);
    Delete3DTextLabel(LabelOrg17);
    Delete3DTextLabel(LabelOrg18);
    Delete3DTextLabel(LabelOrg19);
    Delete3DTextLabel(LabelOrg20);
    Delete3DTextLabel(LabelOrg28);

    Delete3DTextLabel(LabelBanco);
    Delete3DTextLabel(LabelLot);
    Delete3DTextLabel(LabelPosto);
    Delete3DTextLabel(LabelLoja1);
    Delete3DTextLabel(LabelLoja2);
    Delete3DTextLabel(LabelPref);
    for(new h = 0; h < sizeof(BizzInfo); h++)
    {
        Delete3DTextLabel(BizzLabel[h]);
        DestroyPickup(BizzPickup[h]);
        if(BizzInfo[h][bOwned] == 0)
        {
            BizzPickup[h] = CreatePickup(1272, 23, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],-1);
            format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}%s\nEsta empresa esta a venda\nValor: R$%d Nivel: %d\nProdutos: %d|%d\n{FFFFFF}Para comprar digite /compraremp",BizzInfo[h][bMessage],BizzInfo[h][bBuyPrice],BizzInfo[h][bLevelNeeded],BizzInfo[h][bProd],BizzInfo[h][bMaxProd]);
            BizzLabel[h] = Create3DTextLabel(strlabel,COR_3DLABEL,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]+0.5,30.0,0);
        }
        if(BizzInfo[h][bOwned] == 1)
        {
            BizzPickup[h] = CreatePickup(1318, 23, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],-1);
            format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}%s\nDono: %s\nExtorcao: %s\nEntrada: R$%d\nNivel: %d\nProdutos: %d|%d",BizzInfo[h][bMessage],BizzInfo[h][bOwner],BizzInfo[h][bExtortion],BizzInfo[h][bEntranceCost],BizzInfo[h][bLevelNeeded],BizzInfo[h][bProd],BizzInfo[h][bMaxProd]);
            BizzLabel[h] = Create3DTextLabel(strlabel,COR_3DLABEL,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]+0.5,30.0,0);
        }
    }
    if(donoPosto >= 0)
    {
        Delete3DTextLabel(DonodoPosto);
        if(donoPosto == 0)
        {
            DonodoPosto = Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{80FFFF}Posto Abandonado\nNinguem no controle\n/do para Tomar",COR_3DLABEL, -91.4212, -1169.1992, 2.4298, 40.0, 0);
        }
        if(donoPosto == 21)
        {
            DonodoPosto = Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{A80000}Posto Abandonado\nHells Angels no Comando\nMembros Terão Gasolina Grátis.",COR_3DLABEL, -91.4212, -1169.1992, 2.4298, 40.0, 0);
        }
        if(donoPosto == 22)
        {
            DonodoPosto = Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{009B9B}Posto Abandonado\nMongols no Comando\nMembros Terão Gasolina Grátis.",COR_3DLABEL, -91.4212, -1169.1992, 2.4298, 40.0, 0);
        }
        if(donoPosto == 1 || donoPosto == 2 || donoPosto == 28)
        {
            DonodoPosto = Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{6F6FFF}Posto Abandonado\nGoverno no Comando\nPoliciais Terão Gasolina Grátis.",COR_3DLABEL, -91.4212, -1169.1992, 2.4298, 40.0, 0);
        }
        if(donoPosto == 23)
        {
            DonodoPosto = Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{0063C6}Posto Abandonado\nSons Of Anarchy no Comando\nMembros Terão Gasolina Grátis.",COR_3DLABEL, -91.4212, -1169.1992, 2.4298, 40.0, 0);
        }
        if(donoPosto == 25)
        {
            DonodoPosto = Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{6B56C2}Posto Abandonado\nDrifters no Comando\nMembros Terão Gasolina Grátis.",COR_3DLABEL, -91.4212, -1169.1992, 2.4298, 40.0, 0);
        }
    }

    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}DP Policia Militar\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[1][Lider]);
    LabelOrg1 = Create3DTextLabel(strlabel, COR_3DLABEL, 1554.9537,-1675.6584,16.1953,30.0,0);

    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Fundos da Prefeitura \n{FDF000}R$ %d",CofreOrg[7][Dinheiro]);
    CofrePrefeitura = Create3DTextLabel(strlabel, COR_3DLABEL, 355.4539,159.9982,1008.4802,30.0,0);
    //ROTA
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}DP  ROTA\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[2][Lider]);
    LabelOrg2 = Create3DTextLabel(strlabel, COR_3DLABEL, 327.8898,-1511.8446,36.0325,30.0,0);
    //los aztecas
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HQ Los Aztecas\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[5][Lider]);
    LabelOrg4 = Create3DTextLabel(strlabel, COR_3DLABEL, 1673.9886,-2122.1403,14.6014,30.0,0);
    //mafia Russa
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HQ Mafia Russa\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[12][Lider]);
    LabelOrg6 = Create3DTextLabel(strlabel, COR_3DLABEL, 1614.2990,1679.7318,11.2184,30.0,0);
    //Mafia Japonesa
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HQ Mafia Japonesa\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[13][Lider]);
    LabelOrg7 = Create3DTextLabel(strlabel, COR_3DLABEL, 2634.0874,1824.3887,11.0234,30.0,0);
    //groove
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HQ Groove Street\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[14][Lider]);
    LabelOrg8 = Create3DTextLabel(strlabel, COR_3DLABEL, 2495.3481,-1691.1355,14.7656,30.0,0);
    //Polícia Rodoviária Federal
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}DP Polícia Rodoviária Federal\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[16][Lider]);
    LabelOrg9 = Create3DTextLabel(strlabel, COR_3DLABEL, 918.8992,-1252.3286,16.2109,30.0,0);
    //ballas
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HQ Ballas\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[17][Lider]);
    LabelOrg10 = Create3DTextLabel(strlabel, COR_3DLABEL, 1150.5472,-1180.6296,32.0275,30.0,0);
    //vagos
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HQ Los Vagos\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[18][Lider]);
    LabelOrg11 = Create3DTextLabel(strlabel, COR_3DLABEL, 2808.1106,-1189.6528,25.3436,30.0,0);
    //Comando v
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HQ Comando Vermelho\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[19][Lider]);
    LabelOrg12 = Create3DTextLabel(strlabel, COR_3DLABEL, 2140.9382,-1801.9813,16.1475,30.0,0);
    //ploko
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HQ Hells Angels\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[21][Lider]);
    LabelOrg14 = Create3DTextLabel(strlabel, COR_3DLABEL, 681.621521,-474.528533,16.185522,30.0,0);
    //mongols
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HQ Mongols\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[22][Lider]);
    LabelOrg15 = Create3DTextLabel(strlabel, COR_3DLABEL, 23.8872,-2646.5869,40.4640,30.0,0);
    //sons
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HQ Sons Of Anarchy\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[23][Lider]);
    LabelOrg16 = Create3DTextLabel(strlabel, COR_3DLABEL, -1566.5295,-2730.2783,48.7435,30.0,0);
    //rep
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}San News\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[9][Lider]);
    LabelOrg17 = Create3DTextLabel(strlabel, COR_3DLABEL, 732.61,-1344.33,13.52,30.0,0);
    // med
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Hospital BPG\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[4][Lider]);
    LabelOrg18 = Create3DTextLabel(strlabel, COR_3DLABEL, 2025.1075,-1402.5234,17.2085,30.0,0);
//sk
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}HunTerS\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[26][Lider]);
    LabelOrg19 = Create3DTextLabel(strlabel, COR_3DLABEL, 1264.8094,-1639.0132,13.5469,30.0,0);

    format(strlabel,sizeof strlabel,"{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}DP do BPM \n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[28][Lider]);
    LabelOrg28 = Create3DTextLabel(strlabel,COR_3DLABEL,1384.4771,-1671.6896,13.4901,30.0,0);
    if(temporoubobanco == 1)
    {
        format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre do Banco\n{FFEE22}Dinheiro: {FFA8A8}Roubado\n{FFFFFF}Digite /roubar Para Roubar");
        LabelBanco = Create3DTextLabel(strlabel, COR_3DLABEL, 2306.5127,-6.1166,26.7422,11.0,0);
    }
    else
    {
        format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre do Banco\n{FFEE22}Dinheiro: {00ECEC}R$ %d\n{FFFFFF}Digite /roubar Para Roubar",GranaBanco);
        LabelBanco = Create3DTextLabel(strlabel, COR_3DLABEL, 2306.5127,-6.1166,26.7422,11.0,0);
    }
    if(temporoubolot == 1)
    {
        format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre da Lotérica\n{FFEE22}Dinheiro: {FFA8A8}Roubado\n{FFFFFF}Digite /roubar Para Roubar",GranaLot);
        LabelLot = Create3DTextLabel(strlabel, COR_3DLABEL, 820.6042,8.3990,1004.1962,11.0,0);
    }
    else
    {
        format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre da Lotérica\n{FFEE22}Dinheiro: {00ECEC}R$ %d\n{FFFFFF}Digite /roubar Para Roubar",GranaLot);
        LabelLot = Create3DTextLabel(strlabel, COR_3DLABEL, 820.6042,8.3990,1004.1962,11.0,0);
    }
    if(temporouboposto == 1)
    {
        format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre do Posto\n{FFEE22}Dinheiro: {FFA8A8}Roubado\n{FFFFFF}Digite /roubar Para Roubar",GranaPosto);
        LabelPosto = Create3DTextLabel(strlabel, COR_3DLABEL, 381.5648,-188.1646,1000.6328,11.0,0);
    }
    else
    {
        format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre do Posto\n{FFEE22}Dinheiro: {00ECEC}R$ %d\n{FFFFFF}Digite /roubar Para Roubar",GranaPosto);
        LabelPosto = Create3DTextLabel(strlabel, COR_3DLABEL, 381.5648,-188.1646,1000.6328,11.0,0);
    }
    if(temporouboloja1 == 1)
    {
        format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre da Loja de Armas\n{FFEE22}Dinheiro: {FFA8A8}Roubado\n{FFFFFF}Digite /roubar Para Roubar",GranaLoja1);
        LabelLoja1 = Create3DTextLabel(strlabel, COR_3DLABEL, 2169.1516,1589.9265,999.9713,11.0,0);
    }
    else
    {
        format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre da Loja de Armas\n{FFEE22}Dinheiro: {00ECEC}R$ %d\n{FFFFFF}Digite /roubar Para Roubar",GranaLoja1);
        LabelLoja1 = Create3DTextLabel(strlabel, COR_3DLABEL, 2169.1516,1589.9265,999.9713,11.0,0);
    }
    if(temporouboloja2 == 1)
    {
        format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre da Loja de Armas\n{FFEE22}Dinheiro: {FFA8A8}Roubado\n{FFFFFF}Digite /roubar Para Roubar",GranaLoja2);
        LabelLoja2 = Create3DTextLabel(strlabel, COR_3DLABEL, 451.3090,-79.8603,999.5547,11.0,0);
    }
    else
    {
        format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Cofre da Loja de Armas\n{FFEE22}Dinheiro: {00ECEC}R$ %d\n{FFFFFF}Digite /roubar Para Roubar",GranaLoja2);
        LabelLoja2 = Create3DTextLabel(strlabel, COR_3DLABEL, 451.3090,-79.8603,999.5547,11.0,0);
    }
}
stock Get2DZone(zone[], Float:x, Float:y, len)
{
    for(new i = 0; i != sizeof(gSAZones); i++ )
    {
        if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4])
        {
            return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
        }
    }
    return 0;
}
forward MoverCamera(playerid);
public MoverCamera(playerid)
{
    InterpolateCameraPos(playerid, 1442.4664, -866.5638, 89.6085, 1416.4031,-870.2377,91.1348, 6000, CAMERA_CUT);
    InterpolateCameraPos(playerid, 1416.4031,-870.2377,91.1348, 1342.3231, -847.4993, 91.1653, 6000, CAMERA_CUT);
    InterpolateCameraLookAt(playerid, 1415.4329,-806.9493,85.0470, 1342.7404, -848.4073, 90.7405, 10000, CAMERA_MOVE);
}
stock IsCarInConce(carid)
{
    new Float:x,Float:y,Float:z;
    GetVehiclePos(carid, x, y, z);
    if(x >= 2689.772949 && y >= -1885.407226 && x <= 2813.772949 && y <= -1667.407226) return 1; // morro 1
    else return 0;
}
stock IsCarInPrefouDP(carid)
{
    new Float:x,Float:y,Float:z;
    GetVehiclePos(carid, x, y, z);
    if(x >= 1418.449218 && y >= -1746.708740 && x <= 1558.449218 && y <= -1596.708740) return 1; // morro 1
    else return 0;
}
forward EntrarHospital(playerid);
public EntrarHospital(playerid)
{
    new rand = random(sizeof(DuenteMacas));
    SetPlayerInterior(playerid,0);
    SetPlayerCameraPos(playerid, 1718.9829, 1187.9597, 36.3028);
    //SetPlayerCameraPos(playerid, DuenteMacas[rand][0]+0.4, DuenteMacas[rand][1]-0.5, DuenteMacas[rand][2]+0.3);
    //SetPlayerCameraLookAt(playerid, DuenteMacas[rand][0], DuenteMacas[rand][1], DuenteMacas[rand][2]);
    SetPlayerPos(playerid,DuenteMacas[rand][0], DuenteMacas[rand][1], DuenteMacas[rand][2]);
    SetPlayerFacingAngle(playerid, DuenteMacas[rand][3]);
    ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
    TextHospital(playerid);
    TextDrawShowForPlayer(playerid, TextPosto[playerid]);
    return 1;
}
forward SairHospital(playerid);
public SairHospital(playerid)
{
    PlayerInfo[playerid][pHosp] = 0;
    PlayerInfo[playerid][pHospTime] = 0;
    ClearAnimations(playerid);
    GivePlayerMoney(playerid, -PRECO_HOSP);
    SBizzInfo[12][sbTill] += PRECO_HOSP;
    ExtortionSBiz(12, PRECO_HOSP);
    CofreOrg[4][Dinheiro] += PRECO_HOSP;
    GastarProdutos(2, 12, 2);
    TextDrawHideForPlayer(playerid, TextPosto[playerid]);
    SetPlayerSpawn(playerid);
    format(gstring,sizeof(gstring),"[Hospital] Você Está Curado e Recebeu alta, os Médicos Cobraram R$ %d pela Recuperação.", PRECO_HOSP);
    SendClientMessage(playerid,0xFF8080FF,gstring);
    format(strvinny, sizeof(strvinny), "~n~~n~~n~~r~~h~[[~g~~h~~h~Voce Foi curado com Sucesso~r~~h~[[~b~~h~~h~Pagou: ~w~R$ %d",PRECO_HOSP);
    GameTextForPlayer(playerid, strvinny, 6000, 3);
    return 1;
}
forward TextHospital(playerid);
public TextHospital(playerid)
{
    new TempoHospital = PlayerInfo[playerid][pHospTime], TextRec2[40];
    if(TempoHospital <= 100 && TempoHospital >= 80) TextRec2 = "Preparando Recuperacao";
    else if(TempoHospital <= 80 && TempoHospital >= 55) TextRec2 = "Recuperacao Iniciada";
    else if(TempoHospital <= 55 && TempoHospital >= 30) TextRec2 = "Recuperando ...";
    else if(TempoHospital <= 30 && TempoHospital >= 15) TextRec2 = "Concluindo Recuperacao";
    else if(TempoHospital <= 15 && TempoHospital >= 0) TextRec2 = "Preparando sua Saida";
    /*format(strvinny, sizeof(strvinny), "~n~~n~~n~~n~~n~~n~~n~~b~~h~~h~Progresso da Recuperacao: %s~n~~b~~h~~h~Tempo de Hospital: ~g~~h~~h~ %d",TextRec,PlayerInfo[playerid][pHospTime]);
    GameTextForPlayer(playerid, strvinny, 2000, 3);*/
    format(strvinny,sizeof(strvinny),"~>~~>~ ~p~~h~Hospital ~<~~<~~n~~n~~n~~b~~h~~h~~h~Status: ~n~~g~~h~~h~%s~n~~n~~b~~h~~h~~h~Tempo:~n~~r~~h~%d ~w~Segundos",TextRec2,TempoHospital);
    TextDrawSetString(TextPosto[playerid], strvinny);
    ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
}
forward PlayerBanALL(playerid);
public PlayerBanALL(playerid)
{
    if(BaniuPlayer[playerid] >= 1) BaniuPlayer[playerid] = 0;
}
stock ObjetosAtivos()
{
    new ContObject = CountDynamicObjects();
    ObjetosPlayGamer = ContObject+1;
}
stock NomeORGTr(OrgID)
{
    new OrgTRName[64];
    if(OrgID == 0) { OrgTRName = "e os Civil"; }
    else if(OrgID == 1) { OrgTRName = "e a Polícia Militar"; }
    else if(OrgID == 2) { OrgTRName = "e a ROTA"; }
    else if(OrgID == 3) { OrgTRName = "e o Exército "; }
    else if(OrgID == 4) { OrgTRName = "e os Medicos"; }
    else if(OrgID == 5) { OrgTRName = "e os Los Aztecas"; }
    else if(OrgID == 6) { OrgTRName = "e o Guerrilheiros Israelitas"; }
    else if(OrgID == 7) { OrgTRName = "e a Prefeitura"; }
    else if(OrgID == 8) { OrgTRName = "e os Hitmans"; }
    else if(OrgID == 9) { OrgTRName = "e o Repórter"; }
    else if(OrgID == 10) { OrgTRName = "e os Taxistas"; }
    else if(OrgID == 11) { OrgTRName = "e a B.O.P.E"; }
    else if(OrgID == 12) { OrgTRName = "e a Mafia Russa"; }
    else if(OrgID == 13) { OrgTRName = "e a Mafia Japonesa"; }
    else if(OrgID == 14) { OrgTRName = "e a Groove Street"; }
    else if(OrgID == 15) { OrgTRName = "e a FARC"; }
    else if(OrgID == 16) { OrgTRName = "e a Polícia Rodoviária Federal"; }
    else if(OrgID == 17) { OrgTRName = "e os Ballas"; }
    else if(OrgID == 18) { OrgTRName = "e os Los Vagos"; }
    else if(OrgID == 19) { OrgTRName = "e o Comando Vermelho"; }
    else if(OrgID == 20) { OrgTRName = "e o PCC"; }
    else if(OrgID == 21) { OrgTRName = "e os Hells Angels"; }
    else if(OrgID == 22) { OrgTRName = "e os Mongols"; }
    else if(OrgID == 23) { OrgTRName = "e os Sons Of Anarchy"; }
    else if(OrgID == 24) { OrgTRName = "e os The Triads"; }
    else if(OrgID == 25) { OrgTRName = "e os Drifters"; }
    else if(OrgID == 26) { OrgTRName = "e a HunTerS"; }
    else if(OrgID == 27) { OrgTRName = "e os FaTal DangeR"; }
    else if(OrgID == 28) { OrgTRName = "e o BPM"; }
    else if(OrgID == 29) { OrgTRName = "e a Snake"; }
    else if(OrgID == 30) { OrgTRName = "e os DesTroyeR"; }
    else if(OrgID == 31) { OrgTRName = "e a Justiceiros"; }
    else if(OrgID == 32) { OrgTRName = "e a Policia Civil"; }
    else if(OrgID == 33) { OrgTRName = "e a EM BREVE"; }
    else if(OrgID == 34) { OrgTRName = "e a Dark Gods"; }
    else if(OrgID == 35) { OrgTRName = "e a KiLLeRs"; }
    else if(OrgID == 36) { OrgTRName = "e a Storm"; }
    return OrgTRName;
}
stock FazendaFile( id ){
    new file[ 30 ];
    format( file, sizeof file, "Fazendas/%d.ini", id );
    return file;
}
forward SetPlayerPosVirtualWord(playerid);
public SetPlayerPosVirtualWord(playerid)
{
    if(IsPlayerConnected(playerid))
    {

        if(GetPlayerVirtualWorld(playerid) == 7)
        {
             SetPlayerPos(playerid, 918.8992,-1252.3286,16.2109);
        }
        else if(GetPlayerVirtualWorld(playerid) == 6)
        {
             SetPlayerPos(playerid, 913.68,-1004.56,37.98);
        }
        else if(GetPlayerVirtualWorld(playerid) == 8)
        {
             SetPlayerPos(playerid, -2455.5686,503.7834,30.0781);
        }
        else
        {
             SetPlayerPos(playerid, 327.8898,-1511.8446,36.0325);
        }
        SetPlayerInterior(playerid, 0);

        PlayerInfo[playerid][pInt] = 0;
        SetPlayerVirtualWorld(playerid, 0);
        PlayerInfo[playerid][pLocal] = 9999;
           return 1;
    }
    return 1;
}
forward SetPresoVirtualWord(playerid);
public SetPresoVirtualWord(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        SetPlayerPos(playerid, 197.5425,179.4295,1003.0297);
        SetPlayerInterior(playerid, 3);

        PlayerInfo[playerid][pInt] = 3;
        //SetPlayerVirtualWorld(GetPlayerVirtualWorld(playerid), 0);
        PlayerInfo[playerid][pLocal] = 9999;
           return 1;
    }
    return 1;
}

forward CalcularAdvogado(TempoCliente, MeuAdvNivel);
public CalcularAdvogado(TempoCliente, MeuAdvNivel)
{
    new resultadoFinal =0;
    if(MeuAdvNivel < 30) // 1
    {
        resultadoFinal=TempoCliente/5;
    }
    if(MeuAdvNivel >= 30 && MeuAdvNivel < 70) // 2
    {
        resultadoFinal=TempoCliente/4;
    }
    if(MeuAdvNivel >= 70 && MeuAdvNivel < 100) // 3
    {
        resultadoFinal=TempoCliente/3;
    }
    if(MeuAdvNivel >= 100 && MeuAdvNivel < 200) //4
    {
        resultadoFinal= TempoCliente/2;
    }
    if(MeuAdvNivel >= 200) //5
    {
        resultadoFinal=TempoCliente;
    }
    if(resultadoFinal < 0) resultadoFinal = 0;
    return resultadoFinal;
}
forward GetCasaVip(casa);
public GetCasaVip(casa)
{
new nivelvip = 0;
    if(casa > MAX_HOUSES) {return 0;}

    else if(strcmp(HouseInfo[casa][hDiscription],"Casa Free",true) == 0)
    {
        nivelvip = 0;
    }
    else if(strcmp(HouseInfo[casa][hDiscription],"Casa VIP",true) == 0)
    {
        nivelvip = 1;
    }
    else if(strcmp(HouseInfo[casa][hDiscription],"Super VIP",true) == 0)
    {
        nivelvip = 2;
    }
return nivelvip;
}

forward CalcularMVs(playerid, tipovip, mesesvip);
public CalcularMVs(playerid, tipovip, mesesvip)
{
    new valordecada,ValorTotal;
    if(tipovip == 1)
    {
        valordecada = 10000;
        ValorTotal = valordecada*mesesvip;
    }
    if(tipovip == 2)
    {
        valordecada = 25000;
        ValorTotal = valordecada*mesesvip;
    }
return ValorTotal;
}
stock LoadStaticVehiclesFromFile(const filename[])
{
    new File:file_ptr;
    new line[256];
    new var_from_line[64];
    new vehicletype;
    new Float:SpawnX;
    new Float:SpawnY;
    new Float:SpawnZ;
    new Float:SpawnRot;
    new Color1, Color2;
    new index;
    new vehicles_loaded;

    file_ptr = fopen(filename,filemode:io_read);
    if(!file_ptr) return 0;

    vehicles_loaded = 0;

    while(fread(file_ptr,line,256) > 0)
    {
        index = 0;

        // Read type
        index = token_by_delim(line,var_from_line,',',index);
        if(index == (-1)) continue;
        vehicletype = strval(var_from_line);
        if(vehicletype < 400 || vehicletype > 611) continue;

        // Read X, Y, Z, Rotation
        index = token_by_delim(line,var_from_line,',',index+1);
        if(index == (-1)) continue;
        SpawnX = floatstr(var_from_line);

        index = token_by_delim(line,var_from_line,',',index+1);
        if(index == (-1)) continue;
        SpawnY = floatstr(var_from_line);

        index = token_by_delim(line,var_from_line,',',index+1);
        if(index == (-1)) continue;
        SpawnZ = floatstr(var_from_line);

        index = token_by_delim(line,var_from_line,',',index+1);
        if(index == (-1)) continue;
        SpawnRot = floatstr(var_from_line);

        // Read Color1, Color2
        index = token_by_delim(line,var_from_line,',',index+1);
        if(index == (-1)) continue;
        Color1 = strval(var_from_line);

        index = token_by_delim(line,var_from_line,';',index+1);
        Color2 = strval(var_from_line);

        //printf("%d,%d,%f,%f,%f,%f,%d,%d",total_vehicles_from_files+vehicles_loaded+1,vehicletype,SpawnX,SpawnY,SpawnZ,SpawnRot,Color1,Color2);

        AddStaticVehicleEx(vehicletype,SpawnX,SpawnY,SpawnZ,SpawnRot,Color1,Color2,(30*60)); // respawn 30 minutes
        vehicles_loaded++;
    }

    fclose(file_ptr);
    printf("Loaded %d vehicles from: %s",vehicles_loaded,filename);
    return vehicles_loaded;
}

//----------------------------------------------------------

stock strtok(const string[], &index)
{
    new length = strlen(string);
    while ((index < length) && (string[index] <= ' '))
    {
        index++;
    }

    new offset = index;
    new result[20];
    while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
    {
        result[index - offset] = string[index];
        index++;
    }
    result[index - offset] = EOS;
    return result;
}

//------------------------------------------------

stock strrest(const string[], &index)
{
    new length = strlen(string);
    while ((index < length) && (string[index] <= ' '))
    {
        index++;
    }
    new offset = index;
    new result[128];
    while ((index < length) && ((index - offset) < (sizeof(result) - 1)))
    {
        result[index - offset] = string[index];
        index++;
    }
    result[index - offset] = EOS;
    return result;
}

//----------------------------------------------------------
// Tokenise by a delimiter
// Return string and index of the end determined by the
// provided delimiter in delim

stock token_by_delim(const string[], return_str[], delim, start_index)
{
    new x=0;
    while(string[start_index] != EOS && string[start_index] != delim) {
        return_str[x] = string[start_index];
        x++;
        start_index++;
    }
    return_str[x] = EOS;
    if(string[start_index] == EOS) start_index = (-1);
    return start_index;
}

//----------------------------------------------------------

stock isNumeric(const string[])
{
  new length=strlen(string);
  if (length==0) return false;
  for (new i = 0; i < length; i++)
    {
      if (
            (string[i] > '9' || string[i] < '0' && string[i]!='-' && string[i]!='+') // Not a number,'+' or '-'
             || (string[i]=='-' && i!=0)                                             // A '-' but not at first.
             || (string[i]=='+' && i!=0)                                             // A '+' but not at first.
         ) return false;
    }
  if (length==1 && (string[0]=='-' || string[0]=='+')) return false;
  return 1;
}

//----------------------------------------------------------

stock IsKeyJustDown(key, newkeys, oldkeys)
{
    if((newkeys & key) && !(oldkeys & key)) return 1;
    return 0;
}
forward IsACaminhaoCar(carid);
public IsACaminhaoCar(carid)
{
    for(new i=0;i<sizeof(CaminhaoCar);i++)
    {
        if(carid == CaminhaoCar[i])
        {
            SetVehicleNumberPlate(carid, "BPG Cargas");
            return 1;
        }
    }
    return false;
}
/*forward CaptarDados(playerid);
public CaptarDados(playerid)
{
    new strdados[128];
    DadosLog("==========================[Captando dados]=============================");
    SendClientMessage(playerid, -1, "==========================[Captando dados]=============================");
    DadosLog("VEÍCULOS ENCONTRADOS:");
    for(new car = 1; car <= MAX_VEHICLES; car++)    SetVehicleToRespawn(car);

    for(new c=0;c<MAX_VEHICLES;c++)
    {
        if(IsCarInGz(c))
        {
            new Float:x,Float:y,Float:z;
            GetVehiclePos(c, x, y, z);
            format(strdados, sizeof(strdados), "Veiculo ID: %d, Posição: %f, %f, %f | Salvo!",c,x, y, z);
            DadosLog(strdados);
            SendClientMessage(playerid, -1, strdados);
        }
    }
    DadosLog("BUSCA POR VEÍCULOS TERMINADA!");
 DadosLog(" ");
    DadosLog("OBJETOS NORMAIS ENCONTRADOS:");
    for(new c=0;c<MAX_OBJECTS;c++)
    {
        if(IsObjInGz(c))
        {
            new Float:x,Float:y,Float:z;
            GetObjectPos(c, x, y, z);
            format(strdados, sizeof(strdados), "Objeto Normal ID: %d, Posição: %f, %f, %f | Salvo!",c,x, y, z);
            DadosLog(strdados);
            SendClientMessage(playerid, -1, strdados);
        }
    }
    DadosLog("BUSCA POR OBJETOS TERMINADA!");
 DadosLog(" ");
    DadosLog("OBJETOS STREAMER ENCONTRADOS:");
    for(new c=0;c<ObjetosPlayGamer;c++)
    {
        if(IsDynamicObjInGz(c))
        {
            new Float:x,Float:y,Float:z;
            GetDynamicObjectPos(c, x, y, z);
            format(strdados, sizeof(strdados), "Objeto Streamer ID: %d, Posição: %f, %f, %f | Salvo!",c,x, y, z);
            DadosLog(strdados);
            SendClientMessage(playerid, -1, strdados);
        }
    }
    DadosLog("BUSCA POR OBJETOS STREAMER TERMINADA!");
    DadosLog(" ");
    DadosLog("REMOÇÃO DE OBJETOS ENCONTRADAS:");
    for(new c=0;c<MAX_REMOVEOBJ;c++)
    {
        if(IsObjDeletedInGz(c))
        {
            new Float:x,Float:y,Float:z;
            GetPosRemoveObj(c, x, y, z);
            format(strdados, sizeof(strdados), "Objeto Removido ID: %d, Posição: %f, %f, %f | Salvo!",c,x, y, z);
            DadosLog(strdados);
            SendClientMessage(playerid, -1, strdados);
        }
    }
    DadosLog("===============[Captura de dados Efetuada com sucesso]================");
    SendClientMessage(playerid, -1, "===============[Captura de dados Efetuada com sucesso]================");
    DadosLog(" ");
    DadosLog(" ");
    DadosLog(" ");
    DadosLog(" ");
    return 1;
}   */
forward Duplicar3DTextLabel(string[],color3d,Float:x,Float:y,Float:z,Float:dist,number);
public Duplicar3DTextLabel(string[],color3d,Float:x,Float:y,Float:z,Float:dist,number)
{Create3DTextLabel(string, color3d, Float:x,Float:y,Float:z,Float:dist,6); // bope
Create3DTextLabel(string, color3d, Float:x,Float:y,Float:z,Float:dist,7); // PFII
Create3DTextLabel(string, color3d, Float:x,Float:y,Float:z,Float:dist,8); // PFII
Create3DTextLabel(string, color3d, Float:x,Float:y,Float:z,Float:dist,0);  /* ROTA*/}
forward SalvarPassword();
public SalvarPassword()
{
    new file[64];
    format(file, sizeof(file), "PlayGamer/Password.ini");
    if(!dini_Exists(file))
    {
        dini_Create(file);
    }
    DOF2_SetString(file, "Senha", Passwrd);
    return 1;
}
forward LoadPassword();
public LoadPassword()
{
new file[64];
format(file, sizeof(file), "PlayGamer/Password.ini");
format(Passwrd,128, "%s", DOF2_GetString(file, "Senha"));
return 1;
}
forward BanPlayerOFF(playerid, string[], string2[]);
public BanPlayerOFF(playerid, string[], string2[])
{
    new arquivo[64],tmp[32],tmp2[32];

    getdate(Ano, Mes, Dia);
    format(tmp, 20, "%d/%d/%d", Dia, Mes, Ano);
    gettime(Hora, Minuto, Segundo);
    format(tmp2, 20, "%d:%d:%d", Hora, Minuto, Segundo);
    new ip[ 30 ];
    GetPlayerIp( playerid, ip, sizeof ip );
    if(strfind(string, "_", true) != -1)
    {
        format(arquivo, sizeof(arquivo), "Banidos/%s.ini",string);
        if(dini_Exists(arquivo)) return SendClientMessage(playerid, -1, "ERRO: Este Nick ja está Banido!");
        else
        {
            dini_Create(arquivo);
            dini_Set(arquivo, "Motivo", string2);
            dini_Set(arquivo, "Admin", PlayerName(playerid));
            dini_Set(arquivo, "Data", tmp);
            dini_Set(arquivo, "Hora", tmp2);
            dini_Set(arquivo, "IP", tmp2);
        }
        format(gstring,sizeof(gstring), "AdmAviso: %s Agendou Banimento do Nick: %s, Motivo: %s", PlayerName(playerid),string,string2);
        ABroadCast(COLOR_YELLOW,gstring,1);
    }
    else if(strfind(string, ".", true) != -1)
    {
        format(arquivo, sizeof(arquivo), "IPsBanidos/%s.ini",string);
        if(dini_Exists(arquivo)) return SendClientMessage(playerid, -1, "ERRO: Este IP ja está Banido!");
        else
        {
            dini_Create(arquivo);
            dini_Set(arquivo, "Motivo", string2);
            dini_Set(arquivo, "Admin", PlayerName(playerid));
            dini_Set(arquivo, "Data", tmp);
            dini_Set(arquivo, "Hora", tmp2);
        }
        format(gstring,sizeof(gstring), "AdmAviso: %s Agendou Banimento do IP: %s, Motivo: %s", PlayerName(playerid),string,string2);
        ABroadCast(COLOR_YELLOW,gstring,1);
    }
    else return SendClientMessage(playerid, -1, "ERRO: Verifique a Ortografia, pois não corresponde a um Nick ou IP Válido!");
    return 1;
}
forward ShowDialogVIP(playerid);
public ShowDialogVIP(playerid)
{
    if(PlayerInfo[playerid][pVip] != 0)
    {
        new Vinnyfodao[32];
        if(PlayerInfo[playerid][pVip] == 1)
        {
            Vinnyfodao = "VIP Normal";
        }
        if(PlayerInfo[playerid][pVip] == 2)
        {
            Vinnyfodao = "Super VIP";
        }
       /* for(new x=0; x<sizeof(VipInfo); x++)
        {
            if(strcmp(VipInfo[x][vNick],PlayerName(playerid), true ) == 0 )
            {
                format(loginstring,sizeof(loginstring),"{FFFFFF}Olá %s, Você é um Player{80FF80} %s.\n\n{1E90FF}Primeiro Vencimento: {FFFFFF}%d/%d/%d\n{1E90FF}Meses Pagos:{FFFFFF} %d\n\n** Renove seu VIP antes de expirar, Para evitar perda de Benefícios e Bens.\nMais Informações ou Relatar algum Problema, Consulte o /Forum!\n\n{FFB973}     Agradecemos a Preferência!",PlayerName(playerid),Vinnyfodao,VipInfo[x][vDia], VipInfo[x][vMes], VipInfo[x][vAno], VipInfo[x][vMesesVIP]);
                ShowPlayerDialog(playerid, 2314, DIALOG_STYLE_MSGBOX, "Status VIP", loginstring, "Fechar", "");
                break;
            }
        }  */
    }
    return 1;
}
public LoadProperty()
{
    new arrCoords[30][64];
    new strFromFile2[256];
    new File: file = fopen("PlayGamer/property.cfg", io_read);
    if (file)
    {
        new idx;
        while (idx < sizeof(HouseInfo))
        {
            fread(file, strFromFile2);
            split(strFromFile2, arrCoords, ',');
            HouseInfo[idx][hEntrancex] = floatstr(arrCoords[0]);
            HouseInfo[idx][hEntrancey] = floatstr(arrCoords[1]);
            HouseInfo[idx][hEntrancez] = floatstr(arrCoords[2]);
            HouseInfo[idx][hExitx] = floatstr(arrCoords[3]);
            HouseInfo[idx][hExity] = floatstr(arrCoords[4]);
            HouseInfo[idx][hExitz] = floatstr(arrCoords[5]);
            HouseInfo[idx][hHealthx] = strval(arrCoords[6]);
            HouseInfo[idx][hHealthy] = strval(arrCoords[7]);
            HouseInfo[idx][hHealthz] = strval(arrCoords[8]);
            HouseInfo[idx][hArmorrx] = strval(arrCoords[9]);
            HouseInfo[idx][hArmorry] = strval(arrCoords[10]);
            HouseInfo[idx][hArmorrz] = strval(arrCoords[11]);
            //printf("HouseInfo hEntrancez %f",HouseInfo[idx][hEntrancez]);
            strmid(HouseInfo[idx][hOwner], arrCoords[12], 0, strlen(arrCoords[12]), 255);
            strmid(HouseInfo[idx][hDiscription], arrCoords[13], 0, strlen(arrCoords[13]), 255);
            HouseInfo[idx][hValue] = strval(arrCoords[14]);
            HouseInfo[idx][hHel] = strval(arrCoords[15]);
            HouseInfo[idx][hArm] = strval(arrCoords[16]);
            HouseInfo[idx][hInt] = strval(arrCoords[17]);
            HouseInfo[idx][hLock] = strval(arrCoords[18]);
            HouseInfo[idx][hOwned] = strval(arrCoords[19]);
            HouseInfo[idx][hRooms] = strval(arrCoords[20]);
            HouseInfo[idx][hRent] = strval(arrCoords[21]);
            HouseInfo[idx][hRentabil] = strval(arrCoords[22]);
            HouseInfo[idx][hTakings] = strval(arrCoords[23]);
            HouseInfo[idx][hVec] = strval(arrCoords[24]);
            if(HouseInfo[idx][hVec] == 457)
            {
                HouseInfo[idx][hVec] = 411;
            }
            HouseInfo[idx][hVcol1] = strval(arrCoords[25]);
            HouseInfo[idx][hVcol2] = strval(arrCoords[26]);
            HouseInfo[idx][hDate] = strval(arrCoords[27]);
            HouseInfo[idx][hLevel] = strval(arrCoords[28]);
            HouseInfo[idx][hWorld] = strval(arrCoords[29]);

            if(strcmp(HouseInfo[idx][hDiscription],"Casa Free",true) == 0){}
            else if(strcmp(HouseInfo[idx][hDiscription],"Casa VIP",true) == 0){}
            else if(strcmp(HouseInfo[idx][hDiscription],"Super VIP",true) == 0){}
            else {strmid(HouseInfo[idx][hDiscription], "Casa Free", 0, strlen("Casa Free"), 255);}

            idx++;
        }
        printf("[BPG]: %d Casas Carregadas Com sucesso!", idx);
        fclose(file);
    }
 return 1;
}

public LoadBizz()
{
    new arrCoords[16][128];
    new strFromFile2[256];
    new File: file = fopen("PlayGamer/bizz.cfg", io_read);
    if (file)
    {
        new idx;
        while (idx < sizeof(BizzInfo))
        {
            fread(file, strFromFile2);
            split(strFromFile2, arrCoords, '|');
            BizzInfo[idx][bOwned] = strval(arrCoords[0]);
            strmid(BizzInfo[idx][bOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
            strmid(BizzInfo[idx][bMessage], arrCoords[2], 0, strlen(arrCoords[2]), 255);
            strmid(BizzInfo[idx][bExtortion], arrCoords[3], 0, strlen(arrCoords[3]), 255);
            BizzInfo[idx][bEntranceX] = floatstr(arrCoords[4]);
            BizzInfo[idx][bEntranceY] = floatstr(arrCoords[5]);
            BizzInfo[idx][bEntranceZ] = floatstr(arrCoords[6]);
            BizzInfo[idx][bExitX] = floatstr(arrCoords[7]);
            BizzInfo[idx][bExitY] = floatstr(arrCoords[8]);
            BizzInfo[idx][bExitZ] = floatstr(arrCoords[9]);
            BizzInfo[idx][bLevelNeeded] = strval(arrCoords[10]);
            BizzInfo[idx][bBuyPrice] = strval(arrCoords[11]);
            BizzInfo[idx][bEntranceCost] = strval(arrCoords[12]);
            BizzInfo[idx][bTill] = strval(arrCoords[13]);
            BizzInfo[idx][bLocked] = strval(arrCoords[14]);
            BizzInfo[idx][bInterior] = strval(arrCoords[15]);
            idx++;
        }
        printf("[BPG]: %d Empresas Carregadas", idx);
        fclose(file);
    }
    return 1;
}


public LoadSBizz()
{
    new arrCoords[12][64];
    new strFromFile2[256];
    new File: file = fopen("PlayGamer/sbizz.cfg", io_read);
    if (file)
    {
        new idx;
        while (idx < sizeof(SBizzInfo))
        {
            fread(file, strFromFile2);
            split(strFromFile2, arrCoords, '|');
            SBizzInfo[idx][sbOwned] = strval(arrCoords[0]);
            strmid(SBizzInfo[idx][sbOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
            strmid(SBizzInfo[idx][sbMessage], arrCoords[2], 0, strlen(arrCoords[2]), 255);
            strmid(SBizzInfo[idx][sbExtortion], arrCoords[3], 0, strlen(arrCoords[3]), 255);
            SBizzInfo[idx][sbEntranceX] = floatstr(arrCoords[4]);
            SBizzInfo[idx][sbEntranceY] = floatstr(arrCoords[5]);
            SBizzInfo[idx][sbEntranceZ] = floatstr(arrCoords[6]);
            SBizzInfo[idx][sbLevel] = strval(arrCoords[7]);
            SBizzInfo[idx][sbBuyPrice] = strval(arrCoords[8]);
            SBizzInfo[idx][sbEntranceCost] = strval(arrCoords[9]);
            SBizzInfo[idx][sbTill] = strval(arrCoords[10]);
            SBizzInfo[idx][sbLocked] = strval(arrCoords[11]);
            idx++;
        }
        printf("[BPG]: %d Empresas Especiais Carregadas", idx);
        fclose(file);
    }
    return 1;
}
forward CarregarEmpresas();
public CarregarEmpresas()
{
    new file[64];

    for(new h=0; h < MAX_BIZZES;h++)
    {
        format(file, sizeof(file), "/PlayGamer/Empresas/Empresa%d.ini", h);

        if(DOF2_FileExists(file))
        {
            BizzInfo[h][bLevelNeeded] = DOF2_GetInt(file, "Level");
            format(BizzInfo[h][bOwner],32,"%s", DOF2_GetString(file, "Dono"));
            format(BizzInfo[h][bMessage],32,"%s", DOF2_GetString(file, "Nome"));
            format(BizzInfo[h][bExtortion],32,"%s", DOF2_GetString(file, "Extorsao"));
            BizzInfo[h][bOwned] = DOF2_GetInt(file, "Comprada");
            BizzInfo[h][bEntranceX] = DOF2_GetFloat(file, "EntradaX");
            BizzInfo[h][bEntranceY] = DOF2_GetFloat(file, "EntradaY");
            BizzInfo[h][bEntranceZ] = DOF2_GetFloat(file, "EntradaZ");
            BizzInfo[h][bExitX] = DOF2_GetFloat(file, "SaidaX");
            BizzInfo[h][bExitY] = DOF2_GetFloat(file, "SaidaY");
            BizzInfo[h][bExitZ] = DOF2_GetFloat(file, "SaidaZ");
            BizzInfo[h][bBuyPrice] = DOF2_GetInt(file, "Preco");
            BizzInfo[h][bEntranceCost] = DOF2_GetInt(file, "Entrada");
            BizzInfo[h][bTill] = DOF2_GetInt(file, "Cofre");
            BizzInfo[h][bLocked] = DOF2_GetInt(file, "Trancada");
            BizzInfo[h][bInterior] = DOF2_GetInt(file, "Interior");
            BizzInfo[h][bProd] = DOF2_GetInt(file, "Produtos");
            BizzInfo[h][bMaxProd] = DOF2_GetInt(file, "MaxProdutos");
        }
    }
}
forward CarregarMiniEmpresas();
public CarregarMiniEmpresas()
{
    new file[64];
    for(new h=0; h < MAX_SBIZZES;h++)
    {
        format(file, sizeof(file), "/PlayGamer/MiniEmpresas/MiniEmpresa%d.ini", h);
        if(DOF2_FileExists(file))
        {
        SBizzInfo[h][sbLevel] = DOF2_GetInt(file, "Level");
        format(SBizzInfo[h][sbOwner],32,"%s", DOF2_GetString(file, "Dono"));
        format(SBizzInfo[h][sbMessage],32,"%s", DOF2_GetString(file, "Nome"));
        format(SBizzInfo[h][sbExtortion],32,"%s", DOF2_GetString(file, "Extorsao"));
        SBizzInfo[h][sbOwned] = DOF2_GetInt(file, "Comprada");
        SBizzInfo[h][sbBuyPrice] = DOF2_GetInt(file, "Preco");
        SBizzInfo[h][sbEntranceX] = DOF2_GetFloat(file, "EntradaX");
        SBizzInfo[h][sbEntranceY] = DOF2_GetFloat(file, "EntradaY");
        SBizzInfo[h][sbEntranceZ] = DOF2_GetFloat(file, "EntradaZ");
        SBizzInfo[h][sbEntranceCost] = DOF2_GetInt(file, "Entrada");
        SBizzInfo[h][sbTill] = DOF2_GetInt(file, "Cofre");
        SBizzInfo[h][sbLocked] = DOF2_GetInt(file, "Trancada");
        SBizzInfo[h][sbProd] = DOF2_GetInt(file, "Produtos");
        SBizzInfo[h][sbMaxProd] = DOF2_GetInt(file, "MaxProdutos");
        SBizzInfo[h][sbAtiva] = DOF2_GetInt(file, "Ativa");
        SBizzInfo[h][sbLucro] = DOF2_GetInt(file, "Lucro");
        SBizzInfo[h][sbReceber] = DOF2_GetInt(file, "Receber");
        if(SBizzInfo[h][sbAtiva] == 1) SBizzInfo[h][sbDonoON] = 1;
    }
    }
}
forward CarregarFazendas();
public CarregarFazendas()
{
    new file[64];
    for(new h=0; h < MAX_FAZENDA;h++)
    {
        format(file, sizeof(file), "/PlayGamer/Fazendas/Fazenda%d.ini", h);
        if(DOF2_FileExists(file))
        {
        FazendaInfo[h][fLevel] = DOF2_GetInt(file, "Level");
        format(FazendaInfo[h][fDono],32,"%s", DOF2_GetString(file, "Dono"));
        format(FazendaInfo[h][fDescricao],32,"%s", DOF2_GetString(file, "Nome"));
        FazendaInfo[h][fOwned] = DOF2_GetInt(file, "Comprada");
        FazendaInfo[h][fValor] = DOF2_GetInt(file, "Preco");
        FazendaInfo[h][ffX] = DOF2_GetFloat(file, "EntradaX");
        FazendaInfo[h][ffY] = DOF2_GetFloat(file, "EntradaY");
        FazendaInfo[h][ffZ] = DOF2_GetFloat(file, "EntradaZ");
        FazendaInfo[h][fFundos] = DOF2_GetInt(file, "Cofre");
        FazendaInfo[h][fProd] = DOF2_GetInt(file, "Produtos");
        FazendaInfo[h][fMaxProd] = DOF2_GetInt(file, "MaxProdutos");
        FazendaInfo[h][fAtiva] = DOF2_GetInt(file, "Ativa");
        FazendaInfo[h][fLucro] = DOF2_GetInt(file, "Lucro");
        FazendaInfo[h][fReceber] = DOF2_GetInt(file, "Receber");
        if(FazendaInfo[h][fAtiva] == 1) FazendaInfo[h][fDonoON] = 1;
    }
    }
}
forward CarregarCasas();
public CarregarCasas()
{
    new file[64];

    for(new h=0; h < MAX_HOUSES;h++)
    {
        format(file, sizeof(file), "/PlayGamer/Casas/Casa%d.ini", h);
        if(DOF2_FileExists(file))
        {
        HouseInfo[h][hLevel] = DOF2_GetInt(file, "Level");
        format(HouseInfo[h][hOwner],32,"%s", DOF2_GetString(file, "Dono"));
        HouseInfo[h][hEntrancex] = DOF2_GetFloat(file, "EntradaX");
        HouseInfo[h][hEntrancey] = DOF2_GetFloat(file, "EntradaY");
        HouseInfo[h][hEntrancez] = DOF2_GetFloat(file, "EntradaZ");
        HouseInfo[h][hExitx] = DOF2_GetFloat(file, "SaidaX");
        HouseInfo[h][hExity] = DOF2_GetFloat(file, "SaidaY");
        HouseInfo[h][hExitz] = DOF2_GetFloat(file, "SaidaZ");
        format(HouseInfo[h][hDiscription],32,"%s", DOF2_GetString(file, "Descricao"));
        HouseInfo[h][hHel] = DOF2_GetInt(file, "Vida");
        HouseInfo[h][hArm] = DOF2_GetInt(file, "Colete");
        HouseInfo[h][hValue] = DOF2_GetInt(file, "Valor");
        HouseInfo[h][hInt] = DOF2_GetInt(file, "Interior");
        HouseInfo[h][hLock] = DOF2_GetInt(file, "Trancada");
        HouseInfo[h][hOwned] = DOF2_GetInt(file, "Comprada");
        HouseInfo[h][hRent] = DOF2_GetInt(file, "Aluguel");
        HouseInfo[h][hRentabil] = DOF2_GetInt(file, "Alugavel");
        HouseInfo[h][hTakings] = DOF2_GetInt(file, "Cofre");
        HouseInfo[h][hVec] = DOF2_GetInt(file, "Carro");
        HouseInfo[h][hVcol1] = DOF2_GetInt(file, "VCor1");
        HouseInfo[h][hVcol2] = DOF2_GetInt(file, "VCor2");
        HouseInfo[h][hWorld] = DOF2_GetInt(file, "VW");
        HouseInfo[h][hDate] = DOF2_GetInt(file, "Data");
        HouseInfo[h][hSpawnX] = DOF2_GetFloat(file, "hSpawnX");
        HouseInfo[h][hSpawnY] = DOF2_GetFloat(file, "hSpawnY");
        HouseInfo[h][hSpawnZ] = DOF2_GetFloat(file, "hSpawnZ");
        HouseInfo[h][hSpawnA] = DOF2_GetFloat(file, "hSpawnA");
        HouseInfo[h][hAtiva] = DOF2_GetInt(file, "Ativa");
        HouseInfo[h][hWorld] = h;
        }
    }
}
forward SalvarTudo();
public SalvarTudo()
{
    new file[64];

    for(new h=0; h < MAX_HOUSES;h++)
    {
        format(file, sizeof(file), "/PlayGamer/Casas/Casa%d.ini", h);
        if(!DOF2_FileExists(file))
        {
           DOF2_CreateFile(file);
        }
        DOF2_SetString(file, "Dono",HouseInfo[h][hOwner]);
        DOF2_SetInt(file, "Level", HouseInfo[h][hLevel]);
        DOF2_SetFloat(file, "EntradaX", HouseInfo[h][hEntrancex]);
        DOF2_SetFloat(file, "EntradaY", HouseInfo[h][hEntrancey]);
        DOF2_SetFloat(file, "EntradaZ", HouseInfo[h][hEntrancez]);
        DOF2_SetFloat(file, "SaidaX", HouseInfo[h][hExitx]);
        DOF2_SetFloat(file, "SaidaY", HouseInfo[h][hExity]);
        DOF2_SetFloat(file, "SaidaZ", HouseInfo[h][hExitz]);
        DOF2_SetString(file, "Descricao",HouseInfo[h][hDiscription]);
        DOF2_SetInt(file, "Valor", HouseInfo[h][hValue]);
        DOF2_SetInt(file, "Interior", HouseInfo[h][hInt]);
        DOF2_SetInt(file, "Vida", HouseInfo[h][hHel]);
        DOF2_SetInt(file, "Colete", HouseInfo[h][hArm]);
        DOF2_SetInt(file, "Trancada", HouseInfo[h][hLock]);
        DOF2_SetInt(file, "Comprada", HouseInfo[h][hOwned]);
        DOF2_SetInt(file, "Aluguel", HouseInfo[h][hRent]);
        DOF2_SetInt(file, "Alugavel", HouseInfo[h][hRentabil]);
        DOF2_SetInt(file, "Cofre", HouseInfo[h][hTakings]);
        DOF2_SetInt(file, "Carro", HouseInfo[h][hVec]);
        DOF2_SetInt(file, "Cor1", HouseInfo[h][hVcol1]);
        DOF2_SetInt(file, "Cor2", HouseInfo[h][hVcol2]);
        DOF2_SetInt(file, "VW", HouseInfo[h][hWorld]);
        DOF2_SetInt(file, "Data", HouseInfo[h][hDate]);
        DOF2_SetFloat(file, "hSpawnX", HouseInfo[h][hSpawnX]);
        DOF2_SetFloat(file, "hSpawnY", HouseInfo[h][hSpawnY]);
        DOF2_SetFloat(file, "hSpawnZ", HouseInfo[h][hSpawnZ]);
        DOF2_SetFloat(file, "hSpawnA", HouseInfo[h][hSpawnA]);
        DOF2_SetInt(file, "Ativa", HouseInfo[h][hAtiva]);
        DOF2_SaveFile();

    }

    for(new h=0; h < MAX_BIZZES;h++)
    {
        format(file, sizeof(file), "/PlayGamer/Empresas/Empresa%d.ini", h);
        if(!DOF2_FileExists(file))
        {
           DOF2_CreateFile(file);
        }
        DOF2_SetString(file, "Nome",BizzInfo[h][bMessage]);
        DOF2_SetString(file, "Dono",BizzInfo[h][bOwner]);
        DOF2_SetInt(file, "Level", BizzInfo[h][bLevelNeeded]);
        DOF2_SetInt(file, "Preco", BizzInfo[h][bBuyPrice]);
        DOF2_SetString(file, "Extorsao",BizzInfo[h][bExtortion]);
        DOF2_SetInt(file, "Comprada", BizzInfo[h][bOwned]);
        DOF2_SetFloat(file, "EntradaX", BizzInfo[h][bEntranceX]);
        DOF2_SetFloat(file, "EntradaY", BizzInfo[h][bEntranceY]);
        DOF2_SetFloat(file, "EntradaZ", BizzInfo[h][bEntranceZ]);
        DOF2_SetFloat(file, "SaidaX", BizzInfo[h][bExitX]);
        DOF2_SetFloat(file, "SaidaY", BizzInfo[h][bExitY]);
        DOF2_SetFloat(file, "SaidaZ", BizzInfo[h][bExitZ]);
        DOF2_SetInt(file, "Entrada", BizzInfo[h][bEntranceCost]);
        DOF2_SetInt(file, "Cofre", BizzInfo[h][bTill]);
        DOF2_SetInt(file, "Trancada", BizzInfo[h][bLocked]);
        DOF2_SetInt(file, "Interior", BizzInfo[h][bInterior]);
        DOF2_SetInt(file, "Produtos", BizzInfo[h][bProd]);
        DOF2_SetInt(file, "MaxProdutos", BizzInfo[h][bMaxProd]);
        DOF2_SaveFile();
    }

    for(new h=0; h < MAX_SBIZZES;h++)
    {
        format(file, sizeof(file), "/PlayGamer/MiniEmpresas/MiniEmpresa%d.ini", h);
        if(!DOF2_FileExists(file))
        {
           DOF2_CreateFile(file);
        }
        DOF2_SetString(file, "Nome",SBizzInfo[h][sbMessage]);
        DOF2_SetString(file, "Dono",SBizzInfo[h][sbOwner]);
        DOF2_SetInt(file, "Level", SBizzInfo[h][sbLevel]);
        DOF2_SetInt(file, "Preco", SBizzInfo[h][sbBuyPrice]);
        DOF2_SetString(file, "Extorsao",SBizzInfo[h][sbExtortion]);
        DOF2_SetInt(file, "Comprada", SBizzInfo[h][sbOwned]);
        DOF2_SetFloat(file, "EntradaX", SBizzInfo[h][sbEntranceX]);
        DOF2_SetFloat(file, "EntradaY", SBizzInfo[h][sbEntranceY]);
        DOF2_SetFloat(file, "EntradaZ", SBizzInfo[h][sbEntranceZ]);
        DOF2_SetInt(file, "Entrada", SBizzInfo[h][sbEntranceCost]);
        DOF2_SetInt(file, "Cofre", SBizzInfo[h][sbTill]);
        DOF2_SetInt(file, "Trancada", SBizzInfo[h][sbLocked]);
        DOF2_SetInt(file, "Produtos", SBizzInfo[h][sbProd]);
        DOF2_SetInt(file, "MaxProdutos", SBizzInfo[h][sbMaxProd]);
        DOF2_SetInt(file, "Ativa", SBizzInfo[h][sbAtiva]);
        DOF2_SetInt(file, "Lucro", SBizzInfo[h][sbLucro]);
        DOF2_SetInt(file, "Receber", SBizzInfo[h][sbReceber]);
        DOF2_SaveFile();
    }
    for(new h=0; h < MAX_FAZENDA;h++)
    {
        format(file, sizeof(file), "/PlayGamer/Fazendas/Fazenda%d.ini", h);
        if(!DOF2_FileExists(file))
        {
           DOF2_CreateFile(file);
        }
        DOF2_SetString(file, "Nome",FazendaInfo[h][fDescricao]);
        DOF2_SetString(file, "Dono",FazendaInfo[h][fDono]);
        DOF2_SetInt(file, "Level", FazendaInfo[h][fLevel]);
        DOF2_SetInt(file, "Preco", FazendaInfo[h][fValor]);
        DOF2_SetInt(file, "Comprada", FazendaInfo[h][fOwned]);
        DOF2_SetFloat(file, "EntradaX", FazendaInfo[h][ffX]);
        DOF2_SetFloat(file, "EntradaY", FazendaInfo[h][ffY]);
        DOF2_SetFloat(file, "EntradaZ", FazendaInfo[h][ffZ]);
        DOF2_SetInt(file, "Cofre", FazendaInfo[h][fFundos]);
        DOF2_SetInt(file, "Produtos", FazendaInfo[h][fProd]);
        DOF2_SetInt(file, "MaxProdutos", FazendaInfo[h][fMaxProd]);
        DOF2_SetInt(file, "Ativa", FazendaInfo[h][fAtiva]);
        DOF2_SetInt(file, "Lucro", FazendaInfo[h][fLucro]);
        DOF2_SetInt(file, "Receber", FazendaInfo[h][fReceber]);
        DOF2_SaveFile();
    }
    return 1;
}
forward SalvarCasa(houseid);
public SalvarCasa(houseid)
{
        new file[64];
        format(file, sizeof(file), "/PlayGamer/Casas/Casa%d.ini", houseid);
        if(!DOF2_FileExists(file))
        {
           DOF2_CreateFile(file);
        }
        DOF2_SetString(file, "Dono",HouseInfo[houseid][hOwner]);
        DOF2_SetInt(file, "Level", HouseInfo[houseid][hLevel]);
        DOF2_SetFloat(file, "EntradaX", HouseInfo[houseid][hEntrancex]);
        DOF2_SetFloat(file, "EntradaY", HouseInfo[houseid][hEntrancey]);
        DOF2_SetFloat(file, "EntradaZ", HouseInfo[houseid][hEntrancez]);
        DOF2_SetFloat(file, "SaidaX", HouseInfo[houseid][hExitx]);
        DOF2_SetFloat(file, "SaidaY", HouseInfo[houseid][hExity]);
        DOF2_SetFloat(file, "SaidaZ", HouseInfo[houseid][hExitz]);
        DOF2_SetString(file, "Descricao",HouseInfo[houseid][hDiscription]);
        DOF2_SetInt(file, "Valor", HouseInfo[houseid][hValue]);
        DOF2_SetInt(file, "Interior", HouseInfo[houseid][hInt]);
        DOF2_SetInt(file, "Vida", HouseInfo[houseid][hHel]);
        DOF2_SetInt(file, "Colete", HouseInfo[houseid][hArm]);
        DOF2_SetInt(file, "Trancada", HouseInfo[houseid][hLock]);
        DOF2_SetInt(file, "Comprada", HouseInfo[houseid][hOwned]);
        DOF2_SetInt(file, "Aluguel", HouseInfo[houseid][hRent]);
        DOF2_SetInt(file, "Alugavel", HouseInfo[houseid][hRentabil]);
        DOF2_SetInt(file, "Cofre", HouseInfo[houseid][hTakings]);
        DOF2_SetInt(file, "Carro", HouseInfo[houseid][hVec]);
        DOF2_SetInt(file, "Cor1", HouseInfo[houseid][hVcol1]);
        DOF2_SetInt(file, "Cor2", HouseInfo[houseid][hVcol2]);
        DOF2_SetInt(file, "VW", HouseInfo[houseid][hWorld]);
        DOF2_SetInt(file, "Data", HouseInfo[houseid][hDate]);
        DOF2_SetFloat(file, "hSpawnX", HouseInfo[houseid][hSpawnX]);
        DOF2_SetFloat(file, "hSpawnY", HouseInfo[houseid][hSpawnY]);
        DOF2_SetFloat(file, "hSpawnZ", HouseInfo[houseid][hSpawnZ]);
        DOF2_SetFloat(file, "hSpawnA", HouseInfo[houseid][hSpawnA]);
        DOF2_SetInt(file, "Ativa", HouseInfo[houseid][hAtiva]);
        DOF2_SaveFile();
        return 1;
}
stock SerialPlayerHD(playerid) {
new PlayerSerial[100];
        gpci(playerid, PlayerSerial, sizeof PlayerSerial);
    return PlayerSerial;
}
forward PlayerSerialBanido(playerid);
public PlayerSerialBanido(playerid)
{
new PlayerSerial[100],arquivo[64];
gpci(playerid, PlayerSerial, sizeof PlayerSerial);
format(arquivo, sizeof(arquivo), "SeriaisBanidos/%s.ini",PlayerSerial);
if(dini_Exists(arquivo)) return 1;
return false;
}
forward BanXiter(playerid, motivo[], admin[],serialban[]);
public BanXiter(playerid, motivo[], admin[],serialban[])
{
    new arquivo[64], tmp[20], tmp2[20],playerip[32];
    GetPlayerIp(playerid,playerip,32);
    format(arquivo, sizeof(arquivo), "SeriaisBanidos/%s.ini",serialban);
    getdate(Ano, Mes, Dia);
    format(tmp, 20, "%d/%d/%d", Dia, Mes, Ano);
    gettime(Hora, Minuto, Segundo);
    format(tmp2, 20, "%d:%d:%d", Hora, Minuto, Segundo);
    if(dini_Exists(arquivo))
    {
        Ban(playerid);
    }
    else
    {
        dini_Create(arquivo);
        dini_Set(arquivo,"Nick",PlayerName(playerid));
        dini_Set(arquivo,"Motivo",playerip);
        dini_Set(arquivo,"Motivo",motivo);
        dini_Set(arquivo,"Admin",admin);
        dini_Set(arquivo,"Data",tmp);
        dini_Set(arquivo,"Hora",tmp2);

        Ban(playerid);
    }
    return 1;
}
forward PediuServico2(playerid);
public PediuServico2(playerid)
{
    PediuServico[playerid] = 0;
}
/*stock CarregarIDEmpresas(id)
{
    new result=MAX_BIZZES-1, quantidadeemp=MAX_BIZZES+MAX_SBIZZES;
    //quantidadeemp-=2;
    for(new emp=0; emp < quantidadeemp;emp++)
    {
        if(emp < MAX_BIZZES)
        {
            EmpresasIDcerto[ emp ] = emp;
        }
        else if(emp < MAX_SBIZZES)
        {
            EmpresasIDcerto[ emp ] = emp-result;
        }
    }
}                 */
forward EncherCaminhao(playerid, Caminhao, Quantidade, VeiculoID);
public EncherCaminhao(playerid, Caminhao, Quantidade, VeiculoID)
{
    new ResultQuantidade = 0,GranaPagar = 0,fID=0,detetor=0;
    if(PlayerToPoint(15.0, playerid, 2066.3315,-2088.7920,14.1241)) //return SendClientMessage(playerid, -1, "Você não está no local de compra de produtos!");
    {detetor=1;}
    else if(detetor==0)
    {
        for(new Fid=0; Fid < MAX_FAZENDA;Fid++)
        {
            if (PlayerToPoint(5, playerid,FazendaInfo[ Fid ][ ffX ], FazendaInfo[ Fid ][ ffY ], FazendaInfo[ Fid ][ ffZ ]))
            {
                fID=Fid;
                detetor=2;
                break;
            }
        }
    }
    else return SendClientMessage(playerid, -1, "Você não está no local de compra de produtos ou em alguma Fazenda!");
    if(detetor==1)
    {
        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, -1, "Você não está em um Veículo!");
        if(!IsACaminhaoCar(VeiculoID))   return SendClientMessage(playerid, -1, "ERRO: Você não está em nenhum caminhão, vá até a HQ Caminhoneiros e pegue um veículo!");

            ResultQuantidade = Quantidade+CaminhaoProdFazendas[VeiculoID];
            GranaPagar = Quantidade*50;

        if(GetPlayerMoneyEx(playerid) < GranaPagar){
        format(gstring, sizeof(gstring), "ERRO: Dinheiro insuficiente, Você precisa de R$ %d, Para comprar %d Produtos!", GranaPagar,Quantidade);
        return SendClientMessage(playerid, -1, gstring);     }

        if(Caminhao == 403 || Caminhao == 514 || Caminhao == 515)
        {
            if(!IsTrailerAttachedToVehicle(VeiculoID))  return SendClientMessage(playerid, -1, "ERRO: Para carregar Produtos nesse tipo de veículo, você precisa engatar uma carroceria!");
        }
        if(Caminhao == 403 || Caminhao == 514 || Caminhao == 515)  // Caminhões
        {
            if(ResultQuantidade <= 0 || ResultQuantidade > 500)
            {
                SendClientMessage(playerid, -1, "ERRO: Este tipo de veículo suporta no máximo [1 - 500] Produtos!");
                format(gstring, sizeof(gstring), "O Caminhão ja está com %d Produtos!", CaminhaoProdFazendas[VeiculoID]);
                return SendClientMessage(playerid, -1, gstring);

            }
            else { CaminhaoProdFazendas[VeiculoID] = ResultQuantidade;
            GivePlayerMoney(playerid, -GranaPagar); }
        }
        else if(Caminhao == 440 || Caminhao == 414 || Caminhao == 459 || Caminhao == 413 || Caminhao == 482)   // Vans
        {
            if(ResultQuantidade <= 0 || ResultQuantidade > 50)
            {
                SendClientMessage(playerid, -1, "ERRO: Este tipo de veículo suporta no máximo [1 - 50] Produtos!");
                format(gstring, sizeof(gstring), "O Caminhão ja está com %d Produtos!", CaminhaoProdFazendas[VeiculoID]);
                return SendClientMessage(playerid, -1, gstring);
            }
            else { CaminhaoProdFazendas[VeiculoID] = ResultQuantidade;
            GivePlayerMoney(playerid, -GranaPagar); }
        }
        else if(Caminhao == 499 || Caminhao == 413 || Caminhao == 482 || Caminhao == 456)   // Caminhão bau
        {
            if(ResultQuantidade <= 0 || ResultQuantidade > 100)
            {
                SendClientMessage(playerid, -1, "ERRO: Este tipo de veículo suporta no máximo [1 - 100] Produtos!");
                format(gstring, sizeof(gstring), "O Caminhão ja está com %d Produtos!", CaminhaoProdFazendas[VeiculoID]);
                return SendClientMessage(playerid, -1, gstring);
            }
            else { CaminhaoProdFazendas[VeiculoID] = ResultQuantidade;
            GivePlayerMoney(playerid, -GranaPagar); }
        }
        format(gstring, sizeof(gstring), "%d Produtos, TOTAL: %d!", Quantidade,ResultQuantidade);
        SendClientMessage(playerid, -1, gstring);
        format(gstring, sizeof(gstring), "Você carregou um veículo com %d Produtos do Campo, Por R$ %d!", CaminhaoProdFazendas[VeiculoID],GranaPagar);
        SendClientMessage(playerid, -1, gstring);
        SendClientMessage(playerid, -1, "OBS: Você comprou produtos base de uma Empresa especializada, e só poderá vender para Fazendas!");
    }
    else if(detetor == 2)
    {
        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, -1, "Você não está em um Veículo!");
        if(!IsACaminhaoCar(VeiculoID))   return SendClientMessage(playerid, -1, "ERRO: Você não está em nenhum caminhão, vá até a HQ Caminhoneiros e pegue um veículo!");


            ResultQuantidade = Quantidade+CaminhaoProdEmpresas[VeiculoID];
            GranaPagar = Quantidade*150;

        if(GetPlayerMoneyEx(playerid) < GranaPagar){
        format(gstring, sizeof(gstring), "ERRO: Dinheiro insuficiente, Você precisa de R$ %d, Para comprar %d Produtos!", GranaPagar,Quantidade);
        return SendClientMessage(playerid, -1, gstring);     }

        if(Caminhao == 403 || Caminhao == 514 || Caminhao == 515)
        {
            if(!IsTrailerAttachedToVehicle(VeiculoID))  return SendClientMessage(playerid, -1, "ERRO: Para carregar Produtos nesse tipo de veículo, você precisa engatar uma carroceria!");
        }

        if(Caminhao == 403 || Caminhao == 514 || Caminhao == 515)  // Caminhões
        {
            if(ResultQuantidade <= 0 || ResultQuantidade > 500)
            {
                SendClientMessage(playerid, -1, "ERRO: Este tipo de veículo suporta no máximo [1 - 500] Produtos!");
                format(gstring, sizeof(gstring), "O Caminhão ja está com %d Produtos!", CaminhaoProdEmpresas[VeiculoID]);
                return SendClientMessage(playerid, -1, gstring);

            }
            else { if(FazendaInfo[ fID ][ fProd ] < ResultQuantidade)  return SendClientMessage(playerid, -1, "ERRO: Esta fazenda não possui essa quantidade de Produtos!");
            CaminhaoProdEmpresas[VeiculoID] = ResultQuantidade;
            GivePlayerMoney(playerid, -GranaPagar); }
        }
        else if(Caminhao == 440 || Caminhao == 459 || Caminhao == 413 || Caminhao == 482)   // Vans
        {
            if(ResultQuantidade <= 0 || ResultQuantidade > 50)
            {
                SendClientMessage(playerid, -1, "ERRO: Este tipo de veículo suporta no máximo [1 - 50] Produtos!");
                format(gstring, sizeof(gstring), "O Caminhão ja está com %d Produtos!", CaminhaoProdEmpresas[VeiculoID]);
                return SendClientMessage(playerid, -1, gstring);
            }
            else {if(FazendaInfo[ fID ][ fProd ] < ResultQuantidade)  return SendClientMessage(playerid, -1, "ERRO: Esta fazenda não possui essa quantidade de Produtos!");
            CaminhaoProdEmpresas[VeiculoID] = ResultQuantidade;
            GivePlayerMoney(playerid, -GranaPagar); }
        }
        else if(Caminhao == 499 || Caminhao == 414 || Caminhao == 413 || Caminhao == 482 || Caminhao == 456)   // Caminhão bau
        {
            if(ResultQuantidade <= 0 || ResultQuantidade > 100)
            {
                SendClientMessage(playerid, -1, "ERRO: Este tipo de veículo suporta no máximo [1 - 100] Produtos!");
                format(gstring, sizeof(gstring), "O Caminhão ja está com %d Produtos!", CaminhaoProdEmpresas[VeiculoID]);
                return SendClientMessage(playerid, -1, gstring);
            }
            else { if(FazendaInfo[ fID ][ fProd ] < ResultQuantidade)  return SendClientMessage(playerid, -1, "ERRO: Esta fazenda não possui essa quantidade de Produtos!");
            CaminhaoProdEmpresas[VeiculoID] = ResultQuantidade;
            GivePlayerMoney(playerid, -GranaPagar); }
        }
        FazendaInfo[ fID ][ fReceber ] += GranaPagar*9;
        FazendaInfo[ fID ][ fProd ] -= ResultQuantidade;
        format(gstring, sizeof(gstring), "%d Produtos, TOTAL: %d!", Quantidade,ResultQuantidade);
        SendClientMessage(playerid, -1, gstring);
        format(gstring, sizeof(gstring), "Você carregou um veículo com %d Produtos Empresariais, Por R$ %d!", CaminhaoProdEmpresas[VeiculoID],GranaPagar);
        SendClientMessage(playerid, -1, gstring);
        SendClientMessage(playerid, -1, "OBS: Você comprou produtos de uma Fazenda, e só poderá vender para Empresas!");
    }
    return 1;
}
forward VenderProdutos(playerid, Quantidade, VeiculoID, Caminhao);
public VenderProdutos(playerid, Quantidade, VeiculoID, Caminhao)
{
    new fID=999,tipo=0,QuantMax=0,GranaReceb=0,string[128];
    if(Quantidade <= 0) return SendClientMessage(playerid, -1, "Expecifique uma quantidade válida!");
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, -1, "Você não está em um Veículo!");
    if(!IsACaminhaoCar(VeiculoID))   return SendClientMessage(playerid, -1, "ERRO: Você não está em nenhum caminhão, vá até a HQ Caminhoneiros e pegue um veículo!");
    if(Caminhao == 403 || Caminhao == 514 || Caminhao == 515)
    {
        if(!IsTrailerAttachedToVehicle(VeiculoID))  return SendClientMessage(playerid, -1, "ERRO: Para Vender Produtos nesse tipo de veículo, você precisa engatar uma carroceria!");
    }
    for(new Fid=0; Fid < MAX_FAZENDA;Fid++)
    {
        if (PlayerToPoint(5, playerid,FazendaInfo[ Fid ][ ffX ], FazendaInfo[ Fid ][ ffY ], FazendaInfo[ Fid ][ ffZ ]))
        {
            fID=Fid;
            tipo=1;
            break;
        }
    }
    if(tipo == 0)
    {
        for(new Bid=0; Bid < MAX_BIZZES;Bid++)
        {
            if (PlayerToPoint(5, playerid,BizzInfo[Bid][bEntranceX], BizzInfo[Bid][bEntranceY], BizzInfo[Bid][bEntranceZ]))
            {
                fID=Bid;
                tipo=2;
                break;
            }
        }
    }
    if(tipo == 0)
    {
        for(new Bid=0; Bid < MAX_SBIZZES;Bid++)
        {
            if (PlayerToPoint(5, playerid,SBizzInfo[Bid][sbEntranceX], SBizzInfo[Bid][sbEntranceY], SBizzInfo[Bid][sbEntranceZ]))
            {
                fID=Bid;
                tipo=3;
                break;
            }
        }
    }

    if(fID == 999) return SendClientMessage(playerid, -1, " Você não está em uma fazenda ou empresa para vender produtos!");
    if(tipo==1)
    {
        if(CaminhaoProdFazendas[VeiculoID] == 0 && CaminhaoProdEmpresas[VeiculoID] >= 1){
        format(string, sizeof(string), "ERRO: Seu Veículo possui apenas produtos Empresariais, e só pode ser negociado com empresas. Produtos: %d!", CaminhaoProdEmpresas[VeiculoID]);
        SendClientMessage(playerid, -1, string);
        return 1;                                    }
    }
    else if(tipo>=2)
    {
        if(CaminhaoProdFazendas[VeiculoID] > 0 && CaminhaoProdEmpresas[VeiculoID] == 0){
        format(string, sizeof(string), "ERRO: Seu Veículo possui apenas produtos base (para fazendas), e só pode ser negociado em Fazendas. Produtos: %d!", CaminhaoProdFazendas[VeiculoID]);
        SendClientMessage(playerid, -1, string);
        return 1;                                    }
    }
    if(tipo==1)
    {

        QuantMax = FazendaInfo[ fID ][ fProd ]+Quantidade;
        if(QuantMax > FazendaInfo[ fID ][ fMaxProd ]) {
        format(string, sizeof(string), "ERRO: Quandidade Max. de Produtos para este Estabelecimento excedida: %d!", FazendaInfo[ fID ][ fMaxProd ]);
        SendClientMessage(playerid, -1, string);
        format(string, sizeof(string), "** Estabelecimento com %d Produtos ja em estoque, Modifique para uma quantidade menor ou volte mais tarde!", FazendaInfo[ fID ][ fProd ]);
        return SendClientMessage(playerid, -1, string);  }
        if(CaminhaoProdFazendas[VeiculoID] < Quantidade) {
        format(string, sizeof(string), "ERRO: Seu caminhão não possui essa quantidade de produtos. Produtos Disponíveis: %d!", CaminhaoProdFazendas[VeiculoID]);
        return SendClientMessage(playerid, -1, string);  }

        GranaReceb = Quantidade*200;
        if(FazendaInfo[ fID ][ fFundos ] < GranaReceb){
        format(string, sizeof(string), "ERRO: Esta Fazenda não possui fundos suficientes(R$ %d) para comprar esta quantidade de Produtos(R$ %d)!", FazendaInfo[ fID ][ fFundos ],GranaReceb);
        return SendClientMessage(playerid, -1, string);  }

        CaminhaoProdFazendas[VeiculoID] -= Quantidade;
        FazendaInfo[ fID ][ fProd ]  += Quantidade;
        FazendaInfo[ fID ][ fFundos ] -= GranaReceb;
        GivePlayerMoney(playerid, GranaReceb);

        format(string, sizeof(string), "Você vendeu %d produtos por R$ %d, para a Fazenda: %s!", Quantidade,GranaReceb,FazendaInfo[ fID ][fDescricao]);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
    }
    else if(tipo==2)
    {
        QuantMax = BizzInfo[ fID ][ bProd ]+Quantidade;
        if(QuantMax > BizzInfo[ fID ][ bMaxProd ]) {
        format(string, sizeof(string), "ERRO: Quandidade Max. de Produtos para este Estabelecimento excedida: %d!", BizzInfo[ fID ][ bMaxProd ]);
        SendClientMessage(playerid, -1, string);
        format(string, sizeof(string), "** Estabelecimento com %d Produtos ja em estoque, Modifique para uma quantidade menor ou volte mais tarde!", BizzInfo[ fID ][ bProd ]);
        return SendClientMessage(playerid, -1, string);  }
        if(CaminhaoProdEmpresas[VeiculoID] < Quantidade) {
        format(string, sizeof(string), "ERRO: Seu caminhão não possui essa quantidade de produtos. Produtos Disponíveis: %d!", CaminhaoProdEmpresas[VeiculoID]);
        return SendClientMessage(playerid, -1, string);  }

        GranaReceb = Quantidade*200;
        if(BizzInfo[ fID ][ bTill ] < GranaReceb){
        format(string, sizeof(string), "ERRO: Esta Empresa não possui fundos suficientes(R$ %d) para comprar esta quantidade de Produtos(R$ %d)!", BizzInfo[ fID ][ bTill ],GranaReceb);
        return SendClientMessage(playerid, -1, string);  }

        CaminhaoProdEmpresas[VeiculoID] -= Quantidade;
        BizzInfo[ fID ][ bProd ]  += Quantidade;
        BizzInfo[ fID ][ bTill ] -= GranaReceb;
        GivePlayerMoney(playerid, GranaReceb);
        a3d();

        format(string, sizeof(string), "Você vendeu %d produtos por R$ %d, para a Empresa: %s!", Quantidade,GranaReceb,BizzInfo[ fID ][bMessage]);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
    }
    else if(tipo==3)
    {
        QuantMax = SBizzInfo[ fID ][ sbProd ]+Quantidade;
        if(QuantMax > SBizzInfo[ fID ][ sbMaxProd ]) {
        format(string, sizeof(string), "ERRO: Quandidade Max. de Produtos para este Estabelecimento excedida: %d!", SBizzInfo[ fID ][ sbMaxProd ]);
        SendClientMessage(playerid, -1, string);
        format(string, sizeof(string), "** Estabelecimento com %d Produtos ja em estoque, Modifique para uma quantidade menor ou volte mais tarde!", SBizzInfo[ fID ][ sbProd ]);
        return SendClientMessage(playerid, -1, string);  }
        if(CaminhaoProdEmpresas[VeiculoID] < Quantidade) {
        format(string, sizeof(string), "ERRO: Seu caminhão não possui essa quantidade de produtos. Produtos Disponíveis: %d!", CaminhaoProdEmpresas[VeiculoID]);
        return SendClientMessage(playerid, -1, string);  }

        GranaReceb = Quantidade*200;
        if(SBizzInfo[ fID ][ sbTill ] < GranaReceb){
        format(string, sizeof(string), "ERRO: Esta Empresa não possui fundos suficientes(R$ %d) para comprar esta quantidade de Produtos(R$ %d)!", SBizzInfo[ fID ][ sbTill ],GranaReceb);
        return SendClientMessage(playerid, -1, string);  }

        CaminhaoProdEmpresas[VeiculoID] -= Quantidade;
        SBizzInfo[ fID ][ sbProd ]  += Quantidade;
        SBizzInfo[ fID ][ sbTill ] -= GranaReceb;
        GivePlayerMoney(playerid, GranaReceb);
        a3d();

        format(string, sizeof(string), "Você vendeu %d produtos por R$ %d, para a Empresa: %s!", Quantidade,GranaReceb,SBizzInfo[ fID ][sbMessage]);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
    }
    return 1;
}
forward RemoverObjetos(playerid);
public RemoverObjetos(playerid)
{
    //remover hitmans
    RemoveBuildingForPlayer(playerid, 3295, 1099.1172, -358.4766, 77.6172, 0.25);
    RemoveBuildingForPlayer(playerid, 3376, 1070.4766, -355.1641, 77.3359, 0.25);
    RemoveBuildingForPlayer(playerid, 785, 1150.3516, -343.1094, 58.4141, 0.25);
    RemoveBuildingForPlayer(playerid, 3276, 1012.2891, -282.5391, 73.8438, 0.25);
    RemoveBuildingForPlayer(playerid, 3276, 1023.4219, -279.9063, 73.8438, 0.25);
    RemoveBuildingForPlayer(playerid, 1503, 1019.3203, -282.7891, 73.2031, 0.25);
    RemoveBuildingForPlayer(playerid, 3276, 1047.3125, -280.3359, 73.8438, 0.25);
    RemoveBuildingForPlayer(playerid, 3276, 1059.2266, -281.2656, 73.8438, 0.25);
    RemoveBuildingForPlayer(playerid, 3276, 1082.9922, -283.6797, 73.8438, 0.25);
    RemoveBuildingForPlayer(playerid, 3276, 1042.9688, -374.4766, 72.8906, 0.25);
    RemoveBuildingForPlayer(playerid, 3276, 1007.6719, -361.6250, 73.8438, 0.25);
    RemoveBuildingForPlayer(playerid, 3276, 1007.6250, -349.8984, 73.8438, 0.25);
    RemoveBuildingForPlayer(playerid, 3276, 1007.5234, -326.4453, 73.8438, 0.25);
    RemoveBuildingForPlayer(playerid, 3276, 1007.4766, -314.7188, 73.8438, 0.25);
    RemoveBuildingForPlayer(playerid, 3276, 1007.4297, -302.9922, 73.8438, 0.25);
    RemoveBuildingForPlayer(playerid, 3276, 1007.3828, -291.2578, 73.8438, 0.25);
    RemoveBuildingForPlayer(playerid, 3276, 1083.6641, -368.5313, 73.8438, 0.25);
    RemoveBuildingForPlayer(playerid, 3276, 1071.9375, -368.5156, 73.8438, 0.25);
    RemoveBuildingForPlayer(playerid, 3276, 1060.2109, -368.4922, 73.8438, 0.25);
    RemoveBuildingForPlayer(playerid, 3375, 1070.4766, -355.1641, 77.3359, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 1092.7109, -327.0625, 73.5703, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 1095.3984, -329.8203, 73.5078, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 1092.7969, -321.4844, 73.5703, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 1092.9063, -315.9688, 73.5703, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 1093.1953, -299.2969, 73.5703, 0.25);
    RemoveBuildingForPlayer(playerid, 13206, 1072.9531, -289.1797, 72.7344, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 1093.3047, -293.7813, 73.5703, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 1096.1563, -291.2656, 73.5703, 0.25);
    RemoveBuildingForPlayer(playerid, 656, 1096.6250, -294.4141, 72.9375, 0.25);
    RemoveBuildingForPlayer(playerid, 3286, 1099.1172, -358.4766, 77.6172, 0.25);
    RemoveBuildingForPlayer(playerid, 3276, 1107.1172, -368.5703, 73.8438, 0.25);
    RemoveBuildingForPlayer(playerid, 3253, 1106.6406, -319.8750, 73.7422, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 1106.4922, -330.0234, 73.5078, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 1100.9141, -329.9297, 73.5078, 0.25);
    RemoveBuildingForPlayer(playerid, 700, 1106.5469, -328.1641, 73.1797, 0.25);
    RemoveBuildingForPlayer(playerid, 1308, 1101.2891, -329.5313, 72.8984, 0.25);
    RemoveBuildingForPlayer(playerid, 3250, 1110.2422, -298.9453, 73.0391, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 1101.6719, -291.3750, 73.5703, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 1107.2656, -291.4609, 73.5703, 0.25);
    RemoveBuildingForPlayer(playerid, 672, 1097.4688, -314.2109, 73.6641, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 1117.5781, -330.2109, 73.5078, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 1112.0000, -330.1250, 73.5078, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 1112.7813, -291.5703, 73.5703, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 1118.3750, -291.6641, 73.5703, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 1120.4297, -327.7656, 73.5703, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 1121.0234, -294.5234, 73.5703, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 1120.6250, -316.7344, 73.5703, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 1120.9297, -300.1172, 73.5703, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 1120.8203, -305.6328, 73.5703, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 1120.7344, -311.2188, 73.5703, 0.25);
    RemoveBuildingForPlayer(playerid, 1408, 1120.5391, -322.2500, 73.5703, 0.25);
    //========sprunk do hotel
    RemoveBuildingForPlayer(playerid, 1775, 2225.2031, -1153.4219, 1025.9063, 0.25);
    //========fim da sprunk
    RemoveBuildingForPlayer(playerid, 956, 2153.2344, -1016.1484, 62.2344, 0.25);
    //================================= Empresa de Produtos
    RemoveBuildingForPlayer(playerid, 3744, 2193.2578, -2286.2891, 14.8125, 0.25);
    RemoveBuildingForPlayer(playerid, 3744, 2183.1719, -2237.2734, 14.8125, 0.25);
    RemoveBuildingForPlayer(playerid, 3744, 2073.8281, -2091.2344, 15.1328, 0.25);
    RemoveBuildingForPlayer(playerid, 3744, 2051.0547, -2089.6094, 15.1328, 0.25);
    RemoveBuildingForPlayer(playerid, 3744, 2026.2500, -2093.3906, 15.1328, 0.25);
    RemoveBuildingForPlayer(playerid, 5305, 2198.8516, -2213.9219, 14.8828, 0.25);
    RemoveBuildingForPlayer(playerid, 3747, 2234.3906, -2244.8281, 14.9375, 0.25);
    RemoveBuildingForPlayer(playerid, 3747, 2226.9688, -2252.1406, 14.9375, 0.25);
    RemoveBuildingForPlayer(playerid, 3747, 2219.4219, -2259.5234, 14.8828, 0.25);
    RemoveBuildingForPlayer(playerid, 3747, 2212.0938, -2267.0703, 14.9375, 0.25);
    RemoveBuildingForPlayer(playerid, 3747, 2204.6328, -2274.4141, 14.9375, 0.25);
    RemoveBuildingForPlayer(playerid, 3578, 2165.0703, -2288.9688, 13.2578, 0.25);
    RemoveBuildingForPlayer(playerid, 3574, 2193.2578, -2286.2891, 14.8125, 0.25);
    RemoveBuildingForPlayer(playerid, 3569, 2204.6328, -2274.4141, 14.9375, 0.25);
    RemoveBuildingForPlayer(playerid, 3569, 2212.0938, -2267.0703, 14.9375, 0.25);
    RemoveBuildingForPlayer(playerid, 3569, 2219.4219, -2259.5234, 14.8828, 0.25);
    RemoveBuildingForPlayer(playerid, 3578, 2194.4766, -2242.8750, 13.2578, 0.25);
    RemoveBuildingForPlayer(playerid, 3569, 2226.9688, -2252.1406, 14.9375, 0.25);
    RemoveBuildingForPlayer(playerid, 3569, 2234.3906, -2244.8281, 14.9375, 0.25);
    RemoveBuildingForPlayer(playerid, 3574, 2183.1719, -2237.2734, 14.8125, 0.25);
    RemoveBuildingForPlayer(playerid, 3578, 2235.1641, -2231.8516, 13.2578, 0.25);
    RemoveBuildingForPlayer(playerid, 5244, 2198.8516, -2213.9219, 14.8828, 0.25);
    RemoveBuildingForPlayer(playerid, 3578, 2026.8359, -2099.4531, 13.3203, 0.25);
    RemoveBuildingForPlayer(playerid, 3574, 2026.2500, -2093.3984, 15.0703, 0.25);
    RemoveBuildingForPlayer(playerid, 3574, 2073.8359, -2091.2188, 15.0703, 0.25);
    RemoveBuildingForPlayer(playerid, 3574, 2051.0469, -2089.6016, 15.0703, 0.25);
    //==================================
    RemoveBuildingForPlayer(playerid, 3244, 2535.0938, -2131.8750, 12.9922, 0.25);
    RemoveBuildingForPlayer(playerid, 3244, 2532.0313, -2074.6250, 12.9922, 0.25);
    RemoveBuildingForPlayer(playerid, 3289, 2484.4141, -2141.0078, 12.1875, 0.25);
    RemoveBuildingForPlayer(playerid, 3289, 2496.0625, -2141.0078, 12.1875, 0.25);
    RemoveBuildingForPlayer(playerid, 3290, 2503.1250, -2073.3750, 12.4297, 0.25);
    RemoveBuildingForPlayer(playerid, 3290, 2515.4219, -2073.3750, 12.4063, 0.25);
    RemoveBuildingForPlayer(playerid, 3288, 2432.7266, -2133.0234, 12.4531, 0.25);
    RemoveBuildingForPlayer(playerid, 3686, 2448.1328, -2075.6328, 16.0469, 0.25);
    RemoveBuildingForPlayer(playerid, 3745, 2475.1016, -2073.4766, 17.8203, 0.25);
    RemoveBuildingForPlayer(playerid, 3745, 2482.0234, -2073.4766, 17.8203, 0.25);
    RemoveBuildingForPlayer(playerid, 3745, 2489.1016, -2073.4766, 17.8203, 0.25);
    RemoveBuildingForPlayer(playerid, 3745, 2496.0938, -2073.4766, 17.8203, 0.25);
    RemoveBuildingForPlayer(playerid, 3290, 2452.9609, -2129.0156, 25.2734, 0.25);

    RemoveBuildingForPlayer(playerid, 3756, 2484.2344, -2118.5547, 17.7031, 0.25);
    RemoveBuildingForPlayer(playerid, 3755, 2484.2344, -2118.5547, 17.7031, 0.25);
    RemoveBuildingForPlayer(playerid, 1412, 2400.0391, -2145.7109, 13.7500, 0.25);
    RemoveBuildingForPlayer(playerid, 1412, 2405.3125, -2145.6250, 13.7500, 0.25);
    RemoveBuildingForPlayer(playerid, 1412, 2410.5859, -2145.5313, 13.7500, 0.25);
    RemoveBuildingForPlayer(playerid, 1412, 2415.8672, -2145.4375, 13.7500, 0.25);
    RemoveBuildingForPlayer(playerid, 5294, 2348.8750, -2119.9219, 24.8984, 0.25);
    RemoveBuildingForPlayer(playerid, 5295, 2413.0547, -2106.4219, 23.0547, 0.25);
    RemoveBuildingForPlayer(playerid, 5367, 2413.0547, -2106.4219, 23.0547, 0.25);
    RemoveBuildingForPlayer(playerid, 1308, 2403.2422, -2085.3281, 11.5156, 0.25);
    RemoveBuildingForPlayer(playerid, 5292, 2390.1719, -2033.8203, 23.8281, 0.25);
    RemoveBuildingForPlayer(playerid, 1412, 2421.1406, -2145.3438, 13.7500, 0.25);
    RemoveBuildingForPlayer(playerid, 3257, 2432.7266, -2133.0234, 12.4531, 0.25);
    RemoveBuildingForPlayer(playerid, 3258, 2484.4141, -2141.0078, 12.1875, 0.25);
    RemoveBuildingForPlayer(playerid, 3258, 2496.0625, -2141.0078, 12.1875, 0.25);
    RemoveBuildingForPlayer(playerid, 3256, 2452.9609, -2129.0156, 25.2734, 0.25);
    RemoveBuildingForPlayer(playerid, 1308, 2423.4063, -2109.1797, 11.5156, 0.25);
    RemoveBuildingForPlayer(playerid, 5306, 2582.4297, -2105.4766, 14.2500, 0.25);
    RemoveBuildingForPlayer(playerid, 3567, 2446.8281, -2075.8438, 13.2578, 0.25);
    RemoveBuildingForPlayer(playerid, 3567, 2438.3594, -2075.8438, 13.2578, 0.25);
    RemoveBuildingForPlayer(playerid, 3627, 2448.1328, -2075.6328, 16.0469, 0.25);
    RemoveBuildingForPlayer(playerid, 1308, 2428.3906, -2066.6328, 12.6797, 0.25);
    RemoveBuildingForPlayer(playerid, 3643, 2489.1016, -2073.4766, 17.8203, 0.25);
    RemoveBuildingForPlayer(playerid, 3643, 2482.0234, -2073.4766, 17.8203, 0.25);
    RemoveBuildingForPlayer(playerid, 3643, 2475.1016, -2073.4766, 17.8203, 0.25);
    RemoveBuildingForPlayer(playerid, 3643, 2496.0938, -2073.4766, 17.8203, 0.25);
    RemoveBuildingForPlayer(playerid, 3256, 2515.4219, -2073.3750, 12.4063, 0.25);
    RemoveBuildingForPlayer(playerid, 3256, 2503.1250, -2073.3750, 12.4297, 0.25);
    //Policia Civil
    RemoveBuildingForPlayer(playerid, 729, 931.8594, -1703.9766, 11.3203, 0.25);
    RemoveBuildingForPlayer(playerid, 726, 958.0391, -1678.0547, 10.7422, 0.25);
    RemoveBuildingForPlayer(playerid, 729, 970.0234, -1718.0000, 11.3203, 0.25);
    RemoveBuildingForPlayer(playerid, 760, 930.0859, -1704.4766, 12.2031, 0.25);
    RemoveBuildingForPlayer(playerid, 748, 931.2734, -1705.6250, 12.3906, 0.25);
    RemoveBuildingForPlayer(playerid, 748, 931.2734, -1702.5313, 12.3906, 0.25);
    RemoveBuildingForPlayer(playerid, 1231, 932.4688, -1709.7266, 15.2188, 0.25);
    RemoveBuildingForPlayer(playerid, 1231, 933.2578, -1731.4844, 15.2188, 0.25);
    RemoveBuildingForPlayer(playerid, 1231, 937.2656, -1696.8359, 15.2188, 0.25);
    RemoveBuildingForPlayer(playerid, 1231, 960.1563, -1764.6953, 15.2188, 0.25);
    RemoveBuildingForPlayer(playerid, 748, 976.5625, -1771.3516, 13.1719, 0.25);
    RemoveBuildingForPlayer(playerid, 634, 972.3359, -1675.5391, 11.3828, 0.25);
    RemoveBuildingForPlayer(playerid, 634, 975.7266, -1705.5859, 11.9219, 0.25);
    RemoveBuildingForPlayer(playerid, 634, 975.6094, -1689.2656, 11.3828, 0.25);
    RemoveBuildingForPlayer(playerid, 615, 968.2266, -1665.6875, 12.2109, 0.25);
    RemoveBuildingForPlayer(playerid, 759, 979.5469, -1665.4766, 12.3672, 0.25);
    RemoveBuildingForPlayer(playerid, 634, 975.6094, -1662.2109, 11.3828, 0.25);
    RemoveBuildingForPlayer(playerid, 727, 931.7891, -991.1719, 37.0234, 0.25);
    RemoveBuildingForPlayer(playerid, 732, 882.6172, -1008.9297, 36.5234, 0.25);
    RemoveBuildingForPlayer(playerid, 1307, 937.9375, -986.5391, 37.0313, 0.25);
    //roda
    RemoveBuildingForPlayer(playerid, 6463, 389.7734, -2028.4688, 19.8047, 0.5);
    RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2035.3828, 29.9531, 50);
    RemoveBuildingForPlayer(playerid, 6298, 389.7734, -2028.4688, 19.8047, 0.5);
    RemoveBuildingForPlayer(playerid, 6461, 389.7734, -2028.5000, 20.1094, 0.5);
    RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2028.5000, 32.2266, 50);

        //org Snake des
    RemoveBuildingForPlayer(playerid, 726, 1013.0938, -1078.1719, 26.0859, 0.25);
    RemoveBuildingForPlayer(playerid, 732, 992.1094, -1085.2813, 24.0469, 0.25);
    RemoveBuildingForPlayer(playerid, 732, 1050.5078, -1100.6328, 23.3438, 0.25);

    //HQ HunTerS
    RemoveBuildingForPlayer(playerid, 3645, 2069.6172, -1556.7031, 15.0625, 0.25);
    RemoveBuildingForPlayer(playerid, 3645, 2070.7578, -1586.0156, 15.0625, 0.25);
    RemoveBuildingForPlayer(playerid, 5633, 2089.3594, -1643.9297, 18.2188, 0.25);
    RemoveBuildingForPlayer(playerid, 1524, 2074.1797, -1579.1484, 14.0313, 0.25);
    RemoveBuildingForPlayer(playerid, 1412, 2058.0547, -1602.2266, 13.7656, 0.25);
    RemoveBuildingForPlayer(playerid, 1308, 2055.3594, -1602.2344, 12.7813, 0.25);
    RemoveBuildingForPlayer(playerid, 1412, 2055.2656, -1599.5000, 13.7656, 0.25);
    RemoveBuildingForPlayer(playerid, 1412, 2055.2656, -1594.2266, 13.7656, 0.25);
    RemoveBuildingForPlayer(playerid, 1412, 2063.3281, -1602.2266, 13.7656, 0.25);
    RemoveBuildingForPlayer(playerid, 1283, 2083.8047, -1611.7500, 15.6094, 0.25);
    RemoveBuildingForPlayer(playerid, 1283, 2103.8359, -1612.7266, 15.6016, 0.25);
    RemoveBuildingForPlayer(playerid, 1283, 2092.9922, -1604.1563, 15.6016, 0.25);
    RemoveBuildingForPlayer(playerid, 1412, 2083.7656, -1602.2266, 13.7656, 0.25);
    RemoveBuildingForPlayer(playerid, 1412, 2078.4922, -1602.2266, 13.7656, 0.25);
    RemoveBuildingForPlayer(playerid, 1412, 2086.4609, -1599.5938, 13.7656, 0.25);
    RemoveBuildingForPlayer(playerid, 1412, 2086.4609, -1594.3203, 13.7656, 0.25);
    RemoveBuildingForPlayer(playerid, 1308, 2086.5313, -1591.5938, 12.7813, 0.25);
    RemoveBuildingForPlayer(playerid, 3644, 2070.7578, -1586.0156, 15.0625, 0.25);
    RemoveBuildingForPlayer(playerid, 3644, 2069.6172, -1556.7031, 15.0625, 0.25);
    //praca
/*  RemoveBuildingForPlayer(playerid, 4057, 1479.5547, -1693.1406, 19.5781, 0.25);
    RemoveBuildingForPlayer(playerid, 4210, 1479.5625, -1631.4531, 12.0781, 0.25);
    RemoveBuildingForPlayer(playerid, 713, 1457.9375, -1620.6953, 13.4531, 0.25);
    RemoveBuildingForPlayer(playerid, 713, 1496.8672, -1707.8203, 13.4063, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1713.5078, 13.4531, 0.25);
    RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1716.7031, 15.6250, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1713.7031, 13.4531, 0.25);
    RemoveBuildingForPlayer(playerid, 1289, 1504.7500, -1711.8828, 13.5938, 0.25);
    RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1704.7656, 13.6953, 0.25);
    RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1692.2344, 13.6953, 0.25);
    RemoveBuildingForPlayer(playerid, 712, 1445.8125, -1650.0234, 22.2578, 0.25);
    RemoveBuildingForPlayer(playerid, 673, 1457.7266, -1710.0625, 12.3984, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1461.6563, -1707.6875, 11.8359, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1704.6406, 13.4531, 0.25);
    RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1701.5703, 13.7266, 0.25);
    RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1702.5313, 15.6250, 0.25);
    RemoveBuildingForPlayer(playerid, 673, 1457.5547, -1697.2891, 12.3984, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1694.0469, 13.4531, 0.25);
    RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1692.3906, 15.6328, 0.25);
    RemoveBuildingForPlayer(playerid, 4186, 1479.5547, -1693.1406, 19.5781, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1461.1250, -1687.5625, 11.8359, 0.25);
    RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1690.6484, 13.7266, 0.25);
    RemoveBuildingForPlayer(playerid, 641, 1458.6172, -1684.1328, 11.1016, 0.25);
    RemoveBuildingForPlayer(playerid, 625, 1457.2734, -1666.2969, 13.6953, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1682.7188, 13.4531, 0.25);
    RemoveBuildingForPlayer(playerid, 712, 1471.4063, -1666.1797, 22.2578, 0.25);
    RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1682.3125, 15.6328, 0.25);
    RemoveBuildingForPlayer(playerid, 625, 1458.2578, -1659.2578, 13.6953, 0.25);
    RemoveBuildingForPlayer(playerid, 712, 1449.8516, -1655.9375, 22.2578, 0.25);
    RemoveBuildingForPlayer(playerid, 1231, 1477.9375, -1652.7266, 15.6328, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 1479.6094, -1653.2500, 13.4531, 0.25);
    RemoveBuildingForPlayer(playerid, 625, 1457.3516, -1650.5703, 13.6953, 0.25);
    RemoveBuildingForPlayer(playerid, 625, 1454.4219, -1642.4922, 13.6953, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 1467.8516, -1646.5938, 13.4531, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 1472.8984, -1651.5078, 13.4531, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 1465.9375, -1639.8203, 13.4531, 0.25);
    RemoveBuildingForPlayer(playerid, 1231, 1466.4688, -1637.9609, 15.6328, 0.25);
    RemoveBuildingForPlayer(playerid, 625, 1449.5938, -1635.0469, 13.6953, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 1467.7109, -1632.8906, 13.4531, 0.25);
    RemoveBuildingForPlayer(playerid, 1232, 1465.8906, -1629.9766, 15.5313, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 1472.6641, -1627.8828, 13.4531, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 1479.4688, -1626.0234, 13.4531, 0.25);
    RemoveBuildingForPlayer(playerid, 3985, 1479.5625, -1631.4531, 12.0781, 0.25);
    RemoveBuildingForPlayer(playerid, 4206, 1479.5547, -1639.6094, 13.6484, 0.25);
    RemoveBuildingForPlayer(playerid, 1232, 1465.8359, -1608.3750, 15.3750, 0.25);
    RemoveBuildingForPlayer(playerid, 1226, 1451.3359, -1596.7031, 16.4219, 0.25);
    RemoveBuildingForPlayer(playerid, 1226, 1471.3516, -1596.7031, 16.4219, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1704.5938, 13.4531, 0.25);
    RemoveBuildingForPlayer(playerid, 700, 1494.2109, -1694.4375, 13.7266, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1693.7344, 13.4531, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1496.9766, -1686.8516, 11.8359, 0.25);
    RemoveBuildingForPlayer(playerid, 641, 1494.1406, -1689.2344, 11.1016, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1682.6719, 13.4531, 0.25);
    RemoveBuildingForPlayer(playerid, 712, 1480.6094, -1666.1797, 22.2578, 0.25);
    RemoveBuildingForPlayer(playerid, 712, 1488.2266, -1666.1797, 22.2578, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 1486.4063, -1651.3906, 13.4531, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 1491.3672, -1646.3828, 13.4531, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 1493.1328, -1639.4531, 13.4531, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 1486.1797, -1627.7656, 13.4531, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 1491.2188, -1632.6797, 13.4531, 0.25);
    RemoveBuildingForPlayer(playerid, 1232, 1494.4141, -1629.9766, 15.5313, 0.25);
    RemoveBuildingForPlayer(playerid, 1232, 1494.3594, -1608.3750, 15.3750, 0.25);
    RemoveBuildingForPlayer(playerid, 1288, 1504.7500, -1705.4063, 13.5938, 0.25);
    RemoveBuildingForPlayer(playerid, 1287, 1504.7500, -1704.4688, 13.5938, 0.25);
    RemoveBuildingForPlayer(playerid, 1286, 1504.7500, -1695.0547, 13.5938, 0.25);
    RemoveBuildingForPlayer(playerid, 1285, 1504.7500, -1694.0391, 13.5938, 0.25);
    RemoveBuildingForPlayer(playerid, 673, 1498.9609, -1684.6094, 12.3984, 0.25);
    RemoveBuildingForPlayer(playerid, 625, 1504.1641, -1662.0156, 13.6953, 0.25);
    RemoveBuildingForPlayer(playerid, 625, 1504.7188, -1670.9219, 13.6953, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1503.1875, -1621.1250, 11.8359, 0.25);
    RemoveBuildingForPlayer(playerid, 673, 1501.2813, -1624.5781, 12.3984, 0.25);
    RemoveBuildingForPlayer(playerid, 673, 1498.3594, -1616.9688, 12.3984, 0.25);
    RemoveBuildingForPlayer(playerid, 712, 1508.4453, -1668.7422, 22.2578, 0.25);
    RemoveBuildingForPlayer(playerid, 625, 1505.6953, -1654.8359, 13.6953, 0.25);
    RemoveBuildingForPlayer(playerid, 625, 1508.5156, -1647.8594, 13.6953, 0.25);
    RemoveBuildingForPlayer(playerid, 625, 1513.2734, -1642.4922, 13.6953, 0.25);
    RemoveBuildingForPlayer(playerid, 1258, 1510.8906, -1607.3125, 13.6953, 0.25);
*/
//>-=-=-=-=-==-=-=-=-=-=-=-=-= outros =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    RemoveBuildingForPlayer(playerid, 1311, 1823.4219, -1647.2734, 16.6719, 0.25);
    RemoveBuildingForPlayer(playerid, 1226, 1817.5156, -1623.8359, 16.3594, 0.25);
    RemoveBuildingForPlayer(playerid, 4024, 1479.8672, -1790.3984, 56.0234, 0.25);
    RemoveBuildingForPlayer(playerid, 4044, 1481.1875, -1785.0703, 22.3828, 0.25);
    RemoveBuildingForPlayer(playerid, 4002, 1479.8672, -1790.3984, 56.0234, 0.25);
    RemoveBuildingForPlayer(playerid, 3980, 1481.1875, -1785.0703, 22.3828, 0.25);
    RemoveBuildingForPlayer(playerid, 4003, 1481.0781, -1747.0313, 33.5234, 0.1);
    RemoveBuildingForPlayer(playerid, 1527, 1448.2344, -1755.8984, 14.5234, 0.25);
    //postes
    RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1721.6328, 16.4219, 0.25);
    RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1705.2734, 16.4219, 0.25);
    RemoveBuildingForPlayer(playerid, 1229, 1524.2188, -1693.9688, 14.1094, 0.25);
    RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1688.0859, 16.4219, 0.25);
    RemoveBuildingForPlayer(playerid, 1229, 1524.2188, -1673.7109, 14.1094, 0.25);
    RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1668.0781, 16.4219, 0.25);
    RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1647.6406, 16.4219, 0.25);
    RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1621.9609, 16.4219, 0.25);
    RemoveBuildingForPlayer(playerid, 1226, 1525.3828, -1611.1563, 16.4219, 0.25);
// HQ Mafia Russa
    RemoveBuildingForPlayer(playerid, 3489, 1609.3359, 1671.6953, 16.4375, 0.25);
    RemoveBuildingForPlayer(playerid, 3490, 1609.3359, 1671.6953, 16.4375, 0.25);
    RemoveBuildingForPlayer(playerid, 3489, 1677.2969, 1671.6953, 16.4375, 0.25);
    RemoveBuildingForPlayer(playerid, 3490, 1677.2969, 1671.6953, 16.4375, 0.25);
    RemoveBuildingForPlayer(playerid, 8338, 1641.1328, 1629.4063, 13.8203, 0.25);
    RemoveBuildingForPlayer(playerid, 8340, 1568.0000, 1676.1953, 13.8203, 0.25);
    RemoveBuildingForPlayer(playerid, 8341, 1568.0000, 1676.1953, 13.8203, 0.25);
    RemoveBuildingForPlayer(playerid, 8339, 1641.1328, 1629.4063, 13.8203, 0.25);
    // hq caminhoneiros
    RemoveBuildingForPlayer(playerid, 1438, -88.1094, -1598.7188, 1.5000, 0.25);
    RemoveBuildingForPlayer(playerid, 1370, -86.5703, -1595.1406, 2.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 3173, -93.0938, -1593.5234, 1.5547, 0.25);
    RemoveBuildingForPlayer(playerid, 1462, -93.6797, -1588.0781, 1.5078, 0.25);
    RemoveBuildingForPlayer(playerid, 3174, -75.1719, -1596.3047, 1.6797, 0.25);
    RemoveBuildingForPlayer(playerid, 1438, -79.2578, -1593.4688, 1.5000, 0.25);
    RemoveBuildingForPlayer(playerid, 1447, -74.8203, -1607.2578, 3.4609, 0.25);
    RemoveBuildingForPlayer(playerid, 1370, -72.4141, -1596.7734, 2.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1370, -74.1875, -1583.9922, 2.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 3175, -101.8203, -1577.6875, 1.4063, 0.25);
    RemoveBuildingForPlayer(playerid, 1457, -91.0156, -1576.6250, 3.1953, 0.25);
    RemoveBuildingForPlayer(playerid, 1370, -100.8203, -1580.4219, 2.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1438, -93.2109, -1569.4844, 1.5000, 0.25);
    RemoveBuildingForPlayer(playerid, 3175, -77.9375, -1581.3125, 1.4063, 0.25);
    RemoveBuildingForPlayer(playerid, 1472, -75.5859, -1581.0703, 2.0234, 0.25);
    RemoveBuildingForPlayer(playerid, 727, -73.8203, -1569.1719, 1.3516, 0.25);
    RemoveBuildingForPlayer(playerid, 3173, -90.6406, -1562.9375, 1.5547, 0.25);
    RemoveBuildingForPlayer(playerid, 1438, -77.0625, -1542.6016, 1.6172, 0.25);
    RemoveBuildingForPlayer(playerid, 1412, -70.4141, -1604.3750, 3.4609, 0.25);
    RemoveBuildingForPlayer(playerid, 1447, -66.2891, -1601.2266, 3.2109, 0.25);
    RemoveBuildingForPlayer(playerid, 1457, -71.0000, -1574.0859, 3.1953, 0.25);
    RemoveBuildingForPlayer(playerid, 3175, -64.3828, -1572.2109, 1.4063, 0.25);
    RemoveBuildingForPlayer(playerid, 1438, -62.2734, -1569.2891, 1.5000, 0.25);
    RemoveBuildingForPlayer(playerid, 1370, -61.6641, -1573.4609, 2.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 1413, -53.8125, -1585.8594, 3.0859, 0.25);
    RemoveBuildingForPlayer(playerid, 1438, -56.0625, -1575.6563, 1.5000, 0.25);
    RemoveBuildingForPlayer(playerid, 1447, -50.8281, -1581.7656, 3.1641, 0.25);
    RemoveBuildingForPlayer(playerid, 1412, -47.5547, -1577.6484, 3.1641, 0.25);
    RemoveBuildingForPlayer(playerid, 1412, -44.5625, -1573.3672, 3.1641, 0.25);
    RemoveBuildingForPlayer(playerid, 1370, -64.0000, -1550.2578, 2.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 3175, -55.2813, -1557.4531, 1.4063, 0.25);
    RemoveBuildingForPlayer(playerid, 1370, -56.1563, -1560.4609, 2.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 727, -49.3984, -1560.0078, 1.4609, 0.25);
    RemoveBuildingForPlayer(playerid, 3174, -44.2891, -1561.3125, 1.6797, 0.25);
    RemoveBuildingForPlayer(playerid, 1370, -43.7422, -1563.6875, 2.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 3173, -67.2344, -1544.2188, 1.5547, 0.25);

    SetPlayerMapIcon(playerid, 34,943.0517,-1743.3169,13.5546, 30, 0xE6E6E6E6);// S.S.P
    SetPlayerMapIcon(playerid, 1,-1956.6346,293.0974,35.4688, 55, 0xE6E6E6E6);//wang cars sf
    SetPlayerMapIcon(playerid, 2,1552.6703,-1675.5068,16.1953, 30, 0xE6E6E6E6);//dp ls
    SetPlayerMapIcon(playerid, 3,2802.2051,-1180.1276,25.5363, 60, 0xE6E6E6E6);//vagos
    SetPlayerMapIcon(playerid, 4,2516.1411,-1675.4065,13.9113, 62, 0xE6E6E6E6);//grove
    SetPlayerMapIcon(playerid, 5,1687.0999,-2120.1000,13.1999, 58, 0xE6E6E6E6);//aztecas
    SetPlayerMapIcon(playerid, 6,1105.7688,-1206.7142,17.8047, 59, 0xE6E6E6E6);//ballas
    SetPlayerMapIcon(playerid, 7,11484.3788,-1777.2107,13.6554, 56, 0xE6E6E6E6);//Prefeitura
    SetPlayerMapIcon(playerid, 9,2243.6750,-1669.8136,21.0313, 45, 0xE6E6E6E6);//Binco
    SetPlayerMapIcon(playerid, 10,461.3484,-1500.9084,31.0592, 45, 0xE6E6E6E6);//ZIP
    SetPlayerMapIcon(playerid, 11,1461.8320,-1010.3407,26.8438, 52, 0xE6E6E6E6);//Banco
    SetPlayerMapIcon(playerid, 12,1070.3787,-1873.8467,13.5469, 18, 0xE6E6E6E6);//Loja de Armas 2
    SetPlayerMapIcon(playerid, 16,1415.8468,-1693.0602,13.5469, 16, 0xE6E6E6E6); // - centro de licencas
    SetPlayerMapIcon(playerid, 19,1310.1265,-1367.8122,13.5408, 32, 0xE6E6E6E6); // - paintball
    SetPlayerMapIcon(playerid, 20,2350.0000,-1411.8000,23.9923, 32, 0xE6E6E6E6); // - UpCasa
    SetPlayerMapIcon(playerid, 21,1205.9715,-1459.6737,13.3859, 32, 0xE6E6E6E6); // - 24-7's
    SetPlayerMapIcon(playerid, 24,334.0479,-1507.9438,36.0391, 30, 0xE6E6E6E6); //dp ROTA
    SetPlayerMapIcon(playerid, 25,918.8992,-1252.3286,16.2109, 30, 0xE6E6E6E6); //dp pc
    SetPlayerMapIcon(playerid, 26,1791.212036,-1164.631713,23.828100, 18 , 0xE6E6E6E6);//Loja de Armas 1
    SetPlayerMapIcon(playerid, 25,913.68,-1004.56,37.98, 30 , 0xE6E6E6E6);//cp PFII
    SetPlayerMapIcon(playerid, 25,-2455.0996,503.7621,30.0775, 30 , 0xE6E6E6E6);//cp PFII
    SetPlayerMapIcon(playerid, 29,2644.5134,-2035.1990,14.8270, 27 , 0xE6E6E6E6);//TUNAR CARROS GANGS
    SetPlayerMapIcon(playerid, 31,2104.2051,-1806.5345,13.5547, 29 , 0xE6E6E6E6);//PIZZARIA LS
    SetPlayerMapIcon(playerid, 33,550.7012,-1278.5721,17.2482, 55 , 0xE6E6E6E6);//Carros Aluguel 1
    SetPlayerMapIcon(playerid, 35,1172.6062,-1323.6276,15.4031, 22 , 0xE6E6E6E6);//Hospital
    SetPlayerMapIcon(playerid, 36,-2396.6487,-2194.7942,32.9527, 53 , 0xE6E6E6E6); // PISTA DE RALLY
    SetPlayerMapIcon(playerid, 37,-1529.5208,476.5718,7.1875, 30 , 0xE6E6E6E6); // HQ Exército
    SetPlayerMapIcon(playerid, 38,975.4691,-1335.9618,13.5319, 49 , 0xE6E6E6E6); // BAR PAWNO
    SetPlayerMapIcon(playerid, 8,1498.4795,-1582.9222,13.5469, 32 , 0xE6E6E6E6); //restaurante
    SetPlayerMapIcon(playerid, 13,1206.6914,-1751.1108,13.5938, 32 , 0xE6E6E6E6); //aluguel de carros
    SetPlayerMapIcon(playerid, 14,1327.8535,-1558.0070,13.5469, 32 , 0xE6E6E6E6);//phone company
    SetPlayerMapIcon(playerid, 15,-33.7243,-1127.6255,1.0781, 32 , 0xE6E6E6E6);//gas company
    SetPlayerMapIcon(playerid, 17,-2521.0059,-623.3312,132.7690, 32 , 0xE6E6E6E6);//eletriGamer company
    SetPlayerMapIcon(playerid, 18,1636.6891,-1521.8157,13.5987, 32 , 0xE6E6E6E6);//pay'n spray
    SetPlayerMapIcon(playerid, 22,844.6560,-1045.5557,25.4301, 32 , 0xE6E6E6E6);//cnn
    SetPlayerMapIcon(playerid, 23,1374.7015,-1599.6871,13.5469, 32 , 0xE6E6E6E6);//car wash
    SetPlayerMapIcon(playerid, 28,2281.9092,-2364.2791,13.5469, 32 , 0xE6E6E6E6);//kart
    SetPlayerMapIcon(playerid, 30,931.9179,-1071.1412,24.2962, 32 , 0xE6E6E6E6);//cemiterio
    SetPlayerMapIcon(playerid, 32,1022.5547,-1121.6744,23.8720, 32 , 0xE6E6E6E6); //cassino
    SetPlayerMapIcon(playerid, 39,1577.2410,-1474.7906,14.2203, 43 , 0xE6E6E6E6); //cocaina
    SetPlayerMapIcon(playerid, 44,1892.746704,-2244.098876,13.546899, 32 , 0xE6E6E6E6); //aeroporto
    SetPlayerMapIcon(playerid, 45,-1968.559814,296.269592,35.171901, 32 , 0xE6E6E6E6); //wang cars
    SetPlayerMapIcon(playerid, 46,1330.193603,-984.074523,33.896598, 32 , 0xE6E6E6E6); //aluguel de carros 2
    SetPlayerMapIcon(playerid, 47,1703.2197,-1470.1509,13.5469, 32 , 0xE6E6E6E6); //produtos
    SetPlayerMapIcon(playerid, 48,1272.3673,-1124.3743,24.1633, 32 , 0xE6E6E6E6); //trocar interior
    SetPlayerMapIcon(playerid, 49,154.1630,-1946.4764,5.2996, 32 , 0xE6E6E6E6); //condominio vip praia
    //SetPlayerMapIcon(playerid, 55,2780.4939,-1812.2635,11.8438, 32 , 0xE6E6E6E6); //conce
    SetPlayerMapIcon(playerid, 33,2780.4939,-1812.2635,11.8438, 55 , 0xE6E6E6E6);//Carros Aluguel 1
}
stock DialVinny(id){new dialogid=6410+id;
return dialogid;}
// forward GastarProdutos(tipoemp, id, quantidade, playerid);
stock GastarProdutos(tipoemp, id, quantidade, playerid=999)
{
    if(tipoemp == 1)
    {
        if(BizzInfo[id][bProd] > 0 && BizzInfo[id][bPlayerUsou] != playerid)
        {
            BizzInfo[id][bProd] -= quantidade;
            BizzInfo[id][bPlayerUsou] = playerid;
            SetTimerEx("TempoProdGasto", 60000, 0, "d",playerid);
        }
    }
    if(tipoemp == 2)
    {
        if(SBizzInfo[id][sbProd] > 0)
        {
            SBizzInfo[id][sbProd] -= quantidade;
           // SBizzInfo[id][bPlayerUsou] = playerid;
        }
    }
    return 1;
}
forward TempoProdGasto(playerid);
public TempoProdGasto(playerid)
{
    for(new emp=0; emp < MAX_BIZZES;emp++)
    {
        if(BizzInfo[emp][bPlayerUsou] == playerid)
        {
            BizzInfo[emp][bPlayerUsou] = 999;
            break;
        }
    }
    return 1;
}
public CriarArvore(Float:X,Float:Y,Float:Z)
{
    Arvore[ProximaArvore][0] = CreateDynamicObject(19076, X-0.39, Y+0.67, Z-0.9,   0.00, 0.00, 0.00); //Arvore
    Arvore[ProximaArvore][1] = CreateDynamicObject(19056, X-1.39, Y+0.10, Z-0.2,   0.00, 0.00, 0.00);
    Arvore[ProximaArvore][2] = CreateDynamicObject(19057, X+1.39, Y+0.45, Z-0.2,   0.00, 0.00, 0.00);
    Arvore[ProximaArvore][3] = CreateDynamicObject(19054, X-0.07, Y-0.67, Z-0.2,   0.00, 0.00, 0.00);
    ProximaArvore++;
    return (ProximaArvore-1);
}

public DeletarArvore(arvoreid)
{
    new arquivo[100];
    DestroyDynamicObject(Arvore[arvoreid][0]);
    DestroyDynamicObject(Arvore[arvoreid][1]);
    DestroyDynamicObject(Arvore[arvoreid][2]);
    DestroyDynamicObject(Arvore[arvoreid][3]);
    format(arquivo,128,PASTA_ARVORES,arvoreid);
    DOF2_RemoveFile(arquivo);
    ProximaArvore--;
    return 1;
}

public CarregarArvores()
{
    new string[128];
    new counter;
    for(new i=0;i<=MAX_ARVORES;i++){
        format(string,sizeof(string),PASTA_ARVORES,i);
        if(DOF2_FileExists(string)){
             CriarArvore(DOF2_GetFloat(string,"posX"),DOF2_GetFloat(string,"posY"),DOF2_GetFloat(string,"posZ"));
             counter++;
        }
    }
    format(string,sizeof(string),"%d árvores de natal carregadas!!",counter);
    if(counter>0) print(string);
    return 1;
}

stock MostrarIds()
{
    new str[50],arquivo[100];
    for(new i=0;i<=MAX_ARVORES;i++){
        format(arquivo,128,PASTA_ARVORES,i);
        if(DOF2_FileExists(arquivo)){
            format(str,50,"Arvore id: %d",i);
            Id[i] = Create3DTextLabel(str,0xFFFF80AA,DOF2_GetFloat(arquivo,"posX"),DOF2_GetFloat(arquivo,"posY"),DOF2_GetFloat(arquivo,"posZ"),20.0,0);
        }
    }
    return 1;
}

stock OcultarIds()
{
    for(new i=0;i<=MAX_ARVORES;i++){
        Delete3DTextLabel(Id[i]);
    }
    return 1;
}

new timercriarcar[MAX_PLAYERS];
forward MenuCasa(playerid,etapa);
public MenuCasa(playerid,etapa)
{
    switch(etapa)
    {
        case 1:
        {
            new encontrado=0;
            for(new House = 0; House < sizeof(HouseInfo); House++)
            {
                if (PlayerToPoint(3, playerid,HouseInfo[House][hEntrancex], HouseInfo[House][hEntrancey], HouseInfo[House][hEntrancez]))
                {

                    new location[MAX_ZONE_NAME],strvinnydialog[400];
                    Get2DZone(location, HouseInfo[House][hEntrancex], HouseInfo[House][hEntrancey], MAX_ZONE_NAME);
                    format(strvinny, sizeof(strvinny), "{80FF80}Foi encontrada uma Propriedade Proximo à este Local:");
                    strcat(strvinnydialog, strvinny);
                    format(strvinny, sizeof(strvinny), "{FFFFFF}\n\nCasa ID: %d\nLocal: %s\nDono: %s\nTipo: %s\nValor: R$ %d\nNivel: %d",House,location,HouseInfo[House][hOwner],HouseInfo[House][hDiscription],HouseInfo[House][hValue],HouseInfo[House][hLevel]);
                    strcat(strvinnydialog, strvinny);
                    strcat(strvinnydialog, "\n\n{1E90FF}ATENÇÃO: {FFFFFF}Prossiga somente se desejar Fazer Alterações na propriedade Selecionada, \n");
                    strcat(strvinnydialog, "{FFFFFF}Caso queira Criar uma nova Casa, Afaste-se dessa, e Digite o mesmo Comando!\n");
                    ShowPlayerDialog(playerid, DialVinny(6), DIALOG_STYLE_MSGBOX, "{33CCFF}Menu - Configuração das Casas", strvinnydialog, "Proximo", "Cancelar");
                    casaid[playerid] = House;
                    encontrado ++;
                    break;
                }

            }
            if(encontrado == 0)
            {
                MenuCasa(playerid,2);
            }
            return 1;
        }
        case 2:
        {

            new strvinnydialog[500];
            format(strvinny, sizeof(strvinny), "{FF8080}Não foi Encontrada nenhuma propriedade neste Local!\n\n");
            strcat(strvinnydialog, strvinny);
            format(strvinny, sizeof(strvinny), "{FFFFFF}Clique em 'Criar Casa' Para Criar uma nova propriedade!\nCaso queira cancelar, Clique em 'Cancelar'!");
            strcat(strvinnydialog, strvinny);
            strcat(strvinnydialog, "\n\n{1E90FF}ATENÇÃO: {FFFFFF}Antes de Criar uma nova casa, posicione-se na entrada da mesma!\n");
            strcat(strvinnydialog, "{FFFFFF}Não é Recomendável a criação de casas em Gz's ou Perto de locais como:\n");
            strcat(strvinnydialog, "{FFFFFF}Prefeitura, Concessionária, HQs (Gangs/Orgs)!\n");
            strcat(strvinnydialog, "{FFFFFF}Após você clicar em 'Criar Casa', o Sistema te Guiará para efetuar as Configurações necessárias!\n");
            ShowPlayerDialog(playerid, DialVinny(9), DIALOG_STYLE_MSGBOX, "{33CCFF}Menu - Criação de Casas", strvinnydialog, "Criar Casa", "Cancelar");
        }
        case 3:
        {
            TextDrawShowForPlayer(playerid, TextPosto[playerid]);
            Contagem[playerid] = 10;
            format(strvinny,sizeof(strvinny),"~>~ ~g~~h~~h~Configurar Veiculo~n~~n~~n~~w~Va para a Rua~n~para evitar Bugs~n~~n~~n~~b~~h~~h~Aguardando ...  ~n~~n~~n~~r~~h~Contagem:~w~ %d",Contagem[playerid]);
            TextDrawSetString(TextPosto[playerid], strvinny);
            if(HouseInfo[casaid[playerid]][hVeiculo]!= 0) {DestroyVehicle(HouseInfo[casaid[playerid]][hVeiculo]);}
            timercriarcar[playerid] = SetTimerEx("tempocar", 1000, true, "i", playerid);
        }
        case 4:
        {
            new encontrado=0;
            for(new SBizz = 0; SBizz < sizeof(SBizzInfo); SBizz++)
            {
                if (PlayerToPoint(3, playerid,SBizzInfo[SBizz][sbEntranceX], SBizzInfo[SBizz][sbEntranceY], SBizzInfo[SBizz][sbEntranceZ]))
                {

                    new location[MAX_ZONE_NAME],strvinnydialog[430];
                    Get2DZone(location, SBizzInfo[SBizz][sbEntranceX], SBizzInfo[SBizz][sbEntranceY], MAX_ZONE_NAME);
                    format(strvinny, sizeof(strvinny), "{80FF80}Foi encontrada uma Empresa Proximo à este Local:");
                    strcat(strvinnydialog, strvinny);
                    format(strvinny, sizeof(strvinny), "{FFFFFF}\n\nEmpresa ID: %d\nLocal: %s\nDono: %s\nProdutos: %d|%d\nValor: R$ %d\nNivel: %d\nEntrada R$ %d\nLucro Diário: %d",
                    SBizz,location,SBizzInfo[SBizz][sbOwner],SBizzInfo[SBizz][sbProd],SBizzInfo[SBizz][sbMaxProd],SBizzInfo[SBizz][sbBuyPrice],SBizzInfo[SBizz][sbLevel],SBizzInfo[SBizz][sbEntranceCost],SBizzInfo[SBizz][sbLucro]);
                    strcat(strvinnydialog, strvinny);
                    strcat(strvinnydialog, "\n\n{1E90FF}ATENÇÃO: {FFFFFF}Prossiga somente se desejar Fazer Alterações na empresa Selecionada, \n");
                    strcat(strvinnydialog, "{FFFFFF}Caso queira Criar uma nova Empresa, Afaste-se dessa, e Digite o mesmo Comando!\n");
                    ShowPlayerDialog(playerid, DialVinny(14), DIALOG_STYLE_MSGBOX, "{33CCFF}Menu - Configuração das Empresas", strvinnydialog, "Proximo", "Cancelar");
                    casaid[playerid] = SBizz;
                    encontrado ++;
                    break;
                }

            }
            if(encontrado == 0)
            {
                MenuCasa(playerid,5);
            }
            return 1;
        }
        case 5:
        {
            new strvinnydialog[500];
            format(strvinny, sizeof(strvinny), "{FF8080}Não foi Encontrada nenhuma Empresa neste Local!\n\n");
            strcat(strvinnydialog, strvinny);
            format(strvinny, sizeof(strvinny), "{FFFFFF}Clique em 'Criar Nova' Para Criar uma nova empresa!\nCaso queira cancelar, Clique em 'Cancelar'!");
            strcat(strvinnydialog, strvinny);
            strcat(strvinnydialog, "\n\n{1E90FF}ATENÇÃO: {FFFFFF}Antes de Criar uma nova empresa, posicione-se na porta da mesma!\n");
            strcat(strvinnydialog, "{FFFFFF}Não é Recomendável a criação de empresas em Gz's ou Perto de locais como:\n");
            strcat(strvinnydialog, "{FFFFFF}Prefeitura, Concessionária, HQs (Gangs/Orgs)!\n");
            strcat(strvinnydialog, "{FFFFFF}Após você clicar em 'Criar Nova', o Sistema te Guiará para efetuar as Configurações necessárias!\n");
            ShowPlayerDialog(playerid, DialVinny(18), DIALOG_STYLE_MSGBOX, "{33CCFF}Menu - Criação de Empresas", strvinnydialog, "Criar Nova", "Cancelar");
        }
        case 6:
        {
            new encontrado=0;
            for(new fz = 0; fz < sizeof(FazendaInfo); fz++)
            {
                if (PlayerToPoint(3, playerid,FazendaInfo[fz][ffX], FazendaInfo[fz][ffY], FazendaInfo[fz][ffZ]))
                {

                    new location[MAX_ZONE_NAME],strvinnydialog[430];
                    Get2DZone(location, FazendaInfo[fz][ffX], FazendaInfo[fz][ffY], MAX_ZONE_NAME);
                    format(strvinny, sizeof(strvinny), "{80FF80}Foi encontrada uma Fazenda Proximo à este Local:");
                    strcat(strvinnydialog, strvinny);
                    format(strvinny, sizeof(strvinny), "{FFFFFF}\n\nFazenda ID: %d\nLocal: %s\nDono: %s\nProdutos: %d|%d\nValor: R$ %d\nNivel: %d\nLucro Diário: %d",
                    fz,location,FazendaInfo[fz][fDono],FazendaInfo[fz][fProd],FazendaInfo[fz][fMaxProd],FazendaInfo[fz][fValor],FazendaInfo[fz][fLevel],FazendaInfo[fz][fLucro]);
                    strcat(strvinnydialog, strvinny);
                    strcat(strvinnydialog, "\n\n{1E90FF}ATENÇÃO: {FFFFFF}Prossiga somente se desejar Fazer Alterações na Fazenda Selecionada, \n");
                    strcat(strvinnydialog, "{FFFFFF}Caso queira Criar uma nova Fazenda, Afaste-se dessa, e Digite o mesmo Comando!\n");
                    ShowPlayerDialog(playerid, DialVinny(24), DIALOG_STYLE_MSGBOX, "{33CCFF}Menu - Configuração das Fazenda", strvinnydialog, "Proximo", "Cancelar");
                    casaid[playerid] = fz;
                    encontrado ++;
                    break;
                }

            }
            if(encontrado == 0)
            {
                MenuCasa(playerid,7);
            }
            return 1;
        }
        case 7:
        {
            new strvinnydialog[500];
            format(strvinny, sizeof(strvinny), "{FF8080}Não foi Encontrada nenhuma Fazenda neste Local!\n\n");
            strcat(strvinnydialog, strvinny);
            format(strvinny, sizeof(strvinny), "{FFFFFF}Clique em 'Criar Nova' Para Criar uma nova Fazenda!\nCaso queira cancelar, Clique em 'Cancelar'!");
            strcat(strvinnydialog, strvinny);
            strcat(strvinnydialog, "\n\n{1E90FF}ATENÇÃO: {FFFFFF}Antes de Criar uma nova Fazenda, posicione-se no Local da mesma!\n");
            strcat(strvinnydialog, "{FFFFFF}Não é Recomendável a criação de Fazendas em Gz's ou Perto de locais como:\n");
            strcat(strvinnydialog, "{FFFFFF}Prefeitura, Concessionária, HQs (Gangs/Orgs)!\n");
            strcat(strvinnydialog, "{FFFFFF}Após você clicar em 'Criar Nova', o Sistema te Guiará para efetuar as Configurações necessárias!\n");
            ShowPlayerDialog(playerid, DialVinny(28), DIALOG_STYLE_MSGBOX, "{33CCFF}Menu - Criação de Fazendas", strvinnydialog, "Criar Nova", "Cancelar");
        }
    }
    return true;
}
forward tempocar(playerid);
public tempocar(playerid)
{

    format(strvinny,sizeof(strvinny),"~>~ ~g~~h~~h~Configurar Veiculo~n~~n~~n~~w~Va para a Rua~n~para evitar Bugs~n~~n~~n~~b~~h~~h~Aguardando ...  ~n~~n~~n~~r~~h~Contagem:~w~ %d",Contagem[playerid]);
    TextDrawSetString(TextPosto[playerid], strvinny);
    Contagem[playerid] --;
    if(Contagem[playerid] <= 0)
    {
        new Float:x,Float:y,Float:z,Float:a;
        GetPlayerPos(playerid, x, y, z);
        GetPlayerFacingAngle(playerid, a);
        KillTimer(timercriarcar[playerid]);
        //TextDrawHideForPlayer(playerid, TextPosto[playerid]);
        vehteste = CreateVehicle(475, x, y, z, a, 0, 0, 6000000);
        PutPlayerInVehicle(playerid,vehteste,0);
        format(strvinny,sizeof(strvinny),"~>~ ~g~~h~~h~Configurar Veiculo ~n~~n~~n~~w~Estacione o carro,~n~E quando estiver pronto,~n~Apenas ~r~~h~SAIA~w~ do Veiculo.~n~~b~~h~~h~~h~E ele sera Configurado!",Contagem[playerid]);
        TextDrawSetString(TextPosto[playerid], strvinny);
        ConfigurandoCar[playerid] = 1;
        Contagem[playerid] = 0;
    }
}
/*stock SalvarQuantidadeCasas()
{
    new file[100];
    format(file, sizeof(file), "/PlayGamer/Casas/Casas.cfg");
    if(!DOF2_FileExists(file))
    {
        DOF2_CreateFile(file);
    }
    DOF2_SetInt(file, "Quantidade", MAX_HOUSES);
}
stock CarregarQuantidadeCasas()
{
    new file[100];
    format(file, sizeof(file), "/PlayGamer/Casas/Casas.cfg");
    MAX_HOUSES = DOF2_GetInt(file, "Quantidade");
}         */
forward LucroMiniEMPS();
public LucroMiniEMPS()
{
    for(new sb = 0; sb < sizeof(SBizzInfo); sb++)
    {
        if(SBizzInfo[sb][sbAtiva] == 1 && sb > MAX_BIZZES)
        {
            gettime(hour,minute);
            if(IsPlayerOnline(SBizzInfo[sb][sbOwner]))
            {
                SBizzInfo[sb][sbDonoON]++;
            }
            new quantidadeprod = 277;
            new quantprod2= 83;
            new Precoprod = quantidadeprod*quantidadeprod;
            if(SBizzInfo[sb][sbProd] > quantprod2)
            {
                SBizzInfo[sb][sbReceber] += Precoprod;
                SBizzInfo[sb][sbProd] -= quantprod2;

            }
            else if(SBizzInfo[sb][sbProd] <= 0)
            {
                SBizzInfo[sb][sbProd] = 0;
                SBizzInfo[sb][sbReceber] -= quantidadeprod+1000;
            }
            else if(SBizzInfo[sb][sbProd] != 0)
            {
                SBizzInfo[sb][sbReceber] += Precoprod;
                SBizzInfo[sb][sbProd] = 0;
            }
            if(hour == 0 && minute < 3)
            {
                if(SBizzInfo[sb][sbDonoON] == 1)SBizzInfo[sb][sbReceber]+= VinnyP(4,SBizzInfo[sb][sbLucro])+7;
                if(SBizzInfo[sb][sbDonoON] == 2)SBizzInfo[sb][sbReceber]+= VinnyP(6,SBizzInfo[sb][sbLucro])+7;
                if(SBizzInfo[sb][sbDonoON] == 3)SBizzInfo[sb][sbReceber]+= VinnyP(7,SBizzInfo[sb][sbLucro])+7;
                if(SBizzInfo[sb][sbDonoON] == 4)SBizzInfo[sb][sbReceber]+= VinnyP(8,SBizzInfo[sb][sbLucro])+7;
                if(SBizzInfo[sb][sbDonoON] >= 5)SBizzInfo[sb][sbReceber]+= VinnyP(11,SBizzInfo[sb][sbLucro])+7;
                if(SBizzInfo[sb][sbDonoON] != 0)SBizzInfo[sb][sbReceber]+= SBizzInfo[sb][sbLucro];

                SBizzInfo[sb][sbTill] += SBizzInfo[sb][sbReceber];
                SBizzInfo[sb][sbReceber] = 0;
                SBizzInfo[sb][sbDonoON] = 0;
            }
        }
        else
        {
            SBizzInfo[sb][sbDonoON] = 0;
        }
    }
    for(new sb = 0; sb < sizeof(FazendaInfo); sb++)
    {
        if(FazendaInfo[sb][fAtiva] == 1)
        {
            gettime(hour,minute);
            if(IsPlayerOnline(FazendaInfo[sb][fDono]))
            {
            FazendaInfo[sb][fDonoON]++;

            }
            if(hour == 0 && minute < 3)
            {
                if(FazendaInfo[sb][fDonoON] == 1)FazendaInfo[sb][fReceber]+= VinnyP(5,FazendaInfo[sb][fLucro])+7;
                if(FazendaInfo[sb][fDonoON] == 2)FazendaInfo[sb][fReceber]+= VinnyP(7,FazendaInfo[sb][fLucro])+7;
                if(FazendaInfo[sb][fDonoON] == 3)FazendaInfo[sb][fReceber]+= VinnyP(8,FazendaInfo[sb][fLucro])+7;
                if(FazendaInfo[sb][fDonoON] == 4)FazendaInfo[sb][fReceber]+= VinnyP(9,FazendaInfo[sb][fLucro])+7;
                if(FazendaInfo[sb][fDonoON] >= 5)FazendaInfo[sb][fReceber]+= VinnyP(12,FazendaInfo[sb][fLucro])+7;
                if(FazendaInfo[sb][fDonoON] != 0)FazendaInfo[sb][fReceber]+= FazendaInfo[sb][fLucro];

                FazendaInfo[sb][fFundos] += FazendaInfo[sb][fReceber];
                FazendaInfo[sb][fReceber] = 0;
            }
            FazendaInfo[sb][fDonoON] = 0;
        }
    }
    a3d();
    return true;
}

stock NumeroInteiro(num)
{
new d;
for(d = 2; d < num;d++)
if (num % d == 0)
return false;//não inteiro '-'
return true; //inteiro ..
}

forward CheckFazDono(playerid);
public CheckFazDono(playerid)
{
    new chavefazenda = 0,encontrado;
    for(new h=0; h < MAX_FAZENDA;h++)
    {
        if(FazendaInfo[h][fAtiva] == 1)
        {
            if(strfind(PlayerName(playerid), FazendaInfo[h][fDono], true) != -1)
            {
                chavefazenda = h;
                encontrado ++;
                break;
            }
        }
    }
    if(encontrado == 0) chavefazenda = 9999;
    return chavefazenda;
}
stock MSG(const string[])
   { SendClientMessage(0, -1, string);    }

public ContagemPlayer(playerid)
{
    if(Contagem[playerid] <= 0)
    {
        KillTimer(TempoContagem[playerid]);
    }
    else
    {
        Contagem[playerid]--;
    }
    return true;
}
forward EsperandoTutorial(playerid);
public EsperandoTutorial(playerid)
{
    LiberadoTutorial[playerid] = true;
    SendClientMessage(playerid, -1, "* Você foi liberado para seguir o tutorial ...");
    return 1;
}

forward TextPropertys();
public TextPropertys()
{
    DestroyAllDynamicPickups();
    for(new h=0; h < MAX_FAZENDA;h++)
    {
        if(FazendaInfo[h][fAtiva] == 1)
        {
            if(!IsValidDynamic3DTextLabel(FazendaLabel[h])) FazendaLabel[h] = CreateDynamic3DTextLabel("BPG, Carregando\nInformações...\nAguarde!",COR_3DLABEL,FazendaInfo[h][ffX], FazendaInfo[h][ffY], FazendaInfo[h][ffZ]+0.5,30.0);
            if(FazendaInfo[h][fOwned] == 0)
            {

                CreateDynamicPickup(19134, 23, FazendaInfo[h][ffX], FazendaInfo[h][ffY], FazendaInfo[h][ffZ]);
                format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}%s\nEsta fazenda esta a venda\nValor: R$%d Nivel: %d\nProdutos: %d|%d\n{FFFFFF}Aperte ENTER para comprar",FazendaInfo[h][fDescricao],FazendaInfo[h][fValor],FazendaInfo[h][fLevel],FazendaInfo[h][fProd],FazendaInfo[h][fMaxProd]);
                UpdateDynamic3DTextLabelText(FazendaLabel[h],COR_3DLABEL,strlabel);
            }
            else if(FazendaInfo[h][fOwned] == 1)
            {

                CreateDynamicPickup(19133, 23, FazendaInfo[h][ffX], FazendaInfo[h][ffY], FazendaInfo[h][ffZ]);
                format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}%s\nDono: %s\nNivel: %d\nProdutos: %d|%d\n{FFFFFF}Aperte ENTER para Gerenciar",FazendaInfo[h][fDescricao],FazendaInfo[h][fDono],FazendaInfo[h][fLevel],FazendaInfo[h][fProd],FazendaInfo[h][fMaxProd]);
                UpdateDynamic3DTextLabelText(FazendaLabel[h],COR_3DLABEL,strlabel);
            }
        }
        else { if(IsValidDynamic3DTextLabel(FazendaLabel[h])) DestroyDynamic3DTextLabel(FazendaLabel[h]); }
    }
    for(new h = 0; h < sizeof(HouseInfo); h++)
    {
        if(HouseInfo[h][hAtiva] == 1)
        {
            if(!IsValidDynamic3DTextLabel(HouseLabel[h])) HouseLabel[h] = CreateDynamic3DTextLabel("BPG, Carregando\nInformações...\nAguarde!",COR_3DLABEL,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,30.0);
            if(HouseInfo[h][hOwned] == 0)
            {
                format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Casa A Venda\nTipo: %s\nValor: R$%d\nNivel: %d\n{FFFFFF}Para comprar digite /comprarcasa",HouseInfo[h][hDiscription],HouseInfo[h][hValue],HouseInfo[h][hLevel]);
                UpdateDynamic3DTextLabelText(HouseLabel[h],COR_3DLABEL,strlabel);
                CreateDynamicPickup(1273, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
            }
            if(HouseInfo[h][hOwned] == 1)
            {
                if(HouseInfo[h][hRentabil] == 0)
                {
                    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Dono: %s\nNivel: %d\n{FFFFFF}Status: Ocupada",HouseInfo[h][hOwner],HouseInfo[h][hLevel]);
                    UpdateDynamic3DTextLabelText(HouseLabel[h],COR_3DLABEL,strlabel);
                    CreateDynamicPickup(1318, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
                }
                else
                {
                    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}Dono: %s\nAluguel: R$%d\nNivel: %d\n{FFFFFF}Digite /alugarquarto para alugar um quarto",HouseInfo[h][hOwner],HouseInfo[h][hRent],HouseInfo[h][hLevel]);
                    UpdateDynamic3DTextLabelText(HouseLabel[h],COR_3DLABEL,strlabel);
                    CreateDynamicPickup(1318, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
                }
            }
        }
        else { DestroyDynamic3DTextLabel(HouseLabel[h]); }
    }

    for(new h = 0; h < sizeof(SBizzInfo); h++)
    {
        if(SBizzInfo[h][sbAtiva] == 1)
        {
            if(!IsValidDynamic3DTextLabel(SBizzLabel[h])) SBizzLabel[h] = CreateDynamic3DTextLabel("BPG, Carregando\nInformações...\nAguarde!",COR_3DLABEL,SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]+0.5,30.0);
            if(SBizzInfo[h][sbOwned] == 0)
            {
                CreateDynamicPickup(1272, 23, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]);
                format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}%s\nEsta empresa esta a venda\nValor: R$%d Nivel: %d\nProdutos: %d|%d\n{FFFFFF}Para comprar digite /comprarempresa",SBizzInfo[h][sbMessage],SBizzInfo[h][sbBuyPrice],SBizzInfo[h][sbLevel],SBizzInfo[h][sbProd],SBizzInfo[h][sbMaxProd]);
                UpdateDynamic3DTextLabelText(SBizzLabel[h],COR_3DLABEL,strlabel);
            }
            else if(SBizzInfo[h][sbOwned] == 1)
            {
                CreateDynamicPickup(1318, 23, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]);
                format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {FF0000}Gamer\n{82fabE}%s\nDono: %s\nExtorcao: %s\nEntrada: R$%d\nNivel: %d\nProdutos: %d|%d\n{FFFFFF}Aperte Enter Para Gerenciar",SBizzInfo[h][sbMessage],SBizzInfo[h][sbOwner],SBizzInfo[h][sbExtortion],SBizzInfo[h][sbEntranceCost],SBizzInfo[h][sbLevel],SBizzInfo[h][sbProd],SBizzInfo[h][sbMaxProd]);
                UpdateDynamic3DTextLabelText(SBizzLabel[h],COR_3DLABEL,strlabel);
            }
        }
        else { if(IsValidDynamic3DTextLabel(SBizzLabel[h])) DestroyDynamic3DTextLabel(SBizzLabel[h]); }
    }
}
forward EmBatalha(playerid);
public EmBatalha(playerid)
{
    for(new i=0; i<MAX_PLAYERS; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(helptrampando[i] != 1 && admtrampando[i] != 1 && GetPlayerOrg(i) != 0 && GetPlayerOrg(i) != 4 && GetPlayerOrg(i) != 7 && GetPlayerOrg(i) != 9 && GetPlayerOrg(i) != 10)
            {
                if (ProxDetectorS(Distancia_Dorgas, playerid, i))
                {
                    if(GetPlayerOrg(i) != GetPlayerOrg(playerid)){
                    return true; }
                }
            }
        }
    }
    return false;
}
stock SetPlayerSkinEx(playerid, id)
{
    if(id > 299 || id < 0 || id == 74)
    {
        SetPlayerSkin(playerid, 101);
        return SendClientMessage(playerid, -1, "ERRO: Skin fora do padrão, não reconhecida, retornamos à skin ID 0!");
    }
    return SetPlayerSkin(playerid, id);
}
//====================[Vip Info]===================//
forward SetarVip(playerid, TipoVip, mesesvip,usoucomando);
public SetarVip(playerid, TipoVip, mesesvip,usoucomando)
{
    new VipGrana,VipNivel,Diavi,Mesvi,Anovi,tess;
    if(TipoVip == 1)
    {
        if(mesesvip <= 1)
        {
            VipGrana = 15000000;
            VipNivel = 2;
        }
        else
        {
            VipGrana = 15000000*mesesvip;
            VipNivel = 2*mesesvip;
        }
        if(usoucomando != 2 && usoucomando != 1 && PlayerInfo[playerid][pVip] != 0)
        {
            if(PlayerInfo[playerid][pVip] != TipoVip) { SendClientMessage(playerid, -1,"Desculpe, mas não é possível renovar um tipo de VIP diferente do seu atual.");
            SendClientMessage(playerid, -1,"** Para fazer isso, procure um administrador responsável ou vá ao /forum.");
            return true; }
        }
        if(usoucomando == 0){ PlayerInfo[playerid][pMV] -= CalcularMVs(playerid, TipoVip, mesesvip);}
        PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
        SendClientMessage(playerid, 0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}N{95FFDF}| Liberação de Vantagens Vips |{00FF00}B{FFD700}.P.{1E90FF}N{95FFDF}|*~*~*~*~*~*~*~~**");
        if(usoucomando != 2)
        {
        PlayerInfo[playerid][pConta] += VipGrana;
        PlayerInfo[playerid][pLevel] += VipNivel;
        format(gstring, sizeof(gstring), "** Você Recebeu R$ %d na conta do Banco!", VipGrana);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
        format(gstring, sizeof(gstring), "** Você Recebeu mais %d de Nivel Em Sua conta!", VipNivel);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
  }
        /*if(PlayerInfo[playerid][pVip] != 0)
        { */
            for(new i = 0; i < sizeof(VipInfo); i++)
            {
                if(strcmp(PlayerName(playerid),VipInfo[i][vNick],true)==0)
                {
                    CalcularMesVip(mesesvip, Diavi,Mesvi,Anovi,1,VipInfo[i][vDia],VipInfo[i][vMes],VipInfo[i][vAno]);
                    tess++;
                    break;
                }
            }

        if(tess == 0)
        {
            CalcularMesVip(mesesvip, Diavi,Mesvi,Anovi);
        }
        format(gstring, sizeof(gstring), "** Seu VIP Expira no Dia %d/%d/%d!", Diavi,Mesvi,Anovi);
        SendClientMessage(playerid, 0x77EEA1FF, gstring);
        SendClientMessage(playerid, 0x95FFDFAA,"** Conta Vip Normal Ativada, Obrigado por nos Ajudar, Bom Jogo!");
        ScoreLevel(playerid);

        AdicionarVip(playerid, Diavi,Mesvi,Anovi);
        PlayerInfo[playerid][pVip] = 1;
    }
    if(TipoVip >=2)
    {
        if(mesesvip <= 1)
        {
            VipGrana = 50000000;
            VipNivel = 4;
        }
        else
        {
            VipGrana = 50000000*mesesvip;
            VipNivel = 4*mesesvip;
        }
        if(usoucomando != 2 && usoucomando != 1 && PlayerInfo[playerid][pVip] != 0)
        {
            if(PlayerInfo[playerid][pVip] != TipoVip) { SendClientMessage(playerid, -1,"Desculpe, mas não é possível renovar um tipo de VIP diferente do seu atual.");
            SendClientMessage(playerid, -1,"** Para fazer isso, procure um administrador responsável ou vá ao /forum.");
            return true; }
        }
        PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
        SendClientMessage(playerid, 0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}N{95FFDF}| Liberação de Vantagens Vips |{00FF00}B{FFD700}.P.{1E90FF}N{95FFDF}|*~*~*~*~*~*~*~~**");
        if(usoucomando != 2)
        {
        PlayerInfo[playerid][pConta] += VipGrana;
        PlayerInfo[playerid][pLevel] += VipNivel;
        if(usoucomando == 0){ PlayerInfo[playerid][pMV] -= CalcularMVs(playerid, TipoVip, mesesvip);}
        format(gstring, sizeof(gstring), "** Você Recebeu R$ %d na conta do Banco!", VipGrana);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
        format(gstring, sizeof(gstring), "** Você Recebeu mais %d de Nivel Em Sua conta!", VipNivel);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
        }
        /*if(PlayerInfo[playerid][pVip] != 0)
        { */
            for(new i = 0; i < sizeof(VipInfo); i++)
            {
                if(strcmp(PlayerName(playerid),VipInfo[i][vNick],true)==0)
                {
                    CalcularMesVip(mesesvip, Diavi,Mesvi,Anovi,1,VipInfo[i][vDia],VipInfo[i][vMes],VipInfo[i][vAno]);
                    tess++;
                    break;
                }
            }

        if(tess == 0)
        {
            CalcularMesVip(mesesvip, Diavi,Mesvi,Anovi);
        }

        format(gstring, sizeof(gstring), "** Seu Vip Expira no Dia %d/%d/%d!", Diavi,Mesvi,Anovi);
        SendClientMessage(playerid, 0x77EEA1FF, gstring);
        SendClientMessage(playerid, 0x95FFDFAA,"** Conta Super Vip Ativada, Obrigado por nos Ajudar, Bom Jogo!");
        ScoreLevel(playerid);

        AdicionarVip(playerid, Diavi,Mesvi,Anovi);
        PlayerInfo[playerid][pVip] = 2;
    }
    return 1;
}
stock CalcularMesVip(MesesPagos, &DiaVencimento, &MesVencimento, &AnoVencimento, Reativar=0,DiaReativar=0,MesReativar=0,AnoReativar=0)
{
    new AnoV,MesV,DiaV;
    getdate(AnoV,MesV,DiaV);
    if(Reativar == 0)
    {
        MesVencimento = MesV+MesesPagos;
        AnoVencimento = AnoV;
        DiaVencimento =  DiaV;
    }
    else
    {
        MesVencimento = MesReativar+MesesPagos;
        AnoVencimento = AnoReativar;
        DiaVencimento =  DiaReativar;
    }
    if(MesVencimento > 12) AnoVencimento++;
    if(MesVencimento == 13) MesVencimento = 1;
    if(MesVencimento == 14) MesVencimento = 2;
    if(MesVencimento == 15) MesVencimento = 3;
    if(MesVencimento == 16) MesVencimento = 4;
    if(MesVencimento == 17) MesVencimento = 5;
    if(DiaVencimento == 31) DiaVencimento = 30;
    if(DiaVencimento > 28 && MesVencimento == 2) DiaVencimento = 28;
}
forward AdicionarVip(playerid, diavip,mesvip,anovip);
public AdicionarVip(playerid, diavip,mesvip,anovip)
{
    new var03=0;
    for(new i = 0; i < sizeof(VipInfo); i++)
    {
        if(strcmp(PlayerName(playerid),VipInfo[i][vNick],true)==0)
        {
            format(VipInfo[i][vVencimento],32, "%d/%d/%d",diavip,mesvip,anovip);
            VipInfo[i][vAtivo] = 1;
            VipInfo[i][vAno] = anovip;
            VipInfo[i][vMes] = mesvip;
            VipInfo[i][vDia] = diavip;
            var03 = 1;
            break;
        }
    }
    if(var03 == 0)
    {
        for(new i = 0; i < sizeof(VipInfo); i++)
        {
            if(strcmp("Ninguem",VipInfo[i][vNick],true)==0)
            {
                strmid(VipInfo[i][vNick], PlayerName(playerid), 0, strlen(PlayerName(playerid)), 255);
                VipInfo[i][vAtivo] = 1;
                VipInfo[i][vAno] = anovip;
                VipInfo[i][vMes] = mesvip;
                VipInfo[i][vDia] = diavip;
                VipInfo[i][vCasa] = 9999;
                VipInfo[i][vEmpresa] = 9999;
                VipInfo[i][vFazenda] = 9999;
                format(VipInfo[i][vVencimento],32, "%d/%d/%d",diavip,mesvip,anovip);
                break;
            }
        }
    }
}

forward CheckVip();//Yiakin FEZ!!
public CheckVip()
{
    new arquivo2[100];
    for(new i=0; i<MAX_PLAYERS; i++)
    {
        if( IsPlayerConnected( i ) ){
            if(VipInfo[i][vAtivo] == 1)
            {
                if(strcmp(DataServidor,VipInfo[i][vVencimento],true) == 0)
                {
                    new bool:BensPerdidos[3] = false;
                    if(VipInfo[i][vCasa] != 9999)
                    {
                        HouseInfo[VipInfo[i][vCasa]][hHel] = 0;
                        HouseInfo[VipInfo[i][vCasa]][hArm] = 0;
                        HouseInfo[VipInfo[i][vCasa]][hHealthx] = 0;
                        HouseInfo[VipInfo[i][vCasa]][hHealthy] = 0;
                        HouseInfo[VipInfo[i][vCasa]][hHealthz] = 0;
                        HouseInfo[VipInfo[i][vCasa]][hArmorrx] = 0;
                        HouseInfo[VipInfo[i][vCasa]][hArmorry] = 0;
                        HouseInfo[VipInfo[i][vCasa]][hArmorrz] = 0;
                        HouseInfo[VipInfo[i][vCasa]][hLock] = 1;
                        HouseInfo[VipInfo[i][vCasa]][hOwned] = 0;
                        HouseInfo[VipInfo[i][vCasa]][hVec] = 475;
                        HouseInfo[VipInfo[i][vCasa]][hVcol1] = -1;
                        HouseInfo[VipInfo[i][vCasa]][hVcol2] = -1;
                        strmid(HouseInfo[VipInfo[i][vCasa]][hOwner], "O estado", 0, strlen("O estado"), 255);
                        SalvarCasa(VipInfo[i][vCasa]);
                        BensPerdidos[0] = true;
                        PlayerInfo[ i ][ pPHousekey ] = 9999;
                    }
                    if( PlayerInfo[ i ][ pPHousekey ] ^ 9999 ){
                        if( GetCasaVip( PlayerInfo[ i ][ pPHousekey ] ) ^ 0 ){
                            HouseInfo[PlayerInfo[ i ][ pPHousekey ]][hHel] = 0;
                            HouseInfo[PlayerInfo[ i ][ pPHousekey ]][hArm] = 0;
                            HouseInfo[PlayerInfo[ i ][ pPHousekey ]][hHealthx] = 0;
                            HouseInfo[PlayerInfo[ i ][ pPHousekey ]][hHealthy] = 0;
                            HouseInfo[PlayerInfo[ i ][ pPHousekey ]][hHealthz] = 0;
                            HouseInfo[PlayerInfo[ i ][ pPHousekey ]][hArmorrx] = 0;
                            HouseInfo[PlayerInfo[ i ][ pPHousekey ]][hArmorry] = 0;
                            HouseInfo[PlayerInfo[ i ][ pPHousekey ]][hArmorrz] = 0;
                            HouseInfo[PlayerInfo[ i ][ pPHousekey ]][hLock] = 1;
                            HouseInfo[PlayerInfo[ i ][ pPHousekey ]][hOwned] = 0;
                            HouseInfo[PlayerInfo[ i ][ pPHousekey ]][hVec] = 475;
                            HouseInfo[PlayerInfo[ i ][ pPHousekey ]][hVcol1] = -1;
                            HouseInfo[PlayerInfo[ i ][ pPHousekey ]][hVcol2] = -1;
                            strmid(HouseInfo[PlayerInfo[ i ][ pPHousekey ]][hOwner], "O estado", 0, strlen("O estado"), 255);
                            SalvarCasa(PlayerInfo[ i ][ pPHousekey ]);
                            BensPerdidos[0] = true;
                            PlayerInfo[ i ][ pPHousekey ] = 9999;
                        }
                    }
                    if(VipInfo[i][vEmpresa] != 9999)
                    {
                        if(VipInfo[i][vEmpresa] >= 100)
                        {
                            SBizzInfo[VipInfo[i][vEmpresa]-100][sbLocked] = 0;
                            SBizzInfo[VipInfo[i][vEmpresa]-100][sbOwned] = 0;
                            strmid(SBizzInfo[VipInfo[i][vEmpresa]-100][sbOwner], "The State", 0, strlen("The State"), 255);
                            strmid(SBizzInfo[VipInfo[i][vEmpresa]-100][sbExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
                            SBizzInfo[VipInfo[i][vEmpresa]-100][sbTill] = 0;
                            PlayerInfo[ i ][ pPbiskey ] = 9999;
                        }
                        else
                        {
                            BizzInfo[VipInfo[i][vEmpresa]][bLocked] = 0;
                            BizzInfo[VipInfo[i][vEmpresa]][bOwned] = 0;
                            strmid(BizzInfo[VipInfo[i][vEmpresa]][bOwner], "The State", 0, strlen("The State"), 255);
                            strmid(BizzInfo[VipInfo[i][vEmpresa]][bExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
                            BizzInfo[VipInfo[i][vEmpresa]][bTill] = 0;
                            PlayerInfo[ i ][ pPbiskey ] = 9999;
                        }
                        BensPerdidos[1] = true;
                    }
                    if(PlayerInfo[ i ][ pPbiskey ] != 9999)
                    {
                        if(PlayerInfo[ i ][ pPbiskey ] >= 100)
                        {
                            SBizzInfo[PlayerInfo[ i ][ pPbiskey ]-100][sbLocked] = 0;
                            SBizzInfo[PlayerInfo[ i ][ pPbiskey ]-100][sbOwned] = 0;
                            strmid(SBizzInfo[PlayerInfo[ i ][ pPbiskey ]-100][sbOwner], "The State", 0, strlen("The State"), 255);
                            strmid(SBizzInfo[PlayerInfo[ i ][ pPbiskey ]-100][sbExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
                            SBizzInfo[PlayerInfo[ i ][ pPbiskey ]-100][sbTill] = 0;
                            PlayerInfo[ i ][ pPbiskey ] = 9999;
                        }
                        else
                        {
                            BizzInfo[PlayerInfo[ i ][ pPbiskey ]][bLocked] = 0;
                            BizzInfo[PlayerInfo[ i ][ pPbiskey ]][bOwned] = 0;
                            strmid(BizzInfo[PlayerInfo[ i ][ pPbiskey ]][bOwner], "The State", 0, strlen("The State"), 255);
                            strmid(BizzInfo[PlayerInfo[ i ][ pPbiskey ]][bExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
                            BizzInfo[PlayerInfo[ i ][ pPbiskey ]][bTill] = 0;
                            PlayerInfo[ i ][ pPbiskey ] = 9999;
                        }
                        BensPerdidos[1] = true;
                    }
                    if(VipInfo[i][vFazenda] != 9999)
                    {
                        FazendaInfo[VipInfo[i][vFazenda]][fOwned] = 0;
                        strmid(FazendaInfo[VipInfo[i][vFazenda]][fDono], "Ninguem", 0, strlen("Ninguem"), 255);
                        FazendaInfo[VipInfo[i][vFazenda]][fAtiva] = 1;
                        BensPerdidos[2] = true;
                    }
                    if( CheckFazDono(i) ^ 9999 ){
                        FazendaInfo[CheckFazDono(i)][fOwned] = 0;
                        FazendaInfo[CheckFazDono(i)][fAtiva] = 1;
                        strmid(FazendaInfo[CheckFazDono(i)][fDono], "Ninguem", 0, strlen("Ninguem"), 255);

                        BensPerdidos[2] = true;
                    }
                    if(IsPlayerOnline(VipInfo[i][vNick]))
                        {
                        new idp=GetPlayerID(VipInfo[i][vNick]);
                        new niveldoviprenov = PlayerInfo[idp][pVip],Texst[24];
                        if(niveldoviprenov == 1) {Texst="Vip Normal";}
                        else if(niveldoviprenov == 2) {Texst="Super Vip";}

                        format(gstring, sizeof(gstring), "Sua conta VIP expirou, Renove para continuar tendo os Benefícios!");
                        SendClientMessage(idp, 0xFF7777FF, gstring);
                        format(gstring, sizeof(gstring), "Sua conta %s expirou, e você Perdeu TODOS os beneficios e bens de um Jogador VIP!",Texst);
                        SendClientMessage(idp, -1,gstring);

                        SendClientMessage(idp, 0xFF8080FF,"<!> Bens VIP Perdidos:");

                        if(BensPerdidos[0] == true) {format(gstring, sizeof(gstring), "Casa: {FF9797}Removida");}
                        if(BensPerdidos[0] == false) {format(gstring, sizeof(gstring), "Casa: {94FE99}Não Removida");}
                        SendClientMessage(idp, -1,gstring);

                        if(BensPerdidos[1] == true) {format(gstring, sizeof(gstring), "Empresa: {FF9797}Removido");}
                        if(BensPerdidos[1] == false) {format(gstring, sizeof(gstring), "Empresa: {94FE99}Sem Propriedade");}
                        SendClientMessage(idp, -1,gstring);

                        if(BensPerdidos[2] == true) {format(gstring, sizeof(gstring), "Fazenda: {FF9797}Removido");}
                        if(BensPerdidos[2] == false) {format(gstring, sizeof(gstring), "Fazenda: {94FE99}Sem Propriedade");}
                        SendClientMessage(idp, -1,gstring);
                        SendClientMessage(idp, -1,"Privilégios e Beneficios: {FF9797}Removidos");

                        SendClientMessage(idp, -1,"** Para continuar sendo um player VIP, Obtenha Moedas verdes no /Forum.");
                        //SendClientMessage(idp, -1,"Logo em seguida compre seu Vip in-game, com o comando /menuvip. **");
                        SendClientMessage(idp, 0x6AB5FFFF,"** Agradecemos a preferência!!");
                        PlayerInfo[idp][pVip] = 0;
                        strmid(VipInfo[i][vNick], "Ninguem", 0, strlen("Ninguem"), 255);
                        VipInfo[i][vAtivo] = 0;
                        CheckOwnerh(idp);
                        CheckOwnerb(idp);

                    }
                    else
                    {
                        format(arquivo2, sizeof(arquivo2), "Agendados/VIP%s.ini",VipInfo[i][vNick]);
                        if(!dini_Exists(arquivo2))
                        {
                            dini_Create(arquivo2);
                            dini_Set(arquivo2,"Data",DataServidor);
                            dini_Set(arquivo2,"Nome",VipInfo[i][vNick]);
                            dini_IntSet(arquivo2,"Casa",VipInfo[i][vCasa]);
                            dini_IntSet(arquivo2,"Empresa",VipInfo[i][vEmpresa]);
                            dini_IntSet(arquivo2,"Fazenda",VipInfo[i][vFazenda]);
                            strmid(VipInfo[i][vNick], "Ninguem", 0, strlen("Ninguem"), 255);
                            VipInfo[i][vAtivo] = 0;
                        }
                        else
                        {
                            dini_Set(arquivo2,"Data",DataServidor);
                            dini_Set(arquivo2,"Nome",VipInfo[i][vNick]);
                            dini_IntSet(arquivo2,"Casa",VipInfo[i][vCasa]);
                            dini_IntSet(arquivo2,"Empresa",VipInfo[i][vEmpresa]);
                            dini_IntSet(arquivo2,"Fazenda",VipInfo[i][vFazenda]);
                            strmid(VipInfo[i][vNick], "Ninguem", 0, strlen("Ninguem"), 255);
                            VipInfo[i][vAtivo] = 0;
                        }
                    }
                }
            }
            SaveVip();
        }
    }
    return true;
}
forward VipCheck(playerid);
forward VipVaga();
public VipVaga()
{
    for(new idx=0; idx<sizeof(VipInfo); idx++)
    {
        if(strcmp(VipInfo[idx][vNick],"Ninguem", true ) == 0 )
        {
            VagaSobrando = 1;
            return 1;
        }
    }
    VagaSobrando = 0;
    return 0;
}
forward LoadVip();
forward SaveVip();
public SaveVip()
{
    new idx;
    new File: file2;
    while (idx < sizeof(VipInfo))
    {
        new coordsstring[256];
        format(coordsstring, sizeof(coordsstring), "%s|%d|%d|%d|%d|%s|%d|%d|%d\n",
        VipInfo[idx][vNick],VipInfo[idx][vAtivo],VipInfo[idx][vMes],VipInfo[idx][vDia],VipInfo[idx][vAno],VipInfo[idx][vVencimento],VipInfo[idx][vCasa],VipInfo[idx][vEmpresa],VipInfo[idx][vFazenda]);
        if(idx == 0)
        {
            file2 = fopen("PlayGamer/Vips.cfg", io_write);
        }
        else
        {
            file2 = fopen("PlayGamer/Vips.cfg", io_append);
        }
        fwrite(file2, coordsstring);
        idx++;
        fclose(file2);
    }
    return 1;
}
forward SavePlayerVip(playerid);
public SavePlayerVip(playerid)
{
       for(new idx = 0; idx < sizeof(VipInfo); idx++)
       {
            if(strcmp(PlayerName(playerid),VipInfo[idx][vNick],true)==0)
            {
                new home=PlayerInfo[playerid][pPHousekey],iddacasa;
                if(GetCasaVip(home) != 0)
                {
                    iddacasa = home;
                }
                else {
                    iddacasa = 9999;
                }
                VipInfo[idx][vAtivo] = 1;
                VipInfo[idx][vEmpresa] = PlayerInfo[playerid][pPbiskey];
                VipInfo[idx][vFazenda] = CheckFazDono(playerid);
                VipInfo[idx][vCasa] = iddacasa;

            }
        }
        return true;
}
public LoadVip()
{
    new arrCoords[9][100];
    new strFromFile2[128];
    new File: file = fopen("PlayGamer/Vips.cfg", io_read);
    if (file)
    {
        new idx = 0;
        while(idx < sizeof(VipInfo))
        {
            fread(file, strFromFile2);
            split(strFromFile2, arrCoords, '|');
            strmid(VipInfo[idx][vNick], arrCoords[0], 0, strlen(arrCoords[0]), 255);
            VipInfo[idx][vAtivo] = strval(arrCoords[1]);
            VipInfo[idx][vMes] = strval(arrCoords[2]);
            VipInfo[idx][vDia] = strval(arrCoords[3]);
            VipInfo[idx][vAno] = strval(arrCoords[4]);
            strmid(VipInfo[idx][vVencimento], arrCoords[5], 0, strlen(arrCoords[5]), 255);
            VipInfo[idx][vCasa] = strval(arrCoords[6]);
            VipInfo[idx][vEmpresa] = strval(arrCoords[7]);
            VipInfo[idx][vFazenda] = strval(arrCoords[8]);
            if(VipInfo[idx][vAtivo] != 1)
            {
                strmid(VipInfo[idx][vNick], "Ninguem", 0, strlen("Ninguem"), 255);
                VipInfo[idx][vAtivo] = 0;
                VipInfo[idx][vFazenda] = 9999;
                VipInfo[idx][vEmpresa] = 9999;
                VipInfo[idx][vCasa] = 9999;
                VipInfo[idx][vDia] = 0;
                VipInfo[idx][vMes] = 0;
                VipInfo[idx][vAno] = 0;
            }
            idx++;
        }
    }
    fclose(file);
    return 1;
}
forward RestartServer();
public RestartServer()
{
for(new i = 0; i < MaiorID; i++)
{
    if(IsPlayerConnected(i))
    { SalvarPlayer(i); }
    ShowPlayerDialog(i, 156, DIALOG_STYLE_MSGBOX, "          {a09f2c}GMX EM ANDAMENTO", "     {2657a9}Servidor Reiniciando automaticamente...\n\n{FFFFFF}Isso pode demorar alguns segundos\n {FFFFFF}por favor aguarde!\n\n    {2657a9}Agradecemos sua compreensão.", "AGUARDE", "");
}
SendClientMessageToAll(CORS, "GMX Automático: O Servidor está reiniciando de acordo com o Horário programado!");
SendClientMessageToAll(-1, "Brasil Play Gamer® reinicializando o gamemode, aguarde alguns segundos!");
SalvarTudo();
SaveBoxer();
SaveVip();
SaveAdm();
SaveHelp();
SaveCarros();
SalvarContas();
SalvarPassword();
GameModeExitFunc();
return true;
}
forward LiberarGMX();
public LiberarGMX()
{
GMXPROIBIDO = 1;
}
forward GuerraTerror();
public GuerraTerror()
{
    new string[512];
    for(new i=0; i<MaiorID; i++)
    {
        if(IsPlayerInTerritorio(i) && TendoGuerra == 1)
        {
            new za = GetPlayerOrg(i);
            GPontos[za] += 1;
            format(string,sizeof(string),"EXERCITO - %d",GPontos[3]);
            TextDrawSetString(GExer,string);
            format(string,sizeof(string),"G.I. - %d",GPontos[6]);
            TextDrawSetString(GGi,string);
            format(string,sizeof(string),"F.A.R.C. - %d",GPontos[15]);
            TextDrawSetString(GFarc,string);
            TextDrawShowForPlayer(i,GTitulo);
            TextDrawShowForPlayer(i,GExer);
            TextDrawShowForPlayer(i,GGi);
            TextDrawShowForPlayer(i,GFarc);
        }
        else
        {
            TextDrawHideForPlayer(i,GTitulo);
            TextDrawHideForPlayer(i,GExer);
            TextDrawHideForPlayer(i,GGi);
            TextDrawHideForPlayer(i,GFarc);
        }
    }
    return 1;
}
forward FimGuerra();
public FimGuerra()
{

    TendoGuerra = 0;
    KillTimer(Pguerra);
    GangZoneHideForAll(GZGuerra);
    GangZoneDestroy(GZGuerra);
    new vencedorpontosmorro = 0;
    TextDrawHideForAll(GTitulo);
    TextDrawHideForAll(GExer);
    TextDrawHideForAll(GGi);
    TextDrawHideForAll(GFarc);
    for(new o=0; o<MAX_ORGS; o++)
    {
        if(GPontos[o] >= vencedorpontosmorro)
        {
            vencedorpontosmorro = GPontos[o];
       }
    }
    for(new opt=0; opt<MAX_ORGS; opt++)
    {
        if(GPontos[opt] == vencedorpontosmorro)
        {
            new string[512];
            Territorio[Vencedor] = opt;
            new NomeOrgMorro[64];
            OrgNome(opt, NomeOrgMorro, 64);
            if(opt == 3 || opt == 6 ||  opt == 15)
            {
                SendClientMessageToAll(0x1DBA5BAA,".•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•..•.•.•.•.•.•.•.•.•.•.•.•..•.•.•.•.•.•..•.•.•.•.•.•..•.•.•.•.•.•..•.•.•.•.•.•.");
                format(string,sizeof(string),"[GUERRA] A %s Venceu a Guerra contra as demais organizacoes participantes",NomeOrgMorro);
                SendClientMessageToAll(GetPlayerColor(opt),string);
                SendClientMessageToAll(0xC57012AA,"[BONIFICAÇÃO] Equipamento Especial para todos membros da Organizacao ate a proxima guerra!");
                SendClientMessageToAll(0x1DBA5BAA,".•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•..•.•.•.•.•.•..•.•.•.•.•.•..•.•.•.•.•.•..•.•.•.•.•.•..•.•.•.•.•.•.");
                return 1;
            }
            else
            {
                SendClientMessageToAll(0x1DBA5BAA,".•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•..•.•.•.•.•.•.•.•.•.•.•.•..•.•.•.•.•.•..•.•.•.•.•.•..•.•.•.•.•.•..•.•.•.•.•.•.");
                SendClientMessageToAll(0xC57012AA,"{ffffff}[GUERRA] {fcb118}NENHUMA ORGANIZAÇÃO VENCEU A GUERRA");
                SendClientMessageToAll(0x1DBA5BAA,".•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•..•.•.•.•.•.•.•.•.•.•.•.•..•.•.•.•.•.•..•.•.•.•.•.•..•.•.•.•.•.•..•.•.•.•.•.•.");
                return 1;
            }
        }
    }
    return 1;
}
stock PiscarGuerra()
{
    GangZoneShowForAll(GZGuerra,0x1D8D2EAA);
    GangZoneFlashForAll(GZGuerra,0xF2500BAA);
    return 1;
}
/*public OnSamSiteUpdate(samid, playerid)
{
   if(samid == 1)
   {
       if(!Missel || GetPlayerOrg(playerid) == 29)
       {
           SAM_cancel(1);
       }
   }
   if(samid == 2)
   {
       if(!Missel || GetPlayerOrg(playerid) == 29)
       {
           SAM_cancel(2);
       }
   }
   if(samid == 3)
   {
       if(!Missel || GetPlayerOrg(playerid) == 29)
       {
           SAM_cancel(3);
       }
   }
   if(samid == 4)
   {
       if(!Missel || GetPlayerOrg(playerid) == 29)
       {
           SAM_cancel(4);
       }
   }
   if(samid == 5)
   {
       if(!Missel || GetPlayerOrg(playerid) == 29)
       {
           SAM_cancel(5);
       }
   }
   if(samid == 6)
   {
       if(!Missel || GetPlayerOrg(playerid) == 29)
       {
           SAM_cancel(6);
       }
   }
   return 1;
}*/
forward Kickar(playerid);
public Kickar(playerid){
#undef Kick
Kick(playerid);
#define Kick(%0) SetTimerEx("Kickar", 200, false, "i", %0)
return true;
}
forward Banir(playerid);
public Banir(playerid){
#undef Ban
Ban(playerid);
#define Ban(%0) SetTimerEx("Banir", 200, false, "i", %0)
return true;
}
forward LocalEquipar(playerid);
public LocalEquipar(playerid)
{
if(GetPlayerOrg(playerid) == 1 && PlayerToPoint(5.0,playerid,1530.192504,-1664.163818,6.218750)) return true;// Polícia Militar
if(GetPlayerOrg(playerid) == 2 && PlayerToPoint(5.0,playerid,229.734130,164.912231,1003.023437)) return true;// ROTA
if(GetPlayerOrg(playerid) == 3 && PlayerToPoint(5.0,playerid,-1345.844116,492.493896,11.202690)) return true;// Exército
if(GetPlayerOrg(playerid) == 5 && PlayerToPoint(5.0,playerid,1679.952758,-2119.342285,13.546875)) return true;// Los Aztecas
if(GetPlayerOrg(playerid) == 6 && PlayerToPoint(5.0,playerid,-2237.558837,2353.743408,4.980449)) return true;// Guerrilheiros I
if(GetPlayerOrg(playerid) == 7 && PlayerToPoint(5.0,playerid,355.204986,169.194015,1025.789062)) return true;// Prefeitura
if(GetPlayerOrg(playerid) == 8 && PlayerToPoint(5.0,playerid,1073.134887,-345.133392,73.992187)) return true;// Hitmans
if(GetPlayerOrg(playerid) == 9 && PlayerToPoint(5.0, playerid,747.3004,-1358.9138,13.5000)) return true; // Reporteres
if(GetPlayerOrg(playerid) == 11 && PlayerToPoint(5.0,playerid,229.711013,165.000732,1003.023437)) return true;// B.O.P.E--
if(GetPlayerOrg(playerid) == 12 && PlayerToPoint(5.0,playerid,1616.032958,1687.587524,11.218446)) return true;// Mafia Russa
if(GetPlayerOrg(playerid) == 13 && PlayerToPoint(5.0,playerid,2626.962158,1815.546020,11.023437)) return true;// Yakuza
if(GetPlayerOrg(playerid) == 14 && PlayerToPoint(5.0,playerid,2510.500976,-1672.311523,13.425003)) return true;// Groove Street
if(GetPlayerOrg(playerid) == 15 && PlayerToPoint(5.0,playerid,414.725463,2531.359130,19.167875)) return true;// FARC
if(GetPlayerOrg(playerid) == 16 && PlayerToPoint(5.0,playerid,229.795776,165.021392,1003.023437)) return true;// Polícia Rodovi--
if(GetPlayerOrg(playerid) == 17 && PlayerToPoint(5.0,playerid,1137.900634,-1196.093872,32.027549)) return true;// Ballas
if(GetPlayerOrg(playerid) == 18 && PlayerToPoint(5.0,playerid,2815.815917,-1178.537475,25.269187)) return true;// Los Vagos
if(GetPlayerOrg(playerid) == 19 && PlayerToPoint(5.0,playerid,2155.252441,-1810.334838,13.549571)) return true;// Comando Verme
if(GetPlayerOrg(playerid) == 20 && PlayerToPoint(5.0,playerid,1304.855957,-860.100219,39.578125)) return true;// PCC
if(GetPlayerOrg(playerid) == 21 && PlayerToPoint(5.0,playerid,506.578247,-80.521987,998.960937)) return true;// Hells Angels
if(GetPlayerOrg(playerid) == 22 && PlayerToPoint(5.0,playerid,23.415683,-2654.846923,40.507911)) return true;// Mongols
if(GetPlayerOrg(playerid) == 23 && PlayerToPoint(5.0,playerid,-220.617767,1405.519165,27.765625)) return true;// Sons Of Anarch
if(GetPlayerOrg(playerid) == 24 && PlayerToPoint(5.0,playerid,2743.299560,-2454.479492,13.862256)) return true;// The Triads
if(GetPlayerOrg(playerid) == 25 && PlayerToPoint(5.0,playerid,846.190917,-2037.009521,12.867187)) return true;// Drifters
if(GetPlayerOrg(playerid) == 26 && PlayerToPoint(5.0,playerid,2079.4207,-1574.9639,14.9043)) return true;// HunTerS
if(GetPlayerOrg(playerid) == 27 && PlayerToPoint(5.0,playerid,-74.329750,-1738.409912,10.854687)) return true;// FaTal DangeR
if(GetPlayerOrg(playerid) == 28 && PlayerToPoint(5.0,playerid,1391.582885,-1622.954101,13.546875)) return true;// BPM
if(GetPlayerOrg(playerid) == 29 && PlayerToPoint(5.0,playerid,761.278076,1440.112792,1102.703125)) return true;// Snake
if(GetPlayerOrg(playerid) == 30 && PlayerToPoint(5.0,playerid,945.796508,2.059014,1000.929687)) return true;// DesTroyeR
if(GetPlayerOrg(playerid) == 31 && PlayerToPoint(5.0,playerid,273.773071,-2164.707031,2.797812)) return true;// Justiceiros
if(GetPlayerOrg(playerid) == 32 && PlayerToPoint(5.0,playerid,234.261611,111.291336,1003.225708)) return true;// Secretaria de
if(GetPlayerOrg(playerid) == 33 && PlayerToPoint(5.0,playerid,230.158355,165.043655,1003.023437)) return true;// Polícia Federa--
if(GetPlayerOrg(playerid) == 34 && PlayerToPoint(5.0,playerid,715.158142,-1450.325195,17.695312)) return true;// Dark Gods
if(GetPlayerOrg(playerid) == 35 && PlayerToPoint(5.0,playerid,788.847412,-2209.872802,14.907812)) return true;// KiLLeRs
if(GetPlayerOrg(playerid) == 36 && PlayerToPoint(5.0,playerid,2474.557861,-1518.653442,23.996755)) return true;// Storm
if(IsAEnforcerCar(GetPlayerVehicleID(playerid)) && IsACop(playerid)) return true; // caveirão

return false;
}

PegarAtividade( playerid ){
    if( !DOF2_FileExists( GetFileAtividade( playerid ) ) ){
        DOF2_CreateFile( GetFileAtividade( playerid ) );
        for( new i; i < 3; i++ ){
            atividadeDate[ playerid ][ i ] = "0";
            atividadeTime[ playerid ][ i ] = 0;
        }
    }
    new
        date[ 3 ],
        DataAtual[ 20 ]
    ;
    getdate( date[ 2 ], date[ 1 ], date[ 0 ] );
    format( DataAtual, sizeof DataAtual, "%02d-%02d-%d", date[ 0 ], date[ 1 ], date[ 2 ] );
    for( new i; i < 3; i++ ){
        if( !strcmp( atividadeDate[ playerid ][ i ], "0" ) ){
            format( atividadeDate[ playerid ][ i ], 30, "%02d-%02d-%d", date[ 0 ], date[ 1 ], date[ 2 ] );
            atividadeTime[ playerid ][ i ] += gettime() - atividadeOnline[ playerid ];
            SalvarAtividade( playerid );
            return true;
        }
        else{
            if( !strcmp( atividadeDate[ playerid ][ i ], DataAtual ) ){
                atividadeTime[ playerid ][ i ] += gettime() - atividadeOnline[ playerid ];
                SalvarAtividade( playerid );
                return true;
            }
        }
    }
    format( atividadeDate[ playerid ][ 0 ], 30, atividadeDate[ playerid ][ 1 ] );
    atividadeTime[ playerid ][ 0 ] = atividadeTime[ playerid ][ 1 ];
    format( atividadeDate[ playerid ][ 1 ], 30, atividadeDate[ playerid ][ 2 ] );
    atividadeTime[ playerid ][ 1 ] = atividadeTime[ playerid ][ 2 ];
    format( atividadeDate[ playerid ][ 2 ], 30, "%02d-%02d-%d", date[ 0 ], date[ 1 ], date[ 2 ] );
    atividadeTime[ playerid ][ 2 ] += gettime() - atividadeOnline[ playerid ];
    SalvarAtividade( playerid );
    return true;
}
SalvarAtividade( playerid ){
    new rows[ 20 ];
    for( new i; i < 3; i++ ){
        format( rows, sizeof rows, "Data%d", i );
        DOF2_SetString( GetFileAtividade( playerid ), rows, atividadeDate[ playerid ][ i ] );
        format( rows, sizeof rows, "Tempo%d", i );
        DOF2_SetInt( GetFileAtividade( playerid ), rows, atividadeTime[ playerid ][ i ] );
    }
    DOF2_SaveFile();
}
CarregarAtividade( playerid ){
    new rows[ 20 ];
    if( !DOF2_FileExists( GetFileAtividade( playerid ) ) ){
        DOF2_CreateFile( GetFileAtividade( playerid ) );
        for( new i; i < 3; i++ ){
            atividadeDate[ playerid ][ i ] = "0";
            atividadeTime[ playerid ][ i ] = 0;
        }
    }
    for( new i; i < 3; i++ ){
        format( rows, sizeof rows, "Data%d", i );
        format( atividadeDate[ playerid ][ i ], 30, DOF2_GetString( GetFileAtividade( playerid ), rows ) );
        format( rows, sizeof rows, "Tempo%d", i );
        atividadeTime[ playerid ][ i ]  = DOF2_GetInt( GetFileAtividade( playerid ), rows );
    }
}
GetFileAtividade( playerid ){
    new
        file[ 60 ]
    ;
    format( file, sizeof file, "PlayGamer/Atividade/%s.ini", PlayerName( playerid ) );
    return file;
}
forward OnIncomingConnection(playerid, ip_address[], port);
public OnIncomingConnection(playerid, ip_address[], port)
{
    new str[ 200 ];
    if(fexist("Logs/Conexao.log")){
        new data[20],hora[20],h,m,s,dia,mes,ano;
        gettime(h,m,s);
        getdate(ano,mes,dia);
        format(data,sizeof data,"%02d/%02d/%04d",dia,mes,ano);
        format(hora,sizeof hora,"%02d:%02d:%02d",h,m,s);
        format(str,sizeof str,"** [%s][%s] %s conexão suspeita %s:%d **\r\n",data,hora,PlayerName(playerid),ip_address, port);
        new File:file = fopen("Logs/Conexao.log",io_append);
        fwrite(file, str);
        fclose(file);
    }
    return true;
}
public HackChecker(playerid)
{
    new Float:x, Float:y, Float:z, str[258], pName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pName, sizeof(pName));
    GetPlayerCameraFrontVector(playerid, x, y, z);
    #pragma unused x
    #pragma unused y
    if(z < -0.8)
    {
        format(str, sizeof(str), "ANT SOBEIT: %s[%d] tem algum mod sobeit instalado e foi desconectado.", pName, playerid);
        for(new i = 0; i < MAX_PLAYERS; i++)
        {
            if( IsPlayerConnected( i ) ){
                SendClientMessage(i, 0xFF0000AA, str);
                if(PlayerInfo[i][pAdmin] > 1)
                {

                    PlayAudioStreamForPlayer(i, "https://www.youtube.com/watch?v=Oat-mZMDG6U");
                }
            }
        }
        TogglePlayerControllable(playerid, 0);
        Sobeitao(playerid);
    }else{
        TogglePlayerControllable(playerid, 1);
    }

}
forward Sobeitao(playerid);
public Sobeitao(playerid)
{
    TextDrawShowForPlayer(playerid,TDxiter1);
    TextDrawShowForPlayer(playerid,TDxiter2);
    TextDrawShowForPlayer(playerid, TDxiter3);
    new string[512];
    PlayAudioStreamForPlayer(playerid, "https://www.youtube.com/watch?v=Oat-mZMDG6U");
    format(string,sizeof(string),"Erro durante o login! :/");
    format(string,sizeof(string),"%s~n~~n~%s ,nosso sistema de protecao detectou uma instalacao",string,PlayerName( playerid ) );
    format(string,sizeof(string),"%s~n~ do Mod Sobeit em seu Sistema Operacional.",string);
    format(string,sizeof(string),"%s~n~Para evitar futuros constrangimentos, restringimos o acesso",string);
    format(string,sizeof(string),"%s~n~ao Brasil Play Gamer a todos que tentarem logar com essas instalacoes.",string);
    format(string,sizeof(string),"%s~n~Para logar no Brasil Play Gamer, por favor, desinstale o Sobeit.",string);
    format(string,sizeof(string),"%s~n~~n~~n~~n~ ~r~~h~~h~Ate logo...",string);
    PlayerTextDrawSetString(playerid, TDxiter4[playerid], string);
    PlayerTextDrawShow(playerid, TDxiter4[playerid]);
    Kick(playerid);
}
forward PegarJet(playerid);
public PegarJet(playerid)
{
    Atirou[playerid] = 9999;
}
forward FechandoHit();
public FechandoHit(){
    MoveObject( gatehit, 1023.9850000,-366.7998000,74.0000000, 3);//Yiakin fez!!
}
forward FecharGateMedico( portao );//Yiakin FEZ!!
public FecharGateMedico( portao ){
    if( portao == gatemedic[ 0 ] ){
        MoveObject( gatemedic[ 0 ], 2001.3000000,-1357.3000000,24.7000000, 3.0 );
    }
    else if( portao == gatemedic[ 1 ] ){
        MoveObject( gatemedic[ 1 ], 2096.2998000,-1446.5996000,24.7000000, 3.0 );
    }
    else if( portao == gatemedic[ 2 ] ){
        MoveObject( gatemedic[ 2 ], 2002.8000000,-1450.9000000,15.3000000, 3.0, 0.0000000,0.0000000,0.0000000);
        MoveObject( gatemedic[ 3 ], 1997.0000000,-1445.1000000,15.3000000, 3.0, 0.0000000,0.0000000,90.0000000 );
    }
}
forward ContratoAutomatico();
public ContratoAutomatico(){

    new
        string[ 128 ],
        i,
        verificar
    ;

    while( verificar < 25 ){
        i = random( MaiorID );
        verificar ++;
        if( IsPlayerConnected( i ) ){
            if( PlayerInfo[ i ][ pLevel ] > 2 && GetPlayerOrg( i ) ^ 8 && GetPlayerOrg( i ) ^ 24 && PlayerInfo[ i ][ pAdmin ] < 1 ){
                new valor = random( 50000 ) + 50000;
                PlayerInfo[i][pHeadValue] += valor;
                format(string, sizeof(string), "Há um novo contrato! Alvo: %s R$ %d",PlayerName( i ), valor);
                SendFamilyMessage(8, COLOR_YELLOW, string);
                SendFamilyMessage(24, COLOR_YELLOW, string);
                break;
            }
        }
    }
}

stock IsPlayerAiming(playerid, aimid){
    new Float:X1, Float:Y1, Float:Z1, Float:X2, Float:Y2, Float:Z2;
    GetPlayerPos(playerid, X1, Y1, Z1);
    GetPlayerPos(aimid, X2, Y2, Z2);
    new Float:Distance = floatsqroot(floatpower(floatabs(X1-X2), 2) + floatpower(floatabs(Y1-Y2), 2));
    if(Distance < 100){
        new Float:A;
        GetPlayerFacingAngle(playerid, A);
        X1 += (Distance * floatsin(-A, degrees));
        Y1 += (Distance * floatcos(-A, degrees));
        Distance = floatsqroot(floatpower(floatabs(X1-X2), 2) + floatpower(floatabs(Y1-Y2), 2));
        if(Distance < 1.3){
            return true;
        }
    }
    return false;
}

//------------------------------------------------------------------------------------------------------


stock GetName(playerid){
    new Name[256];
    GetPlayerName(playerid,Name,MAX_PLAYER_NAME);
    return Name;
}

//------------------------------------------------------------------------------------------------------

forward Faus(playerid);
public Faus(playerid) {
    new string[128];
    new Float:x,Float:y,Float:z;
    for(new i = 0; i < GetMaxPlayers(); i++) {
        if(IsPlayerAiming(playerid,i) && GetPlayerWeapon(playerid) == 34 && i != playerid ){// && i ^ INVALID_PLAYER_ID ) {
            GetPlayerPos(i,x,y,z);
            format(string,128,"~r~%s ~n~~w~dist: ~r~%d m.~n~~w~Ping: ~r~%dms~n~~w~AMSL: ~r~%d m.~n~~w~Weapon:~n~~r~%s~p~(%d)",LOL(GetName(i)),floatround(GetDistanceBetweenPlayers(i,playerid)),GetPlayerPing(i),floatround(z),ReturnWeaponName(GetPlayerWeapon(i)),GetPlayerAmmo(i));
            TextDrawSetString(____[playerid],string);
        }
    }
    new
        aarma,
        mmun
    ;
    if( Taser[ playerid ] == true ){
        GetPlayerWeaponData( playerid, 2, aarma, mmun );
        if( aarma == 23 && mmun > 5 ){
            RemovePlayerWeapon( playerid, 23 );
            BulletTaser[ playerid ] = 3;
            GivePlayerWeapon( playerid, 23, BulletTaser[ playerid ] );
        }
    }
    if( tirohitman[ playerid ] ^ 9999 ){
        if( !IsPlayerConnected( tirohitman[ playerid ] ) || tirotime[ playerid ] < gettime() || GetDistanceBetweenPlayers( playerid, tirohitman[ playerid ] ) > 250 ){
            tirohitman[ playerid ] = 9999;
            tirotime[ playerid ] = 0;
            SendClientMessage( playerid, 0xCD5C5CFF, "Você conseguiu despista-lo. Agora já podes deslogar caso queira." );
        }
    }
    return 1;
}
forward DescongelarTaser( p );
public DescongelarTaser( p ){
    static conttaser[ MAX_PLAYERS ];
    conttaser[ p ] ++;
    if( conttaser[ p ] > 30 ){
        ATaser[ p ] = false;
        TogglePlayerControllable( p, true );
        ClearAnimations( p );
        conttaser[ p ] = 0;
    }
    else{
        if( IsPlayerInAnyVehicle( p ) )
            RemovePlayerFromVehicle( p );
        SetTimerEx( "DescongelarTaser", 1000, false, "d", p );
        ApplyAnimation(p,"PED","KO_skid_front",4.1,0,1,1,1,0);
    }
}
//------------------------------------------------------------------------------------------------------

LOL(string[]) {
    new result[256];
    for (new i; i < 256; i++) {
        switch(string[i]) {
            case '[':result[i] = '(';
            case ']':result[i] = ')';
            default:result[i]=string[i];
        }
    }
    return result;
}
ReturnWeaponName(weaponid){
    new weaponname[75];
    GetWeaponName(weaponid,weaponname,sizeof(weaponname));
    return weaponname;
}
